;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4843$1yk2we
     g$caar$4998$1yk2we
     (case-lambda ((g$x$4898$1yk2we) (car (car g$x$4898$1yk2we)))))
   (g$cadr$4844$1yk2we
     g$cadr$4999$1yk2we
     (case-lambda ((g$x$4899$1yk2we) (car (cdr g$x$4899$1yk2we)))))
   (g$cdar$4845$1yk2we
     g$cdar$5000$1yk2we
     (case-lambda ((g$x$4900$1yk2we) (cdr (car g$x$4900$1yk2we)))))
   (g$cddr$4846$1yk2we
     g$cddr$5001$1yk2we
     (case-lambda ((g$x$4901$1yk2we) (cdr (cdr g$x$4901$1yk2we)))))
   (g$caaar$4847$1yk2we
     g$caaar$5002$1yk2we
     (case-lambda
       ((g$x$4902$1yk2we) (g$caar$4843$1yk2we (car g$x$4902$1yk2we)))))
   (g$caadr$4848$1yk2we
     g$caadr$5003$1yk2we
     (case-lambda
       ((g$x$4903$1yk2we) (g$caar$4843$1yk2we (cdr g$x$4903$1yk2we)))))
   (g$cadar$4849$1yk2we
     g$cadar$5004$1yk2we
     (case-lambda
       ((g$x$4904$1yk2we) (g$cadr$4844$1yk2we (car g$x$4904$1yk2we)))))
   (g$caddr$4850$1yk2we
     g$caddr$5005$1yk2we
     (case-lambda
       ((g$x$4905$1yk2we) (g$cadr$4844$1yk2we (cdr g$x$4905$1yk2we)))))
   (g$cdaar$4851$1yk2we
     g$cdaar$5006$1yk2we
     (case-lambda
       ((g$x$4906$1yk2we) (g$cdar$4845$1yk2we (car g$x$4906$1yk2we)))))
   (g$cdadr$4852$1yk2we
     g$cdadr$5007$1yk2we
     (case-lambda
       ((g$x$4907$1yk2we) (g$cdar$4845$1yk2we (cdr g$x$4907$1yk2we)))))
   (g$cddar$4853$1yk2we
     g$cddar$5008$1yk2we
     (case-lambda
       ((g$x$4908$1yk2we) (g$cddr$4846$1yk2we (car g$x$4908$1yk2we)))))
   (g$cdddr$4854$1yk2we
     g$cdddr$5009$1yk2we
     (case-lambda
       ((g$x$4909$1yk2we) (g$cddr$4846$1yk2we (cdr g$x$4909$1yk2we)))))
   (g$caaaar$4855$1yk2we
     g$caaaar$5010$1yk2we
     (case-lambda
       ((g$x$4910$1yk2we) (g$caaar$4847$1yk2we (car g$x$4910$1yk2we)))))
   (g$caaadr$4856$1yk2we
     g$caaadr$5011$1yk2we
     (case-lambda
       ((g$x$4911$1yk2we) (g$caaar$4847$1yk2we (cdr g$x$4911$1yk2we)))))
   (g$caadar$4857$1yk2we
     g$caadar$5012$1yk2we
     (case-lambda
       ((g$x$4912$1yk2we) (g$caadr$4848$1yk2we (car g$x$4912$1yk2we)))))
   (g$caaddr$4858$1yk2we
     g$caaddr$5013$1yk2we
     (case-lambda
       ((g$x$4913$1yk2we) (g$caadr$4848$1yk2we (cdr g$x$4913$1yk2we)))))
   (g$cadaar$4859$1yk2we
     g$cadaar$5014$1yk2we
     (case-lambda
       ((g$x$4914$1yk2we) (g$cadar$4849$1yk2we (car g$x$4914$1yk2we)))))
   (g$cadadr$4860$1yk2we
     g$cadadr$5015$1yk2we
     (case-lambda
       ((g$x$4915$1yk2we) (g$cadar$4849$1yk2we (cdr g$x$4915$1yk2we)))))
   (g$caddar$4861$1yk2we
     g$caddar$5016$1yk2we
     (case-lambda
       ((g$x$4916$1yk2we) (g$caddr$4850$1yk2we (car g$x$4916$1yk2we)))))
   (g$cadddr$4862$1yk2we
     g$cadddr$5017$1yk2we
     (case-lambda
       ((g$x$4917$1yk2we) (g$caddr$4850$1yk2we (cdr g$x$4917$1yk2we)))))
   (g$cdaaar$4863$1yk2we
     g$cdaaar$5018$1yk2we
     (case-lambda
       ((g$x$4918$1yk2we) (g$cdaar$4851$1yk2we (car g$x$4918$1yk2we)))))
   (g$cdaadr$4864$1yk2we
     g$cdaadr$5019$1yk2we
     (case-lambda
       ((g$x$4919$1yk2we) (g$cdaar$4851$1yk2we (cdr g$x$4919$1yk2we)))))
   (g$cdadar$4865$1yk2we
     g$cdadar$5020$1yk2we
     (case-lambda
       ((g$x$4920$1yk2we) (g$cdadr$4852$1yk2we (car g$x$4920$1yk2we)))))
   (g$cdaddr$4866$1yk2we
     g$cdaddr$5021$1yk2we
     (case-lambda
       ((g$x$4921$1yk2we) (g$cdadr$4852$1yk2we (cdr g$x$4921$1yk2we)))))
   (g$cddaar$4867$1yk2we
     g$cddaar$5022$1yk2we
     (case-lambda
       ((g$x$4922$1yk2we) (g$cddar$4853$1yk2we (car g$x$4922$1yk2we)))))
   (g$cddadr$4868$1yk2we
     g$cddadr$5023$1yk2we
     (case-lambda
       ((g$x$4923$1yk2we) (g$cddar$4853$1yk2we (cdr g$x$4923$1yk2we)))))
   (g$cdddar$4869$1yk2we
     g$cdddar$5024$1yk2we
     (case-lambda
       ((g$x$4924$1yk2we) (g$cdddr$4854$1yk2we (car g$x$4924$1yk2we)))))
   (g$cddddr$4870$1yk2we
     g$cddddr$5025$1yk2we
     (case-lambda
       ((g$x$4925$1yk2we) (g$cdddr$4854$1yk2we (cdr g$x$4925$1yk2we)))))
   (g$string=?$4877$1yk2we
     g$string=?$5026$1yk2we
     (case-lambda
       ((g$a$4926$1yk2we g$b$4927$1yk2we . g$rest$4928$1yk2we)
        (begin
          (if (not (string? g$a$4926$1yk2we))
            (assertion-violation 'string=? '"not a string" g$a$4926$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4929$1yk2we)
               (begin
                 (if (not (string? g$x$4929$1yk2we))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$4929$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4930$1yk2we)
                     (begin
                       (set! g$a$4926$1yk2we g$x$4929$1yk2we)
                       g$r$4930$1yk2we)))
                  (= (string-compare g$a$4926$1yk2we g$x$4929$1yk2we) '0)))))
            (cons g$b$4927$1yk2we g$rest$4928$1yk2we))))))
   (g$string<?$4878$1yk2we
     g$string<?$5027$1yk2we
     (case-lambda
       ((g$a$4931$1yk2we g$b$4932$1yk2we . g$rest$4933$1yk2we)
        (begin
          (if (not (string? g$a$4931$1yk2we))
            (assertion-violation 'string<? '"not a string" g$a$4931$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4934$1yk2we)
               (begin
                 (if (not (string? g$x$4934$1yk2we))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$4934$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4935$1yk2we)
                     (begin
                       (set! g$a$4931$1yk2we g$x$4934$1yk2we)
                       g$r$4935$1yk2we)))
                  (< (string-compare g$a$4931$1yk2we g$x$4934$1yk2we) '0)))))
            (cons g$b$4932$1yk2we g$rest$4933$1yk2we))))))
   (g$string>?$4879$1yk2we
     g$string>?$5028$1yk2we
     (case-lambda
       ((g$a$4936$1yk2we g$b$4937$1yk2we . g$rest$4938$1yk2we)
        (begin
          (if (not (string? g$a$4936$1yk2we))
            (assertion-violation 'string>? '"not a string" g$a$4936$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4939$1yk2we)
               (begin
                 (if (not (string? g$x$4939$1yk2we))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$4939$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4940$1yk2we)
                     (begin
                       (set! g$a$4936$1yk2we g$x$4939$1yk2we)
                       g$r$4940$1yk2we)))
                  (> (string-compare g$a$4936$1yk2we g$x$4939$1yk2we) '0)))))
            (cons g$b$4937$1yk2we g$rest$4938$1yk2we))))))
   (g$string<=?$4880$1yk2we
     g$string<=?$5029$1yk2we
     (case-lambda
       ((g$a$4941$1yk2we g$b$4942$1yk2we . g$rest$4943$1yk2we)
        (begin
          (if (not (string? g$a$4941$1yk2we))
            (assertion-violation 'string<=? '"not a string" g$a$4941$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4944$1yk2we)
               (begin
                 (if (not (string? g$x$4944$1yk2we))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$4944$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4945$1yk2we)
                     (begin
                       (set! g$a$4941$1yk2we g$x$4944$1yk2we)
                       g$r$4945$1yk2we)))
                  (<= (string-compare g$a$4941$1yk2we g$x$4944$1yk2we) '0)))))
            (cons g$b$4942$1yk2we g$rest$4943$1yk2we))))))
   (g$string>=?$4881$1yk2we
     g$string>=?$5030$1yk2we
     (case-lambda
       ((g$a$4946$1yk2we g$b$4947$1yk2we . g$rest$4948$1yk2we)
        (begin
          (if (not (string? g$a$4946$1yk2we))
            (assertion-violation 'string>=? '"not a string" g$a$4946$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4949$1yk2we)
               (begin
                 (if (not (string? g$x$4949$1yk2we))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$4949$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4950$1yk2we)
                     (begin
                       (set! g$a$4946$1yk2we g$x$4949$1yk2we)
                       g$r$4950$1yk2we)))
                  (>= (string-compare g$a$4946$1yk2we g$x$4949$1yk2we) '0)))))
            (cons g$b$4947$1yk2we g$rest$4948$1yk2we))))))
   (g$symbol=?$4882$1yk2we
     g$symbol=?$5031$1yk2we
     (case-lambda
       ((g$a$4951$1yk2we g$b$4952$1yk2we . g$rest$4953$1yk2we)
        (begin
          (if (not (symbol? g$a$4951$1yk2we))
            (assertion-violation 'symbol=? '"not a symbol" g$a$4951$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4954$1yk2we)
               (begin
                 (if (not (symbol? g$x$4954$1yk2we))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$4954$1yk2we)
                   (void))
                 (eq? g$a$4951$1yk2we g$x$4954$1yk2we))))
            (cons g$b$4952$1yk2we g$rest$4953$1yk2we))))))
   (g$boolean=?$4883$1yk2we
     g$boolean=?$5032$1yk2we
     (case-lambda
       ((g$a$4955$1yk2we g$b$4956$1yk2we . g$rest$4957$1yk2we)
        (begin
          (if (not (boolean? g$a$4955$1yk2we))
            (assertion-violation 'boolean=? '"not a boolean" g$a$4955$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4958$1yk2we)
               (begin
                 (if (not (boolean? g$x$4958$1yk2we))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$4958$1yk2we)
                   (void))
                 (eq? g$a$4955$1yk2we g$x$4958$1yk2we))))
            (cons g$b$4956$1yk2we g$rest$4957$1yk2we))))))
   (g$char=?$4890$1yk2we
     g$char=?$5033$1yk2we
     (case-lambda
       ((g$a$4959$1yk2we g$b$4960$1yk2we . g$rest$4961$1yk2we)
        (begin
          (if (not (char? g$a$4959$1yk2we))
            (assertion-violation 'char=? '"not a char" g$a$4959$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4962$1yk2we)
               (begin
                 (if (not (char? g$x$4962$1yk2we))
                   (assertion-violation 'char=? '"not a char" g$x$4962$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4963$1yk2we)
                     (begin
                       (set! g$a$4959$1yk2we g$x$4962$1yk2we)
                       g$r$4963$1yk2we)))
                  (= (char->integer g$a$4959$1yk2we)
                     (char->integer g$x$4962$1yk2we))))))
            (cons g$b$4960$1yk2we g$rest$4961$1yk2we))))))
   (g$char<?$4891$1yk2we
     g$char<?$5034$1yk2we
     (case-lambda
       ((g$a$4964$1yk2we g$b$4965$1yk2we . g$rest$4966$1yk2we)
        (begin
          (if (not (char? g$a$4964$1yk2we))
            (assertion-violation 'char<? '"not a char" g$a$4964$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4967$1yk2we)
               (begin
                 (if (not (char? g$x$4967$1yk2we))
                   (assertion-violation 'char<? '"not a char" g$x$4967$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4968$1yk2we)
                     (begin
                       (set! g$a$4964$1yk2we g$x$4967$1yk2we)
                       g$r$4968$1yk2we)))
                  (< (char->integer g$a$4964$1yk2we)
                     (char->integer g$x$4967$1yk2we))))))
            (cons g$b$4965$1yk2we g$rest$4966$1yk2we))))))
   (g$char>?$4892$1yk2we
     g$char>?$5035$1yk2we
     (case-lambda
       ((g$a$4969$1yk2we g$b$4970$1yk2we . g$rest$4971$1yk2we)
        (begin
          (if (not (char? g$a$4969$1yk2we))
            (assertion-violation 'char>? '"not a char" g$a$4969$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4972$1yk2we)
               (begin
                 (if (not (char? g$x$4972$1yk2we))
                   (assertion-violation 'char>? '"not a char" g$x$4972$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4973$1yk2we)
                     (begin
                       (set! g$a$4969$1yk2we g$x$4972$1yk2we)
                       g$r$4973$1yk2we)))
                  (> (char->integer g$a$4969$1yk2we)
                     (char->integer g$x$4972$1yk2we))))))
            (cons g$b$4970$1yk2we g$rest$4971$1yk2we))))))
   (g$char<=?$4893$1yk2we
     g$char<=?$5036$1yk2we
     (case-lambda
       ((g$a$4974$1yk2we g$b$4975$1yk2we . g$rest$4976$1yk2we)
        (begin
          (if (not (char? g$a$4974$1yk2we))
            (assertion-violation 'char<=? '"not a char" g$a$4974$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4977$1yk2we)
               (begin
                 (if (not (char? g$x$4977$1yk2we))
                   (assertion-violation 'char<=? '"not a char" g$x$4977$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4978$1yk2we)
                     (begin
                       (set! g$a$4974$1yk2we g$x$4977$1yk2we)
                       g$r$4978$1yk2we)))
                  (<= (char->integer g$a$4974$1yk2we)
                      (char->integer g$x$4977$1yk2we))))))
            (cons g$b$4975$1yk2we g$rest$4976$1yk2we))))))
   (g$char>=?$4894$1yk2we
     g$char>=?$5037$1yk2we
     (case-lambda
       ((g$a$4979$1yk2we g$b$4980$1yk2we . g$rest$4981$1yk2we)
        (begin
          (if (not (char? g$a$4979$1yk2we))
            (assertion-violation 'char>=? '"not a char" g$a$4979$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$4982$1yk2we)
               (begin
                 (if (not (char? g$x$4982$1yk2we))
                   (assertion-violation 'char>=? '"not a char" g$x$4982$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$4983$1yk2we)
                     (begin
                       (set! g$a$4979$1yk2we g$x$4982$1yk2we)
                       g$r$4983$1yk2we)))
                  (>= (char->integer g$a$4979$1yk2we)
                      (char->integer g$x$4982$1yk2we))))))
            (cons g$b$4980$1yk2we g$rest$4981$1yk2we))))))
   (g$rationalize$4895$1yk2we
     g$rationalize$5038$1yk2we
     (case-lambda
       ((g$x$4984$1yk2we g$e$4985$1yk2we)
        (if (if (infinite? g$x$4984$1yk2we)
              (begin '#f (infinite? g$e$4985$1yk2we))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$4986$1yk2we)
              (if (if (exact? g$x$4984$1yk2we)
                    (begin '#f (exact? g$e$4985$1yk2we))
                    '#f)
                g$r$4986$1yk2we
                (inexact g$r$4986$1yk2we))))
           (apply
             /
             (g$find-ratio$4896$1yk2we g$x$4984$1yk2we g$e$4985$1yk2we)))))))
   (g$find-ratio$4896$1yk2we
     g$find-ratio$5039$1yk2we
     (case-lambda
       ((g$x$4987$1yk2we g$e$4988$1yk2we)
        (g$find-ratio-between$4897$1yk2we
          (- g$x$4987$1yk2we g$e$4988$1yk2we)
          (+ g$x$4987$1yk2we g$e$4988$1yk2we)))))
   (g$find-ratio-between$4897$1yk2we
     g$find-ratio-between$5040$1yk2we
     (case-lambda
       ((g$x$4989$1yk2we g$y$4990$1yk2we)
        (letrec* ((g$sr$4991$1yk2we
                    (case-lambda
                      ((g$x$4993$1yk2we g$y$4994$1yk2we)
                       ((case-lambda
                          ((g$fx$4995$1yk2we g$fy$4996$1yk2we)
                           (if (>= g$fx$4995$1yk2we g$x$4993$1yk2we)
                             (list g$fx$4995$1yk2we '1)
                             (if (= g$fx$4995$1yk2we g$fy$4996$1yk2we)
                               ((case-lambda
                                  ((g$rat$4997$1yk2we)
                                   (list
                                     (+ (g$cadr$4844$1yk2we g$rat$4997$1yk2we)
                                        (* g$fx$4995$1yk2we
                                           (car g$rat$4997$1yk2we)))
                                     (car g$rat$4997$1yk2we))))
                                (g$sr$4991$1yk2we
                                  (/ (- g$y$4994$1yk2we g$fy$4996$1yk2we))
                                  (/ (- g$x$4993$1yk2we g$fx$4995$1yk2we))))
                               (list (+ '1 g$fx$4995$1yk2we) '1)))))
                        (exact (floor g$x$4993$1yk2we))
                        (exact (floor g$y$4994$1yk2we)))))))
          (if (< g$y$4990$1yk2we g$x$4989$1yk2we)
            (g$find-ratio-between$4897$1yk2we g$y$4990$1yk2we g$x$4989$1yk2we)
            (if (>= g$x$4989$1yk2we g$y$4990$1yk2we)
              (list g$x$4989$1yk2we '1)
              (if (positive? g$x$4989$1yk2we)
                (g$sr$4991$1yk2we g$x$4989$1yk2we g$y$4990$1yk2we)
                (if (negative? g$y$4990$1yk2we)
                  ((case-lambda
                     ((g$rat$4992$1yk2we)
                      (list
                        (- (car g$rat$4992$1yk2we))
                        (g$cadr$4844$1yk2we g$rat$4992$1yk2we))))
                   (g$sr$4991$1yk2we (- g$y$4990$1yk2we) (- g$x$4989$1yk2we)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5236$1yk2we g$using$5271$1yk2we (clr-using-internal 'system))
   (g$using$5238$1yk2we
     g$using$5272$1yk2we
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5239$1yk2we
     g$make-eq-hashtable$5273$1yk2we
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5250$1yk2we)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5250$1yk2we)))))
   (g$make-eqv-hashtable$5240$1yk2we
     g$make-eqv-hashtable$5274$1yk2we
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5251$1yk2we) (make-hashtable eqv-hash eqv? g$k$5251$1yk2we))))
   (g$hashtable-size$5241$1yk2we
     g$hashtable-size$5275$1yk2we
     (case-lambda
       ((g$ht$5252$1yk2we)
        (clr-call-internal 'hashtable 'get_count g$ht$5252$1yk2we))))
   (g$hashtable-ref$5242$1yk2we
     g$hashtable-ref$5276$1yk2we
     (case-lambda
       ((g$ht$5253$1yk2we g$key$5254$1yk2we g$default$5255$1yk2we)
        (letrec* ((g$r$5256$1yk2we
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5253$1yk2we
                      g$key$5254$1yk2we)))
          (if (not (null? g$r$5256$1yk2we))
            g$r$5256$1yk2we
            g$default$5255$1yk2we)))))
   (g$hashtable-set!$5243$1yk2we
     g$hashtable-set!$5277$1yk2we
     (case-lambda
       ((g$ht$5257$1yk2we g$key$5258$1yk2we g$obj$5259$1yk2we)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5257$1yk2we
          g$key$5258$1yk2we
          g$obj$5259$1yk2we))))
   (g$hashtable-delete!$5244$1yk2we
     g$hashtable-delete!$5278$1yk2we
     (case-lambda
       ((g$ht$5260$1yk2we g$key$5261$1yk2we)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5260$1yk2we
          g$key$5261$1yk2we))))
   (g$hashtable-contains?$5245$1yk2we
     g$hashtable-contains?$5279$1yk2we
     (case-lambda
       ((g$ht$5262$1yk2we g$key$5263$1yk2we)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5262$1yk2we
          g$key$5263$1yk2we))))
   (g$hashtable-update!$5246$1yk2we
     g$hashtable-update!$5280$1yk2we
     (case-lambda
       ((g$ht$5264$1yk2we
          g$key$5265$1yk2we
          g$proc$5266$1yk2we
          g$default$5267$1yk2we)
        (g$hashtable-set!$5243$1yk2we
          g$ht$5264$1yk2we
          g$key$5265$1yk2we
          (g$proc$5266$1yk2we
            (g$hashtable-ref$5242$1yk2we
              g$ht$5264$1yk2we
              g$key$5265$1yk2we
              g$default$5267$1yk2we))))))
   (g$hashtable-clear!$5247$1yk2we
     g$hashtable-clear!$5281$1yk2we
     (case-lambda
       ((g$ht$5268$1yk2we)
        (clr-call-internal 'hashtable 'clear g$ht$5268$1yk2we))
       ((g$ht$5269$1yk2we g$k$5270$1yk2we)
        (clr-call-internal 'hashtable 'clear g$ht$5269$1yk2we))))
   (g$clear-usings$5249$1yk2we
     g$clear-usings$5282$1yk2we
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5284$1yk2we
     g$using$5350$1yk2we
     (clr-using-internal 'system.io))
   (g$file-exists?$5285$1yk2we
     g$file-exists?$5351$1yk2we
     (case-lambda
       ((g$fn$5313$1yk2we)
        (clr-call-internal 'file 'exists '() g$fn$5313$1yk2we))))
   (g$delete-file$5286$1yk2we
     g$delete-file$5352$1yk2we
     (case-lambda
       ((g$fn$5314$1yk2we)
        (clr-call-internal 'file 'delete '() g$fn$5314$1yk2we))))
   (g$file-copy$5287$1yk2we
     g$file-copy$5353$1yk2we
     (case-lambda
       ((g$from$5315$1yk2we g$to$5316$1yk2we)
        (g$file-copy$5287$1yk2we g$from$5315$1yk2we g$to$5316$1yk2we '#f))
       ((g$from$5317$1yk2we g$to$5318$1yk2we g$overwrite?$5319$1yk2we)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5317$1yk2we
          g$to$5318$1yk2we
          g$overwrite?$5319$1yk2we))))
   (g$file-move$5288$1yk2we
     g$file-move$5354$1yk2we
     (case-lambda
       ((g$from$5320$1yk2we g$to$5321$1yk2we)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5320$1yk2we
          g$to$5321$1yk2we))))
   (g$file-create-time$5289$1yk2we
     g$file-create-time$5355$1yk2we
     (case-lambda
       ((g$fn$5322$1yk2we)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5322$1yk2we))))
   (g$file-access-time$5290$1yk2we
     g$file-access-time$5356$1yk2we
     (case-lambda
       ((g$fn$5323$1yk2we)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5323$1yk2we))))
   (g$file-modified-time$5291$1yk2we
     g$file-modified-time$5357$1yk2we
     (case-lambda
       ((g$fn$5324$1yk2we)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5324$1yk2we))))
   (g$directory-exists?$5292$1yk2we
     g$directory-exists?$5358$1yk2we
     (case-lambda
       ((g$fn$5325$1yk2we)
        (clr-call-internal 'directory 'exists '() g$fn$5325$1yk2we))))
   (g$delete-directory$5293$1yk2we
     g$delete-directory$5359$1yk2we
     (case-lambda
       ((g$dir$5326$1yk2we)
        (g$delete-directory$5293$1yk2we g$dir$5326$1yk2we '#f))
       ((g$dir$5327$1yk2we g$recursive?$5328$1yk2we)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5327$1yk2we
          g$recursive?$5328$1yk2we))))
   (g$directory-move$5294$1yk2we
     g$directory-move$5360$1yk2we
     (case-lambda
       ((g$from$5329$1yk2we g$to$5330$1yk2we)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5329$1yk2we
          g$to$5330$1yk2we))))
   (g$create-directory$5295$1yk2we
     g$create-directory$5361$1yk2we
     (case-lambda
       ((g$name$5331$1yk2we)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5331$1yk2we))))
   (g$get-files$5296$1yk2we
     g$get-files$5362$1yk2we
     (case-lambda
       ((g$dir$5332$1yk2we) (g$get-files$5296$1yk2we g$dir$5332$1yk2we '"*"))
       ((g$dir$5333$1yk2we g$pattern$5334$1yk2we)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5333$1yk2we
          g$pattern$5334$1yk2we))))
   (g$get-directories$5297$1yk2we
     g$get-directories$5363$1yk2we
     (case-lambda
       ((g$dir$5335$1yk2we)
        (g$get-directories$5297$1yk2we g$dir$5335$1yk2we '"*"))
       ((g$dir$5336$1yk2we g$pattern$5337$1yk2we)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5336$1yk2we
          g$pattern$5337$1yk2we))))
   (g$change-extension$5298$1yk2we
     g$change-extension$5364$1yk2we
     (case-lambda
       ((g$path$5338$1yk2we g$extension$5339$1yk2we)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5338$1yk2we
          g$extension$5339$1yk2we))))
   (g$path-combine$5299$1yk2we
     g$path-combine$5365$1yk2we
     (case-lambda
       ((g$path1$5340$1yk2we g$path2$5341$1yk2we)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5340$1yk2we
          g$path2$5341$1yk2we))))
   (g$get-directory-name$5300$1yk2we
     g$get-directory-name$5366$1yk2we
     (case-lambda
       ((g$path$5342$1yk2we)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5342$1yk2we))))
   (g$get-extension$5301$1yk2we
     g$get-extension$5367$1yk2we
     (case-lambda
       ((g$path$5343$1yk2we)
        (clr-call-internal 'path 'getextension '() g$path$5343$1yk2we))))
   (g$get-filename$5302$1yk2we
     g$get-filename$5368$1yk2we
     (case-lambda
       ((g$path$5344$1yk2we)
        (clr-call-internal 'path 'getfilename '() g$path$5344$1yk2we))))
   (g$get-filename-without-extension$5303$1yk2we
     g$get-filename-without-extension$5369$1yk2we
     (case-lambda
       ((g$path$5345$1yk2we)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5345$1yk2we))))
   (g$get-full-path$5304$1yk2we
     g$get-full-path$5370$1yk2we
     (case-lambda
       ((g$path$5346$1yk2we)
        (clr-call-internal 'path 'getfullpath '() g$path$5346$1yk2we))))
   (g$get-path-root$5305$1yk2we
     g$get-path-root$5371$1yk2we
     (case-lambda
       ((g$path$5347$1yk2we)
        (clr-call-internal 'path 'getpathroot '() g$path$5347$1yk2we))))
   (g$get-random-filename$5306$1yk2we
     g$get-random-filename$5372$1yk2we
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5307$1yk2we
     g$get-temp-filename$5373$1yk2we
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5308$1yk2we
     g$get-temp-path$5374$1yk2we
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5309$1yk2we
     g$path-rooted?$5375$1yk2we
     (case-lambda
       ((g$path$5348$1yk2we)
        (clr-call-internal 'path 'ispathrooted '() g$path$5348$1yk2we))))
   (g$path-has-extension?$5310$1yk2we
     g$path-has-extension?$5376$1yk2we
     (case-lambda
       ((g$path$5349$1yk2we)
        (clr-call-internal 'path 'hasextension '() g$path$5349$1yk2we))))
   (g$clear-usings$5312$1yk2we
     g$clear-usings$5377$1yk2we
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5378$1yk2we
     g$find$5469$1yk2we
     (case-lambda
       ((g$proc$5397$1yk2we g$l$5398$1yk2we)
        (if (null? g$l$5398$1yk2we)
          '#f
          ((case-lambda
             ((g$e$5399$1yk2we)
              (if (g$proc$5397$1yk2we g$e$5399$1yk2we)
                g$e$5399$1yk2we
                (g$find$5378$1yk2we g$proc$5397$1yk2we (cdr g$l$5398$1yk2we)))))
           (car g$l$5398$1yk2we))))))
   (g$partition$5379$1yk2we
     g$partition$5470$1yk2we
     (case-lambda
       ((g$proc$5400$1yk2we g$l$5401$1yk2we)
        ((letrec ((g$f$5402$1yk2we
                    (case-lambda
                      ((g$l$5403$1yk2we g$a$5404$1yk2we g$b$5405$1yk2we)
                       (if (null? g$l$5403$1yk2we)
                         (values
                           (reverse! g$a$5404$1yk2we)
                           (reverse! g$b$5405$1yk2we))
                         ((case-lambda
                            ((g$e$5406$1yk2we)
                             (if (g$proc$5400$1yk2we g$e$5406$1yk2we)
                               (g$f$5402$1yk2we
                                 (cdr g$l$5403$1yk2we)
                                 (cons g$e$5406$1yk2we g$a$5404$1yk2we)
                                 g$b$5405$1yk2we)
                               (g$f$5402$1yk2we
                                 (cdr g$l$5403$1yk2we)
                                 g$a$5404$1yk2we
                                 (cons g$e$5406$1yk2we g$b$5405$1yk2we)))))
                          (car g$l$5403$1yk2we)))))))
           g$f$5402$1yk2we)
         g$l$5401$1yk2we
         '()
         '()))))
   (g$remp$5380$1yk2we
     g$remp$5471$1yk2we
     (case-lambda
       ((g$proc$5407$1yk2we g$l$5408$1yk2we)
        ((letrec ((g$f$5409$1yk2we
                    (case-lambda
                      ((g$l$5410$1yk2we g$a$5411$1yk2we)
                       (if (null? g$l$5410$1yk2we)
                         (reverse! g$a$5411$1yk2we)
                         ((case-lambda
                            ((g$e$5412$1yk2we)
                             (if (g$proc$5407$1yk2we g$e$5412$1yk2we)
                               (g$f$5409$1yk2we
                                 (cdr g$l$5410$1yk2we)
                                 g$a$5411$1yk2we)
                               (g$f$5409$1yk2we
                                 (cdr g$l$5410$1yk2we)
                                 (cons g$e$5412$1yk2we g$a$5411$1yk2we)))))
                          (car g$l$5410$1yk2we)))))))
           g$f$5409$1yk2we)
         g$l$5408$1yk2we
         '()))))
   (g$filter$5381$1yk2we
     g$filter$5472$1yk2we
     (case-lambda
       ((g$proc$5413$1yk2we g$l$5414$1yk2we)
        ((letrec ((g$f$5415$1yk2we
                    (case-lambda
                      ((g$l$5416$1yk2we g$a$5417$1yk2we)
                       (if (null? g$l$5416$1yk2we)
                         (reverse! g$a$5417$1yk2we)
                         ((case-lambda
                            ((g$e$5418$1yk2we)
                             (if (g$proc$5413$1yk2we g$e$5418$1yk2we)
                               (g$f$5415$1yk2we
                                 (cdr g$l$5416$1yk2we)
                                 (cons g$e$5418$1yk2we g$a$5417$1yk2we))
                               (g$f$5415$1yk2we
                                 (cdr g$l$5416$1yk2we)
                                 g$a$5417$1yk2we))))
                          (car g$l$5416$1yk2we)))))))
           g$f$5415$1yk2we)
         g$l$5414$1yk2we
         '()))))
   (g$assv$5382$1yk2we
     g$assv$5473$1yk2we
     (case-lambda
       ((g$obj$5419$1yk2we g$lst$5420$1yk2we)
        (if (null? g$lst$5420$1yk2we)
          '#f
          ((case-lambda
             ((g$c$5421$1yk2we)
              (if (eqv? g$obj$5419$1yk2we (car g$c$5421$1yk2we))
                g$c$5421$1yk2we
                (g$assv$5382$1yk2we
                  g$obj$5419$1yk2we
                  (cdr g$lst$5420$1yk2we)))))
           (car g$lst$5420$1yk2we))))))
   (g$assoc$5383$1yk2we
     g$assoc$5474$1yk2we
     (case-lambda
       ((g$obj$5422$1yk2we g$lst$5423$1yk2we)
        (if (null? g$lst$5423$1yk2we)
          '#f
          ((case-lambda
             ((g$c$5424$1yk2we)
              (if (equal? g$obj$5422$1yk2we (car g$c$5424$1yk2we))
                g$c$5424$1yk2we
                (g$assoc$5383$1yk2we
                  g$obj$5422$1yk2we
                  (cdr g$lst$5423$1yk2we)))))
           (car g$lst$5423$1yk2we))))))
   (g$assp$5384$1yk2we
     g$assp$5475$1yk2we
     (case-lambda
       ((g$p?$5425$1yk2we g$lst$5426$1yk2we)
        (if (null? g$lst$5426$1yk2we)
          '#f
          ((case-lambda
             ((g$c$5427$1yk2we)
              (if (g$p?$5425$1yk2we (car g$c$5427$1yk2we))
                g$c$5427$1yk2we
                (g$assp$5384$1yk2we g$p?$5425$1yk2we (cdr g$lst$5426$1yk2we)))))
           (car g$lst$5426$1yk2we))))))
   (g$member$5385$1yk2we
     g$member$5476$1yk2we
     (case-lambda
       ((g$obj$5428$1yk2we g$lst$5429$1yk2we)
        (if (null? g$lst$5429$1yk2we)
          '#f
          (if (equal? g$obj$5428$1yk2we (car g$lst$5429$1yk2we))
            g$lst$5429$1yk2we
            (g$member$5385$1yk2we
              g$obj$5428$1yk2we
              (cdr g$lst$5429$1yk2we)))))))
   (g$memp$5386$1yk2we
     g$memp$5477$1yk2we
     (case-lambda
       ((g$p?$5430$1yk2we g$lst$5431$1yk2we)
        (if (null? g$lst$5431$1yk2we)
          '#f
          (if (g$p?$5430$1yk2we (car g$lst$5431$1yk2we))
            g$lst$5431$1yk2we
            (g$memp$5386$1yk2we g$p?$5430$1yk2we (cdr g$lst$5431$1yk2we)))))))
   (g$all-empty?$5387$1yk2we
     g$all-empty?$5478$1yk2we
     (case-lambda
       ((g$ls$5432$1yk2we)
        ((case-lambda
           ((g$t$5433$1yk2we)
            (if g$t$5433$1yk2we
              g$t$5433$1yk2we
              (begin
                '#f
                (if (null? (car g$ls$5432$1yk2we))
                  (begin '#f (g$all-empty?$5387$1yk2we (cdr g$ls$5432$1yk2we)))
                  '#f)))))
         (null? g$ls$5432$1yk2we)))))
   (g$split$5388$1yk2we
     g$split$5479$1yk2we
     (case-lambda
       ((g$ls$5434$1yk2we)
        (if (null? g$ls$5434$1yk2we)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5388$1yk2we (cdr g$ls$5434$1yk2we))))
            (case-lambda
              ((g$cars$5435$1yk2we g$cdrs$5436$1yk2we)
               ((case-lambda
                  ((g$a$5437$1yk2we)
                   (values
                     (cons (car g$a$5437$1yk2we) g$cars$5435$1yk2we)
                     (cons (cdr g$a$5437$1yk2we) g$cdrs$5436$1yk2we))))
                (car g$ls$5434$1yk2we)))))))))
   (g$for-all$5389$1yk2we
     g$for-all$5480$1yk2we
     (case-lambda
       ((g$f$5438$1yk2we . g$args$5439$1yk2we)
        (if (g$all-empty?$5387$1yk2we g$args$5439$1yk2we)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5388$1yk2we g$args$5439$1yk2we)))
            (case-lambda
              ((g$cars$5440$1yk2we g$cdrs$5441$1yk2we)
               (if (g$all-empty?$5387$1yk2we g$cdrs$5441$1yk2we)
                 (apply g$f$5438$1yk2we g$cars$5440$1yk2we)
                 (if (apply g$f$5438$1yk2we g$cars$5440$1yk2we)
                   (begin
                     '#f
                     (apply
                       g$for-all$5389$1yk2we
                       g$f$5438$1yk2we
                       g$cdrs$5441$1yk2we))
                   '#f)))))))))
   (g$exists$5390$1yk2we
     g$exists$5481$1yk2we
     (case-lambda
       ((g$f$5442$1yk2we . g$args$5443$1yk2we)
        (if (g$all-empty?$5387$1yk2we g$args$5443$1yk2we)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5388$1yk2we g$args$5443$1yk2we)))
            (case-lambda
              ((g$cars$5444$1yk2we g$cdrs$5445$1yk2we)
               ((case-lambda
                  ((g$t$5446$1yk2we)
                   (if g$t$5446$1yk2we
                     g$t$5446$1yk2we
                     (begin
                       '#f
                       (apply
                         g$exists$5390$1yk2we
                         g$f$5442$1yk2we
                         g$cdrs$5445$1yk2we)))))
                (apply g$f$5442$1yk2we g$cars$5444$1yk2we)))))))))
   (g$cons*$5391$1yk2we
     g$cons*$5482$1yk2we
     (case-lambda
       ((g$a$5447$1yk2we . g$rest$5448$1yk2we)
        ((letrec ((g$f$5449$1yk2we
                    (case-lambda
                      ((g$a$5450$1yk2we g$rest$5451$1yk2we)
                       (if (null? g$rest$5451$1yk2we)
                         g$a$5450$1yk2we
                         (cons
                           g$a$5450$1yk2we
                           (g$f$5449$1yk2we
                             (car g$rest$5451$1yk2we)
                             (cdr g$rest$5451$1yk2we))))))))
           g$f$5449$1yk2we)
         g$a$5447$1yk2we
         g$rest$5448$1yk2we))))
   (g$fold-left$5392$1yk2we
     g$fold-left$5483$1yk2we
     (case-lambda
       ((g$combine$5452$1yk2we
          g$nil$5453$1yk2we
          g$list1$5454$1yk2we
          .
          g$lists$5455$1yk2we)
        (if (null? g$list1$5454$1yk2we)
          g$nil$5453$1yk2we
          (apply
            g$fold-left$5392$1yk2we
            (g$cons*$5391$1yk2we
              g$combine$5452$1yk2we
              (apply
                g$combine$5452$1yk2we
                (g$cons*$5391$1yk2we
                  g$nil$5453$1yk2we
                  (car g$list1$5454$1yk2we)
                  (map car g$lists$5455$1yk2we)))
              (cdr g$list1$5454$1yk2we)
              (map cdr g$lists$5455$1yk2we)))))))
   (g$fold-right$5393$1yk2we
     g$fold-right$5484$1yk2we
     (case-lambda
       ((g$combine$5456$1yk2we
          g$nil$5457$1yk2we
          g$list1$5458$1yk2we
          .
          g$lists$5459$1yk2we)
        (if (null? g$list1$5458$1yk2we)
          g$nil$5457$1yk2we
          (apply
            g$combine$5456$1yk2we
            (append
              (list (car g$list1$5458$1yk2we))
              (map car g$lists$5459$1yk2we)
              (list
                (apply
                  g$fold-right$5393$1yk2we
                  (g$cons*$5391$1yk2we
                    g$combine$5456$1yk2we
                    g$nil$5457$1yk2we
                    (cdr g$list1$5458$1yk2we)
                    (map cdr g$lists$5459$1yk2we))))))))))
   (g$remove$5394$1yk2we
     g$remove$5485$1yk2we
     (case-lambda
       ((g$obj$5460$1yk2we g$list$5461$1yk2we)
        (g$remp$5380$1yk2we
          (case-lambda
            ((g$x$5462$1yk2we) (equal? g$obj$5460$1yk2we g$x$5462$1yk2we)))
          g$list$5461$1yk2we))))
   (g$remv$5395$1yk2we
     g$remv$5486$1yk2we
     (case-lambda
       ((g$obj$5463$1yk2we g$list$5464$1yk2we)
        (g$remp$5380$1yk2we
          (case-lambda
            ((g$x$5465$1yk2we) (eqv? g$obj$5463$1yk2we g$x$5465$1yk2we)))
          g$list$5464$1yk2we))))
   (g$remq$5396$1yk2we
     g$remq$5487$1yk2we
     (case-lambda
       ((g$obj$5466$1yk2we g$list$5467$1yk2we)
        (g$remp$5380$1yk2we
          (case-lambda
            ((g$x$5468$1yk2we) (eq? g$obj$5466$1yk2we g$x$5468$1yk2we)))
          g$list$5467$1yk2we)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5488$1yk2we
     g$native-endianness$5599$1yk2we
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5489$1yk2we
     g$bytevector-u16-ref$5600$1yk2we
     (case-lambda
       ((g$bytevector$5517$1yk2we g$k$5518$1yk2we g$endianness$5519$1yk2we)
        (bytevector-uint-ref
          g$bytevector$5517$1yk2we
          g$k$5518$1yk2we
          g$endianness$5519$1yk2we
          '2))))
   (g$bytevector-s16-ref$5490$1yk2we
     g$bytevector-s16-ref$5601$1yk2we
     (case-lambda
       ((g$bytevector$5520$1yk2we g$k$5521$1yk2we g$endianness$5522$1yk2we)
        (bytevector-sint-ref
          g$bytevector$5520$1yk2we
          g$k$5521$1yk2we
          g$endianness$5522$1yk2we
          '2))))
   (g$bytevector-u16-native-ref$5491$1yk2we
     g$bytevector-u16-native-ref$5602$1yk2we
     (case-lambda
       ((g$bytevector$5523$1yk2we g$k$5524$1yk2we)
        (bytevector-uint-ref
          g$bytevector$5523$1yk2we
          g$k$5524$1yk2we
          (g$native-endianness$5488$1yk2we)
          '2))))
   (g$bytevector-s16-native-ref$5492$1yk2we
     g$bytevector-s16-native-ref$5603$1yk2we
     (case-lambda
       ((g$bytevector$5525$1yk2we g$k$5526$1yk2we)
        (bytevector-sint-ref
          g$bytevector$5525$1yk2we
          g$k$5526$1yk2we
          (g$native-endianness$5488$1yk2we)
          '2))))
   (g$bytevector-u16-set!$5493$1yk2we
     g$bytevector-u16-set!$5604$1yk2we
     (case-lambda
       ((g$bytevector$5527$1yk2we
          g$k$5528$1yk2we
          g$n$5529$1yk2we
          g$endianness$5530$1yk2we)
        (bytevector-uint-set!
          g$bytevector$5527$1yk2we
          g$k$5528$1yk2we
          g$n$5529$1yk2we
          g$endianness$5530$1yk2we
          '2))))
   (g$bytevector-s16-set!$5494$1yk2we
     g$bytevector-s16-set!$5605$1yk2we
     (case-lambda
       ((g$bytevector$5531$1yk2we
          g$k$5532$1yk2we
          g$n$5533$1yk2we
          g$endianness$5534$1yk2we)
        (bytevector-sint-set!
          g$bytevector$5531$1yk2we
          g$k$5532$1yk2we
          g$n$5533$1yk2we
          g$endianness$5534$1yk2we
          '2))))
   (g$bytevector-u16-native-set!$5495$1yk2we
     g$bytevector-u16-native-set!$5606$1yk2we
     (case-lambda
       ((g$bytevector$5535$1yk2we g$k$5536$1yk2we g$n$5537$1yk2we)
        (bytevector-uint-set!
          g$bytevector$5535$1yk2we
          g$k$5536$1yk2we
          g$n$5537$1yk2we
          (g$native-endianness$5488$1yk2we)
          '2))))
   (g$bytevector-s16-native-set!$5496$1yk2we
     g$bytevector-s16-native-set!$5607$1yk2we
     (case-lambda
       ((g$bytevector$5538$1yk2we g$k$5539$1yk2we g$n$5540$1yk2we)
        (bytevector-sint-set!
          g$bytevector$5538$1yk2we
          g$k$5539$1yk2we
          g$n$5540$1yk2we
          (g$native-endianness$5488$1yk2we)
          '2))))
   (g$bytevector-u32-ref$5497$1yk2we
     g$bytevector-u32-ref$5608$1yk2we
     (case-lambda
       ((g$bytevector$5541$1yk2we g$k$5542$1yk2we g$endianness$5543$1yk2we)
        (bytevector-uint-ref
          g$bytevector$5541$1yk2we
          g$k$5542$1yk2we
          g$endianness$5543$1yk2we
          '4))))
   (g$bytevector-s32-ref$5498$1yk2we
     g$bytevector-s32-ref$5609$1yk2we
     (case-lambda
       ((g$bytevector$5544$1yk2we g$k$5545$1yk2we g$endianness$5546$1yk2we)
        (bytevector-sint-ref
          g$bytevector$5544$1yk2we
          g$k$5545$1yk2we
          g$endianness$5546$1yk2we
          '4))))
   (g$bytevector-u32-native-ref$5499$1yk2we
     g$bytevector-u32-native-ref$5610$1yk2we
     (case-lambda
       ((g$bytevector$5547$1yk2we g$k$5548$1yk2we)
        (bytevector-uint-ref
          g$bytevector$5547$1yk2we
          g$k$5548$1yk2we
          (g$native-endianness$5488$1yk2we)
          '4))))
   (g$bytevector-s32-native-ref$5500$1yk2we
     g$bytevector-s32-native-ref$5611$1yk2we
     (case-lambda
       ((g$bytevector$5549$1yk2we g$k$5550$1yk2we)
        (bytevector-sint-ref
          g$bytevector$5549$1yk2we
          g$k$5550$1yk2we
          (g$native-endianness$5488$1yk2we)
          '4))))
   (g$bytevector-u32-set!$5501$1yk2we
     g$bytevector-u32-set!$5612$1yk2we
     (case-lambda
       ((g$bytevector$5551$1yk2we
          g$k$5552$1yk2we
          g$n$5553$1yk2we
          g$endianness$5554$1yk2we)
        (bytevector-uint-set!
          g$bytevector$5551$1yk2we
          g$k$5552$1yk2we
          g$n$5553$1yk2we
          g$endianness$5554$1yk2we
          '4))))
   (g$bytevector-s32-set!$5502$1yk2we
     g$bytevector-s32-set!$5613$1yk2we
     (case-lambda
       ((g$bytevector$5555$1yk2we
          g$k$5556$1yk2we
          g$n$5557$1yk2we
          g$endianness$5558$1yk2we)
        (bytevector-sint-set!
          g$bytevector$5555$1yk2we
          g$k$5556$1yk2we
          g$n$5557$1yk2we
          g$endianness$5558$1yk2we
          '4))))
   (g$bytevector-u32-native-set!$5503$1yk2we
     g$bytevector-u32-native-set!$5614$1yk2we
     (case-lambda
       ((g$bytevector$5559$1yk2we g$k$5560$1yk2we g$n$5561$1yk2we)
        (bytevector-uint-set!
          g$bytevector$5559$1yk2we
          g$k$5560$1yk2we
          g$n$5561$1yk2we
          (g$native-endianness$5488$1yk2we)
          '4))))
   (g$bytevector-s32-native-set!$5504$1yk2we
     g$bytevector-s32-native-set!$5615$1yk2we
     (case-lambda
       ((g$bytevector$5562$1yk2we g$k$5563$1yk2we g$n$5564$1yk2we)
        (bytevector-sint-set!
          g$bytevector$5562$1yk2we
          g$k$5563$1yk2we
          g$n$5564$1yk2we
          (g$native-endianness$5488$1yk2we)
          '4))))
   (g$bytevector-u64-ref$5505$1yk2we
     g$bytevector-u64-ref$5616$1yk2we
     (case-lambda
       ((g$bytevector$5565$1yk2we g$k$5566$1yk2we g$endianness$5567$1yk2we)
        (bytevector-uint-ref
          g$bytevector$5565$1yk2we
          g$k$5566$1yk2we
          g$endianness$5567$1yk2we
          '8))))
   (g$bytevector-s64-ref$5506$1yk2we
     g$bytevector-s64-ref$5617$1yk2we
     (case-lambda
       ((g$bytevector$5568$1yk2we g$k$5569$1yk2we g$endianness$5570$1yk2we)
        (bytevector-sint-ref
          g$bytevector$5568$1yk2we
          g$k$5569$1yk2we
          g$endianness$5570$1yk2we
          '8))))
   (g$bytevector-u64-native-ref$5507$1yk2we
     g$bytevector-u64-native-ref$5618$1yk2we
     (case-lambda
       ((g$bytevector$5571$1yk2we g$k$5572$1yk2we)
        (bytevector-uint-ref
          g$bytevector$5571$1yk2we
          g$k$5572$1yk2we
          (g$native-endianness$5488$1yk2we)
          '8))))
   (g$bytevector-s64-native-ref$5508$1yk2we
     g$bytevector-s64-native-ref$5619$1yk2we
     (case-lambda
       ((g$bytevector$5573$1yk2we g$k$5574$1yk2we)
        (bytevector-sint-ref
          g$bytevector$5573$1yk2we
          g$k$5574$1yk2we
          (g$native-endianness$5488$1yk2we)
          '8))))
   (g$bytevector-u64-set!$5509$1yk2we
     g$bytevector-u64-set!$5620$1yk2we
     (case-lambda
       ((g$bytevector$5575$1yk2we
          g$k$5576$1yk2we
          g$n$5577$1yk2we
          g$endianness$5578$1yk2we)
        (bytevector-uint-set!
          g$bytevector$5575$1yk2we
          g$k$5576$1yk2we
          g$n$5577$1yk2we
          g$endianness$5578$1yk2we
          '8))))
   (g$bytevector-s64-set!$5510$1yk2we
     g$bytevector-s64-set!$5621$1yk2we
     (case-lambda
       ((g$bytevector$5579$1yk2we
          g$k$5580$1yk2we
          g$n$5581$1yk2we
          g$endianness$5582$1yk2we)
        (bytevector-sint-set!
          g$bytevector$5579$1yk2we
          g$k$5580$1yk2we
          g$n$5581$1yk2we
          g$endianness$5582$1yk2we
          '8))))
   (g$bytevector-u64-native-set!$5511$1yk2we
     g$bytevector-u64-native-set!$5622$1yk2we
     (case-lambda
       ((g$bytevector$5583$1yk2we g$k$5584$1yk2we g$n$5585$1yk2we)
        (bytevector-uint-set!
          g$bytevector$5583$1yk2we
          g$k$5584$1yk2we
          g$n$5585$1yk2we
          (g$native-endianness$5488$1yk2we)
          '8))))
   (g$bytevector-s64-native-set!$5512$1yk2we
     g$bytevector-s64-native-set!$5623$1yk2we
     (case-lambda
       ((g$bytevector$5586$1yk2we g$k$5587$1yk2we g$n$5588$1yk2we)
        (bytevector-sint-set!
          g$bytevector$5586$1yk2we
          g$k$5587$1yk2we
          g$n$5588$1yk2we
          (g$native-endianness$5488$1yk2we)
          '8))))
   (g$bytevector-ieee-single-native-ref$5513$1yk2we
     g$bytevector-ieee-single-native-ref$5624$1yk2we
     (case-lambda
       ((g$bytevector$5589$1yk2we g$k$5590$1yk2we)
        (if (not (zero? (mod g$k$5590$1yk2we '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5590$1yk2we)
          (bytevector-ieee-single-ref
            g$bytevector$5589$1yk2we
            g$k$5590$1yk2we
            (g$native-endianness$5488$1yk2we))))))
   (g$bytevector-ieee-double-native-ref$5514$1yk2we
     g$bytevector-ieee-double-native-ref$5625$1yk2we
     (case-lambda
       ((g$bytevector$5591$1yk2we g$k$5592$1yk2we)
        (if (not (zero? (mod g$k$5592$1yk2we '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5592$1yk2we)
          (bytevector-ieee-double-ref
            g$bytevector$5591$1yk2we
            g$k$5592$1yk2we
            (g$native-endianness$5488$1yk2we))))))
   (g$bytevector-ieee-single-native-set!$5515$1yk2we
     g$bytevector-ieee-single-native-set!$5626$1yk2we
     (case-lambda
       ((g$bytevector$5593$1yk2we g$k$5594$1yk2we g$x$5595$1yk2we)
        (if (not (zero? (mod g$k$5594$1yk2we '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5594$1yk2we)
          (bytevector-ieee-single-set!
            g$bytevector$5593$1yk2we
            g$k$5594$1yk2we
            g$x$5595$1yk2we
            (g$native-endianness$5488$1yk2we))))))
   (g$bytevector-ieee-double-native-set!$5516$1yk2we
     g$bytevector-ieee-double-native-set!$5627$1yk2we
     (case-lambda
       ((g$bytevector$5596$1yk2we g$k$5597$1yk2we g$x$5598$1yk2we)
        (if (not (zero? (mod g$k$5597$1yk2we '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5597$1yk2we)
          (bytevector-ieee-double-set!
            g$bytevector$5596$1yk2we
            g$k$5597$1yk2we
            g$x$5598$1yk2we
            (g$native-endianness$5488$1yk2we)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6624$5628$1yk2we
     g$6624$5723$1yk2we
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6627$1yk2we
       '#f
       '#f
       '#()))
   (g$6626$5629$1yk2we g$6626$5724$1yk2we '#f)
   (g$6625$5630$1yk2we
     g$6625$5725$1yk2we
     (make-record-constructor-descriptor
       g$6624$5628$1yk2we
       '#f
       g$6626$5629$1yk2we))
   (g$&condition?$5631$1yk2we
     g$&condition?$5726$1yk2we
     (record-predicate g$6624$5628$1yk2we))
   (g$make-&condition$5632$1yk2we
     g$make-&condition$5727$1yk2we
     (record-constructor g$6625$5630$1yk2we))
   (g$&condition-rtd$5633$1yk2we
     g$&condition-rtd$5728$1yk2we
     g$6624$5628$1yk2we)
   (g$&condition-rcd$5634$1yk2we
     g$&condition-rcd$5729$1yk2we
     g$6625$5630$1yk2we)
   (g$6640$5635$1yk2we
     g$6640$5730$1yk2we
     (make-record-type-descriptor
       '&message
       g$6624$5628$1yk2we
       'g$6643$1yk2we
       '#f
       '#f
       '#((immutable message))))
   (g$6642$5636$1yk2we g$6642$5731$1yk2we '#f)
   (g$6641$5637$1yk2we
     g$6641$5732$1yk2we
     (make-record-constructor-descriptor
       g$6640$5635$1yk2we
       g$6625$5630$1yk2we
       g$6642$5636$1yk2we))
   (g$6639$5638$1yk2we
     g$6639$5733$1yk2we
     (record-predicate g$6640$5635$1yk2we))
   (g$make-message-condition$5639$1yk2we
     g$make-message-condition$5734$1yk2we
     (record-constructor g$6641$5637$1yk2we))
   (g$6638$5640$1yk2we
     g$6638$5735$1yk2we
     (record-accessor g$6640$5635$1yk2we '0))
   (g$message-condition?$5641$1yk2we
     g$message-condition?$5736$1yk2we
     (condition-predicate g$6640$5635$1yk2we))
   (g$condition-message$5642$1yk2we
     g$condition-message$5737$1yk2we
     (condition-accessor g$6640$5635$1yk2we g$6638$5640$1yk2we))
   (g$6656$5643$1yk2we
     g$6656$5738$1yk2we
     (make-record-type-descriptor
       '&warning
       g$6624$5628$1yk2we
       'g$6659$1yk2we
       '#f
       '#f
       '#()))
   (g$6658$5644$1yk2we g$6658$5739$1yk2we '#f)
   (g$6657$5645$1yk2we
     g$6657$5740$1yk2we
     (make-record-constructor-descriptor
       g$6656$5643$1yk2we
       g$6625$5630$1yk2we
       g$6658$5644$1yk2we))
   (g$6655$5646$1yk2we
     g$6655$5741$1yk2we
     (record-predicate g$6656$5643$1yk2we))
   (g$make-warning$5647$1yk2we
     g$make-warning$5742$1yk2we
     (record-constructor g$6657$5645$1yk2we))
   (g$warning?$5648$1yk2we
     g$warning?$5743$1yk2we
     (condition-predicate g$6656$5643$1yk2we))
   (g$6670$5649$1yk2we
     g$6670$5744$1yk2we
     (make-record-type-descriptor
       '&serious
       g$6624$5628$1yk2we
       'g$6673$1yk2we
       '#f
       '#f
       '#()))
   (g$6672$5650$1yk2we g$6672$5745$1yk2we '#f)
   (g$6671$5651$1yk2we
     g$6671$5746$1yk2we
     (make-record-constructor-descriptor
       g$6670$5649$1yk2we
       g$6625$5630$1yk2we
       g$6672$5650$1yk2we))
   (g$6669$5652$1yk2we
     g$6669$5747$1yk2we
     (record-predicate g$6670$5649$1yk2we))
   (g$make-serious-condition$5653$1yk2we
     g$make-serious-condition$5748$1yk2we
     (record-constructor g$6671$5651$1yk2we))
   (g$serious-condition?$5654$1yk2we
     g$serious-condition?$5749$1yk2we
     (condition-predicate g$6670$5649$1yk2we))
   (g$6684$5655$1yk2we
     g$6684$5750$1yk2we
     (make-record-type-descriptor
       '&error
       g$6670$5649$1yk2we
       'g$6687$1yk2we
       '#f
       '#f
       '#()))
   (g$6686$5656$1yk2we g$6686$5751$1yk2we '#f)
   (g$6685$5657$1yk2we
     g$6685$5752$1yk2we
     (make-record-constructor-descriptor
       g$6684$5655$1yk2we
       g$6671$5651$1yk2we
       g$6686$5656$1yk2we))
   (g$6683$5658$1yk2we
     g$6683$5753$1yk2we
     (record-predicate g$6684$5655$1yk2we))
   (g$make-error$5659$1yk2we
     g$make-error$5754$1yk2we
     (record-constructor g$6685$5657$1yk2we))
   (g$error?$5660$1yk2we
     g$error?$5755$1yk2we
     (condition-predicate g$6684$5655$1yk2we))
   (g$6698$5661$1yk2we
     g$6698$5756$1yk2we
     (make-record-type-descriptor
       '&violation
       g$6670$5649$1yk2we
       'g$6701$1yk2we
       '#f
       '#f
       '#()))
   (g$6700$5662$1yk2we g$6700$5757$1yk2we '#f)
   (g$6699$5663$1yk2we
     g$6699$5758$1yk2we
     (make-record-constructor-descriptor
       g$6698$5661$1yk2we
       g$6671$5651$1yk2we
       g$6700$5662$1yk2we))
   (g$6697$5664$1yk2we
     g$6697$5759$1yk2we
     (record-predicate g$6698$5661$1yk2we))
   (g$make-violation$5665$1yk2we
     g$make-violation$5760$1yk2we
     (record-constructor g$6699$5663$1yk2we))
   (g$violation?$5666$1yk2we
     g$violation?$5761$1yk2we
     (condition-predicate g$6698$5661$1yk2we))
   (g$6712$5667$1yk2we
     g$6712$5762$1yk2we
     (make-record-type-descriptor
       '&assertion
       g$6698$5661$1yk2we
       'g$6715$1yk2we
       '#f
       '#f
       '#()))
   (g$6714$5668$1yk2we g$6714$5763$1yk2we '#f)
   (g$6713$5669$1yk2we
     g$6713$5764$1yk2we
     (make-record-constructor-descriptor
       g$6712$5667$1yk2we
       g$6699$5663$1yk2we
       g$6714$5668$1yk2we))
   (g$6711$5670$1yk2we
     g$6711$5765$1yk2we
     (record-predicate g$6712$5667$1yk2we))
   (g$make-assertion-violation$5671$1yk2we
     g$make-assertion-violation$5766$1yk2we
     (record-constructor g$6713$5669$1yk2we))
   (g$assertion-violation?$5672$1yk2we
     g$assertion-violation?$5767$1yk2we
     (condition-predicate g$6712$5667$1yk2we))
   (g$6727$5673$1yk2we
     g$6727$5768$1yk2we
     (make-record-type-descriptor
       '&irritants
       g$6624$5628$1yk2we
       'g$6730$1yk2we
       '#f
       '#f
       '#((immutable irritants))))
   (g$6729$5674$1yk2we g$6729$5769$1yk2we '#f)
   (g$6728$5675$1yk2we
     g$6728$5770$1yk2we
     (make-record-constructor-descriptor
       g$6727$5673$1yk2we
       g$6625$5630$1yk2we
       g$6729$5674$1yk2we))
   (g$6726$5676$1yk2we
     g$6726$5771$1yk2we
     (record-predicate g$6727$5673$1yk2we))
   (g$make-irritants-condition$5677$1yk2we
     g$make-irritants-condition$5772$1yk2we
     (record-constructor g$6728$5675$1yk2we))
   (g$6725$5678$1yk2we
     g$6725$5773$1yk2we
     (record-accessor g$6727$5673$1yk2we '0))
   (g$irritants-condition?$5679$1yk2we
     g$irritants-condition?$5774$1yk2we
     (condition-predicate g$6727$5673$1yk2we))
   (g$condition-irritants$5680$1yk2we
     g$condition-irritants$5775$1yk2we
     (condition-accessor g$6727$5673$1yk2we g$6725$5678$1yk2we))
   (g$6744$5681$1yk2we
     g$6744$5776$1yk2we
     (make-record-type-descriptor
       '&who
       g$6624$5628$1yk2we
       'g$6747$1yk2we
       '#f
       '#f
       '#((immutable who))))
   (g$6746$5682$1yk2we g$6746$5777$1yk2we '#f)
   (g$6745$5683$1yk2we
     g$6745$5778$1yk2we
     (make-record-constructor-descriptor
       g$6744$5681$1yk2we
       g$6625$5630$1yk2we
       g$6746$5682$1yk2we))
   (g$6743$5684$1yk2we
     g$6743$5779$1yk2we
     (record-predicate g$6744$5681$1yk2we))
   (g$make-who-condition$5685$1yk2we
     g$make-who-condition$5780$1yk2we
     (record-constructor g$6745$5683$1yk2we))
   (g$6742$5686$1yk2we
     g$6742$5781$1yk2we
     (record-accessor g$6744$5681$1yk2we '0))
   (g$who-condition?$5687$1yk2we
     g$who-condition?$5782$1yk2we
     (condition-predicate g$6744$5681$1yk2we))
   (g$condition-who$5688$1yk2we
     g$condition-who$5783$1yk2we
     (condition-accessor g$6744$5681$1yk2we g$6742$5686$1yk2we))
   (g$6760$5689$1yk2we
     g$6760$5784$1yk2we
     (make-record-type-descriptor
       '&non-continuable
       g$6698$5661$1yk2we
       'g$6763$1yk2we
       '#f
       '#f
       '#()))
   (g$6762$5690$1yk2we g$6762$5785$1yk2we '#f)
   (g$6761$5691$1yk2we
     g$6761$5786$1yk2we
     (make-record-constructor-descriptor
       g$6760$5689$1yk2we
       g$6699$5663$1yk2we
       g$6762$5690$1yk2we))
   (g$6759$5692$1yk2we
     g$6759$5787$1yk2we
     (record-predicate g$6760$5689$1yk2we))
   (g$make-non-continuable-violation$5693$1yk2we
     g$make-non-continuable-violation$5788$1yk2we
     (record-constructor g$6761$5691$1yk2we))
   (g$non-continuable-violation?$5694$1yk2we
     g$non-continuable-violation?$5789$1yk2we
     (condition-predicate g$6760$5689$1yk2we))
   (g$6774$5695$1yk2we
     g$6774$5790$1yk2we
     (make-record-type-descriptor
       '&implementation-restriction
       g$6698$5661$1yk2we
       'g$6777$1yk2we
       '#f
       '#f
       '#()))
   (g$6776$5696$1yk2we g$6776$5791$1yk2we '#f)
   (g$6775$5697$1yk2we
     g$6775$5792$1yk2we
     (make-record-constructor-descriptor
       g$6774$5695$1yk2we
       g$6699$5663$1yk2we
       g$6776$5696$1yk2we))
   (g$6773$5698$1yk2we
     g$6773$5793$1yk2we
     (record-predicate g$6774$5695$1yk2we))
   (g$make-implementation-restriction-violation$5699$1yk2we
     g$make-implementation-restriction-violation$5794$1yk2we
     (record-constructor g$6775$5697$1yk2we))
   (g$implementation-restriction-violation?$5700$1yk2we
     g$implementation-restriction-violation?$5795$1yk2we
     (condition-predicate g$6774$5695$1yk2we))
   (g$6788$5701$1yk2we
     g$6788$5796$1yk2we
     (make-record-type-descriptor
       '&lexical
       g$6698$5661$1yk2we
       'g$6791$1yk2we
       '#f
       '#f
       '#()))
   (g$6790$5702$1yk2we g$6790$5797$1yk2we '#f)
   (g$6789$5703$1yk2we
     g$6789$5798$1yk2we
     (make-record-constructor-descriptor
       g$6788$5701$1yk2we
       g$6699$5663$1yk2we
       g$6790$5702$1yk2we))
   (g$6787$5704$1yk2we
     g$6787$5799$1yk2we
     (record-predicate g$6788$5701$1yk2we))
   (g$make-lexical-violation$5705$1yk2we
     g$make-lexical-violation$5800$1yk2we
     (record-constructor g$6789$5703$1yk2we))
   (g$lexical-violation?$5706$1yk2we
     g$lexical-violation?$5801$1yk2we
     (condition-predicate g$6788$5701$1yk2we))
   (g$6804$5707$1yk2we
     g$6804$5802$1yk2we
     (make-record-type-descriptor
       '&syntax
       g$6698$5661$1yk2we
       'g$6807$1yk2we
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6806$5708$1yk2we g$6806$5803$1yk2we '#f)
   (g$6805$5709$1yk2we
     g$6805$5804$1yk2we
     (make-record-constructor-descriptor
       g$6804$5707$1yk2we
       g$6699$5663$1yk2we
       g$6806$5708$1yk2we))
   (g$6803$5710$1yk2we
     g$6803$5805$1yk2we
     (record-predicate g$6804$5707$1yk2we))
   (g$make-syntax-violation$5711$1yk2we
     g$make-syntax-violation$5806$1yk2we
     (record-constructor g$6805$5709$1yk2we))
   (g$6801$5712$1yk2we
     g$6801$5807$1yk2we
     (record-accessor g$6804$5707$1yk2we '0))
   (g$6802$5713$1yk2we
     g$6802$5808$1yk2we
     (record-accessor g$6804$5707$1yk2we '1))
   (g$syntax-violation?$5714$1yk2we
     g$syntax-violation?$5809$1yk2we
     (condition-predicate g$6804$5707$1yk2we))
   (g$syntax-violation-form$5715$1yk2we
     g$syntax-violation-form$5810$1yk2we
     (condition-accessor g$6804$5707$1yk2we g$6801$5712$1yk2we))
   (g$syntax-violation-subform$5716$1yk2we
     g$syntax-violation-subform$5811$1yk2we
     (condition-accessor g$6804$5707$1yk2we g$6802$5713$1yk2we))
   (g$6822$5717$1yk2we
     g$6822$5812$1yk2we
     (make-record-type-descriptor
       '&undefined
       g$6698$5661$1yk2we
       'g$6825$1yk2we
       '#f
       '#f
       '#()))
   (g$6824$5718$1yk2we g$6824$5813$1yk2we '#f)
   (g$6823$5719$1yk2we
     g$6823$5814$1yk2we
     (make-record-constructor-descriptor
       g$6822$5717$1yk2we
       g$6699$5663$1yk2we
       g$6824$5718$1yk2we))
   (g$6821$5720$1yk2we
     g$6821$5815$1yk2we
     (record-predicate g$6822$5717$1yk2we))
   (g$make-undefined-violation$5721$1yk2we
     g$make-undefined-violation$5816$1yk2we
     (record-constructor g$6823$5719$1yk2we))
   (g$undefined-violation?$5722$1yk2we
     g$undefined-violation?$5817$1yk2we
     (condition-predicate g$6822$5717$1yk2we)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5818$1yk2we
     g$append!$5824$1yk2we
     (case-lambda
       ((g$a$5819$1yk2we . g$b$5820$1yk2we)
        (if (null? g$a$5819$1yk2we)
          g$b$5820$1yk2we
          (if (null? g$b$5820$1yk2we)
            g$a$5819$1yk2we
            (begin
              ((letrec ((g$f$5821$1yk2we
                          (case-lambda
                            ((g$a$5822$1yk2we)
                             ((case-lambda
                                ((g$n$5823$1yk2we)
                                 (if (null? g$n$5823$1yk2we)
                                   (set-cdr! g$a$5822$1yk2we g$b$5820$1yk2we)
                                   (g$f$5821$1yk2we g$n$5823$1yk2we))))
                              (cdr g$a$5822$1yk2we))))))
                 g$f$5821$1yk2we)
               g$a$5819$1yk2we)
              g$a$5819$1yk2we)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5825$1yk2we
     g$sign$5843$1yk2we
     (case-lambda
       ((g$n$5831$1yk2we)
        (if (> g$n$5831$1yk2we '0) '1 (if (< g$n$5831$1yk2we '0) '-1 '0)))))
   (g$quotient$5826$1yk2we
     g$quotient$5844$1yk2we
     (case-lambda
       ((g$n1$5832$1yk2we g$n2$5833$1yk2we)
        (begin
          (if (not (integer-valued? g$n1$5832$1yk2we))
            (assertion-violation 'quotient '"not an integer" g$n1$5832$1yk2we)
            (void))
          (if (not (integer-valued? g$n2$5833$1yk2we))
            (assertion-violation 'quotient '"not an integer" g$n2$5833$1yk2we)
            (void))
          (* (g$sign$5825$1yk2we g$n1$5832$1yk2we)
             (g$sign$5825$1yk2we g$n2$5833$1yk2we)
             (div (abs g$n1$5832$1yk2we) (abs g$n2$5833$1yk2we)))))))
   (g$remainder$5827$1yk2we
     g$remainder$5845$1yk2we
     (case-lambda
       ((g$n1$5834$1yk2we g$n2$5835$1yk2we)
        (begin
          (if (not (integer-valued? g$n1$5834$1yk2we))
            (assertion-violation 'remainder '"not an integer" g$n1$5834$1yk2we)
            (void))
          (if (not (integer-valued? g$n2$5835$1yk2we))
            (assertion-violation 'remainder '"not an integer" g$n2$5835$1yk2we)
            (void))
          (* (g$sign$5825$1yk2we g$n1$5834$1yk2we)
             (mod (abs g$n1$5834$1yk2we) (abs g$n2$5835$1yk2we)))))))
   (g$modulo$5828$1yk2we
     g$modulo$5846$1yk2we
     (case-lambda
       ((g$n1$5836$1yk2we g$n2$5837$1yk2we)
        (begin
          (if (not (integer-valued? g$n1$5836$1yk2we))
            (assertion-violation 'modulo '"not an integer" g$n1$5836$1yk2we)
            (void))
          (if (not (integer-valued? g$n2$5837$1yk2we))
            (assertion-violation 'modulo '"not an integer" g$n2$5837$1yk2we)
            (void))
          (* (g$sign$5825$1yk2we g$n2$5837$1yk2we)
             (mod (* (g$sign$5825$1yk2we g$n2$5837$1yk2we) g$n1$5836$1yk2we)
                  (abs g$n2$5837$1yk2we)))))))
   (g$make-promise$5829$1yk2we
     g$make-promise$5847$1yk2we
     (case-lambda
       ((g$proc$5838$1yk2we)
        ((case-lambda
           ((g$result-ready?$5839$1yk2we g$result$5840$1yk2we)
            (case-lambda
              (()
               (if g$result-ready?$5839$1yk2we
                 g$result$5840$1yk2we
                 ((case-lambda
                    ((g$x$5841$1yk2we)
                     (if g$result-ready?$5839$1yk2we
                       g$result$5840$1yk2we
                       (begin
                         (set! g$result-ready?$5839$1yk2we '#t)
                         (set! g$result$5840$1yk2we g$x$5841$1yk2we)
                         g$result$5840$1yk2we))))
                  (g$proc$5838$1yk2we)))))))
         '#f
         '#f))))
   (g$force$5830$1yk2we
     g$force$5848$1yk2we
     (case-lambda ((g$object$5842$1yk2we) (g$object$5842$1yk2we)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5849$1yk2we
     g$split$5875$1yk2we
     (case-lambda
       ((g$ls$5852$1yk2we)
        ((letrec ((g$loop$5853$1yk2we
                    (case-lambda
                      ((g$rest$5854$1yk2we
                         g$left$5855$1yk2we
                         g$right$5856$1yk2we)
                       (if (null? g$rest$5854$1yk2we)
                         (cons g$left$5855$1yk2we g$right$5856$1yk2we)
                         (if (null? (cdr g$rest$5854$1yk2we))
                           (cons
                             (cons (car g$rest$5854$1yk2we) g$left$5855$1yk2we)
                             g$right$5856$1yk2we)
                           (g$loop$5853$1yk2we
                             (g$cddr$5001$1yk2we g$rest$5854$1yk2we)
                             (cons (car g$rest$5854$1yk2we) g$left$5855$1yk2we)
                             (cons
                               (g$cadr$4999$1yk2we g$rest$5854$1yk2we)
                               g$right$5856$1yk2we))))))))
           g$loop$5853$1yk2we)
         g$ls$5852$1yk2we
         '()
         '()))))
   (g$reverse-it$5850$1yk2we
     g$reverse-it$5876$1yk2we
     (case-lambda
       ((g$head$5857$1yk2we g$tail$5858$1yk2we)
        (if (null? g$head$5857$1yk2we)
          g$tail$5858$1yk2we
          ((case-lambda
             ((g$hd$5859$1yk2we g$tl$5860$1yk2we)
              (g$reverse-it$5850$1yk2we
                g$tl$5860$1yk2we
                (cons g$hd$5859$1yk2we g$tail$5858$1yk2we))))
           (car g$head$5857$1yk2we)
           (cdr g$head$5857$1yk2we))))))
   (g$list-sort$5851$1yk2we
     g$list-sort$5877$1yk2we
     (case-lambda
       ((g$precedes?$5861$1yk2we g$ls$5862$1yk2we)
        ((case-lambda
           ((g$merge$5863$1yk2we)
            ((case-lambda
               (()
                (if (null? g$ls$5862$1yk2we)
                  '()
                  ((letrec ((g$helper$5864$1yk2we
                              (case-lambda
                                ((g$piece$5865$1yk2we)
                                 (if (null? (cdr g$piece$5865$1yk2we))
                                   g$piece$5865$1yk2we
                                   ((case-lambda
                                      ((g$parts$5866$1yk2we)
                                       (g$merge$5863$1yk2we
                                         (g$helper$5864$1yk2we
                                           (car g$parts$5866$1yk2we))
                                         (g$helper$5864$1yk2we
                                           (cdr g$parts$5866$1yk2we)))))
                                    (g$split$5849$1yk2we
                                      g$piece$5865$1yk2we)))))))
                     g$helper$5864$1yk2we)
                   g$ls$5862$1yk2we)))))))
         (case-lambda
           ((g$list-1$5867$1yk2we g$list-2$5868$1yk2we)
            ((letrec ((g$loop$5869$1yk2we
                        (case-lambda
                          ((g$source-1$5870$1yk2we
                             g$source-2$5871$1yk2we
                             g$so-far$5872$1yk2we)
                           (if (null? g$source-1$5870$1yk2we)
                             (g$reverse-it$5850$1yk2we
                               g$so-far$5872$1yk2we
                               g$source-2$5871$1yk2we)
                             (if (null? g$source-2$5871$1yk2we)
                               (g$reverse-it$5850$1yk2we
                                 g$so-far$5872$1yk2we
                                 g$source-1$5870$1yk2we)
                               ((case-lambda
                                  ((g$car-1$5873$1yk2we g$car-2$5874$1yk2we)
                                   (if (g$precedes?$5861$1yk2we
                                         g$car-2$5874$1yk2we
                                         g$car-1$5873$1yk2we)
                                     (g$loop$5869$1yk2we
                                       g$source-1$5870$1yk2we
                                       (cdr g$source-2$5871$1yk2we)
                                       (cons
                                         g$car-2$5874$1yk2we
                                         g$so-far$5872$1yk2we))
                                     (g$loop$5869$1yk2we
                                       g$source-2$5871$1yk2we
                                       (cdr g$source-1$5870$1yk2we)
                                       (cons
                                         g$car-1$5873$1yk2we
                                         g$so-far$5872$1yk2we)))))
                                (car g$source-1$5870$1yk2we)
                                (car g$source-2$5871$1yk2we))))))))
               g$loop$5869$1yk2we)
             g$list-1$5867$1yk2we
             g$list-2$5868$1yk2we
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5921$1yk2we
     g$string-ci=?$5987$1yk2we
     (case-lambda
       ((g$a$5937$1yk2we g$b$5938$1yk2we . g$rest$5939$1yk2we)
        (begin
          (if (not (string? g$a$5937$1yk2we))
            (assertion-violation 'string-ci=? '"not a string" g$a$5937$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5940$1yk2we)
               (begin
                 (if (not (string? g$x$5940$1yk2we))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$5940$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5941$1yk2we)
                     (begin
                       (set! g$a$5937$1yk2we g$x$5940$1yk2we)
                       g$r$5941$1yk2we)))
                  (= (string-ci-compare g$a$5937$1yk2we g$x$5940$1yk2we) '0)))))
            (cons g$b$5938$1yk2we g$rest$5939$1yk2we))))))
   (g$string-ci<?$5922$1yk2we
     g$string-ci<?$5988$1yk2we
     (case-lambda
       ((g$a$5942$1yk2we g$b$5943$1yk2we . g$rest$5944$1yk2we)
        (begin
          (if (not (string? g$a$5942$1yk2we))
            (assertion-violation 'string-ci<? '"not a string" g$a$5942$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5945$1yk2we)
               (begin
                 (if (not (string? g$x$5945$1yk2we))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$5945$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5946$1yk2we)
                     (begin
                       (set! g$a$5942$1yk2we g$x$5945$1yk2we)
                       g$r$5946$1yk2we)))
                  (< (string-ci-compare g$a$5942$1yk2we g$x$5945$1yk2we) '0)))))
            (cons g$b$5943$1yk2we g$rest$5944$1yk2we))))))
   (g$string-ci>?$5923$1yk2we
     g$string-ci>?$5989$1yk2we
     (case-lambda
       ((g$a$5947$1yk2we g$b$5948$1yk2we . g$rest$5949$1yk2we)
        (begin
          (if (not (string? g$a$5947$1yk2we))
            (assertion-violation 'string-ci>? '"not a string" g$a$5947$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5950$1yk2we)
               (begin
                 (if (not (string? g$x$5950$1yk2we))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$5950$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5951$1yk2we)
                     (begin
                       (set! g$a$5947$1yk2we g$x$5950$1yk2we)
                       g$r$5951$1yk2we)))
                  (> (string-ci-compare g$a$5947$1yk2we g$x$5950$1yk2we) '0)))))
            (cons g$b$5948$1yk2we g$rest$5949$1yk2we))))))
   (g$string-ci<=?$5924$1yk2we
     g$string-ci<=?$5990$1yk2we
     (case-lambda
       ((g$a$5952$1yk2we g$b$5953$1yk2we . g$rest$5954$1yk2we)
        (begin
          (if (not (string? g$a$5952$1yk2we))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5952$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5955$1yk2we)
               (begin
                 (if (not (string? g$x$5955$1yk2we))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$5955$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5956$1yk2we)
                     (begin
                       (set! g$a$5952$1yk2we g$x$5955$1yk2we)
                       g$r$5956$1yk2we)))
                  (<= (string-ci-compare g$a$5952$1yk2we g$x$5955$1yk2we)
                      '0)))))
            (cons g$b$5953$1yk2we g$rest$5954$1yk2we))))))
   (g$string-ci>=?$5925$1yk2we
     g$string-ci>=?$5991$1yk2we
     (case-lambda
       ((g$a$5957$1yk2we g$b$5958$1yk2we . g$rest$5959$1yk2we)
        (begin
          (if (not (string? g$a$5957$1yk2we))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5957$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5960$1yk2we)
               (begin
                 (if (not (string? g$x$5960$1yk2we))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$5960$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5961$1yk2we)
                     (begin
                       (set! g$a$5957$1yk2we g$x$5960$1yk2we)
                       g$r$5961$1yk2we)))
                  (>= (string-ci-compare g$a$5957$1yk2we g$x$5960$1yk2we)
                      '0)))))
            (cons g$b$5958$1yk2we g$rest$5959$1yk2we))))))
   (g$char-ci=?$5932$1yk2we
     g$char-ci=?$5992$1yk2we
     (case-lambda
       ((g$a$5962$1yk2we g$b$5963$1yk2we . g$rest$5964$1yk2we)
        (begin
          (if (not (char? g$a$5962$1yk2we))
            (assertion-violation 'char-ci=? '"not a char" g$a$5962$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5965$1yk2we)
               (begin
                 (if (not (char? g$x$5965$1yk2we))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$5965$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5966$1yk2we)
                     (begin
                       (set! g$a$5962$1yk2we g$x$5965$1yk2we)
                       g$r$5966$1yk2we)))
                  (= (char->integer (char-upcase g$a$5962$1yk2we))
                     (char->integer (char-upcase g$x$5965$1yk2we)))))))
            (cons g$b$5963$1yk2we g$rest$5964$1yk2we))))))
   (g$char-ci<?$5933$1yk2we
     g$char-ci<?$5993$1yk2we
     (case-lambda
       ((g$a$5967$1yk2we g$b$5968$1yk2we . g$rest$5969$1yk2we)
        (begin
          (if (not (char? g$a$5967$1yk2we))
            (assertion-violation 'char-ci<? '"not a char" g$a$5967$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5970$1yk2we)
               (begin
                 (if (not (char? g$x$5970$1yk2we))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$5970$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5971$1yk2we)
                     (begin
                       (set! g$a$5967$1yk2we g$x$5970$1yk2we)
                       g$r$5971$1yk2we)))
                  (< (char->integer (char-upcase g$a$5967$1yk2we))
                     (char->integer (char-upcase g$x$5970$1yk2we)))))))
            (cons g$b$5968$1yk2we g$rest$5969$1yk2we))))))
   (g$char-ci>?$5934$1yk2we
     g$char-ci>?$5994$1yk2we
     (case-lambda
       ((g$a$5972$1yk2we g$b$5973$1yk2we . g$rest$5974$1yk2we)
        (begin
          (if (not (char? g$a$5972$1yk2we))
            (assertion-violation 'char-ci>? '"not a char" g$a$5972$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5975$1yk2we)
               (begin
                 (if (not (char? g$x$5975$1yk2we))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$5975$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5976$1yk2we)
                     (begin
                       (set! g$a$5972$1yk2we g$x$5975$1yk2we)
                       g$r$5976$1yk2we)))
                  (> (char->integer (char-upcase g$a$5972$1yk2we))
                     (char->integer (char-upcase g$x$5975$1yk2we)))))))
            (cons g$b$5973$1yk2we g$rest$5974$1yk2we))))))
   (g$char-ci<=?$5935$1yk2we
     g$char-ci<=?$5995$1yk2we
     (case-lambda
       ((g$a$5977$1yk2we g$b$5978$1yk2we . g$rest$5979$1yk2we)
        (begin
          (if (not (char? g$a$5977$1yk2we))
            (assertion-violation 'char-ci<=? '"not a char" g$a$5977$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5980$1yk2we)
               (begin
                 (if (not (char? g$x$5980$1yk2we))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$5980$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5981$1yk2we)
                     (begin
                       (set! g$a$5977$1yk2we g$x$5980$1yk2we)
                       g$r$5981$1yk2we)))
                  (<= (char->integer (char-upcase g$a$5977$1yk2we))
                      (char->integer (char-upcase g$x$5980$1yk2we)))))))
            (cons g$b$5978$1yk2we g$rest$5979$1yk2we))))))
   (g$char-ci>=?$5936$1yk2we
     g$char-ci>=?$5996$1yk2we
     (case-lambda
       ((g$a$5982$1yk2we g$b$5983$1yk2we . g$rest$5984$1yk2we)
        (begin
          (if (not (char? g$a$5982$1yk2we))
            (assertion-violation 'char-ci>=? '"not a char" g$a$5982$1yk2we)
            (void))
          (g$for-all$5480$1yk2we
            (case-lambda
              ((g$x$5985$1yk2we)
               (begin
                 (if (not (char? g$x$5985$1yk2we))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$5985$1yk2we)
                   (void))
                 ((case-lambda
                    ((g$r$5986$1yk2we)
                     (begin
                       (set! g$a$5982$1yk2we g$x$5985$1yk2we)
                       g$r$5986$1yk2we)))
                  (>= (char->integer (char-upcase g$a$5982$1yk2we))
                      (char->integer (char-upcase g$x$5985$1yk2we)))))))
            (cons g$b$5983$1yk2we g$rest$5984$1yk2we)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5997$1yk2we
     g$bitwise-if$6044$1yk2we
     (case-lambda
       ((g$ei1$6004$1yk2we g$ei2$6005$1yk2we g$ei3$6006$1yk2we)
        (bitwise-ior
          (bitwise-and g$ei1$6004$1yk2we g$ei2$6005$1yk2we)
          (bitwise-and (bitwise-not g$ei1$6004$1yk2we) g$ei3$6006$1yk2we)))))
   (g$bitwise-copy-bit$5998$1yk2we
     g$bitwise-copy-bit$6045$1yk2we
     (case-lambda
       ((g$ei1$6007$1yk2we g$ei2$6008$1yk2we g$ei3$6009$1yk2we)
        ((case-lambda
           ((g$mask$6010$1yk2we)
            ((case-lambda
               (()
                (g$bitwise-if$5997$1yk2we
                  g$mask$6010$1yk2we
                  (g$bitwise-arithmetic-shift-left$6001$1yk2we
                    g$ei3$6009$1yk2we
                    g$ei2$6008$1yk2we)
                  g$ei1$6007$1yk2we))))))
         (g$bitwise-arithmetic-shift-left$6001$1yk2we '1 g$ei2$6008$1yk2we)))))
   (g$bitwise-bit-field$5999$1yk2we
     g$bitwise-bit-field$6046$1yk2we
     (case-lambda
       ((g$ei1$6011$1yk2we g$ei2$6012$1yk2we g$ei3$6013$1yk2we)
        ((case-lambda
           ((g$mask$6014$1yk2we)
            (g$bitwise-arithmetic-shift-right$6002$1yk2we
              (bitwise-and g$ei1$6011$1yk2we g$mask$6014$1yk2we)
              g$ei2$6012$1yk2we)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6001$1yk2we
             '-1
             g$ei3$6013$1yk2we))))))
   (g$bitwise-copy-bit-field$6000$1yk2we
     g$bitwise-copy-bit-field$6047$1yk2we
     (case-lambda
       ((g$ei1$6015$1yk2we
          g$ei2$6016$1yk2we
          g$ei3$6017$1yk2we
          g$ei4$6018$1yk2we)
        ((case-lambda
           ((g$to$6019$1yk2we)
            ((case-lambda
               ((g$start$6020$1yk2we)
                ((case-lambda
                   ((g$end$6021$1yk2we)
                    ((case-lambda
                       ((g$from$6022$1yk2we)
                        ((case-lambda
                           ((g$mask1$6023$1yk2we)
                            ((case-lambda
                               ((g$mask2$6024$1yk2we)
                                ((case-lambda
                                   ((g$mask$6025$1yk2we)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5997$1yk2we
                                          g$mask$6025$1yk2we
                                          (g$bitwise-arithmetic-shift-left$6001$1yk2we
                                            g$from$6022$1yk2we
                                            g$start$6020$1yk2we)
                                          g$to$6019$1yk2we))))))
                                 (bitwise-and
                                   g$mask1$6023$1yk2we
                                   g$mask2$6024$1yk2we))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6001$1yk2we
                                 '-1
                                 g$end$6021$1yk2we)))))
                         (g$bitwise-arithmetic-shift-left$6001$1yk2we
                           '-1
                           g$start$6020$1yk2we))))
                     g$ei4$6018$1yk2we)))
                 g$ei3$6017$1yk2we)))
             g$ei2$6016$1yk2we)))
         g$ei1$6015$1yk2we))))
   (g$bitwise-arithmetic-shift-left$6001$1yk2we
     g$bitwise-arithmetic-shift-left$6048$1yk2we
     (case-lambda
       ((g$ei1$6026$1yk2we g$ei2$6027$1yk2we)
        (bitwise-arithmetic-shift g$ei1$6026$1yk2we g$ei2$6027$1yk2we))))
   (g$bitwise-arithmetic-shift-right$6002$1yk2we
     g$bitwise-arithmetic-shift-right$6049$1yk2we
     (case-lambda
       ((g$ei1$6028$1yk2we g$ei2$6029$1yk2we)
        (bitwise-arithmetic-shift g$ei1$6028$1yk2we (- g$ei2$6029$1yk2we)))))
   (g$bitwise-rotate-bit-field$6003$1yk2we
     g$bitwise-rotate-bit-field$6050$1yk2we
     (case-lambda
       ((g$ei1$6030$1yk2we
          g$ei2$6031$1yk2we
          g$ei3$6032$1yk2we
          g$ei4$6033$1yk2we)
        ((case-lambda
           ((g$n$6034$1yk2we)
            ((case-lambda
               ((g$start$6035$1yk2we)
                ((case-lambda
                   ((g$end$6036$1yk2we)
                    ((case-lambda
                       ((g$count$6037$1yk2we)
                        ((case-lambda
                           ((g$width$6038$1yk2we)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6038$1yk2we)
                                  ((case-lambda
                                     ((g$count$6039$1yk2we)
                                      ((case-lambda
                                         ((g$field0$6040$1yk2we)
                                          ((case-lambda
                                             ((g$field1$6041$1yk2we)
                                              ((case-lambda
                                                 ((g$field2$6042$1yk2we)
                                                  ((case-lambda
                                                     ((g$field$6043$1yk2we)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6000$1yk2we
                                                            g$n$6034$1yk2we
                                                            g$start$6035$1yk2we
                                                            g$end$6036$1yk2we
                                                            g$field$6043$1yk2we))))))
                                                   (bitwise-ior
                                                     g$field1$6041$1yk2we
                                                     g$field2$6042$1yk2we))))
                                               (g$bitwise-arithmetic-shift-right$6002$1yk2we
                                                 g$field0$6040$1yk2we
                                                 (- g$width$6038$1yk2we
                                                    g$count$6039$1yk2we)))))
                                           (g$bitwise-arithmetic-shift-left$6001$1yk2we
                                             g$field0$6040$1yk2we
                                             g$count$6039$1yk2we))))
                                       (g$bitwise-bit-field$5999$1yk2we
                                         g$n$6034$1yk2we
                                         g$start$6035$1yk2we
                                         g$end$6036$1yk2we))))
                                   (mod g$count$6037$1yk2we
                                        g$width$6038$1yk2we))
                                  g$n$6034$1yk2we))))))
                         (- g$end$6036$1yk2we g$start$6035$1yk2we))))
                     g$ei4$6033$1yk2we)))
                 g$ei3$6032$1yk2we)))
             g$ei2$6031$1yk2we)))
         g$ei1$6030$1yk2we)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6051$1yk2we
     g$fxif$6098$1yk2we
     (case-lambda
       ((g$fx1$6058$1yk2we g$fx2$6059$1yk2we g$fx3$6060$1yk2we)
        (fxior
          (fxand g$fx1$6058$1yk2we g$fx2$6059$1yk2we)
          (fxand (fxnot g$fx1$6058$1yk2we) g$fx3$6060$1yk2we)))))
   (g$fxcopy-bit$6052$1yk2we
     g$fxcopy-bit$6099$1yk2we
     (case-lambda
       ((g$fx1$6061$1yk2we g$fx2$6062$1yk2we g$fx3$6063$1yk2we)
        ((case-lambda
           ((g$mask$6064$1yk2we)
            ((case-lambda
               (()
                (g$fxif$6051$1yk2we
                  g$mask$6064$1yk2we
                  (g$fxarithmetic-shift-left$6055$1yk2we
                    g$fx3$6063$1yk2we
                    g$fx2$6062$1yk2we)
                  g$fx1$6061$1yk2we))))))
         (g$fxarithmetic-shift-left$6055$1yk2we '1 g$fx2$6062$1yk2we)))))
   (g$fxbit-field$6053$1yk2we
     g$fxbit-field$6100$1yk2we
     (case-lambda
       ((g$fx1$6065$1yk2we g$fx2$6066$1yk2we g$fx3$6067$1yk2we)
        ((case-lambda
           ((g$mask$6068$1yk2we)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6056$1yk2we
                  (fxand g$fx1$6065$1yk2we g$mask$6068$1yk2we)
                  g$fx2$6066$1yk2we))))))
         (fxnot
           (g$fxarithmetic-shift-left$6055$1yk2we '-1 g$fx3$6067$1yk2we))))))
   (g$fxcopy-bit-field$6054$1yk2we
     g$fxcopy-bit-field$6101$1yk2we
     (case-lambda
       ((g$fx1$6069$1yk2we
          g$fx2$6070$1yk2we
          g$fx3$6071$1yk2we
          g$fx4$6072$1yk2we)
        ((case-lambda
           ((g$to$6073$1yk2we)
            ((case-lambda
               ((g$start$6074$1yk2we)
                ((case-lambda
                   ((g$end$6075$1yk2we)
                    ((case-lambda
                       ((g$from$6076$1yk2we)
                        ((case-lambda
                           ((g$mask1$6077$1yk2we)
                            ((case-lambda
                               ((g$mask2$6078$1yk2we)
                                ((case-lambda
                                   ((g$mask$6079$1yk2we)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6051$1yk2we
                                          g$mask$6079$1yk2we
                                          (g$fxarithmetic-shift-left$6055$1yk2we
                                            g$from$6076$1yk2we
                                            g$start$6074$1yk2we)
                                          g$to$6073$1yk2we))))))
                                 (fxand
                                   g$mask1$6077$1yk2we
                                   g$mask2$6078$1yk2we))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6055$1yk2we
                                 '-1
                                 g$end$6075$1yk2we)))))
                         (g$fxarithmetic-shift-left$6055$1yk2we
                           '-1
                           g$start$6074$1yk2we))))
                     g$fx4$6072$1yk2we)))
                 g$fx3$6071$1yk2we)))
             g$fx2$6070$1yk2we)))
         g$fx1$6069$1yk2we))))
   (g$fxarithmetic-shift-left$6055$1yk2we
     g$fxarithmetic-shift-left$6102$1yk2we
     (case-lambda
       ((g$fx1$6080$1yk2we g$fx2$6081$1yk2we)
        (fxarithmetic-shift g$fx1$6080$1yk2we g$fx2$6081$1yk2we))))
   (g$fxarithmetic-shift-right$6056$1yk2we
     g$fxarithmetic-shift-right$6103$1yk2we
     (case-lambda
       ((g$fx1$6082$1yk2we g$fx2$6083$1yk2we)
        (fxarithmetic-shift g$fx1$6082$1yk2we (- g$fx2$6083$1yk2we)))))
   (g$fxrotate-bit-field$6057$1yk2we
     g$fxrotate-bit-field$6104$1yk2we
     (case-lambda
       ((g$fx1$6084$1yk2we
          g$fx2$6085$1yk2we
          g$fx3$6086$1yk2we
          g$fx4$6087$1yk2we)
        ((case-lambda
           ((g$n$6088$1yk2we)
            ((case-lambda
               ((g$start$6089$1yk2we)
                ((case-lambda
                   ((g$end$6090$1yk2we)
                    ((case-lambda
                       ((g$count$6091$1yk2we)
                        ((case-lambda
                           ((g$width$6092$1yk2we)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6092$1yk2we)
                                  ((case-lambda
                                     ((g$count$6093$1yk2we)
                                      ((case-lambda
                                         ((g$field0$6094$1yk2we)
                                          ((case-lambda
                                             ((g$field1$6095$1yk2we)
                                              ((case-lambda
                                                 ((g$field2$6096$1yk2we)
                                                  ((case-lambda
                                                     ((g$field$6097$1yk2we)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6054$1yk2we
                                                            g$n$6088$1yk2we
                                                            g$start$6089$1yk2we
                                                            g$end$6090$1yk2we
                                                            g$field$6097$1yk2we))))))
                                                   (fxior
                                                     g$field1$6095$1yk2we
                                                     g$field2$6096$1yk2we))))
                                               (g$fxarithmetic-shift-right$6056$1yk2we
                                                 g$field0$6094$1yk2we
                                                 (- g$width$6092$1yk2we
                                                    g$count$6093$1yk2we)))))
                                           (g$fxarithmetic-shift-left$6055$1yk2we
                                             g$field0$6094$1yk2we
                                             g$count$6093$1yk2we))))
                                       (g$fxbit-field$6053$1yk2we
                                         g$n$6088$1yk2we
                                         g$start$6089$1yk2we
                                         g$end$6090$1yk2we))))
                                   (mod g$count$6091$1yk2we
                                        g$width$6092$1yk2we))
                                  g$n$6088$1yk2we))))))
                         (- g$end$6090$1yk2we g$start$6089$1yk2we))))
                     g$fx4$6087$1yk2we)))
                 g$fx3$6086$1yk2we)))
             g$fx2$6085$1yk2we)))
         g$fx1$6084$1yk2we)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7172$6105$1yk2we
     g$7172$6117$1yk2we
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7175$1yk2we
       '#f
       '#f
       '#()))
   (g$7174$6106$1yk2we g$7174$6118$1yk2we '#f)
   (g$7173$6107$1yk2we
     g$7173$6119$1yk2we
     (make-record-constructor-descriptor
       g$7172$6105$1yk2we
       &implementation-restriction-rcd
       g$7174$6106$1yk2we))
   (g$7171$6108$1yk2we
     g$7171$6120$1yk2we
     (record-predicate g$7172$6105$1yk2we))
   (g$make-no-infinities-violation$6109$1yk2we
     g$make-no-infinities-violation$6121$1yk2we
     (record-constructor g$7173$6107$1yk2we))
   (g$no-infinities-violation?$6110$1yk2we
     g$no-infinities-violation?$6122$1yk2we
     (condition-predicate g$7172$6105$1yk2we))
   (g$7186$6111$1yk2we
     g$7186$6123$1yk2we
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7189$1yk2we
       '#f
       '#f
       '#()))
   (g$7188$6112$1yk2we g$7188$6124$1yk2we '#f)
   (g$7187$6113$1yk2we
     g$7187$6125$1yk2we
     (make-record-constructor-descriptor
       g$7186$6111$1yk2we
       &implementation-restriction-rcd
       g$7188$6112$1yk2we))
   (g$7185$6114$1yk2we
     g$7185$6126$1yk2we
     (record-predicate g$7186$6111$1yk2we))
   (g$make-no-nans-violation$6115$1yk2we
     g$make-no-nans-violation$6127$1yk2we
     (record-constructor g$7187$6113$1yk2we))
   (g$no-nans-violation?$6116$1yk2we
     g$no-nans-violation?$6128$1yk2we
     (condition-predicate g$7186$6111$1yk2we)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7201$6129$1yk2we
     g$7201$6209$1yk2we
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7204$1yk2we
       '#f
       '#f
       '#()))
   (g$7203$6130$1yk2we g$7203$6210$1yk2we '#f)
   (g$7202$6131$1yk2we
     g$7202$6211$1yk2we
     (make-record-constructor-descriptor
       g$7201$6129$1yk2we
       &error-rcd
       g$7203$6130$1yk2we))
   (g$7200$6132$1yk2we
     g$7200$6212$1yk2we
     (record-predicate g$7201$6129$1yk2we))
   (g$make-i/o-error$6133$1yk2we
     g$make-i/o-error$6213$1yk2we
     (record-constructor g$7202$6131$1yk2we))
   (g$i/o-error?$6134$1yk2we
     g$i/o-error?$6214$1yk2we
     (condition-predicate g$7201$6129$1yk2we))
   (g$7215$6135$1yk2we
     g$7215$6215$1yk2we
     (make-record-type-descriptor
       '&i/o-read
       g$7201$6129$1yk2we
       'g$7218$1yk2we
       '#f
       '#f
       '#()))
   (g$7217$6136$1yk2we g$7217$6216$1yk2we '#f)
   (g$7216$6137$1yk2we
     g$7216$6217$1yk2we
     (make-record-constructor-descriptor
       g$7215$6135$1yk2we
       g$7202$6131$1yk2we
       g$7217$6136$1yk2we))
   (g$7214$6138$1yk2we
     g$7214$6218$1yk2we
     (record-predicate g$7215$6135$1yk2we))
   (g$make-i/o-read-error$6139$1yk2we
     g$make-i/o-read-error$6219$1yk2we
     (record-constructor g$7216$6137$1yk2we))
   (g$i/o-read-error?$6140$1yk2we
     g$i/o-read-error?$6220$1yk2we
     (condition-predicate g$7215$6135$1yk2we))
   (g$7229$6141$1yk2we
     g$7229$6221$1yk2we
     (make-record-type-descriptor
       '&i/o-write
       g$7201$6129$1yk2we
       'g$7232$1yk2we
       '#f
       '#f
       '#()))
   (g$7231$6142$1yk2we g$7231$6222$1yk2we '#f)
   (g$7230$6143$1yk2we
     g$7230$6223$1yk2we
     (make-record-constructor-descriptor
       g$7229$6141$1yk2we
       g$7202$6131$1yk2we
       g$7231$6142$1yk2we))
   (g$7228$6144$1yk2we
     g$7228$6224$1yk2we
     (record-predicate g$7229$6141$1yk2we))
   (g$make-i/o-write-error$6145$1yk2we
     g$make-i/o-write-error$6225$1yk2we
     (record-constructor g$7230$6143$1yk2we))
   (g$i/o-write-error?$6146$1yk2we
     g$i/o-write-error?$6226$1yk2we
     (condition-predicate g$7229$6141$1yk2we))
   (g$7244$6147$1yk2we
     g$7244$6227$1yk2we
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7201$6129$1yk2we
       'g$7247$1yk2we
       '#f
       '#f
       '#((immutable position))))
   (g$7246$6148$1yk2we g$7246$6228$1yk2we '#f)
   (g$7245$6149$1yk2we
     g$7245$6229$1yk2we
     (make-record-constructor-descriptor
       g$7244$6147$1yk2we
       g$7202$6131$1yk2we
       g$7246$6148$1yk2we))
   (g$7243$6150$1yk2we
     g$7243$6230$1yk2we
     (record-predicate g$7244$6147$1yk2we))
   (g$make-i/o-invalid-position-error$6151$1yk2we
     g$make-i/o-invalid-position-error$6231$1yk2we
     (record-constructor g$7245$6149$1yk2we))
   (g$7242$6152$1yk2we
     g$7242$6232$1yk2we
     (record-accessor g$7244$6147$1yk2we '0))
   (g$i/o-invalid-position-error?$6153$1yk2we
     g$i/o-invalid-position-error?$6233$1yk2we
     (condition-predicate g$7244$6147$1yk2we))
   (g$i/o-error-position$6154$1yk2we
     g$i/o-error-position$6234$1yk2we
     (condition-accessor g$7244$6147$1yk2we g$7242$6152$1yk2we))
   (g$7261$6155$1yk2we
     g$7261$6235$1yk2we
     (make-record-type-descriptor
       '&i/o-filename
       g$7201$6129$1yk2we
       'g$7264$1yk2we
       '#f
       '#f
       '#((immutable filename))))
   (g$7263$6156$1yk2we g$7263$6236$1yk2we '#f)
   (g$7262$6157$1yk2we
     g$7262$6237$1yk2we
     (make-record-constructor-descriptor
       g$7261$6155$1yk2we
       g$7202$6131$1yk2we
       g$7263$6156$1yk2we))
   (g$7260$6158$1yk2we
     g$7260$6238$1yk2we
     (record-predicate g$7261$6155$1yk2we))
   (g$make-i/o-filename-error$6159$1yk2we
     g$make-i/o-filename-error$6239$1yk2we
     (record-constructor g$7262$6157$1yk2we))
   (g$7259$6160$1yk2we
     g$7259$6240$1yk2we
     (record-accessor g$7261$6155$1yk2we '0))
   (g$i/o-filename-error?$6161$1yk2we
     g$i/o-filename-error?$6241$1yk2we
     (condition-predicate g$7261$6155$1yk2we))
   (g$i/o-error-filename$6162$1yk2we
     g$i/o-error-filename$6242$1yk2we
     (condition-accessor g$7261$6155$1yk2we g$7259$6160$1yk2we))
   (g$7277$6163$1yk2we
     g$7277$6243$1yk2we
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7261$6155$1yk2we
       'g$7280$1yk2we
       '#f
       '#f
       '#()))
   (g$7279$6164$1yk2we g$7279$6244$1yk2we '#f)
   (g$7278$6165$1yk2we
     g$7278$6245$1yk2we
     (make-record-constructor-descriptor
       g$7277$6163$1yk2we
       g$7262$6157$1yk2we
       g$7279$6164$1yk2we))
   (g$7276$6166$1yk2we
     g$7276$6246$1yk2we
     (record-predicate g$7277$6163$1yk2we))
   (g$make-i/o-file-protection-error$6167$1yk2we
     g$make-i/o-file-protection-error$6247$1yk2we
     (record-constructor g$7278$6165$1yk2we))
   (g$i/o-file-protection-error?$6168$1yk2we
     g$i/o-file-protection-error?$6248$1yk2we
     (condition-predicate g$7277$6163$1yk2we))
   (g$7291$6169$1yk2we
     g$7291$6249$1yk2we
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7277$6163$1yk2we
       'g$7294$1yk2we
       '#f
       '#f
       '#()))
   (g$7293$6170$1yk2we g$7293$6250$1yk2we '#f)
   (g$7292$6171$1yk2we
     g$7292$6251$1yk2we
     (make-record-constructor-descriptor
       g$7291$6169$1yk2we
       g$7278$6165$1yk2we
       g$7293$6170$1yk2we))
   (g$7290$6172$1yk2we
     g$7290$6252$1yk2we
     (record-predicate g$7291$6169$1yk2we))
   (g$make-i/o-file-is-read-only-error$6173$1yk2we
     g$make-i/o-file-is-read-only-error$6253$1yk2we
     (record-constructor g$7292$6171$1yk2we))
   (g$i/o-file-is-read-only-error?$6174$1yk2we
     g$i/o-file-is-read-only-error?$6254$1yk2we
     (condition-predicate g$7291$6169$1yk2we))
   (g$7305$6175$1yk2we
     g$7305$6255$1yk2we
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7261$6155$1yk2we
       'g$7308$1yk2we
       '#f
       '#f
       '#()))
   (g$7307$6176$1yk2we g$7307$6256$1yk2we '#f)
   (g$7306$6177$1yk2we
     g$7306$6257$1yk2we
     (make-record-constructor-descriptor
       g$7305$6175$1yk2we
       g$7262$6157$1yk2we
       g$7307$6176$1yk2we))
   (g$7304$6178$1yk2we
     g$7304$6258$1yk2we
     (record-predicate g$7305$6175$1yk2we))
   (g$make-i/o-file-already-exists-error$6179$1yk2we
     g$make-i/o-file-already-exists-error$6259$1yk2we
     (record-constructor g$7306$6177$1yk2we))
   (g$i/o-file-already-exists-error?$6180$1yk2we
     g$i/o-file-already-exists-error?$6260$1yk2we
     (condition-predicate g$7305$6175$1yk2we))
   (g$7319$6181$1yk2we
     g$7319$6261$1yk2we
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7261$6155$1yk2we
       'g$7322$1yk2we
       '#f
       '#f
       '#()))
   (g$7321$6182$1yk2we g$7321$6262$1yk2we '#f)
   (g$7320$6183$1yk2we
     g$7320$6263$1yk2we
     (make-record-constructor-descriptor
       g$7319$6181$1yk2we
       g$7262$6157$1yk2we
       g$7321$6182$1yk2we))
   (g$7318$6184$1yk2we
     g$7318$6264$1yk2we
     (record-predicate g$7319$6181$1yk2we))
   (g$make-i/o-file-does-not-exist-error$6185$1yk2we
     g$make-i/o-file-does-not-exist-error$6265$1yk2we
     (record-constructor g$7320$6183$1yk2we))
   (g$i/o-file-does-not-exist-error?$6186$1yk2we
     g$i/o-file-does-not-exist-error?$6266$1yk2we
     (condition-predicate g$7319$6181$1yk2we))
   (g$7334$6187$1yk2we
     g$7334$6267$1yk2we
     (make-record-type-descriptor
       '&i/o-port
       g$7201$6129$1yk2we
       'g$7337$1yk2we
       '#f
       '#f
       '#((immutable port))))
   (g$7336$6188$1yk2we g$7336$6268$1yk2we '#f)
   (g$7335$6189$1yk2we
     g$7335$6269$1yk2we
     (make-record-constructor-descriptor
       g$7334$6187$1yk2we
       g$7202$6131$1yk2we
       g$7336$6188$1yk2we))
   (g$7333$6190$1yk2we
     g$7333$6270$1yk2we
     (record-predicate g$7334$6187$1yk2we))
   (g$make-i/o-port-error$6191$1yk2we
     g$make-i/o-port-error$6271$1yk2we
     (record-constructor g$7335$6189$1yk2we))
   (g$7332$6192$1yk2we
     g$7332$6272$1yk2we
     (record-accessor g$7334$6187$1yk2we '0))
   (g$i/o-port-error?$6193$1yk2we
     g$i/o-port-error?$6273$1yk2we
     (condition-predicate g$7334$6187$1yk2we))
   (g$i/o-error-port$6194$1yk2we
     g$i/o-error-port$6274$1yk2we
     (condition-accessor g$7334$6187$1yk2we g$7332$6192$1yk2we))
   (g$7350$6195$1yk2we
     g$7350$6275$1yk2we
     (make-record-type-descriptor
       '&i/o-decoding
       g$7334$6187$1yk2we
       'g$7353$1yk2we
       '#f
       '#f
       '#()))
   (g$7352$6196$1yk2we g$7352$6276$1yk2we '#f)
   (g$7351$6197$1yk2we
     g$7351$6277$1yk2we
     (make-record-constructor-descriptor
       g$7350$6195$1yk2we
       g$7335$6189$1yk2we
       g$7352$6196$1yk2we))
   (g$7349$6198$1yk2we
     g$7349$6278$1yk2we
     (record-predicate g$7350$6195$1yk2we))
   (g$make-i/o-decoding-error$6199$1yk2we
     g$make-i/o-decoding-error$6279$1yk2we
     (record-constructor g$7351$6197$1yk2we))
   (g$i/o-decoding-error?$6200$1yk2we
     g$i/o-decoding-error?$6280$1yk2we
     (condition-predicate g$7350$6195$1yk2we))
   (g$7365$6201$1yk2we
     g$7365$6281$1yk2we
     (make-record-type-descriptor
       '&i/o-encoding
       g$7334$6187$1yk2we
       'g$7368$1yk2we
       '#f
       '#f
       '#((immutable char))))
   (g$7367$6202$1yk2we g$7367$6282$1yk2we '#f)
   (g$7366$6203$1yk2we
     g$7366$6283$1yk2we
     (make-record-constructor-descriptor
       g$7365$6201$1yk2we
       g$7335$6189$1yk2we
       g$7367$6202$1yk2we))
   (g$7364$6204$1yk2we
     g$7364$6284$1yk2we
     (record-predicate g$7365$6201$1yk2we))
   (g$make-i/o-encoding-error$6205$1yk2we
     g$make-i/o-encoding-error$6285$1yk2we
     (record-constructor g$7366$6203$1yk2we))
   (g$7363$6206$1yk2we
     g$7363$6286$1yk2we
     (record-accessor g$7365$6201$1yk2we '0))
   (g$i/o-encoding-error?$6207$1yk2we
     g$i/o-encoding-error?$6287$1yk2we
     (condition-predicate g$7365$6201$1yk2we))
   (g$i/o-encoding-error-char$6208$1yk2we
     g$i/o-encoding-error-char$6288$1yk2we
     (condition-accessor g$7365$6201$1yk2we g$7363$6206$1yk2we)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6289$1yk2we
     g$get-output-string$6297$1yk2we
     (case-lambda
       ((g$port$6293$1yk2we)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6293$1yk2we))))
   (g$open-output-string$6290$1yk2we
     g$open-output-string$6298$1yk2we
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6291$1yk2we
     g$open-string-output-port$6299$1yk2we
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6294$1yk2we)
            (values
              g$p$6294$1yk2we
              (case-lambda
                (() (g$get-output-string$6289$1yk2we g$p$6294$1yk2we))))))
         (g$open-output-string$6290$1yk2we)))))
   (g$port?$6292$1yk2we
     g$port?$6300$1yk2we
     (case-lambda
       ((g$obj$6295$1yk2we)
        ((case-lambda
           ((g$t$6296$1yk2we)
            (if g$t$6296$1yk2we
              g$t$6296$1yk2we
              (begin '#f (binary-port? g$obj$6295$1yk2we)))))
         (textual-port? g$obj$6295$1yk2we))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6307$1yk2we
     g$with-input-from-file$6333$1yk2we
     (case-lambda
       ((g$filename$6311$1yk2we g$thunk$6312$1yk2we)
        ((case-lambda
           ((g$current-input-port$6315$1yk2we g$t$6316$1yk2we)
            ((case-lambda
               ((g$swap$6317$1yk2we)
                (dynamic-wind
                  g$swap$6317$1yk2we
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6312$1yk2we)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6317$1yk2we)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6318$1yk2we)
                    (begin
                      (g$current-input-port$6315$1yk2we g$t$6316$1yk2we)
                      (set! g$t$6316$1yk2we g$t$6318$1yk2we))))
                 (g$current-input-port$6315$1yk2we)))))))
         current-input-port
         (open-input-file g$filename$6311$1yk2we)))))
   (g$with-output-to-file$6308$1yk2we
     g$with-output-to-file$6334$1yk2we
     (case-lambda
       ((g$filename$6319$1yk2we g$thunk$6320$1yk2we)
        ((case-lambda
           ((g$current-output-port$6323$1yk2we g$t$6324$1yk2we)
            ((case-lambda
               ((g$swap$6325$1yk2we)
                (dynamic-wind
                  g$swap$6325$1yk2we
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6320$1yk2we)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6325$1yk2we)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6326$1yk2we)
                    (begin
                      (g$current-output-port$6323$1yk2we g$t$6324$1yk2we)
                      (set! g$t$6324$1yk2we g$t$6326$1yk2we))))
                 (g$current-output-port$6323$1yk2we)))))))
         current-output-port
         (open-output-file g$filename$6319$1yk2we)))))
   (g$call-with-input-file$6309$1yk2we
     g$call-with-input-file$6335$1yk2we
     (case-lambda
       ((g$filename$6327$1yk2we g$proc$6328$1yk2we)
        ((case-lambda
           ((g$p$6329$1yk2we)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6328$1yk2we g$p$6329$1yk2we)))
              (case-lambda (() (close-input-port g$p$6329$1yk2we))))))
         (open-input-file g$filename$6327$1yk2we)))))
   (g$call-with-output-file$6310$1yk2we
     g$call-with-output-file$6336$1yk2we
     (case-lambda
       ((g$filename$6330$1yk2we g$proc$6331$1yk2we)
        ((case-lambda
           ((g$p$6332$1yk2we)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6331$1yk2we g$p$6332$1yk2we)))
              (case-lambda (() (close-output-port g$p$6332$1yk2we))))))
         (open-output-file g$filename$6330$1yk2we))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7432$6337$1yk2we
     g$7432$6445$1yk2we
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7434$6338$1yk2we g$7434$6446$1yk2we '#f)
   (g$7433$6339$1yk2we
     g$7433$6447$1yk2we
     (make-record-constructor-descriptor
       g$7432$6337$1yk2we
       '#f
       g$7434$6338$1yk2we))
   (g$enum?$6340$1yk2we
     g$enum?$6448$1yk2we
     (record-predicate g$7432$6337$1yk2we))
   (g$make-enum$6341$1yk2we
     g$make-enum$6449$1yk2we
     (record-constructor g$7433$6339$1yk2we))
   (g$enum-value$6342$1yk2we
     g$enum-value$6450$1yk2we
     (record-accessor g$7432$6337$1yk2we '0))
   (g$enum-info$6343$1yk2we
     g$enum-info$6451$1yk2we
     (record-accessor g$7432$6337$1yk2we '1))
   (g$7445$6344$1yk2we
     g$7445$6452$1yk2we
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7447$6345$1yk2we g$7447$6453$1yk2we '#f)
   (g$7446$6346$1yk2we
     g$7446$6454$1yk2we
     (make-record-constructor-descriptor
       g$7445$6344$1yk2we
       '#f
       g$7447$6345$1yk2we))
   (g$enum-universe?$6347$1yk2we
     g$enum-universe?$6455$1yk2we
     (record-predicate g$7445$6344$1yk2we))
   (g$make-enum-universe$6348$1yk2we
     g$make-enum-universe$6456$1yk2we
     (record-constructor g$7446$6346$1yk2we))
   (g$enum-universe-id$6349$1yk2we
     g$enum-universe-id$6457$1yk2we
     (record-accessor g$7445$6344$1yk2we '0))
   (g$enum-universe-symbols$6350$1yk2we
     g$enum-universe-symbols$6458$1yk2we
     (record-accessor g$7445$6344$1yk2we '1))
   (g$enum-universe-mapping$6351$1yk2we
     g$enum-universe-mapping$6459$1yk2we
     (record-accessor g$7445$6344$1yk2we '2))
   (g$enum-universe-value$6352$1yk2we
     g$enum-universe-value$6460$1yk2we
     (record-accessor g$7445$6344$1yk2we '3))
   (g$enum-type=?$6353$1yk2we
     g$enum-type=?$6461$1yk2we
     (case-lambda
       ((g$enumset1$6374$1yk2we g$enumset2$6375$1yk2we)
        (eq? (g$enum-universe-id$6349$1yk2we
               (g$enum-info$6343$1yk2we g$enumset1$6374$1yk2we))
             (g$enum-universe-id$6349$1yk2we
               (g$enum-info$6343$1yk2we g$enumset2$6375$1yk2we))))))
   (g$get-symbols$6354$1yk2we
     g$get-symbols$6462$1yk2we
     (case-lambda
       ((g$enumset$6376$1yk2we)
        (g$enum-universe-symbols$6350$1yk2we
          (g$enum-info$6343$1yk2we g$enumset$6376$1yk2we)))))
   (g$get-value$6355$1yk2we
     g$get-value$6463$1yk2we
     (case-lambda
       ((g$enumset$6377$1yk2we g$s$6378$1yk2we)
        (g$hashtable-ref$5276$1yk2we
          (g$enum-universe-mapping$6351$1yk2we
            (g$enum-info$6343$1yk2we g$enumset$6377$1yk2we))
          g$s$6378$1yk2we
          '#f))))
   (g$assert-enum$6356$1yk2we
     g$assert-enum$6464$1yk2we
     (case-lambda
       ((g$who$6379$1yk2we g$enumset$6380$1yk2we)
        (if (not (g$enum?$6340$1yk2we g$enumset$6380$1yk2we))
          (assertion-violation
            g$who$6379$1yk2we
            '"not an enumeration"
            g$enumset$6380$1yk2we)
          (void)))))
   (g$make-info$6357$1yk2we
     g$make-info$6465$1yk2we
     (case-lambda
       ((g$symbols$6381$1yk2we)
        ((case-lambda
           ((g$ht$6382$1yk2we)
            ((letrec ((g$f$6383$1yk2we
                        (case-lambda
                          ((g$s$6384$1yk2we g$a$6385$1yk2we g$mask$6386$1yk2we)
                           (if (null? g$s$6384$1yk2we)
                             (values
                               (reverse! g$a$6385$1yk2we)
                               g$ht$6382$1yk2we
                               (- g$mask$6386$1yk2we '1))
                             ((case-lambda
                                ((g$n$6387$1yk2we)
                                 (if (symbol? g$n$6387$1yk2we)
                                   (if (g$hashtable-contains?$5279$1yk2we
                                         g$ht$6382$1yk2we
                                         g$n$6387$1yk2we)
                                     (g$f$6383$1yk2we
                                       (cdr g$s$6384$1yk2we)
                                       g$a$6385$1yk2we
                                       g$mask$6386$1yk2we)
                                     (begin
                                       (g$hashtable-set!$5277$1yk2we
                                         g$ht$6382$1yk2we
                                         g$n$6387$1yk2we
                                         g$mask$6386$1yk2we)
                                       (g$f$6383$1yk2we
                                         (cdr g$s$6384$1yk2we)
                                         (cons g$n$6387$1yk2we g$a$6385$1yk2we)
                                         (g$bitwise-arithmetic-shift-left$6048$1yk2we
                                           g$mask$6386$1yk2we
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6387$1yk2we))))
                              (car g$s$6384$1yk2we)))))))
               g$f$6383$1yk2we)
             g$symbols$6381$1yk2we
             '()
             '1)))
         (g$make-eq-hashtable$5273$1yk2we)))))
   (g$make-name$6358$1yk2we
     g$make-name$6466$1yk2we
     (case-lambda
       ((g$symbols$6388$1yk2we)
        (string->symbol (g$format$6505$1yk2we '"~a" g$symbols$6388$1yk2we)))))
   (g$make-enumeration$6359$1yk2we
     g$make-enumeration$6467$1yk2we
     (case-lambda
       ((g$symbols$6389$1yk2we)
        (call-with-values
          (case-lambda (() (g$make-info$6357$1yk2we g$symbols$6389$1yk2we)))
          (case-lambda
            ((g$s$6393$1yk2we g$mapping$6394$1yk2we g$mask$6395$1yk2we)
             ((case-lambda
                ((g$mask$6396$1yk2we g$mapping$6397$1yk2we g$s$6398$1yk2we)
                 (g$make-enum$6341$1yk2we
                   g$mask$6396$1yk2we
                   (g$make-enum-universe$6348$1yk2we
                     (g$make-name$6358$1yk2we g$s$6398$1yk2we)
                     g$s$6398$1yk2we
                     g$mapping$6397$1yk2we
                     g$mask$6396$1yk2we))))
              g$mask$6395$1yk2we
              g$mapping$6394$1yk2we
              g$s$6393$1yk2we)))))))
   (g$enum-set-universe$6360$1yk2we
     g$enum-set-universe$6468$1yk2we
     (case-lambda
       ((g$enumset$6399$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we 'enum-set-universe g$enumset$6399$1yk2we)
          ((case-lambda
             ((g$ei$6400$1yk2we)
              (g$make-enum$6341$1yk2we
                (g$enum-universe-value$6352$1yk2we g$ei$6400$1yk2we)
                g$ei$6400$1yk2we)))
           (g$enum-info$6343$1yk2we g$enumset$6399$1yk2we))))))
   (g$enum-set-indexer$6361$1yk2we
     g$enum-set-indexer$6469$1yk2we
     (case-lambda
       ((g$enumset$6401$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we 'enum-set-indexer g$enumset$6401$1yk2we)
          (case-lambda
            ((g$symbol$6402$1yk2we)
             (begin
               (if (not (symbol? g$symbol$6402$1yk2we))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6402$1yk2we)
                 (void))
               ((case-lambda
                  ((g$v$6403$1yk2we)
                   (if g$v$6403$1yk2we
                     (- (bitwise-length g$v$6403$1yk2we) '1)
                     '#f)))
                (g$get-value$6355$1yk2we
                  g$enumset$6401$1yk2we
                  g$symbol$6402$1yk2we)))))))))
   (g$enum-set-constructor$6362$1yk2we
     g$enum-set-constructor$6470$1yk2we
     (case-lambda
       ((g$enumset$6404$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we
            'enum-set-constructor
            g$enumset$6404$1yk2we)
          (case-lambda
            ((g$symbols$6405$1yk2we)
             ((letrec ((g$f$6406$1yk2we
                         (case-lambda
                           ((g$v$6407$1yk2we g$s$6408$1yk2we)
                            (if (null? g$s$6408$1yk2we)
                              (g$make-enum$6341$1yk2we
                                g$v$6407$1yk2we
                                (g$enum-info$6343$1yk2we g$enumset$6404$1yk2we))
                              ((case-lambda
                                 ((g$n$6409$1yk2we)
                                  (if (symbol? g$n$6409$1yk2we)
                                    ((case-lambda
                                       ((g$v*$6410$1yk2we)
                                        (if g$v*$6410$1yk2we
                                          (g$f$6406$1yk2we
                                            (bitwise-ior
                                              g$v$6407$1yk2we
                                              g$v*$6410$1yk2we)
                                            (cdr g$s$6408$1yk2we))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6409$1yk2we))))
                                     (g$get-value$6355$1yk2we
                                       g$enumset$6404$1yk2we
                                       g$n$6409$1yk2we))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6409$1yk2we))))
                               (car g$s$6408$1yk2we)))))))
                g$f$6406$1yk2we)
              '0
              g$symbols$6405$1yk2we)))))))
   (g$enum-set->list$6363$1yk2we
     g$enum-set->list$6471$1yk2we
     (case-lambda
       ((g$enumset$6411$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we 'enum-set->list g$enumset$6411$1yk2we)
          ((case-lambda
             ((g$value$6412$1yk2we)
              ((letrec ((g$f$6413$1yk2we
                          (case-lambda
                            ((g$s$6414$1yk2we g$l$6415$1yk2we)
                             (if (null? g$s$6414$1yk2we)
                               (reverse! g$l$6415$1yk2we)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6355$1yk2we
                                         g$enumset$6411$1yk2we
                                         (car g$s$6414$1yk2we))
                                       g$value$6412$1yk2we))
                                 (g$f$6413$1yk2we
                                   (cdr g$s$6414$1yk2we)
                                   g$l$6415$1yk2we)
                                 (g$f$6413$1yk2we
                                   (cdr g$s$6414$1yk2we)
                                   (cons
                                     (car g$s$6414$1yk2we)
                                     g$l$6415$1yk2we))))))))
                 g$f$6413$1yk2we)
               (g$get-symbols$6354$1yk2we g$enumset$6411$1yk2we)
               '())))
           (g$enum-value$6342$1yk2we g$enumset$6411$1yk2we))))))
   (g$enum-set-member?$6364$1yk2we
     g$enum-set-member?$6472$1yk2we
     (case-lambda
       ((g$symbol$6416$1yk2we g$enumset$6417$1yk2we)
        (begin
          (if (not (symbol? g$symbol$6416$1yk2we))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6416$1yk2we)
            (void))
          (g$assert-enum$6356$1yk2we 'enum-set-member? g$enumset$6417$1yk2we)
          ((case-lambda
             ((g$v$6418$1yk2we)
              (if g$v$6418$1yk2we
                (not (zero?
                       (bitwise-and
                         g$v$6418$1yk2we
                         (g$enum-value$6342$1yk2we g$enumset$6417$1yk2we))))
                '#f)))
           (g$get-value$6355$1yk2we
             g$enumset$6417$1yk2we
             g$symbol$6416$1yk2we))))))
   (g$enum-set-subset?$6365$1yk2we
     g$enum-set-subset?$6473$1yk2we
     (case-lambda
       ((g$enumset1$6419$1yk2we g$enumset2$6420$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we 'enum-set-subset? g$enumset1$6419$1yk2we)
          (g$assert-enum$6356$1yk2we 'enum-set-subset? g$enumset2$6420$1yk2we)
          ((case-lambda
             ((g$v1$6421$1yk2we g$v2$6422$1yk2we)
              (if (g$enum-type=?$6353$1yk2we
                    g$enumset1$6419$1yk2we
                    g$enumset2$6420$1yk2we)
                (= (bitwise-and g$v1$6421$1yk2we g$v2$6422$1yk2we)
                   g$v1$6421$1yk2we)
                ((letrec ((g$f$6423$1yk2we
                            (case-lambda
                              ((g$s$6424$1yk2we)
                               (if (null? g$s$6424$1yk2we)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6425$1yk2we g$v2*$6426$1yk2we)
                                     (if g$v2*$6426$1yk2we
                                       ((case-lambda
                                          ((g$has1$6427$1yk2we
                                             g$has2$6428$1yk2we)
                                           (if (if g$has1$6427$1yk2we
                                                 (begin
                                                   '#f
                                                   (not g$has2$6428$1yk2we))
                                                 '#f)
                                             '#f
                                             (g$f$6423$1yk2we
                                               (cdr g$s$6424$1yk2we)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6421$1yk2we
                                                 g$v1*$6425$1yk2we)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6422$1yk2we
                                                 g$v2*$6426$1yk2we))))
                                       '#f)))
                                  (g$get-value$6355$1yk2we
                                    g$enumset1$6419$1yk2we
                                    (car g$s$6424$1yk2we))
                                  (g$get-value$6355$1yk2we
                                    g$enumset2$6420$1yk2we
                                    (car g$s$6424$1yk2we))))))))
                   g$f$6423$1yk2we)
                 (g$get-symbols$6354$1yk2we g$enumset1$6419$1yk2we)))))
           (g$enum-value$6342$1yk2we g$enumset1$6419$1yk2we)
           (g$enum-value$6342$1yk2we g$enumset2$6420$1yk2we))))))
   (g$enum-set=?$6366$1yk2we
     g$enum-set=?$6474$1yk2we
     (case-lambda
       ((g$enumset1$6429$1yk2we g$enumset2$6430$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we 'enum-set=? g$enumset1$6429$1yk2we)
          (g$assert-enum$6356$1yk2we 'enum-set=? g$enumset2$6430$1yk2we)
          (if (g$enum-set-subset?$6365$1yk2we
                g$enumset1$6429$1yk2we
                g$enumset2$6430$1yk2we)
            (begin
              '#f
              (g$enum-set-subset?$6365$1yk2we
                g$enumset2$6430$1yk2we
                g$enumset1$6429$1yk2we))
            '#f)))))
   (g$enum-set-union$6367$1yk2we
     g$enum-set-union$6475$1yk2we
     (case-lambda
       ((g$enumset1$6431$1yk2we g$enumset2$6432$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we 'enum-set-union g$enumset1$6431$1yk2we)
          (g$assert-enum$6356$1yk2we 'enum-set-union g$enumset2$6432$1yk2we)
          (if (g$enum-type=?$6353$1yk2we
                g$enumset1$6431$1yk2we
                g$enumset2$6432$1yk2we)
            (g$make-enum$6341$1yk2we
              (bitwise-ior
                (g$enum-value$6342$1yk2we g$enumset1$6431$1yk2we)
                (g$enum-value$6342$1yk2we g$enumset2$6432$1yk2we))
              (g$enum-info$6343$1yk2we g$enumset1$6431$1yk2we))
            '#f)))))
   (g$enum-set-intersection$6368$1yk2we
     g$enum-set-intersection$6476$1yk2we
     (case-lambda
       ((g$enumset1$6433$1yk2we g$enumset2$6434$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we
            'enum-set-intersection
            g$enumset1$6433$1yk2we)
          (g$assert-enum$6356$1yk2we
            'enum-set-intersection
            g$enumset2$6434$1yk2we)
          (if (g$enum-type=?$6353$1yk2we
                g$enumset1$6433$1yk2we
                g$enumset2$6434$1yk2we)
            (g$make-enum$6341$1yk2we
              (bitwise-and
                (g$enum-value$6342$1yk2we g$enumset1$6433$1yk2we)
                (g$enum-value$6342$1yk2we g$enumset2$6434$1yk2we))
              (g$enum-info$6343$1yk2we g$enumset1$6433$1yk2we))
            '#f)))))
   (g$enum-set-difference$6369$1yk2we
     g$enum-set-difference$6477$1yk2we
     (case-lambda
       ((g$enumset1$6435$1yk2we g$enumset2$6436$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we
            'enum-set-difference
            g$enumset1$6435$1yk2we)
          (g$assert-enum$6356$1yk2we
            'enum-set-difference
            g$enumset2$6436$1yk2we)
          (if (g$enum-type=?$6353$1yk2we
                g$enumset1$6435$1yk2we
                g$enumset2$6436$1yk2we)
            (g$make-enum$6341$1yk2we
              (bitwise-and
                (g$enum-value$6342$1yk2we g$enumset1$6435$1yk2we)
                (bitwise-not (g$enum-value$6342$1yk2we g$enumset2$6436$1yk2we)))
              (g$enum-info$6343$1yk2we g$enumset1$6435$1yk2we))
            '#f)))))
   (g$enum-set-complement$6370$1yk2we
     g$enum-set-complement$6478$1yk2we
     (case-lambda
       ((g$enumset$6437$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we 'enum-set-complement g$enumset$6437$1yk2we)
          (g$make-enum$6341$1yk2we
            (bitwise-not (g$enum-value$6342$1yk2we g$enumset$6437$1yk2we))
            (g$enum-info$6343$1yk2we g$enumset$6437$1yk2we))))))
   (g$enum-set-projection$6371$1yk2we
     g$enum-set-projection$6479$1yk2we
     (case-lambda
       ((g$enumset1$6438$1yk2we g$enumset2$6439$1yk2we)
        (begin
          (g$assert-enum$6356$1yk2we
            'enum-set-projection
            g$enumset1$6438$1yk2we)
          (g$assert-enum$6356$1yk2we
            'enum-set-projection
            g$enumset2$6439$1yk2we)
          ((case-lambda
             ((g$v1$6440$1yk2we)
              ((letrec ((g$f$6441$1yk2we
                          (case-lambda
                            ((g$s$6442$1yk2we g$v$6443$1yk2we)
                             (if (null? g$s$6442$1yk2we)
                               (g$make-enum$6341$1yk2we
                                 g$v$6443$1yk2we
                                 (g$enum-info$6343$1yk2we
                                   g$enumset2$6439$1yk2we))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6440$1yk2we
                                       (g$get-value$6355$1yk2we
                                         g$enumset1$6438$1yk2we
                                         (car g$s$6442$1yk2we))))
                                 (g$f$6441$1yk2we
                                   (cdr g$s$6442$1yk2we)
                                   g$v$6443$1yk2we)
                                 ((case-lambda
                                    ((g$v2$6444$1yk2we)
                                     (if g$v2$6444$1yk2we
                                       (g$f$6441$1yk2we
                                         (cdr g$s$6442$1yk2we)
                                         (bitwise-ior
                                           g$v$6443$1yk2we
                                           g$v2$6444$1yk2we))
                                       (g$f$6441$1yk2we
                                         (cdr g$s$6442$1yk2we)
                                         g$v$6443$1yk2we))))
                                  (g$get-value$6355$1yk2we
                                    g$enumset2$6439$1yk2we
                                    (car g$s$6442$1yk2we)))))))))
                 g$f$6441$1yk2we)
               (g$get-symbols$6354$1yk2we g$enumset1$6438$1yk2we)
               '0)))
           (g$enum-value$6342$1yk2we g$enumset1$6438$1yk2we)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6372$1yk2we g$p$6373$1yk2we)
       (g$fprintf$6504$1yk2we
         g$p$6373$1yk2we
         '"#[enum-set ~a]"
         (g$enum-set->list$6363$1yk2we g$x$6372$1yk2we))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6480$1yk2we
     g$dofmt$6502$1yk2we
     (case-lambda
       ((g$p$6484$1yk2we g$cntl$6485$1yk2we g$args$6486$1yk2we)
        ((case-lambda
           ((g$nmax$6487$1yk2we)
            ((letrec ((g$loop$6488$1yk2we
                        (case-lambda
                          ((g$n$6489$1yk2we g$a$6490$1yk2we)
                           (if (fx<=? g$n$6489$1yk2we g$nmax$6487$1yk2we)
                             ((case-lambda
                                ((g$c$6491$1yk2we)
                                 (if (if (g$char=?$5033$1yk2we
                                           g$c$6491$1yk2we
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6489$1yk2we
                                           g$nmax$6487$1yk2we))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6492$1yk2we)
                                       (if (memv g$t$6492$1yk2we '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6490$1yk2we)
                                             g$p$6484$1yk2we)
                                           (g$loop$6488$1yk2we
                                             (fx+ g$n$6489$1yk2we '2)
                                             (cdr g$a$6490$1yk2we)))
                                         (if (memv g$t$6492$1yk2we '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6490$1yk2we)
                                               g$p$6484$1yk2we)
                                             (g$loop$6488$1yk2we
                                               (fx+ g$n$6489$1yk2we '2)
                                               (cdr g$a$6490$1yk2we)))
                                           (if (memv g$t$6492$1yk2we '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6490$1yk2we)
                                                   '2)
                                                 g$p$6484$1yk2we)
                                               (g$loop$6488$1yk2we
                                                 (fx+ g$n$6489$1yk2we '2)
                                                 (cdr g$a$6490$1yk2we)))
                                             (if (memv g$t$6492$1yk2we '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6490$1yk2we)
                                                     '8)
                                                   g$p$6484$1yk2we)
                                                 (g$loop$6488$1yk2we
                                                   (fx+ g$n$6489$1yk2we '2)
                                                   (cdr g$a$6490$1yk2we)))
                                               (if (memv g$t$6492$1yk2we '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6490$1yk2we)
                                                       '16)
                                                     g$p$6484$1yk2we)
                                                   (g$loop$6488$1yk2we
                                                     (fx+ g$n$6489$1yk2we '2)
                                                     (cdr g$a$6490$1yk2we)))
                                                 (if (memv
                                                       g$t$6492$1yk2we
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6490$1yk2we)
                                                         '10)
                                                       g$p$6484$1yk2we)
                                                     (g$loop$6488$1yk2we
                                                       (fx+ g$n$6489$1yk2we '2)
                                                       (cdr g$a$6490$1yk2we)))
                                                   (if (memv
                                                         g$t$6492$1yk2we
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6484$1yk2we)
                                                       (g$loop$6488$1yk2we
                                                         (fx+ g$n$6489$1yk2we
                                                              '2)
                                                         g$a$6490$1yk2we))
                                                     (begin
                                                       (write-char
                                                         g$c$6491$1yk2we
                                                         g$p$6484$1yk2we)
                                                       (g$loop$6488$1yk2we
                                                         (fx+ g$n$6489$1yk2we
                                                              '1)
                                                         g$a$6490$1yk2we)))))))))))
                                    (string-ref
                                      g$cntl$6485$1yk2we
                                      (fx+ g$n$6489$1yk2we '1)))
                                   (begin
                                     (write-char
                                       g$c$6491$1yk2we
                                       g$p$6484$1yk2we)
                                     (g$loop$6488$1yk2we
                                       (fx+ g$n$6489$1yk2we '1)
                                       g$a$6490$1yk2we)))))
                              (string-ref g$cntl$6485$1yk2we g$n$6489$1yk2we))
                             (void))))))
               g$loop$6488$1yk2we)
             '0
             g$args$6486$1yk2we)))
         (fx- (string-length g$cntl$6485$1yk2we) '1)))))
   (g$printf$6481$1yk2we
     g$printf$6503$1yk2we
     (case-lambda
       ((g$control$6493$1yk2we . g$args$6494$1yk2we)
        (g$dofmt$6480$1yk2we
          (current-output-port)
          g$control$6493$1yk2we
          g$args$6494$1yk2we))))
   (g$fprintf$6482$1yk2we
     g$fprintf$6504$1yk2we
     (case-lambda
       ((g$p$6495$1yk2we g$control$6496$1yk2we . g$args$6497$1yk2we)
        (g$dofmt$6480$1yk2we
          g$p$6495$1yk2we
          g$control$6496$1yk2we
          g$args$6497$1yk2we))))
   (g$format$6483$1yk2we
     g$format$6505$1yk2we
     (case-lambda
       ((g$control$6498$1yk2we . g$args$6499$1yk2we)
        (call-with-values
          g$open-string-output-port$6299$1yk2we
          (case-lambda
            ((g$p$6500$1yk2we g$c$6501$1yk2we)
             (begin
               (g$dofmt$6480$1yk2we
                 g$p$6500$1yk2we
                 g$control$6498$1yk2we
                 g$args$6499$1yk2we)
               (g$c$6501$1yk2we)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6506$1yk2we
     g$make-traced-macro$6509$1yk2we
     (case-lambda
       ((g$name$6507$1yk2we g$x$6508$1yk2we)
        (if (procedure? g$x$6508$1yk2we)
          (make-traced-procedure
            g$name$6507$1yk2we
            g$x$6508$1yk2we
            g$syntax->datum$11174$1yk2we)
          (if (g$variable-transformer?$10997$1yk2we g$x$6508$1yk2we)
            (g$make-variable-transformer$10996$1yk2we
              (make-traced-procedure
                g$name$6507$1yk2we
                (g$variable-transformer-procedure$10998$1yk2we g$x$6508$1yk2we)
                g$syntax->datum$11174$1yk2we))
            g$x$6508$1yk2we))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6510$1yk2we
     g$read-library-source-file$6589$1yk2we
     (case-lambda
       ((g$file-name$6581$1yk2we)
        (g$with-input-from-file$6333$1yk2we
          g$file-name$6581$1yk2we
          read-annotated))))
   (g$make-parameter$6511$1yk2we
     g$make-parameter$6590$1yk2we
     (case-lambda
       ((g$x$6582$1yk2we)
        (g$make-parameter$6511$1yk2we
          g$x$6582$1yk2we
          (case-lambda ((g$x$6583$1yk2we) g$x$6583$1yk2we))))
       ((g$x$6584$1yk2we g$fender$6585$1yk2we)
        (begin
          (if (not (procedure? g$fender$6585$1yk2we))
            (g$assertion-error$11167$1yk2we
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6586$1yk2we)
              (case-lambda
                (() g$x$6586$1yk2we)
                ((g$v$6587$1yk2we)
                 (set! g$x$6586$1yk2we
                   (g$fender$6585$1yk2we g$v$6587$1yk2we))))))
           (g$fender$6585$1yk2we g$x$6584$1yk2we))))))
   (g$file-options-constructor$6579$1yk2we
     g$file-options-constructor$6591$1yk2we
     (g$make-parameter$6511$1yk2we '#f))
   (g$file-options-spec$6580$1yk2we
     g$file-options-spec$6592$1yk2we
     (case-lambda
       ((g$x$6588$1yk2we)
        ((g$file-options-constructor$6579$1yk2we) g$x$6588$1yk2we)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6788$1yk2we
     g$current-primitive-locations$6833$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda ((g$x$6794$1yk2we) '#f))
       (case-lambda
         ((g$p$6795$1yk2we)
          (begin
            (if (not (procedure? g$p$6795$1yk2we))
              (g$assertion-error$11167$1yk2we
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6795$1yk2we)))))
   (g$mutable?$6789$1yk2we
     g$mutable?$6834$1yk2we
     (case-lambda
       ((g$x$6796$1yk2we)
        (letrec* ((g$simple?$6797$1yk2we
                    (case-lambda
                      ((g$x$6798$1yk2we)
                       ((case-lambda
                          ((g$t$6799$1yk2we)
                           (if g$t$6799$1yk2we
                             g$t$6799$1yk2we
                             ((case-lambda
                                ((g$t$6800$1yk2we)
                                 (if g$t$6800$1yk2we
                                   g$t$6800$1yk2we
                                   ((case-lambda
                                      ((g$t$6801$1yk2we)
                                       (if g$t$6801$1yk2we
                                         g$t$6801$1yk2we
                                         ((case-lambda
                                            ((g$t$6802$1yk2we)
                                             (if g$t$6802$1yk2we
                                               g$t$6802$1yk2we
                                               ((case-lambda
                                                  ((g$t$6803$1yk2we)
                                                   (if g$t$6803$1yk2we
                                                     g$t$6803$1yk2we
                                                     ((case-lambda
                                                        ((g$t$6804$1yk2we)
                                                         (if g$t$6804$1yk2we
                                                           g$t$6804$1yk2we
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6798$1yk2we)))))
                                                      (bytevector?
                                                        g$x$6798$1yk2we)))))
                                                (string? g$x$6798$1yk2we)))))
                                          (boolean? g$x$6798$1yk2we)))))
                                    (symbol? g$x$6798$1yk2we)))))
                              (char? g$x$6798$1yk2we)))))
                        (null? g$x$6798$1yk2we))))))
          (not (g$simple?$6797$1yk2we g$x$6796$1yk2we))))))
   (g$rewriter$6790$1yk2we
     g$rewriter$6835$1yk2we
     (case-lambda
       ((g$quote-hack?$6805$1yk2we)
        (letrec* ((g$f$6806$1yk2we
                    (case-lambda
                      ((g$x$6807$1yk2we)
                       (if (pair? g$x$6807$1yk2we)
                         ((case-lambda
                            ((g$t$6808$1yk2we)
                             (if (memv g$t$6808$1yk2we '(quote))
                               (if (if g$quote-hack?$6805$1yk2we
                                     (begin
                                       '#f
                                       (g$mutable?$6789$1yk2we
                                         (g$cadr$4999$1yk2we g$x$6807$1yk2we)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6809$1yk2we)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6809$1yk2we
                                         (g$cadr$4999$1yk2we g$x$6807$1yk2we))
                                       g$g$6809$1yk2we)))
                                  (gensym))
                                 g$x$6807$1yk2we)
                               (if (memv g$t$6808$1yk2we '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6810$1yk2we)
                                           (cons
                                             (car g$x$6810$1yk2we)
                                             (map g$f$6806$1yk2we
                                                  (cdr g$x$6810$1yk2we)))))
                                        (cdr g$x$6807$1yk2we)))
                                 (if (memv g$t$6808$1yk2we '(lambda))
                                   (g$cons*$5482$1yk2we
                                     'lambda
                                     (g$cadr$4999$1yk2we g$x$6807$1yk2we)
                                     (map g$f$6806$1yk2we
                                          (g$cddr$5001$1yk2we g$x$6807$1yk2we)))
                                   (if (memv g$t$6808$1yk2we '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6811$1yk2we
                                           g$body*$6812$1yk2we)
                                         ((case-lambda
                                            ((g$lhs*$6813$1yk2we
                                               g$rhs*$6814$1yk2we)
                                             (g$cons*$5482$1yk2we
                                               'letrec
                                               (map list
                                                    g$lhs*$6813$1yk2we
                                                    (map g$f$6806$1yk2we
                                                         g$rhs*$6814$1yk2we))
                                               (map g$f$6806$1yk2we
                                                    g$body*$6812$1yk2we))))
                                          (map car g$bindings$6811$1yk2we)
                                          (map g$cadr$4999$1yk2we
                                               g$bindings$6811$1yk2we))))
                                      (g$cadr$4999$1yk2we g$x$6807$1yk2we)
                                      (g$cddr$5001$1yk2we g$x$6807$1yk2we))
                                     (if (memv g$t$6808$1yk2we '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6815$1yk2we
                                             g$body*$6816$1yk2we)
                                           ((case-lambda
                                              ((g$lhs*$6817$1yk2we
                                                 g$rhs*$6818$1yk2we)
                                               (g$cons*$5482$1yk2we
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6817$1yk2we
                                                      (map g$f$6806$1yk2we
                                                           g$rhs*$6818$1yk2we))
                                                 (map g$f$6806$1yk2we
                                                      g$body*$6816$1yk2we))))
                                            (map car g$bindings$6815$1yk2we)
                                            (map g$cadr$4999$1yk2we
                                                 g$bindings$6815$1yk2we))))
                                        (g$cadr$4999$1yk2we g$x$6807$1yk2we)
                                        (g$cddr$5001$1yk2we g$x$6807$1yk2we))
                                       (if (memv
                                             g$t$6808$1yk2we
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6819$1yk2we
                                               g$x$6820$1yk2we)
                                             ((case-lambda
                                                ((g$bindings$6821$1yk2we
                                                   g$body*$6822$1yk2we)
                                                 ((case-lambda
                                                    ((g$lhs*$6823$1yk2we
                                                       g$lhs**$6824$1yk2we
                                                       g$rhs*$6825$1yk2we)
                                                     (g$cons*$5482$1yk2we
                                                       'library-letrec*
                                                       g$name$6819$1yk2we
                                                       (map list
                                                            g$lhs*$6823$1yk2we
                                                            g$lhs**$6824$1yk2we
                                                            (map g$f$6806$1yk2we
                                                                 g$rhs*$6825$1yk2we))
                                                       (map g$f$6806$1yk2we
                                                            g$body*$6822$1yk2we))))
                                                  (map car
                                                       g$bindings$6821$1yk2we)
                                                  (map g$cadr$4999$1yk2we
                                                       g$bindings$6821$1yk2we)
                                                  (map g$caddr$5005$1yk2we
                                                       g$bindings$6821$1yk2we))))
                                              (g$cadr$4999$1yk2we
                                                g$x$6820$1yk2we)
                                              (g$cddr$5001$1yk2we
                                                g$x$6820$1yk2we))))
                                          (g$cadr$4999$1yk2we g$x$6807$1yk2we)
                                          (cdr g$x$6807$1yk2we))
                                         (if (memv g$t$6808$1yk2we '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6806$1yk2we
                                                  (cdr g$x$6807$1yk2we)))
                                           (if (memv g$t$6808$1yk2we '(set!))
                                             (list
                                               'set!
                                               (g$cadr$4999$1yk2we
                                                 g$x$6807$1yk2we)
                                               (g$f$6806$1yk2we
                                                 (g$caddr$5005$1yk2we
                                                   g$x$6807$1yk2we)))
                                             (if (memv
                                                   g$t$6808$1yk2we
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6826$1yk2we)
                                                   ((case-lambda
                                                      ((g$t$6827$1yk2we)
                                                       (if g$t$6827$1yk2we
                                                         ((case-lambda
                                                            ((g$loc$6828$1yk2we)
                                                             g$loc$6828$1yk2we))
                                                          g$t$6827$1yk2we)
                                                         g$op$6826$1yk2we)))
                                                    ((g$current-primitive-locations$6788$1yk2we)
                                                     g$op$6826$1yk2we))))
                                                (g$cadr$4999$1yk2we
                                                  g$x$6807$1yk2we))
                                               (if (memv
                                                     g$t$6808$1yk2we
                                                     '(define))
                                                 g$x$6807$1yk2we
                                                 (if (list? g$x$6807$1yk2we)
                                                   (map g$f$6806$1yk2we
                                                        g$x$6807$1yk2we)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6807$1yk2we
                                                     (list?
                                                       g$x$6807$1yk2we)))))))))))))))
                          (car g$x$6807$1yk2we))
                         g$x$6807$1yk2we)))))
          g$f$6806$1yk2we))))
   (g$expanded->core$6791$1yk2we
     g$expanded->core$6836$1yk2we
     (case-lambda
       ((g$x$6829$1yk2we) ((g$rewriter$6790$1yk2we '#t) g$x$6829$1yk2we))))
   (g$compile-core-expr$6792$1yk2we
     g$compile-core-expr$6837$1yk2we
     (case-lambda
       ((g$x$6830$1yk2we) ((g$rewriter$6790$1yk2we '#f) g$x$6830$1yk2we))))
   (g$compile-core-expr-to-port$6793$1yk2we
     g$compile-core-expr-to-port$6838$1yk2we
     (case-lambda
       ((g$x$6831$1yk2we g$p$6832$1yk2we)
        (g$pretty-print$6787$1yk2we
          ((g$rewriter$6790$1yk2we '#f) g$x$6831$1yk2we)
          g$p$6832$1yk2we)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6877$1yk2we
     g$make-collection$7081$1yk2we
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6938$1yk2we)
            (letrec* ((g$set-cons$6939$1yk2we
                        (case-lambda
                          ((g$x$6941$1yk2we g$ls$6942$1yk2we)
                           (if (memq g$x$6941$1yk2we g$ls$6942$1yk2we)
                             g$ls$6942$1yk2we
                             (cons g$x$6941$1yk2we g$ls$6942$1yk2we))))))
              (case-lambda
                (() g$set$6938$1yk2we)
                ((g$x$6940$1yk2we)
                 (set! g$set$6938$1yk2we
                   (g$set-cons$6939$1yk2we
                     g$x$6940$1yk2we
                     g$set$6938$1yk2we)))))))
         '()))))
   (g$current-library-collection$6878$1yk2we
     g$current-library-collection$7082$1yk2we
     (g$make-parameter$6590$1yk2we
       (g$make-collection$6877$1yk2we)
       (case-lambda
         ((g$x$6943$1yk2we)
          (begin
            (if (not (procedure? g$x$6943$1yk2we))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6943$1yk2we)
              (void))
            g$x$6943$1yk2we)))))
   (g$7965$6879$1yk2we
     g$7965$7083$1yk2we
     (make-record-type-descriptor
       'library
       '#f
       'g$7968$1yk2we
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7967$6880$1yk2we g$7967$7084$1yk2we '#f)
   (g$7966$6881$1yk2we
     g$7966$7085$1yk2we
     (make-record-constructor-descriptor
       g$7965$6879$1yk2we
       '#f
       g$7967$6880$1yk2we))
   (g$library?$6882$1yk2we
     g$library?$7086$1yk2we
     (record-predicate g$7965$6879$1yk2we))
   (g$make-library$6883$1yk2we
     g$make-library$7087$1yk2we
     (record-constructor g$7966$6881$1yk2we))
   (g$library-id$6884$1yk2we
     g$library-id$7088$1yk2we
     (record-accessor g$7965$6879$1yk2we '0))
   (g$library-name$6885$1yk2we
     g$library-name$7089$1yk2we
     (record-accessor g$7965$6879$1yk2we '1))
   (g$library-version$6886$1yk2we
     g$library-version$7090$1yk2we
     (record-accessor g$7965$6879$1yk2we '2))
   (g$library-imp*$6887$1yk2we
     g$library-imp*$7091$1yk2we
     (record-accessor g$7965$6879$1yk2we '3))
   (g$library-vis*$6888$1yk2we
     g$library-vis*$7092$1yk2we
     (record-accessor g$7965$6879$1yk2we '4))
   (g$library-inv*$6889$1yk2we
     g$library-inv*$7093$1yk2we
     (record-accessor g$7965$6879$1yk2we '5))
   (g$library-subst$6890$1yk2we
     g$library-subst$7094$1yk2we
     (record-accessor g$7965$6879$1yk2we '6))
   (g$library-env$6891$1yk2we
     g$library-env$7095$1yk2we
     (record-accessor g$7965$6879$1yk2we '7))
   (g$library-visit-state$6892$1yk2we
     g$library-visit-state$7096$1yk2we
     (record-accessor g$7965$6879$1yk2we '8))
   (g$library-invoke-state$6893$1yk2we
     g$library-invoke-state$7097$1yk2we
     (record-accessor g$7965$6879$1yk2we '9))
   (g$library-visit-code$6894$1yk2we
     g$library-visit-code$7098$1yk2we
     (record-accessor g$7965$6879$1yk2we '10))
   (g$library-invoke-code$6895$1yk2we
     g$library-invoke-code$7099$1yk2we
     (record-accessor g$7965$6879$1yk2we '11))
   (g$library-visible?$6896$1yk2we
     g$library-visible?$7100$1yk2we
     (record-accessor g$7965$6879$1yk2we '12))
   (g$library-source-file-name$6897$1yk2we
     g$library-source-file-name$7101$1yk2we
     (record-accessor g$7965$6879$1yk2we '13))
   (g$set-library-id!$6898$1yk2we
     g$set-library-id!$7102$1yk2we
     (record-mutator g$7965$6879$1yk2we '0))
   (g$set-library-name!$6899$1yk2we
     g$set-library-name!$7103$1yk2we
     (record-mutator g$7965$6879$1yk2we '1))
   (g$set-library-version!$6900$1yk2we
     g$set-library-version!$7104$1yk2we
     (record-mutator g$7965$6879$1yk2we '2))
   (g$set-library-imp*!$6901$1yk2we
     g$set-library-imp*!$7105$1yk2we
     (record-mutator g$7965$6879$1yk2we '3))
   (g$set-library-vis*!$6902$1yk2we
     g$set-library-vis*!$7106$1yk2we
     (record-mutator g$7965$6879$1yk2we '4))
   (g$set-library-inv*!$6903$1yk2we
     g$set-library-inv*!$7107$1yk2we
     (record-mutator g$7965$6879$1yk2we '5))
   (g$set-library-subst!$6904$1yk2we
     g$set-library-subst!$7108$1yk2we
     (record-mutator g$7965$6879$1yk2we '6))
   (g$set-library-env!$6905$1yk2we
     g$set-library-env!$7109$1yk2we
     (record-mutator g$7965$6879$1yk2we '7))
   (g$set-library-visit-state!$6906$1yk2we
     g$set-library-visit-state!$7110$1yk2we
     (record-mutator g$7965$6879$1yk2we '8))
   (g$set-library-invoke-state!$6907$1yk2we
     g$set-library-invoke-state!$7111$1yk2we
     (record-mutator g$7965$6879$1yk2we '9))
   (g$set-library-visit-code!$6908$1yk2we
     g$set-library-visit-code!$7112$1yk2we
     (record-mutator g$7965$6879$1yk2we '10))
   (g$set-library-invoke-code!$6909$1yk2we
     g$set-library-invoke-code!$7113$1yk2we
     (record-mutator g$7965$6879$1yk2we '11))
   (g$set-library-visible?!$6910$1yk2we
     g$set-library-visible?!$7114$1yk2we
     (record-mutator g$7965$6879$1yk2we '12))
   (g$set-library-source-file-name!$6911$1yk2we
     g$set-library-source-file-name!$7115$1yk2we
     (record-mutator g$7965$6879$1yk2we '13))
   (g$rp$6912$1yk2we
     g$rp$7116$1yk2we
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6944$1yk2we g$p$6945$1yk2we)
          (begin
            (if (not (g$library?$6882$1yk2we g$x$6944$1yk2we))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6505$1yk2we
                '"#<library ~s>"
                (if (null? (g$library-version$6886$1yk2we g$x$6944$1yk2we))
                  (g$library-name$6885$1yk2we g$x$6944$1yk2we)
                  (append
                    (g$library-name$6885$1yk2we g$x$6944$1yk2we)
                    (list (g$library-version$6886$1yk2we g$x$6944$1yk2we)))))
              g$p$6945$1yk2we))))))
   (g$find-dependencies$6913$1yk2we
     g$find-dependencies$7117$1yk2we
     (case-lambda
       ((g$ls$6946$1yk2we)
        (if (null? g$ls$6946$1yk2we)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6914$1yk2we
     g$find-library-by$7118$1yk2we
     (case-lambda
       ((g$pred$6947$1yk2we)
        ((letrec ((g$f$6948$1yk2we
                    (case-lambda
                      ((g$ls$6949$1yk2we)
                       (if (null? g$ls$6949$1yk2we)
                         '#f
                         (if (g$pred$6947$1yk2we (car g$ls$6949$1yk2we))
                           (car g$ls$6949$1yk2we)
                           (g$f$6948$1yk2we (cdr g$ls$6949$1yk2we))))))))
           g$f$6948$1yk2we)
         ((g$current-library-collection$6878$1yk2we))))))
   (g$library-path$6915$1yk2we
     g$library-path$7119$1yk2we
     (g$make-parameter$6590$1yk2we
       '(".")
       (case-lambda
         ((g$x$6950$1yk2we)
          (if (if (list? g$x$6950$1yk2we)
                (begin '#f (g$for-all$5480$1yk2we string? g$x$6950$1yk2we))
                '#f)
            (map (case-lambda ((g$x$6951$1yk2we) g$x$6951$1yk2we))
                 g$x$6950$1yk2we)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6950$1yk2we))))))
   (g$library-extensions$6916$1yk2we
     g$library-extensions$7120$1yk2we
     (g$make-parameter$6590$1yk2we
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6952$1yk2we)
          (if (if (list? g$x$6952$1yk2we)
                (begin '#f (g$for-all$5480$1yk2we string? g$x$6952$1yk2we))
                '#f)
            (map (case-lambda ((g$x$6953$1yk2we) g$x$6953$1yk2we))
                 g$x$6952$1yk2we)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6952$1yk2we))))))
   (g$library-name->file-name$6917$1yk2we
     g$library-name->file-name$7121$1yk2we
     (case-lambda
       ((g$x$6954$1yk2we)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6299$1yk2we)))
          (case-lambda
            ((g$p$6957$1yk2we g$extract$6958$1yk2we)
             ((case-lambda
                ((g$extract$6959$1yk2we g$p$6960$1yk2we)
                 (letrec* ((g$display-hex$6961$1yk2we
                             (case-lambda
                               ((g$n$6969$1yk2we)
                                (if (<= '0 g$n$6969$1yk2we '9)
                                  (display g$n$6969$1yk2we g$p$6960$1yk2we)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6969$1yk2we '10)))
                                    g$p$6960$1yk2we))))))
                   (begin
                     ((letrec ((g$f$6962$1yk2we
                                 (case-lambda
                                   ((g$ls$6963$1yk2we)
                                    (if (not (null? g$ls$6963$1yk2we))
                                      (begin
                                        (display '"/" g$p$6960$1yk2we)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6964$1yk2we)
                                             (if ((case-lambda
                                                    ((g$t$6965$1yk2we)
                                                     (if g$t$6965$1yk2we
                                                       g$t$6965$1yk2we
                                                       ((case-lambda
                                                          ((g$t$6966$1yk2we)
                                                           (if g$t$6966$1yk2we
                                                             g$t$6966$1yk2we
                                                             ((case-lambda
                                                                ((g$t$6967$1yk2we)
                                                                 (if g$t$6967$1yk2we
                                                                   g$t$6967$1yk2we
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$6964$1yk2we
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5036$1yk2we
                                                                '#\0
                                                                g$c$6964$1yk2we
                                                                '#\9)))))
                                                        (g$char<=?$5036$1yk2we
                                                          '#\A
                                                          g$c$6964$1yk2we
                                                          '#\Z)))))
                                                  (g$char<=?$5036$1yk2we
                                                    '#\a
                                                    g$c$6964$1yk2we
                                                    '#\z))
                                               (display
                                                 g$c$6964$1yk2we
                                                 g$p$6960$1yk2we)
                                               (begin
                                                 (display '"%" g$p$6960$1yk2we)
                                                 ((case-lambda
                                                    ((g$n$6968$1yk2we)
                                                     (begin
                                                       (g$display-hex$6961$1yk2we
                                                         (g$quotient$5844$1yk2we
                                                           g$n$6968$1yk2we
                                                           '16))
                                                       (g$display-hex$6961$1yk2we
                                                         (g$remainder$5845$1yk2we
                                                           g$n$6968$1yk2we
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6964$1yk2we))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6963$1yk2we))))
                                        (g$f$6962$1yk2we
                                          (cdr g$ls$6963$1yk2we)))
                                      (void))))))
                        g$f$6962$1yk2we)
                      g$x$6954$1yk2we)
                     (g$extract$6959$1yk2we)))))
              g$extract$6958$1yk2we
              g$p$6957$1yk2we)))))))
   (g$file-locator$6918$1yk2we
     g$file-locator$7122$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda
         ((g$x$6970$1yk2we)
          ((case-lambda
             ((g$str$6971$1yk2we)
              ((letrec ((g$f$6972$1yk2we
                          (case-lambda
                            ((g$ls$6973$1yk2we
                               g$exts$6974$1yk2we
                               g$failed-list$6975$1yk2we)
                             (if (null? g$ls$6973$1yk2we)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8070$6976$1yk2we
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8073$1yk2we
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8072$6977$1yk2we '#f)
                                             (g$8071$6978$1yk2we
                                               (make-record-constructor-descriptor
                                                 g$8070$6976$1yk2we
                                                 &condition-rcd
                                                 g$8072$6977$1yk2we))
                                             (g$8069$6979$1yk2we
                                               (record-predicate
                                                 g$8070$6976$1yk2we))
                                             (g$make-library-resolution-condition$6980$1yk2we
                                               (record-constructor
                                                 g$8071$6978$1yk2we))
                                             (g$8067$6981$1yk2we
                                               (record-accessor
                                                 g$8070$6976$1yk2we
                                                 '0))
                                             (g$8068$6982$1yk2we
                                               (record-accessor
                                                 g$8070$6976$1yk2we
                                                 '1))
                                             (g$library-resolution-condition?$6983$1yk2we
                                               (condition-predicate
                                                 g$8070$6976$1yk2we))
                                             (g$condition-library$6984$1yk2we
                                               (condition-accessor
                                                 g$8070$6976$1yk2we
                                                 g$8067$6981$1yk2we))
                                             (g$condition-files$6985$1yk2we
                                               (condition-accessor
                                                 g$8070$6976$1yk2we
                                                 g$8068$6982$1yk2we)))
                                     (raise
                                       (condition
                                         (g$make-error$5754$1yk2we)
                                         (g$make-who-condition$5780$1yk2we
                                           'expander)
                                         (g$make-message-condition$5734$1yk2we
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6980$1yk2we
                                           g$x$6970$1yk2we
                                           (reverse
                                             g$failed-list$6975$1yk2we))))))))
                               (if (null? g$exts$6974$1yk2we)
                                 (g$f$6972$1yk2we
                                   (cdr g$ls$6973$1yk2we)
                                   (g$library-extensions$6916$1yk2we)
                                   g$failed-list$6975$1yk2we)
                                 ((case-lambda
                                    ((g$name$6986$1yk2we)
                                     (if (g$file-exists?$5351$1yk2we
                                           g$name$6986$1yk2we)
                                       g$name$6986$1yk2we
                                       (g$f$6972$1yk2we
                                         g$ls$6973$1yk2we
                                         (cdr g$exts$6974$1yk2we)
                                         (cons
                                           g$name$6986$1yk2we
                                           g$failed-list$6975$1yk2we)))))
                                  (string-append
                                    (car g$ls$6973$1yk2we)
                                    g$str$6971$1yk2we
                                    (car g$exts$6974$1yk2we)))))))))
                 g$f$6972$1yk2we)
               (g$library-path$6915$1yk2we)
               (g$library-extensions$6916$1yk2we)
               '())))
           (g$library-name->file-name$6917$1yk2we g$x$6970$1yk2we))))
       (case-lambda
         ((g$f$6987$1yk2we)
          (if (procedure? g$f$6987$1yk2we)
            g$f$6987$1yk2we
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6987$1yk2we))))))
   (g$serialize-all$6919$1yk2we
     g$serialize-all$7123$1yk2we
     (case-lambda
       ((g$serialize$6988$1yk2we g$compile$6989$1yk2we)
        (letrec* ((g$library-desc$6990$1yk2we
                    (case-lambda
                      ((g$x$6992$1yk2we)
                       (list
                         (g$library-id$6884$1yk2we g$x$6992$1yk2we)
                         (g$library-name$6885$1yk2we g$x$6992$1yk2we))))))
          (for-each
            (case-lambda
              ((g$x$6991$1yk2we)
               (if (g$library-source-file-name$6897$1yk2we g$x$6991$1yk2we)
                 (g$serialize$6988$1yk2we
                   (g$library-source-file-name$6897$1yk2we g$x$6991$1yk2we)
                   (list
                     (g$library-id$6884$1yk2we g$x$6991$1yk2we)
                     (g$library-name$6885$1yk2we g$x$6991$1yk2we)
                     (g$library-version$6886$1yk2we g$x$6991$1yk2we)
                     (map g$library-desc$6990$1yk2we
                          (g$library-imp*$6887$1yk2we g$x$6991$1yk2we))
                     (map g$library-desc$6990$1yk2we
                          (g$library-vis*$6888$1yk2we g$x$6991$1yk2we))
                     (map g$library-desc$6990$1yk2we
                          (g$library-inv*$6889$1yk2we g$x$6991$1yk2we))
                     (g$library-subst$6890$1yk2we g$x$6991$1yk2we)
                     (g$library-env$6891$1yk2we g$x$6991$1yk2we)
                     (g$compile$6989$1yk2we
                       (g$library-visit-code$6894$1yk2we g$x$6991$1yk2we))
                     (g$compile$6989$1yk2we
                       (g$library-invoke-code$6895$1yk2we g$x$6991$1yk2we))
                     (g$library-visible?$6896$1yk2we g$x$6991$1yk2we)))
                 (void))))
            ((g$current-library-collection$6878$1yk2we)))))))
   (g$current-precompiled-library-loader$6920$1yk2we
     g$current-precompiled-library-loader$7124$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda ((g$filename$6993$1yk2we g$sk$6994$1yk2we) '#f))))
   (g$try-load-from-file$6921$1yk2we
     g$try-load-from-file$7125$1yk2we
     (case-lambda
       ((g$filename$6995$1yk2we)
        ((g$current-precompiled-library-loader$6920$1yk2we)
         g$filename$6995$1yk2we
         (case-lambda
           ((g$id$6996$1yk2we
              g$name$6997$1yk2we
              g$ver$6998$1yk2we
              g$imp*$6999$1yk2we
              g$vis*$7000$1yk2we
              g$inv*$7001$1yk2we
              g$exp-subst$7002$1yk2we
              g$exp-env$7003$1yk2we
              g$visit-proc$7004$1yk2we
              g$invoke-proc$7005$1yk2we
              g$visible?$7006$1yk2we)
            ((letrec ((g$f$7007$1yk2we
                        (case-lambda
                          ((g$deps$7008$1yk2we)
                           (if (null? g$deps$7008$1yk2we)
                             (begin
                               (g$install-library$6931$1yk2we
                                 g$id$6996$1yk2we
                                 g$name$6997$1yk2we
                                 g$ver$6998$1yk2we
                                 g$imp*$6999$1yk2we
                                 g$vis*$7000$1yk2we
                                 g$inv*$7001$1yk2we
                                 g$exp-subst$7002$1yk2we
                                 g$exp-env$7003$1yk2we
                                 g$visit-proc$7004$1yk2we
                                 g$invoke-proc$7005$1yk2we
                                 '#f
                                 '#f
                                 g$visible?$7006$1yk2we
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7009$1yk2we)
                                 ((case-lambda
                                    ((g$label$7010$1yk2we g$dname$7011$1yk2we)
                                     ((case-lambda
                                        ((g$l$7012$1yk2we)
                                         (if (if (g$library?$6882$1yk2we
                                                   g$l$7012$1yk2we)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7010$1yk2we
                                                      (g$library-id$6884$1yk2we
                                                        g$l$7012$1yk2we)))
                                               '#f)
                                           (g$f$7007$1yk2we
                                             (cdr g$deps$7008$1yk2we))
                                           (begin
                                             (g$fprintf$6504$1yk2we
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$6997$1yk2we
                                               g$dname$7011$1yk2we
                                               g$filename$6995$1yk2we)
                                             '#f))))
                                      (g$find-library-by-name$6926$1yk2we
                                        g$dname$7011$1yk2we))))
                                  (car g$d$7009$1yk2we)
                                  (g$cadr$4999$1yk2we g$d$7009$1yk2we))))
                              (car g$deps$7008$1yk2we)))))))
               g$f$7007$1yk2we)
             (append g$imp*$6999$1yk2we g$vis*$7000$1yk2we g$inv*$7001$1yk2we)))
           (g$others$7013$1yk2we '#f))))))
   (g$library-loader$6922$1yk2we
     g$library-loader$7126$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda
         ((g$x$7014$1yk2we)
          ((case-lambda
             ((g$file-name$7015$1yk2we)
              (if (not g$file-name$7015$1yk2we)
                (assertion-violation '#f '"cannot file library" g$x$7014$1yk2we)
                ((case-lambda
                   ((g$t$7016$1yk2we)
                    (if g$t$7016$1yk2we
                      g$t$7016$1yk2we
                      (begin
                        '#f
                        ((g$current-library-expander$6923$1yk2we)
                         (g$read-library-source-file$6589$1yk2we
                           g$file-name$7015$1yk2we)
                         g$file-name$7015$1yk2we
                         (case-lambda
                           ((g$name$7017$1yk2we)
                            (if (not (equal?
                                       g$name$7017$1yk2we
                                       g$x$7014$1yk2we))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6299$1yk2we)))
                                  (case-lambda
                                    ((g$p$7020$1yk2we g$e$7021$1yk2we)
                                     ((case-lambda
                                        ((g$e$7022$1yk2we g$p$7023$1yk2we)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7023$1yk2we)
                                           (write
                                             g$x$7014$1yk2we
                                             g$p$7023$1yk2we)
                                           (display
                                             '" in file "
                                             g$p$7023$1yk2we)
                                           (display
                                             g$file-name$7015$1yk2we
                                             g$p$7023$1yk2we)
                                           (display '", found " g$p$7023$1yk2we)
                                           (write
                                             g$name$7017$1yk2we
                                             g$p$7023$1yk2we)
                                           (display '" instead" g$p$7023$1yk2we)
                                           (g$e$7022$1yk2we))))
                                      g$e$7021$1yk2we
                                      g$p$7020$1yk2we)))))
                              (void)))))))))
                 (g$try-load-from-file$6921$1yk2we g$file-name$7015$1yk2we)))))
           ((g$file-locator$6918$1yk2we) g$x$7014$1yk2we))))
       (case-lambda
         ((g$f$7024$1yk2we)
          (if (procedure? g$f$7024$1yk2we)
            g$f$7024$1yk2we
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7024$1yk2we))))))
   (g$current-library-expander$6923$1yk2we
     g$current-library-expander$7127$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda
         ((g$x$7025$1yk2we)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7026$1yk2we)
          (if (procedure? g$f$7026$1yk2we)
            g$f$7026$1yk2we
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7026$1yk2we))))))
   (g$external-pending-libraries$6924$1yk2we
     g$external-pending-libraries$7128$1yk2we
     (g$make-parameter$6590$1yk2we '()))
   (g$find-external-library$6925$1yk2we
     g$find-external-library$7129$1yk2we
     (case-lambda
       ((g$name$7027$1yk2we)
        (begin
          (if (g$member$5476$1yk2we
                g$name$7027$1yk2we
                (g$external-pending-libraries$6924$1yk2we))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7027$1yk2we)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7030$1yk2we
                g$external-pending-libraries$7031$1yk2we)
              ((case-lambda
                 ((g$swap$7032$1yk2we)
                  (dynamic-wind
                    g$swap$7032$1yk2we
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6922$1yk2we) g$name$7027$1yk2we)
                         ((case-lambda
                            ((g$t$7033$1yk2we)
                             (if g$t$7033$1yk2we
                               g$t$7033$1yk2we
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7027$1yk2we)))))
                          (g$find-library-by$6914$1yk2we
                            (case-lambda
                              ((g$x$7034$1yk2we)
                               (equal?
                                 (g$library-name$6885$1yk2we g$x$7034$1yk2we)
                                 g$name$7027$1yk2we))))))))
                    g$swap$7032$1yk2we)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7035$1yk2we)
                      (begin
                        (g$external-pending-libraries$7030$1yk2we
                          g$external-pending-libraries$7031$1yk2we)
                        (set! g$external-pending-libraries$7031$1yk2we
                          g$t$7035$1yk2we))))
                   (g$external-pending-libraries$7030$1yk2we)))))))
           g$external-pending-libraries$6924$1yk2we
           (cons
             g$name$7027$1yk2we
             (g$external-pending-libraries$6924$1yk2we)))))))
   (g$find-library-by-name$6926$1yk2we
     g$find-library-by-name$7130$1yk2we
     (case-lambda
       ((g$name$7036$1yk2we)
        ((case-lambda
           ((g$t$7037$1yk2we)
            (if g$t$7037$1yk2we
              g$t$7037$1yk2we
              (begin
                '#f
                (g$find-external-library$6925$1yk2we g$name$7036$1yk2we)))))
         (g$find-library-by$6914$1yk2we
           (case-lambda
             ((g$x$7038$1yk2we)
              (equal?
                (g$library-name$6885$1yk2we g$x$7038$1yk2we)
                g$name$7036$1yk2we))))))))
   (g$library-exists?$6927$1yk2we
     g$library-exists?$7131$1yk2we
     (case-lambda
       ((g$name$7039$1yk2we)
        (if (g$find-library-by$6914$1yk2we
              (case-lambda
                ((g$x$7040$1yk2we)
                 (equal?
                   (g$library-name$6885$1yk2we g$x$7040$1yk2we)
                   g$name$7039$1yk2we))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6928$1yk2we
     g$find-library-by-spec/die$7132$1yk2we
     (case-lambda
       ((g$spec$7041$1yk2we)
        ((case-lambda
           ((g$id$7042$1yk2we)
            ((case-lambda
               ((g$t$7043$1yk2we)
                (if g$t$7043$1yk2we
                  g$t$7043$1yk2we
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7041$1yk2we)))))
             (g$find-library-by$6914$1yk2we
               (case-lambda
                 ((g$x$7044$1yk2we)
                  (eq? g$id$7042$1yk2we
                       (g$library-id$6884$1yk2we g$x$7044$1yk2we))))))))
         (car g$spec$7041$1yk2we)))))
   (g$label->binding-table$6929$1yk2we
     g$label->binding-table$7133$1yk2we
     (g$make-eq-hashtable$5273$1yk2we))
   (g$install-library-record$6930$1yk2we
     g$install-library-record$7134$1yk2we
     (case-lambda
       ((g$lib$7045$1yk2we)
        (begin
          ((case-lambda
             ((g$exp-env$7046$1yk2we)
              (for-each
                (case-lambda
                  ((g$x$7047$1yk2we)
                   ((case-lambda
                      ((g$label$7048$1yk2we g$binding$7049$1yk2we)
                       ((case-lambda
                          ((g$binding$7050$1yk2we)
                           (g$hashtable-set!$5277$1yk2we
                             g$label->binding-table$6929$1yk2we
                             g$label$7048$1yk2we
                             g$binding$7050$1yk2we)))
                        ((case-lambda
                           ((g$t$7051$1yk2we)
                            (if (memv g$t$7051$1yk2we '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7045$1yk2we
                                  (cdr g$binding$7049$1yk2we)))
                              (if (memv g$t$7051$1yk2we '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7045$1yk2we
                                    (cdr g$binding$7049$1yk2we)))
                                (if (memv g$t$7051$1yk2we '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7045$1yk2we
                                      (cdr g$binding$7049$1yk2we)))
                                  g$binding$7049$1yk2we)))))
                         (car g$binding$7049$1yk2we)))))
                    (car g$x$7047$1yk2we)
                    (cdr g$x$7047$1yk2we))))
                g$exp-env$7046$1yk2we)))
           (g$library-env$6891$1yk2we g$lib$7045$1yk2we))
          ((g$current-library-collection$6878$1yk2we) g$lib$7045$1yk2we)))))
   (g$install-library$6931$1yk2we
     g$install-library$7135$1yk2we
     (case-lambda
       ((g$id$7052$1yk2we
          g$name$7053$1yk2we
          g$ver$7054$1yk2we
          g$imp*$7055$1yk2we
          g$vis*$7056$1yk2we
          g$inv*$7057$1yk2we
          g$exp-subst$7058$1yk2we
          g$exp-env$7059$1yk2we
          g$visit-proc$7060$1yk2we
          g$invoke-proc$7061$1yk2we
          g$visit-code$7062$1yk2we
          g$invoke-code$7063$1yk2we
          g$visible?$7064$1yk2we
          g$source-file-name$7065$1yk2we)
        ((case-lambda
           ((g$imp-lib*$7066$1yk2we
              g$vis-lib*$7067$1yk2we
              g$inv-lib*$7068$1yk2we)
            (begin
              (if (not (if (symbol? g$id$7052$1yk2we)
                         (if (list? g$name$7053$1yk2we)
                           (begin '#f (list? g$ver$7054$1yk2we))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7052$1yk2we
                  g$name$7053$1yk2we
                  g$ver$7054$1yk2we)
                (void))
              (if (g$library-exists?$6927$1yk2we g$name$7053$1yk2we)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7053$1yk2we)
                (void))
              ((case-lambda
                 ((g$lib$7069$1yk2we)
                  (g$install-library-record$6930$1yk2we g$lib$7069$1yk2we)))
               (g$make-library$6883$1yk2we
                 g$id$7052$1yk2we
                 g$name$7053$1yk2we
                 g$ver$7054$1yk2we
                 g$imp-lib*$7066$1yk2we
                 g$vis-lib*$7067$1yk2we
                 g$inv-lib*$7068$1yk2we
                 g$exp-subst$7058$1yk2we
                 g$exp-env$7059$1yk2we
                 g$visit-proc$7060$1yk2we
                 g$invoke-proc$7061$1yk2we
                 g$visit-code$7062$1yk2we
                 g$invoke-code$7063$1yk2we
                 g$visible?$7064$1yk2we
                 g$source-file-name$7065$1yk2we)))))
         (map g$find-library-by-spec/die$6928$1yk2we g$imp*$7055$1yk2we)
         (map g$find-library-by-spec/die$6928$1yk2we g$vis*$7056$1yk2we)
         (map g$find-library-by-spec/die$6928$1yk2we g$inv*$7057$1yk2we)))))
   (g$imported-label->binding$6932$1yk2we
     g$imported-label->binding$7136$1yk2we
     (case-lambda
       ((g$lab$7070$1yk2we)
        (g$hashtable-ref$5276$1yk2we
          g$label->binding-table$6929$1yk2we
          g$lab$7070$1yk2we
          '#f))))
   (g$invoke-library$6933$1yk2we
     g$invoke-library$7137$1yk2we
     (case-lambda
       ((g$lib$7071$1yk2we)
        ((case-lambda
           ((g$invoke$7072$1yk2we)
            (if (procedure? g$invoke$7072$1yk2we)
              (begin
                (g$set-library-invoke-state!$6907$1yk2we
                  g$lib$7071$1yk2we
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7071$1yk2we))))
                (for-each
                  g$invoke-library$6933$1yk2we
                  (g$library-inv*$6889$1yk2we g$lib$7071$1yk2we))
                (g$set-library-invoke-state!$6907$1yk2we
                  g$lib$7071$1yk2we
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7071$1yk2we))))
                (g$invoke$7072$1yk2we)
                (g$set-library-invoke-state!$6907$1yk2we g$lib$7071$1yk2we '#t))
              (void))))
         (g$library-invoke-state$6893$1yk2we g$lib$7071$1yk2we)))))
   (g$visit-library$6934$1yk2we
     g$visit-library$7138$1yk2we
     (case-lambda
       ((g$lib$7073$1yk2we)
        ((case-lambda
           ((g$visit$7074$1yk2we)
            (if (procedure? g$visit$7074$1yk2we)
              (begin
                (g$set-library-visit-state!$6906$1yk2we
                  g$lib$7073$1yk2we
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7073$1yk2we))))
                (for-each
                  g$invoke-library$6933$1yk2we
                  (g$library-vis*$6888$1yk2we g$lib$7073$1yk2we))
                (g$set-library-visit-state!$6906$1yk2we
                  g$lib$7073$1yk2we
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7073$1yk2we))))
                (g$visit$7074$1yk2we)
                (g$set-library-visit-state!$6906$1yk2we g$lib$7073$1yk2we '#t))
              (void))))
         (g$library-visit-state$6892$1yk2we g$lib$7073$1yk2we)))))
   (g$invoke-library-by-spec$6935$1yk2we
     g$invoke-library-by-spec$7139$1yk2we
     (case-lambda
       ((g$spec$7075$1yk2we)
        (g$invoke-library$6933$1yk2we
          (g$find-library-by-spec/die$6928$1yk2we g$spec$7075$1yk2we)))))
   (g$installed-libraries$6936$1yk2we
     g$installed-libraries$7140$1yk2we
     (case-lambda
       ((g$all?$7076$1yk2we)
        ((letrec ((g$f$7077$1yk2we
                    (case-lambda
                      ((g$ls$7078$1yk2we)
                       (if (null? g$ls$7078$1yk2we)
                         '()
                         (if ((case-lambda
                                ((g$t$7079$1yk2we)
                                 (if g$t$7079$1yk2we
                                   g$t$7079$1yk2we
                                   (begin
                                     '#f
                                     (g$library-visible?$6896$1yk2we
                                       (car g$ls$7078$1yk2we))))))
                              g$all?$7076$1yk2we)
                           (cons
                             (car g$ls$7078$1yk2we)
                             (g$f$7077$1yk2we (cdr g$ls$7078$1yk2we)))
                           (g$f$7077$1yk2we (cdr g$ls$7078$1yk2we))))))))
           g$f$7077$1yk2we)
         ((g$current-library-collection$6878$1yk2we))))
       (() (g$installed-libraries$6936$1yk2we '#f))))
   (g$library-spec$6937$1yk2we
     g$library-spec$7141$1yk2we
     (case-lambda
       ((g$x$7080$1yk2we)
        (begin
          (if (not (g$library?$6882$1yk2we g$x$7080$1yk2we))
            (assertion-violation 'library-spec '"not a library" g$x$7080$1yk2we)
            (void))
          (list
            (g$library-id$6884$1yk2we g$x$7080$1yk2we)
            (g$library-name$6885$1yk2we g$x$7080$1yk2we)
            (g$library-version$6886$1yk2we g$x$7080$1yk2we)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7142$1yk2we
     g$build-global-define$7252$1yk2we
     (case-lambda ((g$x$7223$1yk2we) (g$build-void$7219$1yk2we))))
   (g$build-lambda$7191$1yk2we
     g$build-lambda$7253$1yk2we
     (case-lambda
       ((g$ae$7224$1yk2we g$vars$7225$1yk2we g$exp$7226$1yk2we)
        (list 'case-lambda (list g$vars$7225$1yk2we g$exp$7226$1yk2we)))))
   (g$build-case-lambda$7192$1yk2we
     g$build-case-lambda$7254$1yk2we
     (case-lambda
       ((g$ae$7227$1yk2we g$vars*$7228$1yk2we g$exp*$7229$1yk2we)
        (cons 'case-lambda (map list g$vars*$7228$1yk2we g$exp*$7229$1yk2we)))))
   (g$build-let$7193$1yk2we
     g$build-let$7255$1yk2we
     (case-lambda
       ((g$ae$7230$1yk2we
          g$lhs*$7231$1yk2we
          g$rhs*$7232$1yk2we
          g$body$7233$1yk2we)
        (cons
          (g$build-lambda$7191$1yk2we
            g$ae$7230$1yk2we
            g$lhs*$7231$1yk2we
            g$body$7233$1yk2we)
          g$rhs*$7232$1yk2we))))
   (g$build-sequence$7218$1yk2we
     g$build-sequence$7256$1yk2we
     (case-lambda
       ((g$ae$7234$1yk2we g$exps$7235$1yk2we)
        ((letrec ((g$loop$7236$1yk2we
                    (case-lambda
                      ((g$exps$7237$1yk2we)
                       (if (null? (cdr g$exps$7237$1yk2we))
                         (car g$exps$7237$1yk2we)
                         (if (equal?
                               (car g$exps$7237$1yk2we)
                               (g$build-void$7219$1yk2we))
                           (g$loop$7236$1yk2we (cdr g$exps$7237$1yk2we))
                           (cons 'begin g$exps$7237$1yk2we)))))))
           g$loop$7236$1yk2we)
         g$exps$7235$1yk2we))))
   (g$build-void$7219$1yk2we
     g$build-void$7257$1yk2we
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7220$1yk2we
     g$build-letrec$7258$1yk2we
     (case-lambda
       ((g$ae$7238$1yk2we
          g$vars$7239$1yk2we
          g$val-exps$7240$1yk2we
          g$body-exp$7241$1yk2we)
        (if (null? g$vars$7239$1yk2we)
          g$body-exp$7241$1yk2we
          (list
            'letrec
            (map list g$vars$7239$1yk2we g$val-exps$7240$1yk2we)
            g$body-exp$7241$1yk2we)))))
   (g$build-letrec*$7221$1yk2we
     g$build-letrec*$7259$1yk2we
     (case-lambda
       ((g$ae$7242$1yk2we
          g$vars$7243$1yk2we
          g$val-exps$7244$1yk2we
          g$body-exp$7245$1yk2we)
        (if (null? g$vars$7243$1yk2we)
          g$body-exp$7245$1yk2we
          (list
            'letrec*
            (map list g$vars$7243$1yk2we g$val-exps$7244$1yk2we)
            g$body-exp$7245$1yk2we)))))
   (g$build-library-letrec*$7222$1yk2we
     g$build-library-letrec*$7260$1yk2we
     (case-lambda
       ((g$ae$7246$1yk2we
          g$name$7247$1yk2we
          g$vars$7248$1yk2we
          g$locs$7249$1yk2we
          g$val-exps$7250$1yk2we
          g$body-exp$7251$1yk2we)
        (list
          'library-letrec*
          g$name$7247$1yk2we
          (map list
               g$vars$7248$1yk2we
               g$locs$7249$1yk2we
               g$val-exps$7250$1yk2we)
          g$body-exp$7251$1yk2we)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7261$1yk2we
     g$set-cons$10914$1yk2we
     (case-lambda
       ((g$x$7719$1yk2we g$ls$7720$1yk2we)
        (if (memq g$x$7719$1yk2we g$ls$7720$1yk2we)
          g$ls$7720$1yk2we
          (cons g$x$7719$1yk2we g$ls$7720$1yk2we)))))
   (g$set-union$7262$1yk2we
     g$set-union$10915$1yk2we
     (case-lambda
       ((g$ls1$7721$1yk2we g$ls2$7722$1yk2we)
        (if (null? g$ls1$7721$1yk2we)
          g$ls2$7722$1yk2we
          (if (memq (car g$ls1$7721$1yk2we) g$ls2$7722$1yk2we)
            (g$set-union$7262$1yk2we (cdr g$ls1$7721$1yk2we) g$ls2$7722$1yk2we)
            (cons
              (car g$ls1$7721$1yk2we)
              (g$set-union$7262$1yk2we
                (cdr g$ls1$7721$1yk2we)
                g$ls2$7722$1yk2we)))))))
   (g$top-mark*$7264$1yk2we g$top-mark*$10916$1yk2we '(top))
   (g$top-marked?$7265$1yk2we
     g$top-marked?$10917$1yk2we
     (case-lambda ((g$m*$7723$1yk2we) (memq 'top g$m*$7723$1yk2we))))
   (g$gen-lexical$7266$1yk2we
     g$gen-lexical$10918$1yk2we
     (case-lambda
       ((g$sym$7724$1yk2we)
        (if (symbol? g$sym$7724$1yk2we)
          (gensym g$sym$7724$1yk2we)
          (if (g$stx?$7294$1yk2we g$sym$7724$1yk2we)
            (g$gen-lexical$7266$1yk2we
              (g$id->sym$7323$1yk2we g$sym$7724$1yk2we))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7724$1yk2we))))))
   (g$gen-global$7267$1yk2we
     g$gen-global$10919$1yk2we
     (case-lambda
       ((g$x$7725$1yk2we) (g$gen-lexical$7266$1yk2we g$x$7725$1yk2we))))
   (g$gen-label$7268$1yk2we
     g$gen-label$10920$1yk2we
     (case-lambda ((g$_$7726$1yk2we) (gensym))))
   (g$gen-top-level-label$7269$1yk2we
     g$gen-top-level-label$10921$1yk2we
     (case-lambda
       ((g$id$7727$1yk2we g$rib$7728$1yk2we)
        (letrec* ((g$find$7729$1yk2we
                    (case-lambda
                      ((g$sym$7735$1yk2we
                         g$mark*$7736$1yk2we
                         g$sym*$7737$1yk2we
                         g$mark**$7738$1yk2we
                         g$label*$7739$1yk2we)
                       (if (pair? g$sym*$7737$1yk2we)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7735$1yk2we
                                        (car g$sym*$7737$1yk2we))
                                 (begin
                                   '#f
                                   (g$same-marks?$7324$1yk2we
                                     g$mark*$7736$1yk2we
                                     (car g$mark**$7738$1yk2we)))
                                 '#f)
                             (car g$label*$7739$1yk2we)
                             (g$find$7729$1yk2we
                               g$sym$7735$1yk2we
                               g$mark*$7736$1yk2we
                               (cdr g$sym*$7737$1yk2we)
                               (cdr g$mark**$7738$1yk2we)
                               (cdr g$label*$7739$1yk2we))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7730$1yk2we g$mark*$7731$1yk2we)
              ((case-lambda
                 ((g$sym*$7732$1yk2we)
                  ((case-lambda
                     ((g$t$7733$1yk2we)
                      (if g$t$7733$1yk2we
                        ((case-lambda
                           ((g$label$7734$1yk2we)
                            (if (g$imported-label->binding$7136$1yk2we
                                  g$label$7734$1yk2we)
                              (gensym)
                              g$label$7734$1yk2we)))
                         g$t$7733$1yk2we)
                        (gensym))))
                   (if (memq
                         g$sym$7730$1yk2we
                         (g$rib-sym*$7277$1yk2we g$rib$7728$1yk2we))
                     (begin
                       '#f
                       (g$find$7729$1yk2we
                         g$sym$7730$1yk2we
                         g$mark*$7731$1yk2we
                         g$sym*$7732$1yk2we
                         (g$rib-mark**$7278$1yk2we g$rib$7728$1yk2we)
                         (g$rib-label*$7279$1yk2we g$rib$7728$1yk2we)))
                     '#f))))
               (g$rib-sym*$7277$1yk2we g$rib$7728$1yk2we))))
           (g$id->sym$7323$1yk2we g$id$7727$1yk2we)
           (g$stx-mark*$7297$1yk2we g$id$7727$1yk2we))))))
   (g$gen-define-label+loc$7270$1yk2we
     g$gen-define-label+loc$10922$1yk2we
     (case-lambda
       ((g$id$7740$1yk2we g$rib$7741$1yk2we)
        ((case-lambda
           ((g$t$7742$1yk2we)
            (if g$t$7742$1yk2we
              ((case-lambda
                 ((g$env$7743$1yk2we)
                  ((case-lambda
                     ((g$label$7744$1yk2we g$locs$7745$1yk2we)
                      (values
                        g$label$7744$1yk2we
                        ((case-lambda
                           ((g$t$7746$1yk2we)
                            (if g$t$7746$1yk2we
                              (cdr g$t$7746$1yk2we)
                              ((case-lambda
                                 ((g$loc$7747$1yk2we)
                                  (begin
                                    (g$set-interaction-env-locs!$7683$1yk2we
                                      g$env$7743$1yk2we
                                      (cons
                                        (cons
                                          g$label$7744$1yk2we
                                          g$loc$7747$1yk2we)
                                        g$locs$7745$1yk2we))
                                    g$loc$7747$1yk2we)))
                               (g$gen-lexical$7266$1yk2we g$id$7740$1yk2we)))))
                         (assq g$label$7744$1yk2we g$locs$7745$1yk2we)))))
                   (g$gen-top-level-label$7269$1yk2we
                     g$id$7740$1yk2we
                     g$rib$7741$1yk2we)
                   (g$interaction-env-locs$7680$1yk2we g$env$7743$1yk2we))))
               g$t$7742$1yk2we)
              (values (gensym) (g$gen-lexical$7266$1yk2we g$id$7740$1yk2we)))))
         (g$top-level-context$7718$1yk2we)))))
   (g$gen-define-label$7271$1yk2we
     g$gen-define-label$10923$1yk2we
     (case-lambda
       ((g$id$7748$1yk2we g$rib$7749$1yk2we)
        (if (g$top-level-context$7718$1yk2we)
          (g$gen-top-level-label$7269$1yk2we g$id$7748$1yk2we g$rib$7749$1yk2we)
          (gensym)))))
   (g$8368$7272$1yk2we
     g$8368$10924$1yk2we
     (make-record-type-descriptor
       'rib
       '#f
       'g$8371$1yk2we
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8370$7273$1yk2we g$8370$10925$1yk2we '#f)
   (g$8369$7274$1yk2we
     g$8369$10926$1yk2we
     (make-record-constructor-descriptor
       g$8368$7272$1yk2we
       '#f
       g$8370$7273$1yk2we))
   (g$rib?$7275$1yk2we
     g$rib?$10927$1yk2we
     (record-predicate g$8368$7272$1yk2we))
   (g$make-rib$7276$1yk2we
     g$make-rib$10928$1yk2we
     (record-constructor g$8369$7274$1yk2we))
   (g$rib-sym*$7277$1yk2we
     g$rib-sym*$10929$1yk2we
     (record-accessor g$8368$7272$1yk2we '0))
   (g$rib-mark**$7278$1yk2we
     g$rib-mark**$10930$1yk2we
     (record-accessor g$8368$7272$1yk2we '1))
   (g$rib-label*$7279$1yk2we
     g$rib-label*$10931$1yk2we
     (record-accessor g$8368$7272$1yk2we '2))
   (g$rib-sealed/freq$7280$1yk2we
     g$rib-sealed/freq$10932$1yk2we
     (record-accessor g$8368$7272$1yk2we '3))
   (g$set-rib-sym*!$7281$1yk2we
     g$set-rib-sym*!$10933$1yk2we
     (record-mutator g$8368$7272$1yk2we '0))
   (g$set-rib-mark**!$7282$1yk2we
     g$set-rib-mark**!$10934$1yk2we
     (record-mutator g$8368$7272$1yk2we '1))
   (g$set-rib-label*!$7283$1yk2we
     g$set-rib-label*!$10935$1yk2we
     (record-mutator g$8368$7272$1yk2we '2))
   (g$set-rib-sealed/freq!$7284$1yk2we
     g$set-rib-sealed/freq!$10936$1yk2we
     (record-mutator g$8368$7272$1yk2we '3))
   (g$make-empty-rib$7285$1yk2we
     g$make-empty-rib$10937$1yk2we
     (case-lambda (() (g$make-rib$7276$1yk2we '() '() '() '#f))))
   (g$extend-rib!$7286$1yk2we
     g$extend-rib!$10938$1yk2we
     (case-lambda
       ((g$rib$7750$1yk2we g$id$7751$1yk2we g$label$7752$1yk2we)
        (letrec* ((g$find$7753$1yk2we
                    (case-lambda
                      ((g$sym$7759$1yk2we
                         g$mark*$7760$1yk2we
                         g$sym*$7761$1yk2we
                         g$mark**$7762$1yk2we
                         g$label*$7763$1yk2we)
                       (if (pair? g$sym*$7761$1yk2we)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7759$1yk2we
                                        (car g$sym*$7761$1yk2we))
                                 (begin
                                   '#f
                                   (g$same-marks?$7324$1yk2we
                                     g$mark*$7760$1yk2we
                                     (car g$mark**$7762$1yk2we)))
                                 '#f)
                             g$label*$7763$1yk2we
                             (g$find$7753$1yk2we
                               g$sym$7759$1yk2we
                               g$mark*$7760$1yk2we
                               (cdr g$sym*$7761$1yk2we)
                               (cdr g$mark**$7762$1yk2we)
                               (cdr g$label*$7763$1yk2we))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7280$1yk2we g$rib$7750$1yk2we)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7750$1yk2we)
              (void))
            ((case-lambda
               ((g$sym$7754$1yk2we g$mark*$7755$1yk2we)
                ((case-lambda
                   ((g$sym*$7756$1yk2we)
                    ((case-lambda
                       ((g$t$7757$1yk2we)
                        (if g$t$7757$1yk2we
                          ((case-lambda
                             ((g$p$7758$1yk2we)
                              (if (not (eq? g$label$7752$1yk2we
                                            (car g$p$7758$1yk2we)))
                                (if (g$top-level-context$7718$1yk2we)
                                  (set-car! g$p$7758$1yk2we g$label$7752$1yk2we)
                                  (g$syntax-violation$7711$1yk2we
                                    '#f
                                    '"cannot redefine"
                                    g$id$7751$1yk2we))
                                (void))))
                           g$t$7757$1yk2we)
                          (begin
                            (g$set-rib-sym*!$7281$1yk2we
                              g$rib$7750$1yk2we
                              (cons g$sym$7754$1yk2we g$sym*$7756$1yk2we))
                            (g$set-rib-mark**!$7282$1yk2we
                              g$rib$7750$1yk2we
                              (cons
                                g$mark*$7755$1yk2we
                                (g$rib-mark**$7278$1yk2we g$rib$7750$1yk2we)))
                            (g$set-rib-label*!$7283$1yk2we
                              g$rib$7750$1yk2we
                              (cons
                                g$label$7752$1yk2we
                                (g$rib-label*$7279$1yk2we
                                  g$rib$7750$1yk2we)))))))
                     (if (memq
                           g$sym$7754$1yk2we
                           (g$rib-sym*$7277$1yk2we g$rib$7750$1yk2we))
                       (begin
                         '#f
                         (g$find$7753$1yk2we
                           g$sym$7754$1yk2we
                           g$mark*$7755$1yk2we
                           g$sym*$7756$1yk2we
                           (g$rib-mark**$7278$1yk2we g$rib$7750$1yk2we)
                           (g$rib-label*$7279$1yk2we g$rib$7750$1yk2we)))
                       '#f))))
                 (g$rib-sym*$7277$1yk2we g$rib$7750$1yk2we))))
             (g$id->sym$7323$1yk2we g$id$7751$1yk2we)
             (g$stx-mark*$7297$1yk2we g$id$7751$1yk2we)))))))
   (g$make-rib-map$7287$1yk2we
     g$make-rib-map$10939$1yk2we
     (case-lambda
       ((g$sym*$7764$1yk2we)
        ((case-lambda
           ((g$ht$7765$1yk2we)
            ((letrec ((g$f$7766$1yk2we
                        (case-lambda
                          ((g$i$7767$1yk2we g$sym*$7768$1yk2we)
                           (if (null? g$sym*$7768$1yk2we)
                             g$ht$7765$1yk2we
                             (begin
                               (g$hashtable-update!$5280$1yk2we
                                 g$ht$7765$1yk2we
                                 (car g$sym*$7768$1yk2we)
                                 (case-lambda
                                   ((g$x$7769$1yk2we)
                                    (cons g$i$7767$1yk2we g$x$7769$1yk2we)))
                                 '())
                               (g$f$7766$1yk2we
                                 (+ g$i$7767$1yk2we '1)
                                 (cdr g$sym*$7768$1yk2we))))))))
               g$f$7766$1yk2we)
             '0
             g$sym*$7764$1yk2we)))
         (g$make-eq-hashtable$5273$1yk2we)))))
   (g$seal-rib!$7288$1yk2we
     g$seal-rib!$10940$1yk2we
     (case-lambda
       ((g$rib$7770$1yk2we)
        ((case-lambda
           ((g$sym*$7771$1yk2we)
            (if (not (null? g$sym*$7771$1yk2we))
              (begin
                (g$set-rib-sym*!$7281$1yk2we
                  g$rib$7770$1yk2we
                  (list->vector g$sym*$7771$1yk2we))
                (g$set-rib-mark**!$7282$1yk2we
                  g$rib$7770$1yk2we
                  (list->vector (g$rib-mark**$7278$1yk2we g$rib$7770$1yk2we)))
                (g$set-rib-label*!$7283$1yk2we
                  g$rib$7770$1yk2we
                  (list->vector (g$rib-label*$7279$1yk2we g$rib$7770$1yk2we)))
                (g$set-rib-sealed/freq!$7284$1yk2we
                  g$rib$7770$1yk2we
                  (g$make-rib-map$7287$1yk2we g$sym*$7771$1yk2we)))
              (void))))
         (g$rib-sym*$7277$1yk2we g$rib$7770$1yk2we)))))
   (g$unseal-rib!$7289$1yk2we
     g$unseal-rib!$10941$1yk2we
     (case-lambda
       ((g$rib$7772$1yk2we)
        (if (g$rib-sealed/freq$7280$1yk2we g$rib$7772$1yk2we)
          (begin
            (g$set-rib-sealed/freq!$7284$1yk2we g$rib$7772$1yk2we '#f)
            (g$set-rib-sym*!$7281$1yk2we
              g$rib$7772$1yk2we
              (vector->list (g$rib-sym*$7277$1yk2we g$rib$7772$1yk2we)))
            (g$set-rib-mark**!$7282$1yk2we
              g$rib$7772$1yk2we
              (vector->list (g$rib-mark**$7278$1yk2we g$rib$7772$1yk2we)))
            (g$set-rib-label*!$7283$1yk2we
              g$rib$7772$1yk2we
              (vector->list (g$rib-label*$7279$1yk2we g$rib$7772$1yk2we))))
          (void)))))
   (g$make-full-rib$7290$1yk2we
     g$make-full-rib$10942$1yk2we
     (case-lambda
       ((g$id*$7773$1yk2we g$label*$7774$1yk2we)
        ((case-lambda
           ((g$r$7775$1yk2we)
            (begin (g$seal-rib!$7288$1yk2we g$r$7775$1yk2we) g$r$7775$1yk2we)))
         (g$make-rib$7276$1yk2we
           (map g$id->sym$7323$1yk2we g$id*$7773$1yk2we)
           (map g$stx-mark*$7297$1yk2we g$id*$7773$1yk2we)
           g$label*$7774$1yk2we
           '#f)))))
   (g$8394$7291$1yk2we
     g$8394$10943$1yk2we
     (make-record-type-descriptor
       'stx
       '#f
       'g$8397$1yk2we
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8396$7292$1yk2we g$8396$10944$1yk2we '#f)
   (g$8395$7293$1yk2we
     g$8395$10945$1yk2we
     (make-record-constructor-descriptor
       g$8394$7291$1yk2we
       '#f
       g$8396$7292$1yk2we))
   (g$stx?$7294$1yk2we
     g$stx?$10946$1yk2we
     (record-predicate g$8394$7291$1yk2we))
   (g$make-stx$7295$1yk2we
     g$make-stx$10947$1yk2we
     (record-constructor g$8395$7293$1yk2we))
   (g$stx-expr$7296$1yk2we
     g$stx-expr$10948$1yk2we
     (record-accessor g$8394$7291$1yk2we '0))
   (g$stx-mark*$7297$1yk2we
     g$stx-mark*$10949$1yk2we
     (record-accessor g$8394$7291$1yk2we '1))
   (g$stx-subst*$7298$1yk2we
     g$stx-subst*$10950$1yk2we
     (record-accessor g$8394$7291$1yk2we '2))
   (g$stx-ae*$7299$1yk2we
     g$stx-ae*$10951$1yk2we
     (record-accessor g$8394$7291$1yk2we '3))
   (g$set-stx-expr!$7300$1yk2we
     g$set-stx-expr!$10952$1yk2we
     (record-mutator g$8394$7291$1yk2we '0))
   (g$set-stx-mark*!$7301$1yk2we
     g$set-stx-mark*!$10953$1yk2we
     (record-mutator g$8394$7291$1yk2we '1))
   (g$set-stx-subst*!$7302$1yk2we
     g$set-stx-subst*!$10954$1yk2we
     (record-mutator g$8394$7291$1yk2we '2))
   (g$set-stx-ae*!$7303$1yk2we
     g$set-stx-ae*!$10955$1yk2we
     (record-mutator g$8394$7291$1yk2we '3))
   (g$rp$7304$1yk2we
     g$rp$10956$1yk2we
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7776$1yk2we g$p$7777$1yk2we)
          (begin
            (display '"#<syntax " g$p$7777$1yk2we)
            (write (g$stx->datum$7333$1yk2we g$x$7776$1yk2we) g$p$7777$1yk2we)
            ((case-lambda
               ((g$expr$7778$1yk2we)
                (if (annotation? g$expr$7778$1yk2we)
                  ((case-lambda
                     ((g$src$7779$1yk2we)
                      (if (pair? g$src$7779$1yk2we)
                        (begin
                          (display '" [" g$p$7777$1yk2we)
                          (display (cdr g$src$7779$1yk2we) g$p$7777$1yk2we)
                          (display '" of " g$p$7777$1yk2we)
                          (display (car g$src$7779$1yk2we) g$p$7777$1yk2we)
                          (display '"]" g$p$7777$1yk2we))
                        (void))))
                   (annotation-source g$expr$7778$1yk2we))
                  (void))))
             (g$stx-expr$7296$1yk2we g$x$7776$1yk2we))
            (display '">" g$p$7777$1yk2we))))))
   (g$datum->stx$7305$1yk2we
     g$datum->stx$10957$1yk2we
     (case-lambda
       ((g$id$7780$1yk2we g$datum$7781$1yk2we)
        (g$make-stx$7295$1yk2we
          g$datum$7781$1yk2we
          (g$stx-mark*$7297$1yk2we g$id$7780$1yk2we)
          (g$stx-subst*$7298$1yk2we g$id$7780$1yk2we)
          (g$stx-ae*$7299$1yk2we g$id$7780$1yk2we)))))
   (g$gen-mark$7306$1yk2we
     g$gen-mark$10958$1yk2we
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7307$1yk2we g$anti-mark$10959$1yk2we '#f)
   (g$anti-mark?$7308$1yk2we g$anti-mark?$10960$1yk2we not)
   (g$join-wraps$7309$1yk2we
     g$join-wraps$10961$1yk2we
     (case-lambda
       ((g$m1*$7782$1yk2we
          g$s1*$7783$1yk2we
          g$ae1*$7784$1yk2we
          g$e$7785$1yk2we)
        (letrec* ((g$cancel$7786$1yk2we
                    (case-lambda
                      ((g$ls1$7790$1yk2we g$ls2$7791$1yk2we)
                       ((letrec ((g$f$7792$1yk2we
                                   (case-lambda
                                     ((g$x$7793$1yk2we g$ls1$7794$1yk2we)
                                      (if (null? g$ls1$7794$1yk2we)
                                        (cdr g$ls2$7791$1yk2we)
                                        (cons
                                          g$x$7793$1yk2we
                                          (g$f$7792$1yk2we
                                            (car g$ls1$7794$1yk2we)
                                            (cdr g$ls1$7794$1yk2we))))))))
                          g$f$7792$1yk2we)
                        (car g$ls1$7790$1yk2we)
                        (cdr g$ls1$7790$1yk2we))))))
          ((case-lambda
             ((g$m2*$7787$1yk2we g$s2*$7788$1yk2we g$ae2*$7789$1yk2we)
              (if (if (not (null? g$m1*$7782$1yk2we))
                    (if (not (null? g$m2*$7787$1yk2we))
                      (begin
                        '#f
                        (g$anti-mark?$7308$1yk2we (car g$m2*$7787$1yk2we)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7786$1yk2we g$m1*$7782$1yk2we g$m2*$7787$1yk2we)
                  (g$cancel$7786$1yk2we g$s1*$7783$1yk2we g$s2*$7788$1yk2we)
                  (g$cancel$7786$1yk2we g$ae1*$7784$1yk2we g$ae2*$7789$1yk2we))
                (values
                  (append g$m1*$7782$1yk2we g$m2*$7787$1yk2we)
                  (append g$s1*$7783$1yk2we g$s2*$7788$1yk2we)
                  (append g$ae1*$7784$1yk2we g$ae2*$7789$1yk2we)))))
           (g$stx-mark*$7297$1yk2we g$e$7785$1yk2we)
           (g$stx-subst*$7298$1yk2we g$e$7785$1yk2we)
           (g$stx-ae*$7299$1yk2we g$e$7785$1yk2we))))))
   (g$mkstx$7310$1yk2we
     g$mkstx$10962$1yk2we
     (case-lambda
       ((g$e$7795$1yk2we g$m*$7796$1yk2we g$s*$7797$1yk2we g$ae*$7798$1yk2we)
        (if (if (g$stx?$7294$1yk2we g$e$7795$1yk2we)
              (begin '#f (not (g$top-marked?$7265$1yk2we g$m*$7796$1yk2we)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7309$1yk2we
                 g$m*$7796$1yk2we
                 g$s*$7797$1yk2we
                 g$ae*$7798$1yk2we
                 g$e$7795$1yk2we)))
            (case-lambda
              ((g$m*$7802$1yk2we g$s*$7803$1yk2we g$ae*$7804$1yk2we)
               ((case-lambda
                  ((g$ae*$7805$1yk2we g$s*$7806$1yk2we g$m*$7807$1yk2we)
                   (g$make-stx$7295$1yk2we
                     (g$stx-expr$7296$1yk2we g$e$7795$1yk2we)
                     g$m*$7807$1yk2we
                     g$s*$7806$1yk2we
                     g$ae*$7805$1yk2we)))
                g$ae*$7804$1yk2we
                g$s*$7803$1yk2we
                g$m*$7802$1yk2we))))
          (g$make-stx$7295$1yk2we
            g$e$7795$1yk2we
            g$m*$7796$1yk2we
            g$s*$7797$1yk2we
            g$ae*$7798$1yk2we)))))
   (g$add-mark$7311$1yk2we
     g$add-mark$10963$1yk2we
     (case-lambda
       ((g$m$7808$1yk2we g$e$7809$1yk2we g$ae$7810$1yk2we)
        (g$mkstx$7310$1yk2we
          g$e$7809$1yk2we
          (list g$m$7808$1yk2we)
          '(shift)
          (list g$ae$7810$1yk2we)))))
   (g$add-subst$7312$1yk2we
     g$add-subst$10964$1yk2we
     (case-lambda
       ((g$subst$7811$1yk2we g$e$7812$1yk2we)
        (g$mkstx$7310$1yk2we
          g$e$7812$1yk2we
          '()
          (list g$subst$7811$1yk2we)
          '()))))
   (g$syntax-kind?$7313$1yk2we
     g$syntax-kind?$10965$1yk2we
     (case-lambda
       ((g$x$7813$1yk2we g$p?$7814$1yk2we)
        (if (g$stx?$7294$1yk2we g$x$7813$1yk2we)
          (g$syntax-kind?$7313$1yk2we
            (g$stx-expr$7296$1yk2we g$x$7813$1yk2we)
            g$p?$7814$1yk2we)
          (if (annotation? g$x$7813$1yk2we)
            (g$syntax-kind?$7313$1yk2we
              (annotation-expression g$x$7813$1yk2we)
              g$p?$7814$1yk2we)
            (g$p?$7814$1yk2we g$x$7813$1yk2we))))))
   (g$syntax-vector->list$7314$1yk2we
     g$syntax-vector->list$10966$1yk2we
     (case-lambda
       ((g$x$7815$1yk2we)
        (if (g$stx?$7294$1yk2we g$x$7815$1yk2we)
          ((case-lambda
             ((g$ls$7816$1yk2we
                g$m*$7817$1yk2we
                g$s*$7818$1yk2we
                g$ae*$7819$1yk2we)
              (map (case-lambda
                     ((g$x$7820$1yk2we)
                      (g$mkstx$7310$1yk2we
                        g$x$7820$1yk2we
                        g$m*$7817$1yk2we
                        g$s*$7818$1yk2we
                        g$ae*$7819$1yk2we)))
                   g$ls$7816$1yk2we)))
           (g$syntax-vector->list$7314$1yk2we
             (g$stx-expr$7296$1yk2we g$x$7815$1yk2we))
           (g$stx-mark*$7297$1yk2we g$x$7815$1yk2we)
           (g$stx-subst*$7298$1yk2we g$x$7815$1yk2we)
           (g$stx-ae*$7299$1yk2we g$x$7815$1yk2we))
          (if (annotation? g$x$7815$1yk2we)
            (g$syntax-vector->list$7314$1yk2we
              (annotation-expression g$x$7815$1yk2we))
            (if (vector? g$x$7815$1yk2we)
              (vector->list g$x$7815$1yk2we)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7815$1yk2we)))))))
   (g$syntax-pair?$7315$1yk2we
     g$syntax-pair?$10967$1yk2we
     (case-lambda
       ((g$x$7821$1yk2we) (g$syntax-kind?$7313$1yk2we g$x$7821$1yk2we pair?))))
   (g$syntax-vector?$7316$1yk2we
     g$syntax-vector?$10968$1yk2we
     (case-lambda
       ((g$x$7822$1yk2we)
        (g$syntax-kind?$7313$1yk2we g$x$7822$1yk2we vector?))))
   (g$syntax-null?$7317$1yk2we
     g$syntax-null?$10969$1yk2we
     (case-lambda
       ((g$x$7823$1yk2we) (g$syntax-kind?$7313$1yk2we g$x$7823$1yk2we null?))))
   (g$syntax-list?$7318$1yk2we
     g$syntax-list?$10970$1yk2we
     (case-lambda
       ((g$x$7824$1yk2we)
        ((case-lambda
           ((g$t$7825$1yk2we)
            (if g$t$7825$1yk2we
              g$t$7825$1yk2we
              (begin
                '#f
                (if (g$syntax-pair?$7315$1yk2we g$x$7824$1yk2we)
                  (begin
                    '#f
                    (g$syntax-list?$7318$1yk2we
                      (g$syntax-cdr$7320$1yk2we g$x$7824$1yk2we)))
                  '#f)))))
         (g$syntax-null?$7317$1yk2we g$x$7824$1yk2we)))))
   (g$syntax-car$7319$1yk2we
     g$syntax-car$10971$1yk2we
     (case-lambda
       ((g$x$7826$1yk2we)
        (if (g$stx?$7294$1yk2we g$x$7826$1yk2we)
          (g$mkstx$7310$1yk2we
            (g$syntax-car$7319$1yk2we (g$stx-expr$7296$1yk2we g$x$7826$1yk2we))
            (g$stx-mark*$7297$1yk2we g$x$7826$1yk2we)
            (g$stx-subst*$7298$1yk2we g$x$7826$1yk2we)
            (g$stx-ae*$7299$1yk2we g$x$7826$1yk2we))
          (if (annotation? g$x$7826$1yk2we)
            (g$syntax-car$7319$1yk2we (annotation-expression g$x$7826$1yk2we))
            (if (pair? g$x$7826$1yk2we)
              (car g$x$7826$1yk2we)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7826$1yk2we)))))))
   (g$syntax-cdr$7320$1yk2we
     g$syntax-cdr$10972$1yk2we
     (case-lambda
       ((g$x$7827$1yk2we)
        (if (g$stx?$7294$1yk2we g$x$7827$1yk2we)
          (g$mkstx$7310$1yk2we
            (g$syntax-cdr$7320$1yk2we (g$stx-expr$7296$1yk2we g$x$7827$1yk2we))
            (g$stx-mark*$7297$1yk2we g$x$7827$1yk2we)
            (g$stx-subst*$7298$1yk2we g$x$7827$1yk2we)
            (g$stx-ae*$7299$1yk2we g$x$7827$1yk2we))
          (if (annotation? g$x$7827$1yk2we)
            (g$syntax-cdr$7320$1yk2we (annotation-expression g$x$7827$1yk2we))
            (if (pair? g$x$7827$1yk2we)
              (cdr g$x$7827$1yk2we)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7827$1yk2we)))))))
   (g$syntax->list$7321$1yk2we
     g$syntax->list$10973$1yk2we
     (case-lambda
       ((g$x$7828$1yk2we)
        (if (g$syntax-pair?$7315$1yk2we g$x$7828$1yk2we)
          (cons
            (g$syntax-car$7319$1yk2we g$x$7828$1yk2we)
            (g$syntax->list$7321$1yk2we
              (g$syntax-cdr$7320$1yk2we g$x$7828$1yk2we)))
          (if (g$syntax-null?$7317$1yk2we g$x$7828$1yk2we)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7828$1yk2we))))))
   (g$id?$7322$1yk2we
     g$id?$10974$1yk2we
     (case-lambda
       ((g$x$7829$1yk2we)
        (if (g$stx?$7294$1yk2we g$x$7829$1yk2we)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7830$1yk2we)
                (symbol?
                  (if (annotation? g$expr$7830$1yk2we)
                    (annotation-stripped g$expr$7830$1yk2we)
                    g$expr$7830$1yk2we))))
             (g$stx-expr$7296$1yk2we g$x$7829$1yk2we)))
          '#f))))
   (g$id->sym$7323$1yk2we
     g$id->sym$10975$1yk2we
     (case-lambda
       ((g$x$7831$1yk2we)
        (begin
          (if (not (g$stx?$7294$1yk2we g$x$7831$1yk2we))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7831$1yk2we)
            (void))
          ((case-lambda
             ((g$expr$7832$1yk2we)
              ((case-lambda
                 ((g$sym$7833$1yk2we)
                  (if (symbol? g$sym$7833$1yk2we)
                    g$sym$7833$1yk2we
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7831$1yk2we))))
               (if (annotation? g$expr$7832$1yk2we)
                 (annotation-stripped g$expr$7832$1yk2we)
                 g$expr$7832$1yk2we))))
           (g$stx-expr$7296$1yk2we g$x$7831$1yk2we))))))
   (g$same-marks?$7324$1yk2we
     g$same-marks?$10976$1yk2we
     (case-lambda
       ((g$x$7834$1yk2we g$y$7835$1yk2we)
        ((case-lambda
           ((g$t$7836$1yk2we)
            (if g$t$7836$1yk2we
              g$t$7836$1yk2we
              (begin
                '#f
                (if (pair? g$x$7834$1yk2we)
                  (if (pair? g$y$7835$1yk2we)
                    (if (eq? (car g$x$7834$1yk2we) (car g$y$7835$1yk2we))
                      (begin
                        '#f
                        (g$same-marks?$7324$1yk2we
                          (cdr g$x$7834$1yk2we)
                          (cdr g$y$7835$1yk2we)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7834$1yk2we)
           (begin '#f (null? g$y$7835$1yk2we))
           '#f)))))
   (g$bound-id=?$7325$1yk2we
     g$bound-id=?$10977$1yk2we
     (case-lambda
       ((g$x$7837$1yk2we g$y$7838$1yk2we)
        (if (eq? (g$id->sym$7323$1yk2we g$x$7837$1yk2we)
                 (g$id->sym$7323$1yk2we g$y$7838$1yk2we))
          (begin
            '#f
            (g$same-marks?$7324$1yk2we
              (g$stx-mark*$7297$1yk2we g$x$7837$1yk2we)
              (g$stx-mark*$7297$1yk2we g$y$7838$1yk2we)))
          '#f))))
   (g$free-id=?$7326$1yk2we
     g$free-id=?$10978$1yk2we
     (case-lambda
       ((g$i$7839$1yk2we g$j$7840$1yk2we)
        ((case-lambda
           ((g$t0$7841$1yk2we g$t1$7842$1yk2we)
            (if ((case-lambda
                   ((g$t$7843$1yk2we)
                    (if g$t$7843$1yk2we
                      g$t$7843$1yk2we
                      (begin '#f g$t1$7842$1yk2we))))
                 g$t0$7841$1yk2we)
              (eq? g$t0$7841$1yk2we g$t1$7842$1yk2we)
              (eq? (g$id->sym$7323$1yk2we g$i$7839$1yk2we)
                   (g$id->sym$7323$1yk2we g$j$7840$1yk2we)))))
         (g$id->real-label$7336$1yk2we g$i$7839$1yk2we)
         (g$id->real-label$7336$1yk2we g$j$7840$1yk2we)))))
   (g$valid-bound-ids?$7327$1yk2we
     g$valid-bound-ids?$10979$1yk2we
     (case-lambda
       ((g$id*$7844$1yk2we)
        (if (g$for-all$5480$1yk2we g$id?$7322$1yk2we g$id*$7844$1yk2we)
          (begin '#f (g$distinct-bound-ids?$7328$1yk2we g$id*$7844$1yk2we))
          '#f))))
   (g$distinct-bound-ids?$7328$1yk2we
     g$distinct-bound-ids?$10980$1yk2we
     (case-lambda
       ((g$id*$7845$1yk2we)
        ((case-lambda
           ((g$t$7846$1yk2we)
            (if g$t$7846$1yk2we
              g$t$7846$1yk2we
              (begin
                '#f
                (if (not (g$bound-id-member?$7329$1yk2we
                           (car g$id*$7845$1yk2we)
                           (cdr g$id*$7845$1yk2we)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7328$1yk2we (cdr g$id*$7845$1yk2we)))
                  '#f)))))
         (null? g$id*$7845$1yk2we)))))
   (g$bound-id-member?$7329$1yk2we
     g$bound-id-member?$10981$1yk2we
     (case-lambda
       ((g$id$7847$1yk2we g$id*$7848$1yk2we)
        (if (pair? g$id*$7848$1yk2we)
          (begin
            '#f
            ((case-lambda
               ((g$t$7849$1yk2we)
                (if g$t$7849$1yk2we
                  g$t$7849$1yk2we
                  (begin
                    '#f
                    (g$bound-id-member?$7329$1yk2we
                      g$id$7847$1yk2we
                      (cdr g$id*$7848$1yk2we))))))
             (g$bound-id=?$7325$1yk2we
               g$id$7847$1yk2we
               (car g$id*$7848$1yk2we))))
          '#f))))
   (g$self-evaluating?$7330$1yk2we
     g$self-evaluating?$10982$1yk2we
     (case-lambda
       ((g$x$7850$1yk2we)
        ((case-lambda
           ((g$t$7851$1yk2we)
            (if g$t$7851$1yk2we
              g$t$7851$1yk2we
              ((case-lambda
                 ((g$t$7852$1yk2we)
                  (if g$t$7852$1yk2we
                    g$t$7852$1yk2we
                    ((case-lambda
                       ((g$t$7853$1yk2we)
                        (if g$t$7853$1yk2we
                          g$t$7853$1yk2we
                          ((case-lambda
                             ((g$t$7854$1yk2we)
                              (if g$t$7854$1yk2we
                                g$t$7854$1yk2we
                                (begin '#f (bytevector? g$x$7850$1yk2we)))))
                           (boolean? g$x$7850$1yk2we)))))
                     (char? g$x$7850$1yk2we)))))
               (string? g$x$7850$1yk2we)))))
         (number? g$x$7850$1yk2we)))))
   (g$strip-annotations$7331$1yk2we
     g$strip-annotations$10983$1yk2we
     (case-lambda
       ((g$x$7855$1yk2we)
        (if (pair? g$x$7855$1yk2we)
          (cons
            (g$strip-annotations$7331$1yk2we (car g$x$7855$1yk2we))
            (g$strip-annotations$7331$1yk2we (cdr g$x$7855$1yk2we)))
          (if (vector? g$x$7855$1yk2we)
            (vector-map g$strip-annotations$7331$1yk2we g$x$7855$1yk2we)
            (if (annotation? g$x$7855$1yk2we)
              (annotation-stripped g$x$7855$1yk2we)
              g$x$7855$1yk2we))))))
   (g$strip$7332$1yk2we
     g$strip$10984$1yk2we
     (case-lambda
       ((g$x$7856$1yk2we g$m*$7857$1yk2we)
        (if (g$top-marked?$7265$1yk2we g$m*$7857$1yk2we)
          (if ((case-lambda
                 ((g$t$7858$1yk2we)
                  (if g$t$7858$1yk2we
                    g$t$7858$1yk2we
                    ((case-lambda
                       ((g$t$7859$1yk2we)
                        (if g$t$7859$1yk2we
                          g$t$7859$1yk2we
                          (begin
                            '#f
                            (if (vector? g$x$7856$1yk2we)
                              (if (> (vector-length g$x$7856$1yk2we) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7856$1yk2we '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7856$1yk2we)
                       (begin '#f (annotation? (car g$x$7856$1yk2we)))
                       '#f)))))
               (annotation? g$x$7856$1yk2we))
            (g$strip-annotations$7331$1yk2we g$x$7856$1yk2we)
            g$x$7856$1yk2we)
          ((letrec ((g$f$7860$1yk2we
                      (case-lambda
                        ((g$x$7861$1yk2we)
                         (if (g$stx?$7294$1yk2we g$x$7861$1yk2we)
                           (g$strip$7332$1yk2we
                             (g$stx-expr$7296$1yk2we g$x$7861$1yk2we)
                             (g$stx-mark*$7297$1yk2we g$x$7861$1yk2we))
                           (if (annotation? g$x$7861$1yk2we)
                             (annotation-stripped g$x$7861$1yk2we)
                             (if (pair? g$x$7861$1yk2we)
                               ((case-lambda
                                  ((g$a$7862$1yk2we g$d$7863$1yk2we)
                                   (if (if (eq? g$a$7862$1yk2we
                                                (car g$x$7861$1yk2we))
                                         (begin
                                           '#f
                                           (eq? g$d$7863$1yk2we
                                                (cdr g$x$7861$1yk2we)))
                                         '#f)
                                     g$x$7861$1yk2we
                                     (cons g$a$7862$1yk2we g$d$7863$1yk2we))))
                                (g$f$7860$1yk2we (car g$x$7861$1yk2we))
                                (g$f$7860$1yk2we (cdr g$x$7861$1yk2we)))
                               (if (vector? g$x$7861$1yk2we)
                                 ((case-lambda
                                    ((g$old$7864$1yk2we)
                                     ((case-lambda
                                        ((g$new$7865$1yk2we)
                                         (if (g$for-all$5480$1yk2we
                                               eq?
                                               g$old$7864$1yk2we
                                               g$new$7865$1yk2we)
                                           g$x$7861$1yk2we
                                           (list->vector g$new$7865$1yk2we))))
                                      (map g$f$7860$1yk2we g$old$7864$1yk2we))))
                                  (vector->list g$x$7861$1yk2we))
                                 g$x$7861$1yk2we))))))))
             g$f$7860$1yk2we)
           g$x$7856$1yk2we)))))
   (g$stx->datum$7333$1yk2we
     g$stx->datum$10985$1yk2we
     (case-lambda
       ((g$x$7866$1yk2we) (g$strip$7332$1yk2we g$x$7866$1yk2we '()))))
   (g$same-marks*?$7334$1yk2we
     g$same-marks*?$10986$1yk2we
     (case-lambda
       ((g$mark*$7867$1yk2we g$mark**$7868$1yk2we g$si$7869$1yk2we)
        (if (null? g$si$7869$1yk2we)
          '#f
          (if (g$same-marks?$7324$1yk2we
                g$mark*$7867$1yk2we
                (vector-ref g$mark**$7868$1yk2we (car g$si$7869$1yk2we)))
            (car g$si$7869$1yk2we)
            (g$same-marks*?$7334$1yk2we
              g$mark*$7867$1yk2we
              g$mark**$7868$1yk2we
              (cdr g$si$7869$1yk2we)))))))
   (g$id->label$7335$1yk2we
     g$id->label$10987$1yk2we
     (case-lambda
       ((g$id$7870$1yk2we)
        ((case-lambda
           ((g$t$7871$1yk2we)
            (if g$t$7871$1yk2we
              g$t$7871$1yk2we
              (begin
                '#f
                ((case-lambda
                   ((g$t$7872$1yk2we)
                    (if g$t$7872$1yk2we
                      ((case-lambda
                         ((g$env$7873$1yk2we)
                          ((case-lambda
                             ((g$rib$7874$1yk2we)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7270$1yk2we
                                     g$id$7870$1yk2we
                                     g$rib$7874$1yk2we)))
                                (case-lambda
                                  ((g$lab$7877$1yk2we g$loc_$7878$1yk2we)
                                   ((case-lambda
                                      ((g$loc_$7879$1yk2we g$lab$7880$1yk2we)
                                       (begin
                                         (g$extend-rib!$7286$1yk2we
                                           g$rib$7874$1yk2we
                                           g$id$7870$1yk2we
                                           g$lab$7880$1yk2we)
                                         g$lab$7880$1yk2we)))
                                    g$loc_$7878$1yk2we
                                    g$lab$7877$1yk2we))))))
                           (g$interaction-env-rib$7678$1yk2we
                             g$env$7873$1yk2we))))
                       g$t$7872$1yk2we)
                      '#f)))
                 (g$top-level-context$7718$1yk2we))))))
         (g$id->real-label$7336$1yk2we g$id$7870$1yk2we)))))
   (g$id->real-label$7336$1yk2we
     g$id->real-label$10988$1yk2we
     (case-lambda
       ((g$id$7881$1yk2we)
        ((case-lambda
           ((g$sym$7882$1yk2we)
            ((letrec ((g$search$7883$1yk2we
                        (case-lambda
                          ((g$subst*$7884$1yk2we g$mark*$7885$1yk2we)
                           (if (null? g$subst*$7884$1yk2we)
                             '#f
                             (if (eq? (car g$subst*$7884$1yk2we) 'shift)
                               (g$search$7883$1yk2we
                                 (cdr g$subst*$7884$1yk2we)
                                 (cdr g$mark*$7885$1yk2we))
                               ((case-lambda
                                  ((g$rib$7886$1yk2we)
                                   ((case-lambda
                                      ((g$t$7887$1yk2we)
                                       (if g$t$7887$1yk2we
                                         ((case-lambda
                                            ((g$ht$7888$1yk2we)
                                             ((case-lambda
                                                ((g$si$7889$1yk2we)
                                                 ((case-lambda
                                                    ((g$i$7890$1yk2we)
                                                     (if g$i$7890$1yk2we
                                                       (vector-ref
                                                         (g$rib-label*$7279$1yk2we
                                                           g$rib$7886$1yk2we)
                                                         g$i$7890$1yk2we)
                                                       (g$search$7883$1yk2we
                                                         (cdr g$subst*$7884$1yk2we)
                                                         g$mark*$7885$1yk2we))))
                                                  (if g$si$7889$1yk2we
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7334$1yk2we
                                                        g$mark*$7885$1yk2we
                                                        (g$rib-mark**$7278$1yk2we
                                                          g$rib$7886$1yk2we)
                                                        (reverse
                                                          g$si$7889$1yk2we)))
                                                    '#f))))
                                              (g$hashtable-ref$5276$1yk2we
                                                g$ht$7888$1yk2we
                                                g$sym$7882$1yk2we
                                                '#f))))
                                          g$t$7887$1yk2we)
                                         ((letrec ((g$f$7891$1yk2we
                                                     (case-lambda
                                                       ((g$sym*$7892$1yk2we
                                                          g$mark**$7893$1yk2we
                                                          g$label*$7894$1yk2we)
                                                        (if (null?
                                                              g$sym*$7892$1yk2we)
                                                          (g$search$7883$1yk2we
                                                            (cdr g$subst*$7884$1yk2we)
                                                            g$mark*$7885$1yk2we)
                                                          (if (if (eq? (car g$sym*$7892$1yk2we)
                                                                       g$sym$7882$1yk2we)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7324$1yk2we
                                                                    (car g$mark**$7893$1yk2we)
                                                                    g$mark*$7885$1yk2we))
                                                                '#f)
                                                            (car g$label*$7894$1yk2we)
                                                            (g$f$7891$1yk2we
                                                              (cdr g$sym*$7892$1yk2we)
                                                              (cdr g$mark**$7893$1yk2we)
                                                              (cdr g$label*$7894$1yk2we))))))))
                                            g$f$7891$1yk2we)
                                          (g$rib-sym*$7277$1yk2we
                                            g$rib$7886$1yk2we)
                                          (g$rib-mark**$7278$1yk2we
                                            g$rib$7886$1yk2we)
                                          (g$rib-label*$7279$1yk2we
                                            g$rib$7886$1yk2we)))))
                                    (g$rib-sealed/freq$7280$1yk2we
                                      g$rib$7886$1yk2we))))
                                (car g$subst*$7884$1yk2we))))))))
               g$search$7883$1yk2we)
             (g$stx-subst*$7298$1yk2we g$id$7881$1yk2we)
             (g$stx-mark*$7297$1yk2we g$id$7881$1yk2we))))
         (g$id->sym$7323$1yk2we g$id$7881$1yk2we)))))
   (g$label->binding$7337$1yk2we
     g$label->binding$10989$1yk2we
     (case-lambda
       ((g$x$7895$1yk2we g$r$7896$1yk2we)
        ((case-lambda
           ((g$t$7897$1yk2we)
            (if g$t$7897$1yk2we
              ((case-lambda
                 ((g$b$7898$1yk2we)
                  (if (if (pair? g$b$7898$1yk2we)
                        (begin '#f (eq? (car g$b$7898$1yk2we) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7563$1yk2we (cdr g$b$7898$1yk2we)))
                    (if (if (pair? g$b$7898$1yk2we)
                          (begin '#f (eq? (car g$b$7898$1yk2we) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7899$1yk2we g$loc$7900$1yk2we)
                          (cons '$rtd (symbol-value g$loc$7900$1yk2we))))
                       (g$cadr$4999$1yk2we g$b$7898$1yk2we)
                       (g$cddr$5001$1yk2we g$b$7898$1yk2we))
                      g$b$7898$1yk2we))))
               g$t$7897$1yk2we)
              ((case-lambda
                 ((g$t$7901$1yk2we)
                  (if g$t$7901$1yk2we
                    (cdr g$t$7901$1yk2we)
                    ((case-lambda
                       ((g$t$7902$1yk2we)
                        (if g$t$7902$1yk2we
                          ((case-lambda
                             ((g$env$7903$1yk2we)
                              ((case-lambda
                                 ((g$t$7904$1yk2we)
                                  (if g$t$7904$1yk2we
                                    ((case-lambda
                                       ((g$p$7905$1yk2we)
                                        (g$cons*$5482$1yk2we
                                          'lexical
                                          (cdr g$p$7905$1yk2we)
                                          '#f)))
                                     g$t$7904$1yk2we)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7895$1yk2we
                                 (g$interaction-env-locs$7680$1yk2we
                                   g$env$7903$1yk2we)))))
                           g$t$7902$1yk2we)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7718$1yk2we)))))
               (assq g$x$7895$1yk2we g$r$7896$1yk2we)))))
         (g$imported-label->binding$7136$1yk2we g$x$7895$1yk2we)))))
   (g$make-binding$7338$1yk2we g$make-binding$10990$1yk2we cons)
   (g$binding-type$7339$1yk2we g$binding-type$10991$1yk2we car)
   (g$binding-value$7340$1yk2we g$binding-value$10992$1yk2we cdr)
   (g$raise-unbound-error$7341$1yk2we
     g$raise-unbound-error$10993$1yk2we
     (case-lambda
       ((g$id$7906$1yk2we)
        (g$syntax-violation*$7710$1yk2we
          '#f
          '"unbound identifier"
          g$id$7906$1yk2we
          (g$make-undefined-violation$5816$1yk2we)))))
   (g$syntax-type$7342$1yk2we
     g$syntax-type$10994$1yk2we
     (case-lambda
       ((g$e$7907$1yk2we g$r$7908$1yk2we)
        (if (g$id?$7322$1yk2we g$e$7907$1yk2we)
          ((case-lambda
             ((g$id$7909$1yk2we)
              ((case-lambda
                 ((g$label$7910$1yk2we)
                  ((case-lambda
                     ((g$b$7911$1yk2we)
                      ((case-lambda
                         ((g$type$7912$1yk2we)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7910$1yk2we)
                                  (g$raise-unbound-error$7341$1yk2we
                                    g$id$7909$1yk2we)
                                  (void))
                                ((case-lambda
                                   ((g$t$7913$1yk2we)
                                    (if (memv
                                          g$t$7913$1yk2we
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             export
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7912$1yk2we
                                        (g$binding-value$7340$1yk2we
                                          g$b$7911$1yk2we)
                                        g$id$7909$1yk2we)
                                      (values 'other '#f '#f))))
                                 g$type$7912$1yk2we)))))))
                       (g$binding-type$7339$1yk2we g$b$7911$1yk2we))))
                   (g$label->binding$7337$1yk2we
                     g$label$7910$1yk2we
                     g$r$7908$1yk2we))))
               (g$id->label$7335$1yk2we g$id$7909$1yk2we))))
           g$e$7907$1yk2we)
          (if (g$syntax-pair?$7315$1yk2we g$e$7907$1yk2we)
            ((case-lambda
               ((g$id$7914$1yk2we)
                (if (g$id?$7322$1yk2we g$id$7914$1yk2we)
                  ((case-lambda
                     ((g$label$7915$1yk2we)
                      ((case-lambda
                         ((g$b$7916$1yk2we)
                          ((case-lambda
                             ((g$type$7917$1yk2we)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7915$1yk2we)
                                      (g$raise-unbound-error$7341$1yk2we
                                        g$id$7914$1yk2we)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7918$1yk2we)
                                        (if (memv
                                              g$t$7918$1yk2we
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 export
                                                 $core-rtd))
                                          (values
                                            g$type$7917$1yk2we
                                            (g$binding-value$7340$1yk2we
                                              g$b$7916$1yk2we)
                                            g$id$7914$1yk2we)
                                          (values 'call '#f '#f))))
                                     g$type$7917$1yk2we)))))))
                           (g$binding-type$7339$1yk2we g$b$7916$1yk2we))))
                       (g$label->binding$7337$1yk2we
                         g$label$7915$1yk2we
                         g$r$7908$1yk2we))))
                   (g$id->label$7335$1yk2we g$id$7914$1yk2we))
                  (values 'call '#f '#f))))
             (g$syntax-car$7319$1yk2we g$e$7907$1yk2we))
            ((case-lambda
               ((g$d$7919$1yk2we)
                (if (g$self-evaluating?$7330$1yk2we g$d$7919$1yk2we)
                  (values 'constant g$d$7919$1yk2we '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7333$1yk2we g$e$7907$1yk2we)))))))
   (g$sanitize-binding$7350$1yk2we
     g$sanitize-binding$10995$1yk2we
     (case-lambda
       ((g$x$7920$1yk2we g$src$7921$1yk2we)
        (if (procedure? g$x$7920$1yk2we)
          (g$cons*$5482$1yk2we 'local-macro g$x$7920$1yk2we g$src$7921$1yk2we)
          (if (if (pair? g$x$7920$1yk2we)
                (if (eq? (car g$x$7920$1yk2we) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7920$1yk2we)))
                  '#f)
                '#f)
            (g$cons*$5482$1yk2we
              'local-macro!
              (cdr g$x$7920$1yk2we)
              g$src$7921$1yk2we)
            (if (if (pair? g$x$7920$1yk2we)
                  (begin '#f (eq? (car g$x$7920$1yk2we) '$rtd))
                  '#f)
              g$x$7920$1yk2we
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7920$1yk2we)))))))
   (g$make-variable-transformer$7351$1yk2we
     g$make-variable-transformer$10996$1yk2we
     (case-lambda
       ((g$x$7922$1yk2we)
        (if (procedure? g$x$7922$1yk2we)
          (cons 'macro! g$x$7922$1yk2we)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7922$1yk2we)))))
   (g$variable-transformer?$7352$1yk2we
     g$variable-transformer?$10997$1yk2we
     (case-lambda
       ((g$x$7923$1yk2we)
        (if (pair? g$x$7923$1yk2we)
          (if (eq? (car g$x$7923$1yk2we) 'macro!)
            (begin '#f (procedure? (cdr g$x$7923$1yk2we)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7353$1yk2we
     g$variable-transformer-procedure$10998$1yk2we
     (case-lambda
       ((g$x$7924$1yk2we)
        (if (g$variable-transformer?$7352$1yk2we g$x$7924$1yk2we)
          (cdr g$x$7924$1yk2we)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7924$1yk2we)))))
   (g$make-eval-transformer$7354$1yk2we
     g$make-eval-transformer$10999$1yk2we
     (case-lambda
       ((g$x$7925$1yk2we)
        (g$sanitize-binding$7350$1yk2we
          (eval-core (g$expanded->core$6836$1yk2we g$x$7925$1yk2we))
          g$x$7925$1yk2we))))
   (g$parse-define$7540$1yk2we
     g$parse-define$11000$1yk2we
     (case-lambda
       ((g$x$7926$1yk2we)
        ((case-lambda
           ((g$t$7927$1yk2we)
            ((case-lambda
               ((g$ls/false$7928$1yk2we)
                (if (if g$ls/false$7928$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7929$1yk2we
                               g$fmls$7930$1yk2we
                               g$b$7931$1yk2we
                               g$b*$7932$1yk2we)
                             (g$id?$7322$1yk2we g$id$7929$1yk2we)))
                          g$ls/false$7928$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7933$1yk2we
                         g$fmls$7934$1yk2we
                         g$b$7935$1yk2we
                         g$b*$7936$1yk2we)
                       (begin
                         (g$verify-formals$7620$1yk2we
                           g$fmls$7934$1yk2we
                           g$x$7926$1yk2we)
                         (values
                           g$id$7933$1yk2we
                           (cons
                             'defun
                             (cons
                               g$fmls$7934$1yk2we
                               (cons g$b$7935$1yk2we g$b*$7936$1yk2we)))))))
                    g$ls/false$7928$1yk2we)
                  ((case-lambda
                     ((g$t$7937$1yk2we)
                      ((case-lambda
                         ((g$ls/false$7938$1yk2we)
                          (if (if g$ls/false$7938$1yk2we
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7939$1yk2we g$val$7940$1yk2we)
                                       (g$id?$7322$1yk2we g$id$7939$1yk2we)))
                                    g$ls/false$7938$1yk2we))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7941$1yk2we g$val$7942$1yk2we)
                                 (values
                                   g$id$7941$1yk2we
                                   (cons 'expr g$val$7942$1yk2we))))
                              g$ls/false$7938$1yk2we)
                            ((case-lambda
                               ((g$t$7943$1yk2we)
                                ((case-lambda
                                   ((g$ls/false$7944$1yk2we)
                                    (if (if g$ls/false$7944$1yk2we
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7945$1yk2we)
                                                 (g$id?$7322$1yk2we
                                                   g$id$7945$1yk2we)))
                                              g$ls/false$7944$1yk2we))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7946$1yk2we)
                                           (values
                                             g$id$7946$1yk2we
                                             (cons
                                               'expr
                                               (g$bless$7563$1yk2we '(void))))))
                                        g$ls/false$7944$1yk2we)
                                      (g$syntax-violation$7711$1yk2we
                                        '#f
                                        '"invalid syntax"
                                        g$t$7943$1yk2we))))
                                 (g$syntax-dispatch$7600$1yk2we
                                   g$t$7943$1yk2we
                                   '(_ any)))))
                             g$t$7937$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$7937$1yk2we
                         '(_ any any)))))
                   g$t$7927$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$7927$1yk2we
               '(_ (any . any) any . each-any)))))
         g$x$7926$1yk2we))))
   (g$parse-define-syntax$7541$1yk2we
     g$parse-define-syntax$11001$1yk2we
     (case-lambda
       ((g$x$7947$1yk2we)
        ((case-lambda
           ((g$t$7948$1yk2we)
            ((case-lambda
               ((g$ls/false$7949$1yk2we)
                (if (if g$ls/false$7949$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7950$1yk2we g$val$7951$1yk2we)
                             (g$id?$7322$1yk2we g$id$7950$1yk2we)))
                          g$ls/false$7949$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7952$1yk2we g$val$7953$1yk2we)
                       (values g$id$7952$1yk2we g$val$7953$1yk2we)))
                    g$ls/false$7949$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$7948$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$7948$1yk2we '(_ any any)))))
         g$x$7947$1yk2we))))
   (g$scheme-stx-hashtable$7542$1yk2we
     g$scheme-stx-hashtable$11002$1yk2we
     (g$make-eq-hashtable$5273$1yk2we))
   (g$scheme-stx$7543$1yk2we
     g$scheme-stx$11003$1yk2we
     (case-lambda
       ((g$sym$7954$1yk2we)
        ((case-lambda
           ((g$t$7955$1yk2we)
            (if g$t$7955$1yk2we
              g$t$7955$1yk2we
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7956$1yk2we)
                    ((case-lambda
                       ((g$stx$7957$1yk2we)
                        ((case-lambda
                           ((g$stx$7958$1yk2we)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5277$1yk2we
                                    g$scheme-stx-hashtable$7542$1yk2we
                                    g$sym$7954$1yk2we
                                    g$stx$7958$1yk2we)
                                  g$stx$7958$1yk2we))))))
                         ((case-lambda
                            ((g$t$7959$1yk2we)
                             (if g$t$7959$1yk2we
                               ((case-lambda
                                  ((g$x$7960$1yk2we)
                                   ((case-lambda
                                      ((g$name$7961$1yk2we g$label$7962$1yk2we)
                                       (g$add-subst$7312$1yk2we
                                         (g$make-rib$7276$1yk2we
                                           (list g$name$7961$1yk2we)
                                           (list g$top-mark*$7264$1yk2we)
                                           (list g$label$7962$1yk2we)
                                           '#f)
                                         g$stx$7957$1yk2we)))
                                    (car g$x$7960$1yk2we)
                                    (cdr g$x$7960$1yk2we))))
                                g$t$7959$1yk2we)
                               g$stx$7957$1yk2we)))
                          (assq g$sym$7954$1yk2we g$subst$7956$1yk2we)))))
                     (g$make-stx$7295$1yk2we
                       g$sym$7954$1yk2we
                       g$top-mark*$7264$1yk2we
                       '()
                       '()))))
                 (g$library-subst$7094$1yk2we
                   (g$find-library-by-name$7130$1yk2we
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5276$1yk2we
           g$scheme-stx-hashtable$7542$1yk2we
           g$sym$7954$1yk2we
           '#f)))))
   (g$lexical-var$7544$1yk2we g$lexical-var$11004$1yk2we car)
   (g$lexical-mutable?$7545$1yk2we g$lexical-mutable?$11005$1yk2we cdr)
   (g$set-lexical-mutable!$7546$1yk2we
     g$set-lexical-mutable!$11006$1yk2we
     set-cdr!)
   (g$add-lexical$7547$1yk2we
     g$add-lexical$11007$1yk2we
     (case-lambda
       ((g$lab$7963$1yk2we g$lex$7964$1yk2we g$r$7965$1yk2we)
        (cons
          (g$cons*$5482$1yk2we g$lab$7963$1yk2we 'lexical g$lex$7964$1yk2we '#f)
          g$r$7965$1yk2we))))
   (g$add-lexicals$7548$1yk2we
     g$add-lexicals$11008$1yk2we
     (case-lambda
       ((g$lab*$7966$1yk2we g$lex*$7967$1yk2we g$r$7968$1yk2we)
        (if (null? g$lab*$7966$1yk2we)
          g$r$7968$1yk2we
          (g$add-lexicals$7548$1yk2we
            (cdr g$lab*$7966$1yk2we)
            (cdr g$lex*$7967$1yk2we)
            (g$add-lexical$7547$1yk2we
              (car g$lab*$7966$1yk2we)
              (car g$lex*$7967$1yk2we)
              g$r$7968$1yk2we))))))
   (g$letrec-helper$7549$1yk2we
     g$letrec-helper$11009$1yk2we
     (case-lambda
       ((g$e$7969$1yk2we g$r$7970$1yk2we g$mr$7971$1yk2we g$build$7972$1yk2we)
        ((case-lambda
           ((g$t$7973$1yk2we)
            ((case-lambda
               ((g$ls/false$7974$1yk2we)
                (if g$ls/false$7974$1yk2we
                  (apply
                    (case-lambda
                      ((g$lhs*$7975$1yk2we
                         g$rhs*$7976$1yk2we
                         g$b$7977$1yk2we
                         g$b*$7978$1yk2we)
                       (if (not (g$valid-bound-ids?$7327$1yk2we
                                  g$lhs*$7975$1yk2we))
                         (g$invalid-fmls-error$7565$1yk2we
                           g$e$7969$1yk2we
                           g$lhs*$7975$1yk2we)
                         ((case-lambda
                            ((g$lex*$7979$1yk2we g$lab*$7980$1yk2we)
                             ((case-lambda
                                ((g$rib$7981$1yk2we g$r$7982$1yk2we)
                                 ((case-lambda
                                    ((g$body$7983$1yk2we g$rhs*$7984$1yk2we)
                                     (g$build$7972$1yk2we
                                       '#f
                                       g$lex*$7979$1yk2we
                                       g$rhs*$7984$1yk2we
                                       g$body$7983$1yk2we)))
                                  (g$chi-internal$7629$1yk2we
                                    (g$add-subst$7312$1yk2we
                                      g$rib$7981$1yk2we
                                      (cons g$b$7977$1yk2we g$b*$7978$1yk2we))
                                    g$r$7982$1yk2we
                                    g$mr$7971$1yk2we)
                                  (g$chi-expr*$7616$1yk2we
                                    (map (case-lambda
                                           ((g$x$7985$1yk2we)
                                            (g$add-subst$7312$1yk2we
                                              g$rib$7981$1yk2we
                                              g$x$7985$1yk2we)))
                                         g$rhs*$7976$1yk2we)
                                    g$r$7982$1yk2we
                                    g$mr$7971$1yk2we))))
                              (g$make-full-rib$7290$1yk2we
                                g$lhs*$7975$1yk2we
                                g$lab*$7980$1yk2we)
                              (g$add-lexicals$7548$1yk2we
                                g$lab*$7980$1yk2we
                                g$lex*$7979$1yk2we
                                g$r$7970$1yk2we))))
                          (map g$gen-lexical$7266$1yk2we g$lhs*$7975$1yk2we)
                          (map g$gen-label$7268$1yk2we g$lhs*$7975$1yk2we)))))
                    g$ls/false$7974$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$7973$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$7973$1yk2we
               '(_ #(each (any any)) any . each-any)))))
         g$e$7969$1yk2we))))
   (g$letrec-transformer$7550$1yk2we
     g$letrec-transformer$11010$1yk2we
     (case-lambda
       ((g$e$7986$1yk2we g$r$7987$1yk2we g$mr$7988$1yk2we)
        (g$letrec-helper$7549$1yk2we
          g$e$7986$1yk2we
          g$r$7987$1yk2we
          g$mr$7988$1yk2we
          g$build-letrec$7258$1yk2we))))
   (g$letrec*-transformer$7551$1yk2we
     g$letrec*-transformer$11011$1yk2we
     (case-lambda
       ((g$e$7989$1yk2we g$r$7990$1yk2we g$mr$7991$1yk2we)
        (g$letrec-helper$7549$1yk2we
          g$e$7989$1yk2we
          g$r$7990$1yk2we
          g$mr$7991$1yk2we
          g$build-letrec*$7259$1yk2we))))
   (g$fluid-let-syntax-transformer$7552$1yk2we
     g$fluid-let-syntax-transformer$11012$1yk2we
     (case-lambda
       ((g$e$7992$1yk2we g$r$7993$1yk2we g$mr$7994$1yk2we)
        (letrec* ((g$lookup$7995$1yk2we
                    (case-lambda
                      ((g$x$8005$1yk2we)
                       ((case-lambda
                          ((g$t$8006$1yk2we)
                           (if g$t$8006$1yk2we
                             g$t$8006$1yk2we
                             (begin
                               '#f
                               (g$syntax-violation$7711$1yk2we
                                 '#f
                                 '"unbound identifier"
                                 g$e$7992$1yk2we
                                 g$x$8005$1yk2we)))))
                        (g$id->label$7335$1yk2we g$x$8005$1yk2we))))))
          ((case-lambda
             ((g$t$7996$1yk2we)
              ((case-lambda
                 ((g$ls/false$7997$1yk2we)
                  (if g$ls/false$7997$1yk2we
                    (apply
                      (case-lambda
                        ((g$lhs*$7998$1yk2we
                           g$rhs*$7999$1yk2we
                           g$b$8000$1yk2we
                           g$b*$8001$1yk2we)
                         (if (not (g$valid-bound-ids?$7327$1yk2we
                                    g$lhs*$7998$1yk2we))
                           (g$invalid-fmls-error$7565$1yk2we
                             g$e$7992$1yk2we
                             g$lhs*$7998$1yk2we)
                           ((case-lambda
                              ((g$lab*$8002$1yk2we g$rhs*$8003$1yk2we)
                               (g$chi-internal$7629$1yk2we
                                 (cons g$b$8000$1yk2we g$b*$8001$1yk2we)
                                 (append
                                   (map cons
                                        g$lab*$8002$1yk2we
                                        g$rhs*$8003$1yk2we)
                                   g$r$7993$1yk2we)
                                 (append
                                   (map cons
                                        g$lab*$8002$1yk2we
                                        g$rhs*$8003$1yk2we)
                                   g$mr$7994$1yk2we))))
                            (map g$lookup$7995$1yk2we g$lhs*$7998$1yk2we)
                            (map (case-lambda
                                   ((g$x$8004$1yk2we)
                                    (g$make-eval-transformer$7354$1yk2we
                                      (g$expand-transformer$7645$1yk2we
                                        g$x$8004$1yk2we
                                        g$mr$7994$1yk2we))))
                                 g$rhs*$7999$1yk2we)))))
                      g$ls/false$7997$1yk2we)
                    (g$syntax-violation$7711$1yk2we
                      '#f
                      '"invalid syntax"
                      g$t$7996$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$7996$1yk2we
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7992$1yk2we)))))
   (g$type-descriptor-transformer$7553$1yk2we
     g$type-descriptor-transformer$11013$1yk2we
     (case-lambda
       ((g$e$8007$1yk2we g$r$8008$1yk2we g$mr$8009$1yk2we)
        ((case-lambda
           ((g$t$8010$1yk2we)
            ((case-lambda
               ((g$ls/false$8011$1yk2we)
                (if (if g$ls/false$8011$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8012$1yk2we)
                             (g$id?$7322$1yk2we g$id$8012$1yk2we)))
                          g$ls/false$8011$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8013$1yk2we)
                       ((case-lambda
                          ((g$lab$8014$1yk2we)
                           ((case-lambda
                              ((g$b$8015$1yk2we)
                               ((case-lambda
                                  ((g$type$8016$1yk2we)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8014$1yk2we)
                                           (g$raise-unbound-error$7341$1yk2we
                                             g$id$8013$1yk2we)
                                           (void))
                                         (if (not (if (eq? g$type$8016$1yk2we
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7340$1yk2we
                                                               g$b$8015$1yk2we))))
                                                    '#f))
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"not a record type"
                                             g$e$8007$1yk2we)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7340$1yk2we
                                             g$b$8015$1yk2we))))))))
                                (g$binding-type$7339$1yk2we g$b$8015$1yk2we))))
                            (g$label->binding$7337$1yk2we
                              g$lab$8014$1yk2we
                              g$r$8008$1yk2we))))
                        (g$id->label$7335$1yk2we g$id$8013$1yk2we))))
                    g$ls/false$8011$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8010$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8010$1yk2we '(_ any)))))
         g$e$8007$1yk2we))))
   (g$record-type-descriptor-transformer$7554$1yk2we
     g$record-type-descriptor-transformer$11014$1yk2we
     (case-lambda
       ((g$e$8017$1yk2we g$r$8018$1yk2we g$mr$8019$1yk2we)
        ((case-lambda
           ((g$t$8020$1yk2we)
            ((case-lambda
               ((g$ls/false$8021$1yk2we)
                (if (if g$ls/false$8021$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8022$1yk2we)
                             (g$id?$7322$1yk2we g$id$8022$1yk2we)))
                          g$ls/false$8021$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8023$1yk2we)
                       ((case-lambda
                          ((g$lab$8024$1yk2we)
                           ((case-lambda
                              ((g$b$8025$1yk2we)
                               ((case-lambda
                                  ((g$type$8026$1yk2we)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8024$1yk2we)
                                           (g$raise-unbound-error$7341$1yk2we
                                             g$id$8023$1yk2we)
                                           (void))
                                         (if (not (if (eq? g$type$8026$1yk2we
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7340$1yk2we
                                                          g$b$8025$1yk2we)))
                                                    '#f))
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"not a record type"
                                             g$e$8017$1yk2we)
                                           (void))
                                         (g$chi-expr$7618$1yk2we
                                           (car (g$binding-value$7340$1yk2we
                                                  g$b$8025$1yk2we))
                                           g$r$8018$1yk2we
                                           g$mr$8019$1yk2we)))))))
                                (g$binding-type$7339$1yk2we g$b$8025$1yk2we))))
                            (g$label->binding$7337$1yk2we
                              g$lab$8024$1yk2we
                              g$r$8018$1yk2we))))
                        (g$id->label$7335$1yk2we g$id$8023$1yk2we))))
                    g$ls/false$8021$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8020$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8020$1yk2we '(_ any)))))
         g$e$8017$1yk2we))))
   (g$record-constructor-descriptor-transformer$7555$1yk2we
     g$record-constructor-descriptor-transformer$11015$1yk2we
     (case-lambda
       ((g$e$8027$1yk2we g$r$8028$1yk2we g$mr$8029$1yk2we)
        ((case-lambda
           ((g$t$8030$1yk2we)
            ((case-lambda
               ((g$ls/false$8031$1yk2we)
                (if (if g$ls/false$8031$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8032$1yk2we)
                             (g$id?$7322$1yk2we g$id$8032$1yk2we)))
                          g$ls/false$8031$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8033$1yk2we)
                       ((case-lambda
                          ((g$lab$8034$1yk2we)
                           ((case-lambda
                              ((g$b$8035$1yk2we)
                               ((case-lambda
                                  ((g$type$8036$1yk2we)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8034$1yk2we)
                                           (g$raise-unbound-error$7341$1yk2we
                                             g$id$8033$1yk2we)
                                           (void))
                                         (if (not (if (eq? g$type$8036$1yk2we
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7340$1yk2we
                                                          g$b$8035$1yk2we)))
                                                    '#f))
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid type"
                                             g$e$8027$1yk2we)
                                           (void))
                                         (g$chi-expr$7618$1yk2we
                                           (g$cadr$4999$1yk2we
                                             (g$binding-value$7340$1yk2we
                                               g$b$8035$1yk2we))
                                           g$r$8028$1yk2we
                                           g$mr$8029$1yk2we)))))))
                                (g$binding-type$7339$1yk2we g$b$8035$1yk2we))))
                            (g$label->binding$7337$1yk2we
                              g$lab$8034$1yk2we
                              g$r$8028$1yk2we))))
                        (g$id->label$7335$1yk2we g$id$8033$1yk2we))))
                    g$ls/false$8031$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8030$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8030$1yk2we '(_ any)))))
         g$e$8027$1yk2we))))
   (g$when-macro$7556$1yk2we
     g$when-macro$11016$1yk2we
     (case-lambda
       ((g$e$8037$1yk2we)
        ((case-lambda
           ((g$t$8038$1yk2we)
            ((case-lambda
               ((g$ls/false$8039$1yk2we)
                (if g$ls/false$8039$1yk2we
                  (apply
                    (case-lambda
                      ((g$test$8040$1yk2we g$e$8041$1yk2we g$e*$8042$1yk2we)
                       (g$bless$7563$1yk2we
                         (list
                           'if
                           g$test$8040$1yk2we
                           (cons
                             'begin
                             (cons g$e$8041$1yk2we g$e*$8042$1yk2we))))))
                    g$ls/false$8039$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8038$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8038$1yk2we
               '(_ any any . each-any)))))
         g$e$8037$1yk2we))))
   (g$unless-macro$7557$1yk2we
     g$unless-macro$11017$1yk2we
     (case-lambda
       ((g$e$8043$1yk2we)
        ((case-lambda
           ((g$t$8044$1yk2we)
            ((case-lambda
               ((g$ls/false$8045$1yk2we)
                (if g$ls/false$8045$1yk2we
                  (apply
                    (case-lambda
                      ((g$test$8046$1yk2we g$e$8047$1yk2we g$e*$8048$1yk2we)
                       (g$bless$7563$1yk2we
                         (list
                           'if
                           (list 'not g$test$8046$1yk2we)
                           (cons
                             'begin
                             (cons g$e$8047$1yk2we g$e*$8048$1yk2we))))))
                    g$ls/false$8045$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8044$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8044$1yk2we
               '(_ any any . each-any)))))
         g$e$8043$1yk2we))))
   (g$if-transformer$7558$1yk2we
     g$if-transformer$11018$1yk2we
     (case-lambda
       ((g$e$8049$1yk2we g$r$8050$1yk2we g$mr$8051$1yk2we)
        ((case-lambda
           ((g$t$8052$1yk2we)
            ((case-lambda
               ((g$ls/false$8053$1yk2we)
                (if g$ls/false$8053$1yk2we
                  (apply
                    (case-lambda
                      ((g$e0$8054$1yk2we g$e1$8055$1yk2we g$e2$8056$1yk2we)
                       (list
                         'if
                         (g$chi-expr$7618$1yk2we
                           g$e0$8054$1yk2we
                           g$r$8050$1yk2we
                           g$mr$8051$1yk2we)
                         (g$chi-expr$7618$1yk2we
                           g$e1$8055$1yk2we
                           g$r$8050$1yk2we
                           g$mr$8051$1yk2we)
                         (g$chi-expr$7618$1yk2we
                           g$e2$8056$1yk2we
                           g$r$8050$1yk2we
                           g$mr$8051$1yk2we))))
                    g$ls/false$8053$1yk2we)
                  ((case-lambda
                     ((g$t$8057$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8058$1yk2we)
                          (if g$ls/false$8058$1yk2we
                            (apply
                              (case-lambda
                                ((g$e0$8059$1yk2we g$e1$8060$1yk2we)
                                 (list
                                   'if
                                   (g$chi-expr$7618$1yk2we
                                     g$e0$8059$1yk2we
                                     g$r$8050$1yk2we
                                     g$mr$8051$1yk2we)
                                   (g$chi-expr$7618$1yk2we
                                     g$e1$8060$1yk2we
                                     g$r$8050$1yk2we
                                     g$mr$8051$1yk2we)
                                   (g$build-void$7257$1yk2we))))
                              g$ls/false$8058$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$8057$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$8057$1yk2we
                         '(_ any any)))))
                   g$t$8052$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8052$1yk2we '(_ any any any)))))
         g$e$8049$1yk2we))))
   (g$case-macro$7559$1yk2we
     g$case-macro$11019$1yk2we
     (case-lambda
       ((g$e$8061$1yk2we)
        (letrec* ((g$build-last$8062$1yk2we
                    (case-lambda
                      ((g$cls$8082$1yk2we)
                       ((case-lambda
                          ((g$t$8083$1yk2we)
                           ((case-lambda
                              ((g$ls/false$8084$1yk2we)
                               (if g$ls/false$8084$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$e$8085$1yk2we g$e*$8086$1yk2we)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8085$1yk2we
                                          g$e*$8086$1yk2we))))
                                   g$ls/false$8084$1yk2we)
                                 ((case-lambda
                                    ((g$t$8087$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$8088$1yk2we)
                                         (if g$ls/false$8088$1yk2we
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8063$1yk2we
                                                  g$cls$8082$1yk2we
                                                  '(if #f #f))))
                                             g$ls/false$8088$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$8087$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$8087$1yk2we
                                        '_))))
                                  g$t$8083$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$8083$1yk2we
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8082$1yk2we))))
                  (g$build-one$8063$1yk2we
                    (case-lambda
                      ((g$cls$8075$1yk2we g$k$8076$1yk2we)
                       ((case-lambda
                          ((g$t$8077$1yk2we)
                           ((case-lambda
                              ((g$ls/false$8078$1yk2we)
                               (if g$ls/false$8078$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$d*$8079$1yk2we
                                        g$e$8080$1yk2we
                                        g$e*$8081$1yk2we)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8079$1yk2we))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8080$1yk2we
                                            g$e*$8081$1yk2we))
                                        g$k$8076$1yk2we)))
                                   g$ls/false$8078$1yk2we)
                                 (g$syntax-violation$7711$1yk2we
                                   '#f
                                   '"invalid syntax"
                                   g$t$8077$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$8077$1yk2we
                              '(each-any any . each-any)))))
                        g$cls$8075$1yk2we)))))
          ((case-lambda
             ((g$t$8064$1yk2we)
              ((case-lambda
                 ((g$ls/false$8065$1yk2we)
                  (if g$ls/false$8065$1yk2we
                    (apply
                      (case-lambda
                        ((g$expr$8066$1yk2we)
                         (g$bless$7563$1yk2we
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8066$1yk2we))
                               '((if #f #f)))))))
                      g$ls/false$8065$1yk2we)
                    ((case-lambda
                       ((g$t$8067$1yk2we)
                        ((case-lambda
                           ((g$ls/false$8068$1yk2we)
                            (if g$ls/false$8068$1yk2we
                              (apply
                                (case-lambda
                                  ((g$expr$8069$1yk2we
                                     g$cls$8070$1yk2we
                                     g$cls*$8071$1yk2we)
                                   (g$bless$7563$1yk2we
                                     (list
                                       'let
                                       (list (list 't g$expr$8069$1yk2we))
                                       ((letrec ((g$f$8072$1yk2we
                                                   (case-lambda
                                                     ((g$cls$8073$1yk2we
                                                        g$cls*$8074$1yk2we)
                                                      (if (null?
                                                            g$cls*$8074$1yk2we)
                                                        (g$build-last$8062$1yk2we
                                                          g$cls$8073$1yk2we)
                                                        (g$build-one$8063$1yk2we
                                                          g$cls$8073$1yk2we
                                                          (g$f$8072$1yk2we
                                                            (car g$cls*$8074$1yk2we)
                                                            (cdr g$cls*$8074$1yk2we))))))))
                                          g$f$8072$1yk2we)
                                        g$cls$8070$1yk2we
                                        g$cls*$8071$1yk2we)))))
                                g$ls/false$8068$1yk2we)
                              (g$syntax-violation$7711$1yk2we
                                '#f
                                '"invalid syntax"
                                g$t$8067$1yk2we))))
                         (g$syntax-dispatch$7600$1yk2we
                           g$t$8067$1yk2we
                           '(_ any any . each-any)))))
                     g$t$8064$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we g$t$8064$1yk2we '(_ any)))))
           g$e$8061$1yk2we)))))
   (g$quote-transformer$7560$1yk2we
     g$quote-transformer$11020$1yk2we
     (case-lambda
       ((g$e$8089$1yk2we g$r$8090$1yk2we g$mr$8091$1yk2we)
        ((case-lambda
           ((g$t$8092$1yk2we)
            ((case-lambda
               ((g$ls/false$8093$1yk2we)
                (if g$ls/false$8093$1yk2we
                  (apply
                    (case-lambda
                      ((g$datum$8094$1yk2we)
                       (list
                         'quote
                         (g$stx->datum$7333$1yk2we g$datum$8094$1yk2we))))
                    g$ls/false$8093$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8092$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8092$1yk2we '(_ any)))))
         g$e$8089$1yk2we))))
   (g$case-lambda-transformer$7561$1yk2we
     g$case-lambda-transformer$11021$1yk2we
     (case-lambda
       ((g$e$8095$1yk2we g$r$8096$1yk2we g$mr$8097$1yk2we)
        ((case-lambda
           ((g$t$8098$1yk2we)
            ((case-lambda
               ((g$ls/false$8099$1yk2we)
                (if g$ls/false$8099$1yk2we
                  (apply
                    (case-lambda
                      ((g$fmls*$8100$1yk2we g$b*$8101$1yk2we g$b**$8102$1yk2we)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7622$1yk2we
                              g$e$8095$1yk2we
                              g$fmls*$8100$1yk2we
                              (map cons g$b*$8101$1yk2we g$b**$8102$1yk2we)
                              g$r$8096$1yk2we
                              g$mr$8097$1yk2we)))
                         (case-lambda
                           ((g$fmls*$8105$1yk2we g$body*$8106$1yk2we)
                            ((case-lambda
                               ((g$body*$8107$1yk2we g$fmls*$8108$1yk2we)
                                (g$build-case-lambda$7254$1yk2we
                                  '#f
                                  g$fmls*$8108$1yk2we
                                  g$body*$8107$1yk2we)))
                             g$body*$8106$1yk2we
                             g$fmls*$8105$1yk2we))))))
                    g$ls/false$8099$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8098$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8098$1yk2we
               '(_ . #(each (any any . each-any)))))))
         g$e$8095$1yk2we))))
   (g$lambda-transformer$7562$1yk2we
     g$lambda-transformer$11022$1yk2we
     (case-lambda
       ((g$e$8109$1yk2we g$r$8110$1yk2we g$mr$8111$1yk2we)
        ((case-lambda
           ((g$t$8112$1yk2we)
            ((case-lambda
               ((g$ls/false$8113$1yk2we)
                (if g$ls/false$8113$1yk2we
                  (apply
                    (case-lambda
                      ((g$fmls$8114$1yk2we g$b$8115$1yk2we g$b*$8116$1yk2we)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7621$1yk2we
                              g$e$8109$1yk2we
                              g$fmls$8114$1yk2we
                              (cons g$b$8115$1yk2we g$b*$8116$1yk2we)
                              g$r$8110$1yk2we
                              g$mr$8111$1yk2we)))
                         (case-lambda
                           ((g$fmls$8119$1yk2we g$body$8120$1yk2we)
                            ((case-lambda
                               ((g$body$8121$1yk2we g$fmls$8122$1yk2we)
                                (g$build-lambda$7253$1yk2we
                                  '#f
                                  g$fmls$8122$1yk2we
                                  g$body$8121$1yk2we)))
                             g$body$8120$1yk2we
                             g$fmls$8119$1yk2we))))))
                    g$ls/false$8113$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8112$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8112$1yk2we
               '(_ any any . each-any)))))
         g$e$8109$1yk2we))))
   (g$bless$7563$1yk2we
     g$bless$11023$1yk2we
     (case-lambda
       ((g$x$8123$1yk2we)
        (g$mkstx$7310$1yk2we
          ((letrec ((g$f$8124$1yk2we
                      (case-lambda
                        ((g$x$8125$1yk2we)
                         (if (g$stx?$7294$1yk2we g$x$8125$1yk2we)
                           g$x$8125$1yk2we
                           (if (pair? g$x$8125$1yk2we)
                             (cons
                               (g$f$8124$1yk2we (car g$x$8125$1yk2we))
                               (g$f$8124$1yk2we (cdr g$x$8125$1yk2we)))
                             (if (symbol? g$x$8125$1yk2we)
                               (g$scheme-stx$7543$1yk2we g$x$8125$1yk2we)
                               (if (vector? g$x$8125$1yk2we)
                                 (vector-map g$f$8124$1yk2we g$x$8125$1yk2we)
                                 g$x$8125$1yk2we))))))))
             g$f$8124$1yk2we)
           g$x$8123$1yk2we)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7564$1yk2we
     g$with-syntax-macro$11024$1yk2we
     (case-lambda
       ((g$e$8126$1yk2we)
        ((case-lambda
           ((g$t$8127$1yk2we)
            ((case-lambda
               ((g$ls/false$8128$1yk2we)
                (if g$ls/false$8128$1yk2we
                  (apply
                    (case-lambda
                      ((g$pat*$8129$1yk2we
                         g$expr*$8130$1yk2we
                         g$b$8131$1yk2we
                         g$b*$8132$1yk2we)
                       ((case-lambda
                          ((g$idn*$8133$1yk2we)
                           (begin
                             (g$verify-formals$7620$1yk2we
                               (map car g$idn*$8133$1yk2we)
                               g$e$8126$1yk2we)
                             ((case-lambda
                                ((g$t*$8134$1yk2we)
                                 (g$bless$7563$1yk2we
                                   (list
                                     'let
                                     (map list
                                          g$t*$8134$1yk2we
                                          g$expr*$8130$1yk2we)
                                     ((letrec ((g$f$8135$1yk2we
                                                 (case-lambda
                                                   ((g$pat*$8136$1yk2we
                                                      g$t*$8137$1yk2we)
                                                    (if (null?
                                                          g$pat*$8136$1yk2we)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8131$1yk2we
                                                            g$b*$8132$1yk2we)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8137$1yk2we)
                                                        '()
                                                        (list
                                                          (car g$pat*$8136$1yk2we)
                                                          (g$f$8135$1yk2we
                                                            (cdr g$pat*$8136$1yk2we)
                                                            (cdr g$t*$8137$1yk2we)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8136$1yk2we))
                                                            (car g$t*$8137$1yk2we)))))))))
                                        g$f$8135$1yk2we)
                                      g$pat*$8129$1yk2we
                                      g$t*$8134$1yk2we)))))
                              (g$generate-temporaries$7701$1yk2we
                                g$expr*$8130$1yk2we)))))
                        ((letrec ((g$f$8138$1yk2we
                                    (case-lambda
                                      ((g$pat*$8139$1yk2we)
                                       (if (null? g$pat*$8139$1yk2we)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7599$1yk2we
                                                (car g$pat*$8139$1yk2we)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8142$1yk2we
                                                g$idn*$8143$1yk2we)
                                              ((case-lambda
                                                 ((g$idn*$8144$1yk2we
                                                    g$pat$8145$1yk2we)
                                                  (append
                                                    g$idn*$8144$1yk2we
                                                    (g$f$8138$1yk2we
                                                      (cdr g$pat*$8139$1yk2we)))))
                                               g$idn*$8143$1yk2we
                                               g$pat$8142$1yk2we)))))))))
                           g$f$8138$1yk2we)
                         g$pat*$8129$1yk2we))))
                    g$ls/false$8128$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8127$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8127$1yk2we
               '(_ #(each (any any)) any . each-any)))))
         g$e$8126$1yk2we))))
   (g$invalid-fmls-error$7565$1yk2we
     g$invalid-fmls-error$11025$1yk2we
     (case-lambda
       ((g$stx$8146$1yk2we g$fmls$8147$1yk2we)
        ((case-lambda
           ((g$t$8148$1yk2we)
            ((case-lambda
               ((g$ls/false$8149$1yk2we)
                (if g$ls/false$8149$1yk2we
                  (apply
                    (case-lambda
                      ((g$id*$8150$1yk2we g$last$8151$1yk2we)
                       ((letrec ((g$f$8152$1yk2we
                                   (case-lambda
                                     ((g$id*$8153$1yk2we)
                                      (if (null? g$id*$8153$1yk2we)
                                        (values)
                                        (if (not (g$id?$7322$1yk2we
                                                   (car g$id*$8153$1yk2we)))
                                          (g$syntax-violation$7711$1yk2we
                                            '#f
                                            '"not an identifier"
                                            g$stx$8146$1yk2we
                                            (car g$id*$8153$1yk2we))
                                          (begin
                                            (g$f$8152$1yk2we
                                              (cdr g$id*$8153$1yk2we))
                                            (if (g$bound-id-member?$7329$1yk2we
                                                  (car g$id*$8153$1yk2we)
                                                  (cdr g$id*$8153$1yk2we))
                                              (g$syntax-violation$7711$1yk2we
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8146$1yk2we
                                                (car g$id*$8153$1yk2we))
                                              (void)))))))))
                          g$f$8152$1yk2we)
                        (if (g$id?$7322$1yk2we g$last$8151$1yk2we)
                          (cons g$last$8151$1yk2we g$id*$8150$1yk2we)
                          (if (g$syntax-null?$7317$1yk2we g$last$8151$1yk2we)
                            g$id*$8150$1yk2we
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"not an identifier"
                              g$stx$8146$1yk2we
                              g$last$8151$1yk2we))))))
                    g$ls/false$8149$1yk2we)
                  ((case-lambda
                     ((g$t$8154$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8155$1yk2we)
                          (if g$ls/false$8155$1yk2we
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7711$1yk2we
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8146$1yk2we
                                   g$fmls$8147$1yk2we)))
                              g$ls/false$8155$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$8154$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we g$t$8154$1yk2we '_))))
                   g$t$8148$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8148$1yk2we
               '#(each+ any () any)))))
         g$fmls$8147$1yk2we))))
   (g$let-macro$7566$1yk2we
     g$let-macro$11026$1yk2we
     (case-lambda
       ((g$stx$8156$1yk2we)
        ((case-lambda
           ((g$t$8157$1yk2we)
            ((case-lambda
               ((g$ls/false$8158$1yk2we)
                (if g$ls/false$8158$1yk2we
                  (apply
                    (case-lambda
                      ((g$lhs*$8159$1yk2we
                         g$rhs*$8160$1yk2we
                         g$b$8161$1yk2we
                         g$b*$8162$1yk2we)
                       (if (g$valid-bound-ids?$7327$1yk2we g$lhs*$8159$1yk2we)
                         (g$bless$7563$1yk2we
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8159$1yk2we
                                 (cons g$b$8161$1yk2we g$b*$8162$1yk2we)))
                             g$rhs*$8160$1yk2we))
                         (g$invalid-fmls-error$7565$1yk2we
                           g$stx$8156$1yk2we
                           g$lhs*$8159$1yk2we))))
                    g$ls/false$8158$1yk2we)
                  ((case-lambda
                     ((g$t$8163$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8164$1yk2we)
                          (if (if g$ls/false$8164$1yk2we
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8165$1yk2we
                                         g$lhs*$8166$1yk2we
                                         g$rhs*$8167$1yk2we
                                         g$b$8168$1yk2we
                                         g$b*$8169$1yk2we)
                                       (g$id?$7322$1yk2we g$f$8165$1yk2we)))
                                    g$ls/false$8164$1yk2we))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8170$1yk2we
                                   g$lhs*$8171$1yk2we
                                   g$rhs*$8172$1yk2we
                                   g$b$8173$1yk2we
                                   g$b*$8174$1yk2we)
                                 (if (g$valid-bound-ids?$7327$1yk2we
                                       g$lhs*$8171$1yk2we)
                                   (g$bless$7563$1yk2we
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8170$1yk2we
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8171$1yk2we
                                                 (cons
                                                   g$b$8173$1yk2we
                                                   g$b*$8174$1yk2we)))))
                                         g$f$8170$1yk2we)
                                       g$rhs*$8172$1yk2we))
                                   (g$invalid-fmls-error$7565$1yk2we
                                     g$stx$8156$1yk2we
                                     g$lhs*$8171$1yk2we))))
                              g$ls/false$8164$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$8163$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$8163$1yk2we
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8157$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8157$1yk2we
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8156$1yk2we))))
   (g$let-values-macro$7567$1yk2we
     g$let-values-macro$11027$1yk2we
     (case-lambda
       ((g$stx$8175$1yk2we)
        (letrec* ((g$rename$8176$1yk2we
                    (case-lambda
                      ((g$x$8227$1yk2we g$old*$8228$1yk2we g$new*$8229$1yk2we)
                       (begin
                         (if (not (g$id?$7322$1yk2we g$x$8227$1yk2we))
                           (g$syntax-violation$7711$1yk2we
                             '#f
                             '"not an indentifier"
                             g$stx$8175$1yk2we
                             g$x$8227$1yk2we)
                           (void))
                         (if (g$bound-id-member?$7329$1yk2we
                               g$x$8227$1yk2we
                               g$old*$8228$1yk2we)
                           (g$syntax-violation$7711$1yk2we
                             '#f
                             '"duplicate binding"
                             g$stx$8175$1yk2we
                             g$x$8227$1yk2we)
                           (void))
                         ((case-lambda
                            ((g$y$8230$1yk2we)
                             (values
                               g$y$8230$1yk2we
                               (cons g$x$8227$1yk2we g$old*$8228$1yk2we)
                               (cons g$y$8230$1yk2we g$new*$8229$1yk2we))))
                          (gensym
                            (g$syntax->datum$7714$1yk2we g$x$8227$1yk2we)))))))
                  (g$rename*$8177$1yk2we
                    (case-lambda
                      ((g$x*$8218$1yk2we g$old*$8219$1yk2we g$new*$8220$1yk2we)
                       (if (null? g$x*$8218$1yk2we)
                         (values '() g$old*$8219$1yk2we g$new*$8220$1yk2we)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8176$1yk2we
                                (car g$x*$8218$1yk2we)
                                g$old*$8219$1yk2we
                                g$new*$8220$1yk2we)))
                           (case-lambda
                             ((g$x$8221$1yk2we
                                g$old*$8222$1yk2we
                                g$new*$8223$1yk2we)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8177$1yk2we
                                     (cdr g$x*$8218$1yk2we)
                                     g$old*$8222$1yk2we
                                     g$new*$8223$1yk2we)))
                                (case-lambda
                                  ((g$x*$8224$1yk2we
                                     g$old*$8225$1yk2we
                                     g$new*$8226$1yk2we)
                                   (values
                                     (cons g$x$8221$1yk2we g$x*$8224$1yk2we)
                                     g$old*$8225$1yk2we
                                     g$new*$8226$1yk2we))))))))))))
          ((case-lambda
             ((g$t$8178$1yk2we)
              ((case-lambda
                 ((g$ls/false$8179$1yk2we)
                  (if g$ls/false$8179$1yk2we
                    (apply
                      (case-lambda
                        ((g$b$8180$1yk2we g$b*$8181$1yk2we)
                         (g$cons*$5482$1yk2we
                           (g$bless$7563$1yk2we 'let)
                           '()
                           g$b$8180$1yk2we
                           g$b*$8181$1yk2we)))
                      g$ls/false$8179$1yk2we)
                    ((case-lambda
                       ((g$t$8182$1yk2we)
                        ((case-lambda
                           ((g$ls/false$8183$1yk2we)
                            (if g$ls/false$8183$1yk2we
                              (apply
                                (case-lambda
                                  ((g$lhs*$8184$1yk2we
                                     g$rhs*$8185$1yk2we
                                     g$b$8186$1yk2we
                                     g$b*$8187$1yk2we)
                                   (g$bless$7563$1yk2we
                                     ((letrec ((g$f$8188$1yk2we
                                                 (case-lambda
                                                   ((g$lhs*$8189$1yk2we
                                                      g$rhs*$8190$1yk2we
                                                      g$old*$8191$1yk2we
                                                      g$new*$8192$1yk2we)
                                                    (if (null?
                                                          g$lhs*$8189$1yk2we)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8191$1yk2we
                                                               g$new*$8192$1yk2we)
                                                          (cons
                                                            g$b$8186$1yk2we
                                                            g$b*$8187$1yk2we)))
                                                      ((case-lambda
                                                         ((g$t$8193$1yk2we)
                                                          ((case-lambda
                                                             ((g$ls/false$8194$1yk2we)
                                                              (if g$ls/false$8194$1yk2we
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8195$1yk2we)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8177$1yk2we
                                                                            g$x*$8195$1yk2we
                                                                            g$old*$8191$1yk2we
                                                                            g$new*$8192$1yk2we)))
                                                                       (case-lambda
                                                                         ((g$y*$8199$1yk2we
                                                                            g$old*$8200$1yk2we
                                                                            g$new*$8201$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$new*$8202$1yk2we
                                                                                g$old*$8203$1yk2we
                                                                                g$y*$8204$1yk2we)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8190$1yk2we))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8204$1yk2we
                                                                                  (g$f$8188$1yk2we
                                                                                    (cdr g$lhs*$8189$1yk2we)
                                                                                    (cdr g$rhs*$8190$1yk2we)
                                                                                    g$old*$8203$1yk2we
                                                                                    g$new*$8202$1yk2we)))))
                                                                           g$new*$8201$1yk2we
                                                                           g$old*$8200$1yk2we
                                                                           g$y*$8199$1yk2we))))))
                                                                  g$ls/false$8194$1yk2we)
                                                                ((case-lambda
                                                                   ((g$t$8205$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8206$1yk2we)
                                                                        (if g$ls/false$8206$1yk2we
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8207$1yk2we
                                                                                 g$x$8208$1yk2we)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8176$1yk2we
                                                                                      g$x$8208$1yk2we
                                                                                      g$old*$8191$1yk2we
                                                                                      g$new*$8192$1yk2we)))
                                                                                 (case-lambda
                                                                                   ((g$y$8209$1yk2we
                                                                                      g$old*$8210$1yk2we
                                                                                      g$new*$8211$1yk2we)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8177$1yk2we
                                                                                           g$x*$8207$1yk2we
                                                                                           g$old*$8210$1yk2we
                                                                                           g$new*$8211$1yk2we)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8212$1yk2we
                                                                                           g$old*$8213$1yk2we
                                                                                           g$new*$8214$1yk2we)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8190$1yk2we))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8212$1yk2we
                                                                                               g$y$8209$1yk2we)
                                                                                             (g$f$8188$1yk2we
                                                                                               (cdr g$lhs*$8189$1yk2we)
                                                                                               (cdr g$rhs*$8190$1yk2we)
                                                                                               g$old*$8213$1yk2we
                                                                                               g$new*$8214$1yk2we)))))))))))
                                                                            g$ls/false$8206$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$8215$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8216$1yk2we)
                                                                                  (if g$ls/false$8216$1yk2we
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8217$1yk2we)
                                                                                         (g$syntax-violation$7711$1yk2we
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8175$1yk2we
                                                                                           g$others$8217$1yk2we)))
                                                                                      g$ls/false$8216$1yk2we)
                                                                                    (g$syntax-violation$7711$1yk2we
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8215$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$8215$1yk2we
                                                                                 'any))))
                                                                           g$t$8205$1yk2we))))
                                                                     (g$syntax-dispatch$7600$1yk2we
                                                                       g$t$8205$1yk2we
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8193$1yk2we))))
                                                           (g$syntax-dispatch$7600$1yk2we
                                                             g$t$8193$1yk2we
                                                             'each-any))))
                                                       (car g$lhs*$8189$1yk2we)))))))
                                        g$f$8188$1yk2we)
                                      g$lhs*$8184$1yk2we
                                      g$rhs*$8185$1yk2we
                                      '()
                                      '()))))
                                g$ls/false$8183$1yk2we)
                              (g$syntax-violation$7711$1yk2we
                                '#f
                                '"invalid syntax"
                                g$t$8182$1yk2we))))
                         (g$syntax-dispatch$7600$1yk2we
                           g$t$8182$1yk2we
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8178$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$8178$1yk2we
                 '(_ () any . each-any)))))
           g$stx$8175$1yk2we)))))
   (g$let*-values-macro$7568$1yk2we
     g$let*-values-macro$11028$1yk2we
     (case-lambda
       ((g$stx$8231$1yk2we)
        (letrec* ((g$check$8232$1yk2we
                    (case-lambda
                      ((g$x*$8256$1yk2we)
                       (if (not (null? g$x*$8256$1yk2we))
                         ((case-lambda
                            ((g$x$8257$1yk2we)
                             (begin
                               (if (not (g$id?$7322$1yk2we g$x$8257$1yk2we))
                                 (g$syntax-violation$7711$1yk2we
                                   '#f
                                   '"not an identifier"
                                   g$stx$8231$1yk2we
                                   g$x$8257$1yk2we)
                                 (void))
                               (g$check$8232$1yk2we (cdr g$x*$8256$1yk2we))
                               (if (g$bound-id-member?$7329$1yk2we
                                     g$x$8257$1yk2we
                                     (cdr g$x*$8256$1yk2we))
                                 (g$syntax-violation$7711$1yk2we
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8231$1yk2we
                                   g$x$8257$1yk2we)
                                 (void)))))
                          (car g$x*$8256$1yk2we))
                         (void))))))
          ((case-lambda
             ((g$t$8233$1yk2we)
              ((case-lambda
                 ((g$ls/false$8234$1yk2we)
                  (if g$ls/false$8234$1yk2we
                    (apply
                      (case-lambda
                        ((g$b$8235$1yk2we g$b*$8236$1yk2we)
                         (g$cons*$5482$1yk2we
                           (g$bless$7563$1yk2we 'let)
                           '()
                           g$b$8235$1yk2we
                           g$b*$8236$1yk2we)))
                      g$ls/false$8234$1yk2we)
                    ((case-lambda
                       ((g$t$8237$1yk2we)
                        ((case-lambda
                           ((g$ls/false$8238$1yk2we)
                            (if g$ls/false$8238$1yk2we
                              (apply
                                (case-lambda
                                  ((g$lhs*$8239$1yk2we
                                     g$rhs*$8240$1yk2we
                                     g$b$8241$1yk2we
                                     g$b*$8242$1yk2we)
                                   (g$bless$7563$1yk2we
                                     ((letrec ((g$f$8243$1yk2we
                                                 (case-lambda
                                                   ((g$lhs*$8244$1yk2we
                                                      g$rhs*$8245$1yk2we)
                                                    (if (null?
                                                          g$lhs*$8244$1yk2we)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8241$1yk2we
                                                          g$b*$8242$1yk2we))
                                                      ((case-lambda
                                                         ((g$t$8246$1yk2we)
                                                          ((case-lambda
                                                             ((g$ls/false$8247$1yk2we)
                                                              (if g$ls/false$8247$1yk2we
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8248$1yk2we)
                                                                     (begin
                                                                       (g$check$8232$1yk2we
                                                                         g$x*$8248$1yk2we)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8245$1yk2we))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8248$1yk2we
                                                                           (g$f$8243$1yk2we
                                                                             (cdr g$lhs*$8244$1yk2we)
                                                                             (cdr g$rhs*$8245$1yk2we)))))))
                                                                  g$ls/false$8247$1yk2we)
                                                                ((case-lambda
                                                                   ((g$t$8249$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8250$1yk2we)
                                                                        (if g$ls/false$8250$1yk2we
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8251$1yk2we
                                                                                 g$x$8252$1yk2we)
                                                                               (begin
                                                                                 (g$check$8232$1yk2we
                                                                                   (cons
                                                                                     g$x$8252$1yk2we
                                                                                     g$x*$8251$1yk2we))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8245$1yk2we))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8251$1yk2we
                                                                                       g$x$8252$1yk2we)
                                                                                     (g$f$8243$1yk2we
                                                                                       (cdr g$lhs*$8244$1yk2we)
                                                                                       (cdr g$rhs*$8245$1yk2we)))))))
                                                                            g$ls/false$8250$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$8253$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8254$1yk2we)
                                                                                  (if g$ls/false$8254$1yk2we
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8255$1yk2we)
                                                                                         (g$syntax-violation$7711$1yk2we
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8231$1yk2we
                                                                                           g$others$8255$1yk2we)))
                                                                                      g$ls/false$8254$1yk2we)
                                                                                    (g$syntax-violation$7711$1yk2we
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8253$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$8253$1yk2we
                                                                                 'any))))
                                                                           g$t$8249$1yk2we))))
                                                                     (g$syntax-dispatch$7600$1yk2we
                                                                       g$t$8249$1yk2we
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8246$1yk2we))))
                                                           (g$syntax-dispatch$7600$1yk2we
                                                             g$t$8246$1yk2we
                                                             'each-any))))
                                                       (car g$lhs*$8244$1yk2we)))))))
                                        g$f$8243$1yk2we)
                                      g$lhs*$8239$1yk2we
                                      g$rhs*$8240$1yk2we))))
                                g$ls/false$8238$1yk2we)
                              (g$syntax-violation$7711$1yk2we
                                '#f
                                '"invalid syntax"
                                g$t$8237$1yk2we))))
                         (g$syntax-dispatch$7600$1yk2we
                           g$t$8237$1yk2we
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8233$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$8233$1yk2we
                 '(_ () any . each-any)))))
           g$stx$8231$1yk2we)))))
   (g$trace-lambda-macro$7569$1yk2we
     g$trace-lambda-macro$11029$1yk2we
     (case-lambda
       ((g$stx$8258$1yk2we)
        ((case-lambda
           ((g$t$8259$1yk2we)
            ((case-lambda
               ((g$ls/false$8260$1yk2we)
                (if g$ls/false$8260$1yk2we
                  (apply
                    (case-lambda
                      ((g$who$8261$1yk2we
                         g$fmls$8262$1yk2we
                         g$b$8263$1yk2we
                         g$b*$8264$1yk2we)
                       (if (g$valid-bound-ids?$7327$1yk2we g$fmls$8262$1yk2we)
                         (g$bless$7563$1yk2we
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8261$1yk2we)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8262$1yk2we
                                 (cons g$b$8263$1yk2we g$b*$8264$1yk2we)))))
                         (g$invalid-fmls-error$7565$1yk2we
                           g$stx$8258$1yk2we
                           g$fmls$8262$1yk2we))))
                    g$ls/false$8260$1yk2we)
                  ((case-lambda
                     ((g$t$8265$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8266$1yk2we)
                          (if g$ls/false$8266$1yk2we
                            (apply
                              (case-lambda
                                ((g$who$8267$1yk2we
                                   g$fmls$8268$1yk2we
                                   g$last$8269$1yk2we
                                   g$b$8270$1yk2we
                                   g$b*$8271$1yk2we)
                                 (if (g$valid-bound-ids?$7327$1yk2we
                                       (cons
                                         g$last$8269$1yk2we
                                         g$fmls$8268$1yk2we))
                                   (g$bless$7563$1yk2we
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8267$1yk2we)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8268$1yk2we
                                             g$last$8269$1yk2we)
                                           (cons
                                             g$b$8270$1yk2we
                                             g$b*$8271$1yk2we)))))
                                   (g$invalid-fmls-error$7565$1yk2we
                                     g$stx$8258$1yk2we
                                     (append
                                       g$fmls$8268$1yk2we
                                       g$last$8269$1yk2we)))))
                              g$ls/false$8266$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$8265$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$8265$1yk2we
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8259$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8259$1yk2we
               '(_ any each-any any . each-any)))))
         g$stx$8258$1yk2we))))
   (g$trace-define-macro$7570$1yk2we
     g$trace-define-macro$11030$1yk2we
     (case-lambda
       ((g$stx$8272$1yk2we)
        ((case-lambda
           ((g$t$8273$1yk2we)
            ((case-lambda
               ((g$ls/false$8274$1yk2we)
                (if g$ls/false$8274$1yk2we
                  (apply
                    (case-lambda
                      ((g$who$8275$1yk2we
                         g$fmls$8276$1yk2we
                         g$b$8277$1yk2we
                         g$b*$8278$1yk2we)
                       (if (g$valid-bound-ids?$7327$1yk2we g$fmls$8276$1yk2we)
                         (g$bless$7563$1yk2we
                           (list
                             'define
                             g$who$8275$1yk2we
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8275$1yk2we)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8276$1yk2we
                                   (cons g$b$8277$1yk2we g$b*$8278$1yk2we))))))
                         (g$invalid-fmls-error$7565$1yk2we
                           g$stx$8272$1yk2we
                           g$fmls$8276$1yk2we))))
                    g$ls/false$8274$1yk2we)
                  ((case-lambda
                     ((g$t$8279$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8280$1yk2we)
                          (if g$ls/false$8280$1yk2we
                            (apply
                              (case-lambda
                                ((g$who$8281$1yk2we
                                   g$fmls$8282$1yk2we
                                   g$last$8283$1yk2we
                                   g$b$8284$1yk2we
                                   g$b*$8285$1yk2we)
                                 (if (g$valid-bound-ids?$7327$1yk2we
                                       (cons
                                         g$last$8283$1yk2we
                                         g$fmls$8282$1yk2we))
                                   (g$bless$7563$1yk2we
                                     (list
                                       'define
                                       g$who$8281$1yk2we
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8281$1yk2we)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8282$1yk2we
                                               g$last$8283$1yk2we)
                                             (cons
                                               g$b$8284$1yk2we
                                               g$b*$8285$1yk2we))))))
                                   (g$invalid-fmls-error$7565$1yk2we
                                     g$stx$8272$1yk2we
                                     (append
                                       g$fmls$8282$1yk2we
                                       g$last$8283$1yk2we)))))
                              g$ls/false$8280$1yk2we)
                            ((case-lambda
                               ((g$t$8286$1yk2we)
                                ((case-lambda
                                   ((g$ls/false$8287$1yk2we)
                                    (if g$ls/false$8287$1yk2we
                                      (apply
                                        (case-lambda
                                          ((g$who$8288$1yk2we
                                             g$expr$8289$1yk2we)
                                           (if (g$id?$7322$1yk2we
                                                 g$who$8288$1yk2we)
                                             (g$bless$7563$1yk2we
                                               (list
                                                 'define
                                                 g$who$8288$1yk2we
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8289$1yk2we))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8288$1yk2we)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7711$1yk2we
                                               '#f
                                               '"invalid name"
                                               g$stx$8272$1yk2we))))
                                        g$ls/false$8287$1yk2we)
                                      (g$syntax-violation$7711$1yk2we
                                        '#f
                                        '"invalid syntax"
                                        g$t$8286$1yk2we))))
                                 (g$syntax-dispatch$7600$1yk2we
                                   g$t$8286$1yk2we
                                   '(_ any any)))))
                             g$t$8279$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$8279$1yk2we
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8273$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8273$1yk2we
               '(_ (any . each-any) any . each-any)))))
         g$stx$8272$1yk2we))))
   (g$trace-define-syntax-macro$7571$1yk2we
     g$trace-define-syntax-macro$11031$1yk2we
     (case-lambda
       ((g$stx$8290$1yk2we)
        ((case-lambda
           ((g$t$8291$1yk2we)
            ((case-lambda
               ((g$ls/false$8292$1yk2we)
                (if g$ls/false$8292$1yk2we
                  (apply
                    (case-lambda
                      ((g$who$8293$1yk2we g$expr$8294$1yk2we)
                       (if (g$id?$7322$1yk2we g$who$8293$1yk2we)
                         (g$bless$7563$1yk2we
                           (list
                             'define-syntax
                             g$who$8293$1yk2we
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8293$1yk2we)
                               g$expr$8294$1yk2we)))
                         (g$syntax-violation$7711$1yk2we
                           '#f
                           '"invalid name"
                           g$stx$8290$1yk2we))))
                    g$ls/false$8292$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8291$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8291$1yk2we '(_ any any)))))
         g$stx$8290$1yk2we))))
   (g$trace-let/rec-syntax$7572$1yk2we
     g$trace-let/rec-syntax$11032$1yk2we
     (case-lambda
       ((g$who$8295$1yk2we)
        (case-lambda
          ((g$stx$8296$1yk2we)
           ((case-lambda
              ((g$t$8297$1yk2we)
               ((case-lambda
                  ((g$ls/false$8298$1yk2we)
                   (if g$ls/false$8298$1yk2we
                     (apply
                       (case-lambda
                         ((g$lhs*$8299$1yk2we
                            g$rhs*$8300$1yk2we
                            g$b$8301$1yk2we
                            g$b*$8302$1yk2we)
                          (if (g$valid-bound-ids?$7327$1yk2we
                                g$lhs*$8299$1yk2we)
                            ((case-lambda
                               ((g$rhs*$8303$1yk2we)
                                (g$bless$7563$1yk2we
                                  (cons
                                    g$who$8295$1yk2we
                                    (cons
                                      (map list
                                           g$lhs*$8299$1yk2we
                                           g$rhs*$8303$1yk2we)
                                      (cons
                                        g$b$8301$1yk2we
                                        g$b*$8302$1yk2we))))))
                             (map (case-lambda
                                    ((g$lhs$8304$1yk2we g$rhs$8305$1yk2we)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8304$1yk2we)
                                       g$rhs$8305$1yk2we)))
                                  g$lhs*$8299$1yk2we
                                  g$rhs*$8300$1yk2we))
                            (g$invalid-fmls-error$7565$1yk2we
                              g$stx$8296$1yk2we
                              g$lhs*$8299$1yk2we))))
                       g$ls/false$8298$1yk2we)
                     (g$syntax-violation$7711$1yk2we
                       '#f
                       '"invalid syntax"
                       g$t$8297$1yk2we))))
                (g$syntax-dispatch$7600$1yk2we
                  g$t$8297$1yk2we
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8296$1yk2we))))))
   (g$trace-let-syntax-macro$7573$1yk2we
     g$trace-let-syntax-macro$11033$1yk2we
     (g$trace-let/rec-syntax$7572$1yk2we 'let-syntax))
   (g$trace-letrec-syntax-macro$7574$1yk2we
     g$trace-letrec-syntax-macro$11034$1yk2we
     (g$trace-let/rec-syntax$7572$1yk2we 'letrec-syntax))
   (g$guard-macro$7575$1yk2we
     g$guard-macro$11035$1yk2we
     (case-lambda
       ((g$x$8306$1yk2we)
        (letrec* ((g$gen-clauses$8307$1yk2we
                    (case-lambda
                      ((g$con$8319$1yk2we
                         g$outerk$8320$1yk2we
                         g$clause*$8321$1yk2we)
                       (letrec* ((g$f$8322$1yk2we
                                   (case-lambda
                                     ((g$x$8350$1yk2we g$k$8351$1yk2we)
                                      ((case-lambda
                                         ((g$t$8352$1yk2we)
                                          ((case-lambda
                                             ((g$ls/false$8353$1yk2we)
                                              (if g$ls/false$8353$1yk2we
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8354$1yk2we
                                                       g$p$8355$1yk2we)
                                                     ((case-lambda
                                                        ((g$t$8356$1yk2we)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8356$1yk2we
                                                               g$e$8354$1yk2we))
                                                           (list
                                                             'if
                                                             g$t$8356$1yk2we
                                                             (list
                                                               g$p$8355$1yk2we
                                                               g$t$8356$1yk2we)
                                                             g$k$8351$1yk2we))))
                                                      (gensym))))
                                                  g$ls/false$8353$1yk2we)
                                                ((case-lambda
                                                   ((g$t$8357$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$8358$1yk2we)
                                                        (if g$ls/false$8358$1yk2we
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8359$1yk2we)
                                                               ((case-lambda
                                                                  ((g$t$8360$1yk2we)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8360$1yk2we
                                                                         g$e$8359$1yk2we))
                                                                     (list
                                                                       'if
                                                                       g$t$8360$1yk2we
                                                                       g$t$8360$1yk2we
                                                                       g$k$8351$1yk2we))))
                                                                (gensym))))
                                                            g$ls/false$8358$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$8361$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$8362$1yk2we)
                                                                  (if g$ls/false$8362$1yk2we
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8363$1yk2we
                                                                           g$v$8364$1yk2we
                                                                           g$v*$8365$1yk2we)
                                                                         (list
                                                                           'if
                                                                           g$e$8363$1yk2we
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8364$1yk2we
                                                                               g$v*$8365$1yk2we))
                                                                           g$k$8351$1yk2we)))
                                                                      g$ls/false$8362$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$t$8366$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8367$1yk2we)
                                                                            (if g$ls/false$8367$1yk2we
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7711$1yk2we
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8350$1yk2we)))
                                                                                g$ls/false$8367$1yk2we)
                                                                              (g$syntax-violation$7711$1yk2we
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8366$1yk2we))))
                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                           g$t$8366$1yk2we
                                                                           '_))))
                                                                     g$t$8361$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$8361$1yk2we
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8357$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$8357$1yk2we
                                                       '(any)))))
                                                 g$t$8352$1yk2we))))
                                           (g$syntax-dispatch$7600$1yk2we
                                             g$t$8352$1yk2we
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8350$1yk2we))))
                                 (g$f*$8323$1yk2we
                                   (case-lambda
                                     ((g$x*$8330$1yk2we)
                                      ((case-lambda
                                         ((g$t$8331$1yk2we)
                                          ((case-lambda
                                             ((g$ls/false$8332$1yk2we)
                                              (if g$ls/false$8332$1yk2we
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8319$1yk2we)
                                                       '#t)))
                                                  g$ls/false$8332$1yk2we)
                                                ((case-lambda
                                                   ((g$t$8333$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$8334$1yk2we)
                                                        (if g$ls/false$8334$1yk2we
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8335$1yk2we
                                                                 g$e*$8336$1yk2we)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8335$1yk2we
                                                                     g$e*$8336$1yk2we))
                                                                 '#f)))
                                                            g$ls/false$8334$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$8337$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$8338$1yk2we)
                                                                  (if g$ls/false$8338$1yk2we
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8339$1yk2we
                                                                           g$cls*$8340$1yk2we)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8323$1yk2we
                                                                                g$cls*$8340$1yk2we)))
                                                                           (case-lambda
                                                                             ((g$e$8343$1yk2we
                                                                                g$g$8344$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$g$8345$1yk2we
                                                                                    g$e$8346$1yk2we)
                                                                                  (values
                                                                                    (g$f$8322$1yk2we
                                                                                      g$cls$8339$1yk2we
                                                                                      g$e$8346$1yk2we)
                                                                                    g$g$8345$1yk2we)))
                                                                               g$g$8344$1yk2we
                                                                               g$e$8343$1yk2we))))))
                                                                      g$ls/false$8338$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$t$8347$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8348$1yk2we)
                                                                            (if g$ls/false$8348$1yk2we
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8349$1yk2we)
                                                                                   (g$syntax-violation$7711$1yk2we
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8349$1yk2we)))
                                                                                g$ls/false$8348$1yk2we)
                                                                              (g$syntax-violation$7711$1yk2we
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8347$1yk2we))))
                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                           g$t$8347$1yk2we
                                                                           'any))))
                                                                     g$t$8337$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$8337$1yk2we
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8333$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$8333$1yk2we
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8331$1yk2we))))
                                           (g$syntax-dispatch$7600$1yk2we
                                             g$t$8331$1yk2we
                                             '()))))
                                       g$x*$8330$1yk2we)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8323$1yk2we g$clause*$8321$1yk2we)))
                           (case-lambda
                             ((g$code$8326$1yk2we g$raisek$8327$1yk2we)
                              ((case-lambda
                                 ((g$raisek$8328$1yk2we g$code$8329$1yk2we)
                                  (if g$raisek$8328$1yk2we
                                    (list
                                      g$outerk$8320$1yk2we
                                      g$code$8329$1yk2we)
                                    g$code$8329$1yk2we)))
                               g$raisek$8327$1yk2we
                               g$code$8326$1yk2we)))))))))
          ((case-lambda
             ((g$t$8308$1yk2we)
              ((case-lambda
                 ((g$ls/false$8309$1yk2we)
                  (if (if g$ls/false$8309$1yk2we
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8310$1yk2we
                                 g$clause*$8311$1yk2we
                                 g$b$8312$1yk2we
                                 g$b*$8313$1yk2we)
                               (g$id?$7322$1yk2we g$con$8310$1yk2we)))
                            g$ls/false$8309$1yk2we))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8314$1yk2we
                           g$clause*$8315$1yk2we
                           g$b$8316$1yk2we
                           g$b*$8317$1yk2we)
                         ((case-lambda
                            ((g$outerk$8318$1yk2we)
                             (g$bless$7563$1yk2we
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8318$1yk2we)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8314$1yk2we)
                                           (g$gen-clauses$8307$1yk2we
                                             g$con$8314$1yk2we
                                             g$outerk$8318$1yk2we
                                             g$clause*$8315$1yk2we))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8316$1yk2we
                                                 g$b*$8317$1yk2we))))))))))))
                          (gensym))))
                      g$ls/false$8309$1yk2we)
                    (g$syntax-violation$7711$1yk2we
                      '#f
                      '"invalid syntax"
                      g$t$8308$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$8308$1yk2we
                 '(_ (any . each-any) any . each-any)))))
           g$x$8306$1yk2we)))))
   (g$define-enumeration-macro$7576$1yk2we
     g$define-enumeration-macro$11036$1yk2we
     (case-lambda
       ((g$stx$8368$1yk2we)
        (letrec* ((g$set?$8369$1yk2we
                    (case-lambda
                      ((g$x$8382$1yk2we)
                       ((case-lambda
                          ((g$t$8383$1yk2we)
                           (if g$t$8383$1yk2we
                             g$t$8383$1yk2we
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8382$1yk2we)
                                          (cdr g$x$8382$1yk2we)))
                                 (begin
                                   '#f
                                   (g$set?$8369$1yk2we (cdr g$x$8382$1yk2we)))
                                 '#f)))))
                        (null? g$x$8382$1yk2we)))))
                  (g$remove-dups$8370$1yk2we
                    (case-lambda
                      ((g$ls$8381$1yk2we)
                       (if (null? g$ls$8381$1yk2we)
                         '()
                         (cons
                           (car g$ls$8381$1yk2we)
                           (g$remove-dups$8370$1yk2we
                             (g$remq$5487$1yk2we
                               (car g$ls$8381$1yk2we)
                               (cdr g$ls$8381$1yk2we)))))))))
          ((case-lambda
             ((g$t$8371$1yk2we)
              ((case-lambda
                 ((g$ls/false$8372$1yk2we)
                  (if (if g$ls/false$8372$1yk2we
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8373$1yk2we
                                 g$id*$8374$1yk2we
                                 g$maker$8375$1yk2we)
                               (if (g$id?$7322$1yk2we g$name$8373$1yk2we)
                                 (if (g$id?$7322$1yk2we g$maker$8375$1yk2we)
                                   (begin
                                     '#f
                                     (g$for-all$5480$1yk2we
                                       g$id?$7322$1yk2we
                                       g$id*$8374$1yk2we))
                                   '#f)
                                 '#f)))
                            g$ls/false$8372$1yk2we))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8376$1yk2we
                           g$id*$8377$1yk2we
                           g$maker$8378$1yk2we)
                         ((case-lambda
                            ((g$name*$8379$1yk2we g$mk$8380$1yk2we)
                             (g$bless$7563$1yk2we
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8380$1yk2we
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8379$1yk2we))))
                                 (list
                                   'define-syntax
                                   g$name$8376$1yk2we
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8379$1yk2we))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8376$1yk2we)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8378$1yk2we
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8378$1yk2we)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8379$1yk2we))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8378$1yk2we)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8380$1yk2we
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8370$1yk2we
                            (g$syntax->datum$7714$1yk2we g$id*$8377$1yk2we))
                          (gensym))))
                      g$ls/false$8372$1yk2we)
                    (g$syntax-violation$7711$1yk2we
                      '#f
                      '"invalid syntax"
                      g$t$8371$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$8371$1yk2we
                 '(_ any each-any any)))))
           g$stx$8368$1yk2we)))))
   (g$time-macro$7577$1yk2we
     g$time-macro$11037$1yk2we
     (case-lambda
       ((g$stx$8384$1yk2we)
        ((case-lambda
           ((g$t$8385$1yk2we)
            ((case-lambda
               ((g$ls/false$8386$1yk2we)
                (if g$ls/false$8386$1yk2we
                  (apply
                    (case-lambda
                      ((g$expr$8387$1yk2we)
                       ((case-lambda
                          ((g$str$8388$1yk2we)
                           (g$bless$7563$1yk2we
                             (list
                               'time-it
                               g$str$8388$1yk2we
                               (list 'lambda '() g$expr$8387$1yk2we)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6299$1yk2we)))
                          (case-lambda
                            ((g$p$8391$1yk2we g$e$8392$1yk2we)
                             ((case-lambda
                                ((g$e$8393$1yk2we g$p$8394$1yk2we)
                                 (begin
                                   (write
                                     (g$syntax->datum$7714$1yk2we
                                       g$expr$8387$1yk2we)
                                     g$p$8394$1yk2we)
                                   (g$e$8393$1yk2we))))
                              g$e$8392$1yk2we
                              g$p$8391$1yk2we)))))))
                    g$ls/false$8386$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8385$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8385$1yk2we '(_ any)))))
         g$stx$8384$1yk2we))))
   (g$delay-macro$7578$1yk2we
     g$delay-macro$11038$1yk2we
     (case-lambda
       ((g$stx$8395$1yk2we)
        ((case-lambda
           ((g$t$8396$1yk2we)
            ((case-lambda
               ((g$ls/false$8397$1yk2we)
                (if g$ls/false$8397$1yk2we
                  (apply
                    (case-lambda
                      ((g$expr$8398$1yk2we)
                       (g$bless$7563$1yk2we
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8398$1yk2we)))))
                    g$ls/false$8397$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8396$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8396$1yk2we '(_ any)))))
         g$stx$8395$1yk2we))))
   (g$assert-macro$7579$1yk2we
     g$assert-macro$11039$1yk2we
     (case-lambda
       ((g$stx$8399$1yk2we)
        ((case-lambda
           ((g$t$8400$1yk2we)
            ((case-lambda
               ((g$ls/false$8401$1yk2we)
                (if g$ls/false$8401$1yk2we
                  (apply
                    (case-lambda
                      ((g$expr$8402$1yk2we)
                       ((case-lambda
                          ((g$pos$8403$1yk2we)
                           (g$bless$7563$1yk2we
                             (list
                               'unless
                               g$expr$8402$1yk2we
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8402$1yk2we)
                                 (list 'quote g$pos$8403$1yk2we))))))
                        ((case-lambda
                           ((g$t$8404$1yk2we)
                            (if g$t$8404$1yk2we
                              g$t$8404$1yk2we
                              (begin
                                '#f
                                (g$expression-position$7706$1yk2we
                                  g$expr$8402$1yk2we)))))
                         (g$expression-position$7706$1yk2we
                           g$stx$8399$1yk2we)))))
                    g$ls/false$8401$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8400$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8400$1yk2we '(_ any)))))
         g$stx$8399$1yk2we))))
   (g$endianness-macro$7580$1yk2we
     g$endianness-macro$11040$1yk2we
     (case-lambda
       ((g$stx$8405$1yk2we)
        ((case-lambda
           ((g$t$8406$1yk2we)
            ((case-lambda
               ((g$ls/false$8407$1yk2we)
                (if g$ls/false$8407$1yk2we
                  (apply
                    (case-lambda
                      ((g$e$8408$1yk2we)
                       ((case-lambda
                          ((g$t$8409$1yk2we)
                           (if (memv g$t$8409$1yk2we '(little))
                             (g$bless$7563$1yk2we ''little)
                             (if (memv g$t$8409$1yk2we '(big))
                               (g$bless$7563$1yk2we ''big)
                               (g$syntax-violation$7711$1yk2we
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8405$1yk2we)))))
                        (g$syntax->datum$7714$1yk2we g$e$8408$1yk2we))))
                    g$ls/false$8407$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8406$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8406$1yk2we '(_ any)))))
         g$stx$8405$1yk2we))))
   (g$identifier-syntax-macro$7581$1yk2we
     g$identifier-syntax-macro$11041$1yk2we
     (case-lambda
       ((g$stx$8410$1yk2we)
        ((case-lambda
           ((g$t$8411$1yk2we)
            ((case-lambda
               ((g$ls/false$8412$1yk2we)
                (if g$ls/false$8412$1yk2we
                  (apply
                    (case-lambda
                      ((g$expr$8413$1yk2we)
                       (g$bless$7563$1yk2we
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8413$1yk2we))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8413$1yk2we)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8412$1yk2we)
                  ((case-lambda
                     ((g$t$8414$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8415$1yk2we)
                          (if (if g$ls/false$8415$1yk2we
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8416$1yk2we
                                         g$expr1$8417$1yk2we
                                         g$id2$8418$1yk2we
                                         g$expr2$8419$1yk2we
                                         g$expr3$8420$1yk2we)
                                       (if (g$id?$7322$1yk2we g$id1$8416$1yk2we)
                                         (if (g$id?$7322$1yk2we
                                               g$id2$8418$1yk2we)
                                           (begin
                                             '#f
                                             (g$id?$7322$1yk2we
                                               g$expr2$8419$1yk2we))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8415$1yk2we))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8421$1yk2we
                                   g$expr1$8422$1yk2we
                                   g$id2$8423$1yk2we
                                   g$expr2$8424$1yk2we
                                   g$expr3$8425$1yk2we)
                                 (g$bless$7563$1yk2we
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8422$1yk2we))
                                         (list
                                           (list 'set! 'id g$expr2$8424$1yk2we)
                                           (list 'syntax g$expr3$8425$1yk2we))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8422$1yk2we
                                               '(e* ...))))))))))
                              g$ls/false$8415$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$8414$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$8414$1yk2we
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8411$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8411$1yk2we '(_ any)))))
         g$stx$8410$1yk2we))))
   (g$do-macro$7582$1yk2we
     g$do-macro$11042$1yk2we
     (case-lambda
       ((g$stx$8426$1yk2we)
        (letrec* ((g$bind$8427$1yk2we
                    (case-lambda
                      ((g$x$8439$1yk2we)
                       ((case-lambda
                          ((g$t$8440$1yk2we)
                           ((case-lambda
                              ((g$ls/false$8441$1yk2we)
                               (if g$ls/false$8441$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$x$8442$1yk2we g$init$8443$1yk2we)
                                      (list
                                        g$x$8442$1yk2we
                                        g$init$8443$1yk2we
                                        g$x$8442$1yk2we)))
                                   g$ls/false$8441$1yk2we)
                                 ((case-lambda
                                    ((g$t$8444$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$8445$1yk2we)
                                         (if g$ls/false$8445$1yk2we
                                           (apply
                                             (case-lambda
                                               ((g$x$8446$1yk2we
                                                  g$init$8447$1yk2we
                                                  g$step$8448$1yk2we)
                                                (list
                                                  g$x$8446$1yk2we
                                                  g$init$8447$1yk2we
                                                  g$step$8448$1yk2we)))
                                             g$ls/false$8445$1yk2we)
                                           ((case-lambda
                                              ((g$t$8449$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$8450$1yk2we)
                                                   (if g$ls/false$8450$1yk2we
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7711$1yk2we
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8426$1yk2we)))
                                                       g$ls/false$8450$1yk2we)
                                                     (g$syntax-violation$7711$1yk2we
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8449$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$8449$1yk2we
                                                  '_))))
                                            g$t$8444$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$8444$1yk2we
                                        '(any any any)))))
                                  g$t$8440$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$8440$1yk2we
                              '(any any)))))
                        g$x$8439$1yk2we)))))
          ((case-lambda
             ((g$t$8428$1yk2we)
              ((case-lambda
                 ((g$ls/false$8429$1yk2we)
                  (if g$ls/false$8429$1yk2we
                    (apply
                      (case-lambda
                        ((g$binding*$8430$1yk2we
                           g$test$8431$1yk2we
                           g$expr*$8432$1yk2we
                           g$command*$8433$1yk2we)
                         ((case-lambda
                            ((g$t$8434$1yk2we)
                             ((case-lambda
                                ((g$ls/false$8435$1yk2we)
                                 (if g$ls/false$8435$1yk2we
                                   (apply
                                     (case-lambda
                                       ((g$x*$8436$1yk2we
                                          g$init*$8437$1yk2we
                                          g$step*$8438$1yk2we)
                                        (if (g$valid-bound-ids?$7327$1yk2we
                                              g$x*$8436$1yk2we)
                                          (g$bless$7563$1yk2we
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8436$1yk2we
                                                    (list
                                                      'if
                                                      g$test$8431$1yk2we
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8432$1yk2we))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8433$1yk2we
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8438$1yk2we))))))))
                                              (cons 'loop g$init*$8437$1yk2we)))
                                          (g$syntax-violation$7711$1yk2we
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8426$1yk2we))))
                                     g$ls/false$8435$1yk2we)
                                   (g$syntax-violation$7711$1yk2we
                                     '#f
                                     '"invalid syntax"
                                     g$t$8434$1yk2we))))
                              (g$syntax-dispatch$7600$1yk2we
                                g$t$8434$1yk2we
                                '#(each (any any any))))))
                          (map g$bind$8427$1yk2we g$binding*$8430$1yk2we))))
                      g$ls/false$8429$1yk2we)
                    (g$syntax-violation$7711$1yk2we
                      '#f
                      '"invalid syntax"
                      g$t$8428$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$8428$1yk2we
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8426$1yk2we)))))
   (g$let*-macro$7583$1yk2we
     g$let*-macro$11043$1yk2we
     (case-lambda
       ((g$stx$8451$1yk2we)
        ((case-lambda
           ((g$t$8452$1yk2we)
            ((case-lambda
               ((g$ls/false$8453$1yk2we)
                (if (if g$ls/false$8453$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8454$1yk2we
                               g$rhs*$8455$1yk2we
                               g$b$8456$1yk2we
                               g$b*$8457$1yk2we)
                             (g$for-all$5480$1yk2we
                               g$id?$7322$1yk2we
                               g$lhs*$8454$1yk2we)))
                          g$ls/false$8453$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8458$1yk2we
                         g$rhs*$8459$1yk2we
                         g$b$8460$1yk2we
                         g$b*$8461$1yk2we)
                       (g$bless$7563$1yk2we
                         ((letrec ((g$f$8462$1yk2we
                                     (case-lambda
                                       ((g$x*$8463$1yk2we)
                                        (if (null? g$x*$8463$1yk2we)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8460$1yk2we
                                                g$b*$8461$1yk2we)))
                                          (list
                                            'let
                                            (list (car g$x*$8463$1yk2we))
                                            (g$f$8462$1yk2we
                                              (cdr g$x*$8463$1yk2we))))))))
                            g$f$8462$1yk2we)
                          (map list g$lhs*$8458$1yk2we g$rhs*$8459$1yk2we)))))
                    g$ls/false$8453$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8452$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8452$1yk2we
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8451$1yk2we))))
   (g$or-macro$7584$1yk2we
     g$or-macro$11044$1yk2we
     (case-lambda
       ((g$stx$8464$1yk2we)
        ((case-lambda
           ((g$t$8465$1yk2we)
            ((case-lambda
               ((g$ls/false$8466$1yk2we)
                (if g$ls/false$8466$1yk2we
                  (apply (case-lambda (() '#f)) g$ls/false$8466$1yk2we)
                  ((case-lambda
                     ((g$t$8467$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8468$1yk2we)
                          (if g$ls/false$8468$1yk2we
                            (apply
                              (case-lambda
                                ((g$e$8469$1yk2we g$e*$8470$1yk2we)
                                 (g$bless$7563$1yk2we
                                   ((letrec ((g$f$8471$1yk2we
                                               (case-lambda
                                                 ((g$e$8472$1yk2we
                                                    g$e*$8473$1yk2we)
                                                  (if (null? g$e*$8473$1yk2we)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8472$1yk2we)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8472$1yk2we))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8471$1yk2we
                                                          (car g$e*$8473$1yk2we)
                                                          (cdr g$e*$8473$1yk2we)))))))))
                                      g$f$8471$1yk2we)
                                    g$e$8469$1yk2we
                                    g$e*$8470$1yk2we))))
                              g$ls/false$8468$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$8467$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$8467$1yk2we
                         '(_ any . each-any)))))
                   g$t$8465$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8465$1yk2we '(_)))))
         g$stx$8464$1yk2we))))
   (g$and-macro$7585$1yk2we
     g$and-macro$11045$1yk2we
     (case-lambda
       ((g$stx$8474$1yk2we)
        ((case-lambda
           ((g$t$8475$1yk2we)
            ((case-lambda
               ((g$ls/false$8476$1yk2we)
                (if g$ls/false$8476$1yk2we
                  (apply (case-lambda (() '#t)) g$ls/false$8476$1yk2we)
                  ((case-lambda
                     ((g$t$8477$1yk2we)
                      ((case-lambda
                         ((g$ls/false$8478$1yk2we)
                          (if g$ls/false$8478$1yk2we
                            (apply
                              (case-lambda
                                ((g$e$8479$1yk2we g$e*$8480$1yk2we)
                                 (g$bless$7563$1yk2we
                                   ((letrec ((g$f$8481$1yk2we
                                               (case-lambda
                                                 ((g$e$8482$1yk2we
                                                    g$e*$8483$1yk2we)
                                                  (if (null? g$e*$8483$1yk2we)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8482$1yk2we)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8482$1yk2we
                                                        (cons
                                                          (g$f$8481$1yk2we
                                                            (car g$e*$8483$1yk2we)
                                                            (cdr g$e*$8483$1yk2we))
                                                          '(#f)))))))))
                                      g$f$8481$1yk2we)
                                    g$e$8479$1yk2we
                                    g$e*$8480$1yk2we))))
                              g$ls/false$8478$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$8477$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$8477$1yk2we
                         '(_ any . each-any)))))
                   g$t$8475$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8475$1yk2we '(_)))))
         g$stx$8474$1yk2we))))
   (g$cond-macro$7586$1yk2we
     g$cond-macro$11046$1yk2we
     (case-lambda
       ((g$stx$8484$1yk2we)
        ((case-lambda
           ((g$t$8485$1yk2we)
            ((case-lambda
               ((g$ls/false$8486$1yk2we)
                (if g$ls/false$8486$1yk2we
                  (apply
                    (case-lambda
                      ((g$cls$8487$1yk2we g$cls*$8488$1yk2we)
                       (g$bless$7563$1yk2we
                         ((letrec ((g$f$8489$1yk2we
                                     (case-lambda
                                       ((g$cls$8490$1yk2we g$cls*$8491$1yk2we)
                                        (if (null? g$cls*$8491$1yk2we)
                                          ((case-lambda
                                             ((g$t$8492$1yk2we)
                                              ((case-lambda
                                                 ((g$ls/false$8493$1yk2we)
                                                  (if g$ls/false$8493$1yk2we
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8494$1yk2we
                                                           g$e*$8495$1yk2we)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8494$1yk2we
                                                             g$e*$8495$1yk2we))))
                                                      g$ls/false$8493$1yk2we)
                                                    ((case-lambda
                                                       ((g$t$8496$1yk2we)
                                                        ((case-lambda
                                                           ((g$ls/false$8497$1yk2we)
                                                            (if g$ls/false$8497$1yk2we
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8498$1yk2we
                                                                     g$p$8499$1yk2we)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8498$1yk2we))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8499$1yk2we
                                                                         '(t))))))
                                                                g$ls/false$8497$1yk2we)
                                                              ((case-lambda
                                                                 ((g$t$8500$1yk2we)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8501$1yk2we)
                                                                      (if g$ls/false$8501$1yk2we
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8502$1yk2we)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8502$1yk2we
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8501$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$t$8503$1yk2we)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8504$1yk2we)
                                                                                (if g$ls/false$8504$1yk2we
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8505$1yk2we
                                                                                         g$e*$8506$1yk2we)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8505$1yk2we
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8506$1yk2we))))
                                                                                    g$ls/false$8504$1yk2we)
                                                                                  ((case-lambda
                                                                                     ((g$t$8507$1yk2we)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8508$1yk2we)
                                                                                          (if g$ls/false$8508$1yk2we
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7711$1yk2we
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8484$1yk2we)))
                                                                                              g$ls/false$8508$1yk2we)
                                                                                            (g$syntax-violation$7711$1yk2we
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8507$1yk2we))))
                                                                                       (g$syntax-dispatch$7600$1yk2we
                                                                                         g$t$8507$1yk2we
                                                                                         '_))))
                                                                                   g$t$8503$1yk2we))))
                                                                             (g$syntax-dispatch$7600$1yk2we
                                                                               g$t$8503$1yk2we
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8500$1yk2we))))
                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                     g$t$8500$1yk2we
                                                                     '(any)))))
                                                               g$t$8496$1yk2we))))
                                                         (g$syntax-dispatch$7600$1yk2we
                                                           g$t$8496$1yk2we
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8492$1yk2we))))
                                               (g$syntax-dispatch$7600$1yk2we
                                                 g$t$8492$1yk2we
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8490$1yk2we)
                                          ((case-lambda
                                             ((g$t$8509$1yk2we)
                                              ((case-lambda
                                                 ((g$ls/false$8510$1yk2we)
                                                  (if g$ls/false$8510$1yk2we
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8511$1yk2we
                                                           g$e*$8512$1yk2we)
                                                         (g$syntax-violation$7711$1yk2we
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8484$1yk2we)))
                                                      g$ls/false$8510$1yk2we)
                                                    ((case-lambda
                                                       ((g$t$8513$1yk2we)
                                                        ((case-lambda
                                                           ((g$ls/false$8514$1yk2we)
                                                            (if g$ls/false$8514$1yk2we
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8515$1yk2we
                                                                     g$p$8516$1yk2we)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8515$1yk2we))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8516$1yk2we
                                                                         '(t))
                                                                       (g$f$8489$1yk2we
                                                                         (car g$cls*$8491$1yk2we)
                                                                         (cdr g$cls*$8491$1yk2we))))))
                                                                g$ls/false$8514$1yk2we)
                                                              ((case-lambda
                                                                 ((g$t$8517$1yk2we)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8518$1yk2we)
                                                                      (if g$ls/false$8518$1yk2we
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8519$1yk2we)
                                                                             (list
                                                                               'or
                                                                               g$e$8519$1yk2we
                                                                               (g$f$8489$1yk2we
                                                                                 (car g$cls*$8491$1yk2we)
                                                                                 (cdr g$cls*$8491$1yk2we)))))
                                                                          g$ls/false$8518$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$t$8520$1yk2we)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8521$1yk2we)
                                                                                (if g$ls/false$8521$1yk2we
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8522$1yk2we
                                                                                         g$e*$8523$1yk2we)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8522$1yk2we
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8523$1yk2we)
                                                                                         (g$f$8489$1yk2we
                                                                                           (car g$cls*$8491$1yk2we)
                                                                                           (cdr g$cls*$8491$1yk2we)))))
                                                                                    g$ls/false$8521$1yk2we)
                                                                                  ((case-lambda
                                                                                     ((g$t$8524$1yk2we)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8525$1yk2we)
                                                                                          (if g$ls/false$8525$1yk2we
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7711$1yk2we
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8484$1yk2we)))
                                                                                              g$ls/false$8525$1yk2we)
                                                                                            (g$syntax-violation$7711$1yk2we
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8524$1yk2we))))
                                                                                       (g$syntax-dispatch$7600$1yk2we
                                                                                         g$t$8524$1yk2we
                                                                                         '_))))
                                                                                   g$t$8520$1yk2we))))
                                                                             (g$syntax-dispatch$7600$1yk2we
                                                                               g$t$8520$1yk2we
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8517$1yk2we))))
                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                     g$t$8517$1yk2we
                                                                     '(any)))))
                                                               g$t$8513$1yk2we))))
                                                         (g$syntax-dispatch$7600$1yk2we
                                                           g$t$8513$1yk2we
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8509$1yk2we))))
                                               (g$syntax-dispatch$7600$1yk2we
                                                 g$t$8509$1yk2we
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8490$1yk2we))))))
                            g$f$8489$1yk2we)
                          g$cls$8487$1yk2we
                          g$cls*$8488$1yk2we))))
                    g$ls/false$8486$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8485$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8485$1yk2we
               '(_ any . each-any)))))
         g$stx$8484$1yk2we))))
   (g$do-include$7587$1yk2we
     g$do-include$11047$1yk2we
     (case-lambda
       ((g$stx$8526$1yk2we g$id$8527$1yk2we g$filename$8528$1yk2we)
        ((case-lambda
           ((g$filename$8529$1yk2we)
            (begin
              (if (not (if (string? g$filename$8529$1yk2we)
                         (begin '#f (g$id?$7322$1yk2we g$id$8527$1yk2we))
                         '#f))
                (g$syntax-violation$7711$1yk2we
                  '#f
                  '"invalid syntax"
                  g$stx$8526$1yk2we)
                (void))
              (cons
                (g$bless$7563$1yk2we 'begin)
                (g$with-input-from-file$6333$1yk2we
                  g$filename$8529$1yk2we
                  (case-lambda
                    (()
                     ((letrec ((g$f$8530$1yk2we
                                 (case-lambda
                                   ((g$ls$8531$1yk2we)
                                    ((case-lambda
                                       ((g$x$8532$1yk2we)
                                        (if (eof-object? g$x$8532$1yk2we)
                                          (reverse g$ls$8531$1yk2we)
                                          (g$f$8530$1yk2we
                                            (cons
                                              (g$datum->stx$7305$1yk2we
                                                g$id$8527$1yk2we
                                                g$x$8532$1yk2we)
                                              g$ls$8531$1yk2we)))))
                                     (read-annotated))))))
                        g$f$8530$1yk2we)
                      '()))))))))
         (g$stx->datum$7333$1yk2we g$filename$8528$1yk2we)))))
   (g$include-macro$7588$1yk2we
     g$include-macro$11048$1yk2we
     (case-lambda
       ((g$e$8533$1yk2we)
        ((case-lambda
           ((g$t$8534$1yk2we)
            ((case-lambda
               ((g$ls/false$8535$1yk2we)
                (if g$ls/false$8535$1yk2we
                  (apply
                    (case-lambda
                      ((g$id$8536$1yk2we g$filename$8537$1yk2we)
                       (g$do-include$7587$1yk2we
                         g$e$8533$1yk2we
                         g$id$8536$1yk2we
                         g$filename$8537$1yk2we)))
                    g$ls/false$8535$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8534$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8534$1yk2we '(any any)))))
         g$e$8533$1yk2we))))
   (g$include-into-macro$7589$1yk2we
     g$include-into-macro$11049$1yk2we
     (case-lambda
       ((g$e$8538$1yk2we)
        ((case-lambda
           ((g$t$8539$1yk2we)
            ((case-lambda
               ((g$ls/false$8540$1yk2we)
                (if g$ls/false$8540$1yk2we
                  (apply
                    (case-lambda
                      ((g$id$8541$1yk2we g$filename$8542$1yk2we)
                       (g$do-include$7587$1yk2we
                         g$e$8538$1yk2we
                         g$id$8541$1yk2we
                         g$filename$8542$1yk2we)))
                    g$ls/false$8540$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8539$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$8539$1yk2we '(_ any any)))))
         g$e$8538$1yk2we))))
   (g$syntax-rules-macro$7590$1yk2we
     g$syntax-rules-macro$11050$1yk2we
     (case-lambda
       ((g$e$8543$1yk2we)
        ((case-lambda
           ((g$t$8544$1yk2we)
            ((case-lambda
               ((g$ls/false$8545$1yk2we)
                (if g$ls/false$8545$1yk2we
                  (apply
                    (case-lambda
                      ((g$lits$8546$1yk2we
                         g$pat*$8547$1yk2we
                         g$tmp*$8548$1yk2we)
                       (begin
                         (g$verify-literals$7603$1yk2we
                           g$lits$8546$1yk2we
                           g$e$8543$1yk2we)
                         (g$bless$7563$1yk2we
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8546$1yk2we
                                   (map (case-lambda
                                          ((g$pat$8549$1yk2we g$tmp$8550$1yk2we)
                                           ((case-lambda
                                              ((g$t$8551$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$8552$1yk2we)
                                                   (if g$ls/false$8552$1yk2we
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8553$1yk2we)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8553$1yk2we)
                                                            (list
                                                              'syntax
                                                              g$tmp$8550$1yk2we))))
                                                       g$ls/false$8552$1yk2we)
                                                     ((case-lambda
                                                        ((g$t$8554$1yk2we)
                                                         ((case-lambda
                                                            ((g$ls/false$8555$1yk2we)
                                                             (if g$ls/false$8555$1yk2we
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7711$1yk2we
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8543$1yk2we
                                                                      g$pat$8549$1yk2we)))
                                                                 g$ls/false$8555$1yk2we)
                                                               (g$syntax-violation$7711$1yk2we
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8554$1yk2we))))
                                                          (g$syntax-dispatch$7600$1yk2we
                                                            g$t$8554$1yk2we
                                                            '_))))
                                                      g$t$8551$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$8551$1yk2we
                                                  '(_ . any)))))
                                            g$pat$8549$1yk2we)))
                                        g$pat*$8547$1yk2we
                                        g$tmp*$8548$1yk2we)))))))))
                    g$ls/false$8545$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$8544$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$8544$1yk2we
               '(_ each-any . #(each (any any)))))))
         g$e$8543$1yk2we))))
   (g$quasiquote-macro$7591$1yk2we
     g$quasiquote-macro$11051$1yk2we
     ((case-lambda
        (()
         (letrec* ((g$datum$8556$1yk2we
                     (case-lambda
                       ((g$x$8687$1yk2we)
                        (list
                          (g$scheme-stx$7543$1yk2we 'quote)
                          (g$mkstx$7310$1yk2we g$x$8687$1yk2we '() '() '())))))
                   (g$quasicons*$8572$1yk2we
                     (case-lambda
                       ((g$x$8683$1yk2we g$y$8684$1yk2we)
                        ((letrec ((g$f$8685$1yk2we
                                    (case-lambda
                                      ((g$x$8686$1yk2we)
                                       (if (null? g$x$8686$1yk2we)
                                         g$y$8684$1yk2we
                                         (g$quasicons$8573$1yk2we
                                           (car g$x$8686$1yk2we)
                                           (g$f$8685$1yk2we
                                             (cdr g$x$8686$1yk2we))))))))
                           g$f$8685$1yk2we)
                         g$x$8683$1yk2we))))
                   (g$quasicons$8573$1yk2we
                     (case-lambda
                       ((g$x$8664$1yk2we g$y$8665$1yk2we)
                        ((case-lambda
                           ((g$t$8666$1yk2we)
                            ((case-lambda
                               ((g$ls/false$8667$1yk2we)
                                (if g$ls/false$8667$1yk2we
                                  (apply
                                    (case-lambda
                                      ((g$dy$8668$1yk2we)
                                       ((case-lambda
                                          ((g$t$8669$1yk2we)
                                           ((case-lambda
                                              ((g$ls/false$8670$1yk2we)
                                               (if g$ls/false$8670$1yk2we
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8671$1yk2we)
                                                      (list
                                                        (g$scheme-stx$7543$1yk2we
                                                          'quote)
                                                        (cons
                                                          g$dx$8671$1yk2we
                                                          g$dy$8668$1yk2we))))
                                                   g$ls/false$8670$1yk2we)
                                                 ((case-lambda
                                                    ((g$t$8672$1yk2we)
                                                     ((case-lambda
                                                        ((g$ls/false$8673$1yk2we)
                                                         (if g$ls/false$8673$1yk2we
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8674$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8675$1yk2we)
                                                                        (if g$ls/false$8675$1yk2we
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7543$1yk2we
                                                                                   'list)
                                                                                 g$x$8664$1yk2we)))
                                                                            g$ls/false$8675$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$8676$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8677$1yk2we)
                                                                                  (if g$ls/false$8677$1yk2we
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7543$1yk2we
                                                                                             'cons)
                                                                                           g$x$8664$1yk2we
                                                                                           g$y$8665$1yk2we)))
                                                                                      g$ls/false$8677$1yk2we)
                                                                                    (g$syntax-violation$7711$1yk2we
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8676$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$8676$1yk2we
                                                                                 '_))))
                                                                           g$t$8674$1yk2we))))
                                                                     (g$syntax-dispatch$7600$1yk2we
                                                                       g$t$8674$1yk2we
                                                                       '()))))
                                                                 g$dy$8668$1yk2we)))
                                                             g$ls/false$8673$1yk2we)
                                                           (g$syntax-violation$7711$1yk2we
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8672$1yk2we))))
                                                      (g$syntax-dispatch$7600$1yk2we
                                                        g$t$8672$1yk2we
                                                        '_))))
                                                  g$t$8669$1yk2we))))
                                            (g$syntax-dispatch$7600$1yk2we
                                              g$t$8669$1yk2we
                                              '(#(scheme-id quote) any)))))
                                        g$x$8664$1yk2we)))
                                    g$ls/false$8667$1yk2we)
                                  ((case-lambda
                                     ((g$t$8678$1yk2we)
                                      ((case-lambda
                                         ((g$ls/false$8679$1yk2we)
                                          (if g$ls/false$8679$1yk2we
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8680$1yk2we)
                                                 (g$cons*$5482$1yk2we
                                                   (g$scheme-stx$7543$1yk2we
                                                     'list)
                                                   g$x$8664$1yk2we
                                                   g$stuff$8680$1yk2we)))
                                              g$ls/false$8679$1yk2we)
                                            ((case-lambda
                                               ((g$t$8681$1yk2we)
                                                ((case-lambda
                                                   ((g$ls/false$8682$1yk2we)
                                                    (if g$ls/false$8682$1yk2we
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7543$1yk2we
                                                               'cons)
                                                             g$x$8664$1yk2we
                                                             g$y$8665$1yk2we)))
                                                        g$ls/false$8682$1yk2we)
                                                      (g$syntax-violation$7711$1yk2we
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8681$1yk2we))))
                                                 (g$syntax-dispatch$7600$1yk2we
                                                   g$t$8681$1yk2we
                                                   '_))))
                                             g$t$8678$1yk2we))))
                                       (g$syntax-dispatch$7600$1yk2we
                                         g$t$8678$1yk2we
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8666$1yk2we))))
                             (g$syntax-dispatch$7600$1yk2we
                               g$t$8666$1yk2we
                               '(#(scheme-id quote) any)))))
                         g$y$8665$1yk2we))))
                   (g$quasiappend$8574$1yk2we
                     (case-lambda
                       ((g$x$8651$1yk2we g$y$8652$1yk2we)
                        ((case-lambda
                           ((g$ls$8653$1yk2we)
                            (if (null? g$ls$8653$1yk2we)
                              (list (g$scheme-stx$7543$1yk2we 'quote) '())
                              (if (null? (cdr g$ls$8653$1yk2we))
                                (car g$ls$8653$1yk2we)
                                (g$cons*$5482$1yk2we
                                  (g$scheme-stx$7543$1yk2we 'append)
                                  g$ls$8653$1yk2we)))))
                         ((letrec ((g$f$8654$1yk2we
                                     (case-lambda
                                       ((g$x$8655$1yk2we)
                                        (if (null? g$x$8655$1yk2we)
                                          ((case-lambda
                                             ((g$t$8656$1yk2we)
                                              ((case-lambda
                                                 ((g$ls/false$8657$1yk2we)
                                                  (if g$ls/false$8657$1yk2we
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8657$1yk2we)
                                                    ((case-lambda
                                                       ((g$t$8658$1yk2we)
                                                        ((case-lambda
                                                           ((g$ls/false$8659$1yk2we)
                                                            (if g$ls/false$8659$1yk2we
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8652$1yk2we)))
                                                                g$ls/false$8659$1yk2we)
                                                              (g$syntax-violation$7711$1yk2we
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8658$1yk2we))))
                                                         (g$syntax-dispatch$7600$1yk2we
                                                           g$t$8658$1yk2we
                                                           '_))))
                                                     g$t$8656$1yk2we))))
                                               (g$syntax-dispatch$7600$1yk2we
                                                 g$t$8656$1yk2we
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8652$1yk2we)
                                          ((case-lambda
                                             ((g$t$8660$1yk2we)
                                              ((case-lambda
                                                 ((g$ls/false$8661$1yk2we)
                                                  (if g$ls/false$8661$1yk2we
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8654$1yk2we
                                                           (cdr g$x$8655$1yk2we))))
                                                      g$ls/false$8661$1yk2we)
                                                    ((case-lambda
                                                       ((g$t$8662$1yk2we)
                                                        ((case-lambda
                                                           ((g$ls/false$8663$1yk2we)
                                                            (if g$ls/false$8663$1yk2we
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8655$1yk2we)
                                                                     (g$f$8654$1yk2we
                                                                       (cdr g$x$8655$1yk2we)))))
                                                                g$ls/false$8663$1yk2we)
                                                              (g$syntax-violation$7711$1yk2we
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8662$1yk2we))))
                                                         (g$syntax-dispatch$7600$1yk2we
                                                           g$t$8662$1yk2we
                                                           '_))))
                                                     g$t$8660$1yk2we))))
                                               (g$syntax-dispatch$7600$1yk2we
                                                 g$t$8660$1yk2we
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8655$1yk2we)))))))
                            g$f$8654$1yk2we)
                          g$x$8651$1yk2we)))))
                   (g$quasivector$8575$1yk2we
                     (case-lambda
                       ((g$x$8626$1yk2we)
                        ((case-lambda
                           ((g$pat-x$8627$1yk2we)
                            ((case-lambda
                               ((g$t$8628$1yk2we)
                                ((case-lambda
                                   ((g$ls/false$8629$1yk2we)
                                    (if g$ls/false$8629$1yk2we
                                      (apply
                                        (case-lambda
                                          ((g$x*$8630$1yk2we)
                                           (list
                                             (g$scheme-stx$7543$1yk2we 'quote)
                                             (list->vector g$x*$8630$1yk2we))))
                                        g$ls/false$8629$1yk2we)
                                      ((case-lambda
                                         ((g$t$8631$1yk2we)
                                          ((case-lambda
                                             ((g$ls/false$8632$1yk2we)
                                              (if g$ls/false$8632$1yk2we
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8633$1yk2we
                                                                 (case-lambda
                                                                   ((g$x$8634$1yk2we
                                                                      g$k$8635$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$t$8636$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8637$1yk2we)
                                                                            (if g$ls/false$8637$1yk2we
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8638$1yk2we)
                                                                                   (g$k$8635$1yk2we
                                                                                     (map (case-lambda
                                                                                            ((g$x$8639$1yk2we)
                                                                                             (list
                                                                                               (g$scheme-stx$7543$1yk2we
                                                                                                 'quote)
                                                                                               g$x$8639$1yk2we)))
                                                                                          g$x*$8638$1yk2we))))
                                                                                g$ls/false$8637$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$t$8640$1yk2we)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8641$1yk2we)
                                                                                      (if g$ls/false$8641$1yk2we
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8642$1yk2we)
                                                                                             (g$k$8635$1yk2we
                                                                                               g$x*$8642$1yk2we)))
                                                                                          g$ls/false$8641$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$t$8643$1yk2we)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8644$1yk2we)
                                                                                                (if g$ls/false$8644$1yk2we
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8645$1yk2we
                                                                                                         g$y$8646$1yk2we)
                                                                                                       (g$f$8633$1yk2we
                                                                                                         g$y$8646$1yk2we
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8647$1yk2we)
                                                                                                            (g$k$8635$1yk2we
                                                                                                              (cons
                                                                                                                g$x$8645$1yk2we
                                                                                                                g$ls$8647$1yk2we)))))))
                                                                                                    g$ls/false$8644$1yk2we)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8648$1yk2we)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8649$1yk2we)
                                                                                                          (if g$ls/false$8649$1yk2we
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7543$1yk2we
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8627$1yk2we)))
                                                                                                              g$ls/false$8649$1yk2we)
                                                                                                            (g$syntax-violation$7711$1yk2we
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8648$1yk2we))))
                                                                                                       (g$syntax-dispatch$7600$1yk2we
                                                                                                         g$t$8648$1yk2we
                                                                                                         '_))))
                                                                                                   g$t$8643$1yk2we))))
                                                                                             (g$syntax-dispatch$7600$1yk2we
                                                                                               g$t$8643$1yk2we
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8640$1yk2we))))
                                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                                     g$t$8640$1yk2we
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8636$1yk2we))))
                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                           g$t$8636$1yk2we
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8634$1yk2we)))))
                                                        g$f$8633$1yk2we)
                                                      g$x$8626$1yk2we
                                                      (case-lambda
                                                        ((g$ls$8650$1yk2we)
                                                         (g$cons*$5482$1yk2we
                                                           (g$scheme-stx$7543$1yk2we
                                                             'vector)
                                                           g$ls$8650$1yk2we))))))
                                                  g$ls/false$8632$1yk2we)
                                                (g$syntax-violation$7711$1yk2we
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8631$1yk2we))))
                                           (g$syntax-dispatch$7600$1yk2we
                                             g$t$8631$1yk2we
                                             '_))))
                                       g$t$8628$1yk2we))))
                                 (g$syntax-dispatch$7600$1yk2we
                                   g$t$8628$1yk2we
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8627$1yk2we)))
                         g$x$8626$1yk2we))))
                   (g$vquasi$8576$1yk2we
                     (case-lambda
                       ((g$p$8609$1yk2we g$lev$8610$1yk2we)
                        ((case-lambda
                           ((g$t$8611$1yk2we)
                            ((case-lambda
                               ((g$ls/false$8612$1yk2we)
                                (if g$ls/false$8612$1yk2we
                                  (apply
                                    (case-lambda
                                      ((g$p$8613$1yk2we g$q$8614$1yk2we)
                                       ((case-lambda
                                          ((g$t$8615$1yk2we)
                                           ((case-lambda
                                              ((g$ls/false$8616$1yk2we)
                                               (if g$ls/false$8616$1yk2we
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8617$1yk2we)
                                                      (if (= g$lev$8610$1yk2we
                                                             '0)
                                                        (g$quasicons*$8572$1yk2we
                                                          g$p$8617$1yk2we
                                                          (g$vquasi$8576$1yk2we
                                                            g$q$8614$1yk2we
                                                            g$lev$8610$1yk2we))
                                                        (g$quasicons$8573$1yk2we
                                                          (g$quasicons$8573$1yk2we
                                                            (g$datum$8556$1yk2we
                                                              'unquote)
                                                            (g$quasi$8577$1yk2we
                                                              g$p$8617$1yk2we
                                                              (- g$lev$8610$1yk2we
                                                                 '1)))
                                                          (g$vquasi$8576$1yk2we
                                                            g$q$8614$1yk2we
                                                            g$lev$8610$1yk2we)))))
                                                   g$ls/false$8616$1yk2we)
                                                 ((case-lambda
                                                    ((g$t$8618$1yk2we)
                                                     ((case-lambda
                                                        ((g$ls/false$8619$1yk2we)
                                                         (if g$ls/false$8619$1yk2we
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8620$1yk2we)
                                                                (if (= g$lev$8610$1yk2we
                                                                       '0)
                                                                  (g$quasiappend$8574$1yk2we
                                                                    g$p$8620$1yk2we
                                                                    (g$vquasi$8576$1yk2we
                                                                      g$q$8614$1yk2we
                                                                      g$lev$8610$1yk2we))
                                                                  (g$quasicons$8573$1yk2we
                                                                    (g$quasicons$8573$1yk2we
                                                                      (g$datum$8556$1yk2we
                                                                        'unquote-splicing)
                                                                      (g$quasi$8577$1yk2we
                                                                        g$p$8620$1yk2we
                                                                        (- g$lev$8610$1yk2we
                                                                           '1)))
                                                                    (g$vquasi$8576$1yk2we
                                                                      g$q$8614$1yk2we
                                                                      g$lev$8610$1yk2we)))))
                                                             g$ls/false$8619$1yk2we)
                                                           ((case-lambda
                                                              ((g$t$8621$1yk2we)
                                                               ((case-lambda
                                                                  ((g$ls/false$8622$1yk2we)
                                                                   (if g$ls/false$8622$1yk2we
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8623$1yk2we)
                                                                          (g$quasicons$8573$1yk2we
                                                                            (g$quasi$8577$1yk2we
                                                                              g$p$8623$1yk2we
                                                                              g$lev$8610$1yk2we)
                                                                            (g$vquasi$8576$1yk2we
                                                                              g$q$8614$1yk2we
                                                                              g$lev$8610$1yk2we))))
                                                                       g$ls/false$8622$1yk2we)
                                                                     (g$syntax-violation$7711$1yk2we
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8621$1yk2we))))
                                                                (g$syntax-dispatch$7600$1yk2we
                                                                  g$t$8621$1yk2we
                                                                  'any))))
                                                            g$t$8618$1yk2we))))
                                                      (g$syntax-dispatch$7600$1yk2we
                                                        g$t$8618$1yk2we
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8615$1yk2we))))
                                            (g$syntax-dispatch$7600$1yk2we
                                              g$t$8615$1yk2we
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8613$1yk2we)))
                                    g$ls/false$8612$1yk2we)
                                  ((case-lambda
                                     ((g$t$8624$1yk2we)
                                      ((case-lambda
                                         ((g$ls/false$8625$1yk2we)
                                          (if g$ls/false$8625$1yk2we
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7543$1yk2we
                                                     'quote)
                                                   '())))
                                              g$ls/false$8625$1yk2we)
                                            (g$syntax-violation$7711$1yk2we
                                              '#f
                                              '"invalid syntax"
                                              g$t$8624$1yk2we))))
                                       (g$syntax-dispatch$7600$1yk2we
                                         g$t$8624$1yk2we
                                         '()))))
                                   g$t$8611$1yk2we))))
                             (g$syntax-dispatch$7600$1yk2we
                               g$t$8611$1yk2we
                               '(any . any)))))
                         g$p$8609$1yk2we))))
                   (g$quasi$8577$1yk2we
                     (case-lambda
                       ((g$p$8582$1yk2we g$lev$8583$1yk2we)
                        ((case-lambda
                           ((g$t$8584$1yk2we)
                            ((case-lambda
                               ((g$ls/false$8585$1yk2we)
                                (if g$ls/false$8585$1yk2we
                                  (apply
                                    (case-lambda
                                      ((g$p$8586$1yk2we)
                                       (if (= g$lev$8583$1yk2we '0)
                                         g$p$8586$1yk2we
                                         (g$quasicons$8573$1yk2we
                                           (g$datum$8556$1yk2we 'unquote)
                                           (g$quasi$8577$1yk2we
                                             (list g$p$8586$1yk2we)
                                             (- g$lev$8583$1yk2we '1))))))
                                    g$ls/false$8585$1yk2we)
                                  ((case-lambda
                                     ((g$t$8587$1yk2we)
                                      ((case-lambda
                                         ((g$ls/false$8588$1yk2we)
                                          (if g$ls/false$8588$1yk2we
                                            (apply
                                              (case-lambda
                                                ((g$p$8589$1yk2we
                                                   g$q$8590$1yk2we)
                                                 (if (= g$lev$8583$1yk2we '0)
                                                   (g$quasicons*$8572$1yk2we
                                                     g$p$8589$1yk2we
                                                     (g$quasi$8577$1yk2we
                                                       g$q$8590$1yk2we
                                                       g$lev$8583$1yk2we))
                                                   (g$quasicons$8573$1yk2we
                                                     (g$quasicons$8573$1yk2we
                                                       (g$datum$8556$1yk2we
                                                         'unquote)
                                                       (g$quasi$8577$1yk2we
                                                         g$p$8589$1yk2we
                                                         (- g$lev$8583$1yk2we
                                                            '1)))
                                                     (g$quasi$8577$1yk2we
                                                       g$q$8590$1yk2we
                                                       g$lev$8583$1yk2we)))))
                                              g$ls/false$8588$1yk2we)
                                            ((case-lambda
                                               ((g$t$8591$1yk2we)
                                                ((case-lambda
                                                   ((g$ls/false$8592$1yk2we)
                                                    (if g$ls/false$8592$1yk2we
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8593$1yk2we
                                                             g$q$8594$1yk2we)
                                                           (if (= g$lev$8583$1yk2we
                                                                  '0)
                                                             (g$quasiappend$8574$1yk2we
                                                               g$p$8593$1yk2we
                                                               (g$quasi$8577$1yk2we
                                                                 g$q$8594$1yk2we
                                                                 g$lev$8583$1yk2we))
                                                             (g$quasicons$8573$1yk2we
                                                               (g$quasicons$8573$1yk2we
                                                                 (g$datum$8556$1yk2we
                                                                   'unquote-splicing)
                                                                 (g$quasi$8577$1yk2we
                                                                   g$p$8593$1yk2we
                                                                   (- g$lev$8583$1yk2we
                                                                      '1)))
                                                               (g$quasi$8577$1yk2we
                                                                 g$q$8594$1yk2we
                                                                 g$lev$8583$1yk2we)))))
                                                        g$ls/false$8592$1yk2we)
                                                      ((case-lambda
                                                         ((g$t$8595$1yk2we)
                                                          ((case-lambda
                                                             ((g$ls/false$8596$1yk2we)
                                                              (if g$ls/false$8596$1yk2we
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8597$1yk2we)
                                                                     (g$quasicons$8573$1yk2we
                                                                       (g$datum$8556$1yk2we
                                                                         'quasiquote)
                                                                       (g$quasi$8577$1yk2we
                                                                         (list
                                                                           g$p$8597$1yk2we)
                                                                         (+ g$lev$8583$1yk2we
                                                                            '1)))))
                                                                  g$ls/false$8596$1yk2we)
                                                                ((case-lambda
                                                                   ((g$t$8598$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8599$1yk2we)
                                                                        (if g$ls/false$8599$1yk2we
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8600$1yk2we
                                                                                 g$q$8601$1yk2we)
                                                                               (g$quasicons$8573$1yk2we
                                                                                 (g$quasi$8577$1yk2we
                                                                                   g$p$8600$1yk2we
                                                                                   g$lev$8583$1yk2we)
                                                                                 (g$quasi$8577$1yk2we
                                                                                   g$q$8601$1yk2we
                                                                                   g$lev$8583$1yk2we))))
                                                                            g$ls/false$8599$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$8602$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8603$1yk2we)
                                                                                  (if (if g$ls/false$8603$1yk2we
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8604$1yk2we)
                                                                                               (not (g$stx?$7294$1yk2we
                                                                                                      g$x$8604$1yk2we))))
                                                                                            g$ls/false$8603$1yk2we))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8605$1yk2we)
                                                                                         (g$quasivector$8575$1yk2we
                                                                                           (g$vquasi$8576$1yk2we
                                                                                             g$x$8605$1yk2we
                                                                                             g$lev$8583$1yk2we))))
                                                                                      g$ls/false$8603$1yk2we)
                                                                                    ((case-lambda
                                                                                       ((g$t$8606$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8607$1yk2we)
                                                                                            (if g$ls/false$8607$1yk2we
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8608$1yk2we)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7543$1yk2we
                                                                                                       'quote)
                                                                                                     g$p$8608$1yk2we)))
                                                                                                g$ls/false$8607$1yk2we)
                                                                                              (g$syntax-violation$7711$1yk2we
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8606$1yk2we))))
                                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                                           g$t$8606$1yk2we
                                                                                           'any))))
                                                                                     g$t$8602$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$8602$1yk2we
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8598$1yk2we))))
                                                                     (g$syntax-dispatch$7600$1yk2we
                                                                       g$t$8598$1yk2we
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8595$1yk2we))))
                                                           (g$syntax-dispatch$7600$1yk2we
                                                             g$t$8595$1yk2we
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8591$1yk2we))))
                                                 (g$syntax-dispatch$7600$1yk2we
                                                   g$t$8591$1yk2we
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8587$1yk2we))))
                                       (g$syntax-dispatch$7600$1yk2we
                                         g$t$8587$1yk2we
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8584$1yk2we))))
                             (g$syntax-dispatch$7600$1yk2we
                               g$t$8584$1yk2we
                               '(#(scheme-id unquote) any)))))
                         g$p$8582$1yk2we)))))
           (case-lambda
             ((g$x$8578$1yk2we)
              ((case-lambda
                 ((g$t$8579$1yk2we)
                  ((case-lambda
                     ((g$ls/false$8580$1yk2we)
                      (if g$ls/false$8580$1yk2we
                        (apply
                          (case-lambda
                            ((g$e$8581$1yk2we)
                             (g$quasi$8577$1yk2we g$e$8581$1yk2we '0)))
                          g$ls/false$8580$1yk2we)
                        (g$syntax-violation$7711$1yk2we
                          '#f
                          '"invalid syntax"
                          g$t$8579$1yk2we))))
                   (g$syntax-dispatch$7600$1yk2we g$t$8579$1yk2we '(_ any)))))
               g$x$8578$1yk2we))))))))
   (g$quasisyntax-macro$7592$1yk2we
     g$quasisyntax-macro$11052$1yk2we
     ((case-lambda
        (()
         (letrec* ((g$quasi$8688$1yk2we
                     (case-lambda
                       ((g$p$8702$1yk2we g$lev$8703$1yk2we)
                        ((case-lambda
                           ((g$t$8704$1yk2we)
                            ((case-lambda
                               ((g$ls/false$8705$1yk2we)
                                (if g$ls/false$8705$1yk2we
                                  (apply
                                    (case-lambda
                                      ((g$p$8706$1yk2we)
                                       (if (= g$lev$8703$1yk2we '0)
                                         ((case-lambda
                                            ((g$g$8707$1yk2we)
                                             (values
                                               (list g$g$8707$1yk2we)
                                               (list g$p$8706$1yk2we)
                                               g$g$8707$1yk2we)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8688$1yk2we
                                                g$p$8706$1yk2we
                                                (- g$lev$8703$1yk2we '1))))
                                           (case-lambda
                                             ((g$lhs*$8711$1yk2we
                                                g$rhs*$8712$1yk2we
                                                g$p$8713$1yk2we)
                                              ((case-lambda
                                                 ((g$p$8714$1yk2we
                                                    g$rhs*$8715$1yk2we
                                                    g$lhs*$8716$1yk2we)
                                                  (values
                                                    g$lhs*$8716$1yk2we
                                                    g$rhs*$8715$1yk2we
                                                    (list
                                                      'unsyntax
                                                      g$p$8714$1yk2we))))
                                               g$p$8713$1yk2we
                                               g$rhs*$8712$1yk2we
                                               g$lhs*$8711$1yk2we)))))))
                                    g$ls/false$8705$1yk2we)
                                  ((case-lambda
                                     ((g$t$8717$1yk2we)
                                      ((case-lambda
                                         ((g$ls/false$8718$1yk2we)
                                          (if (if g$ls/false$8718$1yk2we
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8703$1yk2we
                                                          '0)))
                                                    g$ls/false$8718$1yk2we))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7711$1yk2we
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8702$1yk2we)))
                                              g$ls/false$8718$1yk2we)
                                            ((case-lambda
                                               ((g$t$8719$1yk2we)
                                                ((case-lambda
                                                   ((g$ls/false$8720$1yk2we)
                                                    (if g$ls/false$8720$1yk2we
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8721$1yk2we
                                                             g$q$8722$1yk2we)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8688$1yk2we
                                                                  g$q$8722$1yk2we
                                                                  g$lev$8703$1yk2we)))
                                                             (case-lambda
                                                               ((g$lhs*$8726$1yk2we
                                                                  g$rhs*$8727$1yk2we
                                                                  g$q$8728$1yk2we)
                                                                ((case-lambda
                                                                   ((g$q$8729$1yk2we
                                                                      g$rhs*$8730$1yk2we
                                                                      g$lhs*$8731$1yk2we)
                                                                    (if (= g$lev$8703$1yk2we
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8732$1yk2we)
                                                                          (values
                                                                            (append
                                                                              g$g*$8732$1yk2we
                                                                              g$lhs*$8731$1yk2we)
                                                                            (append
                                                                              g$p*$8721$1yk2we
                                                                              g$rhs*$8730$1yk2we)
                                                                            (append
                                                                              g$g*$8732$1yk2we
                                                                              g$q$8729$1yk2we))))
                                                                       (map (case-lambda
                                                                              ((g$x$8733$1yk2we)
                                                                               (gensym)))
                                                                            g$p*$8721$1yk2we))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8688$1yk2we
                                                                             g$p*$8721$1yk2we
                                                                             (- g$lev$8703$1yk2we
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8737$1yk2we
                                                                             g$rhs2*$8738$1yk2we
                                                                             g$p*$8739$1yk2we)
                                                                           ((case-lambda
                                                                              ((g$p*$8740$1yk2we
                                                                                 g$rhs2*$8741$1yk2we
                                                                                 g$lhs2*$8742$1yk2we)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8742$1yk2we
                                                                                   g$lhs*$8731$1yk2we)
                                                                                 (append
                                                                                   g$rhs2*$8741$1yk2we
                                                                                   g$rhs*$8730$1yk2we)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8740$1yk2we)
                                                                                   g$q$8729$1yk2we))))
                                                                            g$p*$8739$1yk2we
                                                                            g$rhs2*$8738$1yk2we
                                                                            g$lhs2*$8737$1yk2we)))))))
                                                                 g$q$8728$1yk2we
                                                                 g$rhs*$8727$1yk2we
                                                                 g$lhs*$8726$1yk2we))))))
                                                        g$ls/false$8720$1yk2we)
                                                      ((case-lambda
                                                         ((g$t$8743$1yk2we)
                                                          ((case-lambda
                                                             ((g$ls/false$8744$1yk2we)
                                                              (if g$ls/false$8744$1yk2we
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8745$1yk2we
                                                                       g$q$8746$1yk2we)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8688$1yk2we
                                                                            g$q$8746$1yk2we
                                                                            g$lev$8703$1yk2we)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8750$1yk2we
                                                                            g$rhs*$8751$1yk2we
                                                                            g$q$8752$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$q$8753$1yk2we
                                                                                g$rhs*$8754$1yk2we
                                                                                g$lhs*$8755$1yk2we)
                                                                              (if (= g$lev$8703$1yk2we
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8756$1yk2we)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8757$1yk2we)
                                                                                                (cons
                                                                                                  g$g$8757$1yk2we
                                                                                                  '(...))))
                                                                                             g$g*$8756$1yk2we)
                                                                                        g$lhs*$8755$1yk2we)
                                                                                      (append
                                                                                        g$p*$8745$1yk2we
                                                                                        g$rhs*$8754$1yk2we)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8758$1yk2we)
                                                                                                  (cons
                                                                                                    g$g$8758$1yk2we
                                                                                                    '(...))))
                                                                                               g$g*$8756$1yk2we))
                                                                                        g$q$8753$1yk2we))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8759$1yk2we)
                                                                                         (gensym)))
                                                                                      g$p*$8745$1yk2we))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8688$1yk2we
                                                                                       g$p*$8745$1yk2we
                                                                                       (- g$lev$8703$1yk2we
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8763$1yk2we
                                                                                       g$rhs2*$8764$1yk2we
                                                                                       g$p*$8765$1yk2we)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8766$1yk2we
                                                                                           g$rhs2*$8767$1yk2we
                                                                                           g$lhs2*$8768$1yk2we)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8768$1yk2we
                                                                                             g$lhs*$8755$1yk2we)
                                                                                           (append
                                                                                             g$rhs2*$8767$1yk2we
                                                                                             g$rhs*$8754$1yk2we)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8766$1yk2we)
                                                                                             g$q$8753$1yk2we))))
                                                                                      g$p*$8765$1yk2we
                                                                                      g$rhs2*$8764$1yk2we
                                                                                      g$lhs2*$8763$1yk2we)))))))
                                                                           g$q$8752$1yk2we
                                                                           g$rhs*$8751$1yk2we
                                                                           g$lhs*$8750$1yk2we))))))
                                                                  g$ls/false$8744$1yk2we)
                                                                ((case-lambda
                                                                   ((g$t$8769$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8770$1yk2we)
                                                                        (if (if g$ls/false$8770$1yk2we
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8703$1yk2we
                                                                                        '0)))
                                                                                  g$ls/false$8770$1yk2we))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7711$1yk2we
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8702$1yk2we)))
                                                                            g$ls/false$8770$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$8771$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8772$1yk2we)
                                                                                  (if g$ls/false$8772$1yk2we
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8773$1yk2we)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8688$1yk2we
                                                                                                g$p$8773$1yk2we
                                                                                                (+ g$lev$8703$1yk2we
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8777$1yk2we
                                                                                                g$rhs*$8778$1yk2we
                                                                                                g$p$8779$1yk2we)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8780$1yk2we
                                                                                                    g$rhs*$8781$1yk2we
                                                                                                    g$lhs*$8782$1yk2we)
                                                                                                  (values
                                                                                                    g$lhs*$8782$1yk2we
                                                                                                    g$rhs*$8781$1yk2we
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8780$1yk2we))))
                                                                                               g$p$8779$1yk2we
                                                                                               g$rhs*$8778$1yk2we
                                                                                               g$lhs*$8777$1yk2we))))))
                                                                                      g$ls/false$8772$1yk2we)
                                                                                    ((case-lambda
                                                                                       ((g$t$8783$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8784$1yk2we)
                                                                                            (if g$ls/false$8784$1yk2we
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8785$1yk2we
                                                                                                     g$q$8786$1yk2we)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8688$1yk2we
                                                                                                          g$p$8785$1yk2we
                                                                                                          g$lev$8703$1yk2we)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8793$1yk2we
                                                                                                          g$rhs*$8794$1yk2we
                                                                                                          g$p$8795$1yk2we)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8688$1yk2we
                                                                                                               g$q$8786$1yk2we
                                                                                                               g$lev$8703$1yk2we)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8796$1yk2we
                                                                                                               g$rhs2*$8797$1yk2we
                                                                                                               g$q$8798$1yk2we)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8799$1yk2we
                                                                                                                   g$rhs2*$8800$1yk2we
                                                                                                                   g$lhs2*$8801$1yk2we
                                                                                                                   g$p$8802$1yk2we
                                                                                                                   g$rhs*$8803$1yk2we
                                                                                                                   g$lhs*$8804$1yk2we)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8801$1yk2we
                                                                                                                     g$lhs*$8804$1yk2we)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8800$1yk2we
                                                                                                                     g$rhs*$8803$1yk2we)
                                                                                                                   (cons
                                                                                                                     g$p$8802$1yk2we
                                                                                                                     g$q$8799$1yk2we))))
                                                                                                              g$q$8798$1yk2we
                                                                                                              g$rhs2*$8797$1yk2we
                                                                                                              g$lhs2*$8796$1yk2we
                                                                                                              g$p$8795$1yk2we
                                                                                                              g$rhs*$8794$1yk2we
                                                                                                              g$lhs*$8793$1yk2we)))))))))
                                                                                                g$ls/false$8784$1yk2we)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8805$1yk2we)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8806$1yk2we)
                                                                                                      (if g$ls/false$8806$1yk2we
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8807$1yk2we)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8688$1yk2we
                                                                                                                    g$x*$8807$1yk2we
                                                                                                                    g$lev$8703$1yk2we)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8811$1yk2we
                                                                                                                    g$rhs*$8812$1yk2we
                                                                                                                    g$x*$8813$1yk2we)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8814$1yk2we
                                                                                                                        g$rhs*$8815$1yk2we
                                                                                                                        g$lhs*$8816$1yk2we)
                                                                                                                      (values
                                                                                                                        g$lhs*$8816$1yk2we
                                                                                                                        g$rhs*$8815$1yk2we
                                                                                                                        (list->vector
                                                                                                                          g$x*$8814$1yk2we))))
                                                                                                                   g$x*$8813$1yk2we
                                                                                                                   g$rhs*$8812$1yk2we
                                                                                                                   g$lhs*$8811$1yk2we))))))
                                                                                                          g$ls/false$8806$1yk2we)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8817$1yk2we)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8818$1yk2we)
                                                                                                                (if g$ls/false$8818$1yk2we
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8702$1yk2we)))
                                                                                                                    g$ls/false$8818$1yk2we)
                                                                                                                  (g$syntax-violation$7711$1yk2we
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8817$1yk2we))))
                                                                                                             (g$syntax-dispatch$7600$1yk2we
                                                                                                               g$t$8817$1yk2we
                                                                                                               '_))))
                                                                                                         g$t$8805$1yk2we))))
                                                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                                                     g$t$8805$1yk2we
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8783$1yk2we))))
                                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                                           g$t$8783$1yk2we
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8771$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$8771$1yk2we
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8769$1yk2we))))
                                                                     (g$syntax-dispatch$7600$1yk2we
                                                                       g$t$8769$1yk2we
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8743$1yk2we))))
                                                           (g$syntax-dispatch$7600$1yk2we
                                                             g$t$8743$1yk2we
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8719$1yk2we))))
                                                 (g$syntax-dispatch$7600$1yk2we
                                                   g$t$8719$1yk2we
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8717$1yk2we))))
                                       (g$syntax-dispatch$7600$1yk2we
                                         g$t$8717$1yk2we
                                         '#(scheme-id unsyntax)))))
                                   g$t$8704$1yk2we))))
                             (g$syntax-dispatch$7600$1yk2we
                               g$t$8704$1yk2we
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8702$1yk2we)))))
           (case-lambda
             ((g$x$8689$1yk2we)
              ((case-lambda
                 ((g$t$8690$1yk2we)
                  ((case-lambda
                     ((g$ls/false$8691$1yk2we)
                      (if g$ls/false$8691$1yk2we
                        (apply
                          (case-lambda
                            ((g$e$8692$1yk2we)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8688$1yk2we g$e$8692$1yk2we '0)))
                               (case-lambda
                                 ((g$lhs*$8696$1yk2we
                                    g$rhs*$8697$1yk2we
                                    g$v$8698$1yk2we)
                                  ((case-lambda
                                     ((g$v$8699$1yk2we
                                        g$rhs*$8700$1yk2we
                                        g$lhs*$8701$1yk2we)
                                      (g$bless$7563$1yk2we
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8700$1yk2we)
                                          '()
                                          (list
                                            g$lhs*$8701$1yk2we
                                            (list 'syntax g$v$8699$1yk2we))))))
                                   g$v$8698$1yk2we
                                   g$rhs*$8697$1yk2we
                                   g$lhs*$8696$1yk2we))))))
                          g$ls/false$8691$1yk2we)
                        (g$syntax-violation$7711$1yk2we
                          '#f
                          '"invalid syntax"
                          g$t$8690$1yk2we))))
                   (g$syntax-dispatch$7600$1yk2we g$t$8690$1yk2we '(_ any)))))
               g$x$8689$1yk2we))))))))
   (g$define-struct-macro$7593$1yk2we
     g$define-struct-macro$11053$1yk2we
     (case-lambda
       ((g$stx$8819$1yk2we)
        (g$syntax-violation$7711$1yk2we
          '#f
          '"define-struct not supported"
          g$stx$8819$1yk2we))))
   (g$define-record-type-macro$7594$1yk2we
     g$define-record-type-macro$11054$1yk2we
     (case-lambda
       ((g$x$8820$1yk2we)
        (letrec* ((g$id$8821$1yk2we
                    (case-lambda
                      ((g$ctxt$9073$1yk2we . g$str*$9074$1yk2we)
                       (g$datum->syntax$7713$1yk2we
                         g$ctxt$9073$1yk2we
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9075$1yk2we)
                                     (if (symbol? g$x$9075$1yk2we)
                                       (symbol->string g$x$9075$1yk2we)
                                       (if (string? g$x$9075$1yk2we)
                                         g$x$9075$1yk2we
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9074$1yk2we)))))))
                  (g$get-record-name$8822$1yk2we
                    (case-lambda
                      ((g$spec$9064$1yk2we)
                       ((case-lambda
                          ((g$t$9065$1yk2we)
                           ((case-lambda
                              ((g$ls/false$9066$1yk2we)
                               (if g$ls/false$9066$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$foo$9067$1yk2we
                                        g$make-foo$9068$1yk2we
                                        g$foo?$9069$1yk2we)
                                      g$foo$9067$1yk2we))
                                   g$ls/false$9066$1yk2we)
                                 ((case-lambda
                                    ((g$t$9070$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$9071$1yk2we)
                                         (if g$ls/false$9071$1yk2we
                                           (apply
                                             (case-lambda
                                               ((g$foo$9072$1yk2we)
                                                g$foo$9072$1yk2we))
                                             g$ls/false$9071$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$9070$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$9070$1yk2we
                                        'any))))
                                  g$t$9065$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$9065$1yk2we
                              '(any any any)))))
                        g$spec$9064$1yk2we))))
                  (g$get-record-constructor-name$8823$1yk2we
                    (case-lambda
                      ((g$spec$9054$1yk2we)
                       ((case-lambda
                          ((g$t$9055$1yk2we)
                           ((case-lambda
                              ((g$ls/false$9056$1yk2we)
                               (if g$ls/false$9056$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$foo$9057$1yk2we
                                        g$make-foo$9058$1yk2we
                                        g$foo?$9059$1yk2we)
                                      g$make-foo$9058$1yk2we))
                                   g$ls/false$9056$1yk2we)
                                 ((case-lambda
                                    ((g$t$9060$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$9061$1yk2we)
                                         (if (if g$ls/false$9061$1yk2we
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9062$1yk2we)
                                                      (g$id?$7322$1yk2we
                                                        g$foo$9062$1yk2we)))
                                                   g$ls/false$9061$1yk2we))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9063$1yk2we)
                                                (g$id$8821$1yk2we
                                                  g$foo$9063$1yk2we
                                                  '"make-"
                                                  (g$stx->datum$7333$1yk2we
                                                    g$foo$9063$1yk2we))))
                                             g$ls/false$9061$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$9060$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$9060$1yk2we
                                        'any))))
                                  g$t$9055$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$9055$1yk2we
                              '(any any any)))))
                        g$spec$9054$1yk2we))))
                  (g$get-record-predicate-name$8824$1yk2we
                    (case-lambda
                      ((g$spec$9044$1yk2we)
                       ((case-lambda
                          ((g$t$9045$1yk2we)
                           ((case-lambda
                              ((g$ls/false$9046$1yk2we)
                               (if g$ls/false$9046$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$foo$9047$1yk2we
                                        g$make-foo$9048$1yk2we
                                        g$foo?$9049$1yk2we)
                                      g$foo?$9049$1yk2we))
                                   g$ls/false$9046$1yk2we)
                                 ((case-lambda
                                    ((g$t$9050$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$9051$1yk2we)
                                         (if (if g$ls/false$9051$1yk2we
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9052$1yk2we)
                                                      (g$id?$7322$1yk2we
                                                        g$foo$9052$1yk2we)))
                                                   g$ls/false$9051$1yk2we))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9053$1yk2we)
                                                (g$id$8821$1yk2we
                                                  g$foo$9053$1yk2we
                                                  (g$stx->datum$7333$1yk2we
                                                    g$foo$9053$1yk2we)
                                                  '"?")))
                                             g$ls/false$9051$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$9050$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$9050$1yk2we
                                        'any))))
                                  g$t$9045$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$9045$1yk2we
                              '(any any any)))))
                        g$spec$9044$1yk2we))))
                  (g$get-clause$8825$1yk2we
                    (case-lambda
                      ((g$id$9035$1yk2we g$ls$9036$1yk2we)
                       ((case-lambda
                          ((g$t$9037$1yk2we)
                           ((case-lambda
                              ((g$ls/false$9038$1yk2we)
                               (if g$ls/false$9038$1yk2we
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9038$1yk2we)
                                 ((case-lambda
                                    ((g$t$9039$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$9040$1yk2we)
                                         (if g$ls/false$9040$1yk2we
                                           (apply
                                             (case-lambda
                                               ((g$x$9041$1yk2we
                                                  g$rest$9042$1yk2we
                                                  g$ls$9043$1yk2we)
                                                (if (g$free-id=?$7326$1yk2we
                                                      (g$bless$7563$1yk2we
                                                        g$id$9035$1yk2we)
                                                      g$x$9041$1yk2we)
                                                  (cons
                                                    g$x$9041$1yk2we
                                                    g$rest$9042$1yk2we)
                                                  (g$get-clause$8825$1yk2we
                                                    g$id$9035$1yk2we
                                                    g$ls$9043$1yk2we))))
                                             g$ls/false$9040$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$9039$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$9039$1yk2we
                                        '((any . any) . any)))))
                                  g$t$9037$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$9037$1yk2we
                              '()))))
                        g$ls$9036$1yk2we))))
                  (g$foo-rtd-code$8826$1yk2we
                    (case-lambda
                      ((g$name$8994$1yk2we
                         g$clause*$8995$1yk2we
                         g$parent-rtd-code$8996$1yk2we)
                       (letrec* ((g$convert-field-spec*$8997$1yk2we
                                   (case-lambda
                                     ((g$ls$9022$1yk2we)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9023$1yk2we)
                                                ((case-lambda
                                                   ((g$t$9024$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$9025$1yk2we)
                                                        (if g$ls/false$9025$1yk2we
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9026$1yk2we
                                                                 g$rest$9027$1yk2we)
                                                               (list
                                                                 'mutable
                                                                 g$name$9026$1yk2we)))
                                                            g$ls/false$9025$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$9028$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$9029$1yk2we)
                                                                  (if g$ls/false$9029$1yk2we
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9030$1yk2we
                                                                           g$rest$9031$1yk2we)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9030$1yk2we)))
                                                                      g$ls/false$9029$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$t$9032$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9033$1yk2we)
                                                                            (if g$ls/false$9033$1yk2we
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9034$1yk2we)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9034$1yk2we)))
                                                                                g$ls/false$9033$1yk2we)
                                                                              (g$syntax-violation$7711$1yk2we
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9032$1yk2we))))
                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                           g$t$9032$1yk2we
                                                                           'any))))
                                                                     g$t$9028$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$9028$1yk2we
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9024$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$9024$1yk2we
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9023$1yk2we)))
                                             g$ls$9022$1yk2we))))))
                         ((case-lambda
                            ((g$uid-code$8998$1yk2we
                               g$sealed?$8999$1yk2we
                               g$opaque?$9000$1yk2we
                               g$fields$9001$1yk2we)
                             (g$bless$7563$1yk2we
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8994$1yk2we)
                                 g$parent-rtd-code$8996$1yk2we
                                 g$uid-code$8998$1yk2we
                                 g$sealed?$8999$1yk2we
                                 g$opaque?$9000$1yk2we
                                 g$fields$9001$1yk2we))))
                          ((case-lambda
                             ((g$t$9002$1yk2we)
                              ((case-lambda
                                 ((g$ls/false$9003$1yk2we)
                                  (if g$ls/false$9003$1yk2we
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9003$1yk2we)
                                    ((case-lambda
                                       ((g$t$9004$1yk2we)
                                        ((case-lambda
                                           ((g$ls/false$9005$1yk2we)
                                            (if g$ls/false$9005$1yk2we
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9006$1yk2we)
                                                   (list
                                                     'quote
                                                     g$uid$9006$1yk2we)))
                                                g$ls/false$9005$1yk2we)
                                              ((case-lambda
                                                 ((g$t$9007$1yk2we)
                                                  ((case-lambda
                                                     ((g$ls/false$9008$1yk2we)
                                                      (if g$ls/false$9008$1yk2we
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9008$1yk2we)
                                                        (g$syntax-violation$7711$1yk2we
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9007$1yk2we))))
                                                   (g$syntax-dispatch$7600$1yk2we
                                                     g$t$9007$1yk2we
                                                     '_))))
                                               g$t$9004$1yk2we))))
                                         (g$syntax-dispatch$7600$1yk2we
                                           g$t$9004$1yk2we
                                           '(_ any)))))
                                     g$t$9002$1yk2we))))
                               (g$syntax-dispatch$7600$1yk2we
                                 g$t$9002$1yk2we
                                 '(_)))))
                           (g$get-clause$8825$1yk2we
                             'nongenerative
                             g$clause*$8995$1yk2we))
                          ((case-lambda
                             ((g$t$9009$1yk2we)
                              ((case-lambda
                                 ((g$ls/false$9010$1yk2we)
                                  (if g$ls/false$9010$1yk2we
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9010$1yk2we)
                                    ((case-lambda
                                       ((g$t$9011$1yk2we)
                                        ((case-lambda
                                           ((g$ls/false$9012$1yk2we)
                                            (if g$ls/false$9012$1yk2we
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9012$1yk2we)
                                              (g$syntax-violation$7711$1yk2we
                                                '#f
                                                '"invalid syntax"
                                                g$t$9011$1yk2we))))
                                         (g$syntax-dispatch$7600$1yk2we
                                           g$t$9011$1yk2we
                                           '_))))
                                     g$t$9009$1yk2we))))
                               (g$syntax-dispatch$7600$1yk2we
                                 g$t$9009$1yk2we
                                 '(_ #(atom #t))))))
                           (g$get-clause$8825$1yk2we
                             'sealed
                             g$clause*$8995$1yk2we))
                          ((case-lambda
                             ((g$t$9013$1yk2we)
                              ((case-lambda
                                 ((g$ls/false$9014$1yk2we)
                                  (if g$ls/false$9014$1yk2we
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9014$1yk2we)
                                    ((case-lambda
                                       ((g$t$9015$1yk2we)
                                        ((case-lambda
                                           ((g$ls/false$9016$1yk2we)
                                            (if g$ls/false$9016$1yk2we
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9016$1yk2we)
                                              (g$syntax-violation$7711$1yk2we
                                                '#f
                                                '"invalid syntax"
                                                g$t$9015$1yk2we))))
                                         (g$syntax-dispatch$7600$1yk2we
                                           g$t$9015$1yk2we
                                           '_))))
                                     g$t$9013$1yk2we))))
                               (g$syntax-dispatch$7600$1yk2we
                                 g$t$9013$1yk2we
                                 '(_ #(atom #t))))))
                           (g$get-clause$8825$1yk2we
                             'opaque
                             g$clause*$8995$1yk2we))
                          ((case-lambda
                             ((g$t$9017$1yk2we)
                              ((case-lambda
                                 ((g$ls/false$9018$1yk2we)
                                  (if g$ls/false$9018$1yk2we
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9019$1yk2we)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8997$1yk2we
                                             g$field-spec*$9019$1yk2we))))
                                      g$ls/false$9018$1yk2we)
                                    ((case-lambda
                                       ((g$t$9020$1yk2we)
                                        ((case-lambda
                                           ((g$ls/false$9021$1yk2we)
                                            (if g$ls/false$9021$1yk2we
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9021$1yk2we)
                                              (g$syntax-violation$7711$1yk2we
                                                '#f
                                                '"invalid syntax"
                                                g$t$9020$1yk2we))))
                                         (g$syntax-dispatch$7600$1yk2we
                                           g$t$9020$1yk2we
                                           '_))))
                                     g$t$9017$1yk2we))))
                               (g$syntax-dispatch$7600$1yk2we
                                 g$t$9017$1yk2we
                                 '(_ . each-any)))))
                           (g$get-clause$8825$1yk2we
                             'fields
                             g$clause*$8995$1yk2we)))))))
                  (g$parent-rtd-code$8827$1yk2we
                    (case-lambda
                      ((g$clause*$8982$1yk2we)
                       ((case-lambda
                          ((g$t$8983$1yk2we)
                           ((case-lambda
                              ((g$ls/false$8984$1yk2we)
                               (if g$ls/false$8984$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$name$8985$1yk2we)
                                      (list
                                        'record-type-descriptor
                                        g$name$8985$1yk2we)))
                                   g$ls/false$8984$1yk2we)
                                 ((case-lambda
                                    ((g$t$8986$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$8987$1yk2we)
                                         (if g$ls/false$8987$1yk2we
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8988$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$8989$1yk2we)
                                                        (if g$ls/false$8989$1yk2we
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8990$1yk2we
                                                                 g$rcd$8991$1yk2we)
                                                               g$rtd$8990$1yk2we))
                                                            g$ls/false$8989$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$8992$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$8993$1yk2we)
                                                                  (if g$ls/false$8993$1yk2we
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8993$1yk2we)
                                                                    (g$syntax-violation$7711$1yk2we
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8992$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$8992$1yk2we
                                                                 '#(atom #f)))))
                                                           g$t$8988$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$8988$1yk2we
                                                       '(_ any any)))))
                                                 (g$get-clause$8825$1yk2we
                                                   'parent-rtd
                                                   g$clause*$8982$1yk2we))))
                                             g$ls/false$8987$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$8986$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$8986$1yk2we
                                        '#(atom #f)))))
                                  g$t$8983$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$8983$1yk2we
                              '(_ any)))))
                        (g$get-clause$8825$1yk2we
                          'parent
                          g$clause*$8982$1yk2we)))))
                  (g$parent-rcd-code$8828$1yk2we
                    (case-lambda
                      ((g$clause*$8970$1yk2we)
                       ((case-lambda
                          ((g$t$8971$1yk2we)
                           ((case-lambda
                              ((g$ls/false$8972$1yk2we)
                               (if g$ls/false$8972$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$name$8973$1yk2we)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8973$1yk2we)))
                                   g$ls/false$8972$1yk2we)
                                 ((case-lambda
                                    ((g$t$8974$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$8975$1yk2we)
                                         (if g$ls/false$8975$1yk2we
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8976$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$8977$1yk2we)
                                                        (if g$ls/false$8977$1yk2we
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8978$1yk2we
                                                                 g$rcd$8979$1yk2we)
                                                               g$rcd$8979$1yk2we))
                                                            g$ls/false$8977$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$8980$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$8981$1yk2we)
                                                                  (if g$ls/false$8981$1yk2we
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8981$1yk2we)
                                                                    (g$syntax-violation$7711$1yk2we
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8980$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$8980$1yk2we
                                                                 '#(atom #f)))))
                                                           g$t$8976$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$8976$1yk2we
                                                       '(_ any any)))))
                                                 (g$get-clause$8825$1yk2we
                                                   'parent-rtd
                                                   g$clause*$8970$1yk2we))))
                                             g$ls/false$8975$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$8974$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$8974$1yk2we
                                        '#(atom #f)))))
                                  g$t$8971$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$8971$1yk2we
                              '(_ any)))))
                        (g$get-clause$8825$1yk2we
                          'parent
                          g$clause*$8970$1yk2we)))))
                  (g$foo-rcd-code$8829$1yk2we
                    (case-lambda
                      ((g$clause*$8966$1yk2we
                         g$foo-rtd$8967$1yk2we
                         g$protocol$8968$1yk2we
                         g$parent-rcd-code$8969$1yk2we)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8967$1yk2we
                         g$parent-rcd-code$8969$1yk2we
                         g$protocol$8968$1yk2we))))
                  (g$get-protocol-code$8830$1yk2we
                    (case-lambda
                      ((g$clause*$8960$1yk2we)
                       ((case-lambda
                          ((g$t$8961$1yk2we)
                           ((case-lambda
                              ((g$ls/false$8962$1yk2we)
                               (if g$ls/false$8962$1yk2we
                                 (apply
                                   (case-lambda
                                     ((g$expr$8963$1yk2we) g$expr$8963$1yk2we))
                                   g$ls/false$8962$1yk2we)
                                 ((case-lambda
                                    ((g$t$8964$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$8965$1yk2we)
                                         (if g$ls/false$8965$1yk2we
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8965$1yk2we)
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$t$8964$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$8964$1yk2we
                                        '_))))
                                  g$t$8961$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$8961$1yk2we
                              '(_ any)))))
                        (g$get-clause$8825$1yk2we
                          'protocol
                          g$clause*$8960$1yk2we)))))
                  (g$get-fields$8831$1yk2we
                    (case-lambda
                      ((g$clause*$8951$1yk2we)
                       ((case-lambda
                          ((g$t$8952$1yk2we)
                           ((case-lambda
                              ((g$ls/false$8953$1yk2we)
                               (if g$ls/false$8953$1yk2we
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8953$1yk2we)
                                 ((case-lambda
                                    ((g$t$8954$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$8955$1yk2we)
                                         (if g$ls/false$8955$1yk2we
                                           (apply
                                             (case-lambda
                                               ((g$f*$8956$1yk2we)
                                                g$f*$8956$1yk2we))
                                             g$ls/false$8955$1yk2we)
                                           ((case-lambda
                                              ((g$t$8957$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$8958$1yk2we)
                                                   (if g$ls/false$8958$1yk2we
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8959$1yk2we)
                                                          (g$get-fields$8831$1yk2we
                                                            g$rest$8959$1yk2we)))
                                                       g$ls/false$8958$1yk2we)
                                                     (g$syntax-violation$7711$1yk2we
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8957$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$8957$1yk2we
                                                  '(_ . any)))))
                                            g$t$8954$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$8954$1yk2we
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8952$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$8952$1yk2we
                              '()))))
                        g$clause*$8951$1yk2we))))
                  (g$get-mutator-indices$8832$1yk2we
                    (case-lambda
                      ((g$fields$8939$1yk2we)
                       ((letrec ((g$f$8940$1yk2we
                                   (case-lambda
                                     ((g$fields$8941$1yk2we g$i$8942$1yk2we)
                                      ((case-lambda
                                         ((g$t$8943$1yk2we)
                                          ((case-lambda
                                             ((g$ls/false$8944$1yk2we)
                                              (if g$ls/false$8944$1yk2we
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8944$1yk2we)
                                                ((case-lambda
                                                   ((g$t$8945$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$8946$1yk2we)
                                                        (if g$ls/false$8946$1yk2we
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8947$1yk2we)
                                                               (cons
                                                                 g$i$8942$1yk2we
                                                                 (g$f$8940$1yk2we
                                                                   g$rest$8947$1yk2we
                                                                   (+ g$i$8942$1yk2we
                                                                      '1)))))
                                                            g$ls/false$8946$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$8948$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$8949$1yk2we)
                                                                  (if g$ls/false$8949$1yk2we
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8950$1yk2we)
                                                                         (g$f$8940$1yk2we
                                                                           g$rest$8950$1yk2we
                                                                           (+ g$i$8942$1yk2we
                                                                              '1))))
                                                                      g$ls/false$8949$1yk2we)
                                                                    (g$syntax-violation$7711$1yk2we
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8948$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$8948$1yk2we
                                                                 '(_ . any)))))
                                                           g$t$8945$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$8945$1yk2we
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8943$1yk2we))))
                                           (g$syntax-dispatch$7600$1yk2we
                                             g$t$8943$1yk2we
                                             '()))))
                                       g$fields$8941$1yk2we)))))
                          g$f$8940$1yk2we)
                        g$fields$8939$1yk2we
                        '0))))
                  (g$get-mutators$8833$1yk2we
                    (case-lambda
                      ((g$foo$8918$1yk2we g$fields$8919$1yk2we)
                       (letrec* ((g$gen-name$8920$1yk2we
                                   (case-lambda
                                     ((g$x$8938$1yk2we)
                                      (g$datum->syntax$7713$1yk2we
                                        g$foo$8918$1yk2we
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7714$1yk2we
                                                g$foo$8918$1yk2we))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7714$1yk2we
                                                g$x$8938$1yk2we))
                                            '"-set!")))))))
                         ((letrec ((g$f$8921$1yk2we
                                     (case-lambda
                                       ((g$fields$8922$1yk2we)
                                        ((case-lambda
                                           ((g$t$8923$1yk2we)
                                            ((case-lambda
                                               ((g$ls/false$8924$1yk2we)
                                                (if g$ls/false$8924$1yk2we
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8924$1yk2we)
                                                  ((case-lambda
                                                     ((g$t$8925$1yk2we)
                                                      ((case-lambda
                                                         ((g$ls/false$8926$1yk2we)
                                                          (if g$ls/false$8926$1yk2we
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8927$1yk2we
                                                                   g$accessor$8928$1yk2we
                                                                   g$mutator$8929$1yk2we
                                                                   g$rest$8930$1yk2we)
                                                                 (cons
                                                                   g$mutator$8929$1yk2we
                                                                   (g$f$8921$1yk2we
                                                                     g$rest$8930$1yk2we))))
                                                              g$ls/false$8926$1yk2we)
                                                            ((case-lambda
                                                               ((g$t$8931$1yk2we)
                                                                ((case-lambda
                                                                   ((g$ls/false$8932$1yk2we)
                                                                    (if g$ls/false$8932$1yk2we
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8933$1yk2we
                                                                             g$rest$8934$1yk2we)
                                                                           (cons
                                                                             (g$gen-name$8920$1yk2we
                                                                               g$name$8933$1yk2we)
                                                                             (g$f$8921$1yk2we
                                                                               g$rest$8934$1yk2we))))
                                                                        g$ls/false$8932$1yk2we)
                                                                      ((case-lambda
                                                                         ((g$t$8935$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8936$1yk2we)
                                                                              (if g$ls/false$8936$1yk2we
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8937$1yk2we)
                                                                                     (g$f$8921$1yk2we
                                                                                       g$rest$8937$1yk2we)))
                                                                                  g$ls/false$8936$1yk2we)
                                                                                (g$syntax-violation$7711$1yk2we
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8935$1yk2we))))
                                                                           (g$syntax-dispatch$7600$1yk2we
                                                                             g$t$8935$1yk2we
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8931$1yk2we))))
                                                                 (g$syntax-dispatch$7600$1yk2we
                                                                   g$t$8931$1yk2we
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8925$1yk2we))))
                                                       (g$syntax-dispatch$7600$1yk2we
                                                         g$t$8925$1yk2we
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8923$1yk2we))))
                                             (g$syntax-dispatch$7600$1yk2we
                                               g$t$8923$1yk2we
                                               '()))))
                                         g$fields$8922$1yk2we)))))
                            g$f$8921$1yk2we)
                          g$fields$8919$1yk2we)))))
                  (g$get-accessors$8834$1yk2we
                    (case-lambda
                      ((g$foo$8884$1yk2we g$fields$8885$1yk2we)
                       (letrec* ((g$gen-name$8886$1yk2we
                                   (case-lambda
                                     ((g$x$8917$1yk2we)
                                      (g$datum->syntax$7713$1yk2we
                                        g$foo$8884$1yk2we
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7714$1yk2we
                                                g$foo$8884$1yk2we))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7714$1yk2we
                                                g$x$8917$1yk2we)))))))))
                         (map (case-lambda
                                ((g$field$8887$1yk2we)
                                 ((case-lambda
                                    ((g$t$8888$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$8889$1yk2we)
                                         (if (if g$ls/false$8889$1yk2we
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8890$1yk2we
                                                        g$accessor$8891$1yk2we
                                                        g$mutator$8892$1yk2we)
                                                      (g$id?$7322$1yk2we
                                                        g$accessor$8891$1yk2we)))
                                                   g$ls/false$8889$1yk2we))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8893$1yk2we
                                                  g$accessor$8894$1yk2we
                                                  g$mutator$8895$1yk2we)
                                                g$accessor$8894$1yk2we))
                                             g$ls/false$8889$1yk2we)
                                           ((case-lambda
                                              ((g$t$8896$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$8897$1yk2we)
                                                   (if (if g$ls/false$8897$1yk2we
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8898$1yk2we
                                                                  g$accessor$8899$1yk2we)
                                                                (g$id?$7322$1yk2we
                                                                  g$accessor$8899$1yk2we)))
                                                             g$ls/false$8897$1yk2we))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8900$1yk2we
                                                            g$accessor$8901$1yk2we)
                                                          g$accessor$8901$1yk2we))
                                                       g$ls/false$8897$1yk2we)
                                                     ((case-lambda
                                                        ((g$t$8902$1yk2we)
                                                         ((case-lambda
                                                            ((g$ls/false$8903$1yk2we)
                                                             (if (if g$ls/false$8903$1yk2we
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8904$1yk2we)
                                                                          (g$id?$7322$1yk2we
                                                                            g$name$8904$1yk2we)))
                                                                       g$ls/false$8903$1yk2we))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8905$1yk2we)
                                                                    (g$gen-name$8886$1yk2we
                                                                      g$name$8905$1yk2we)))
                                                                 g$ls/false$8903$1yk2we)
                                                               ((case-lambda
                                                                  ((g$t$8906$1yk2we)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8907$1yk2we)
                                                                       (if (if g$ls/false$8907$1yk2we
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8908$1yk2we)
                                                                                    (g$id?$7322$1yk2we
                                                                                      g$name$8908$1yk2we)))
                                                                                 g$ls/false$8907$1yk2we))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8909$1yk2we)
                                                                              (g$gen-name$8886$1yk2we
                                                                                g$name$8909$1yk2we)))
                                                                           g$ls/false$8907$1yk2we)
                                                                         ((case-lambda
                                                                            ((g$t$8910$1yk2we)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8911$1yk2we)
                                                                                 (if (if g$ls/false$8911$1yk2we
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8912$1yk2we)
                                                                                              (g$id?$7322$1yk2we
                                                                                                g$name$8912$1yk2we)))
                                                                                           g$ls/false$8911$1yk2we))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8913$1yk2we)
                                                                                        (g$gen-name$8886$1yk2we
                                                                                          g$name$8913$1yk2we)))
                                                                                     g$ls/false$8911$1yk2we)
                                                                                   ((case-lambda
                                                                                      ((g$t$8914$1yk2we)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8915$1yk2we)
                                                                                           (if g$ls/false$8915$1yk2we
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8916$1yk2we)
                                                                                                  (g$syntax-violation$7711$1yk2we
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8887$1yk2we)))
                                                                                               g$ls/false$8915$1yk2we)
                                                                                             (g$syntax-violation$7711$1yk2we
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8914$1yk2we))))
                                                                                        (g$syntax-dispatch$7600$1yk2we
                                                                                          g$t$8914$1yk2we
                                                                                          'any))))
                                                                                    g$t$8910$1yk2we))))
                                                                              (g$syntax-dispatch$7600$1yk2we
                                                                                g$t$8910$1yk2we
                                                                                'any))))
                                                                          g$t$8906$1yk2we))))
                                                                    (g$syntax-dispatch$7600$1yk2we
                                                                      g$t$8906$1yk2we
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8902$1yk2we))))
                                                          (g$syntax-dispatch$7600$1yk2we
                                                            g$t$8902$1yk2we
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8896$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$8896$1yk2we
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8888$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$8888$1yk2we
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8887$1yk2we)))
                              g$fields$8885$1yk2we)))))
                  (g$enumerate$8835$1yk2we
                    (case-lambda
                      ((g$ls$8880$1yk2we)
                       ((letrec ((g$f$8881$1yk2we
                                   (case-lambda
                                     ((g$ls$8882$1yk2we g$i$8883$1yk2we)
                                      (if (null? g$ls$8882$1yk2we)
                                        '()
                                        (cons
                                          g$i$8883$1yk2we
                                          (g$f$8881$1yk2we
                                            (cdr g$ls$8882$1yk2we)
                                            (+ g$i$8883$1yk2we '1))))))))
                          g$f$8881$1yk2we)
                        g$ls$8880$1yk2we
                        '0))))
                  (g$do-define-record$8836$1yk2we
                    (case-lambda
                      ((g$namespec$8860$1yk2we g$clause*$8861$1yk2we)
                       ((case-lambda
                          ((g$foo$8862$1yk2we)
                           ((case-lambda
                              ((g$foo-rtd$8863$1yk2we)
                               ((case-lambda
                                  ((g$foo-rcd$8864$1yk2we)
                                   ((case-lambda
                                      ((g$protocol$8865$1yk2we)
                                       ((case-lambda
                                          ((g$make-foo$8866$1yk2we)
                                           ((case-lambda
                                              ((g$fields$8867$1yk2we)
                                               ((case-lambda
                                                  ((g$idx*$8868$1yk2we)
                                                   ((case-lambda
                                                      ((g$foo-x*$8869$1yk2we)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8870$1yk2we)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8871$1yk2we)
                                                               ((case-lambda
                                                                  ((g$foo?$8872$1yk2we)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8873$1yk2we)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8874$1yk2we)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8875$1yk2we)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7563$1yk2we
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8863$1yk2we
                                                                                           g$foo-rtd-code$8873$1yk2we)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8865$1yk2we
                                                                                             g$protocol-code$8875$1yk2we)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8864$1yk2we
                                                                                               g$foo-rcd-code$8874$1yk2we)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8862$1yk2we
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8863$1yk2we)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8864$1yk2we)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8872$1yk2we
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8863$1yk2we))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8866$1yk2we
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8864$1yk2we))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8876$1yk2we
                                                                                                               g$idx$8877$1yk2we)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8876$1yk2we
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8863$1yk2we
                                                                                                                 g$idx$8877$1yk2we))))
                                                                                                          g$foo-x*$8869$1yk2we
                                                                                                          g$idx*$8868$1yk2we)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8878$1yk2we
                                                                                                               g$idx$8879$1yk2we)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8878$1yk2we
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8863$1yk2we
                                                                                                                 g$idx$8879$1yk2we))))
                                                                                                          g$set-foo-x!*$8870$1yk2we
                                                                                                          g$set-foo-idx*$8871$1yk2we)))))))))))))))
                                                                            (g$get-protocol-code$8830$1yk2we
                                                                              g$clause*$8861$1yk2we))))
                                                                        (g$foo-rcd-code$8829$1yk2we
                                                                          g$clause*$8861$1yk2we
                                                                          g$foo-rtd$8863$1yk2we
                                                                          g$protocol$8865$1yk2we
                                                                          (g$parent-rcd-code$8828$1yk2we
                                                                            g$clause*$8861$1yk2we)))))
                                                                    (g$foo-rtd-code$8826$1yk2we
                                                                      g$foo$8862$1yk2we
                                                                      g$clause*$8861$1yk2we
                                                                      (g$parent-rtd-code$8827$1yk2we
                                                                        g$clause*$8861$1yk2we)))))
                                                                (g$get-record-predicate-name$8824$1yk2we
                                                                  g$namespec$8860$1yk2we))))
                                                            (g$get-mutator-indices$8832$1yk2we
                                                              g$fields$8867$1yk2we))))
                                                        (g$get-mutators$8833$1yk2we
                                                          g$foo$8862$1yk2we
                                                          g$fields$8867$1yk2we))))
                                                    (g$get-accessors$8834$1yk2we
                                                      g$foo$8862$1yk2we
                                                      g$fields$8867$1yk2we))))
                                                (g$enumerate$8835$1yk2we
                                                  g$fields$8867$1yk2we))))
                                            (g$get-fields$8831$1yk2we
                                              g$clause*$8861$1yk2we))))
                                        (g$get-record-constructor-name$8823$1yk2we
                                          g$namespec$8860$1yk2we))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8822$1yk2we
                          g$namespec$8860$1yk2we)))))
                  (g$verify-clauses$8837$1yk2we
                    (case-lambda
                      ((g$x$8842$1yk2we g$cls*$8843$1yk2we)
                       (letrec* ((g$valid-kwds$8844$1yk2we
                                   (map g$bless$7563$1yk2we
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8845$1yk2we
                                   (case-lambda
                                     ((g$x$8857$1yk2we g$ls$8858$1yk2we)
                                      (if (pair? g$ls$8858$1yk2we)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8859$1yk2we)
                                              (if g$t$8859$1yk2we
                                                g$t$8859$1yk2we
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8845$1yk2we
                                                    g$x$8857$1yk2we
                                                    (cdr g$ls$8858$1yk2we))))))
                                           (g$free-id=?$7326$1yk2we
                                             g$x$8857$1yk2we
                                             (car g$ls$8858$1yk2we))))
                                        '#f)))))
                         ((letrec ((g$f$8846$1yk2we
                                     (case-lambda
                                       ((g$cls*$8847$1yk2we g$seen*$8848$1yk2we)
                                        (if (not (null? g$cls*$8847$1yk2we))
                                          ((case-lambda
                                             ((g$t$8849$1yk2we)
                                              ((case-lambda
                                                 ((g$ls/false$8850$1yk2we)
                                                  (if g$ls/false$8850$1yk2we
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8851$1yk2we
                                                           g$rest$8852$1yk2we)
                                                         (if ((case-lambda
                                                                ((g$t$8853$1yk2we)
                                                                 (if g$t$8853$1yk2we
                                                                   g$t$8853$1yk2we
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8845$1yk2we
                                                                            g$kwd$8851$1yk2we
                                                                            g$valid-kwds$8844$1yk2we))))))
                                                              (not (g$id?$7322$1yk2we
                                                                     g$kwd$8851$1yk2we)))
                                                           (g$syntax-violation$7711$1yk2we
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8851$1yk2we)
                                                           (if (g$bound-id-member?$7329$1yk2we
                                                                 g$kwd$8851$1yk2we
                                                                 g$seen*$8848$1yk2we)
                                                             (g$syntax-violation$7711$1yk2we
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8842$1yk2we
                                                               g$kwd$8851$1yk2we)
                                                             (g$f$8846$1yk2we
                                                               (cdr g$cls*$8847$1yk2we)
                                                               (cons
                                                                 g$kwd$8851$1yk2we
                                                                 g$seen*$8848$1yk2we))))))
                                                      g$ls/false$8850$1yk2we)
                                                    ((case-lambda
                                                       ((g$t$8854$1yk2we)
                                                        ((case-lambda
                                                           ((g$ls/false$8855$1yk2we)
                                                            (if g$ls/false$8855$1yk2we
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8856$1yk2we)
                                                                   (g$syntax-violation$7711$1yk2we
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8856$1yk2we)))
                                                                g$ls/false$8855$1yk2we)
                                                              (g$syntax-violation$7711$1yk2we
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8854$1yk2we))))
                                                         (g$syntax-dispatch$7600$1yk2we
                                                           g$t$8854$1yk2we
                                                           'any))))
                                                     g$t$8849$1yk2we))))
                                               (g$syntax-dispatch$7600$1yk2we
                                                 g$t$8849$1yk2we
                                                 '(any . any)))))
                                           (car g$cls*$8847$1yk2we))
                                          (void))))))
                            g$f$8846$1yk2we)
                          g$cls*$8843$1yk2we
                          '()))))))
          ((case-lambda
             ((g$t$8838$1yk2we)
              ((case-lambda
                 ((g$ls/false$8839$1yk2we)
                  (if g$ls/false$8839$1yk2we
                    (apply
                      (case-lambda
                        ((g$namespec$8840$1yk2we g$clause*$8841$1yk2we)
                         (begin
                           (g$verify-clauses$8837$1yk2we
                             g$x$8820$1yk2we
                             g$clause*$8841$1yk2we)
                           (g$do-define-record$8836$1yk2we
                             g$namespec$8840$1yk2we
                             g$clause*$8841$1yk2we))))
                      g$ls/false$8839$1yk2we)
                    (g$syntax-violation$7711$1yk2we
                      '#f
                      '"invalid syntax"
                      g$t$8838$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$8838$1yk2we
                 '(_ any . each-any)))))
           g$x$8820$1yk2we)))))
   (g$define-condition-type-macro$7595$1yk2we
     g$define-condition-type-macro$11055$1yk2we
     (case-lambda
       ((g$x$9076$1yk2we)
        (letrec* ((g$mkname$9077$1yk2we
                    (case-lambda
                      ((g$name$9100$1yk2we g$suffix$9101$1yk2we)
                       (g$datum->syntax$7713$1yk2we
                         g$name$9100$1yk2we
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7714$1yk2we g$name$9100$1yk2we))
                             g$suffix$9101$1yk2we)))))))
          ((case-lambda
             ((g$t$9078$1yk2we)
              ((case-lambda
                 ((g$ls/false$9079$1yk2we)
                  (if (if g$ls/false$9079$1yk2we
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9080$1yk2we
                                 g$name$9081$1yk2we
                                 g$super$9082$1yk2we
                                 g$constructor$9083$1yk2we
                                 g$predicate$9084$1yk2we
                                 g$field*$9085$1yk2we
                                 g$accessor*$9086$1yk2we)
                               (if (g$id?$7322$1yk2we g$name$9081$1yk2we)
                                 (if (g$id?$7322$1yk2we g$super$9082$1yk2we)
                                   (if (g$id?$7322$1yk2we
                                         g$constructor$9083$1yk2we)
                                     (if (g$id?$7322$1yk2we
                                           g$predicate$9084$1yk2we)
                                       (if (g$for-all$5480$1yk2we
                                             g$id?$7322$1yk2we
                                             g$field*$9085$1yk2we)
                                         (begin
                                           '#f
                                           (g$for-all$5480$1yk2we
                                             g$id?$7322$1yk2we
                                             g$accessor*$9086$1yk2we))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9079$1yk2we))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9087$1yk2we
                           g$name$9088$1yk2we
                           g$super$9089$1yk2we
                           g$constructor$9090$1yk2we
                           g$predicate$9091$1yk2we
                           g$field*$9092$1yk2we
                           g$accessor*$9093$1yk2we)
                         ((case-lambda
                            ((g$aux-accessor*$9094$1yk2we)
                             (g$bless$7563$1yk2we
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9088$1yk2we
                                         g$constructor$9090$1yk2we
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9089$1yk2we)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9095$1yk2we
                                                       g$aux$9096$1yk2we)
                                                     (list
                                                       'immutable
                                                       g$field$9095$1yk2we
                                                       g$aux$9096$1yk2we)))
                                                  g$field*$9092$1yk2we
                                                  g$aux-accessor*$9094$1yk2we))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9091$1yk2we
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9088$1yk2we)))
                                     (map (case-lambda
                                            ((g$accessor$9097$1yk2we
                                               g$aux$9098$1yk2we)
                                             (list
                                               'define
                                               g$accessor$9097$1yk2we
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9088$1yk2we)
                                                 g$aux$9098$1yk2we))))
                                          g$accessor*$9093$1yk2we
                                          g$aux-accessor*$9094$1yk2we)))))))
                          (map (case-lambda ((g$x$9099$1yk2we) (gensym)))
                               g$accessor*$9093$1yk2we))))
                      g$ls/false$9079$1yk2we)
                    (g$syntax-violation$7711$1yk2we
                      '#f
                      '"invalid syntax"
                      g$t$9078$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$9078$1yk2we
                 '(any any any any any . #(each (any any)))))))
           g$x$9076$1yk2we)))))
   (g$incorrect-usage-macro$7596$1yk2we
     g$incorrect-usage-macro$11056$1yk2we
     (case-lambda
       ((g$e$9102$1yk2we)
        (g$syntax-violation$7711$1yk2we
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9102$1yk2we))))
   (g$parameterize-macro$7597$1yk2we
     g$parameterize-macro$11057$1yk2we
     (case-lambda
       ((g$e$9103$1yk2we)
        ((case-lambda
           ((g$t$9104$1yk2we)
            ((case-lambda
               ((g$ls/false$9105$1yk2we)
                (if g$ls/false$9105$1yk2we
                  (apply
                    (case-lambda
                      ((g$b$9106$1yk2we g$b*$9107$1yk2we)
                       (g$bless$7563$1yk2we
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$9106$1yk2we g$b*$9107$1yk2we))))))
                    g$ls/false$9105$1yk2we)
                  ((case-lambda
                     ((g$t$9108$1yk2we)
                      ((case-lambda
                         ((g$ls/false$9109$1yk2we)
                          (if g$ls/false$9109$1yk2we
                            (apply
                              (case-lambda
                                ((g$olhs*$9110$1yk2we
                                   g$orhs*$9111$1yk2we
                                   g$b$9112$1yk2we
                                   g$b*$9113$1yk2we)
                                 ((case-lambda
                                    ((g$lhs*$9114$1yk2we g$rhs*$9115$1yk2we)
                                     (g$bless$7563$1yk2we
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9114$1yk2we
                                             g$rhs*$9115$1yk2we)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9116$1yk2we
                                                               g$rhs$9117$1yk2we)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9116$1yk2we)))
                                                               (list
                                                                 g$lhs$9116$1yk2we
                                                                 g$rhs$9117$1yk2we)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9117$1yk2we
                                                                   '(t))))))
                                                          g$lhs*$9114$1yk2we
                                                          g$rhs*$9115$1yk2we)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9112$1yk2we
                                                         g$b*$9113$1yk2we)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9110$1yk2we
                                           g$orhs*$9111$1yk2we)))))
                                  (g$generate-temporaries$7701$1yk2we
                                    g$olhs*$9110$1yk2we)
                                  (g$generate-temporaries$7701$1yk2we
                                    g$orhs*$9111$1yk2we))))
                              g$ls/false$9109$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$9108$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$9108$1yk2we
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9104$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$9104$1yk2we
               '(_ () any . each-any)))))
         g$e$9103$1yk2we))))
   (g$foreign-call-transformer$7598$1yk2we
     g$foreign-call-transformer$11058$1yk2we
     (case-lambda
       ((g$e$9118$1yk2we g$r$9119$1yk2we g$mr$9120$1yk2we)
        ((case-lambda
           ((g$t$9121$1yk2we)
            ((case-lambda
               ((g$ls/false$9122$1yk2we)
                (if g$ls/false$9122$1yk2we
                  (apply
                    (case-lambda
                      ((g$name$9123$1yk2we g$arg*$9124$1yk2we)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7618$1yk2we
                             g$name$9123$1yk2we
                             g$r$9119$1yk2we
                             g$mr$9120$1yk2we)
                           (g$chi-expr*$7616$1yk2we
                             g$arg*$9124$1yk2we
                             g$r$9119$1yk2we
                             g$mr$9120$1yk2we)))))
                    g$ls/false$9122$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$9121$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$9121$1yk2we
               '(_ any . each-any)))))
         g$e$9118$1yk2we))))
   (g$convert-pattern$7599$1yk2we
     g$convert-pattern$11059$1yk2we
     (case-lambda
       ((g$pattern$9125$1yk2we g$keys$9126$1yk2we)
        (letrec* ((g$cvt*$9127$1yk2we
                    (case-lambda
                      ((g$p*$9207$1yk2we g$n$9208$1yk2we g$ids$9209$1yk2we)
                       (if (null? g$p*$9207$1yk2we)
                         (values '() g$ids$9209$1yk2we)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9127$1yk2we
                                (cdr g$p*$9207$1yk2we)
                                g$n$9208$1yk2we
                                g$ids$9209$1yk2we)))
                           (case-lambda
                             ((g$y$9212$1yk2we g$ids$9213$1yk2we)
                              ((case-lambda
                                 ((g$ids$9214$1yk2we g$y$9215$1yk2we)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9128$1yk2we
                                         (car g$p*$9207$1yk2we)
                                         g$n$9208$1yk2we
                                         g$ids$9214$1yk2we)))
                                    (case-lambda
                                      ((g$x$9218$1yk2we g$ids$9219$1yk2we)
                                       ((case-lambda
                                          ((g$ids$9220$1yk2we g$x$9221$1yk2we)
                                           (values
                                             (cons
                                               g$x$9221$1yk2we
                                               g$y$9215$1yk2we)
                                             g$ids$9220$1yk2we)))
                                        g$ids$9219$1yk2we
                                        g$x$9218$1yk2we))))))
                               g$ids$9213$1yk2we
                               g$y$9212$1yk2we))))))))
                  (g$cvt$9128$1yk2we
                    (case-lambda
                      ((g$p$9129$1yk2we g$n$9130$1yk2we g$ids$9131$1yk2we)
                       ((case-lambda
                          ((g$t$9132$1yk2we)
                           ((case-lambda
                              ((g$ls/false$9133$1yk2we)
                               (if (if g$ls/false$9133$1yk2we
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9134$1yk2we)
                                            (g$id?$7322$1yk2we
                                              g$id$9134$1yk2we)))
                                         g$ls/false$9133$1yk2we))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9135$1yk2we)
                                      (if (g$bound-id-member?$7329$1yk2we
                                            g$p$9129$1yk2we
                                            g$keys$9126$1yk2we)
                                        (values
                                          (vector 'free-id g$p$9129$1yk2we)
                                          g$ids$9131$1yk2we)
                                        (if (g$free-id=?$7326$1yk2we
                                              g$p$9129$1yk2we
                                              (g$scheme-stx$7543$1yk2we '_))
                                          (values '_ g$ids$9131$1yk2we)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9129$1yk2we
                                                g$n$9130$1yk2we)
                                              g$ids$9131$1yk2we))))))
                                   g$ls/false$9133$1yk2we)
                                 ((case-lambda
                                    ((g$t$9136$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$9137$1yk2we)
                                         (if (if g$ls/false$9137$1yk2we
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9138$1yk2we
                                                        g$dots$9139$1yk2we)
                                                      (g$ellipsis?$7601$1yk2we
                                                        g$dots$9139$1yk2we)))
                                                   g$ls/false$9137$1yk2we))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9140$1yk2we
                                                  g$dots$9141$1yk2we)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9128$1yk2we
                                                       g$p$9140$1yk2we
                                                       (+ g$n$9130$1yk2we '1)
                                                       g$ids$9131$1yk2we)))
                                                  (case-lambda
                                                    ((g$p$9144$1yk2we
                                                       g$ids$9145$1yk2we)
                                                     ((case-lambda
                                                        ((g$ids$9146$1yk2we
                                                           g$p$9147$1yk2we)
                                                         (values
                                                           (if (eq? g$p$9147$1yk2we
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9147$1yk2we))
                                                           g$ids$9146$1yk2we)))
                                                      g$ids$9145$1yk2we
                                                      g$p$9144$1yk2we))))))
                                             g$ls/false$9137$1yk2we)
                                           ((case-lambda
                                              ((g$t$9148$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$9149$1yk2we)
                                                   (if (if g$ls/false$9149$1yk2we
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9150$1yk2we
                                                                  g$dots$9151$1yk2we
                                                                  g$ys$9152$1yk2we
                                                                  g$z$9153$1yk2we)
                                                                (g$ellipsis?$7601$1yk2we
                                                                  g$dots$9151$1yk2we)))
                                                             g$ls/false$9149$1yk2we))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9154$1yk2we
                                                            g$dots$9155$1yk2we
                                                            g$ys$9156$1yk2we
                                                            g$z$9157$1yk2we)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9128$1yk2we
                                                                 g$z$9157$1yk2we
                                                                 g$n$9130$1yk2we
                                                                 g$ids$9131$1yk2we)))
                                                            (case-lambda
                                                              ((g$z$9160$1yk2we
                                                                 g$ids$9161$1yk2we)
                                                               ((case-lambda
                                                                  ((g$ids$9162$1yk2we
                                                                     g$z$9163$1yk2we)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9127$1yk2we
                                                                          g$ys$9156$1yk2we
                                                                          g$n$9130$1yk2we
                                                                          g$ids$9162$1yk2we)))
                                                                     (case-lambda
                                                                       ((g$ys$9166$1yk2we
                                                                          g$ids$9167$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$ids$9168$1yk2we
                                                                              g$ys$9169$1yk2we)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9128$1yk2we
                                                                                   g$x$9154$1yk2we
                                                                                   (+ g$n$9130$1yk2we
                                                                                      '1)
                                                                                   g$ids$9168$1yk2we)))
                                                                              (case-lambda
                                                                                ((g$x$9172$1yk2we
                                                                                   g$ids$9173$1yk2we)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9174$1yk2we
                                                                                       g$x$9175$1yk2we)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9175$1yk2we
                                                                                         (reverse
                                                                                           g$ys$9169$1yk2we)
                                                                                         g$z$9163$1yk2we)
                                                                                       g$ids$9174$1yk2we)))
                                                                                  g$ids$9173$1yk2we
                                                                                  g$x$9172$1yk2we))))))
                                                                         g$ids$9167$1yk2we
                                                                         g$ys$9166$1yk2we))))))
                                                                g$ids$9161$1yk2we
                                                                g$z$9160$1yk2we))))))
                                                       g$ls/false$9149$1yk2we)
                                                     ((case-lambda
                                                        ((g$t$9176$1yk2we)
                                                         ((case-lambda
                                                            ((g$ls/false$9177$1yk2we)
                                                             (if g$ls/false$9177$1yk2we
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9178$1yk2we
                                                                      g$y$9179$1yk2we)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9128$1yk2we
                                                                           g$y$9179$1yk2we
                                                                           g$n$9130$1yk2we
                                                                           g$ids$9131$1yk2we)))
                                                                      (case-lambda
                                                                        ((g$y$9182$1yk2we
                                                                           g$ids$9183$1yk2we)
                                                                         ((case-lambda
                                                                            ((g$ids$9184$1yk2we
                                                                               g$y$9185$1yk2we)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9128$1yk2we
                                                                                    g$x$9178$1yk2we
                                                                                    g$n$9130$1yk2we
                                                                                    g$ids$9184$1yk2we)))
                                                                               (case-lambda
                                                                                 ((g$x$9188$1yk2we
                                                                                    g$ids$9189$1yk2we)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9190$1yk2we
                                                                                        g$x$9191$1yk2we)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9191$1yk2we
                                                                                          g$y$9185$1yk2we)
                                                                                        g$ids$9190$1yk2we)))
                                                                                   g$ids$9189$1yk2we
                                                                                   g$x$9188$1yk2we))))))
                                                                          g$ids$9183$1yk2we
                                                                          g$y$9182$1yk2we))))))
                                                                 g$ls/false$9177$1yk2we)
                                                               ((case-lambda
                                                                  ((g$t$9192$1yk2we)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9193$1yk2we)
                                                                       (if g$ls/false$9193$1yk2we
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9131$1yk2we)))
                                                                           g$ls/false$9193$1yk2we)
                                                                         ((case-lambda
                                                                            ((g$t$9194$1yk2we)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9195$1yk2we)
                                                                                 (if (if g$ls/false$9195$1yk2we
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9196$1yk2we)
                                                                                              (not (g$stx?$7294$1yk2we
                                                                                                     g$p$9196$1yk2we))))
                                                                                           g$ls/false$9195$1yk2we))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9197$1yk2we)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9128$1yk2we
                                                                                               g$p$9197$1yk2we
                                                                                               g$n$9130$1yk2we
                                                                                               g$ids$9131$1yk2we)))
                                                                                          (case-lambda
                                                                                            ((g$p$9200$1yk2we
                                                                                               g$ids$9201$1yk2we)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9202$1yk2we
                                                                                                   g$p$9203$1yk2we)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9203$1yk2we)
                                                                                                   g$ids$9202$1yk2we)))
                                                                                              g$ids$9201$1yk2we
                                                                                              g$p$9200$1yk2we))))))
                                                                                     g$ls/false$9195$1yk2we)
                                                                                   ((case-lambda
                                                                                      ((g$t$9204$1yk2we)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9205$1yk2we)
                                                                                           (if g$ls/false$9205$1yk2we
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9206$1yk2we)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7333$1yk2we
                                                                                                        g$datum$9206$1yk2we))
                                                                                                    g$ids$9131$1yk2we)))
                                                                                               g$ls/false$9205$1yk2we)
                                                                                             (g$syntax-violation$7711$1yk2we
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9204$1yk2we))))
                                                                                        (g$syntax-dispatch$7600$1yk2we
                                                                                          g$t$9204$1yk2we
                                                                                          'any))))
                                                                                    g$t$9194$1yk2we))))
                                                                              (g$syntax-dispatch$7600$1yk2we
                                                                                g$t$9194$1yk2we
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9192$1yk2we))))
                                                                    (g$syntax-dispatch$7600$1yk2we
                                                                      g$t$9192$1yk2we
                                                                      '()))))
                                                                g$t$9176$1yk2we))))
                                                          (g$syntax-dispatch$7600$1yk2we
                                                            g$t$9176$1yk2we
                                                            '(any . any)))))
                                                      g$t$9148$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$9148$1yk2we
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9136$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$9136$1yk2we
                                        '(any any)))))
                                  g$t$9132$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$9132$1yk2we
                              'any))))
                        g$p$9129$1yk2we)))))
          (g$cvt$9128$1yk2we g$pattern$9125$1yk2we '0 '())))))
   (g$syntax-dispatch$7600$1yk2we
     g$syntax-dispatch$11060$1yk2we
     (case-lambda
       ((g$e$9222$1yk2we g$p$9223$1yk2we)
        (letrec* ((g$stx^$9224$1yk2we
                    (case-lambda
                      ((g$e$9332$1yk2we
                         g$m*$9333$1yk2we
                         g$s*$9334$1yk2we
                         g$ae*$9335$1yk2we)
                       (if (if (null? g$m*$9333$1yk2we)
                             (if (null? g$s*$9334$1yk2we)
                               (begin '#f (null? g$ae*$9335$1yk2we))
                               '#f)
                             '#f)
                         g$e$9332$1yk2we
                         (g$mkstx$7310$1yk2we
                           g$e$9332$1yk2we
                           g$m*$9333$1yk2we
                           g$s*$9334$1yk2we
                           g$ae*$9335$1yk2we)))))
                  (g$match-each$9225$1yk2we
                    (case-lambda
                      ((g$e$9316$1yk2we
                         g$p$9317$1yk2we
                         g$m*$9318$1yk2we
                         g$s*$9319$1yk2we
                         g$ae*$9320$1yk2we)
                       (if (pair? g$e$9316$1yk2we)
                         ((case-lambda
                            ((g$first$9321$1yk2we)
                             (if g$first$9321$1yk2we
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9322$1yk2we)
                                     (if g$rest$9322$1yk2we
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9321$1yk2we
                                           g$rest$9322$1yk2we))
                                       '#f)))
                                  (g$match-each$9225$1yk2we
                                    (cdr g$e$9316$1yk2we)
                                    g$p$9317$1yk2we
                                    g$m*$9318$1yk2we
                                    g$s*$9319$1yk2we
                                    g$ae*$9320$1yk2we)))
                               '#f)))
                          (g$match$9231$1yk2we
                            (car g$e$9316$1yk2we)
                            g$p$9317$1yk2we
                            g$m*$9318$1yk2we
                            g$s*$9319$1yk2we
                            g$ae*$9320$1yk2we
                            '()))
                         (if (null? g$e$9316$1yk2we)
                           '()
                           (if (g$stx?$7294$1yk2we g$e$9316$1yk2we)
                             (if (not (g$top-marked?$7265$1yk2we
                                        g$m*$9318$1yk2we))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7309$1yk2we
                                        g$m*$9318$1yk2we
                                        g$s*$9319$1yk2we
                                        g$ae*$9320$1yk2we
                                        g$e$9316$1yk2we)))
                                   (case-lambda
                                     ((g$m*$9326$1yk2we
                                        g$s*$9327$1yk2we
                                        g$ae*$9328$1yk2we)
                                      ((case-lambda
                                         ((g$ae*$9329$1yk2we
                                            g$s*$9330$1yk2we
                                            g$m*$9331$1yk2we)
                                          (g$match-each$9225$1yk2we
                                            (g$stx-expr$7296$1yk2we
                                              g$e$9316$1yk2we)
                                            g$p$9317$1yk2we
                                            g$m*$9331$1yk2we
                                            g$s*$9330$1yk2we
                                            g$ae*$9329$1yk2we)))
                                       g$ae*$9328$1yk2we
                                       g$s*$9327$1yk2we
                                       g$m*$9326$1yk2we)))))
                               '#f)
                             (if (annotation? g$e$9316$1yk2we)
                               (g$match-each$9225$1yk2we
                                 (annotation-expression g$e$9316$1yk2we)
                                 g$p$9317$1yk2we
                                 g$m*$9318$1yk2we
                                 g$s*$9319$1yk2we
                                 g$ae*$9320$1yk2we)
                               '#f)))))))
                  (g$match-each+$9226$1yk2we
                    (case-lambda
                      ((g$e$9284$1yk2we
                         g$x-pat$9285$1yk2we
                         g$y-pat$9286$1yk2we
                         g$z-pat$9287$1yk2we
                         g$m*$9288$1yk2we
                         g$s*$9289$1yk2we
                         g$ae*$9290$1yk2we
                         g$r$9291$1yk2we)
                       ((letrec ((g$f$9292$1yk2we
                                   (case-lambda
                                     ((g$e$9293$1yk2we
                                        g$m*$9294$1yk2we
                                        g$s*$9295$1yk2we
                                        g$ae*$9296$1yk2we)
                                      (if (pair? g$e$9293$1yk2we)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9292$1yk2we
                                               (cdr g$e$9293$1yk2we)
                                               g$m*$9294$1yk2we
                                               g$s*$9295$1yk2we
                                               g$ae*$9296$1yk2we)))
                                          (case-lambda
                                            ((g$xr*$9300$1yk2we
                                               g$y-pat$9301$1yk2we
                                               g$r$9302$1yk2we)
                                             ((case-lambda
                                                ((g$r$9303$1yk2we
                                                   g$y-pat$9304$1yk2we
                                                   g$xr*$9305$1yk2we)
                                                 (if g$r$9303$1yk2we
                                                   (if (null?
                                                         g$y-pat$9304$1yk2we)
                                                     ((case-lambda
                                                        ((g$xr$9306$1yk2we)
                                                         (if g$xr$9306$1yk2we
                                                           (values
                                                             (cons
                                                               g$xr$9306$1yk2we
                                                               g$xr*$9305$1yk2we)
                                                             g$y-pat$9304$1yk2we
                                                             g$r$9303$1yk2we)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9231$1yk2we
                                                        (car g$e$9293$1yk2we)
                                                        g$x-pat$9285$1yk2we
                                                        g$m*$9294$1yk2we
                                                        g$s*$9295$1yk2we
                                                        g$ae*$9296$1yk2we
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9304$1yk2we)
                                                       (g$match$9231$1yk2we
                                                         (car g$e$9293$1yk2we)
                                                         (car g$y-pat$9304$1yk2we)
                                                         g$m*$9294$1yk2we
                                                         g$s*$9295$1yk2we
                                                         g$ae*$9296$1yk2we
                                                         g$r$9303$1yk2we)))
                                                   (values '#f '#f '#f))))
                                              g$r$9302$1yk2we
                                              g$y-pat$9301$1yk2we
                                              g$xr*$9300$1yk2we))))
                                        (if (g$stx?$7294$1yk2we g$e$9293$1yk2we)
                                          (if (g$top-marked?$7265$1yk2we
                                                g$m*$9294$1yk2we)
                                            (values
                                              '()
                                              g$y-pat$9286$1yk2we
                                              (g$match$9231$1yk2we
                                                g$e$9293$1yk2we
                                                g$z-pat$9287$1yk2we
                                                g$m*$9294$1yk2we
                                                g$s*$9295$1yk2we
                                                g$ae*$9296$1yk2we
                                                g$r$9291$1yk2we))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7309$1yk2we
                                                   g$m*$9294$1yk2we
                                                   g$s*$9295$1yk2we
                                                   g$ae*$9296$1yk2we
                                                   g$e$9293$1yk2we)))
                                              (case-lambda
                                                ((g$m*$9310$1yk2we
                                                   g$s*$9311$1yk2we
                                                   g$ae*$9312$1yk2we)
                                                 ((case-lambda
                                                    ((g$ae*$9313$1yk2we
                                                       g$s*$9314$1yk2we
                                                       g$m*$9315$1yk2we)
                                                     (g$f$9292$1yk2we
                                                       (g$stx-expr$7296$1yk2we
                                                         g$e$9293$1yk2we)
                                                       g$m*$9315$1yk2we
                                                       g$s*$9314$1yk2we
                                                       g$ae*$9313$1yk2we)))
                                                  g$ae*$9312$1yk2we
                                                  g$s*$9311$1yk2we
                                                  g$m*$9310$1yk2we)))))
                                          (if (annotation? g$e$9293$1yk2we)
                                            (g$f$9292$1yk2we
                                              (annotation-expression
                                                g$e$9293$1yk2we)
                                              g$m*$9294$1yk2we
                                              g$s*$9295$1yk2we
                                              g$ae*$9296$1yk2we)
                                            (values
                                              '()
                                              g$y-pat$9286$1yk2we
                                              (g$match$9231$1yk2we
                                                g$e$9293$1yk2we
                                                g$z-pat$9287$1yk2we
                                                g$m*$9294$1yk2we
                                                g$s*$9295$1yk2we
                                                g$ae*$9296$1yk2we
                                                g$r$9291$1yk2we)))))))))
                          g$f$9292$1yk2we)
                        g$e$9284$1yk2we
                        g$m*$9288$1yk2we
                        g$s*$9289$1yk2we
                        g$ae*$9290$1yk2we))))
                  (g$match-each-any$9227$1yk2we
                    (case-lambda
                      ((g$e$9270$1yk2we
                         g$m*$9271$1yk2we
                         g$s*$9272$1yk2we
                         g$ae*$9273$1yk2we)
                       (if (pair? g$e$9270$1yk2we)
                         ((case-lambda
                            ((g$l$9274$1yk2we)
                             (if g$l$9274$1yk2we
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9224$1yk2we
                                     (car g$e$9270$1yk2we)
                                     g$m*$9271$1yk2we
                                     g$s*$9272$1yk2we
                                     g$ae*$9273$1yk2we)
                                   g$l$9274$1yk2we))
                               '#f)))
                          (g$match-each-any$9227$1yk2we
                            (cdr g$e$9270$1yk2we)
                            g$m*$9271$1yk2we
                            g$s*$9272$1yk2we
                            g$ae*$9273$1yk2we))
                         (if (null? g$e$9270$1yk2we)
                           '()
                           (if (g$stx?$7294$1yk2we g$e$9270$1yk2we)
                             (if (not (g$top-marked?$7265$1yk2we
                                        g$m*$9271$1yk2we))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7309$1yk2we
                                        g$m*$9271$1yk2we
                                        g$s*$9272$1yk2we
                                        g$ae*$9273$1yk2we
                                        g$e$9270$1yk2we)))
                                   (case-lambda
                                     ((g$m*$9278$1yk2we
                                        g$s*$9279$1yk2we
                                        g$ae*$9280$1yk2we)
                                      ((case-lambda
                                         ((g$ae*$9281$1yk2we
                                            g$s*$9282$1yk2we
                                            g$m*$9283$1yk2we)
                                          (g$match-each-any$9227$1yk2we
                                            (g$stx-expr$7296$1yk2we
                                              g$e$9270$1yk2we)
                                            g$m*$9283$1yk2we
                                            g$s*$9282$1yk2we
                                            g$ae*$9281$1yk2we)))
                                       g$ae*$9280$1yk2we
                                       g$s*$9279$1yk2we
                                       g$m*$9278$1yk2we)))))
                               '#f)
                             (if (annotation? g$e$9270$1yk2we)
                               (g$match-each-any$9227$1yk2we
                                 (annotation-expression g$e$9270$1yk2we)
                                 g$m*$9271$1yk2we
                                 g$s*$9272$1yk2we
                                 g$ae*$9273$1yk2we)
                               '#f)))))))
                  (g$match-empty$9228$1yk2we
                    (case-lambda
                      ((g$p$9267$1yk2we g$r$9268$1yk2we)
                       (if (null? g$p$9267$1yk2we)
                         g$r$9268$1yk2we
                         (if (eq? g$p$9267$1yk2we '_)
                           g$r$9268$1yk2we
                           (if (eq? g$p$9267$1yk2we 'any)
                             (cons '() g$r$9268$1yk2we)
                             (if (pair? g$p$9267$1yk2we)
                               (g$match-empty$9228$1yk2we
                                 (car g$p$9267$1yk2we)
                                 (g$match-empty$9228$1yk2we
                                   (cdr g$p$9267$1yk2we)
                                   g$r$9268$1yk2we))
                               (if (eq? g$p$9267$1yk2we 'each-any)
                                 (cons '() g$r$9268$1yk2we)
                                 ((case-lambda
                                    ((g$t$9269$1yk2we)
                                     (if (memv g$t$9269$1yk2we '(each))
                                       (g$match-empty$9228$1yk2we
                                         (vector-ref g$p$9267$1yk2we '1)
                                         g$r$9268$1yk2we)
                                       (if (memv g$t$9269$1yk2we '(each+))
                                         (g$match-empty$9228$1yk2we
                                           (vector-ref g$p$9267$1yk2we '1)
                                           (g$match-empty$9228$1yk2we
                                             (reverse
                                               (vector-ref g$p$9267$1yk2we '2))
                                             (g$match-empty$9228$1yk2we
                                               (vector-ref g$p$9267$1yk2we '3)
                                               g$r$9268$1yk2we)))
                                         (if (memv
                                               g$t$9269$1yk2we
                                               '(free-id atom))
                                           g$r$9268$1yk2we
                                           (if (memv
                                                 g$t$9269$1yk2we
                                                 '(scheme-id atom))
                                             g$r$9268$1yk2we
                                             (if (memv
                                                   g$t$9269$1yk2we
                                                   '(vector))
                                               (g$match-empty$9228$1yk2we
                                                 (vector-ref g$p$9267$1yk2we '1)
                                                 g$r$9268$1yk2we)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9267$1yk2we))))))))
                                  (vector-ref g$p$9267$1yk2we '0))))))))))
                  (g$combine$9229$1yk2we
                    (case-lambda
                      ((g$r*$9265$1yk2we g$r$9266$1yk2we)
                       (if (null? (car g$r*$9265$1yk2we))
                         g$r$9266$1yk2we
                         (cons
                           (map car g$r*$9265$1yk2we)
                           (g$combine$9229$1yk2we
                             (map cdr g$r*$9265$1yk2we)
                             g$r$9266$1yk2we))))))
                  (g$match*$9230$1yk2we
                    (case-lambda
                      ((g$e$9247$1yk2we
                         g$p$9248$1yk2we
                         g$m*$9249$1yk2we
                         g$s*$9250$1yk2we
                         g$ae*$9251$1yk2we
                         g$r$9252$1yk2we)
                       (if (null? g$p$9248$1yk2we)
                         (if (null? g$e$9247$1yk2we)
                           (begin '#f g$r$9252$1yk2we)
                           '#f)
                         (if (pair? g$p$9248$1yk2we)
                           (if (pair? g$e$9247$1yk2we)
                             (begin
                               '#f
                               (g$match$9231$1yk2we
                                 (car g$e$9247$1yk2we)
                                 (car g$p$9248$1yk2we)
                                 g$m*$9249$1yk2we
                                 g$s*$9250$1yk2we
                                 g$ae*$9251$1yk2we
                                 (g$match$9231$1yk2we
                                   (cdr g$e$9247$1yk2we)
                                   (cdr g$p$9248$1yk2we)
                                   g$m*$9249$1yk2we
                                   g$s*$9250$1yk2we
                                   g$ae*$9251$1yk2we
                                   g$r$9252$1yk2we)))
                             '#f)
                           (if (eq? g$p$9248$1yk2we 'each-any)
                             ((case-lambda
                                ((g$l$9253$1yk2we)
                                 (if g$l$9253$1yk2we
                                   (begin
                                     '#f
                                     (cons g$l$9253$1yk2we g$r$9252$1yk2we))
                                   '#f)))
                              (g$match-each-any$9227$1yk2we
                                g$e$9247$1yk2we
                                g$m*$9249$1yk2we
                                g$s*$9250$1yk2we
                                g$ae*$9251$1yk2we))
                             ((case-lambda
                                ((g$t$9254$1yk2we)
                                 (if (memv g$t$9254$1yk2we '(each))
                                   (if (null? g$e$9247$1yk2we)
                                     (g$match-empty$9228$1yk2we
                                       (vector-ref g$p$9248$1yk2we '1)
                                       g$r$9252$1yk2we)
                                     ((case-lambda
                                        ((g$r*$9255$1yk2we)
                                         (if g$r*$9255$1yk2we
                                           (begin
                                             '#f
                                             (g$combine$9229$1yk2we
                                               g$r*$9255$1yk2we
                                               g$r$9252$1yk2we))
                                           '#f)))
                                      (g$match-each$9225$1yk2we
                                        g$e$9247$1yk2we
                                        (vector-ref g$p$9248$1yk2we '1)
                                        g$m*$9249$1yk2we
                                        g$s*$9250$1yk2we
                                        g$ae*$9251$1yk2we)))
                                   (if (memv g$t$9254$1yk2we '(free-id))
                                     (if (symbol? g$e$9247$1yk2we)
                                       (if (g$top-marked?$7265$1yk2we
                                             g$m*$9249$1yk2we)
                                         (if (g$free-id=?$7326$1yk2we
                                               (g$stx^$9224$1yk2we
                                                 g$e$9247$1yk2we
                                                 g$m*$9249$1yk2we
                                                 g$s*$9250$1yk2we
                                                 g$ae*$9251$1yk2we)
                                               (vector-ref g$p$9248$1yk2we '1))
                                           (begin '#f g$r$9252$1yk2we)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9254$1yk2we '(scheme-id))
                                       (if (symbol? g$e$9247$1yk2we)
                                         (if (g$top-marked?$7265$1yk2we
                                               g$m*$9249$1yk2we)
                                           (if (g$free-id=?$7326$1yk2we
                                                 (g$stx^$9224$1yk2we
                                                   g$e$9247$1yk2we
                                                   g$m*$9249$1yk2we
                                                   g$s*$9250$1yk2we
                                                   g$ae*$9251$1yk2we)
                                                 (g$scheme-stx$7543$1yk2we
                                                   (vector-ref
                                                     g$p$9248$1yk2we
                                                     '1)))
                                             (begin '#f g$r$9252$1yk2we)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9254$1yk2we '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9226$1yk2we
                                                g$e$9247$1yk2we
                                                (vector-ref g$p$9248$1yk2we '1)
                                                (vector-ref g$p$9248$1yk2we '2)
                                                (vector-ref g$p$9248$1yk2we '3)
                                                g$m*$9249$1yk2we
                                                g$s*$9250$1yk2we
                                                g$ae*$9251$1yk2we
                                                g$r$9252$1yk2we)))
                                           (case-lambda
                                             ((g$xr*$9259$1yk2we
                                                g$y-pat$9260$1yk2we
                                                g$r$9261$1yk2we)
                                              ((case-lambda
                                                 ((g$r$9262$1yk2we
                                                    g$y-pat$9263$1yk2we
                                                    g$xr*$9264$1yk2we)
                                                  (if g$r$9262$1yk2we
                                                    (if (null?
                                                          g$y-pat$9263$1yk2we)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9264$1yk2we)
                                                          (g$match-empty$9228$1yk2we
                                                            (vector-ref
                                                              g$p$9248$1yk2we
                                                              '1)
                                                            g$r$9262$1yk2we)
                                                          (g$combine$9229$1yk2we
                                                            g$xr*$9264$1yk2we
                                                            g$r$9262$1yk2we)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9261$1yk2we
                                               g$y-pat$9260$1yk2we
                                               g$xr*$9259$1yk2we))))
                                         (if (memv g$t$9254$1yk2we '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9248$1yk2we '1)
                                                 (g$strip$7332$1yk2we
                                                   g$e$9247$1yk2we
                                                   g$m*$9249$1yk2we))
                                             (begin '#f g$r$9252$1yk2we)
                                             '#f)
                                           (if (memv g$t$9254$1yk2we '(vector))
                                             (if (vector? g$e$9247$1yk2we)
                                               (begin
                                                 '#f
                                                 (g$match$9231$1yk2we
                                                   (vector->list
                                                     g$e$9247$1yk2we)
                                                   (vector-ref
                                                     g$p$9248$1yk2we
                                                     '1)
                                                   g$m*$9249$1yk2we
                                                   g$s*$9250$1yk2we
                                                   g$ae*$9251$1yk2we
                                                   g$r$9252$1yk2we))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9248$1yk2we)))))))))
                              (vector-ref g$p$9248$1yk2we '0))))))))
                  (g$match$9231$1yk2we
                    (case-lambda
                      ((g$e$9232$1yk2we
                         g$p$9233$1yk2we
                         g$m*$9234$1yk2we
                         g$s*$9235$1yk2we
                         g$ae*$9236$1yk2we
                         g$r$9237$1yk2we)
                       (if (not g$r$9237$1yk2we)
                         '#f
                         (if (eq? g$p$9233$1yk2we '_)
                           g$r$9237$1yk2we
                           (if (eq? g$p$9233$1yk2we 'any)
                             (cons
                               (g$stx^$9224$1yk2we
                                 g$e$9232$1yk2we
                                 g$m*$9234$1yk2we
                                 g$s*$9235$1yk2we
                                 g$ae*$9236$1yk2we)
                               g$r$9237$1yk2we)
                             (if (g$stx?$7294$1yk2we g$e$9232$1yk2we)
                               (if (not (g$top-marked?$7265$1yk2we
                                          g$m*$9234$1yk2we))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7309$1yk2we
                                          g$m*$9234$1yk2we
                                          g$s*$9235$1yk2we
                                          g$ae*$9236$1yk2we
                                          g$e$9232$1yk2we)))
                                     (case-lambda
                                       ((g$m*$9241$1yk2we
                                          g$s*$9242$1yk2we
                                          g$ae*$9243$1yk2we)
                                        ((case-lambda
                                           ((g$ae*$9244$1yk2we
                                              g$s*$9245$1yk2we
                                              g$m*$9246$1yk2we)
                                            (g$match$9231$1yk2we
                                              (g$stx-expr$7296$1yk2we
                                                g$e$9232$1yk2we)
                                              g$p$9233$1yk2we
                                              g$m*$9246$1yk2we
                                              g$s*$9245$1yk2we
                                              g$ae*$9244$1yk2we
                                              g$r$9237$1yk2we)))
                                         g$ae*$9243$1yk2we
                                         g$s*$9242$1yk2we
                                         g$m*$9241$1yk2we)))))
                                 '#f)
                               (if (annotation? g$e$9232$1yk2we)
                                 (g$match$9231$1yk2we
                                   (annotation-expression g$e$9232$1yk2we)
                                   g$p$9233$1yk2we
                                   g$m*$9234$1yk2we
                                   g$s*$9235$1yk2we
                                   g$ae*$9236$1yk2we
                                   g$r$9237$1yk2we)
                                 (g$match*$9230$1yk2we
                                   g$e$9232$1yk2we
                                   g$p$9233$1yk2we
                                   g$m*$9234$1yk2we
                                   g$s*$9235$1yk2we
                                   g$ae*$9236$1yk2we
                                   g$r$9237$1yk2we))))))))))
          (g$match$9231$1yk2we
            g$e$9222$1yk2we
            g$p$9223$1yk2we
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7601$1yk2we
     g$ellipsis?$11061$1yk2we
     (case-lambda
       ((g$x$9336$1yk2we)
        (if (g$id?$7322$1yk2we g$x$9336$1yk2we)
          (begin
            '#f
            (g$free-id=?$7326$1yk2we
              g$x$9336$1yk2we
              (g$scheme-stx$7543$1yk2we '...)))
          '#f))))
   (g$underscore?$7602$1yk2we
     g$underscore?$11062$1yk2we
     (case-lambda
       ((g$x$9337$1yk2we)
        (if (g$id?$7322$1yk2we g$x$9337$1yk2we)
          (begin
            '#f
            (g$free-id=?$7326$1yk2we
              g$x$9337$1yk2we
              (g$scheme-stx$7543$1yk2we '_)))
          '#f))))
   (g$verify-literals$7603$1yk2we
     g$verify-literals$11063$1yk2we
     (case-lambda
       ((g$lits$9338$1yk2we g$expr$9339$1yk2we)
        (for-each
          (case-lambda
            ((g$x$9340$1yk2we)
             (if ((case-lambda
                    ((g$t$9341$1yk2we)
                     (if g$t$9341$1yk2we
                       g$t$9341$1yk2we
                       ((case-lambda
                          ((g$t$9342$1yk2we)
                           (if g$t$9342$1yk2we
                             g$t$9342$1yk2we
                             (begin
                               '#f
                               (g$underscore?$7602$1yk2we g$x$9340$1yk2we)))))
                        (g$ellipsis?$7601$1yk2we g$x$9340$1yk2we)))))
                  (not (g$id?$7322$1yk2we g$x$9340$1yk2we)))
               (g$syntax-violation$7711$1yk2we
                 '#f
                 '"invalid literal"
                 g$expr$9339$1yk2we
                 g$x$9340$1yk2we)
               (void))))
          g$lits$9338$1yk2we))))
   (g$syntax-case-transformer$7604$1yk2we
     g$syntax-case-transformer$11064$1yk2we
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9343$1yk2we
                     (case-lambda
                       ((g$pvars$9400$1yk2we
                          g$expr$9401$1yk2we
                          g$y$9402$1yk2we
                          g$r$9403$1yk2we
                          g$mr$9404$1yk2we)
                        ((case-lambda
                           ((g$ids$9405$1yk2we g$levels$9406$1yk2we)
                            ((case-lambda
                               ((g$labels$9407$1yk2we g$new-vars$9408$1yk2we)
                                ((case-lambda
                                   ((g$body$9409$1yk2we)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7253$1yk2we
                                        '#f
                                        g$new-vars$9408$1yk2we
                                        g$body$9409$1yk2we)
                                      g$y$9402$1yk2we)))
                                 (g$chi-expr$7618$1yk2we
                                   (g$add-subst$7312$1yk2we
                                     (g$make-full-rib$7290$1yk2we
                                       g$ids$9405$1yk2we
                                       g$labels$9407$1yk2we)
                                     g$expr$9401$1yk2we)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9410$1yk2we
                                               g$var$9411$1yk2we
                                               g$level$9412$1yk2we)
                                             (cons
                                               g$label$9410$1yk2we
                                               (g$make-binding$7338$1yk2we
                                                 'syntax
                                                 (cons
                                                   g$var$9411$1yk2we
                                                   g$level$9412$1yk2we)))))
                                          g$labels$9407$1yk2we
                                          g$new-vars$9408$1yk2we
                                          (map cdr g$pvars$9400$1yk2we))
                                     g$r$9403$1yk2we)
                                   g$mr$9404$1yk2we))))
                             (map g$gen-label$7268$1yk2we g$ids$9405$1yk2we)
                             (map g$gen-lexical$7266$1yk2we
                                  g$ids$9405$1yk2we))))
                         (map car g$pvars$9400$1yk2we)
                         (map cdr g$pvars$9400$1yk2we)))))
                   (g$invalid-ids-error$9344$1yk2we
                     (case-lambda
                       ((g$id*$9394$1yk2we g$e$9395$1yk2we g$class$9396$1yk2we)
                        ((letrec ((g$find$9397$1yk2we
                                    (case-lambda
                                      ((g$id*$9398$1yk2we g$ok*$9399$1yk2we)
                                       (if (null? g$id*$9398$1yk2we)
                                         (g$syntax-violation$7711$1yk2we
                                           '#f
                                           '"invalid syntax"
                                           g$e$9395$1yk2we)
                                         (if (g$id?$7322$1yk2we
                                               (car g$id*$9398$1yk2we))
                                           (if (g$bound-id-member?$7329$1yk2we
                                                 (car g$id*$9398$1yk2we)
                                                 g$ok*$9399$1yk2we)
                                             (g$syntax-error$7708$1yk2we
                                               (car g$id*$9398$1yk2we)
                                               '"duplicate "
                                               g$class$9396$1yk2we)
                                             (g$find$9397$1yk2we
                                               (cdr g$id*$9398$1yk2we)
                                               (cons
                                                 (car g$id*$9398$1yk2we)
                                                 g$ok*$9399$1yk2we)))
                                           (g$syntax-error$7708$1yk2we
                                             (car g$id*$9398$1yk2we)
                                             '"invalid "
                                             g$class$9396$1yk2we)))))))
                           g$find$9397$1yk2we)
                         g$id*$9394$1yk2we
                         '()))))
                   (g$gen-clause$9345$1yk2we
                     (case-lambda
                       ((g$x$9374$1yk2we
                          g$keys$9375$1yk2we
                          g$clauses$9376$1yk2we
                          g$r$9377$1yk2we
                          g$mr$9378$1yk2we
                          g$pat$9379$1yk2we
                          g$fender$9380$1yk2we
                          g$expr$9381$1yk2we)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7599$1yk2we
                               g$pat$9379$1yk2we
                               g$keys$9375$1yk2we)))
                          (case-lambda
                            ((g$p$9384$1yk2we g$pvars$9385$1yk2we)
                             ((case-lambda
                                ((g$pvars$9386$1yk2we g$p$9387$1yk2we)
                                 (if (not (g$distinct-bound-ids?$7328$1yk2we
                                            (map car g$pvars$9386$1yk2we)))
                                   (g$invalid-ids-error$9344$1yk2we
                                     (map car g$pvars$9386$1yk2we)
                                     g$pat$9379$1yk2we
                                     '"pattern variable")
                                   (if (not (g$for-all$5480$1yk2we
                                              (case-lambda
                                                ((g$x$9388$1yk2we)
                                                 (not (g$ellipsis?$7601$1yk2we
                                                        (car g$x$9388$1yk2we)))))
                                              g$pvars$9386$1yk2we))
                                     (g$syntax-violation$7711$1yk2we
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9379$1yk2we)
                                     ((case-lambda
                                        ((g$y$9389$1yk2we)
                                         ((case-lambda
                                            ((g$test$9390$1yk2we)
                                             ((case-lambda
                                                ((g$conseq$9391$1yk2we)
                                                 ((case-lambda
                                                    ((g$altern$9392$1yk2we)
                                                     (list
                                                       (g$build-lambda$7253$1yk2we
                                                         '#f
                                                         (list g$y$9389$1yk2we)
                                                         (list
                                                           'if
                                                           g$test$9390$1yk2we
                                                           g$conseq$9391$1yk2we
                                                           g$altern$9392$1yk2we))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9374$1yk2we
                                                         (list
                                                           'quote
                                                           g$p$9387$1yk2we)))))
                                                  (g$gen-syntax-case$9346$1yk2we
                                                    g$x$9374$1yk2we
                                                    g$keys$9375$1yk2we
                                                    g$clauses$9376$1yk2we
                                                    g$r$9377$1yk2we
                                                    g$mr$9378$1yk2we))))
                                              (g$build-dispatch-call$9343$1yk2we
                                                g$pvars$9386$1yk2we
                                                g$expr$9381$1yk2we
                                                g$y$9389$1yk2we
                                                g$r$9377$1yk2we
                                                g$mr$9378$1yk2we))))
                                          (if (eq? g$fender$9380$1yk2we '#t)
                                            g$y$9389$1yk2we
                                            ((case-lambda
                                               ((g$call$9393$1yk2we)
                                                (list
                                                  'if
                                                  g$y$9389$1yk2we
                                                  g$call$9393$1yk2we
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9343$1yk2we
                                               g$pvars$9386$1yk2we
                                               g$fender$9380$1yk2we
                                               g$y$9389$1yk2we
                                               g$r$9377$1yk2we
                                               g$mr$9378$1yk2we))))))
                                      (g$gen-lexical$7266$1yk2we 'tmp))))))
                              g$pvars$9385$1yk2we
                              g$p$9384$1yk2we)))))))
                   (g$gen-syntax-case$9346$1yk2we
                     (case-lambda
                       ((g$x$9357$1yk2we
                          g$keys$9358$1yk2we
                          g$clauses$9359$1yk2we
                          g$r$9360$1yk2we
                          g$mr$9361$1yk2we)
                        (if (null? g$clauses$9359$1yk2we)
                          (list '(primitive syntax-error) g$x$9357$1yk2we)
                          ((case-lambda
                             ((g$t$9362$1yk2we)
                              ((case-lambda
                                 ((g$ls/false$9363$1yk2we)
                                  (if g$ls/false$9363$1yk2we
                                    (apply
                                      (case-lambda
                                        ((g$pat$9364$1yk2we g$expr$9365$1yk2we)
                                         (if (if (g$id?$7322$1yk2we
                                                   g$pat$9364$1yk2we)
                                               (if (not (g$bound-id-member?$7329$1yk2we
                                                          g$pat$9364$1yk2we
                                                          g$keys$9358$1yk2we))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7601$1yk2we
                                                          g$pat$9364$1yk2we)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7326$1yk2we
                                                 g$pat$9364$1yk2we
                                                 (g$scheme-stx$7543$1yk2we '_))
                                             (g$chi-expr$7618$1yk2we
                                               g$expr$9365$1yk2we
                                               g$r$9360$1yk2we
                                               g$mr$9361$1yk2we)
                                             ((case-lambda
                                                ((g$lab$9366$1yk2we
                                                   g$lex$9367$1yk2we)
                                                 ((case-lambda
                                                    ((g$body$9368$1yk2we)
                                                     (list
                                                       (g$build-lambda$7253$1yk2we
                                                         '#f
                                                         (list
                                                           g$lex$9367$1yk2we)
                                                         g$body$9368$1yk2we)
                                                       g$x$9357$1yk2we)))
                                                  (g$chi-expr$7618$1yk2we
                                                    (g$add-subst$7312$1yk2we
                                                      (g$make-full-rib$7290$1yk2we
                                                        (list g$pat$9364$1yk2we)
                                                        (list
                                                          g$lab$9366$1yk2we))
                                                      g$expr$9365$1yk2we)
                                                    (cons
                                                      (cons
                                                        g$lab$9366$1yk2we
                                                        (g$make-binding$7338$1yk2we
                                                          'syntax
                                                          (cons
                                                            g$lex$9367$1yk2we
                                                            '0)))
                                                      g$r$9360$1yk2we)
                                                    g$mr$9361$1yk2we))))
                                              (g$gen-label$7268$1yk2we
                                                g$pat$9364$1yk2we)
                                              (g$gen-lexical$7266$1yk2we
                                                g$pat$9364$1yk2we)))
                                           (g$gen-clause$9345$1yk2we
                                             g$x$9357$1yk2we
                                             g$keys$9358$1yk2we
                                             (cdr g$clauses$9359$1yk2we)
                                             g$r$9360$1yk2we
                                             g$mr$9361$1yk2we
                                             g$pat$9364$1yk2we
                                             '#t
                                             g$expr$9365$1yk2we))))
                                      g$ls/false$9363$1yk2we)
                                    ((case-lambda
                                       ((g$t$9369$1yk2we)
                                        ((case-lambda
                                           ((g$ls/false$9370$1yk2we)
                                            (if g$ls/false$9370$1yk2we
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9371$1yk2we
                                                     g$fender$9372$1yk2we
                                                     g$expr$9373$1yk2we)
                                                   (g$gen-clause$9345$1yk2we
                                                     g$x$9357$1yk2we
                                                     g$keys$9358$1yk2we
                                                     (cdr g$clauses$9359$1yk2we)
                                                     g$r$9360$1yk2we
                                                     g$mr$9361$1yk2we
                                                     g$pat$9371$1yk2we
                                                     g$fender$9372$1yk2we
                                                     g$expr$9373$1yk2we)))
                                                g$ls/false$9370$1yk2we)
                                              (g$syntax-violation$7711$1yk2we
                                                '#f
                                                '"invalid syntax"
                                                g$t$9369$1yk2we))))
                                         (g$syntax-dispatch$7600$1yk2we
                                           g$t$9369$1yk2we
                                           '(any any any)))))
                                     g$t$9362$1yk2we))))
                               (g$syntax-dispatch$7600$1yk2we
                                 g$t$9362$1yk2we
                                 '(any any)))))
                           (car g$clauses$9359$1yk2we)))))))
           (case-lambda
             ((g$e$9347$1yk2we g$r$9348$1yk2we g$mr$9349$1yk2we)
              ((case-lambda
                 ((g$t$9350$1yk2we)
                  ((case-lambda
                     ((g$ls/false$9351$1yk2we)
                      (if g$ls/false$9351$1yk2we
                        (apply
                          (case-lambda
                            ((g$expr$9352$1yk2we
                               g$keys$9353$1yk2we
                               g$clauses$9354$1yk2we)
                             (begin
                               (g$verify-literals$7603$1yk2we
                                 g$keys$9353$1yk2we
                                 g$e$9347$1yk2we)
                               ((case-lambda
                                  ((g$x$9355$1yk2we)
                                   ((case-lambda
                                      ((g$body$9356$1yk2we)
                                       (list
                                         (g$build-lambda$7253$1yk2we
                                           '#f
                                           (list g$x$9355$1yk2we)
                                           g$body$9356$1yk2we)
                                         (g$chi-expr$7618$1yk2we
                                           g$expr$9352$1yk2we
                                           g$r$9348$1yk2we
                                           g$mr$9349$1yk2we))))
                                    (g$gen-syntax-case$9346$1yk2we
                                      g$x$9355$1yk2we
                                      g$keys$9353$1yk2we
                                      g$clauses$9354$1yk2we
                                      g$r$9348$1yk2we
                                      g$mr$9349$1yk2we))))
                                (g$gen-lexical$7266$1yk2we 'tmp)))))
                          g$ls/false$9351$1yk2we)
                        (g$syntax-violation$7711$1yk2we
                          '#f
                          '"invalid syntax"
                          g$t$9350$1yk2we))))
                   (g$syntax-dispatch$7600$1yk2we
                     g$t$9350$1yk2we
                     '(_ any each-any . each-any)))))
               g$e$9347$1yk2we))))))))
   (g$ellipsis-map$7605$1yk2we
     g$ellipsis-map$11065$1yk2we
     (case-lambda
       ((g$proc$9413$1yk2we g$ls$9414$1yk2we . g$ls*$9415$1yk2we)
        (letrec* ((g$who$9416$1yk2we '...))
          (begin
            (if (not (list? g$ls$9414$1yk2we))
              (assertion-violation
                g$who$9416$1yk2we
                '"not a list"
                g$ls$9414$1yk2we)
              (void))
            (if (not (null? g$ls*$9415$1yk2we))
              ((case-lambda
                 ((g$n$9417$1yk2we)
                  (for-each
                    (case-lambda
                      ((g$x$9418$1yk2we)
                       (begin
                         (if (not (list? g$x$9418$1yk2we))
                           (assertion-violation
                             g$who$9416$1yk2we
                             '"not a list"
                             g$x$9418$1yk2we)
                           (void))
                         (if (not (= (length g$x$9418$1yk2we) g$n$9417$1yk2we))
                           (assertion-violation
                             g$who$9416$1yk2we
                             '"length mismatch"
                             g$ls$9414$1yk2we
                             g$x$9418$1yk2we)
                           (void)))))
                    g$ls*$9415$1yk2we)))
               (length g$ls$9414$1yk2we))
              (void))
            (apply
              map
              g$proc$9413$1yk2we
              g$ls$9414$1yk2we
              g$ls*$9415$1yk2we))))))
   (g$syntax-transformer$7606$1yk2we
     g$syntax-transformer$11066$1yk2we
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9419$1yk2we
                     (case-lambda
                       ((g$src$9479$1yk2we
                          g$e$9480$1yk2we
                          g$r$9481$1yk2we
                          g$maps$9482$1yk2we
                          g$ellipsis?$9483$1yk2we
                          g$vec?$9484$1yk2we)
                        ((case-lambda
                           ((g$t$9485$1yk2we)
                            ((case-lambda
                               ((g$ls/false$9486$1yk2we)
                                (if (if g$ls/false$9486$1yk2we
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9487$1yk2we)
                                             (g$ellipsis?$9483$1yk2we
                                               g$dots$9487$1yk2we)))
                                          g$ls/false$9486$1yk2we))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9488$1yk2we)
                                       (g$syntax-violation$7711$1yk2we
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9479$1yk2we)))
                                    g$ls/false$9486$1yk2we)
                                  ((case-lambda
                                     ((g$t$9489$1yk2we)
                                      ((case-lambda
                                         ((g$ls/false$9490$1yk2we)
                                          (if (if g$ls/false$9490$1yk2we
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9491$1yk2we)
                                                       (g$id?$7322$1yk2we
                                                         g$id$9491$1yk2we)))
                                                    g$ls/false$9490$1yk2we))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9492$1yk2we)
                                                 ((case-lambda
                                                    ((g$label$9493$1yk2we)
                                                     ((case-lambda
                                                        ((g$b$9494$1yk2we)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7339$1yk2we
                                                                        g$b$9494$1yk2we)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9497$1yk2we)
                                                                        (g$gen-ref$9420$1yk2we
                                                                          g$src$9479$1yk2we
                                                                          (car g$var.lev$9497$1yk2we)
                                                                          (cdr g$var.lev$9497$1yk2we)
                                                                          g$maps$9482$1yk2we)))
                                                                     (g$binding-value$7340$1yk2we
                                                                       g$b$9494$1yk2we))))
                                                                 (case-lambda
                                                                   ((g$var$9498$1yk2we
                                                                      g$maps$9499$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$maps$9500$1yk2we
                                                                          g$var$9501$1yk2we)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9501$1yk2we)
                                                                          g$maps$9500$1yk2we)))
                                                                     g$maps$9499$1yk2we
                                                                     g$var$9498$1yk2we))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9480$1yk2we)
                                                                 g$maps$9482$1yk2we)))))))
                                                      (g$label->binding$7337$1yk2we
                                                        g$label$9493$1yk2we
                                                        g$r$9481$1yk2we))))
                                                  (g$id->label$7335$1yk2we
                                                    g$e$9480$1yk2we))))
                                              g$ls/false$9490$1yk2we)
                                            ((case-lambda
                                               ((g$t$9502$1yk2we)
                                                ((case-lambda
                                                   ((g$ls/false$9503$1yk2we)
                                                    (if (if g$ls/false$9503$1yk2we
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9504$1yk2we
                                                                   g$e$9505$1yk2we)
                                                                 (g$ellipsis?$9483$1yk2we
                                                                   g$dots$9504$1yk2we)))
                                                              g$ls/false$9503$1yk2we))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9506$1yk2we
                                                             g$e$9507$1yk2we)
                                                           (if g$vec?$9484$1yk2we
                                                             (g$syntax-violation$7711$1yk2we
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9479$1yk2we)
                                                             (g$gen-syntax$9419$1yk2we
                                                               g$src$9479$1yk2we
                                                               g$e$9507$1yk2we
                                                               g$r$9481$1yk2we
                                                               g$maps$9482$1yk2we
                                                               (case-lambda
                                                                 ((g$x$9508$1yk2we)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9503$1yk2we)
                                                      ((case-lambda
                                                         ((g$t$9509$1yk2we)
                                                          ((case-lambda
                                                             ((g$ls/false$9510$1yk2we)
                                                              (if (if g$ls/false$9510$1yk2we
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9511$1yk2we
                                                                             g$dots$9512$1yk2we
                                                                             g$y$9513$1yk2we)
                                                                           (g$ellipsis?$9483$1yk2we
                                                                             g$dots$9512$1yk2we)))
                                                                        g$ls/false$9510$1yk2we))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9514$1yk2we
                                                                       g$dots$9515$1yk2we
                                                                       g$y$9516$1yk2we)
                                                                     ((letrec ((g$f$9517$1yk2we
                                                                                 (case-lambda
                                                                                   ((g$y$9518$1yk2we
                                                                                      g$k$9519$1yk2we)
                                                                                    ((case-lambda
                                                                                       ((g$t$9520$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9521$1yk2we)
                                                                                            (if g$ls/false$9521$1yk2we
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9519$1yk2we
                                                                                                     g$maps$9482$1yk2we)))
                                                                                                g$ls/false$9521$1yk2we)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9522$1yk2we)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9523$1yk2we)
                                                                                                      (if (if g$ls/false$9523$1yk2we
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9524$1yk2we
                                                                                                                     g$y$9525$1yk2we)
                                                                                                                   (g$ellipsis?$9483$1yk2we
                                                                                                                     g$dots$9524$1yk2we)))
                                                                                                                g$ls/false$9523$1yk2we))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9526$1yk2we
                                                                                                               g$y$9527$1yk2we)
                                                                                                             (g$f$9517$1yk2we
                                                                                                               g$y$9527$1yk2we
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9528$1yk2we)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9519$1yk2we
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9528$1yk2we))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9531$1yk2we
                                                                                                                         g$maps$9532$1yk2we)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9533$1yk2we
                                                                                                                             g$x$9534$1yk2we)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9533$1yk2we))
                                                                                                                             (g$syntax-violation$7711$1yk2we
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9479$1yk2we)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9422$1yk2we
                                                                                                                                 g$x$9534$1yk2we
                                                                                                                                 (car g$maps$9533$1yk2we))
                                                                                                                               (cdr g$maps$9533$1yk2we)))))
                                                                                                                        g$maps$9532$1yk2we
                                                                                                                        g$x$9531$1yk2we)))))))))
                                                                                                          g$ls/false$9523$1yk2we)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9535$1yk2we)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9536$1yk2we)
                                                                                                                (if g$ls/false$9536$1yk2we
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9419$1yk2we
                                                                                                                              g$src$9479$1yk2we
                                                                                                                              g$y$9518$1yk2we
                                                                                                                              g$r$9481$1yk2we
                                                                                                                              g$maps$9482$1yk2we
                                                                                                                              g$ellipsis?$9483$1yk2we
                                                                                                                              g$vec?$9484$1yk2we)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9539$1yk2we
                                                                                                                              g$maps$9540$1yk2we)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9541$1yk2we
                                                                                                                                  g$y$9542$1yk2we)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9519$1yk2we
                                                                                                                                       g$maps$9541$1yk2we)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9545$1yk2we
                                                                                                                                       g$maps$9546$1yk2we)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9547$1yk2we
                                                                                                                                           g$x$9548$1yk2we)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9421$1yk2we
                                                                                                                                             g$x$9548$1yk2we
                                                                                                                                             g$y$9542$1yk2we)
                                                                                                                                           g$maps$9547$1yk2we)))
                                                                                                                                      g$maps$9546$1yk2we
                                                                                                                                      g$x$9545$1yk2we))))))
                                                                                                                             g$maps$9540$1yk2we
                                                                                                                             g$y$9539$1yk2we))))))
                                                                                                                    g$ls/false$9536$1yk2we)
                                                                                                                  (g$syntax-violation$7711$1yk2we
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9535$1yk2we))))
                                                                                                             (g$syntax-dispatch$7600$1yk2we
                                                                                                               g$t$9535$1yk2we
                                                                                                               '_))))
                                                                                                         g$t$9522$1yk2we))))
                                                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                                                     g$t$9522$1yk2we
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9520$1yk2we))))
                                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                                           g$t$9520$1yk2we
                                                                                           '()))))
                                                                                     g$y$9518$1yk2we)))))
                                                                        g$f$9517$1yk2we)
                                                                      g$y$9516$1yk2we
                                                                      (case-lambda
                                                                        ((g$maps$9549$1yk2we)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9419$1yk2we
                                                                                g$src$9479$1yk2we
                                                                                g$x$9514$1yk2we
                                                                                g$r$9481$1yk2we
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9549$1yk2we)
                                                                                g$ellipsis?$9483$1yk2we
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9552$1yk2we
                                                                                g$maps$9553$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$maps$9554$1yk2we
                                                                                    g$x$9555$1yk2we)
                                                                                  (if (null?
                                                                                        (car g$maps$9554$1yk2we))
                                                                                    (g$syntax-violation$7711$1yk2we
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9479$1yk2we)
                                                                                    (values
                                                                                      (g$gen-map$9423$1yk2we
                                                                                        g$x$9555$1yk2we
                                                                                        (car g$maps$9554$1yk2we))
                                                                                      (cdr g$maps$9554$1yk2we)))))
                                                                               g$maps$9553$1yk2we
                                                                               g$x$9552$1yk2we)))))))))
                                                                  g$ls/false$9510$1yk2we)
                                                                ((case-lambda
                                                                   ((g$t$9556$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9557$1yk2we)
                                                                        (if g$ls/false$9557$1yk2we
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9558$1yk2we
                                                                                 g$y$9559$1yk2we)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9419$1yk2we
                                                                                      g$src$9479$1yk2we
                                                                                      g$x$9558$1yk2we
                                                                                      g$r$9481$1yk2we
                                                                                      g$maps$9482$1yk2we
                                                                                      g$ellipsis?$9483$1yk2we
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9562$1yk2we
                                                                                      g$maps$9563$1yk2we)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9564$1yk2we
                                                                                          g$xnew$9565$1yk2we)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9419$1yk2we
                                                                                               g$src$9479$1yk2we
                                                                                               g$y$9559$1yk2we
                                                                                               g$r$9481$1yk2we
                                                                                               g$maps$9564$1yk2we
                                                                                               g$ellipsis?$9483$1yk2we
                                                                                               g$vec?$9484$1yk2we)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9568$1yk2we
                                                                                               g$maps$9569$1yk2we)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9570$1yk2we
                                                                                                   g$ynew$9571$1yk2we)
                                                                                                 (values
                                                                                                   (g$gen-cons$9424$1yk2we
                                                                                                     g$e$9480$1yk2we
                                                                                                     g$x$9558$1yk2we
                                                                                                     g$y$9559$1yk2we
                                                                                                     g$xnew$9565$1yk2we
                                                                                                     g$ynew$9571$1yk2we)
                                                                                                   g$maps$9570$1yk2we)))
                                                                                              g$maps$9569$1yk2we
                                                                                              g$ynew$9568$1yk2we))))))
                                                                                     g$maps$9563$1yk2we
                                                                                     g$xnew$9562$1yk2we))))))
                                                                            g$ls/false$9557$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$9572$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9573$1yk2we)
                                                                                  (if g$ls/false$9573$1yk2we
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9574$1yk2we)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9419$1yk2we
                                                                                                g$src$9479$1yk2we
                                                                                                g$ls$9574$1yk2we
                                                                                                g$r$9481$1yk2we
                                                                                                g$maps$9482$1yk2we
                                                                                                g$ellipsis?$9483$1yk2we
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9577$1yk2we
                                                                                                g$maps$9578$1yk2we)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9579$1yk2we
                                                                                                    g$lsnew$9580$1yk2we)
                                                                                                  (values
                                                                                                    (g$gen-vector$9425$1yk2we
                                                                                                      g$e$9480$1yk2we
                                                                                                      g$ls$9574$1yk2we
                                                                                                      g$lsnew$9580$1yk2we)
                                                                                                    g$maps$9579$1yk2we)))
                                                                                               g$maps$9578$1yk2we
                                                                                               g$lsnew$9577$1yk2we))))))
                                                                                      g$ls/false$9573$1yk2we)
                                                                                    ((case-lambda
                                                                                       ((g$t$9581$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9582$1yk2we)
                                                                                            (if g$ls/false$9582$1yk2we
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9480$1yk2we)
                                                                                                     g$maps$9482$1yk2we)))
                                                                                                g$ls/false$9582$1yk2we)
                                                                                              (g$syntax-violation$7711$1yk2we
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9581$1yk2we))))
                                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                                           g$t$9581$1yk2we
                                                                                           '_))))
                                                                                     g$t$9572$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$9572$1yk2we
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9556$1yk2we))))
                                                                     (g$syntax-dispatch$7600$1yk2we
                                                                       g$t$9556$1yk2we
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9509$1yk2we))))
                                                           (g$syntax-dispatch$7600$1yk2we
                                                             g$t$9509$1yk2we
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9502$1yk2we))))
                                                 (g$syntax-dispatch$7600$1yk2we
                                                   g$t$9502$1yk2we
                                                   '(any any)))))
                                             g$t$9489$1yk2we))))
                                       (g$syntax-dispatch$7600$1yk2we
                                         g$t$9489$1yk2we
                                         'any))))
                                   g$t$9485$1yk2we))))
                             (g$syntax-dispatch$7600$1yk2we
                               g$t$9485$1yk2we
                               'any))))
                         g$e$9480$1yk2we))))
                   (g$gen-ref$9420$1yk2we
                     (case-lambda
                       ((g$src$9466$1yk2we
                          g$var$9467$1yk2we
                          g$level$9468$1yk2we
                          g$maps$9469$1yk2we)
                        (if (= g$level$9468$1yk2we '0)
                          (values g$var$9467$1yk2we g$maps$9469$1yk2we)
                          (if (null? g$maps$9469$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9466$1yk2we)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9420$1yk2we
                                   g$src$9466$1yk2we
                                   g$var$9467$1yk2we
                                   (- g$level$9468$1yk2we '1)
                                   (cdr g$maps$9469$1yk2we))))
                              (case-lambda
                                ((g$outer-var$9472$1yk2we
                                   g$outer-maps$9473$1yk2we)
                                 ((case-lambda
                                    ((g$outer-maps$9474$1yk2we
                                       g$outer-var$9475$1yk2we)
                                     ((case-lambda
                                        ((g$t$9476$1yk2we)
                                         (if g$t$9476$1yk2we
                                           ((case-lambda
                                              ((g$b$9477$1yk2we)
                                               (values
                                                 (cdr g$b$9477$1yk2we)
                                                 g$maps$9469$1yk2we)))
                                            g$t$9476$1yk2we)
                                           ((case-lambda
                                              ((g$inner-var$9478$1yk2we)
                                               (values
                                                 g$inner-var$9478$1yk2we
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9475$1yk2we
                                                       g$inner-var$9478$1yk2we)
                                                     (car g$maps$9469$1yk2we))
                                                   g$outer-maps$9474$1yk2we))))
                                            (g$gen-lexical$7266$1yk2we 'tmp)))))
                                      (assq
                                        g$outer-var$9475$1yk2we
                                        (car g$maps$9469$1yk2we)))))
                                  g$outer-maps$9473$1yk2we
                                  g$outer-var$9472$1yk2we)))))))))
                   (g$gen-append$9421$1yk2we
                     (case-lambda
                       ((g$x$9464$1yk2we g$y$9465$1yk2we)
                        (if (equal? g$y$9465$1yk2we ''())
                          g$x$9464$1yk2we
                          (list 'append g$x$9464$1yk2we g$y$9465$1yk2we)))))
                   (g$gen-mappend$9422$1yk2we
                     (case-lambda
                       ((g$e$9462$1yk2we g$map-env$9463$1yk2we)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9423$1yk2we
                            g$e$9462$1yk2we
                            g$map-env$9463$1yk2we)))))
                   (g$gen-map$9423$1yk2we
                     (case-lambda
                       ((g$e$9453$1yk2we g$map-env$9454$1yk2we)
                        ((case-lambda
                           ((g$formals$9455$1yk2we g$actuals$9456$1yk2we)
                            (if (eq? (car g$e$9453$1yk2we) 'ref)
                              (car g$actuals$9456$1yk2we)
                              (if (g$for-all$5480$1yk2we
                                    (case-lambda
                                      ((g$x$9457$1yk2we)
                                       (if (eq? (car g$x$9457$1yk2we) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$4999$1yk2we
                                               g$x$9457$1yk2we)
                                             g$formals$9455$1yk2we))
                                         '#f)))
                                    (cdr g$e$9453$1yk2we))
                                ((case-lambda
                                   ((g$args$9458$1yk2we)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9453$1yk2we))
                                        g$args$9458$1yk2we))))
                                 (map ((case-lambda
                                         ((g$r$9459$1yk2we)
                                          (case-lambda
                                            ((g$x$9460$1yk2we)
                                             (cdr (assq
                                                    (g$cadr$4999$1yk2we
                                                      g$x$9460$1yk2we)
                                                    g$r$9459$1yk2we))))))
                                       (map cons
                                            g$formals$9455$1yk2we
                                            g$actuals$9456$1yk2we))
                                      (cdr g$e$9453$1yk2we)))
                                (g$cons*$5482$1yk2we
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9455$1yk2we
                                    g$e$9453$1yk2we)
                                  g$actuals$9456$1yk2we)))))
                         (map cdr g$map-env$9454$1yk2we)
                         (map (case-lambda
                                ((g$x$9461$1yk2we)
                                 (list 'ref (car g$x$9461$1yk2we))))
                              g$map-env$9454$1yk2we)))))
                   (g$gen-cons$9424$1yk2we
                     (case-lambda
                       ((g$e$9445$1yk2we
                          g$x$9446$1yk2we
                          g$y$9447$1yk2we
                          g$xnew$9448$1yk2we
                          g$ynew$9449$1yk2we)
                        ((case-lambda
                           ((g$t$9450$1yk2we)
                            (if (memv g$t$9450$1yk2we '(quote))
                              (if (eq? (car g$xnew$9448$1yk2we) 'quote)
                                ((case-lambda
                                   ((g$xnew$9451$1yk2we g$ynew$9452$1yk2we)
                                    (if (if (eq? g$xnew$9451$1yk2we
                                                 g$x$9446$1yk2we)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9452$1yk2we
                                                 g$y$9447$1yk2we))
                                          '#f)
                                      (list 'quote g$e$9445$1yk2we)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9451$1yk2we
                                          g$ynew$9452$1yk2we)))))
                                 (g$cadr$4999$1yk2we g$xnew$9448$1yk2we)
                                 (g$cadr$4999$1yk2we g$ynew$9449$1yk2we))
                                (if (null?
                                      (g$cadr$4999$1yk2we g$ynew$9449$1yk2we))
                                  (list 'list g$xnew$9448$1yk2we)
                                  (list
                                    'cons
                                    g$xnew$9448$1yk2we
                                    g$ynew$9449$1yk2we)))
                              (if (memv g$t$9450$1yk2we '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9448$1yk2we
                                    (cdr g$ynew$9449$1yk2we)))
                                (list
                                  'cons
                                  g$xnew$9448$1yk2we
                                  g$ynew$9449$1yk2we)))))
                         (car g$ynew$9449$1yk2we)))))
                   (g$gen-vector$9425$1yk2we
                     (case-lambda
                       ((g$e$9442$1yk2we g$ls$9443$1yk2we g$lsnew$9444$1yk2we)
                        (if (eq? (car g$lsnew$9444$1yk2we) 'quote)
                          (if (eq? (g$cadr$4999$1yk2we g$lsnew$9444$1yk2we)
                                   g$ls$9443$1yk2we)
                            (list 'quote g$e$9442$1yk2we)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$4999$1yk2we g$lsnew$9444$1yk2we))))
                          (if (eq? (car g$lsnew$9444$1yk2we) 'list)
                            (cons 'vector (cdr g$lsnew$9444$1yk2we))
                            (list 'list->vector g$lsnew$9444$1yk2we))))))
                   (g$regen$9426$1yk2we
                     (case-lambda
                       ((g$x$9439$1yk2we)
                        ((case-lambda
                           ((g$t$9440$1yk2we)
                            (if (memv g$t$9440$1yk2we '(ref))
                              (g$cadr$4999$1yk2we g$x$9439$1yk2we)
                              (if (memv g$t$9440$1yk2we '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$4999$1yk2we g$x$9439$1yk2we))
                                (if (memv g$t$9440$1yk2we '(quote))
                                  (list
                                    'quote
                                    (g$cadr$4999$1yk2we g$x$9439$1yk2we))
                                  (if (memv g$t$9440$1yk2we '(lambda))
                                    (g$build-lambda$7253$1yk2we
                                      '#f
                                      (g$cadr$4999$1yk2we g$x$9439$1yk2we)
                                      (g$regen$9426$1yk2we
                                        (g$caddr$5005$1yk2we g$x$9439$1yk2we)))
                                    (if (memv g$t$9440$1yk2we '(map))
                                      ((case-lambda
                                         ((g$ls$9441$1yk2we)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9441$1yk2we)))
                                       (map g$regen$9426$1yk2we
                                            (cdr g$x$9439$1yk2we)))
                                      (cons
                                        (list 'primitive (car g$x$9439$1yk2we))
                                        (map g$regen$9426$1yk2we
                                             (cdr g$x$9439$1yk2we))))))))))
                         (car g$x$9439$1yk2we))))))
           (case-lambda
             ((g$e$9427$1yk2we g$r$9428$1yk2we g$mr$9429$1yk2we)
              ((case-lambda
                 ((g$t$9430$1yk2we)
                  ((case-lambda
                     ((g$ls/false$9431$1yk2we)
                      (if g$ls/false$9431$1yk2we
                        (apply
                          (case-lambda
                            ((g$x$9432$1yk2we)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9419$1yk2we
                                    g$e$9427$1yk2we
                                    g$x$9432$1yk2we
                                    g$r$9428$1yk2we
                                    '()
                                    g$ellipsis?$7601$1yk2we
                                    '#f)))
                               (case-lambda
                                 ((g$e$9435$1yk2we g$maps$9436$1yk2we)
                                  ((case-lambda
                                     ((g$maps$9437$1yk2we g$e$9438$1yk2we)
                                      (g$regen$9426$1yk2we g$e$9438$1yk2we)))
                                   g$maps$9436$1yk2we
                                   g$e$9435$1yk2we))))))
                          g$ls/false$9431$1yk2we)
                        (g$syntax-violation$7711$1yk2we
                          '#f
                          '"invalid syntax"
                          g$t$9430$1yk2we))))
                   (g$syntax-dispatch$7600$1yk2we g$t$9430$1yk2we '(_ any)))))
               g$e$9427$1yk2we))))))))
   (g$core-macro-transformer$7607$1yk2we
     g$core-macro-transformer$11067$1yk2we
     (case-lambda
       ((g$name$9583$1yk2we)
        ((case-lambda
           ((g$t$9584$1yk2we)
            (if (memv g$t$9584$1yk2we '(quote))
              g$quote-transformer$7560$1yk2we
              (if (memv g$t$9584$1yk2we '(lambda))
                g$lambda-transformer$7562$1yk2we
                (if (memv g$t$9584$1yk2we '(case-lambda))
                  g$case-lambda-transformer$7561$1yk2we
                  (if (memv g$t$9584$1yk2we '(letrec))
                    g$letrec-transformer$7550$1yk2we
                    (if (memv g$t$9584$1yk2we '(letrec*))
                      g$letrec*-transformer$7551$1yk2we
                      (if (memv g$t$9584$1yk2we '(if))
                        g$if-transformer$7558$1yk2we
                        (if (memv g$t$9584$1yk2we '(foreign-call))
                          g$foreign-call-transformer$7598$1yk2we
                          (if (memv g$t$9584$1yk2we '(syntax-case))
                            g$syntax-case-transformer$7604$1yk2we
                            (if (memv g$t$9584$1yk2we '(syntax))
                              g$syntax-transformer$7606$1yk2we
                              (if (memv g$t$9584$1yk2we '(type-descriptor))
                                g$type-descriptor-transformer$7553$1yk2we
                                (if (memv
                                      g$t$9584$1yk2we
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7554$1yk2we
                                  (if (memv
                                        g$t$9584$1yk2we
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7555$1yk2we
                                    (if (memv
                                          g$t$9584$1yk2we
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7552$1yk2we
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9583$1yk2we))))))))))))))))
         g$name$9583$1yk2we))))
   (g$file-options-macro$7608$1yk2we
     g$file-options-macro$11068$1yk2we
     (case-lambda
       ((g$x$9585$1yk2we)
        (letrec* ((g$valid-option?$9586$1yk2we
                    (case-lambda
                      ((g$x$9591$1yk2we)
                       (if (g$id?$7322$1yk2we g$x$9591$1yk2we)
                         (begin
                           '#f
                           (memq
                             (g$id->sym$7323$1yk2we g$x$9591$1yk2we)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9587$1yk2we)
              ((case-lambda
                 ((g$ls/false$9588$1yk2we)
                  (if (if g$ls/false$9588$1yk2we
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9589$1yk2we)
                               (if (g$for-all$5480$1yk2we
                                     g$valid-option?$9586$1yk2we
                                     g$opt*$9589$1yk2we)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6592$1yk2we
                                     (map g$id->sym$7323$1yk2we
                                          g$opt*$9589$1yk2we)))
                                 '#f)))
                            g$ls/false$9588$1yk2we))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9590$1yk2we)
                         (g$bless$7563$1yk2we
                           (list
                             'quote
                             (g$file-options-spec$6592$1yk2we
                               (map g$id->sym$7323$1yk2we
                                    g$opt*$9590$1yk2we))))))
                      g$ls/false$9588$1yk2we)
                    (g$syntax-violation$7711$1yk2we
                      '#f
                      '"invalid syntax"
                      g$t$9587$1yk2we))))
               (g$syntax-dispatch$7600$1yk2we
                 g$t$9587$1yk2we
                 '(_ . each-any)))))
           g$x$9585$1yk2we)))))
   (g$symbol-macro$7609$1yk2we
     g$symbol-macro$11069$1yk2we
     (case-lambda
       ((g$x$9592$1yk2we g$set$9593$1yk2we)
        ((case-lambda
           ((g$t$9594$1yk2we)
            ((case-lambda
               ((g$ls/false$9595$1yk2we)
                (if (if g$ls/false$9595$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9596$1yk2we)
                             (if (g$id?$7322$1yk2we g$name$9596$1yk2we)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7323$1yk2we g$name$9596$1yk2we)
                                   g$set$9593$1yk2we))
                               '#f)))
                          g$ls/false$9595$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9597$1yk2we)
                       (g$bless$7563$1yk2we (list 'quote g$name$9597$1yk2we))))
                    g$ls/false$9595$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$9594$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$9594$1yk2we '(_ any)))))
         g$x$9592$1yk2we))))
   (g$macro-transformer$7610$1yk2we
     g$macro-transformer$11070$1yk2we
     (case-lambda
       ((g$x$9598$1yk2we)
        (if (procedure? g$x$9598$1yk2we)
          g$x$9598$1yk2we
          (if (symbol? g$x$9598$1yk2we)
            ((case-lambda
               ((g$t$9599$1yk2we)
                (if (memv g$t$9599$1yk2we '(define-record-type))
                  g$define-record-type-macro$7594$1yk2we
                  (if (memv g$t$9599$1yk2we '(define-struct))
                    g$define-struct-macro$7593$1yk2we
                    (if (memv g$t$9599$1yk2we '(include))
                      g$include-macro$7588$1yk2we
                      (if (memv g$t$9599$1yk2we '(cond))
                        g$cond-macro$7586$1yk2we
                        (if (memv g$t$9599$1yk2we '(let))
                          g$let-macro$7566$1yk2we
                          (if (memv g$t$9599$1yk2we '(do))
                            g$do-macro$7582$1yk2we
                            (if (memv g$t$9599$1yk2we '(or))
                              g$or-macro$7584$1yk2we
                              (if (memv g$t$9599$1yk2we '(and))
                                g$and-macro$7585$1yk2we
                                (if (memv g$t$9599$1yk2we '(let*))
                                  g$let*-macro$7583$1yk2we
                                  (if (memv g$t$9599$1yk2we '(let-values))
                                    g$let-values-macro$7567$1yk2we
                                    (if (memv g$t$9599$1yk2we '(let*-values))
                                      g$let*-values-macro$7568$1yk2we
                                      (if (memv g$t$9599$1yk2we '(syntax-rules))
                                        g$syntax-rules-macro$7590$1yk2we
                                        (if (memv g$t$9599$1yk2we '(quasiquote))
                                          g$quasiquote-macro$7591$1yk2we
                                          (if (memv
                                                g$t$9599$1yk2we
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7592$1yk2we
                                            (if (memv
                                                  g$t$9599$1yk2we
                                                  '(with-syntax))
                                              g$with-syntax-macro$7564$1yk2we
                                              (if (memv g$t$9599$1yk2we '(when))
                                                g$when-macro$7556$1yk2we
                                                (if (memv
                                                      g$t$9599$1yk2we
                                                      '(unless))
                                                  g$unless-macro$7557$1yk2we
                                                  (if (memv
                                                        g$t$9599$1yk2we
                                                        '(case))
                                                    g$case-macro$7559$1yk2we
                                                    (if (memv
                                                          g$t$9599$1yk2we
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7581$1yk2we
                                                      (if (memv
                                                            g$t$9599$1yk2we
                                                            '(time))
                                                        g$time-macro$7577$1yk2we
                                                        (if (memv
                                                              g$t$9599$1yk2we
                                                              '(delay))
                                                          g$delay-macro$7578$1yk2we
                                                          (if (memv
                                                                g$t$9599$1yk2we
                                                                '(assert))
                                                            g$assert-macro$7579$1yk2we
                                                            (if (memv
                                                                  g$t$9599$1yk2we
                                                                  '(endianness))
                                                              g$endianness-macro$7580$1yk2we
                                                              (if (memv
                                                                    g$t$9599$1yk2we
                                                                    '(guard))
                                                                g$guard-macro$7575$1yk2we
                                                                (if (memv
                                                                      g$t$9599$1yk2we
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7576$1yk2we
                                                                  (if (memv
                                                                        g$t$9599$1yk2we
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7569$1yk2we
                                                                    (if (memv
                                                                          g$t$9599$1yk2we
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7570$1yk2we
                                                                      (if (memv
                                                                            g$t$9599$1yk2we
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7571$1yk2we
                                                                        (if (memv
                                                                              g$t$9599$1yk2we
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7573$1yk2we
                                                                          (if (memv
                                                                                g$t$9599$1yk2we
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7574$1yk2we
                                                                            (if (memv
                                                                                  g$t$9599$1yk2we
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7595$1yk2we
                                                                              (if (memv
                                                                                    g$t$9599$1yk2we
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7597$1yk2we
                                                                                (if (memv
                                                                                      g$t$9599$1yk2we
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7589$1yk2we
                                                                                  (if (memv
                                                                                        g$t$9599$1yk2we
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9600$1yk2we)
                                                                                       (g$symbol-macro$7609$1yk2we
                                                                                         g$x$9600$1yk2we
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9599$1yk2we
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9601$1yk2we)
                                                                                         (g$symbol-macro$7609$1yk2we
                                                                                           g$x$9601$1yk2we
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9599$1yk2we
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9602$1yk2we)
                                                                                           (g$symbol-macro$7609$1yk2we
                                                                                             g$x$9602$1yk2we
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9599$1yk2we
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7608$1yk2we
                                                                                          (if (memv
                                                                                                g$t$9599$1yk2we
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7596$1yk2we
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9598$1yk2we)))))))))))))))))))))))))))))))))))))))))
             g$x$9598$1yk2we)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9598$1yk2we))))))
   (g$local-macro-transformer$7611$1yk2we
     g$local-macro-transformer$11071$1yk2we
     (case-lambda ((g$x$9603$1yk2we) (car g$x$9603$1yk2we))))
   (g$do-macro-call$7612$1yk2we
     g$do-macro-call$11072$1yk2we
     (case-lambda
       ((g$transformer$9604$1yk2we g$expr$9605$1yk2we)
        ((case-lambda
           ((g$out$9606$1yk2we)
            (begin
              ((letrec ((g$f$9607$1yk2we
                          (case-lambda
                            ((g$x$9608$1yk2we)
                             (if (not (g$stx?$7294$1yk2we g$x$9608$1yk2we))
                               (if (pair? g$x$9608$1yk2we)
                                 (begin
                                   (g$f$9607$1yk2we (car g$x$9608$1yk2we))
                                   (g$f$9607$1yk2we (cdr g$x$9608$1yk2we)))
                                 (if (vector? g$x$9608$1yk2we)
                                   (vector-for-each
                                     g$f$9607$1yk2we
                                     g$x$9608$1yk2we)
                                   (if (symbol? g$x$9608$1yk2we)
                                     (g$syntax-violation$7711$1yk2we
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9605$1yk2we
                                       g$x$9608$1yk2we)
                                     (void))))
                               (void))))))
                 g$f$9607$1yk2we)
               g$out$9606$1yk2we)
              (g$add-mark$7311$1yk2we
                (g$gen-mark$7306$1yk2we)
                g$out$9606$1yk2we
                g$expr$9605$1yk2we))))
         (g$transformer$9604$1yk2we
           (g$add-mark$7311$1yk2we
             g$anti-mark$7307$1yk2we
             g$expr$9605$1yk2we
             '#f))))))
   (g$chi-macro$7613$1yk2we
     g$chi-macro$11073$1yk2we
     (case-lambda
       ((g$p$9609$1yk2we g$e$9610$1yk2we)
        (g$do-macro-call$7612$1yk2we
          (g$macro-transformer$7610$1yk2we g$p$9609$1yk2we)
          g$e$9610$1yk2we))))
   (g$chi-local-macro$7614$1yk2we
     g$chi-local-macro$11074$1yk2we
     (case-lambda
       ((g$p$9611$1yk2we g$e$9612$1yk2we)
        (g$do-macro-call$7612$1yk2we
          (g$local-macro-transformer$7611$1yk2we g$p$9611$1yk2we)
          g$e$9612$1yk2we))))
   (g$chi-global-macro$7615$1yk2we
     g$chi-global-macro$11075$1yk2we
     (case-lambda
       ((g$p$9613$1yk2we g$e$9614$1yk2we)
        ((case-lambda
           ((g$lib$9615$1yk2we g$loc$9616$1yk2we)
            (begin
              (g$visit-library$7138$1yk2we g$lib$9615$1yk2we)
              ((case-lambda
                 ((g$x$9617$1yk2we)
                  ((case-lambda
                     ((g$transformer$9618$1yk2we)
                      (g$do-macro-call$7612$1yk2we
                        g$transformer$9618$1yk2we
                        g$e$9614$1yk2we)))
                   (if (procedure? g$x$9617$1yk2we)
                     g$x$9617$1yk2we
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9617$1yk2we)))))
               (symbol-value g$loc$9616$1yk2we)))))
         (car g$p$9613$1yk2we)
         (cdr g$p$9613$1yk2we)))))
   (g$chi-expr*$7616$1yk2we
     g$chi-expr*$11076$1yk2we
     (case-lambda
       ((g$e*$9619$1yk2we g$r$9620$1yk2we g$mr$9621$1yk2we)
        (if (null? g$e*$9619$1yk2we)
          '()
          ((case-lambda
             ((g$e$9622$1yk2we)
              (cons
                g$e$9622$1yk2we
                (g$chi-expr*$7616$1yk2we
                  (cdr g$e*$9619$1yk2we)
                  g$r$9620$1yk2we
                  g$mr$9621$1yk2we))))
           (g$chi-expr$7618$1yk2we
             (car g$e*$9619$1yk2we)
             g$r$9620$1yk2we
             g$mr$9621$1yk2we))))))
   (g$chi-application$7617$1yk2we
     g$chi-application$11077$1yk2we
     (case-lambda
       ((g$e$9623$1yk2we g$r$9624$1yk2we g$mr$9625$1yk2we)
        ((case-lambda
           ((g$t$9626$1yk2we)
            ((case-lambda
               ((g$ls/false$9627$1yk2we)
                (if g$ls/false$9627$1yk2we
                  (apply
                    (case-lambda
                      ((g$rator$9628$1yk2we g$rands$9629$1yk2we)
                       ((case-lambda
                          ((g$rator$9630$1yk2we)
                           (cons
                             g$rator$9630$1yk2we
                             (g$chi-expr*$7616$1yk2we
                               g$rands$9629$1yk2we
                               g$r$9624$1yk2we
                               g$mr$9625$1yk2we))))
                        (g$chi-expr$7618$1yk2we
                          g$rator$9628$1yk2we
                          g$r$9624$1yk2we
                          g$mr$9625$1yk2we))))
                    g$ls/false$9627$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$9626$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$9626$1yk2we
               '(any . each-any)))))
         g$e$9623$1yk2we))))
   (g$chi-expr$7618$1yk2we
     g$chi-expr$11078$1yk2we
     (case-lambda
       ((g$e$9631$1yk2we g$r$9632$1yk2we g$mr$9633$1yk2we)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7342$1yk2we g$e$9631$1yk2we g$r$9632$1yk2we)))
          (case-lambda
            ((g$type$9637$1yk2we g$value$9638$1yk2we g$kwd$9639$1yk2we)
             ((case-lambda
                ((g$kwd$9640$1yk2we g$value$9641$1yk2we g$type$9642$1yk2we)
                 ((case-lambda
                    ((g$t$9643$1yk2we)
                     (if (memv g$t$9643$1yk2we '(core-macro))
                       ((case-lambda
                          ((g$transformer$9644$1yk2we)
                           (g$transformer$9644$1yk2we
                             g$e$9631$1yk2we
                             g$r$9632$1yk2we
                             g$mr$9633$1yk2we)))
                        (g$core-macro-transformer$7607$1yk2we
                          g$value$9641$1yk2we))
                       (if (memv g$t$9643$1yk2we '(global))
                         ((case-lambda
                            ((g$lib$9645$1yk2we)
                             ((case-lambda
                                ((g$loc$9646$1yk2we)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7652$1yk2we)
                                        g$lib$9645$1yk2we)
                                       g$loc$9646$1yk2we))))))
                              (cdr g$value$9641$1yk2we))))
                          (car g$value$9641$1yk2we))
                         (if (memv g$t$9643$1yk2we '(core-prim))
                           ((case-lambda
                              ((g$name$9647$1yk2we)
                               (list 'primitive g$name$9647$1yk2we)))
                            g$value$9641$1yk2we)
                           (if (memv g$t$9643$1yk2we '(call))
                             (g$chi-application$7617$1yk2we
                               g$e$9631$1yk2we
                               g$r$9632$1yk2we
                               g$mr$9633$1yk2we)
                             (if (memv g$t$9643$1yk2we '(lexical))
                               ((case-lambda
                                  ((g$lex$9648$1yk2we) g$lex$9648$1yk2we))
                                (g$lexical-var$7544$1yk2we g$value$9641$1yk2we))
                               (if (memv
                                     g$t$9643$1yk2we
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7618$1yk2we
                                   (g$chi-global-macro$7615$1yk2we
                                     g$value$9641$1yk2we
                                     g$e$9631$1yk2we)
                                   g$r$9632$1yk2we
                                   g$mr$9633$1yk2we)
                                 (if (memv
                                       g$t$9643$1yk2we
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7618$1yk2we
                                     (g$chi-local-macro$7614$1yk2we
                                       g$value$9641$1yk2we
                                       g$e$9631$1yk2we)
                                     g$r$9632$1yk2we
                                     g$mr$9633$1yk2we)
                                   (if (memv g$t$9643$1yk2we '(macro macro!))
                                     (g$chi-expr$7618$1yk2we
                                       (g$chi-macro$7613$1yk2we
                                         g$value$9641$1yk2we
                                         g$e$9631$1yk2we)
                                       g$r$9632$1yk2we
                                       g$mr$9633$1yk2we)
                                     (if (memv g$t$9643$1yk2we '(constant))
                                       ((case-lambda
                                          ((g$datum$9649$1yk2we)
                                           (list 'quote g$datum$9649$1yk2we)))
                                        g$value$9641$1yk2we)
                                       (if (memv g$t$9643$1yk2we '(set!))
                                         (g$chi-set!$7619$1yk2we
                                           g$e$9631$1yk2we
                                           g$r$9632$1yk2we
                                           g$mr$9633$1yk2we)
                                         (if (memv g$t$9643$1yk2we '(begin))
                                           ((case-lambda
                                              ((g$t$9650$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$9651$1yk2we)
                                                   (if g$ls/false$9651$1yk2we
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9652$1yk2we
                                                            g$x*$9653$1yk2we)
                                                          (g$build-sequence$7256$1yk2we
                                                            '#f
                                                            (g$chi-expr*$7616$1yk2we
                                                              (cons
                                                                g$x$9652$1yk2we
                                                                g$x*$9653$1yk2we)
                                                              g$r$9632$1yk2we
                                                              g$mr$9633$1yk2we))))
                                                       g$ls/false$9651$1yk2we)
                                                     (g$syntax-violation$7711$1yk2we
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9650$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$9650$1yk2we
                                                  '(_ any . each-any)))))
                                            g$e$9631$1yk2we)
                                           (if (memv
                                                 g$t$9643$1yk2we
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9654$1yk2we)
                                                 ((case-lambda
                                                    ((g$ls/false$9655$1yk2we)
                                                     (if (if g$ls/false$9655$1yk2we
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9656$1yk2we
                                                                    g$xrhs*$9657$1yk2we
                                                                    g$xbody$9658$1yk2we
                                                                    g$xbody*$9659$1yk2we)
                                                                  (if (not (g$valid-bound-ids?$7327$1yk2we
                                                                             g$xlhs*$9656$1yk2we))
                                                                    (g$syntax-violation$7711$1yk2we
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9631$1yk2we)
                                                                    (void))))
                                                               g$ls/false$9655$1yk2we))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9660$1yk2we
                                                              g$xrhs*$9661$1yk2we
                                                              g$xbody$9662$1yk2we
                                                              g$xbody*$9663$1yk2we)
                                                            ((case-lambda
                                                               ((g$xlab*$9664$1yk2we)
                                                                ((case-lambda
                                                                   ((g$xrib$9665$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$xb*$9666$1yk2we)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7256$1yk2we
                                                                              '#f
                                                                              (g$chi-expr*$7616$1yk2we
                                                                                (map (case-lambda
                                                                                       ((g$x$9667$1yk2we)
                                                                                        (g$add-subst$7312$1yk2we
                                                                                          g$xrib$9665$1yk2we
                                                                                          g$x$9667$1yk2we)))
                                                                                     (cons
                                                                                       g$xbody$9662$1yk2we
                                                                                       g$xbody*$9663$1yk2we))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9664$1yk2we
                                                                                       g$xb*$9666$1yk2we)
                                                                                  g$r$9632$1yk2we)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9664$1yk2we
                                                                                       g$xb*$9666$1yk2we)
                                                                                  g$mr$9633$1yk2we))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9668$1yk2we)
                                                                             (g$make-eval-transformer$7354$1yk2we
                                                                               (g$expand-transformer$7645$1yk2we
                                                                                 (if (eq? g$type$9642$1yk2we
                                                                                          'let-syntax)
                                                                                   g$x$9668$1yk2we
                                                                                   (g$add-subst$7312$1yk2we
                                                                                     g$xrib$9665$1yk2we
                                                                                     g$x$9668$1yk2we))
                                                                                 g$mr$9633$1yk2we))))
                                                                          g$xrhs*$9661$1yk2we))))
                                                                 (g$make-full-rib$7290$1yk2we
                                                                   g$xlhs*$9660$1yk2we
                                                                   g$xlab*$9664$1yk2we))))
                                                             (map g$gen-label$7268$1yk2we
                                                                  g$xlhs*$9660$1yk2we))))
                                                         g$ls/false$9655$1yk2we)
                                                       (g$syntax-violation$7711$1yk2we
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9654$1yk2we))))
                                                  (g$syntax-dispatch$7600$1yk2we
                                                    g$t$9654$1yk2we
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9631$1yk2we)
                                             (if (memv
                                                   g$t$9643$1yk2we
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7711$1yk2we
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9631$1yk2we)
                                               (if (memv
                                                     g$t$9643$1yk2we
                                                     '(syntax))
                                                 (g$syntax-violation$7711$1yk2we
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9631$1yk2we)
                                                 (if (memv
                                                       g$t$9643$1yk2we
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7711$1yk2we
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9669$1yk2we)
                                                           (if (memv
                                                                 g$t$9669$1yk2we
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9669$1yk2we
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9669$1yk2we
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9669$1yk2we
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9669$1yk2we
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (memv
                                                                           g$t$9669$1yk2we
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$9642$1yk2we)
                                                       '" was found where an expression was expected")
                                                     g$e$9631$1yk2we)
                                                   (if (memv
                                                         g$t$9643$1yk2we
                                                         '(mutable))
                                                     (g$syntax-violation$7711$1yk2we
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9631$1yk2we)
                                                     (g$syntax-violation$7711$1yk2we
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9631$1yk2we)))))))))))))))))))
                  g$type$9642$1yk2we)))
              g$kwd$9639$1yk2we
              g$value$9638$1yk2we
              g$type$9637$1yk2we)))))))
   (g$chi-set!$7619$1yk2we
     g$chi-set!$11079$1yk2we
     (case-lambda
       ((g$e$9670$1yk2we g$r$9671$1yk2we g$mr$9672$1yk2we)
        ((case-lambda
           ((g$t$9673$1yk2we)
            ((case-lambda
               ((g$ls/false$9674$1yk2we)
                (if (if g$ls/false$9674$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9675$1yk2we g$v$9676$1yk2we)
                             (g$id?$7322$1yk2we g$x$9675$1yk2we)))
                          g$ls/false$9674$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9677$1yk2we g$v$9678$1yk2we)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7342$1yk2we
                              g$x$9677$1yk2we
                              g$r$9671$1yk2we)))
                         (case-lambda
                           ((g$type$9682$1yk2we
                              g$value$9683$1yk2we
                              g$kwd$9684$1yk2we)
                            ((case-lambda
                               ((g$kwd$9685$1yk2we
                                  g$value$9686$1yk2we
                                  g$type$9687$1yk2we)
                                ((case-lambda
                                   ((g$t$9688$1yk2we)
                                    (if (memv g$t$9688$1yk2we '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7546$1yk2we
                                          g$value$9686$1yk2we
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7544$1yk2we
                                            g$value$9686$1yk2we)
                                          (g$chi-expr$7618$1yk2we
                                            g$v$9678$1yk2we
                                            g$r$9671$1yk2we
                                            g$mr$9672$1yk2we)))
                                      (if (memv g$t$9688$1yk2we '(core-prim))
                                        (g$syntax-violation$7711$1yk2we
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9670$1yk2we)
                                        (if (memv g$t$9688$1yk2we '(global))
                                          (g$syntax-violation$7711$1yk2we
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9670$1yk2we)
                                          (if (memv
                                                g$t$9688$1yk2we
                                                '(global-macro!))
                                            (g$chi-expr$7618$1yk2we
                                              (g$chi-global-macro$7615$1yk2we
                                                g$value$9686$1yk2we
                                                g$e$9670$1yk2we)
                                              g$r$9671$1yk2we
                                              g$mr$9672$1yk2we)
                                            (if (memv
                                                  g$t$9688$1yk2we
                                                  '(local-macro!))
                                              (g$chi-expr$7618$1yk2we
                                                (g$chi-local-macro$7614$1yk2we
                                                  g$value$9686$1yk2we
                                                  g$e$9670$1yk2we)
                                                g$r$9671$1yk2we
                                                g$mr$9672$1yk2we)
                                              (if (memv
                                                    g$t$9688$1yk2we
                                                    '(mutable))
                                                (g$syntax-violation$7711$1yk2we
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9670$1yk2we)
                                                (g$syntax-violation$7711$1yk2we
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9670$1yk2we)))))))))
                                 g$type$9687$1yk2we)))
                             g$kwd$9684$1yk2we
                             g$value$9683$1yk2we
                             g$type$9682$1yk2we))))))
                    g$ls/false$9674$1yk2we)
                  (g$syntax-violation$7711$1yk2we
                    '#f
                    '"invalid syntax"
                    g$t$9673$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$9673$1yk2we '(_ any any)))))
         g$e$9670$1yk2we))))
   (g$verify-formals$7620$1yk2we
     g$verify-formals$11080$1yk2we
     (case-lambda
       ((g$fmls$9689$1yk2we g$stx$9690$1yk2we)
        ((case-lambda
           ((g$t$9691$1yk2we)
            ((case-lambda
               ((g$ls/false$9692$1yk2we)
                (if g$ls/false$9692$1yk2we
                  (apply
                    (case-lambda
                      ((g$x*$9693$1yk2we)
                       (if (not (g$valid-bound-ids?$7327$1yk2we
                                  g$x*$9693$1yk2we))
                         (g$invalid-fmls-error$7565$1yk2we
                           g$stx$9690$1yk2we
                           g$fmls$9689$1yk2we)
                         (void))))
                    g$ls/false$9692$1yk2we)
                  ((case-lambda
                     ((g$t$9694$1yk2we)
                      ((case-lambda
                         ((g$ls/false$9695$1yk2we)
                          (if g$ls/false$9695$1yk2we
                            (apply
                              (case-lambda
                                ((g$x*$9696$1yk2we g$x$9697$1yk2we)
                                 (if (not (g$valid-bound-ids?$7327$1yk2we
                                            (cons
                                              g$x$9697$1yk2we
                                              g$x*$9696$1yk2we)))
                                   (g$invalid-fmls-error$7565$1yk2we
                                     g$stx$9690$1yk2we
                                     g$fmls$9689$1yk2we)
                                   (void))))
                              g$ls/false$9695$1yk2we)
                            ((case-lambda
                               ((g$t$9698$1yk2we)
                                ((case-lambda
                                   ((g$ls/false$9699$1yk2we)
                                    (if g$ls/false$9699$1yk2we
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9690$1yk2we)))
                                        g$ls/false$9699$1yk2we)
                                      (g$syntax-violation$7711$1yk2we
                                        '#f
                                        '"invalid syntax"
                                        g$t$9698$1yk2we))))
                                 (g$syntax-dispatch$7600$1yk2we
                                   g$t$9698$1yk2we
                                   '_))))
                             g$t$9694$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$9694$1yk2we
                         '#(each+ any () any)))))
                   g$t$9691$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$9691$1yk2we 'each-any))))
         g$fmls$9689$1yk2we))))
   (g$chi-lambda-clause$7621$1yk2we
     g$chi-lambda-clause$11081$1yk2we
     (case-lambda
       ((g$stx$9700$1yk2we
          g$fmls$9701$1yk2we
          g$body*$9702$1yk2we
          g$r$9703$1yk2we
          g$mr$9704$1yk2we)
        ((case-lambda
           ((g$t$9705$1yk2we)
            ((case-lambda
               ((g$ls/false$9706$1yk2we)
                (if g$ls/false$9706$1yk2we
                  (apply
                    (case-lambda
                      ((g$x*$9707$1yk2we)
                       (begin
                         (g$verify-formals$7620$1yk2we
                           g$fmls$9701$1yk2we
                           g$stx$9700$1yk2we)
                         ((case-lambda
                            ((g$lex*$9708$1yk2we g$lab*$9709$1yk2we)
                             (values
                               g$lex*$9708$1yk2we
                               (g$chi-internal$7629$1yk2we
                                 (g$add-subst$7312$1yk2we
                                   (g$make-full-rib$7290$1yk2we
                                     g$x*$9707$1yk2we
                                     g$lab*$9709$1yk2we)
                                   g$body*$9702$1yk2we)
                                 (g$add-lexicals$7548$1yk2we
                                   g$lab*$9709$1yk2we
                                   g$lex*$9708$1yk2we
                                   g$r$9703$1yk2we)
                                 g$mr$9704$1yk2we))))
                          (map g$gen-lexical$7266$1yk2we g$x*$9707$1yk2we)
                          (map g$gen-label$7268$1yk2we g$x*$9707$1yk2we)))))
                    g$ls/false$9706$1yk2we)
                  ((case-lambda
                     ((g$t$9710$1yk2we)
                      ((case-lambda
                         ((g$ls/false$9711$1yk2we)
                          (if g$ls/false$9711$1yk2we
                            (apply
                              (case-lambda
                                ((g$x*$9712$1yk2we g$x$9713$1yk2we)
                                 (begin
                                   (g$verify-formals$7620$1yk2we
                                     g$fmls$9701$1yk2we
                                     g$stx$9700$1yk2we)
                                   ((case-lambda
                                      ((g$lex*$9714$1yk2we
                                         g$lab*$9715$1yk2we
                                         g$lex$9716$1yk2we
                                         g$lab$9717$1yk2we)
                                       (values
                                         (append
                                           g$lex*$9714$1yk2we
                                           g$lex$9716$1yk2we)
                                         (g$chi-internal$7629$1yk2we
                                           (g$add-subst$7312$1yk2we
                                             (g$make-full-rib$7290$1yk2we
                                               (cons
                                                 g$x$9713$1yk2we
                                                 g$x*$9712$1yk2we)
                                               (cons
                                                 g$lab$9717$1yk2we
                                                 g$lab*$9715$1yk2we))
                                             g$body*$9702$1yk2we)
                                           (g$add-lexicals$7548$1yk2we
                                             (cons
                                               g$lab$9717$1yk2we
                                               g$lab*$9715$1yk2we)
                                             (cons
                                               g$lex$9716$1yk2we
                                               g$lex*$9714$1yk2we)
                                             g$r$9703$1yk2we)
                                           g$mr$9704$1yk2we))))
                                    (map g$gen-lexical$7266$1yk2we
                                         g$x*$9712$1yk2we)
                                    (map g$gen-label$7268$1yk2we
                                         g$x*$9712$1yk2we)
                                    (g$gen-lexical$7266$1yk2we g$x$9713$1yk2we)
                                    (g$gen-label$7268$1yk2we
                                      g$x$9713$1yk2we)))))
                              g$ls/false$9711$1yk2we)
                            ((case-lambda
                               ((g$t$9718$1yk2we)
                                ((case-lambda
                                   ((g$ls/false$9719$1yk2we)
                                    (if g$ls/false$9719$1yk2we
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7711$1yk2we
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9701$1yk2we)))
                                        g$ls/false$9719$1yk2we)
                                      (g$syntax-violation$7711$1yk2we
                                        '#f
                                        '"invalid syntax"
                                        g$t$9718$1yk2we))))
                                 (g$syntax-dispatch$7600$1yk2we
                                   g$t$9718$1yk2we
                                   '_))))
                             g$t$9710$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$9710$1yk2we
                         '#(each+ any () any)))))
                   g$t$9705$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$9705$1yk2we 'each-any))))
         g$fmls$9701$1yk2we))))
   (g$chi-lambda-clause*$7622$1yk2we
     g$chi-lambda-clause*$11082$1yk2we
     (case-lambda
       ((g$stx$9720$1yk2we
          g$fmls*$9721$1yk2we
          g$body**$9722$1yk2we
          g$r$9723$1yk2we
          g$mr$9724$1yk2we)
        (if (null? g$fmls*$9721$1yk2we)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7621$1yk2we
                 g$stx$9720$1yk2we
                 (car g$fmls*$9721$1yk2we)
                 (car g$body**$9722$1yk2we)
                 g$r$9723$1yk2we
                 g$mr$9724$1yk2we)))
            (case-lambda
              ((g$a$9727$1yk2we g$b$9728$1yk2we)
               ((case-lambda
                  ((g$b$9729$1yk2we g$a$9730$1yk2we)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7622$1yk2we
                          g$stx$9720$1yk2we
                          (cdr g$fmls*$9721$1yk2we)
                          (cdr g$body**$9722$1yk2we)
                          g$r$9723$1yk2we
                          g$mr$9724$1yk2we)))
                     (case-lambda
                       ((g$a*$9733$1yk2we g$b*$9734$1yk2we)
                        ((case-lambda
                           ((g$b*$9735$1yk2we g$a*$9736$1yk2we)
                            (values
                              (cons g$a$9730$1yk2we g$a*$9736$1yk2we)
                              (cons g$b$9729$1yk2we g$b*$9735$1yk2we))))
                         g$b*$9734$1yk2we
                         g$a*$9733$1yk2we))))))
                g$b$9728$1yk2we
                g$a$9727$1yk2we))))))))
   (g$chi-defun$7623$1yk2we
     g$chi-defun$11083$1yk2we
     (case-lambda
       ((g$x$9737$1yk2we g$r$9738$1yk2we g$mr$9739$1yk2we)
        ((case-lambda
           ((g$fmls$9740$1yk2we g$body*$9741$1yk2we)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7621$1yk2we
                   g$fmls$9740$1yk2we
                   g$fmls$9740$1yk2we
                   g$body*$9741$1yk2we
                   g$r$9738$1yk2we
                   g$mr$9739$1yk2we)))
              (case-lambda
                ((g$fmls$9744$1yk2we g$body$9745$1yk2we)
                 ((case-lambda
                    ((g$body$9746$1yk2we g$fmls$9747$1yk2we)
                     (g$build-lambda$7253$1yk2we
                       '#f
                       g$fmls$9747$1yk2we
                       g$body$9746$1yk2we)))
                  g$body$9745$1yk2we
                  g$fmls$9744$1yk2we))))))
         (car g$x$9737$1yk2we)
         (cdr g$x$9737$1yk2we)))))
   (g$chi-rhs$7624$1yk2we
     g$chi-rhs$11084$1yk2we
     (case-lambda
       ((g$rhs$9748$1yk2we g$r$9749$1yk2we g$mr$9750$1yk2we)
        ((case-lambda
           ((g$t$9751$1yk2we)
            (if (memv g$t$9751$1yk2we '(defun))
              (g$chi-defun$7623$1yk2we
                (cdr g$rhs$9748$1yk2we)
                g$r$9749$1yk2we
                g$mr$9750$1yk2we)
              (if (memv g$t$9751$1yk2we '(expr))
                ((case-lambda
                   ((g$expr$9752$1yk2we)
                    (g$chi-expr$7618$1yk2we
                      g$expr$9752$1yk2we
                      g$r$9749$1yk2we
                      g$mr$9750$1yk2we)))
                 (cdr g$rhs$9748$1yk2we))
                (if (memv g$t$9751$1yk2we '(top-expr))
                  ((case-lambda
                     ((g$expr$9753$1yk2we)
                      (g$build-sequence$7256$1yk2we
                        '#f
                        (list
                          (g$chi-expr$7618$1yk2we
                            g$expr$9753$1yk2we
                            g$r$9749$1yk2we
                            g$mr$9750$1yk2we)
                          (g$build-void$7257$1yk2we)))))
                   (cdr g$rhs$9748$1yk2we))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9748$1yk2we))))))
         (car g$rhs$9748$1yk2we)))))
   (g$expand-interaction-rhs*/init*$7625$1yk2we
     g$expand-interaction-rhs*/init*$11085$1yk2we
     (case-lambda
       ((g$lhs*$9754$1yk2we
          g$rhs*$9755$1yk2we
          g$init*$9756$1yk2we
          g$r$9757$1yk2we
          g$mr$9758$1yk2we)
        ((letrec ((g$f$9759$1yk2we
                    (case-lambda
                      ((g$lhs*$9760$1yk2we g$rhs*$9761$1yk2we)
                       (if (null? g$lhs*$9760$1yk2we)
                         (map (case-lambda
                                ((g$x$9762$1yk2we)
                                 (g$chi-expr$7618$1yk2we
                                   g$x$9762$1yk2we
                                   g$r$9757$1yk2we
                                   g$mr$9758$1yk2we)))
                              g$init*$9756$1yk2we)
                         ((case-lambda
                            ((g$lhs$9763$1yk2we g$rhs$9764$1yk2we)
                             ((case-lambda
                                ((g$t$9765$1yk2we)
                                 (if (memv g$t$9765$1yk2we '(defun))
                                   ((case-lambda
                                      ((g$rhs$9766$1yk2we)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9763$1yk2we
                                           g$rhs$9766$1yk2we)
                                         (g$f$9759$1yk2we
                                           (cdr g$lhs*$9760$1yk2we)
                                           (cdr g$rhs*$9761$1yk2we)))))
                                    (g$chi-defun$7623$1yk2we
                                      (cdr g$rhs$9764$1yk2we)
                                      g$r$9757$1yk2we
                                      g$mr$9758$1yk2we))
                                   (if (memv g$t$9765$1yk2we '(expr))
                                     ((case-lambda
                                        ((g$rhs$9767$1yk2we)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9763$1yk2we
                                             g$rhs$9767$1yk2we)
                                           (g$f$9759$1yk2we
                                             (cdr g$lhs*$9760$1yk2we)
                                             (cdr g$rhs*$9761$1yk2we)))))
                                      (g$chi-expr$7618$1yk2we
                                        (cdr g$rhs$9764$1yk2we)
                                        g$r$9757$1yk2we
                                        g$mr$9758$1yk2we))
                                     (if (memv g$t$9765$1yk2we '(top-expr))
                                       ((case-lambda
                                          ((g$e$9768$1yk2we)
                                           (cons
                                             g$e$9768$1yk2we
                                             (g$f$9759$1yk2we
                                               (cdr g$lhs*$9760$1yk2we)
                                               (cdr g$rhs*$9761$1yk2we)))))
                                        (g$chi-expr$7618$1yk2we
                                          (cdr g$rhs$9764$1yk2we)
                                          g$r$9757$1yk2we
                                          g$mr$9758$1yk2we))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9764$1yk2we))))))
                              (car g$rhs$9764$1yk2we))))
                          (car g$lhs*$9760$1yk2we)
                          (car g$rhs*$9761$1yk2we)))))))
           g$f$9759$1yk2we)
         g$lhs*$9754$1yk2we
         g$rhs*$9755$1yk2we))))
   (g$chi-rhs*$7626$1yk2we
     g$chi-rhs*$11086$1yk2we
     (case-lambda
       ((g$rhs*$9769$1yk2we g$r$9770$1yk2we g$mr$9771$1yk2we)
        ((letrec ((g$f$9772$1yk2we
                    (case-lambda
                      ((g$ls$9773$1yk2we)
                       (if (null? g$ls$9773$1yk2we)
                         '()
                         ((case-lambda
                            ((g$a$9774$1yk2we)
                             (cons
                               g$a$9774$1yk2we
                               (g$f$9772$1yk2we (cdr g$ls$9773$1yk2we)))))
                          (g$chi-rhs$7624$1yk2we
                            (car g$ls$9773$1yk2we)
                            g$r$9770$1yk2we
                            g$mr$9771$1yk2we)))))))
           g$f$9772$1yk2we)
         g$rhs*$9769$1yk2we))))
   (g$find-bound=?$7627$1yk2we
     g$find-bound=?$11087$1yk2we
     (case-lambda
       ((g$x$9775$1yk2we g$lhs*$9776$1yk2we g$rhs*$9777$1yk2we)
        (if (null? g$lhs*$9776$1yk2we)
          '#f
          (if (g$bound-id=?$7325$1yk2we
                g$x$9775$1yk2we
                (car g$lhs*$9776$1yk2we))
            (car g$rhs*$9777$1yk2we)
            (g$find-bound=?$7627$1yk2we
              g$x$9775$1yk2we
              (cdr g$lhs*$9776$1yk2we)
              (cdr g$rhs*$9777$1yk2we)))))))
   (g$find-dups$7628$1yk2we
     g$find-dups$11088$1yk2we
     (case-lambda
       ((g$ls$9778$1yk2we)
        ((letrec ((g$f$9779$1yk2we
                    (case-lambda
                      ((g$ls$9780$1yk2we g$dups$9781$1yk2we)
                       (if (null? g$ls$9780$1yk2we)
                         g$dups$9781$1yk2we
                         ((case-lambda
                            ((g$t$9782$1yk2we)
                             (if g$t$9782$1yk2we
                               ((case-lambda
                                  ((g$x$9783$1yk2we)
                                   (g$f$9779$1yk2we
                                     (cdr g$ls$9780$1yk2we)
                                     (cons
                                       (list
                                         (car g$ls$9780$1yk2we)
                                         g$x$9783$1yk2we)
                                       g$dups$9781$1yk2we))))
                                g$t$9782$1yk2we)
                               (g$f$9779$1yk2we
                                 (cdr g$ls$9780$1yk2we)
                                 g$dups$9781$1yk2we))))
                          (g$find-bound=?$7627$1yk2we
                            (car g$ls$9780$1yk2we)
                            (cdr g$ls$9780$1yk2we)
                            (cdr g$ls$9780$1yk2we))))))))
           g$f$9779$1yk2we)
         g$ls$9778$1yk2we
         '()))))
   (g$chi-internal$7629$1yk2we
     g$chi-internal$11089$1yk2we
     (case-lambda
       ((g$e*$9784$1yk2we g$r$9785$1yk2we g$mr$9786$1yk2we)
        ((case-lambda
           ((g$rib$9787$1yk2we)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7644$1yk2we
                   (map (case-lambda
                          ((g$x$9796$1yk2we)
                           (g$add-subst$7312$1yk2we
                             g$rib$9787$1yk2we
                             g$x$9796$1yk2we)))
                        (g$syntax->list$7321$1yk2we g$e*$9784$1yk2we))
                   g$r$9785$1yk2we
                   g$mr$9786$1yk2we
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$9787$1yk2we
                   '#f)))
              (case-lambda
                ((g$e*$9797$1yk2we
                   g$r$9798$1yk2we
                   g$mr$9799$1yk2we
                   g$lex*$9800$1yk2we
                   g$rhs*$9801$1yk2we
                   g$mod**$9802$1yk2we
                   g$kwd*$9803$1yk2we
                   g$_exp*$9804$1yk2we)
                 ((case-lambda
                    ((g$_exp*$9805$1yk2we
                       g$kwd*$9806$1yk2we
                       g$mod**$9807$1yk2we
                       g$rhs*$9808$1yk2we
                       g$lex*$9809$1yk2we
                       g$mr$9810$1yk2we
                       g$r$9811$1yk2we
                       g$e*$9812$1yk2we)
                     (begin
                       (if (null? g$e*$9812$1yk2we)
                         (g$syntax-violation$7711$1yk2we
                           '#f
                           '"no expression in body"
                           g$e*$9812$1yk2we)
                         (void))
                       ((case-lambda
                          ((g$init*$9813$1yk2we)
                           ((case-lambda
                              ((g$rhs*$9814$1yk2we)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7259$1yk2we
                                     '#f
                                     (reverse g$lex*$9809$1yk2we)
                                     (reverse g$rhs*$9814$1yk2we)
                                     (g$build-sequence$7256$1yk2we
                                       '#f
                                       g$init*$9813$1yk2we)))))))
                            (g$chi-rhs*$7626$1yk2we
                              g$rhs*$9808$1yk2we
                              g$r$9811$1yk2we
                              g$mr$9810$1yk2we))))
                        (g$chi-expr*$7616$1yk2we
                          (append
                            (apply append (reverse g$mod**$9807$1yk2we))
                            g$e*$9812$1yk2we)
                          g$r$9811$1yk2we
                          g$mr$9810$1yk2we)))))
                  g$_exp*$9804$1yk2we
                  g$kwd*$9803$1yk2we
                  g$mod**$9802$1yk2we
                  g$rhs*$9801$1yk2we
                  g$lex*$9800$1yk2we
                  g$mr$9799$1yk2we
                  g$r$9798$1yk2we
                  g$e*$9797$1yk2we))))))
         (g$make-empty-rib$7285$1yk2we)))))
   (g$parse-module$7630$1yk2we
     g$parse-module$11090$1yk2we
     (case-lambda
       ((g$e$9815$1yk2we)
        ((case-lambda
           ((g$t$9816$1yk2we)
            ((case-lambda
               ((g$ls/false$9817$1yk2we)
                (if g$ls/false$9817$1yk2we
                  (apply
                    (case-lambda
                      ((g$export*$9818$1yk2we g$b*$9819$1yk2we)
                       (begin
                         (if (not (g$for-all$5480$1yk2we
                                    g$id?$7322$1yk2we
                                    g$export*$9818$1yk2we))
                           (g$syntax-violation$7711$1yk2we
                             '#f
                             '"module exports must be identifiers"
                             g$e$9815$1yk2we)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9818$1yk2we)
                           g$b*$9819$1yk2we))))
                    g$ls/false$9817$1yk2we)
                  ((case-lambda
                     ((g$t$9820$1yk2we)
                      ((case-lambda
                         ((g$ls/false$9821$1yk2we)
                          (if g$ls/false$9821$1yk2we
                            (apply
                              (case-lambda
                                ((g$name$9822$1yk2we
                                   g$export*$9823$1yk2we
                                   g$b*$9824$1yk2we)
                                 (begin
                                   (if (not (g$id?$7322$1yk2we
                                              g$name$9822$1yk2we))
                                     (g$syntax-violation$7711$1yk2we
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9815$1yk2we)
                                     (void))
                                   (if (not (g$for-all$5480$1yk2we
                                              g$id?$7322$1yk2we
                                              g$export*$9823$1yk2we))
                                     (g$syntax-violation$7711$1yk2we
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9815$1yk2we)
                                     (void))
                                   (values
                                     g$name$9822$1yk2we
                                     (list->vector g$export*$9823$1yk2we)
                                     g$b*$9824$1yk2we))))
                              g$ls/false$9821$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$9820$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$9820$1yk2we
                         '(_ any each-any . each-any)))))
                   g$t$9816$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$9816$1yk2we
               '(_ each-any . each-any)))))
         g$e$9815$1yk2we))))
   (g$8764$7631$1yk2we
     g$8764$11091$1yk2we
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8767$1yk2we
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8766$7632$1yk2we g$8766$11092$1yk2we '#f)
   (g$8765$7633$1yk2we
     g$8765$11093$1yk2we
     (make-record-constructor-descriptor
       g$8764$7631$1yk2we
       '#f
       g$8766$7632$1yk2we))
   (g$module-interface?$7634$1yk2we
     g$module-interface?$11094$1yk2we
     (record-predicate g$8764$7631$1yk2we))
   (g$make-module-interface$7635$1yk2we
     g$make-module-interface$11095$1yk2we
     (record-constructor g$8765$7633$1yk2we))
   (g$module-interface-first-mark$7636$1yk2we
     g$module-interface-first-mark$11096$1yk2we
     (record-accessor g$8764$7631$1yk2we '0))
   (g$module-interface-exp-id-vec$7637$1yk2we
     g$module-interface-exp-id-vec$11097$1yk2we
     (record-accessor g$8764$7631$1yk2we '1))
   (g$module-interface-exp-lab-vec$7638$1yk2we
     g$module-interface-exp-lab-vec$11098$1yk2we
     (record-accessor g$8764$7631$1yk2we '2))
   (g$set-module-interface-first-mark!$7639$1yk2we
     g$set-module-interface-first-mark!$11099$1yk2we
     (record-mutator g$8764$7631$1yk2we '0))
   (g$set-module-interface-exp-id-vec!$7640$1yk2we
     g$set-module-interface-exp-id-vec!$11100$1yk2we
     (record-mutator g$8764$7631$1yk2we '1))
   (g$set-module-interface-exp-lab-vec!$7641$1yk2we
     g$set-module-interface-exp-lab-vec!$11101$1yk2we
     (record-mutator g$8764$7631$1yk2we '2))
   (g$module-interface-exp-id*$7642$1yk2we
     g$module-interface-exp-id*$11102$1yk2we
     (case-lambda
       ((g$iface$9825$1yk2we g$id$9826$1yk2we)
        (letrec* ((g$diff-marks$9827$1yk2we
                    (case-lambda
                      ((g$ls$9831$1yk2we g$x$9832$1yk2we)
                       (begin
                         (if (null? g$ls$9831$1yk2we)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9833$1yk2we)
                             (if (eq? g$a$9833$1yk2we g$x$9832$1yk2we)
                               '()
                               (cons
                                 g$a$9833$1yk2we
                                 (g$diff-marks$9827$1yk2we
                                   (cdr g$ls$9831$1yk2we)
                                   g$x$9832$1yk2we)))))
                          (car g$ls$9831$1yk2we)))))))
          ((case-lambda
             ((g$diff$9828$1yk2we g$id-vec$9829$1yk2we)
              (if (null? g$diff$9828$1yk2we)
                g$id-vec$9829$1yk2we
                (vector-map
                  (case-lambda
                    ((g$x$9830$1yk2we)
                     (g$make-stx$7295$1yk2we
                       (g$stx-expr$7296$1yk2we g$x$9830$1yk2we)
                       (append
                         g$diff$9828$1yk2we
                         (g$stx-mark*$7297$1yk2we g$x$9830$1yk2we))
                       '()
                       '())))
                  g$id-vec$9829$1yk2we))))
           (g$diff-marks$9827$1yk2we
             (g$stx-mark*$7297$1yk2we g$id$9826$1yk2we)
             (g$module-interface-first-mark$7636$1yk2we g$iface$9825$1yk2we))
           (g$module-interface-exp-id-vec$7637$1yk2we g$iface$9825$1yk2we))))))
   (g$chi-internal-module$7643$1yk2we
     g$chi-internal-module$11103$1yk2we
     (case-lambda
       ((g$e$9834$1yk2we
          g$r$9835$1yk2we
          g$mr$9836$1yk2we
          g$lex*$9837$1yk2we
          g$rhs*$9838$1yk2we
          g$mod**$9839$1yk2we
          g$kwd*$9840$1yk2we)
        (call-with-values
          (case-lambda (() (g$parse-module$7630$1yk2we g$e$9834$1yk2we)))
          (case-lambda
            ((g$name$9844$1yk2we g$exp-id*$9845$1yk2we g$e*$9846$1yk2we)
             ((case-lambda
                ((g$e*$9847$1yk2we g$exp-id*$9848$1yk2we g$name$9849$1yk2we)
                 ((case-lambda
                    ((g$rib$9850$1yk2we)
                     ((case-lambda
                        ((g$e*$9851$1yk2we)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7644$1yk2we
                                    g$e*$9851$1yk2we
                                    g$r$9835$1yk2we
                                    g$mr$9836$1yk2we
                                    g$lex*$9837$1yk2we
                                    g$rhs*$9838$1yk2we
                                    g$mod**$9839$1yk2we
                                    g$kwd*$9840$1yk2we
                                    '()
                                    g$rib$9850$1yk2we
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9860$1yk2we
                                    g$r$9861$1yk2we
                                    g$mr$9862$1yk2we
                                    g$lex*$9863$1yk2we
                                    g$rhs*$9864$1yk2we
                                    g$mod**$9865$1yk2we
                                    g$kwd*$9866$1yk2we
                                    g$_exp*$9867$1yk2we)
                                  ((case-lambda
                                     ((g$_exp*$9868$1yk2we
                                        g$kwd*$9869$1yk2we
                                        g$mod**$9870$1yk2we
                                        g$rhs*$9871$1yk2we
                                        g$lex*$9872$1yk2we
                                        g$mr$9873$1yk2we
                                        g$r$9874$1yk2we
                                        g$e*$9875$1yk2we)
                                      ((case-lambda
                                         ((g$exp-lab*$9876$1yk2we
                                            g$mod**$9877$1yk2we)
                                          (if (not g$name$9849$1yk2we)
                                            (values
                                              g$lex*$9872$1yk2we
                                              g$rhs*$9871$1yk2we
                                              g$exp-id*$9848$1yk2we
                                              g$exp-lab*$9876$1yk2we
                                              g$r$9874$1yk2we
                                              g$mr$9873$1yk2we
                                              g$mod**$9877$1yk2we
                                              g$kwd*$9869$1yk2we)
                                            ((case-lambda
                                               ((g$lab$9878$1yk2we
                                                  g$iface$9879$1yk2we)
                                                (values
                                                  g$lex*$9872$1yk2we
                                                  g$rhs*$9871$1yk2we
                                                  (vector g$name$9849$1yk2we)
                                                  (vector g$lab$9878$1yk2we)
                                                  (cons
                                                    (cons
                                                      g$lab$9878$1yk2we
                                                      (cons
                                                        '$module
                                                        g$iface$9879$1yk2we))
                                                    g$r$9874$1yk2we)
                                                  (cons
                                                    (cons
                                                      g$lab$9878$1yk2we
                                                      (cons
                                                        '$module
                                                        g$iface$9879$1yk2we))
                                                    g$mr$9873$1yk2we)
                                                  g$mod**$9877$1yk2we
                                                  g$kwd*$9869$1yk2we)))
                                             (g$gen-label$7268$1yk2we 'module)
                                             (g$make-module-interface$7635$1yk2we
                                               (car (g$stx-mark*$7297$1yk2we
                                                      g$name$9849$1yk2we))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9880$1yk2we)
                                                    (g$make-stx$7295$1yk2we
                                                      (g$stx-expr$7296$1yk2we
                                                        g$x$9880$1yk2we)
                                                      (g$stx-mark*$7297$1yk2we
                                                        g$x$9880$1yk2we)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9848$1yk2we)
                                               g$exp-lab*$9876$1yk2we)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9881$1yk2we)
                                            ((case-lambda
                                               ((g$t$9882$1yk2we)
                                                (if g$t$9882$1yk2we
                                                  g$t$9882$1yk2we
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7711$1yk2we
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9881$1yk2we)))))
                                             (g$id->label$7335$1yk2we
                                               (g$make-stx$7295$1yk2we
                                                 (g$id->sym$7323$1yk2we
                                                   g$x$9881$1yk2we)
                                                 (g$stx-mark*$7297$1yk2we
                                                   g$x$9881$1yk2we)
                                                 (list g$rib$9850$1yk2we)
                                                 '())))))
                                         g$exp-id*$9848$1yk2we)
                                       (cons
                                         g$e*$9875$1yk2we
                                         g$mod**$9870$1yk2we))))
                                   g$_exp*$9867$1yk2we
                                   g$kwd*$9866$1yk2we
                                   g$mod**$9865$1yk2we
                                   g$rhs*$9864$1yk2we
                                   g$lex*$9863$1yk2we
                                   g$mr$9862$1yk2we
                                   g$r$9861$1yk2we
                                   g$e*$9860$1yk2we)))))))))
                      (map (case-lambda
                             ((g$x$9883$1yk2we)
                              (g$add-subst$7312$1yk2we
                                g$rib$9850$1yk2we
                                g$x$9883$1yk2we)))
                           (g$syntax->list$7321$1yk2we g$e*$9847$1yk2we)))))
                  (g$make-empty-rib$7285$1yk2we))))
              g$e*$9846$1yk2we
              g$exp-id*$9845$1yk2we
              g$name$9844$1yk2we)))))))
   (g$chi-body*$7644$1yk2we
     g$chi-body*$11104$1yk2we
     (case-lambda
       ((g$e*$9884$1yk2we
          g$r$9885$1yk2we
          g$mr$9886$1yk2we
          g$lex*$9887$1yk2we
          g$rhs*$9888$1yk2we
          g$mod**$9889$1yk2we
          g$kwd*$9890$1yk2we
          g$exp*$9891$1yk2we
          g$rib$9892$1yk2we
          g$top?$9893$1yk2we)
        (if (null? g$e*$9884$1yk2we)
          (values
            g$e*$9884$1yk2we
            g$r$9885$1yk2we
            g$mr$9886$1yk2we
            g$lex*$9887$1yk2we
            g$rhs*$9888$1yk2we
            g$mod**$9889$1yk2we
            g$kwd*$9890$1yk2we
            g$exp*$9891$1yk2we)
          ((case-lambda
             ((g$e$9894$1yk2we)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7342$1yk2we g$e$9894$1yk2we g$r$9885$1yk2we)))
                (case-lambda
                  ((g$type$9898$1yk2we g$value$9899$1yk2we g$kwd$9900$1yk2we)
                   ((case-lambda
                      ((g$kwd$9901$1yk2we
                         g$value$9902$1yk2we
                         g$type$9903$1yk2we)
                       ((case-lambda
                          ((g$kwd*$9904$1yk2we)
                           ((case-lambda
                              ((g$t$9905$1yk2we)
                               (if (memv g$t$9905$1yk2we '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7540$1yk2we
                                        g$e$9894$1yk2we)))
                                   (case-lambda
                                     ((g$id$9908$1yk2we g$rhs$9909$1yk2we)
                                      ((case-lambda
                                         ((g$rhs$9910$1yk2we g$id$9911$1yk2we)
                                          (begin
                                            (if (g$bound-id-member?$7329$1yk2we
                                                  g$id$9911$1yk2we
                                                  g$kwd*$9904$1yk2we)
                                              (g$syntax-violation$7711$1yk2we
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9894$1yk2we)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7270$1yk2we
                                                   g$id$9911$1yk2we
                                                   g$rib$9892$1yk2we)))
                                              (case-lambda
                                                ((g$lab$9914$1yk2we
                                                   g$lex$9915$1yk2we)
                                                 ((case-lambda
                                                    ((g$lex$9916$1yk2we
                                                       g$lab$9917$1yk2we)
                                                     (begin
                                                       (g$extend-rib!$7286$1yk2we
                                                         g$rib$9892$1yk2we
                                                         g$id$9911$1yk2we
                                                         g$lab$9917$1yk2we)
                                                       (g$chi-body*$7644$1yk2we
                                                         (cdr g$e*$9884$1yk2we)
                                                         (g$add-lexical$7547$1yk2we
                                                           g$lab$9917$1yk2we
                                                           g$lex$9916$1yk2we
                                                           g$r$9885$1yk2we)
                                                         g$mr$9886$1yk2we
                                                         (cons
                                                           g$lex$9916$1yk2we
                                                           g$lex*$9887$1yk2we)
                                                         (cons
                                                           g$rhs$9910$1yk2we
                                                           g$rhs*$9888$1yk2we)
                                                         g$mod**$9889$1yk2we
                                                         g$kwd*$9904$1yk2we
                                                         g$exp*$9891$1yk2we
                                                         g$rib$9892$1yk2we
                                                         g$top?$9893$1yk2we))))
                                                  g$lex$9915$1yk2we
                                                  g$lab$9914$1yk2we)))))))
                                       g$rhs$9909$1yk2we
                                       g$id$9908$1yk2we))))
                                 (if (memv g$t$9905$1yk2we '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7541$1yk2we
                                          g$e$9894$1yk2we)))
                                     (case-lambda
                                       ((g$id$9920$1yk2we g$rhs$9921$1yk2we)
                                        ((case-lambda
                                           ((g$rhs$9922$1yk2we g$id$9923$1yk2we)
                                            (begin
                                              (if (g$bound-id-member?$7329$1yk2we
                                                    g$id$9923$1yk2we
                                                    g$kwd*$9904$1yk2we)
                                                (g$syntax-violation$7711$1yk2we
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9894$1yk2we)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9924$1yk2we
                                                    g$expanded-rhs$9925$1yk2we)
                                                  (begin
                                                    (g$extend-rib!$7286$1yk2we
                                                      g$rib$9892$1yk2we
                                                      g$id$9923$1yk2we
                                                      g$lab$9924$1yk2we)
                                                    ((case-lambda
                                                       ((g$b$9926$1yk2we)
                                                        (g$chi-body*$7644$1yk2we
                                                          (cdr g$e*$9884$1yk2we)
                                                          (cons
                                                            (cons
                                                              g$lab$9924$1yk2we
                                                              g$b$9926$1yk2we)
                                                            g$r$9885$1yk2we)
                                                          (cons
                                                            (cons
                                                              g$lab$9924$1yk2we
                                                              g$b$9926$1yk2we)
                                                            g$mr$9886$1yk2we)
                                                          g$lex*$9887$1yk2we
                                                          g$rhs*$9888$1yk2we
                                                          g$mod**$9889$1yk2we
                                                          g$kwd*$9904$1yk2we
                                                          g$exp*$9891$1yk2we
                                                          g$rib$9892$1yk2we
                                                          g$top?$9893$1yk2we)))
                                                     (g$make-eval-transformer$7354$1yk2we
                                                       g$expanded-rhs$9925$1yk2we)))))
                                               (g$gen-define-label$7271$1yk2we
                                                 g$id$9923$1yk2we
                                                 g$rib$9892$1yk2we)
                                               (g$expand-transformer$7645$1yk2we
                                                 g$rhs$9922$1yk2we
                                                 g$mr$9886$1yk2we)))))
                                         g$rhs$9921$1yk2we
                                         g$id$9920$1yk2we))))
                                   (if (memv
                                         g$t$9905$1yk2we
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9927$1yk2we)
                                         ((case-lambda
                                            ((g$ls/false$9928$1yk2we)
                                             (if (if g$ls/false$9928$1yk2we
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9929$1yk2we
                                                            g$xrhs*$9930$1yk2we
                                                            g$xbody*$9931$1yk2we)
                                                          (if (not (g$valid-bound-ids?$7327$1yk2we
                                                                     g$xlhs*$9929$1yk2we))
                                                            (g$syntax-violation$7711$1yk2we
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9894$1yk2we)
                                                            (void))))
                                                       g$ls/false$9928$1yk2we))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9932$1yk2we
                                                      g$xrhs*$9933$1yk2we
                                                      g$xbody*$9934$1yk2we)
                                                    ((case-lambda
                                                       ((g$xlab*$9935$1yk2we)
                                                        ((case-lambda
                                                           ((g$xrib$9936$1yk2we)
                                                            ((case-lambda
                                                               ((g$xb*$9937$1yk2we)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7644$1yk2we
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9938$1yk2we)
                                                                                (g$add-subst$7312$1yk2we
                                                                                  g$xrib$9936$1yk2we
                                                                                  g$x$9938$1yk2we)))
                                                                             g$xbody*$9934$1yk2we)
                                                                        (cdr g$e*$9884$1yk2we))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9935$1yk2we
                                                                             g$xb*$9937$1yk2we)
                                                                        g$r$9885$1yk2we)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9935$1yk2we
                                                                             g$xb*$9937$1yk2we)
                                                                        g$mr$9886$1yk2we)
                                                                      g$lex*$9887$1yk2we
                                                                      g$rhs*$9888$1yk2we
                                                                      g$mod**$9889$1yk2we
                                                                      g$kwd*$9904$1yk2we
                                                                      g$exp*$9891$1yk2we
                                                                      g$rib$9892$1yk2we
                                                                      g$top?$9893$1yk2we))))))
                                                             (map (case-lambda
                                                                    ((g$x$9939$1yk2we)
                                                                     (g$make-eval-transformer$7354$1yk2we
                                                                       (g$expand-transformer$7645$1yk2we
                                                                         (if (eq? g$type$9903$1yk2we
                                                                                  'let-syntax)
                                                                           g$x$9939$1yk2we
                                                                           (g$add-subst$7312$1yk2we
                                                                             g$xrib$9936$1yk2we
                                                                             g$x$9939$1yk2we))
                                                                         g$mr$9886$1yk2we))))
                                                                  g$xrhs*$9933$1yk2we))))
                                                         (g$make-full-rib$7290$1yk2we
                                                           g$xlhs*$9932$1yk2we
                                                           g$xlab*$9935$1yk2we))))
                                                     (map g$gen-label$7268$1yk2we
                                                          g$xlhs*$9932$1yk2we))))
                                                 g$ls/false$9928$1yk2we)
                                               (g$syntax-violation$7711$1yk2we
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9927$1yk2we))))
                                          (g$syntax-dispatch$7600$1yk2we
                                            g$t$9927$1yk2we
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9894$1yk2we)
                                     (if (memv g$t$9905$1yk2we '(begin))
                                       ((case-lambda
                                          ((g$t$9940$1yk2we)
                                           ((case-lambda
                                              ((g$ls/false$9941$1yk2we)
                                               (if g$ls/false$9941$1yk2we
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9942$1yk2we)
                                                      (g$chi-body*$7644$1yk2we
                                                        (append
                                                          g$x*$9942$1yk2we
                                                          (cdr g$e*$9884$1yk2we))
                                                        g$r$9885$1yk2we
                                                        g$mr$9886$1yk2we
                                                        g$lex*$9887$1yk2we
                                                        g$rhs*$9888$1yk2we
                                                        g$mod**$9889$1yk2we
                                                        g$kwd*$9904$1yk2we
                                                        g$exp*$9891$1yk2we
                                                        g$rib$9892$1yk2we
                                                        g$top?$9893$1yk2we)))
                                                   g$ls/false$9941$1yk2we)
                                                 (g$syntax-violation$7711$1yk2we
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9940$1yk2we))))
                                            (g$syntax-dispatch$7600$1yk2we
                                              g$t$9940$1yk2we
                                              '(_ . each-any)))))
                                        g$e$9894$1yk2we)
                                       (if (memv
                                             g$t$9905$1yk2we
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7644$1yk2we
                                           (cons
                                             (g$add-subst$7312$1yk2we
                                               g$rib$9892$1yk2we
                                               (g$chi-global-macro$7615$1yk2we
                                                 g$value$9902$1yk2we
                                                 g$e$9894$1yk2we))
                                             (cdr g$e*$9884$1yk2we))
                                           g$r$9885$1yk2we
                                           g$mr$9886$1yk2we
                                           g$lex*$9887$1yk2we
                                           g$rhs*$9888$1yk2we
                                           g$mod**$9889$1yk2we
                                           g$kwd*$9904$1yk2we
                                           g$exp*$9891$1yk2we
                                           g$rib$9892$1yk2we
                                           g$top?$9893$1yk2we)
                                         (if (memv
                                               g$t$9905$1yk2we
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7644$1yk2we
                                             (cons
                                               (g$add-subst$7312$1yk2we
                                                 g$rib$9892$1yk2we
                                                 (g$chi-local-macro$7614$1yk2we
                                                   g$value$9902$1yk2we
                                                   g$e$9894$1yk2we))
                                               (cdr g$e*$9884$1yk2we))
                                             g$r$9885$1yk2we
                                             g$mr$9886$1yk2we
                                             g$lex*$9887$1yk2we
                                             g$rhs*$9888$1yk2we
                                             g$mod**$9889$1yk2we
                                             g$kwd*$9904$1yk2we
                                             g$exp*$9891$1yk2we
                                             g$rib$9892$1yk2we
                                             g$top?$9893$1yk2we)
                                           (if (memv
                                                 g$t$9905$1yk2we
                                                 '(macro macro!))
                                             (g$chi-body*$7644$1yk2we
                                               (cons
                                                 (g$add-subst$7312$1yk2we
                                                   g$rib$9892$1yk2we
                                                   (g$chi-macro$7613$1yk2we
                                                     g$value$9902$1yk2we
                                                     g$e$9894$1yk2we))
                                                 (cdr g$e*$9884$1yk2we))
                                               g$r$9885$1yk2we
                                               g$mr$9886$1yk2we
                                               g$lex*$9887$1yk2we
                                               g$rhs*$9888$1yk2we
                                               g$mod**$9889$1yk2we
                                               g$kwd*$9904$1yk2we
                                               g$exp*$9891$1yk2we
                                               g$rib$9892$1yk2we
                                               g$top?$9893$1yk2we)
                                             (if (memv
                                                   g$t$9905$1yk2we
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7643$1yk2we
                                                      g$e$9894$1yk2we
                                                      g$r$9885$1yk2we
                                                      g$mr$9886$1yk2we
                                                      g$lex*$9887$1yk2we
                                                      g$rhs*$9888$1yk2we
                                                      g$mod**$9889$1yk2we
                                                      g$kwd*$9904$1yk2we)))
                                                 (case-lambda
                                                   ((g$lex*$9951$1yk2we
                                                      g$rhs*$9952$1yk2we
                                                      g$m-exp-id*$9953$1yk2we
                                                      g$m-exp-lab*$9954$1yk2we
                                                      g$r$9955$1yk2we
                                                      g$mr$9956$1yk2we
                                                      g$mod**$9957$1yk2we
                                                      g$kwd*$9958$1yk2we)
                                                    ((case-lambda
                                                       ((g$kwd*$9959$1yk2we
                                                          g$mod**$9960$1yk2we
                                                          g$mr$9961$1yk2we
                                                          g$r$9962$1yk2we
                                                          g$m-exp-lab*$9963$1yk2we
                                                          g$m-exp-id*$9964$1yk2we
                                                          g$rhs*$9965$1yk2we
                                                          g$lex*$9966$1yk2we)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9967$1yk2we
                                                                 g$lab$9968$1yk2we)
                                                               (g$extend-rib!$7286$1yk2we
                                                                 g$rib$9892$1yk2we
                                                                 g$id$9967$1yk2we
                                                                 g$lab$9968$1yk2we)))
                                                            g$m-exp-id*$9964$1yk2we
                                                            g$m-exp-lab*$9963$1yk2we)
                                                          (g$chi-body*$7644$1yk2we
                                                            (cdr g$e*$9884$1yk2we)
                                                            g$r$9962$1yk2we
                                                            g$mr$9961$1yk2we
                                                            g$lex*$9966$1yk2we
                                                            g$rhs*$9965$1yk2we
                                                            g$mod**$9960$1yk2we
                                                            g$kwd*$9959$1yk2we
                                                            g$exp*$9891$1yk2we
                                                            g$rib$9892$1yk2we
                                                            g$top?$9893$1yk2we))))
                                                     g$kwd*$9958$1yk2we
                                                     g$mod**$9957$1yk2we
                                                     g$mr$9956$1yk2we
                                                     g$r$9955$1yk2we
                                                     g$m-exp-lab*$9954$1yk2we
                                                     g$m-exp-id*$9953$1yk2we
                                                     g$rhs*$9952$1yk2we
                                                     g$lex*$9951$1yk2we))))
                                               (if (memv
                                                     g$t$9905$1yk2we
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7695$1yk2we
                                                     (g$stx->datum$7333$1yk2we
                                                       g$e$9894$1yk2we))
                                                   (g$chi-body*$7644$1yk2we
                                                     (cdr g$e*$9884$1yk2we)
                                                     g$r$9885$1yk2we
                                                     g$mr$9886$1yk2we
                                                     g$lex*$9887$1yk2we
                                                     g$rhs*$9888$1yk2we
                                                     g$mod**$9889$1yk2we
                                                     g$kwd*$9904$1yk2we
                                                     g$exp*$9891$1yk2we
                                                     g$rib$9892$1yk2we
                                                     g$top?$9893$1yk2we))
                                                 (if (memv
                                                       g$t$9905$1yk2we
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$9969$1yk2we)
                                                       ((case-lambda
                                                          ((g$ls/false$9970$1yk2we)
                                                           (if g$ls/false$9970$1yk2we
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$9971$1yk2we)
                                                                  (g$chi-body*$7644$1yk2we
                                                                    (cdr g$e*$9884$1yk2we)
                                                                    g$r$9885$1yk2we
                                                                    g$mr$9886$1yk2we
                                                                    g$lex*$9887$1yk2we
                                                                    g$rhs*$9888$1yk2we
                                                                    g$mod**$9889$1yk2we
                                                                    g$kwd*$9904$1yk2we
                                                                    (append
                                                                      g$exp-decl*$9971$1yk2we
                                                                      g$exp*$9891$1yk2we)
                                                                    g$rib$9892$1yk2we
                                                                    g$top?$9893$1yk2we)))
                                                               g$ls/false$9970$1yk2we)
                                                             (g$syntax-violation$7711$1yk2we
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$9969$1yk2we))))
                                                        (g$syntax-dispatch$7600$1yk2we
                                                          g$t$9969$1yk2we
                                                          '(_ . each-any)))))
                                                    g$e$9894$1yk2we)
                                                   (if (memv
                                                         g$t$9905$1yk2we
                                                         '(import))
                                                     (begin
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$9972$1yk2we
                                                                       (case-lambda
                                                                         ((g$e$10014$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$10015$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10016$1yk2we)
                                                                                  (if (if g$ls/false$10016$1yk2we
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$10017$1yk2we)
                                                                                               (g$id?$7322$1yk2we
                                                                                                 g$id$10017$1yk2we)))
                                                                                            g$ls/false$10016$1yk2we))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$10018$1yk2we)
                                                                                         '#t))
                                                                                      g$ls/false$10016$1yk2we)
                                                                                    ((case-lambda
                                                                                       ((g$t$10019$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10020$1yk2we)
                                                                                            (if g$ls/false$10020$1yk2we
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$10021$1yk2we)
                                                                                                   '#f))
                                                                                                g$ls/false$10020$1yk2we)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10022$1yk2we)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10023$1yk2we)
                                                                                                      (if g$ls/false$10023$1yk2we
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$7711$1yk2we
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$10014$1yk2we)))
                                                                                                          g$ls/false$10023$1yk2we)
                                                                                                        (g$syntax-violation$7711$1yk2we
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$10022$1yk2we))))
                                                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                                                     g$t$10022$1yk2we
                                                                                                     '_))))
                                                                                               g$t$10019$1yk2we))))
                                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                                           g$t$10019$1yk2we
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$10015$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$10015$1yk2we
                                                                                 '(_ any)))))
                                                                           g$e$10014$1yk2we))))
                                                                     (g$module-import$9973$1yk2we
                                                                       (case-lambda
                                                                         ((g$e$9997$1yk2we
                                                                            g$r$9998$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$9999$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10000$1yk2we)
                                                                                  (if (if g$ls/false$10000$1yk2we
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$10001$1yk2we)
                                                                                               (g$id?$7322$1yk2we
                                                                                                 g$id$10001$1yk2we)))
                                                                                            g$ls/false$10000$1yk2we))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$10002$1yk2we)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$7342$1yk2we
                                                                                                g$id$10002$1yk2we
                                                                                                g$r$9998$1yk2we)))
                                                                                           (case-lambda
                                                                                             ((g$type$10006$1yk2we
                                                                                                g$value$10007$1yk2we
                                                                                                g$kwd$10008$1yk2we)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$10009$1yk2we
                                                                                                    g$value$10010$1yk2we
                                                                                                    g$type$10011$1yk2we)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10012$1yk2we)
                                                                                                      (if (memv
                                                                                                            g$t$10012$1yk2we
                                                                                                            '($module))
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$10013$1yk2we)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$7642$1yk2we
                                                                                                                g$iface$10013$1yk2we
                                                                                                                g$id$10002$1yk2we)
                                                                                                              (g$module-interface-exp-lab-vec$7638$1yk2we
                                                                                                                g$iface$10013$1yk2we))))
                                                                                                         g$value$10010$1yk2we)
                                                                                                        (g$syntax-violation$7711$1yk2we
                                                                                                          '#f
                                                                                                          '"invalid import"
                                                                                                          g$e$9997$1yk2we))))
                                                                                                   g$type$10011$1yk2we)))
                                                                                               g$kwd$10008$1yk2we
                                                                                               g$value$10007$1yk2we
                                                                                               g$type$10006$1yk2we))))))
                                                                                      g$ls/false$10000$1yk2we)
                                                                                    (g$syntax-violation$7711$1yk2we
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9999$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$9999$1yk2we
                                                                                 '(_ any)))))
                                                                           g$e$9997$1yk2we))))
                                                                     (g$library-import$9974$1yk2we
                                                                       (case-lambda
                                                                         ((g$e$9983$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$t$9984$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9985$1yk2we)
                                                                                  (if g$ls/false$9985$1yk2we
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$9986$1yk2we
                                                                                           g$imp*$9987$1yk2we)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$7649$1yk2we
                                                                                                (g$syntax->datum$7714$1yk2we
                                                                                                  g$imp*$9987$1yk2we))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$9990$1yk2we
                                                                                                g$subst-labels$9991$1yk2we)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$9992$1yk2we
                                                                                                    g$subst-names$9993$1yk2we)
                                                                                                  (values
                                                                                                    (vector-map
                                                                                                      (case-lambda
                                                                                                        ((g$name$9994$1yk2we)
                                                                                                         (g$datum->stx$7305$1yk2we
                                                                                                           g$ctxt$9986$1yk2we
                                                                                                           g$name$9994$1yk2we)))
                                                                                                      g$subst-names$9993$1yk2we)
                                                                                                    g$subst-labels$9992$1yk2we)))
                                                                                               g$subst-labels$9991$1yk2we
                                                                                               g$subst-names$9990$1yk2we))))))
                                                                                      g$ls/false$9985$1yk2we)
                                                                                    ((case-lambda
                                                                                       ((g$t$9995$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9996$1yk2we)
                                                                                            (if g$ls/false$9996$1yk2we
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$7711$1yk2we
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$9983$1yk2we)))
                                                                                                g$ls/false$9996$1yk2we)
                                                                                              (g$syntax-violation$7711$1yk2we
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9995$1yk2we))))
                                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                                           g$t$9995$1yk2we
                                                                                           '_))))
                                                                                     g$t$9984$1yk2we))))
                                                                               (g$syntax-dispatch$7600$1yk2we
                                                                                 g$t$9984$1yk2we
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$9983$1yk2we)))))
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$9972$1yk2we
                                                                        g$e$9894$1yk2we)
                                                                    (g$module-import$9973$1yk2we
                                                                      g$e$9894$1yk2we
                                                                      g$r$9885$1yk2we)
                                                                    (g$library-import$9974$1yk2we
                                                                      g$e$9894$1yk2we))))
                                                               (case-lambda
                                                                 ((g$id*$9977$1yk2we
                                                                    g$lab*$9978$1yk2we)
                                                                  ((case-lambda
                                                                     ((g$lab*$9979$1yk2we
                                                                        g$id*$9980$1yk2we)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$9981$1yk2we
                                                                             g$lab$9982$1yk2we)
                                                                           (g$extend-rib!$7286$1yk2we
                                                                             g$rib$9892$1yk2we
                                                                             g$id$9981$1yk2we
                                                                             g$lab$9982$1yk2we)))
                                                                        g$id*$9980$1yk2we
                                                                        g$lab*$9979$1yk2we)))
                                                                   g$lab*$9978$1yk2we
                                                                   g$id*$9977$1yk2we))))))))
                                                       (g$chi-body*$7644$1yk2we
                                                         (cdr g$e*$9884$1yk2we)
                                                         g$r$9885$1yk2we
                                                         g$mr$9886$1yk2we
                                                         g$lex*$9887$1yk2we
                                                         g$rhs*$9888$1yk2we
                                                         g$mod**$9889$1yk2we
                                                         g$kwd*$9904$1yk2we
                                                         g$exp*$9891$1yk2we
                                                         g$rib$9892$1yk2we
                                                         g$top?$9893$1yk2we))
                                                     (if g$top?$9893$1yk2we
                                                       (g$chi-body*$7644$1yk2we
                                                         (cdr g$e*$9884$1yk2we)
                                                         g$r$9885$1yk2we
                                                         g$mr$9886$1yk2we
                                                         (cons
                                                           (g$gen-lexical$7266$1yk2we
                                                             'dummy)
                                                           g$lex*$9887$1yk2we)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$9894$1yk2we)
                                                           g$rhs*$9888$1yk2we)
                                                         g$mod**$9889$1yk2we
                                                         g$kwd*$9904$1yk2we
                                                         g$exp*$9891$1yk2we
                                                         g$rib$9892$1yk2we
                                                         g$top?$9893$1yk2we)
                                                       (values
                                                         g$e*$9884$1yk2we
                                                         g$r$9885$1yk2we
                                                         g$mr$9886$1yk2we
                                                         g$lex*$9887$1yk2we
                                                         g$rhs*$9888$1yk2we
                                                         g$mod**$9889$1yk2we
                                                         g$kwd*$9904$1yk2we
                                                         g$exp*$9891$1yk2we)))))))))))))))
                            g$type$9903$1yk2we)))
                        (if (g$id?$7322$1yk2we g$kwd$9901$1yk2we)
                          (cons g$kwd$9901$1yk2we g$kwd*$9890$1yk2we)
                          g$kwd*$9890$1yk2we))))
                    g$kwd$9900$1yk2we
                    g$value$9899$1yk2we
                    g$type$9898$1yk2we))))))
           (car g$e*$9884$1yk2we))))))
   (g$expand-transformer$7645$1yk2we
     g$expand-transformer$11105$1yk2we
     (case-lambda
       ((g$expr$10024$1yk2we g$r$10025$1yk2we)
        ((case-lambda
           ((g$rtc$10026$1yk2we)
            ((case-lambda
               ((g$expanded-rhs$10027$1yk2we)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10028$1yk2we)
                        (case-lambda
                          ((g$x$10029$1yk2we)
                           (begin
                             (g$invoke-library$7137$1yk2we g$x$10029$1yk2we)
                             (g$mark-visit$10028$1yk2we g$x$10029$1yk2we))))))
                     (g$vis-collector$7653$1yk2we))
                    (g$rtc$10026$1yk2we))
                  g$expanded-rhs$10027$1yk2we)))
             ((case-lambda
                ((g$inv-collector$10034$1yk2we
                   g$vis-collector$10035$1yk2we
                   g$inv-collector$10036$1yk2we
                   g$vis-collector$10037$1yk2we)
                 ((case-lambda
                    ((g$swap$10038$1yk2we)
                     (dynamic-wind
                       g$swap$10038$1yk2we
                       (case-lambda
                         (()
                          (g$chi-expr$7618$1yk2we
                            g$expr$10024$1yk2we
                            g$r$10025$1yk2we
                            g$r$10025$1yk2we)))
                       g$swap$10038$1yk2we)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10039$1yk2we)
                           (begin
                             (g$inv-collector$10034$1yk2we
                               g$inv-collector$10036$1yk2we)
                             (set! g$inv-collector$10036$1yk2we
                               g$t$10039$1yk2we))))
                        (g$inv-collector$10034$1yk2we))
                       ((case-lambda
                          ((g$t$10040$1yk2we)
                           (begin
                             (g$vis-collector$10035$1yk2we
                               g$vis-collector$10037$1yk2we)
                             (set! g$vis-collector$10037$1yk2we
                               g$t$10040$1yk2we))))
                        (g$vis-collector$10035$1yk2we))))))))
              g$inv-collector$7652$1yk2we
              g$vis-collector$7653$1yk2we
              g$rtc$10026$1yk2we
              (case-lambda ((g$x$10041$1yk2we) (values)))))))
         (g$make-collector$7651$1yk2we)))))
   (g$parse-exports$7646$1yk2we
     g$parse-exports$11106$1yk2we
     (case-lambda
       ((g$exp*$10042$1yk2we)
        ((letrec ((g$f$10043$1yk2we
                    (case-lambda
                      ((g$exp*$10044$1yk2we
                         g$int*$10045$1yk2we
                         g$ext*$10046$1yk2we)
                       (if (null? g$exp*$10044$1yk2we)
                         (begin
                           (if (not (g$valid-bound-ids?$7327$1yk2we
                                      g$ext*$10046$1yk2we))
                             (g$syntax-violation$7711$1yk2we
                               'export
                               '"invalid exports"
                               (g$find-dups$7628$1yk2we g$ext*$10046$1yk2we))
                             (void))
                           (values
                             (map g$syntax->datum$7714$1yk2we
                                  g$ext*$10046$1yk2we)
                             g$int*$10045$1yk2we))
                         ((case-lambda
                            ((g$t$10047$1yk2we)
                             ((case-lambda
                                ((g$ls/false$10048$1yk2we)
                                 (if g$ls/false$10048$1yk2we
                                   (apply
                                     (case-lambda
                                       ((g$rename$10049$1yk2we
                                          g$i*$10050$1yk2we
                                          g$e*$10051$1yk2we)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$7714$1yk2we
                                                              g$rename$10049$1yk2we)
                                                            'rename)
                                                     (if (g$for-all$5480$1yk2we
                                                           g$id?$7322$1yk2we
                                                           g$i*$10050$1yk2we)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5480$1yk2we
                                                           g$id?$7322$1yk2we
                                                           g$e*$10051$1yk2we))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$7711$1yk2we
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10044$1yk2we))
                                            (void))
                                          (g$f$10043$1yk2we
                                            (cdr g$exp*$10044$1yk2we)
                                            (append
                                              g$i*$10050$1yk2we
                                              g$int*$10045$1yk2we)
                                            (append
                                              g$e*$10051$1yk2we
                                              g$ext*$10046$1yk2we)))))
                                     g$ls/false$10048$1yk2we)
                                   ((case-lambda
                                      ((g$t$10052$1yk2we)
                                       ((case-lambda
                                          ((g$ls/false$10053$1yk2we)
                                           (if g$ls/false$10053$1yk2we
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10054$1yk2we)
                                                  (begin
                                                    (if (not (g$id?$7322$1yk2we
                                                               g$ie$10054$1yk2we))
                                                      (g$syntax-violation$7711$1yk2we
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10054$1yk2we)
                                                      (void))
                                                    (g$f$10043$1yk2we
                                                      (cdr g$exp*$10044$1yk2we)
                                                      (cons
                                                        g$ie$10054$1yk2we
                                                        g$int*$10045$1yk2we)
                                                      (cons
                                                        g$ie$10054$1yk2we
                                                        g$ext*$10046$1yk2we)))))
                                               g$ls/false$10053$1yk2we)
                                             (g$syntax-violation$7711$1yk2we
                                               '#f
                                               '"invalid syntax"
                                               g$t$10052$1yk2we))))
                                        (g$syntax-dispatch$7600$1yk2we
                                          g$t$10052$1yk2we
                                          'any))))
                                    g$t$10047$1yk2we))))
                              (g$syntax-dispatch$7600$1yk2we
                                g$t$10047$1yk2we
                                '(any . #(each (any any)))))))
                          (car g$exp*$10044$1yk2we)))))))
           g$f$10043$1yk2we)
         g$exp*$10042$1yk2we
         '()
         '()))))
   (g$parse-library-name$7647$1yk2we
     g$parse-library-name$11107$1yk2we
     (case-lambda
       ((g$spec$10055$1yk2we)
        (letrec* ((g$parse$10056$1yk2we
                    (case-lambda
                      ((g$x$10063$1yk2we)
                       ((case-lambda
                          ((g$t$10064$1yk2we)
                           ((case-lambda
                              ((g$ls/false$10065$1yk2we)
                               (if (if g$ls/false$10065$1yk2we
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10066$1yk2we)
                                            (g$for-all$5480$1yk2we
                                              (case-lambda
                                                ((g$x$10067$1yk2we)
                                                 ((case-lambda
                                                    ((g$x$10068$1yk2we)
                                                     (if (integer?
                                                           g$x$10068$1yk2we)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10068$1yk2we))
                                                       '#f)))
                                                  (g$syntax->datum$7714$1yk2we
                                                    g$x$10067$1yk2we))))
                                              g$v*$10066$1yk2we)))
                                         g$ls/false$10065$1yk2we))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10069$1yk2we)
                                      (values
                                        '()
                                        (map g$syntax->datum$7714$1yk2we
                                             g$v*$10069$1yk2we))))
                                   g$ls/false$10065$1yk2we)
                                 ((case-lambda
                                    ((g$t$10070$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$10071$1yk2we)
                                         (if (if g$ls/false$10071$1yk2we
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10072$1yk2we
                                                        g$rest$10073$1yk2we)
                                                      (symbol?
                                                        (g$syntax->datum$7714$1yk2we
                                                          g$x$10072$1yk2we))))
                                                   g$ls/false$10071$1yk2we))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10074$1yk2we
                                                  g$rest$10075$1yk2we)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10056$1yk2we
                                                       g$rest$10075$1yk2we)))
                                                  (case-lambda
                                                    ((g$x*$10078$1yk2we
                                                       g$v*$10079$1yk2we)
                                                     ((case-lambda
                                                        ((g$v*$10080$1yk2we
                                                           g$x*$10081$1yk2we)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7714$1yk2we
                                                               g$x$10074$1yk2we)
                                                             g$x*$10081$1yk2we)
                                                           g$v*$10080$1yk2we)))
                                                      g$v*$10079$1yk2we
                                                      g$x*$10078$1yk2we))))))
                                             g$ls/false$10071$1yk2we)
                                           ((case-lambda
                                              ((g$t$10082$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$10083$1yk2we)
                                                   (if g$ls/false$10083$1yk2we
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10083$1yk2we)
                                                     ((case-lambda
                                                        ((g$t$10084$1yk2we)
                                                         ((case-lambda
                                                            ((g$ls/false$10085$1yk2we)
                                                             (if g$ls/false$10085$1yk2we
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7711$1yk2we
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10055$1yk2we)))
                                                                 g$ls/false$10085$1yk2we)
                                                               (g$syntax-violation$7711$1yk2we
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10084$1yk2we))))
                                                          (g$syntax-dispatch$7600$1yk2we
                                                            g$t$10084$1yk2we
                                                            '_))))
                                                      g$t$10082$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$10082$1yk2we
                                                  '()))))
                                            g$t$10070$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$10070$1yk2we
                                        '(any . any)))))
                                  g$t$10064$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$10064$1yk2we
                              '(each-any)))))
                        g$x$10063$1yk2we)))))
          (call-with-values
            (case-lambda (() (g$parse$10056$1yk2we g$spec$10055$1yk2we)))
            (case-lambda
              ((g$name*$10059$1yk2we g$ver*$10060$1yk2we)
               ((case-lambda
                  ((g$ver*$10061$1yk2we g$name*$10062$1yk2we)
                   (begin
                     (if (null? g$name*$10062$1yk2we)
                       (g$syntax-violation$7711$1yk2we
                         '#f
                         '"empty library name"
                         g$spec$10055$1yk2we)
                       (void))
                     (values g$name*$10062$1yk2we g$ver*$10061$1yk2we))))
                g$ver*$10060$1yk2we
                g$name*$10059$1yk2we))))))))
   (g$parse-library$7648$1yk2we
     g$parse-library$11108$1yk2we
     (case-lambda
       ((g$e$10086$1yk2we)
        ((case-lambda
           ((g$t$10087$1yk2we)
            ((case-lambda
               ((g$ls/false$10088$1yk2we)
                (if (if g$ls/false$10088$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10089$1yk2we
                               g$name*$10090$1yk2we
                               g$export$10091$1yk2we
                               g$exp*$10092$1yk2we
                               g$import$10093$1yk2we
                               g$imp*$10094$1yk2we
                               g$b*$10095$1yk2we)
                             (if (eq? (g$syntax->datum$7714$1yk2we
                                        g$export$10091$1yk2we)
                                      'export)
                               (if (eq? (g$syntax->datum$7714$1yk2we
                                          g$import$10093$1yk2we)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7714$1yk2we
                                          g$library$10089$1yk2we)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10088$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10096$1yk2we
                         g$name*$10097$1yk2we
                         g$export$10098$1yk2we
                         g$exp*$10099$1yk2we
                         g$import$10100$1yk2we
                         g$imp*$10101$1yk2we
                         g$b*$10102$1yk2we)
                       (values
                         g$name*$10097$1yk2we
                         g$exp*$10099$1yk2we
                         g$imp*$10101$1yk2we
                         g$b*$10102$1yk2we)))
                    g$ls/false$10088$1yk2we)
                  ((case-lambda
                     ((g$t$10103$1yk2we)
                      ((case-lambda
                         ((g$ls/false$10104$1yk2we)
                          (if g$ls/false$10104$1yk2we
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7711$1yk2we
                                   '#f
                                   '"malformed library"
                                   g$e$10086$1yk2we)))
                              g$ls/false$10104$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$10103$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we g$t$10103$1yk2we '_))))
                   g$t$10087$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$10087$1yk2we
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10086$1yk2we))))
   (g$parse-import-spec*$7649$1yk2we
     g$parse-import-spec*$11109$1yk2we
     (case-lambda
       ((g$imp*$10105$1yk2we)
        (letrec* ((g$idsyn?$10106$1yk2we
                    (case-lambda
                      ((g$x$10366$1yk2we)
                       (symbol?
                         (g$syntax->datum$7714$1yk2we g$x$10366$1yk2we)))))
                  (g$dup-error$10107$1yk2we
                    (case-lambda
                      ((g$name$10365$1yk2we)
                       (g$syntax-violation$7711$1yk2we
                         'import
                         '"two imports with different bindings"
                         g$name$10365$1yk2we))))
                  (g$merge-substs$10108$1yk2we
                    (case-lambda
                      ((g$s$10356$1yk2we g$subst$10357$1yk2we)
                       (letrec* ((g$insert-to-subst$10358$1yk2we
                                   (case-lambda
                                     ((g$a$10359$1yk2we g$subst$10360$1yk2we)
                                      ((case-lambda
                                         ((g$name$10361$1yk2we
                                            g$label$10362$1yk2we)
                                          ((case-lambda
                                             ((g$t$10363$1yk2we)
                                              (if g$t$10363$1yk2we
                                                ((case-lambda
                                                   ((g$x$10364$1yk2we)
                                                    (if (eq? (cdr g$x$10364$1yk2we)
                                                             g$label$10362$1yk2we)
                                                      g$subst$10360$1yk2we
                                                      (g$dup-error$10107$1yk2we
                                                        g$name$10361$1yk2we))))
                                                 g$t$10363$1yk2we)
                                                (cons
                                                  g$a$10359$1yk2we
                                                  g$subst$10360$1yk2we))))
                                           (assq
                                             g$name$10361$1yk2we
                                             g$subst$10360$1yk2we))))
                                       (car g$a$10359$1yk2we)
                                       (cdr g$a$10359$1yk2we))))))
                         (if (null? g$s$10356$1yk2we)
                           g$subst$10357$1yk2we
                           (g$insert-to-subst$10358$1yk2we
                             (car g$s$10356$1yk2we)
                             (g$merge-substs$10108$1yk2we
                               (cdr g$s$10356$1yk2we)
                               g$subst$10357$1yk2we)))))))
                  (g$exclude*$10109$1yk2we
                    (case-lambda
                      ((g$sym*$10332$1yk2we g$subst$10333$1yk2we)
                       (letrec* ((g$exclude$10334$1yk2we
                                   (case-lambda
                                     ((g$sym$10347$1yk2we g$subst$10348$1yk2we)
                                      (if (null? g$subst$10348$1yk2we)
                                        (g$syntax-violation$7711$1yk2we
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10347$1yk2we)
                                        (if (eq? g$sym$10347$1yk2we
                                                 (g$caar$4998$1yk2we
                                                   g$subst$10348$1yk2we))
                                          (values
                                            (g$cdar$5000$1yk2we
                                              g$subst$10348$1yk2we)
                                            (cdr g$subst$10348$1yk2we))
                                          ((case-lambda
                                             ((g$a$10349$1yk2we)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10334$1yk2we
                                                     g$sym$10347$1yk2we
                                                     (cdr g$subst$10348$1yk2we))))
                                                (case-lambda
                                                  ((g$old$10352$1yk2we
                                                     g$subst$10353$1yk2we)
                                                   ((case-lambda
                                                      ((g$subst$10354$1yk2we
                                                         g$old$10355$1yk2we)
                                                       (values
                                                         g$old$10355$1yk2we
                                                         (cons
                                                           g$a$10349$1yk2we
                                                           g$subst$10354$1yk2we))))
                                                    g$subst$10353$1yk2we
                                                    g$old$10352$1yk2we))))))
                                           (car g$subst$10348$1yk2we))))))))
                         (if (null? g$sym*$10332$1yk2we)
                           (values '() g$subst$10333$1yk2we)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10334$1yk2we
                                  (car g$sym*$10332$1yk2we)
                                  g$subst$10333$1yk2we)))
                             (case-lambda
                               ((g$old$10337$1yk2we g$subst$10338$1yk2we)
                                ((case-lambda
                                   ((g$subst$10339$1yk2we g$old$10340$1yk2we)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10109$1yk2we
                                           (cdr g$sym*$10332$1yk2we)
                                           g$subst$10339$1yk2we)))
                                      (case-lambda
                                        ((g$old*$10343$1yk2we
                                           g$subst$10344$1yk2we)
                                         ((case-lambda
                                            ((g$subst$10345$1yk2we
                                               g$old*$10346$1yk2we)
                                             (values
                                               (cons
                                                 g$old$10340$1yk2we
                                                 g$old*$10346$1yk2we)
                                               g$subst$10345$1yk2we)))
                                          g$subst$10344$1yk2we
                                          g$old*$10343$1yk2we))))))
                                 g$subst$10338$1yk2we
                                 g$old$10337$1yk2we)))))))))
                  (g$find*$10110$1yk2we
                    (case-lambda
                      ((g$sym*$10328$1yk2we g$subst$10329$1yk2we)
                       (map (case-lambda
                              ((g$x$10330$1yk2we)
                               ((case-lambda
                                  ((g$t$10331$1yk2we)
                                   (if g$t$10331$1yk2we
                                     (cdr g$t$10331$1yk2we)
                                     (g$syntax-violation$7711$1yk2we
                                       'import
                                       '"cannot find identifier"
                                       g$x$10330$1yk2we))))
                                (assq g$x$10330$1yk2we g$subst$10329$1yk2we))))
                            g$sym*$10328$1yk2we))))
                  (g$rem*$10111$1yk2we
                    (case-lambda
                      ((g$sym*$10324$1yk2we g$subst$10325$1yk2we)
                       ((letrec ((g$f$10326$1yk2we
                                   (case-lambda
                                     ((g$subst$10327$1yk2we)
                                      (if (null? g$subst$10327$1yk2we)
                                        '()
                                        (if (memq
                                              (g$caar$4998$1yk2we
                                                g$subst$10327$1yk2we)
                                              g$sym*$10324$1yk2we)
                                          (g$f$10326$1yk2we
                                            (cdr g$subst$10327$1yk2we))
                                          (cons
                                            (car g$subst$10327$1yk2we)
                                            (g$f$10326$1yk2we
                                              (cdr g$subst$10327$1yk2we)))))))))
                          g$f$10326$1yk2we)
                        g$subst$10325$1yk2we))))
                  (g$remove-dups$10112$1yk2we
                    (case-lambda
                      ((g$ls$10323$1yk2we)
                       (if (null? g$ls$10323$1yk2we)
                         '()
                         (if (memq
                               (car g$ls$10323$1yk2we)
                               (cdr g$ls$10323$1yk2we))
                           (g$remove-dups$10112$1yk2we (cdr g$ls$10323$1yk2we))
                           (cons
                             (car g$ls$10323$1yk2we)
                             (g$remove-dups$10112$1yk2we
                               (cdr g$ls$10323$1yk2we))))))))
                  (g$parse-library-name$10113$1yk2we
                    (case-lambda
                      ((g$spec$10207$1yk2we)
                       (letrec* ((g$subversion?$10208$1yk2we
                                   (case-lambda
                                     ((g$x$10321$1yk2we)
                                      ((case-lambda
                                         ((g$x$10322$1yk2we)
                                          (if (integer? g$x$10322$1yk2we)
                                            (if (exact? g$x$10322$1yk2we)
                                              (begin
                                                '#f
                                                (>= g$x$10322$1yk2we '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7714$1yk2we
                                         g$x$10321$1yk2we)))))
                                 (g$subversion-pred$10209$1yk2we
                                   (case-lambda
                                     ((g$x*$10273$1yk2we)
                                      ((case-lambda
                                         ((g$t$10274$1yk2we)
                                          ((case-lambda
                                             ((g$ls/false$10275$1yk2we)
                                              (if (if g$ls/false$10275$1yk2we
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10276$1yk2we)
                                                           (g$subversion?$10208$1yk2we
                                                             g$n$10276$1yk2we)))
                                                        g$ls/false$10275$1yk2we))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10277$1yk2we)
                                                     (case-lambda
                                                       ((g$x$10278$1yk2we)
                                                        (= g$x$10278$1yk2we
                                                           (g$syntax->datum$7714$1yk2we
                                                             g$n$10277$1yk2we))))))
                                                  g$ls/false$10275$1yk2we)
                                                ((case-lambda
                                                   ((g$t$10279$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$10280$1yk2we)
                                                        (if (if g$ls/false$10280$1yk2we
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10281$1yk2we
                                                                       g$sub*$10282$1yk2we)
                                                                     (eq? (g$syntax->datum$7714$1yk2we
                                                                            g$p?$10281$1yk2we)
                                                                          'and)))
                                                                  g$ls/false$10280$1yk2we))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10283$1yk2we
                                                                 g$sub*$10284$1yk2we)
                                                               ((case-lambda
                                                                  ((g$p*$10285$1yk2we)
                                                                   (case-lambda
                                                                     ((g$x$10286$1yk2we)
                                                                      (g$for-all$5480$1yk2we
                                                                        (case-lambda
                                                                          ((g$p$10287$1yk2we)
                                                                           (g$p$10287$1yk2we
                                                                             g$x$10286$1yk2we)))
                                                                        g$p*$10285$1yk2we)))))
                                                                (map g$subversion-pred$10209$1yk2we
                                                                     g$sub*$10284$1yk2we))))
                                                            g$ls/false$10280$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$10288$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$10289$1yk2we)
                                                                  (if (if g$ls/false$10289$1yk2we
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10290$1yk2we
                                                                                 g$sub*$10291$1yk2we)
                                                                               (eq? (g$syntax->datum$7714$1yk2we
                                                                                      g$p?$10290$1yk2we)
                                                                                    'or)))
                                                                            g$ls/false$10289$1yk2we))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10292$1yk2we
                                                                           g$sub*$10293$1yk2we)
                                                                         ((case-lambda
                                                                            ((g$p*$10294$1yk2we)
                                                                             (case-lambda
                                                                               ((g$x$10295$1yk2we)
                                                                                (g$exists$5481$1yk2we
                                                                                  (case-lambda
                                                                                    ((g$p$10296$1yk2we)
                                                                                     (g$p$10296$1yk2we
                                                                                       g$x$10295$1yk2we)))
                                                                                  g$p*$10294$1yk2we)))))
                                                                          (map g$subversion-pred$10209$1yk2we
                                                                               g$sub*$10293$1yk2we))))
                                                                      g$ls/false$10289$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$t$10297$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10298$1yk2we)
                                                                            (if (if g$ls/false$10298$1yk2we
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10299$1yk2we
                                                                                           g$sub$10300$1yk2we)
                                                                                         (eq? (g$syntax->datum$7714$1yk2we
                                                                                                g$p?$10299$1yk2we)
                                                                                              'not)))
                                                                                      g$ls/false$10298$1yk2we))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10301$1yk2we
                                                                                     g$sub$10302$1yk2we)
                                                                                   ((case-lambda
                                                                                      ((g$p$10303$1yk2we)
                                                                                       (case-lambda
                                                                                         ((g$x$10304$1yk2we)
                                                                                          (not (g$p$10303$1yk2we
                                                                                                 g$x$10304$1yk2we))))))
                                                                                    (g$subversion-pred$10209$1yk2we
                                                                                      g$sub$10302$1yk2we))))
                                                                                g$ls/false$10298$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$t$10305$1yk2we)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10306$1yk2we)
                                                                                      (if (if g$ls/false$10306$1yk2we
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10307$1yk2we
                                                                                                     g$n$10308$1yk2we)
                                                                                                   (if (eq? (g$syntax->datum$7714$1yk2we
                                                                                                              g$p?$10307$1yk2we)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10208$1yk2we
                                                                                                         g$n$10308$1yk2we))
                                                                                                     '#f)))
                                                                                                g$ls/false$10306$1yk2we))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10309$1yk2we
                                                                                               g$n$10310$1yk2we)
                                                                                             (case-lambda
                                                                                               ((g$x$10311$1yk2we)
                                                                                                (<= g$x$10311$1yk2we
                                                                                                    (g$syntax->datum$7714$1yk2we
                                                                                                      g$n$10310$1yk2we))))))
                                                                                          g$ls/false$10306$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$t$10312$1yk2we)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10313$1yk2we)
                                                                                                (if (if g$ls/false$10313$1yk2we
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10314$1yk2we
                                                                                                               g$n$10315$1yk2we)
                                                                                                             (if (eq? (g$syntax->datum$7714$1yk2we
                                                                                                                        g$p?$10314$1yk2we)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10208$1yk2we
                                                                                                                   g$n$10315$1yk2we))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10313$1yk2we))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10316$1yk2we
                                                                                                         g$n$10317$1yk2we)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10318$1yk2we)
                                                                                                          (>= g$x$10318$1yk2we
                                                                                                              (g$syntax->datum$7714$1yk2we
                                                                                                                g$n$10317$1yk2we))))))
                                                                                                    g$ls/false$10313$1yk2we)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10319$1yk2we)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10320$1yk2we)
                                                                                                          (if g$ls/false$10320$1yk2we
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7711$1yk2we
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10207$1yk2we
                                                                                                                   g$x*$10273$1yk2we)))
                                                                                                              g$ls/false$10320$1yk2we)
                                                                                                            (g$syntax-violation$7711$1yk2we
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10319$1yk2we))))
                                                                                                       (g$syntax-dispatch$7600$1yk2we
                                                                                                         g$t$10319$1yk2we
                                                                                                         '_))))
                                                                                                   g$t$10312$1yk2we))))
                                                                                             (g$syntax-dispatch$7600$1yk2we
                                                                                               g$t$10312$1yk2we
                                                                                               '(any any)))))
                                                                                         g$t$10305$1yk2we))))
                                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                                     g$t$10305$1yk2we
                                                                                     '(any any)))))
                                                                               g$t$10297$1yk2we))))
                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                           g$t$10297$1yk2we
                                                                           '(any any)))))
                                                                     g$t$10288$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$10288$1yk2we
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10279$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$10279$1yk2we
                                                       '(any . each-any)))))
                                                 g$t$10274$1yk2we))))
                                           (g$syntax-dispatch$7600$1yk2we
                                             g$t$10274$1yk2we
                                             'any))))
                                       g$x*$10273$1yk2we))))
                                 (g$version-pred$10210$1yk2we
                                   (case-lambda
                                     ((g$x*$10233$1yk2we)
                                      ((case-lambda
                                         ((g$t$10234$1yk2we)
                                          ((case-lambda
                                             ((g$ls/false$10235$1yk2we)
                                              (if g$ls/false$10235$1yk2we
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10236$1yk2we)
                                                        '#t))))
                                                  g$ls/false$10235$1yk2we)
                                                ((case-lambda
                                                   ((g$t$10237$1yk2we)
                                                    ((case-lambda
                                                       ((g$ls/false$10238$1yk2we)
                                                        (if (if g$ls/false$10238$1yk2we
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10239$1yk2we
                                                                       g$ver*$10240$1yk2we)
                                                                     (eq? (g$syntax->datum$7714$1yk2we
                                                                            g$c$10239$1yk2we)
                                                                          'and)))
                                                                  g$ls/false$10238$1yk2we))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10241$1yk2we
                                                                 g$ver*$10242$1yk2we)
                                                               ((case-lambda
                                                                  ((g$p*$10243$1yk2we)
                                                                   (case-lambda
                                                                     ((g$x$10244$1yk2we)
                                                                      (g$for-all$5480$1yk2we
                                                                        (case-lambda
                                                                          ((g$p$10245$1yk2we)
                                                                           (g$p$10245$1yk2we
                                                                             g$x$10244$1yk2we)))
                                                                        g$p*$10243$1yk2we)))))
                                                                (map g$version-pred$10210$1yk2we
                                                                     g$ver*$10242$1yk2we))))
                                                            g$ls/false$10238$1yk2we)
                                                          ((case-lambda
                                                             ((g$t$10246$1yk2we)
                                                              ((case-lambda
                                                                 ((g$ls/false$10247$1yk2we)
                                                                  (if (if g$ls/false$10247$1yk2we
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10248$1yk2we
                                                                                 g$ver*$10249$1yk2we)
                                                                               (eq? (g$syntax->datum$7714$1yk2we
                                                                                      g$c$10248$1yk2we)
                                                                                    'or)))
                                                                            g$ls/false$10247$1yk2we))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10250$1yk2we
                                                                           g$ver*$10251$1yk2we)
                                                                         ((case-lambda
                                                                            ((g$p*$10252$1yk2we)
                                                                             (case-lambda
                                                                               ((g$x$10253$1yk2we)
                                                                                (g$exists$5481$1yk2we
                                                                                  (case-lambda
                                                                                    ((g$p$10254$1yk2we)
                                                                                     (g$p$10254$1yk2we
                                                                                       g$x$10253$1yk2we)))
                                                                                  g$p*$10252$1yk2we)))))
                                                                          (map g$version-pred$10210$1yk2we
                                                                               g$ver*$10251$1yk2we))))
                                                                      g$ls/false$10247$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$t$10255$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10256$1yk2we)
                                                                            (if (if g$ls/false$10256$1yk2we
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10257$1yk2we
                                                                                           g$ver$10258$1yk2we)
                                                                                         (eq? (g$syntax->datum$7714$1yk2we
                                                                                                g$c$10257$1yk2we)
                                                                                              'not)))
                                                                                      g$ls/false$10256$1yk2we))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10259$1yk2we
                                                                                     g$ver$10260$1yk2we)
                                                                                   ((case-lambda
                                                                                      ((g$p$10261$1yk2we)
                                                                                       (case-lambda
                                                                                         ((g$x$10262$1yk2we)
                                                                                          (not (g$p$10261$1yk2we
                                                                                                 g$x$10262$1yk2we))))))
                                                                                    (g$version-pred$10210$1yk2we
                                                                                      g$ver$10260$1yk2we))))
                                                                                g$ls/false$10256$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$t$10263$1yk2we)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10264$1yk2we)
                                                                                      (if g$ls/false$10264$1yk2we
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10265$1yk2we)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10266$1yk2we)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10267$1yk2we)
                                                                                                    ((letrec ((g$f$10268$1yk2we
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10269$1yk2we
                                                                                                                     g$x$10270$1yk2we)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10269$1yk2we)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10270$1yk2we)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10269$1yk2we)
                                                                                                                            (car g$x$10270$1yk2we))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10268$1yk2we
                                                                                                                             (cdr g$p*$10269$1yk2we)
                                                                                                                             (cdr g$x$10270$1yk2we)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10268$1yk2we)
                                                                                                     g$p*$10266$1yk2we
                                                                                                     g$x$10267$1yk2we)))))
                                                                                              (map g$subversion-pred$10209$1yk2we
                                                                                                   g$sub*$10265$1yk2we))))
                                                                                          g$ls/false$10264$1yk2we)
                                                                                        ((case-lambda
                                                                                           ((g$t$10271$1yk2we)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10272$1yk2we)
                                                                                                (if g$ls/false$10272$1yk2we
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7711$1yk2we
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10207$1yk2we
                                                                                                         g$x*$10233$1yk2we)))
                                                                                                    g$ls/false$10272$1yk2we)
                                                                                                  (g$syntax-violation$7711$1yk2we
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10271$1yk2we))))
                                                                                             (g$syntax-dispatch$7600$1yk2we
                                                                                               g$t$10271$1yk2we
                                                                                               '_))))
                                                                                         g$t$10263$1yk2we))))
                                                                                   (g$syntax-dispatch$7600$1yk2we
                                                                                     g$t$10263$1yk2we
                                                                                     'each-any))))
                                                                               g$t$10255$1yk2we))))
                                                                         (g$syntax-dispatch$7600$1yk2we
                                                                           g$t$10255$1yk2we
                                                                           '(any any)))))
                                                                     g$t$10246$1yk2we))))
                                                               (g$syntax-dispatch$7600$1yk2we
                                                                 g$t$10246$1yk2we
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10237$1yk2we))))
                                                     (g$syntax-dispatch$7600$1yk2we
                                                       g$t$10237$1yk2we
                                                       '(any . each-any)))))
                                                 g$t$10234$1yk2we))))
                                           (g$syntax-dispatch$7600$1yk2we
                                             g$t$10234$1yk2we
                                             '()))))
                                       g$x*$10233$1yk2we)))))
                         ((letrec ((g$f$10211$1yk2we
                                     (case-lambda
                                       ((g$x$10212$1yk2we)
                                        ((case-lambda
                                           ((g$t$10213$1yk2we)
                                            ((case-lambda
                                               ((g$ls/false$10214$1yk2we)
                                                (if g$ls/false$10214$1yk2we
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10215$1yk2we)
                                                       (values
                                                         '()
                                                         (g$version-pred$10210$1yk2we
                                                           g$version-spec*$10215$1yk2we))))
                                                    g$ls/false$10214$1yk2we)
                                                  ((case-lambda
                                                     ((g$t$10216$1yk2we)
                                                      ((case-lambda
                                                         ((g$ls/false$10217$1yk2we)
                                                          (if (if g$ls/false$10217$1yk2we
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10218$1yk2we
                                                                         g$x*$10219$1yk2we)
                                                                       (g$idsyn?$10106$1yk2we
                                                                         g$x$10218$1yk2we)))
                                                                    g$ls/false$10217$1yk2we))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10220$1yk2we
                                                                   g$x*$10221$1yk2we)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10211$1yk2we
                                                                        g$x*$10221$1yk2we)))
                                                                   (case-lambda
                                                                     ((g$name$10224$1yk2we
                                                                        g$pred$10225$1yk2we)
                                                                      ((case-lambda
                                                                         ((g$pred$10226$1yk2we
                                                                            g$name$10227$1yk2we)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7714$1yk2we
                                                                                g$x$10220$1yk2we)
                                                                              g$name$10227$1yk2we)
                                                                            g$pred$10226$1yk2we)))
                                                                       g$pred$10225$1yk2we
                                                                       g$name$10224$1yk2we))))))
                                                              g$ls/false$10217$1yk2we)
                                                            ((case-lambda
                                                               ((g$t$10228$1yk2we)
                                                                ((case-lambda
                                                                   ((g$ls/false$10229$1yk2we)
                                                                    (if g$ls/false$10229$1yk2we
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10230$1yk2we)
                                                                                '#t)))))
                                                                        g$ls/false$10229$1yk2we)
                                                                      ((case-lambda
                                                                         ((g$t$10231$1yk2we)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10232$1yk2we)
                                                                              (if g$ls/false$10232$1yk2we
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7711$1yk2we
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10207$1yk2we)))
                                                                                  g$ls/false$10232$1yk2we)
                                                                                (g$syntax-violation$7711$1yk2we
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10231$1yk2we))))
                                                                           (g$syntax-dispatch$7600$1yk2we
                                                                             g$t$10231$1yk2we
                                                                             '_))))
                                                                       g$t$10228$1yk2we))))
                                                                 (g$syntax-dispatch$7600$1yk2we
                                                                   g$t$10228$1yk2we
                                                                   '()))))
                                                             g$t$10216$1yk2we))))
                                                       (g$syntax-dispatch$7600$1yk2we
                                                         g$t$10216$1yk2we
                                                         '(any . any)))))
                                                   g$t$10213$1yk2we))))
                                             (g$syntax-dispatch$7600$1yk2we
                                               g$t$10213$1yk2we
                                               '(each-any)))))
                                         g$x$10212$1yk2we)))))
                            g$f$10211$1yk2we)
                          g$spec$10207$1yk2we)))))
                  (g$import-library$10114$1yk2we
                    (case-lambda
                      ((g$spec*$10199$1yk2we)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10113$1yk2we
                              g$spec*$10199$1yk2we)))
                         (case-lambda
                           ((g$name$10202$1yk2we g$pred$10203$1yk2we)
                            ((case-lambda
                               ((g$pred$10204$1yk2we g$name$10205$1yk2we)
                                (begin
                                  (if (null? g$name$10205$1yk2we)
                                    (g$syntax-violation$7711$1yk2we
                                      'import
                                      '"empty library name"
                                      g$spec*$10199$1yk2we)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10206$1yk2we)
                                      (begin
                                        (if (not g$lib$10206$1yk2we)
                                          (g$syntax-violation$7711$1yk2we
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10205$1yk2we)
                                          (void))
                                        (if (not (g$pred$10204$1yk2we
                                                   (g$library-version$7090$1yk2we
                                                     g$lib$10206$1yk2we)))
                                          (g$syntax-violation$7711$1yk2we
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10199$1yk2we
                                            g$lib$10206$1yk2we)
                                          (void))
                                        ((g$imp-collector$7654$1yk2we)
                                         g$lib$10206$1yk2we)
                                        (g$library-subst$7094$1yk2we
                                          g$lib$10206$1yk2we))))
                                   (g$find-library-by-name$7130$1yk2we
                                     g$name$10205$1yk2we)))))
                             g$pred$10203$1yk2we
                             g$name$10202$1yk2we)))))))
                  (g$get-import$10115$1yk2we
                    (case-lambda
                      ((g$spec$10128$1yk2we)
                       ((case-lambda
                          ((g$t$10129$1yk2we)
                           ((case-lambda
                              ((g$ls/false$10130$1yk2we)
                               (if (if g$ls/false$10130$1yk2we
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10131$1yk2we g$x*$10132$1yk2we)
                                            (not (memq
                                                   (g$syntax->datum$7714$1yk2we
                                                     g$x$10131$1yk2we)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10130$1yk2we))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10133$1yk2we g$x*$10134$1yk2we)
                                      (g$import-library$10114$1yk2we
                                        (cons
                                          g$x$10133$1yk2we
                                          g$x*$10134$1yk2we))))
                                   g$ls/false$10130$1yk2we)
                                 ((case-lambda
                                    ((g$t$10135$1yk2we)
                                     ((case-lambda
                                        ((g$ls/false$10136$1yk2we)
                                         (if (if g$ls/false$10136$1yk2we
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10137$1yk2we
                                                        g$isp$10138$1yk2we
                                                        g$old*$10139$1yk2we
                                                        g$new*$10140$1yk2we)
                                                      (if (eq? (g$syntax->datum$7714$1yk2we
                                                                 g$rename$10137$1yk2we)
                                                               'rename)
                                                        (if (g$for-all$5480$1yk2we
                                                              g$idsyn?$10106$1yk2we
                                                              g$old*$10139$1yk2we)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5480$1yk2we
                                                              g$idsyn?$10106$1yk2we
                                                              g$new*$10140$1yk2we))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10136$1yk2we))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10141$1yk2we
                                                  g$isp$10142$1yk2we
                                                  g$old*$10143$1yk2we
                                                  g$new*$10144$1yk2we)
                                                ((case-lambda
                                                   ((g$subst$10145$1yk2we
                                                      g$old*$10146$1yk2we
                                                      g$new*$10147$1yk2we)
                                                    ((case-lambda
                                                       ((g$old-label*$10148$1yk2we)
                                                        ((case-lambda
                                                           ((g$subst$10149$1yk2we)
                                                            (g$merge-substs$10108$1yk2we
                                                              (map cons
                                                                   g$new*$10147$1yk2we
                                                                   g$old-label*$10148$1yk2we)
                                                              g$subst$10149$1yk2we)))
                                                         (g$rem*$10111$1yk2we
                                                           g$old*$10146$1yk2we
                                                           g$subst$10145$1yk2we))))
                                                     (g$find*$10110$1yk2we
                                                       g$old*$10146$1yk2we
                                                       g$subst$10145$1yk2we))))
                                                 (g$get-import$10115$1yk2we
                                                   g$isp$10142$1yk2we)
                                                 (map g$syntax->datum$7714$1yk2we
                                                      g$old*$10143$1yk2we)
                                                 (map g$syntax->datum$7714$1yk2we
                                                      g$new*$10144$1yk2we))))
                                             g$ls/false$10136$1yk2we)
                                           ((case-lambda
                                              ((g$t$10150$1yk2we)
                                               ((case-lambda
                                                  ((g$ls/false$10151$1yk2we)
                                                   (if (if g$ls/false$10151$1yk2we
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10152$1yk2we
                                                                  g$isp$10153$1yk2we
                                                                  g$sym*$10154$1yk2we)
                                                                (if (eq? (g$syntax->datum$7714$1yk2we
                                                                           g$except$10152$1yk2we)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5480$1yk2we
                                                                      g$idsyn?$10106$1yk2we
                                                                      g$sym*$10154$1yk2we))
                                                                  '#f)))
                                                             g$ls/false$10151$1yk2we))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10155$1yk2we
                                                            g$isp$10156$1yk2we
                                                            g$sym*$10157$1yk2we)
                                                          ((case-lambda
                                                             ((g$subst$10158$1yk2we)
                                                              (g$rem*$10111$1yk2we
                                                                (map g$syntax->datum$7714$1yk2we
                                                                     g$sym*$10157$1yk2we)
                                                                g$subst$10158$1yk2we)))
                                                           (g$get-import$10115$1yk2we
                                                             g$isp$10156$1yk2we))))
                                                       g$ls/false$10151$1yk2we)
                                                     ((case-lambda
                                                        ((g$t$10159$1yk2we)
                                                         ((case-lambda
                                                            ((g$ls/false$10160$1yk2we)
                                                             (if (if g$ls/false$10160$1yk2we
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10161$1yk2we
                                                                            g$isp$10162$1yk2we
                                                                            g$sym*$10163$1yk2we)
                                                                          (if (eq? (g$syntax->datum$7714$1yk2we
                                                                                     g$only$10161$1yk2we)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5480$1yk2we
                                                                                g$idsyn?$10106$1yk2we
                                                                                g$sym*$10163$1yk2we))
                                                                            '#f)))
                                                                       g$ls/false$10160$1yk2we))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10164$1yk2we
                                                                      g$isp$10165$1yk2we
                                                                      g$sym*$10166$1yk2we)
                                                                    ((case-lambda
                                                                       ((g$subst$10167$1yk2we
                                                                          g$sym*$10168$1yk2we)
                                                                        ((case-lambda
                                                                           ((g$sym*$10169$1yk2we)
                                                                            ((case-lambda
                                                                               ((g$lab*$10170$1yk2we)
                                                                                (map cons
                                                                                     g$sym*$10169$1yk2we
                                                                                     g$lab*$10170$1yk2we)))
                                                                             (g$find*$10110$1yk2we
                                                                               g$sym*$10169$1yk2we
                                                                               g$subst$10167$1yk2we))))
                                                                         (g$remove-dups$10112$1yk2we
                                                                           g$sym*$10168$1yk2we))))
                                                                     (g$get-import$10115$1yk2we
                                                                       g$isp$10165$1yk2we)
                                                                     (map g$syntax->datum$7714$1yk2we
                                                                          g$sym*$10166$1yk2we))))
                                                                 g$ls/false$10160$1yk2we)
                                                               ((case-lambda
                                                                  ((g$t$10171$1yk2we)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10172$1yk2we)
                                                                       (if (if g$ls/false$10172$1yk2we
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10173$1yk2we
                                                                                      g$isp$10174$1yk2we
                                                                                      g$p$10175$1yk2we)
                                                                                    (if (eq? (g$syntax->datum$7714$1yk2we
                                                                                               g$prefix$10173$1yk2we)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10106$1yk2we
                                                                                          g$p$10175$1yk2we))
                                                                                      '#f)))
                                                                                 g$ls/false$10172$1yk2we))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10176$1yk2we
                                                                                g$isp$10177$1yk2we
                                                                                g$p$10178$1yk2we)
                                                                              ((case-lambda
                                                                                 ((g$subst$10179$1yk2we
                                                                                    g$prefix$10180$1yk2we)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10181$1yk2we)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10180$1yk2we
                                                                                                (symbol->string
                                                                                                  (car g$x$10181$1yk2we))))
                                                                                            (cdr g$x$10181$1yk2we))))
                                                                                       g$subst$10179$1yk2we)))
                                                                               (g$get-import$10115$1yk2we
                                                                                 g$isp$10177$1yk2we)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7714$1yk2we
                                                                                   g$p$10178$1yk2we)))))
                                                                           g$ls/false$10172$1yk2we)
                                                                         ((case-lambda
                                                                            ((g$t$10182$1yk2we)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10183$1yk2we)
                                                                                 (if (if g$ls/false$10183$1yk2we
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10184$1yk2we
                                                                                                g$spec*$10185$1yk2we)
                                                                                              (eq? (g$syntax->datum$7714$1yk2we
                                                                                                     g$library$10184$1yk2we)
                                                                                                   'library)))
                                                                                           g$ls/false$10183$1yk2we))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10186$1yk2we
                                                                                          g$spec*$10187$1yk2we)
                                                                                        (g$import-library$10114$1yk2we
                                                                                          g$spec*$10187$1yk2we)))
                                                                                     g$ls/false$10183$1yk2we)
                                                                                   ((case-lambda
                                                                                      ((g$t$10188$1yk2we)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10189$1yk2we)
                                                                                           (if (if g$ls/false$10189$1yk2we
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10190$1yk2we
                                                                                                          g$isp$10191$1yk2we
                                                                                                          g$rest$10192$1yk2we)
                                                                                                        (eq? (g$syntax->datum$7714$1yk2we
                                                                                                               g$for$10190$1yk2we)
                                                                                                             'for)))
                                                                                                     g$ls/false$10189$1yk2we))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10193$1yk2we
                                                                                                    g$isp$10194$1yk2we
                                                                                                    g$rest$10195$1yk2we)
                                                                                                  (g$get-import$10115$1yk2we
                                                                                                    g$isp$10194$1yk2we)))
                                                                                               g$ls/false$10189$1yk2we)
                                                                                             ((case-lambda
                                                                                                ((g$t$10196$1yk2we)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10197$1yk2we)
                                                                                                     (if g$ls/false$10197$1yk2we
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10198$1yk2we)
                                                                                                            (g$syntax-violation$7711$1yk2we
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10198$1yk2we)))
                                                                                                         g$ls/false$10197$1yk2we)
                                                                                                       (g$syntax-violation$7711$1yk2we
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10196$1yk2we))))
                                                                                                  (g$syntax-dispatch$7600$1yk2we
                                                                                                    g$t$10196$1yk2we
                                                                                                    'any))))
                                                                                              g$t$10188$1yk2we))))
                                                                                        (g$syntax-dispatch$7600$1yk2we
                                                                                          g$t$10188$1yk2we
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10182$1yk2we))))
                                                                              (g$syntax-dispatch$7600$1yk2we
                                                                                g$t$10182$1yk2we
                                                                                '(any each-any)))))
                                                                          g$t$10171$1yk2we))))
                                                                    (g$syntax-dispatch$7600$1yk2we
                                                                      g$t$10171$1yk2we
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10159$1yk2we))))
                                                          (g$syntax-dispatch$7600$1yk2we
                                                            g$t$10159$1yk2we
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10150$1yk2we))))
                                                (g$syntax-dispatch$7600$1yk2we
                                                  g$t$10150$1yk2we
                                                  '(any any . each-any)))))
                                            g$t$10135$1yk2we))))
                                      (g$syntax-dispatch$7600$1yk2we
                                        g$t$10135$1yk2we
                                        '(any any . #(each (any any)))))))
                                  g$t$10129$1yk2we))))
                            (g$syntax-dispatch$7600$1yk2we
                              g$t$10129$1yk2we
                              '(any . each-any)))))
                        g$spec$10128$1yk2we))))
                  (g$add-imports!$10116$1yk2we
                    (case-lambda
                      ((g$imp$10120$1yk2we g$h$10121$1yk2we)
                       ((case-lambda
                          ((g$subst$10122$1yk2we)
                           (for-each
                             (case-lambda
                               ((g$x$10123$1yk2we)
                                ((case-lambda
                                   ((g$name$10124$1yk2we g$label$10125$1yk2we)
                                    ((case-lambda
                                       ((g$t$10126$1yk2we)
                                        (if g$t$10126$1yk2we
                                          ((case-lambda
                                             ((g$l$10127$1yk2we)
                                              (if (not (eq? g$l$10127$1yk2we
                                                            g$label$10125$1yk2we))
                                                (g$dup-error$10107$1yk2we
                                                  g$name$10124$1yk2we)
                                                (void))))
                                           g$t$10126$1yk2we)
                                          (g$hashtable-set!$5277$1yk2we
                                            g$h$10121$1yk2we
                                            g$name$10124$1yk2we
                                            g$label$10125$1yk2we))))
                                     (g$hashtable-ref$5276$1yk2we
                                       g$h$10121$1yk2we
                                       g$name$10124$1yk2we
                                       '#f))))
                                 (car g$x$10123$1yk2we)
                                 (cdr g$x$10123$1yk2we))))
                             g$subst$10122$1yk2we)))
                        (g$get-import$10115$1yk2we g$imp$10120$1yk2we))))))
          ((letrec ((g$f$10117$1yk2we
                      (case-lambda
                        ((g$imp*$10118$1yk2we g$h$10119$1yk2we)
                         (if (null? g$imp*$10118$1yk2we)
                           (hashtable-entries g$h$10119$1yk2we)
                           (begin
                             (g$add-imports!$10116$1yk2we
                               (car g$imp*$10118$1yk2we)
                               g$h$10119$1yk2we)
                             (g$f$10117$1yk2we
                               (cdr g$imp*$10118$1yk2we)
                               g$h$10119$1yk2we)))))))
             g$f$10117$1yk2we)
           g$imp*$10105$1yk2we
           (g$make-eq-hashtable$5273$1yk2we))))))
   (g$make-top-rib$7650$1yk2we
     g$make-top-rib$11110$1yk2we
     (case-lambda
       ((g$names$10367$1yk2we g$labels$10368$1yk2we)
        ((case-lambda
           ((g$rib$10369$1yk2we)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10370$1yk2we g$label$10371$1yk2we)
                   (begin
                     (if (not (symbol? g$name$10370$1yk2we))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10370$1yk2we)
                       (void))
                     (g$extend-rib!$7286$1yk2we
                       g$rib$10369$1yk2we
                       (g$make-stx$7295$1yk2we
                         g$name$10370$1yk2we
                         g$top-mark*$7264$1yk2we
                         '()
                         '())
                       g$label$10371$1yk2we))))
                g$names$10367$1yk2we
                g$labels$10368$1yk2we)
              g$rib$10369$1yk2we)))
         (g$make-empty-rib$7285$1yk2we)))))
   (g$make-collector$7651$1yk2we
     g$make-collector$11111$1yk2we
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10372$1yk2we)
            (case-lambda
              (() g$ls$10372$1yk2we)
              ((g$x$10373$1yk2we)
               (set! g$ls$10372$1yk2we
                 (g$set-cons$7261$1yk2we
                   g$x$10373$1yk2we
                   g$ls$10372$1yk2we))))))
         '()))))
   (g$inv-collector$7652$1yk2we
     g$inv-collector$11112$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda
         (g$args$10374$1yk2we
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10375$1yk2we)
          (begin
            (if (not (procedure? g$x$10375$1yk2we))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10375$1yk2we)
              (void))
            g$x$10375$1yk2we)))))
   (g$vis-collector$7653$1yk2we
     g$vis-collector$11113$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda
         (g$args$10376$1yk2we
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10377$1yk2we)
          (begin
            (if (not (procedure? g$x$10377$1yk2we))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10377$1yk2we)
              (void))
            g$x$10377$1yk2we)))))
   (g$imp-collector$7654$1yk2we
     g$imp-collector$11114$1yk2we
     (g$make-parameter$6590$1yk2we
       (case-lambda
         (g$args$10378$1yk2we
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10379$1yk2we)
          (begin
            (if (not (procedure? g$x$10379$1yk2we))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10379$1yk2we)
              (void))
            g$x$10379$1yk2we)))))
   (g$chi-library-internal$7655$1yk2we
     g$chi-library-internal$11115$1yk2we
     (case-lambda
       ((g$e*$10380$1yk2we g$rib$10381$1yk2we g$top?$10382$1yk2we)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7644$1yk2we
               g$e*$10380$1yk2we
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10381$1yk2we
               g$top?$10382$1yk2we)))
          (case-lambda
            ((g$e*$10391$1yk2we
               g$r$10392$1yk2we
               g$mr$10393$1yk2we
               g$lex*$10394$1yk2we
               g$rhs*$10395$1yk2we
               g$mod**$10396$1yk2we
               g$_kwd*$10397$1yk2we
               g$exp*$10398$1yk2we)
             ((case-lambda
                ((g$exp*$10399$1yk2we
                   g$_kwd*$10400$1yk2we
                   g$mod**$10401$1yk2we
                   g$rhs*$10402$1yk2we
                   g$lex*$10403$1yk2we
                   g$mr$10404$1yk2we
                   g$r$10405$1yk2we
                   g$e*$10406$1yk2we)
                 (values
                   (append
                     (apply append (reverse g$mod**$10401$1yk2we))
                     g$e*$10406$1yk2we)
                   g$r$10405$1yk2we
                   g$mr$10404$1yk2we
                   (reverse g$lex*$10403$1yk2we)
                   (reverse g$rhs*$10402$1yk2we)
                   g$exp*$10399$1yk2we)))
              g$exp*$10398$1yk2we
              g$_kwd*$10397$1yk2we
              g$mod**$10396$1yk2we
              g$rhs*$10395$1yk2we
              g$lex*$10394$1yk2we
              g$mr$10393$1yk2we
              g$r$10392$1yk2we
              g$e*$10391$1yk2we)))))))
   (g$chi-interaction-expr$7656$1yk2we
     g$chi-interaction-expr$11116$1yk2we
     (case-lambda
       ((g$e$10407$1yk2we g$rib$10408$1yk2we g$r$10409$1yk2we)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7644$1yk2we
               (list g$e$10407$1yk2we)
               g$r$10409$1yk2we
               g$r$10409$1yk2we
               '()
               '()
               '()
               '()
               '()
               g$rib$10408$1yk2we
               '#t)))
          (case-lambda
            ((g$e*$10418$1yk2we
               g$r$10419$1yk2we
               g$mr$10420$1yk2we
               g$lex*$10421$1yk2we
               g$rhs*$10422$1yk2we
               g$mod**$10423$1yk2we
               g$_kwd*$10424$1yk2we
               g$_exp*$10425$1yk2we)
             ((case-lambda
                ((g$_exp*$10426$1yk2we
                   g$_kwd*$10427$1yk2we
                   g$mod**$10428$1yk2we
                   g$rhs*$10429$1yk2we
                   g$lex*$10430$1yk2we
                   g$mr$10431$1yk2we
                   g$r$10432$1yk2we
                   g$e*$10433$1yk2we)
                 ((case-lambda
                    ((g$e*$10434$1yk2we)
                     ((case-lambda
                        ((g$e$10435$1yk2we)
                         (values g$e$10435$1yk2we g$r$10432$1yk2we)))
                      (if (null? g$e*$10434$1yk2we)
                        (g$build-void$7257$1yk2we)
                        (if (null? (cdr g$e*$10434$1yk2we))
                          (car g$e*$10434$1yk2we)
                          (g$build-sequence$7256$1yk2we
                            '#f
                            g$e*$10434$1yk2we))))))
                  (g$expand-interaction-rhs*/init*$7625$1yk2we
                    (reverse g$lex*$10430$1yk2we)
                    (reverse g$rhs*$10429$1yk2we)
                    (append
                      (apply append (reverse g$mod**$10428$1yk2we))
                      g$e*$10433$1yk2we)
                    g$r$10432$1yk2we
                    g$mr$10431$1yk2we))))
              g$_exp*$10425$1yk2we
              g$_kwd*$10424$1yk2we
              g$mod**$10423$1yk2we
              g$rhs*$10422$1yk2we
              g$lex*$10421$1yk2we
              g$mr$10420$1yk2we
              g$r$10419$1yk2we
              g$e*$10418$1yk2we)))))))
   (g$library-body-expander$7657$1yk2we
     g$library-body-expander$11117$1yk2we
     (case-lambda
       ((g$name$10436$1yk2we
          g$main-exp*$10437$1yk2we
          g$imp*$10438$1yk2we
          g$b*$10439$1yk2we
          g$top?$10440$1yk2we)
        (letrec* ((g$itc$10441$1yk2we (g$make-collector$7651$1yk2we)))
          ((case-lambda
             ((g$imp-collector$10446$1yk2we
                g$top-level-context$10447$1yk2we
                g$imp-collector$10448$1yk2we
                g$top-level-context$10449$1yk2we)
              ((case-lambda
                 ((g$swap$10450$1yk2we)
                  (dynamic-wind
                    g$swap$10450$1yk2we
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$7649$1yk2we
                              g$imp*$10438$1yk2we)))
                         (case-lambda
                           ((g$subst-names$10453$1yk2we
                              g$subst-labels$10454$1yk2we)
                            ((case-lambda
                               ((g$subst-labels$10455$1yk2we
                                  g$subst-names$10456$1yk2we)
                                ((case-lambda
                                   ((g$rib$10457$1yk2we)
                                    (letrec* ((g$wrap$10458$1yk2we
                                                (case-lambda
                                                  ((g$x$10520$1yk2we)
                                                   (g$make-stx$7295$1yk2we
                                                     g$x$10520$1yk2we
                                                     g$top-mark*$7264$1yk2we
                                                     (list g$rib$10457$1yk2we)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$10459$1yk2we
                                            g$main-exp*$10460$1yk2we
                                            g$rtc$10461$1yk2we
                                            g$vtc$10462$1yk2we)
                                          ((case-lambda
                                             ((g$inv-collector$10467$1yk2we
                                                g$vis-collector$10468$1yk2we
                                                g$inv-collector$10469$1yk2we
                                                g$vis-collector$10470$1yk2we)
                                              ((case-lambda
                                                 ((g$swap$10471$1yk2we)
                                                  (dynamic-wind
                                                    g$swap$10471$1yk2we
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$7655$1yk2we
                                                              g$b*$10459$1yk2we
                                                              g$rib$10457$1yk2we
                                                              g$top?$10440$1yk2we)))
                                                         (case-lambda
                                                           ((g$init*$10478$1yk2we
                                                              g$r$10479$1yk2we
                                                              g$mr$10480$1yk2we
                                                              g$lex*$10481$1yk2we
                                                              g$rhs*$10482$1yk2we
                                                              g$internal-exp*$10483$1yk2we)
                                                            ((case-lambda
                                                               ((g$internal-exp*$10484$1yk2we
                                                                  g$rhs*$10485$1yk2we
                                                                  g$lex*$10486$1yk2we
                                                                  g$mr$10487$1yk2we
                                                                  g$r$10488$1yk2we
                                                                  g$init*$10489$1yk2we)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$7646$1yk2we
                                                                       (append
                                                                         g$main-exp*$10460$1yk2we
                                                                         g$internal-exp*$10484$1yk2we))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$10492$1yk2we
                                                                       g$exp-id*$10493$1yk2we)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$10494$1yk2we
                                                                           g$exp-name*$10495$1yk2we)
                                                                         (begin
                                                                           (g$seal-rib!$7288$1yk2we
                                                                             g$rib$10457$1yk2we)
                                                                           ((case-lambda
                                                                              ((g$init*$10496$1yk2we)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$10497$1yk2we)
                                                                                   ((case-lambda
                                                                                      (()
                                                                                       (begin
                                                                                         (g$unseal-rib!$7289$1yk2we
                                                                                           g$rib$10457$1yk2we)
                                                                                         ((case-lambda
                                                                                            ((g$loc*$10498$1yk2we
                                                                                               g$export-subst$10499$1yk2we)
                                                                                             (letrec* ((g$errstr$10500$1yk2we
                                                                                                         '"attempt to export mutated variable"))
                                                                                               (call-with-values
                                                                                                 (case-lambda
                                                                                                   (()
                                                                                                    (g$make-export-env/macros$7700$1yk2we
                                                                                                      g$lex*$10486$1yk2we
                                                                                                      g$loc*$10498$1yk2we
                                                                                                      g$r$10488$1yk2we)))
                                                                                                 (case-lambda
                                                                                                   ((g$export-env$10504$1yk2we
                                                                                                      g$global*$10505$1yk2we
                                                                                                      g$macro*$10506$1yk2we)
                                                                                                    ((case-lambda
                                                                                                       ((g$macro*$10507$1yk2we
                                                                                                          g$global*$10508$1yk2we
                                                                                                          g$export-env$10509$1yk2we)
                                                                                                        (begin
                                                                                                          (for-each
                                                                                                            (case-lambda
                                                                                                              ((g$s$10510$1yk2we)
                                                                                                               ((case-lambda
                                                                                                                  ((g$name$10511$1yk2we
                                                                                                                     g$label$10512$1yk2we)
                                                                                                                   ((case-lambda
                                                                                                                      ((g$p$10513$1yk2we)
                                                                                                                       (if g$p$10513$1yk2we
                                                                                                                         ((case-lambda
                                                                                                                            ((g$b$10514$1yk2we)
                                                                                                                             ((case-lambda
                                                                                                                                ((g$type$10515$1yk2we)
                                                                                                                                 (if (eq? g$type$10515$1yk2we
                                                                                                                                          'mutable)
                                                                                                                                   (g$syntax-violation$7711$1yk2we
                                                                                                                                     'export
                                                                                                                                     g$errstr$10500$1yk2we
                                                                                                                                     g$name$10511$1yk2we)
                                                                                                                                   (void))))
                                                                                                                              (car g$b$10514$1yk2we))))
                                                                                                                          (cdr g$p$10513$1yk2we))
                                                                                                                         (void))))
                                                                                                                    (assq
                                                                                                                      g$label$10512$1yk2we
                                                                                                                      g$export-env$10509$1yk2we))))
                                                                                                                (car g$s$10510$1yk2we)
                                                                                                                (cdr g$s$10510$1yk2we))))
                                                                                                            g$export-subst$10499$1yk2we)
                                                                                                          ((case-lambda
                                                                                                             ((g$invoke-body$10516$1yk2we
                                                                                                                g$invoke-definitions$10517$1yk2we)
                                                                                                              (values
                                                                                                                (g$itc$10441$1yk2we)
                                                                                                                (g$rtc$10461$1yk2we)
                                                                                                                (g$vtc$10462$1yk2we)
                                                                                                                (g$build-sequence$7256$1yk2we
                                                                                                                  '#f
                                                                                                                  (append
                                                                                                                    g$invoke-definitions$10517$1yk2we
                                                                                                                    (list
                                                                                                                      g$invoke-body$10516$1yk2we)))
                                                                                                                g$macro*$10507$1yk2we
                                                                                                                g$export-subst$10499$1yk2we
                                                                                                                g$export-env$10509$1yk2we)))
                                                                                                           (g$build-library-letrec*$7260$1yk2we
                                                                                                             '#f
                                                                                                             g$name$10436$1yk2we
                                                                                                             g$lex*$10486$1yk2we
                                                                                                             g$loc*$10498$1yk2we
                                                                                                             g$rhs*$10497$1yk2we
                                                                                                             (if (null?
                                                                                                                   g$init*$10496$1yk2we)
                                                                                                               (g$build-void$7257$1yk2we)
                                                                                                               (g$build-sequence$7256$1yk2we
                                                                                                                 '#f
                                                                                                                 g$init*$10496$1yk2we)))
                                                                                                           (map g$build-global-define$7252$1yk2we
                                                                                                                (map cdr
                                                                                                                     g$global*$10508$1yk2we))))))
                                                                                                     g$macro*$10506$1yk2we
                                                                                                     g$global*$10505$1yk2we
                                                                                                     g$export-env$10504$1yk2we)))))))
                                                                                          (map g$gen-global$7267$1yk2we
                                                                                               g$lex*$10486$1yk2we)
                                                                                          (g$make-export-subst$7699$1yk2we
                                                                                            g$exp-name*$10495$1yk2we
                                                                                            g$exp-id*$10494$1yk2we))))))))
                                                                                (g$chi-rhs*$7626$1yk2we
                                                                                  g$rhs*$10485$1yk2we
                                                                                  g$r$10488$1yk2we
                                                                                  g$mr$10487$1yk2we))))
                                                                            (g$chi-expr*$7616$1yk2we
                                                                              g$init*$10489$1yk2we
                                                                              g$r$10488$1yk2we
                                                                              g$mr$10487$1yk2we)))))
                                                                      g$exp-id*$10493$1yk2we
                                                                      g$exp-name*$10492$1yk2we))))))
                                                             g$internal-exp*$10483$1yk2we
                                                             g$rhs*$10482$1yk2we
                                                             g$lex*$10481$1yk2we
                                                             g$mr$10480$1yk2we
                                                             g$r$10479$1yk2we
                                                             g$init*$10478$1yk2we))))))
                                                    g$swap$10471$1yk2we)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$10518$1yk2we)
                                                        (begin
                                                          (g$inv-collector$10467$1yk2we
                                                            g$inv-collector$10469$1yk2we)
                                                          (set! g$inv-collector$10469$1yk2we
                                                            g$t$10518$1yk2we))))
                                                     (g$inv-collector$10467$1yk2we))
                                                    ((case-lambda
                                                       ((g$t$10519$1yk2we)
                                                        (begin
                                                          (g$vis-collector$10468$1yk2we
                                                            g$vis-collector$10470$1yk2we)
                                                          (set! g$vis-collector$10470$1yk2we
                                                            g$t$10519$1yk2we))))
                                                     (g$vis-collector$10468$1yk2we))))))))
                                           g$inv-collector$7652$1yk2we
                                           g$vis-collector$7653$1yk2we
                                           g$rtc$10461$1yk2we
                                           g$vtc$10462$1yk2we)))
                                       (map g$wrap$10458$1yk2we
                                            g$b*$10439$1yk2we)
                                       (map g$wrap$10458$1yk2we
                                            g$main-exp*$10437$1yk2we)
                                       (g$make-collector$7651$1yk2we)
                                       (g$make-collector$7651$1yk2we)))))
                                 (g$make-top-rib$7650$1yk2we
                                   g$subst-names$10456$1yk2we
                                   g$subst-labels$10455$1yk2we))))
                             g$subst-labels$10454$1yk2we
                             g$subst-names$10453$1yk2we))))))
                    g$swap$10450$1yk2we)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10521$1yk2we)
                        (begin
                          (g$imp-collector$10446$1yk2we
                            g$imp-collector$10448$1yk2we)
                          (set! g$imp-collector$10448$1yk2we
                            g$t$10521$1yk2we))))
                     (g$imp-collector$10446$1yk2we))
                    ((case-lambda
                       ((g$t$10522$1yk2we)
                        (begin
                          (g$top-level-context$10447$1yk2we
                            g$top-level-context$10449$1yk2we)
                          (set! g$top-level-context$10449$1yk2we
                            g$t$10522$1yk2we))))
                     (g$top-level-context$10447$1yk2we))))))))
           g$imp-collector$7654$1yk2we
           g$top-level-context$7718$1yk2we
           g$itc$10441$1yk2we
           '#f)))))
   (g$core-library-expander$7658$1yk2we
     g$core-library-expander$11118$1yk2we
     (case-lambda
       ((g$e$10523$1yk2we g$verify-name$10524$1yk2we)
        (call-with-values
          (case-lambda (() (g$parse-library$7648$1yk2we g$e$10523$1yk2we)))
          (case-lambda
            ((g$name*$10529$1yk2we
               g$exp*$10530$1yk2we
               g$imp*$10531$1yk2we
               g$b*$10532$1yk2we)
             ((case-lambda
                ((g$b*$10533$1yk2we
                   g$imp*$10534$1yk2we
                   g$exp*$10535$1yk2we
                   g$name*$10536$1yk2we)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7647$1yk2we g$name*$10536$1yk2we)))
                   (case-lambda
                     ((g$name$10539$1yk2we g$ver$10540$1yk2we)
                      ((case-lambda
                         ((g$ver$10541$1yk2we g$name$10542$1yk2we)
                          (begin
                            (g$verify-name$10524$1yk2we g$name$10542$1yk2we)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7657$1yk2we
                                   g$name$10542$1yk2we
                                   g$exp*$10535$1yk2we
                                   g$imp*$10534$1yk2we
                                   g$b*$10533$1yk2we
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10550$1yk2we
                                   g$invoke-req*$10551$1yk2we
                                   g$visit-req*$10552$1yk2we
                                   g$invoke-code$10553$1yk2we
                                   g$visit-code$10554$1yk2we
                                   g$export-subst$10555$1yk2we
                                   g$export-env$10556$1yk2we)
                                 ((case-lambda
                                    ((g$export-env$10557$1yk2we
                                       g$export-subst$10558$1yk2we
                                       g$visit-code$10559$1yk2we
                                       g$invoke-code$10560$1yk2we
                                       g$visit-req*$10561$1yk2we
                                       g$invoke-req*$10562$1yk2we
                                       g$imp*$10563$1yk2we)
                                     (values
                                       g$name$10542$1yk2we
                                       g$ver$10541$1yk2we
                                       g$imp*$10563$1yk2we
                                       g$invoke-req*$10562$1yk2we
                                       g$visit-req*$10561$1yk2we
                                       g$invoke-code$10560$1yk2we
                                       g$visit-code$10559$1yk2we
                                       g$export-subst$10558$1yk2we
                                       g$export-env$10557$1yk2we)))
                                  g$export-env$10556$1yk2we
                                  g$export-subst$10555$1yk2we
                                  g$visit-code$10554$1yk2we
                                  g$invoke-code$10553$1yk2we
                                  g$visit-req*$10552$1yk2we
                                  g$invoke-req*$10551$1yk2we
                                  g$imp*$10550$1yk2we)))))))
                       g$ver$10540$1yk2we
                       g$name$10539$1yk2we))))))
              g$b*$10532$1yk2we
              g$imp*$10531$1yk2we
              g$exp*$10530$1yk2we
              g$name*$10529$1yk2we)))))))
   (g$parse-top-level-program$7659$1yk2we
     g$parse-top-level-program$11119$1yk2we
     (case-lambda
       ((g$e*$10564$1yk2we)
        ((case-lambda
           ((g$t$10565$1yk2we)
            ((case-lambda
               ((g$ls/false$10566$1yk2we)
                (if (if g$ls/false$10566$1yk2we
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10567$1yk2we
                               g$imp*$10568$1yk2we
                               g$b*$10569$1yk2we)
                             (eq? (g$syntax->datum$7714$1yk2we
                                    g$import$10567$1yk2we)
                                  'import)))
                          g$ls/false$10566$1yk2we))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10570$1yk2we
                         g$imp*$10571$1yk2we
                         g$b*$10572$1yk2we)
                       (values g$imp*$10571$1yk2we g$b*$10572$1yk2we)))
                    g$ls/false$10566$1yk2we)
                  ((case-lambda
                     ((g$t$10573$1yk2we)
                      ((case-lambda
                         ((g$ls/false$10574$1yk2we)
                          (if (if g$ls/false$10574$1yk2we
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10575$1yk2we
                                         g$x$10576$1yk2we
                                         g$y$10577$1yk2we)
                                       (eq? (g$syntax->datum$7714$1yk2we
                                              g$import$10575$1yk2we)
                                            'import)))
                                    g$ls/false$10574$1yk2we))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10578$1yk2we
                                   g$x$10579$1yk2we
                                   g$y$10580$1yk2we)
                                 (g$syntax-violation$7711$1yk2we
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7319$1yk2we
                                     g$e*$10564$1yk2we))))
                              g$ls/false$10574$1yk2we)
                            ((case-lambda
                               ((g$t$10581$1yk2we)
                                ((case-lambda
                                   ((g$ls/false$10582$1yk2we)
                                    (if g$ls/false$10582$1yk2we
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10582$1yk2we)
                                      (g$syntax-violation$7711$1yk2we
                                        '#f
                                        '"invalid syntax"
                                        g$t$10581$1yk2we))))
                                 (g$syntax-dispatch$7600$1yk2we
                                   g$t$10581$1yk2we
                                   '_))))
                             g$t$10573$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we
                         g$t$10573$1yk2we
                         '((any . any) . any)))))
                   g$t$10565$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we
               g$t$10565$1yk2we
               '((any . each-any) . each-any)))))
         g$e*$10564$1yk2we))))
   (g$top-level-expander$7660$1yk2we
     g$top-level-expander$11120$1yk2we
     (case-lambda
       ((g$e*$10583$1yk2we)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7659$1yk2we g$e*$10583$1yk2we)))
          (case-lambda
            ((g$imp*$10586$1yk2we g$b*$10587$1yk2we)
             ((case-lambda
                ((g$b*$10588$1yk2we g$imp*$10589$1yk2we)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7657$1yk2we
                        '()
                        '()
                        g$imp*$10589$1yk2we
                        g$b*$10588$1yk2we
                        '#t)))
                   (case-lambda
                     ((g$imp*$10597$1yk2we
                        g$invoke-req*$10598$1yk2we
                        g$visit-req*$10599$1yk2we
                        g$invoke-code$10600$1yk2we
                        g$visit-code$10601$1yk2we
                        g$export-subst$10602$1yk2we
                        g$export-env$10603$1yk2we)
                      ((case-lambda
                         ((g$export-env$10604$1yk2we
                            g$export-subst$10605$1yk2we
                            g$visit-code$10606$1yk2we
                            g$invoke-code$10607$1yk2we
                            g$visit-req*$10608$1yk2we
                            g$invoke-req*$10609$1yk2we
                            g$imp*$10610$1yk2we)
                          (values
                            g$invoke-req*$10609$1yk2we
                            g$invoke-code$10607$1yk2we)))
                       g$export-env$10603$1yk2we
                       g$export-subst$10602$1yk2we
                       g$visit-code$10601$1yk2we
                       g$invoke-code$10600$1yk2we
                       g$visit-req*$10599$1yk2we
                       g$invoke-req*$10598$1yk2we
                       g$imp*$10597$1yk2we))))))
              g$b*$10587$1yk2we
              g$imp*$10586$1yk2we)))))))
   (g$8801$7661$1yk2we
     g$8801$11121$1yk2we
     (make-record-type-descriptor
       'env
       '#f
       'g$8804$1yk2we
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8803$7662$1yk2we g$8803$11122$1yk2we '#f)
   (g$8802$7663$1yk2we
     g$8802$11123$1yk2we
     (make-record-constructor-descriptor
       g$8801$7661$1yk2we
       '#f
       g$8803$7662$1yk2we))
   (g$env?$7664$1yk2we
     g$env?$11124$1yk2we
     (record-predicate g$8801$7661$1yk2we))
   (g$make-env$7665$1yk2we
     g$make-env$11125$1yk2we
     (record-constructor g$8802$7663$1yk2we))
   (g$env-names$7666$1yk2we
     g$env-names$11126$1yk2we
     (record-accessor g$8801$7661$1yk2we '0))
   (g$env-labels$7667$1yk2we
     g$env-labels$11127$1yk2we
     (record-accessor g$8801$7661$1yk2we '1))
   (g$env-itc$7668$1yk2we
     g$env-itc$11128$1yk2we
     (record-accessor g$8801$7661$1yk2we '2))
   (g$set-env-names!$7669$1yk2we
     g$set-env-names!$11129$1yk2we
     (record-mutator g$8801$7661$1yk2we '0))
   (g$set-env-labels!$7670$1yk2we
     g$set-env-labels!$11130$1yk2we
     (record-mutator g$8801$7661$1yk2we '1))
   (g$set-env-itc!$7671$1yk2we
     g$set-env-itc!$11131$1yk2we
     (record-mutator g$8801$7661$1yk2we '2))
   (g$rp$7672$1yk2we
     g$rp$11132$1yk2we
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10611$1yk2we g$p$10612$1yk2we)
          (display '"#<environment>" g$p$10612$1yk2we)))))
   (g$8820$7673$1yk2we
     g$8820$11133$1yk2we
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8823$1yk2we
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8822$7674$1yk2we g$8822$11134$1yk2we '#f)
   (g$8821$7675$1yk2we
     g$8821$11135$1yk2we
     (make-record-constructor-descriptor
       g$8820$7673$1yk2we
       '#f
       g$8822$7674$1yk2we))
   (g$interaction-env?$7676$1yk2we
     g$interaction-env?$11136$1yk2we
     (record-predicate g$8820$7673$1yk2we))
   (g$make-interaction-env$7677$1yk2we
     g$make-interaction-env$11137$1yk2we
     (record-constructor g$8821$7675$1yk2we))
   (g$interaction-env-rib$7678$1yk2we
     g$interaction-env-rib$11138$1yk2we
     (record-accessor g$8820$7673$1yk2we '0))
   (g$interaction-env-r$7679$1yk2we
     g$interaction-env-r$11139$1yk2we
     (record-accessor g$8820$7673$1yk2we '1))
   (g$interaction-env-locs$7680$1yk2we
     g$interaction-env-locs$11140$1yk2we
     (record-accessor g$8820$7673$1yk2we '2))
   (g$set-interaction-env-rib!$7681$1yk2we
     g$set-interaction-env-rib!$11141$1yk2we
     (record-mutator g$8820$7673$1yk2we '0))
   (g$set-interaction-env-r!$7682$1yk2we
     g$set-interaction-env-r!$11142$1yk2we
     (record-mutator g$8820$7673$1yk2we '1))
   (g$set-interaction-env-locs!$7683$1yk2we
     g$set-interaction-env-locs!$11143$1yk2we
     (record-mutator g$8820$7673$1yk2we '2))
   (g$rp$7684$1yk2we
     g$rp$11144$1yk2we
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10613$1yk2we g$p$10614$1yk2we)
          (display '"#<environment>" g$p$10614$1yk2we)))))
   (g$interaction-environment-symbols$7685$1yk2we
     g$interaction-environment-symbols$11145$1yk2we
     (case-lambda
       (()
        (g$environment-symbols$7689$1yk2we
          (g$interaction-environment$7717$1yk2we)))))
   (g$environment-bindings$7686$1yk2we
     g$environment-bindings$11146$1yk2we
     (case-lambda
       ((g$e$10615$1yk2we)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$10616$1yk2we g$label$10617$1yk2we)
               (g$parse-binding$7687$1yk2we
                 (cons
                   g$name$10616$1yk2we
                   (g$imported-label->binding$7136$1yk2we
                     g$label$10617$1yk2we)))))
            (g$env-names$7666$1yk2we g$e$10615$1yk2we)
            (g$env-labels$7667$1yk2we g$e$10615$1yk2we))))))
   (g$parse-binding$7687$1yk2we
     g$parse-binding$11147$1yk2we
     (case-lambda
       ((g$b$10618$1yk2we)
        (cons
          (car g$b$10618$1yk2we)
          ((case-lambda
             ((g$t$10619$1yk2we)
              (if (memv g$t$10619$1yk2we '(core-prim global))
                'procedure
                (if (memv g$t$10619$1yk2we '(core-macro macro global-macro))
                  'syntax
                  (if (memv g$t$10619$1yk2we '($core-rtd))
                    'record
                    (if (eq? (car g$b$10618$1yk2we)
                             (g$cadr$4999$1yk2we g$b$10618$1yk2we))
                      'syntax
                      'unknown))))))
           (g$cadr$4999$1yk2we g$b$10618$1yk2we))))))
   (g$environment?$7688$1yk2we
     g$environment?$11148$1yk2we
     (case-lambda
       ((g$x$10620$1yk2we)
        ((case-lambda
           ((g$t$10621$1yk2we)
            (if g$t$10621$1yk2we
              g$t$10621$1yk2we
              (begin '#f (g$interaction-env?$7676$1yk2we g$x$10620$1yk2we)))))
         (g$env?$7664$1yk2we g$x$10620$1yk2we)))))
   (g$environment-symbols$7689$1yk2we
     g$environment-symbols$11149$1yk2we
     (case-lambda
       ((g$x$10622$1yk2we)
        (if (g$env?$7664$1yk2we g$x$10622$1yk2we)
          (vector->list (g$env-names$7666$1yk2we g$x$10622$1yk2we))
          (if (g$interaction-env?$7676$1yk2we g$x$10622$1yk2we)
            (map values
                 (g$rib-sym*$7277$1yk2we
                   (g$interaction-env-rib$7678$1yk2we g$x$10622$1yk2we)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$10622$1yk2we))))))
   (g$environment$7690$1yk2we
     g$environment$11150$1yk2we
     (case-lambda
       (g$imp*$10623$1yk2we
        ((case-lambda
           ((g$itc$10624$1yk2we)
            ((case-lambda
               ((g$imp-collector$10627$1yk2we g$imp-collector$10628$1yk2we)
                ((case-lambda
                   ((g$swap$10629$1yk2we)
                    (dynamic-wind
                      g$swap$10629$1yk2we
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7649$1yk2we
                                g$imp*$10623$1yk2we)))
                           (case-lambda
                             ((g$subst-names$10632$1yk2we
                                g$subst-labels$10633$1yk2we)
                              ((case-lambda
                                 ((g$subst-labels$10634$1yk2we
                                    g$subst-names$10635$1yk2we)
                                  (g$make-env$7665$1yk2we
                                    g$subst-names$10635$1yk2we
                                    g$subst-labels$10634$1yk2we
                                    g$itc$10624$1yk2we)))
                               g$subst-labels$10633$1yk2we
                               g$subst-names$10632$1yk2we))))))
                      g$swap$10629$1yk2we)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10636$1yk2we)
                        (begin
                          (g$imp-collector$10627$1yk2we
                            g$imp-collector$10628$1yk2we)
                          (set! g$imp-collector$10628$1yk2we
                            g$t$10636$1yk2we))))
                     (g$imp-collector$10627$1yk2we)))))))
             g$imp-collector$7654$1yk2we
             g$itc$10624$1yk2we)))
         (g$make-collector$7651$1yk2we)))))
   (g$null-environment$7691$1yk2we
     g$null-environment$11151$1yk2we
     (case-lambda
       ((g$n$10637$1yk2we)
        (begin
          (if (not (eqv? g$n$10637$1yk2we '5))
            (assertion-violation 'null-environment '"not 5" g$n$10637$1yk2we)
            (void))
          (g$environment$7690$1yk2we '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7692$1yk2we
     g$scheme-report-environment$11152$1yk2we
     (case-lambda
       ((g$n$10638$1yk2we)
        (begin
          (if (not (eqv? g$n$10638$1yk2we '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10638$1yk2we)
            (void))
          (g$environment$7690$1yk2we '(psyntax scheme-report-environment-5))))))
   (g$expand$7693$1yk2we
     g$expand$11153$1yk2we
     (case-lambda
       ((g$x$10639$1yk2we g$env$10640$1yk2we)
        (if (g$env?$7664$1yk2we g$env$10640$1yk2we)
          ((case-lambda
             ((g$rib$10641$1yk2we)
              ((case-lambda
                 ((g$x$10642$1yk2we
                    g$itc$10643$1yk2we
                    g$rtc$10644$1yk2we
                    g$vtc$10645$1yk2we)
                  ((case-lambda
                     ((g$x$10646$1yk2we)
                      (begin
                        (g$seal-rib!$7288$1yk2we g$rib$10641$1yk2we)
                        (values g$x$10646$1yk2we (g$rtc$10644$1yk2we)))))
                   ((case-lambda
                      ((g$inv-collector$10653$1yk2we
                         g$vis-collector$10654$1yk2we
                         g$imp-collector$10655$1yk2we
                         g$inv-collector$10656$1yk2we
                         g$vis-collector$10657$1yk2we
                         g$imp-collector$10658$1yk2we)
                       ((case-lambda
                          ((g$swap$10659$1yk2we)
                           (dynamic-wind
                             g$swap$10659$1yk2we
                             (case-lambda
                               (()
                                (g$chi-expr$7618$1yk2we
                                  g$x$10642$1yk2we
                                  '()
                                  '())))
                             g$swap$10659$1yk2we)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10660$1yk2we)
                                 (begin
                                   (g$inv-collector$10653$1yk2we
                                     g$inv-collector$10656$1yk2we)
                                   (set! g$inv-collector$10656$1yk2we
                                     g$t$10660$1yk2we))))
                              (g$inv-collector$10653$1yk2we))
                             ((case-lambda
                                ((g$t$10661$1yk2we)
                                 (begin
                                   (g$vis-collector$10654$1yk2we
                                     g$vis-collector$10657$1yk2we)
                                   (set! g$vis-collector$10657$1yk2we
                                     g$t$10661$1yk2we))))
                              (g$vis-collector$10654$1yk2we))
                             ((case-lambda
                                ((g$t$10662$1yk2we)
                                 (begin
                                   (g$imp-collector$10655$1yk2we
                                     g$imp-collector$10658$1yk2we)
                                   (set! g$imp-collector$10658$1yk2we
                                     g$t$10662$1yk2we))))
                              (g$imp-collector$10655$1yk2we))))))))
                    g$inv-collector$7652$1yk2we
                    g$vis-collector$7653$1yk2we
                    g$imp-collector$7654$1yk2we
                    g$rtc$10644$1yk2we
                    g$vtc$10645$1yk2we
                    g$itc$10643$1yk2we))))
               (g$make-stx$7295$1yk2we
                 g$x$10639$1yk2we
                 g$top-mark*$7264$1yk2we
                 (list g$rib$10641$1yk2we)
                 '())
               (g$env-itc$7668$1yk2we g$env$10640$1yk2we)
               (g$make-collector$7651$1yk2we)
               (g$make-collector$7651$1yk2we))))
           (g$make-top-rib$7650$1yk2we
             (g$env-names$7666$1yk2we g$env$10640$1yk2we)
             (g$env-labels$7667$1yk2we g$env$10640$1yk2we)))
          (if (g$interaction-env?$7676$1yk2we g$env$10640$1yk2we)
            ((case-lambda
               ((g$rib$10663$1yk2we g$r$10664$1yk2we g$rtc$10665$1yk2we)
                ((case-lambda
                   ((g$x$10666$1yk2we)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10677$1yk2we
                               g$inv-collector$10678$1yk2we
                               g$vis-collector$10679$1yk2we
                               g$imp-collector$10680$1yk2we
                               g$top-level-context$10681$1yk2we
                               g$inv-collector$10682$1yk2we
                               g$vis-collector$10683$1yk2we
                               g$imp-collector$10684$1yk2we)
                             ((case-lambda
                                ((g$swap$10685$1yk2we)
                                 (dynamic-wind
                                   g$swap$10685$1yk2we
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7656$1yk2we
                                        g$x$10666$1yk2we
                                        g$rib$10663$1yk2we
                                        g$r$10664$1yk2we)))
                                   g$swap$10685$1yk2we)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10686$1yk2we)
                                       (begin
                                         (g$top-level-context$10677$1yk2we
                                           g$top-level-context$10681$1yk2we)
                                         (set! g$top-level-context$10681$1yk2we
                                           g$t$10686$1yk2we))))
                                    (g$top-level-context$10677$1yk2we))
                                   ((case-lambda
                                      ((g$t$10687$1yk2we)
                                       (begin
                                         (g$inv-collector$10678$1yk2we
                                           g$inv-collector$10682$1yk2we)
                                         (set! g$inv-collector$10682$1yk2we
                                           g$t$10687$1yk2we))))
                                    (g$inv-collector$10678$1yk2we))
                                   ((case-lambda
                                      ((g$t$10688$1yk2we)
                                       (begin
                                         (g$vis-collector$10679$1yk2we
                                           g$vis-collector$10683$1yk2we)
                                         (set! g$vis-collector$10683$1yk2we
                                           g$t$10688$1yk2we))))
                                    (g$vis-collector$10679$1yk2we))
                                   ((case-lambda
                                      ((g$t$10689$1yk2we)
                                       (begin
                                         (g$imp-collector$10680$1yk2we
                                           g$imp-collector$10684$1yk2we)
                                         (set! g$imp-collector$10684$1yk2we
                                           g$t$10689$1yk2we))))
                                    (g$imp-collector$10680$1yk2we))))))))
                          g$top-level-context$7718$1yk2we
                          g$inv-collector$7652$1yk2we
                          g$vis-collector$7653$1yk2we
                          g$imp-collector$7654$1yk2we
                          g$env$10640$1yk2we
                          g$rtc$10665$1yk2we
                          (g$make-collector$7651$1yk2we)
                          (g$make-collector$7651$1yk2we))))
                      (case-lambda
                        ((g$e$10690$1yk2we g$r^$10691$1yk2we)
                         ((case-lambda
                            ((g$r^$10692$1yk2we g$e$10693$1yk2we)
                             (begin
                               (g$set-interaction-env-r!$7682$1yk2we
                                 g$env$10640$1yk2we
                                 g$r^$10692$1yk2we)
                               (values g$e$10693$1yk2we (g$rtc$10665$1yk2we)))))
                          g$r^$10691$1yk2we
                          g$e$10690$1yk2we))))))
                 (g$make-stx$7295$1yk2we
                   g$x$10639$1yk2we
                   g$top-mark*$7264$1yk2we
                   (list g$rib$10663$1yk2we)
                   '()))))
             (g$interaction-env-rib$7678$1yk2we g$env$10640$1yk2we)
             (g$interaction-env-r$7679$1yk2we g$env$10640$1yk2we)
             (g$make-collector$7651$1yk2we))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10640$1yk2we))))))
   (g$eval$7694$1yk2we
     g$eval$11154$1yk2we
     (case-lambda
       ((g$x$10694$1yk2we g$env$10695$1yk2we)
        (begin
          (if (not (g$environment?$7688$1yk2we g$env$10695$1yk2we))
            (error 'eval '"not an environment" g$env$10695$1yk2we)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7693$1yk2we g$x$10694$1yk2we g$env$10695$1yk2we)))
            (case-lambda
              ((g$x$10698$1yk2we g$invoke-req*$10699$1yk2we)
               ((case-lambda
                  ((g$invoke-req*$10700$1yk2we g$x$10701$1yk2we)
                   (begin
                     (for-each
                       g$invoke-library$7137$1yk2we
                       g$invoke-req*$10700$1yk2we)
                     (eval-core
                       (g$expanded->core$6836$1yk2we g$x$10701$1yk2we)))))
                g$invoke-req*$10699$1yk2we
                g$x$10698$1yk2we))))))))
   (g$library-expander$7695$1yk2we
     g$library-expander$11155$1yk2we
     (case-lambda
       ((g$x$10702$1yk2we g$filename$10703$1yk2we g$verify-name$10704$1yk2we)
        (letrec* ((g$build-visit-code$10705$1yk2we
                    (case-lambda
                      ((g$macro*$10748$1yk2we)
                       (if (null? g$macro*$10748$1yk2we)
                         (g$build-void$7257$1yk2we)
                         (g$build-sequence$7256$1yk2we
                           '#f
                           (map (case-lambda
                                  ((g$x$10749$1yk2we)
                                   ((case-lambda
                                      ((g$loc$10750$1yk2we g$src$10751$1yk2we)
                                       (list
                                         'set!
                                         g$loc$10750$1yk2we
                                         g$src$10751$1yk2we)))
                                    (car g$x$10749$1yk2we)
                                    (g$cddr$5001$1yk2we g$x$10749$1yk2we))))
                                g$macro*$10748$1yk2we))))))
                  (g$visit!$10706$1yk2we
                    (case-lambda
                      ((g$macro*$10744$1yk2we)
                       (for-each
                         (case-lambda
                           ((g$x$10745$1yk2we)
                            ((case-lambda
                               ((g$loc$10746$1yk2we g$proc$10747$1yk2we)
                                (set-symbol-value!
                                  g$loc$10746$1yk2we
                                  g$proc$10747$1yk2we)))
                             (car g$x$10745$1yk2we)
                             (g$cadr$4999$1yk2we g$x$10745$1yk2we))))
                         g$macro*$10744$1yk2we)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7658$1yk2we
                 g$x$10702$1yk2we
                 g$verify-name$10704$1yk2we)))
            (case-lambda
              ((g$name$10716$1yk2we
                 g$ver$10717$1yk2we
                 g$imp*$10718$1yk2we
                 g$inv*$10719$1yk2we
                 g$vis*$10720$1yk2we
                 g$invoke-code$10721$1yk2we
                 g$macro*$10722$1yk2we
                 g$export-subst$10723$1yk2we
                 g$export-env$10724$1yk2we)
               ((case-lambda
                  ((g$export-env$10725$1yk2we
                     g$export-subst$10726$1yk2we
                     g$macro*$10727$1yk2we
                     g$invoke-code$10728$1yk2we
                     g$vis*$10729$1yk2we
                     g$inv*$10730$1yk2we
                     g$imp*$10731$1yk2we
                     g$ver$10732$1yk2we
                     g$name$10733$1yk2we)
                   ((case-lambda
                      ((g$id$10734$1yk2we
                         g$name$10735$1yk2we
                         g$ver$10736$1yk2we
                         g$imp*$10737$1yk2we
                         g$vis*$10738$1yk2we
                         g$inv*$10739$1yk2we
                         g$visit-proc$10740$1yk2we
                         g$invoke-proc$10741$1yk2we
                         g$visit-code$10742$1yk2we
                         g$invoke-code$10743$1yk2we)
                       (begin
                         (g$install-library$7135$1yk2we
                           g$id$10734$1yk2we
                           g$name$10735$1yk2we
                           g$ver$10736$1yk2we
                           g$imp*$10737$1yk2we
                           g$vis*$10738$1yk2we
                           g$inv*$10739$1yk2we
                           g$export-subst$10726$1yk2we
                           g$export-env$10725$1yk2we
                           g$visit-proc$10740$1yk2we
                           g$invoke-proc$10741$1yk2we
                           g$visit-code$10742$1yk2we
                           g$invoke-code$10743$1yk2we
                           '#t
                           g$filename$10703$1yk2we)
                         (values
                           g$id$10734$1yk2we
                           g$name$10735$1yk2we
                           g$ver$10736$1yk2we
                           g$imp*$10737$1yk2we
                           g$vis*$10738$1yk2we
                           g$inv*$10739$1yk2we
                           g$invoke-code$10743$1yk2we
                           g$visit-code$10742$1yk2we
                           g$export-subst$10726$1yk2we
                           g$export-env$10725$1yk2we))))
                    (gensym)
                    g$name$10733$1yk2we
                    g$ver$10732$1yk2we
                    (map g$library-spec$7141$1yk2we g$imp*$10731$1yk2we)
                    (map g$library-spec$7141$1yk2we g$vis*$10729$1yk2we)
                    (map g$library-spec$7141$1yk2we g$inv*$10730$1yk2we)
                    (case-lambda
                      (() (g$visit!$10706$1yk2we g$macro*$10727$1yk2we)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6836$1yk2we
                           g$invoke-code$10728$1yk2we))))
                    (g$build-visit-code$10705$1yk2we g$macro*$10727$1yk2we)
                    g$invoke-code$10728$1yk2we)))
                g$export-env$10724$1yk2we
                g$export-subst$10723$1yk2we
                g$macro*$10722$1yk2we
                g$invoke-code$10721$1yk2we
                g$vis*$10720$1yk2we
                g$inv*$10719$1yk2we
                g$imp*$10718$1yk2we
                g$ver$10717$1yk2we
                g$name$10716$1yk2we))))))
       ((g$x$10752$1yk2we g$filename$10753$1yk2we)
        (g$library-expander$7695$1yk2we
          g$x$10752$1yk2we
          g$filename$10753$1yk2we
          (case-lambda ((g$x$10754$1yk2we) (values)))))
       ((g$x$10755$1yk2we)
        (g$library-expander$7695$1yk2we
          g$x$10755$1yk2we
          '#f
          (case-lambda ((g$x$10756$1yk2we) (values)))))))
   (g$boot-library-expand$7696$1yk2we
     g$boot-library-expand$11156$1yk2we
     (case-lambda
       ((g$x$10757$1yk2we)
        (call-with-values
          (case-lambda (() (g$library-expander$7695$1yk2we g$x$10757$1yk2we)))
          (case-lambda
            ((g$id$10768$1yk2we
               g$name$10769$1yk2we
               g$ver$10770$1yk2we
               g$imp*$10771$1yk2we
               g$vis*$10772$1yk2we
               g$inv*$10773$1yk2we
               g$invoke-code$10774$1yk2we
               g$visit-code$10775$1yk2we
               g$export-subst$10776$1yk2we
               g$export-env$10777$1yk2we)
             ((case-lambda
                ((g$export-env$10778$1yk2we
                   g$export-subst$10779$1yk2we
                   g$visit-code$10780$1yk2we
                   g$invoke-code$10781$1yk2we
                   g$inv*$10782$1yk2we
                   g$vis*$10783$1yk2we
                   g$imp*$10784$1yk2we
                   g$ver$10785$1yk2we
                   g$name$10786$1yk2we
                   g$id$10787$1yk2we)
                 (values
                   g$name$10786$1yk2we
                   g$invoke-code$10781$1yk2we
                   g$export-subst$10779$1yk2we
                   g$export-env$10778$1yk2we)))
              g$export-env$10777$1yk2we
              g$export-subst$10776$1yk2we
              g$visit-code$10775$1yk2we
              g$invoke-code$10774$1yk2we
              g$inv*$10773$1yk2we
              g$vis*$10772$1yk2we
              g$imp*$10771$1yk2we
              g$ver$10770$1yk2we
              g$name$10769$1yk2we
              g$id$10768$1yk2we)))))))
   (g$rev-map-append$7697$1yk2we
     g$rev-map-append$11157$1yk2we
     (case-lambda
       ((g$f$10788$1yk2we g$ls$10789$1yk2we g$ac$10790$1yk2we)
        (if (null? g$ls$10789$1yk2we)
          g$ac$10790$1yk2we
          (g$rev-map-append$7697$1yk2we
            g$f$10788$1yk2we
            (cdr g$ls$10789$1yk2we)
            (cons
              (g$f$10788$1yk2we (car g$ls$10789$1yk2we))
              g$ac$10790$1yk2we))))))
   (g$build-exports$7698$1yk2we
     g$build-exports$11158$1yk2we
     (case-lambda
       ((g$lex*+loc*$10791$1yk2we g$init*$10792$1yk2we)
        (g$build-sequence$7256$1yk2we
          '#f
          (cons
            (g$build-void$7257$1yk2we)
            (g$rev-map-append$7697$1yk2we
              (case-lambda
                ((g$x$10793$1yk2we)
                 (list 'set! (cdr g$x$10793$1yk2we) (car g$x$10793$1yk2we))))
              g$lex*+loc*$10791$1yk2we
              g$init*$10792$1yk2we))))))
   (g$make-export-subst$7699$1yk2we
     g$make-export-subst$11159$1yk2we
     (case-lambda
       ((g$name*$10794$1yk2we g$id*$10795$1yk2we)
        (map (case-lambda
               ((g$name$10796$1yk2we g$id$10797$1yk2we)
                ((case-lambda
                   ((g$label$10798$1yk2we)
                    (begin
                      (if (not g$label$10798$1yk2we)
                        (g$syntax-violation$7711$1yk2we
                          '#f
                          '"cannot export unbound identifier"
                          g$id$10797$1yk2we)
                        (void))
                      (cons g$name$10796$1yk2we g$label$10798$1yk2we))))
                 (g$id->label$7335$1yk2we g$id$10797$1yk2we))))
             g$name*$10794$1yk2we
             g$id*$10795$1yk2we))))
   (g$make-export-env/macros$7700$1yk2we
     g$make-export-env/macros$11160$1yk2we
     (case-lambda
       ((g$lex*$10799$1yk2we g$loc*$10800$1yk2we g$r$10801$1yk2we)
        (letrec* ((g$lookup$10802$1yk2we
                    (case-lambda
                      ((g$x$10817$1yk2we)
                       ((letrec ((g$f$10818$1yk2we
                                   (case-lambda
                                     ((g$x$10819$1yk2we
                                        g$lex*$10820$1yk2we
                                        g$loc*$10821$1yk2we)
                                      (if (pair? g$lex*$10820$1yk2we)
                                        (if (eq? g$x$10819$1yk2we
                                                 (car g$lex*$10820$1yk2we))
                                          (car g$loc*$10821$1yk2we)
                                          (g$f$10818$1yk2we
                                            g$x$10819$1yk2we
                                            (cdr g$lex*$10820$1yk2we)
                                            (cdr g$loc*$10821$1yk2we)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10818$1yk2we)
                        g$x$10817$1yk2we
                        g$lex*$10799$1yk2we
                        g$loc*$10800$1yk2we)))))
          ((letrec ((g$f$10803$1yk2we
                      (case-lambda
                        ((g$r$10804$1yk2we
                           g$env$10805$1yk2we
                           g$global*$10806$1yk2we
                           g$macro*$10807$1yk2we)
                         (if (null? g$r$10804$1yk2we)
                           (values
                             g$env$10805$1yk2we
                             g$global*$10806$1yk2we
                             g$macro*$10807$1yk2we)
                           ((case-lambda
                              ((g$x$10808$1yk2we)
                               ((case-lambda
                                  ((g$label$10809$1yk2we g$b$10810$1yk2we)
                                   ((case-lambda
                                      ((g$t$10811$1yk2we)
                                       (if (memv g$t$10811$1yk2we '(lexical))
                                         ((case-lambda
                                            ((g$v$10812$1yk2we)
                                             ((case-lambda
                                                ((g$loc$10813$1yk2we
                                                   g$type$10814$1yk2we)
                                                 (g$f$10803$1yk2we
                                                   (cdr g$r$10804$1yk2we)
                                                   (cons
                                                     (g$cons*$5482$1yk2we
                                                       g$label$10809$1yk2we
                                                       g$type$10814$1yk2we
                                                       g$loc$10813$1yk2we)
                                                     g$env$10805$1yk2we)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7544$1yk2we
                                                         g$v$10812$1yk2we)
                                                       g$loc$10813$1yk2we)
                                                     g$global*$10806$1yk2we)
                                                   g$macro*$10807$1yk2we)))
                                              (g$lookup$10802$1yk2we
                                                (g$lexical-var$7544$1yk2we
                                                  g$v$10812$1yk2we))
                                              (if (g$lexical-mutable?$7545$1yk2we
                                                    g$v$10812$1yk2we)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7340$1yk2we
                                            g$b$10810$1yk2we))
                                         (if (memv
                                               g$t$10811$1yk2we
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10815$1yk2we)
                                               (g$f$10803$1yk2we
                                                 (cdr g$r$10804$1yk2we)
                                                 (cons
                                                   (g$cons*$5482$1yk2we
                                                     g$label$10809$1yk2we
                                                     'global-macro
                                                     g$loc$10815$1yk2we)
                                                   g$env$10805$1yk2we)
                                                 g$global*$10806$1yk2we
                                                 (cons
                                                   (cons
                                                     g$loc$10815$1yk2we
                                                     (g$binding-value$7340$1yk2we
                                                       g$b$10810$1yk2we))
                                                   g$macro*$10807$1yk2we))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10811$1yk2we
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10816$1yk2we)
                                                 (g$f$10803$1yk2we
                                                   (cdr g$r$10804$1yk2we)
                                                   (cons
                                                     (g$cons*$5482$1yk2we
                                                       g$label$10809$1yk2we
                                                       'global-macro!
                                                       g$loc$10816$1yk2we)
                                                     g$env$10805$1yk2we)
                                                   g$global*$10806$1yk2we
                                                   (cons
                                                     (cons
                                                       g$loc$10816$1yk2we
                                                       (g$binding-value$7340$1yk2we
                                                         g$b$10810$1yk2we))
                                                     g$macro*$10807$1yk2we))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10811$1yk2we
                                                   '($rtd $module))
                                               (g$f$10803$1yk2we
                                                 (cdr g$r$10804$1yk2we)
                                                 (cons
                                                   g$x$10808$1yk2we
                                                   g$env$10805$1yk2we)
                                                 g$global*$10806$1yk2we
                                                 g$macro*$10807$1yk2we)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7339$1yk2we
                                                   g$b$10810$1yk2we)
                                                 (g$binding-value$7340$1yk2we
                                                   g$b$10810$1yk2we))))))))
                                    (g$binding-type$7339$1yk2we
                                      g$b$10810$1yk2we))))
                                (car g$x$10808$1yk2we)
                                (cdr g$x$10808$1yk2we))))
                            (car g$r$10804$1yk2we)))))))
             g$f$10803$1yk2we)
           g$r$10801$1yk2we
           '()
           '()
           '())))))
   (g$generate-temporaries$7701$1yk2we
     g$generate-temporaries$11161$1yk2we
     (case-lambda
       ((g$ls$10822$1yk2we)
        ((case-lambda
           ((g$t$10823$1yk2we)
            ((case-lambda
               ((g$ls/false$10824$1yk2we)
                (if g$ls/false$10824$1yk2we
                  (apply
                    (case-lambda
                      ((g$ls$10825$1yk2we)
                       (map (case-lambda
                              ((g$x$10826$1yk2we)
                               (g$make-stx$7295$1yk2we
                                 ((case-lambda
                                    ((g$x$10827$1yk2we)
                                     (if ((case-lambda
                                            ((g$t$10828$1yk2we)
                                             (if g$t$10828$1yk2we
                                               g$t$10828$1yk2we
                                               (begin
                                                 '#f
                                                 (string? g$x$10827$1yk2we)))))
                                          (symbol? g$x$10827$1yk2we))
                                       (gensym g$x$10827$1yk2we)
                                       (gensym 't))))
                                  (g$syntax->datum$7714$1yk2we
                                    g$x$10826$1yk2we))
                                 g$top-mark*$7264$1yk2we
                                 '()
                                 '())))
                            g$ls$10825$1yk2we)))
                    g$ls/false$10824$1yk2we)
                  ((case-lambda
                     ((g$t$10829$1yk2we)
                      ((case-lambda
                         ((g$ls/false$10830$1yk2we)
                          (if g$ls/false$10830$1yk2we
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10830$1yk2we)
                            (g$syntax-violation$7711$1yk2we
                              '#f
                              '"invalid syntax"
                              g$t$10829$1yk2we))))
                       (g$syntax-dispatch$7600$1yk2we g$t$10829$1yk2we '_))))
                   g$t$10823$1yk2we))))
             (g$syntax-dispatch$7600$1yk2we g$t$10823$1yk2we 'each-any))))
         g$ls$10822$1yk2we))))
   (g$free-identifier=?$7702$1yk2we
     g$free-identifier=?$11162$1yk2we
     (case-lambda
       ((g$x$10831$1yk2we g$y$10832$1yk2we)
        (if (g$id?$7322$1yk2we g$x$10831$1yk2we)
          (if (g$id?$7322$1yk2we g$y$10832$1yk2we)
            (g$free-id=?$7326$1yk2we g$x$10831$1yk2we g$y$10832$1yk2we)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10832$1yk2we))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10831$1yk2we)))))
   (g$bound-identifier=?$7703$1yk2we
     g$bound-identifier=?$11163$1yk2we
     (case-lambda
       ((g$x$10833$1yk2we g$y$10834$1yk2we)
        (if (g$id?$7322$1yk2we g$x$10833$1yk2we)
          (if (g$id?$7322$1yk2we g$y$10834$1yk2we)
            (g$bound-id=?$7325$1yk2we g$x$10833$1yk2we g$y$10834$1yk2we)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10834$1yk2we))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10833$1yk2we)))))
   (g$make-source-condition$7704$1yk2we
     g$make-source-condition$11164$1yk2we
     (case-lambda
       ((g$x$10835$1yk2we)
        (letrec* ((g$11721$10836$1yk2we
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11724$1yk2we
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11723$10837$1yk2we '#f)
                  (g$11722$10838$1yk2we
                    (make-record-constructor-descriptor
                      g$11721$10836$1yk2we
                      &condition-rcd
                      g$11723$10837$1yk2we))
                  (g$11720$10839$1yk2we (record-predicate g$11721$10836$1yk2we))
                  (g$make-source-condition$10840$1yk2we
                    (record-constructor g$11722$10838$1yk2we))
                  (g$11718$10841$1yk2we
                    (record-accessor g$11721$10836$1yk2we '0))
                  (g$11719$10842$1yk2we
                    (record-accessor g$11721$10836$1yk2we '1))
                  (g$source-condition?$10843$1yk2we
                    (condition-predicate g$11721$10836$1yk2we))
                  (g$source-filename$10844$1yk2we
                    (condition-accessor
                      g$11721$10836$1yk2we
                      g$11718$10841$1yk2we))
                  (g$source-character$10845$1yk2we
                    (condition-accessor
                      g$11721$10836$1yk2we
                      g$11719$10842$1yk2we)))
          (if (pair? g$x$10835$1yk2we)
            (g$make-source-condition$10840$1yk2we
              (car g$x$10835$1yk2we)
              (cdr g$x$10835$1yk2we))
            (condition))))))
   (g$extract-position-condition$7705$1yk2we
     g$extract-position-condition$11165$1yk2we
     (case-lambda
       ((g$x$10846$1yk2we)
        (g$make-source-condition$7704$1yk2we
          (g$expression-position$7706$1yk2we g$x$10846$1yk2we)))))
   (g$expression-position$7706$1yk2we
     g$expression-position$11166$1yk2we
     (case-lambda
       ((g$x$10847$1yk2we)
        (if (g$stx?$7294$1yk2we g$x$10847$1yk2we)
          (begin
            '#f
            ((case-lambda
               ((g$x$10848$1yk2we)
                (if (annotation? g$x$10848$1yk2we)
                  (begin '#f (annotation-source g$x$10848$1yk2we))
                  '#f)))
             (g$stx-expr$7296$1yk2we g$x$10847$1yk2we)))
          '#f))))
   (g$assertion-error$7707$1yk2we
     g$assertion-error$11167$1yk2we
     (case-lambda
       ((g$expr$10849$1yk2we g$pos$10850$1yk2we)
        (raise
          (condition
            (g$make-assertion-violation$5766$1yk2we)
            (g$make-who-condition$5780$1yk2we 'assert)
            (g$make-message-condition$5734$1yk2we '"assertion failed")
            (g$make-irritants-condition$5772$1yk2we (list g$expr$10849$1yk2we))
            (g$make-source-condition$7704$1yk2we g$pos$10850$1yk2we))))))
   (g$syntax-error$7708$1yk2we
     g$syntax-error$11168$1yk2we
     (case-lambda
       ((g$x$10851$1yk2we . g$args$10852$1yk2we)
        (begin
          (if (not (g$for-all$5480$1yk2we string? g$args$10852$1yk2we))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10852$1yk2we)
            (void))
          (raise
            (condition
              (g$make-message-condition$5734$1yk2we
                (if (null? g$args$10852$1yk2we)
                  '"invalid syntax"
                  (apply string-append g$args$10852$1yk2we)))
              (g$make-syntax-violation$5806$1yk2we
                (g$syntax->datum$7714$1yk2we g$x$10851$1yk2we)
                '#f)
              (g$extract-position-condition$7705$1yk2we g$x$10851$1yk2we)
              (g$extract-trace$7709$1yk2we g$x$10851$1yk2we)))))))
   (g$extract-trace$7709$1yk2we
     g$extract-trace$11169$1yk2we
     (case-lambda
       ((g$x$10853$1yk2we)
        (letrec* ((g$11748$10854$1yk2we
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11751$1yk2we
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11750$10855$1yk2we '#f)
                  (g$11749$10856$1yk2we
                    (make-record-constructor-descriptor
                      g$11748$10854$1yk2we
                      &condition-rcd
                      g$11750$10855$1yk2we))
                  (g$11747$10857$1yk2we (record-predicate g$11748$10854$1yk2we))
                  (g$make-trace$10858$1yk2we
                    (record-constructor g$11749$10856$1yk2we))
                  (g$11746$10859$1yk2we
                    (record-accessor g$11748$10854$1yk2we '0))
                  (g$trace?$10860$1yk2we
                    (condition-predicate g$11748$10854$1yk2we))
                  (g$trace-form$10861$1yk2we
                    (condition-accessor
                      g$11748$10854$1yk2we
                      g$11746$10859$1yk2we)))
          ((letrec ((g$f$10862$1yk2we
                      (case-lambda
                        ((g$x$10863$1yk2we)
                         (if (g$stx?$7294$1yk2we g$x$10863$1yk2we)
                           (apply
                             condition
                             (g$make-trace$10858$1yk2we g$x$10863$1yk2we)
                             (map g$f$10862$1yk2we
                                  (g$stx-ae*$7299$1yk2we g$x$10863$1yk2we)))
                           (if (annotation? g$x$10863$1yk2we)
                             (g$make-trace$10858$1yk2we
                               (g$make-stx$7295$1yk2we
                                 g$x$10863$1yk2we
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10862$1yk2we)
           g$x$10853$1yk2we)))))
   (g$syntax-violation*$7710$1yk2we
     g$syntax-violation*$11170$1yk2we
     (case-lambda
       ((g$who$10864$1yk2we
          g$msg$10865$1yk2we
          g$form$10866$1yk2we
          g$condition-object$10867$1yk2we)
        (begin
          (if (not (string? g$msg$10865$1yk2we))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10865$1yk2we)
            (void))
          ((case-lambda
             ((g$who$10868$1yk2we)
              (raise
                (condition
                  (if g$who$10868$1yk2we
                    (g$make-who-condition$5780$1yk2we g$who$10868$1yk2we)
                    (condition))
                  (g$make-message-condition$5734$1yk2we g$msg$10865$1yk2we)
                  g$condition-object$10867$1yk2we
                  (g$extract-position-condition$7705$1yk2we g$form$10866$1yk2we)
                  (g$extract-trace$7709$1yk2we g$form$10866$1yk2we)))))
           (if ((case-lambda
                  ((g$t$10869$1yk2we)
                   (if g$t$10869$1yk2we
                     g$t$10869$1yk2we
                     (begin '#f (symbol? g$who$10864$1yk2we)))))
                (string? g$who$10864$1yk2we))
             g$who$10864$1yk2we
             (if (not g$who$10864$1yk2we)
               ((case-lambda
                  ((g$t$10870$1yk2we)
                   ((case-lambda
                      ((g$ls/false$10871$1yk2we)
                       (if (if g$ls/false$10871$1yk2we
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10872$1yk2we)
                                    (g$id?$7322$1yk2we g$id$10872$1yk2we)))
                                 g$ls/false$10871$1yk2we))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10873$1yk2we)
                              (g$syntax->datum$7714$1yk2we g$id$10873$1yk2we)))
                           g$ls/false$10871$1yk2we)
                         ((case-lambda
                            ((g$t$10874$1yk2we)
                             ((case-lambda
                                ((g$ls/false$10875$1yk2we)
                                 (if (if g$ls/false$10875$1yk2we
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10876$1yk2we
                                                g$rest$10877$1yk2we)
                                              (g$id?$7322$1yk2we
                                                g$id$10876$1yk2we)))
                                           g$ls/false$10875$1yk2we))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10878$1yk2we g$rest$10879$1yk2we)
                                        (g$syntax->datum$7714$1yk2we
                                          g$id$10878$1yk2we)))
                                     g$ls/false$10875$1yk2we)
                                   ((case-lambda
                                      ((g$t$10880$1yk2we)
                                       ((case-lambda
                                          ((g$ls/false$10881$1yk2we)
                                           (if g$ls/false$10881$1yk2we
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10881$1yk2we)
                                             (g$syntax-violation$7711$1yk2we
                                               '#f
                                               '"invalid syntax"
                                               g$t$10880$1yk2we))))
                                        (g$syntax-dispatch$7600$1yk2we
                                          g$t$10880$1yk2we
                                          '_))))
                                    g$t$10874$1yk2we))))
                              (g$syntax-dispatch$7600$1yk2we
                                g$t$10874$1yk2we
                                '(any . any)))))
                          g$t$10870$1yk2we))))
                    (g$syntax-dispatch$7600$1yk2we g$t$10870$1yk2we 'any))))
                g$form$10866$1yk2we)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10864$1yk2we))))))))
   (g$syntax-violation$7711$1yk2we
     g$syntax-violation$11171$1yk2we
     (case-lambda
       ((g$who$10882$1yk2we g$msg$10883$1yk2we g$form$10884$1yk2we)
        (g$syntax-violation$7711$1yk2we
          g$who$10882$1yk2we
          g$msg$10883$1yk2we
          g$form$10884$1yk2we
          '#f))
       ((g$who$10885$1yk2we
          g$msg$10886$1yk2we
          g$form$10887$1yk2we
          g$subform$10888$1yk2we)
        (g$syntax-violation*$7710$1yk2we
          g$who$10885$1yk2we
          g$msg$10886$1yk2we
          g$form$10887$1yk2we
          (g$make-syntax-violation$5806$1yk2we
            (g$syntax->datum$7714$1yk2we g$form$10887$1yk2we)
            (g$syntax->datum$7714$1yk2we g$subform$10888$1yk2we))))))
   (g$identifier?$7712$1yk2we
     g$identifier?$11172$1yk2we
     (case-lambda ((g$x$10889$1yk2we) (g$id?$7322$1yk2we g$x$10889$1yk2we))))
   (g$datum->syntax$7713$1yk2we
     g$datum->syntax$11173$1yk2we
     (case-lambda
       ((g$id$10890$1yk2we g$datum$10891$1yk2we)
        (if (g$id?$7322$1yk2we g$id$10890$1yk2we)
          (g$datum->stx$7305$1yk2we g$id$10890$1yk2we g$datum$10891$1yk2we)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10890$1yk2we)))))
   (g$syntax->datum$7714$1yk2we
     g$syntax->datum$11174$1yk2we
     (case-lambda
       ((g$x$10892$1yk2we) (g$stx->datum$7333$1yk2we g$x$10892$1yk2we))))
   (g$compile-r6rs-top-level$7715$1yk2we
     g$compile-r6rs-top-level$11175$1yk2we
     (case-lambda
       ((g$x*$10893$1yk2we)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7660$1yk2we g$x*$10893$1yk2we)))
          (case-lambda
            ((g$lib*$10896$1yk2we g$invoke-code$10897$1yk2we)
             ((case-lambda
                ((g$invoke-code$10898$1yk2we g$lib*$10899$1yk2we)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7137$1yk2we
                        g$lib*$10899$1yk2we)
                      (eval-core
                        (g$expanded->core$6836$1yk2we
                          g$invoke-code$10898$1yk2we)))))))
              g$invoke-code$10897$1yk2we
              g$lib*$10896$1yk2we)))))))
   (g$pre-compile-r6rs-top-level$7716$1yk2we
     g$pre-compile-r6rs-top-level$11176$1yk2we
     (case-lambda
       ((g$x*$10900$1yk2we)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7660$1yk2we g$x*$10900$1yk2we)))
          (case-lambda
            ((g$lib*$10903$1yk2we g$invoke-code$10904$1yk2we)
             ((case-lambda
                ((g$invoke-code$10905$1yk2we g$lib*$10906$1yk2we)
                 (begin
                   (for-each g$invoke-library$7137$1yk2we g$lib*$10906$1yk2we)
                   (compile-core
                     (g$expanded->core$6836$1yk2we
                       g$invoke-code$10905$1yk2we)))))
              g$invoke-code$10904$1yk2we
              g$lib*$10903$1yk2we)))))))
   (g$interaction-environment$7717$1yk2we
     g$interaction-environment$11177$1yk2we
     ((case-lambda
        ((g$the-env$10907$1yk2we)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10908$1yk2we)
                (if g$t$10908$1yk2we
                  g$t$10908$1yk2we
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10909$1yk2we g$rib$10910$1yk2we)
                        (begin
                          ((case-lambda
                             ((g$subst$10911$1yk2we)
                              (begin
                                (g$set-rib-sym*!$7281$1yk2we
                                  g$rib$10910$1yk2we
                                  (map car g$subst$10911$1yk2we))
                                (g$set-rib-mark**!$7282$1yk2we
                                  g$rib$10910$1yk2we
                                  (map (case-lambda
                                         ((g$x$10912$1yk2we)
                                          g$top-mark*$7264$1yk2we))
                                       g$subst$10911$1yk2we))
                                (g$set-rib-label*!$7283$1yk2we
                                  g$rib$10910$1yk2we
                                  (map cdr g$subst$10911$1yk2we)))))
                           (g$library-subst$7094$1yk2we g$lib$10909$1yk2we))
                          ((case-lambda
                             ((g$env$10913$1yk2we)
                              (begin
                                (set! g$the-env$10907$1yk2we g$env$10913$1yk2we)
                                g$env$10913$1yk2we)))
                           (g$make-interaction-env$7677$1yk2we
                             g$rib$10910$1yk2we
                             '()
                             '())))))
                     (g$find-library-by-name$7130$1yk2we '(ironscheme))
                     (g$make-empty-rib$7285$1yk2we))))))
             g$the-env$10907$1yk2we)))))
      '#f))
   (g$top-level-context$7718$1yk2we
     g$top-level-context$11178$1yk2we
     (g$make-parameter$6590$1yk2we '#f)))
  (g$current-library-expander$7127$1yk2we g$library-expander$7695$1yk2we))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6833$1yk2we
      (case-lambda
        ((g$x$11231$1yk2we)
         ((case-lambda
            ((g$t$11232$1yk2we)
             (if g$t$11232$1yk2we (cdr g$t$11232$1yk2we) '#f)))
          (assq
            g$x$11231$1yk2we
            '((ellipsis-map . g$ellipsis-map$11065$1yk2we)
              (ironscheme-build . g$ironscheme-build$11224$1yk2we)
              (syntax-error . g$syntax-error$11168$1yk2we)
              (syntax-dispatch . g$syntax-dispatch$11060$1yk2we)
              (compile-system-libraries
                .
                g$compile-system-libraries$11226$1yk2we)
              (compile->closure . g$compile->closure$11228$1yk2we)
              (compile . g$compile$11227$1yk2we)
              (load . g$load$11223$1yk2we)
              (interaction-environment . g$interaction-environment$11177$1yk2we)
              (string-ci>? . g$string-ci>?$5989$1yk2we)
              (string-ci>=? . g$string-ci>=?$5991$1yk2we)
              (string-ci=? . g$string-ci=?$5987$1yk2we)
              (string-ci<? . g$string-ci<?$5988$1yk2we)
              (string-ci<=? . g$string-ci<=?$5990$1yk2we)
              (char-ci>? . g$char-ci>?$5994$1yk2we)
              (char-ci>=? . g$char-ci>=?$5996$1yk2we)
              (char-ci=? . g$char-ci=?$5992$1yk2we)
              (char-ci<? . g$char-ci<?$5993$1yk2we)
              (char-ci<=? . g$char-ci<=?$5995$1yk2we)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10998$1yk2we)
              (variable-transformer? . g$variable-transformer?$10997$1yk2we)
              (make-variable-transformer
                .
                g$make-variable-transformer$10996$1yk2we)
              (identifier? . g$identifier?$11172$1yk2we)
              (generate-temporaries . g$generate-temporaries$11161$1yk2we)
              (free-identifier=? . g$free-identifier=?$11162$1yk2we)
              (syntax->datum . g$syntax->datum$11174$1yk2we)
              (datum->syntax . g$datum->syntax$11173$1yk2we)
              (bound-identifier=? . g$bound-identifier=?$11163$1yk2we)
              (delete-file . g$delete-file$5352$1yk2we)
              (file-exists? . g$file-exists?$5351$1yk2we)
              (list-sort . g$list-sort$5877$1yk2we)
              (make-eqv-hashtable . g$make-eqv-hashtable$5274$1yk2we)
              (make-eq-hashtable . g$make-eq-hashtable$5273$1yk2we)
              (hashtable-update! . g$hashtable-update!$5280$1yk2we)
              (hashtable-size . g$hashtable-size$5275$1yk2we)
              (hashtable-set! . g$hashtable-set!$5277$1yk2we)
              (hashtable-ref . g$hashtable-ref$5276$1yk2we)
              (hashtable-delete! . g$hashtable-delete!$5278$1yk2we)
              (hashtable-contains? . g$hashtable-contains?$5279$1yk2we)
              (hashtable-clear! . g$hashtable-clear!$5281$1yk2we)
              (call-with-output-file . g$call-with-output-file$6336$1yk2we)
              (call-with-input-file . g$call-with-input-file$6335$1yk2we)
              (with-output-to-file . g$with-output-to-file$6334$1yk2we)
              (with-input-from-file . g$with-input-from-file$6333$1yk2we)
              (port? . g$port?$6300$1yk2we)
              (open-string-output-port . g$open-string-output-port$6299$1yk2we)
              (make-i/o-write-error . g$make-i/o-write-error$6225$1yk2we)
              (make-i/o-read-error . g$make-i/o-read-error$6219$1yk2we)
              (make-i/o-port-error . g$make-i/o-port-error$6271$1yk2we)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6231$1yk2we)
              (make-i/o-filename-error . g$make-i/o-filename-error$6239$1yk2we)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6247$1yk2we)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6253$1yk2we)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6265$1yk2we)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6259$1yk2we)
              (make-i/o-error . g$make-i/o-error$6213$1yk2we)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6285$1yk2we)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6279$1yk2we)
              (i/o-write-error? . g$i/o-write-error?$6226$1yk2we)
              (i/o-read-error? . g$i/o-read-error?$6220$1yk2we)
              (i/o-port-error? . g$i/o-port-error?$6273$1yk2we)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6233$1yk2we)
              (i/o-error-position . g$i/o-error-position$6234$1yk2we)
              (i/o-filename-error? . g$i/o-filename-error?$6241$1yk2we)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6248$1yk2we)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6254$1yk2we)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6266$1yk2we)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6260$1yk2we)
              (i/o-error? . g$i/o-error?$6214$1yk2we)
              (i/o-error-port . g$i/o-error-port$6274$1yk2we)
              (i/o-error-filename . g$i/o-error-filename$6242$1yk2we)
              (i/o-encoding-error? . g$i/o-encoding-error?$6287$1yk2we)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6288$1yk2we)
              (i/o-decoding-error? . g$i/o-decoding-error?$6280$1yk2we)
              (scheme-report-environment
                .
                g$scheme-report-environment$11152$1yk2we)
              (quotient . g$quotient$5844$1yk2we)
              (null-environment . g$null-environment$11151$1yk2we)
              (remainder . g$remainder$5845$1yk2we)
              (modulo . g$modulo$5846$1yk2we)
              (force . g$force$5848$1yk2we)
              (command-line . g$command-line$11220$1yk2we)
              (remove . g$remove$5485$1yk2we)
              (remv . g$remv$5486$1yk2we)
              (remp . g$remp$5471$1yk2we)
              (remq . g$remq$5487$1yk2we)
              (partition . g$partition$5470$1yk2we)
              (memp . g$memp$5477$1yk2we)
              (member . g$member$5476$1yk2we)
              (exists . g$exists$5481$1yk2we)
              (for-all . g$for-all$5480$1yk2we)
              (fold-right . g$fold-right$5484$1yk2we)
              (fold-left . g$fold-left$5483$1yk2we)
              (find . g$find$5469$1yk2we)
              (filter . g$filter$5472$1yk2we)
              (cons* . g$cons*$5482$1yk2we)
              (assv . g$assv$5473$1yk2we)
              (assp . g$assp$5475$1yk2we)
              (assoc . g$assoc$5474$1yk2we)
              (eval . g$eval$11154$1yk2we)
              (environment . g$environment$11150$1yk2we)
              (make-enumeration . g$make-enumeration$6467$1yk2we)
              (enum-set=? . g$enum-set=?$6474$1yk2we)
              (enum-set-universe . g$enum-set-universe$6468$1yk2we)
              (enum-set-union . g$enum-set-union$6475$1yk2we)
              (enum-set-subset? . g$enum-set-subset?$6473$1yk2we)
              (enum-set-projection . g$enum-set-projection$6479$1yk2we)
              (enum-set-member? . g$enum-set-member?$6472$1yk2we)
              (enum-set-intersection . g$enum-set-intersection$6476$1yk2we)
              (enum-set-indexer . g$enum-set-indexer$6469$1yk2we)
              (enum-set-difference . g$enum-set-difference$6477$1yk2we)
              (enum-set-constructor . g$enum-set-constructor$6470$1yk2we)
              (enum-set-complement . g$enum-set-complement$6478$1yk2we)
              (enum-set->list . g$enum-set->list$6471$1yk2we)
              (who-condition? . g$who-condition?$5782$1yk2we)
              (warning? . g$warning?$5743$1yk2we)
              (violation? . g$violation?$5761$1yk2we)
              (undefined-violation? . g$undefined-violation?$5817$1yk2we)
              (syntax-violation? . g$syntax-violation?$5809$1yk2we)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5811$1yk2we)
              (syntax-violation-form . g$syntax-violation-form$5810$1yk2we)
              (syntax-violation . g$syntax-violation$11171$1yk2we)
              (serious-condition? . g$serious-condition?$5749$1yk2we)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5789$1yk2we)
              (message-condition? . g$message-condition?$5736$1yk2we)
              (make-who-condition . g$make-who-condition$5780$1yk2we)
              (make-warning . g$make-warning$5742$1yk2we)
              (make-violation . g$make-violation$5760$1yk2we)
              (make-undefined-violation
                .
                g$make-undefined-violation$5816$1yk2we)
              (make-syntax-violation . g$make-syntax-violation$5806$1yk2we)
              (make-serious-condition . g$make-serious-condition$5748$1yk2we)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5788$1yk2we)
              (make-message-condition . g$make-message-condition$5734$1yk2we)
              (make-lexical-violation . g$make-lexical-violation$5800$1yk2we)
              (make-irritants-condition
                .
                g$make-irritants-condition$5772$1yk2we)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5794$1yk2we)
              (make-error . g$make-error$5754$1yk2we)
              (make-assertion-violation
                .
                g$make-assertion-violation$5766$1yk2we)
              (lexical-violation? . g$lexical-violation?$5801$1yk2we)
              (irritants-condition? . g$irritants-condition?$5774$1yk2we)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5795$1yk2we)
              (error? . g$error?$5755$1yk2we)
              (condition-who . g$condition-who$5783$1yk2we)
              (condition-message . g$condition-message$5737$1yk2we)
              (condition-irritants . g$condition-irritants$5775$1yk2we)
              (assertion-violation? . g$assertion-violation?$5767$1yk2we)
              (native-endianness . g$native-endianness$5599$1yk2we)
              (bytevector-u64-set! . g$bytevector-u64-set!$5620$1yk2we)
              (bytevector-u64-ref . g$bytevector-u64-ref$5616$1yk2we)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5622$1yk2we)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5618$1yk2we)
              (bytevector-u32-set! . g$bytevector-u32-set!$5612$1yk2we)
              (bytevector-u32-ref . g$bytevector-u32-ref$5608$1yk2we)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5614$1yk2we)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5610$1yk2we)
              (bytevector-u16-set! . g$bytevector-u16-set!$5604$1yk2we)
              (bytevector-u16-ref . g$bytevector-u16-ref$5600$1yk2we)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5606$1yk2we)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5602$1yk2we)
              (bytevector-s64-set! . g$bytevector-s64-set!$5621$1yk2we)
              (bytevector-s64-ref . g$bytevector-s64-ref$5617$1yk2we)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5623$1yk2we)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5619$1yk2we)
              (bytevector-s32-set! . g$bytevector-s32-set!$5613$1yk2we)
              (bytevector-s32-ref . g$bytevector-s32-ref$5609$1yk2we)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5615$1yk2we)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5611$1yk2we)
              (bytevector-s16-set! . g$bytevector-s16-set!$5605$1yk2we)
              (bytevector-s16-ref . g$bytevector-s16-ref$5601$1yk2we)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5607$1yk2we)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5603$1yk2we)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5626$1yk2we)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5624$1yk2we)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5627$1yk2we)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5625$1yk2we)
              (no-nans-violation? . g$no-nans-violation?$6128$1yk2we)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6122$1yk2we)
              (make-no-nans-violation . g$make-no-nans-violation$6127$1yk2we)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6121$1yk2we)
              (fxrotate-bit-field . g$fxrotate-bit-field$6104$1yk2we)
              (fxif . g$fxif$6098$1yk2we)
              (fxcopy-bit-field . g$fxcopy-bit-field$6101$1yk2we)
              (fxcopy-bit . g$fxcopy-bit$6099$1yk2we)
              (fxbit-field . g$fxbit-field$6100$1yk2we)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6103$1yk2we)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6102$1yk2we)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$6050$1yk2we)
              (bitwise-if . g$bitwise-if$6044$1yk2we)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6047$1yk2we)
              (bitwise-copy-bit . g$bitwise-copy-bit$6045$1yk2we)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6049$1yk2we)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6048$1yk2we)
              (symbol=? . g$symbol=?$5031$1yk2we)
              (string>? . g$string>?$5028$1yk2we)
              (string>=? . g$string>=?$5030$1yk2we)
              (string=? . g$string=?$5026$1yk2we)
              (string<? . g$string<?$5027$1yk2we)
              (string<=? . g$string<=?$5029$1yk2we)
              (rationalize . g$rationalize$5038$1yk2we)
              (char>? . g$char>?$5035$1yk2we)
              (char>=? . g$char>=?$5037$1yk2we)
              (char=? . g$char=?$5033$1yk2we)
              (char<? . g$char<?$5034$1yk2we)
              (char<=? . g$char<=?$5036$1yk2we)
              (cddddr . g$cddddr$5025$1yk2we)
              (cdddar . g$cdddar$5024$1yk2we)
              (cddadr . g$cddadr$5023$1yk2we)
              (cddaar . g$cddaar$5022$1yk2we)
              (cdaddr . g$cdaddr$5021$1yk2we)
              (cdadar . g$cdadar$5020$1yk2we)
              (cdaadr . g$cdaadr$5019$1yk2we)
              (cdaaar . g$cdaaar$5018$1yk2we)
              (cadddr . g$cadddr$5017$1yk2we)
              (caddar . g$caddar$5016$1yk2we)
              (cadadr . g$cadadr$5015$1yk2we)
              (cadaar . g$cadaar$5014$1yk2we)
              (caaddr . g$caaddr$5013$1yk2we)
              (caadar . g$caadar$5012$1yk2we)
              (caaadr . g$caaadr$5011$1yk2we)
              (caaaar . g$caaaar$5010$1yk2we)
              (cdddr . g$cdddr$5009$1yk2we)
              (cddar . g$cddar$5008$1yk2we)
              (cdadr . g$cdadr$5007$1yk2we)
              (cdaar . g$cdaar$5006$1yk2we)
              (caddr . g$caddr$5005$1yk2we)
              (cadar . g$cadar$5004$1yk2we)
              (caadr . g$caadr$5003$1yk2we)
              (caaar . g$caaar$5002$1yk2we)
              (cddr . g$cddr$5001$1yk2we)
              (cdar . g$cdar$5000$1yk2we)
              (cadr . g$cadr$4999$1yk2we)
              (caar . g$caar$4998$1yk2we)
              (boolean=? . g$boolean=?$5032$1yk2we)
              (enum-set? . g$enum?$6448$1yk2we)
              (make-promise . g$make-promise$5847$1yk2we)
              (load/args . g$load/args$11222$1yk2we)
              (printf . g$printf$6503$1yk2we)
              (fprintf . g$fprintf$6504$1yk2we)
              (format . g$format$6505$1yk2we)
              (trace-printer . g$trace-printer$11219$1yk2we)
              (make-traced-macro . g$make-traced-macro$6509$1yk2we)
              (assertion-error . g$assertion-error$11167$1yk2we)
              (make-parameter . g$make-parameter$6590$1yk2we)
              (environment-bindings . g$environment-bindings$11146$1yk2we)
              (environment-symbols . g$environment-symbols$11149$1yk2we)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11145$1yk2we)
              (library-path . g$library-path$7119$1yk2we)))))))
    (g$install-library$7135$1yk2we
      'g$12474$1yk2we
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12411$1yk2we)
        (cosh . g$12410$1yk2we)
        (sinh . g$12409$1yk2we)
        (make-guid . g$12408$1yk2we)
        (unspecified? . g$12407$1yk2we)
        (make-trace . g$12406$1yk2we)
        (make-list . g$12405$1yk2we)
        (last-pair . g$12404$1yk2we)
        (load-r5rs . g$12403$1yk2we)
        (license . g$12402$1yk2we)
        (stacktrace . g$12401$1yk2we)
        (ironscheme-build . g$11820$1yk2we)
        (set-symbol-value! . g$12387$1yk2we)
        (symbol-value . g$12386$1yk2we)
        (ungensym . g$12385$1yk2we)
        (gensym . g$12384$1yk2we)
        (void . g$12383$1yk2we)
        (compile-system-libraries . g$11822$1yk2we)
        (compile->closure . g$11824$1yk2we)
        (compile . g$11823$1yk2we)
        (load . g$11819$1yk2we)
        (interaction-environment . g$8871$1yk2we)
        (string-upcase . g$12379$1yk2we)
        (string-titlecase . g$12378$1yk2we)
        (string-normalize-nfkd . g$12377$1yk2we)
        (string-normalize-nfkc . g$12376$1yk2we)
        (string-normalize-nfd . g$12375$1yk2we)
        (string-normalize-nfc . g$12374$1yk2we)
        (string-foldcase . g$12373$1yk2we)
        (string-downcase . g$12372$1yk2we)
        (string-ci>? . g$6980$1yk2we)
        (string-ci>=? . g$6982$1yk2we)
        (string-ci=? . g$6978$1yk2we)
        (string-ci<? . g$6979$1yk2we)
        (string-ci<=? . g$6981$1yk2we)
        (char-whitespace? . g$12371$1yk2we)
        (char-upper-case? . g$12370$1yk2we)
        (char-title-case? . g$12369$1yk2we)
        (char-numeric? . g$12368$1yk2we)
        (char-lower-case? . g$12367$1yk2we)
        (char-general-category . g$12366$1yk2we)
        (char-upcase . g$12365$1yk2we)
        (char-titlecase . g$12364$1yk2we)
        (char-foldcase . g$12363$1yk2we)
        (char-downcase . g$12362$1yk2we)
        (char-ci>? . g$7019$1yk2we)
        (char-ci>=? . g$7021$1yk2we)
        (char-ci=? . g$7017$1yk2we)
        (char-ci<? . g$7018$1yk2we)
        (char-ci<=? . g$7020$1yk2we)
        (char-alphabetic? . g$12361$1yk2we)
        (variable-transformer-procedure . g$8470$1yk2we)
        (variable-transformer? . g$8469$1yk2we)
        (make-variable-transformer . g$8468$1yk2we)
        (identifier? . g$8866$1yk2we)
        (generate-temporaries . g$8855$1yk2we)
        (free-identifier=? . g$8856$1yk2we)
        (syntax->datum . g$8868$1yk2we)
        (datum->syntax . g$8867$1yk2we)
        (bound-identifier=? . g$8857$1yk2we)
        (record-type-descriptor? . g$12360$1yk2we)
        (record-predicate . g$12359$1yk2we)
        (record-mutator . g$12358$1yk2we)
        (record-constructor . g$12357$1yk2we)
        (record-accessor . g$12356$1yk2we)
        (make-record-type-descriptor . g$12355$1yk2we)
        (make-record-constructor-descriptor . g$12354$1yk2we)
        (record? . g$12353$1yk2we)
        (record-type-uid . g$12352$1yk2we)
        (record-type-sealed? . g$12351$1yk2we)
        (record-type-parent . g$12350$1yk2we)
        (record-type-opaque? . g$12349$1yk2we)
        (record-type-name . g$12348$1yk2we)
        (record-type-generative? . g$12347$1yk2we)
        (record-type-field-names . g$12346$1yk2we)
        (record-rtd . g$12345$1yk2we)
        (record-field-mutable? . g$12344$1yk2we)
        (delete-file . g$6353$1yk2we)
        (file-exists? . g$6352$1yk2we)
        (vector-sort! . g$12343$1yk2we)
        (vector-sort . g$12342$1yk2we)
        (list-sort . g$6866$1yk2we)
        (symbol-hash . g$12341$1yk2we)
        (string-ci-hash . g$12340$1yk2we)
        (string-hash . g$12339$1yk2we)
        (equal-hash . g$12338$1yk2we)
        (hashtable-equivalence-function . g$12337$1yk2we)
        (make-hashtable . g$12336$1yk2we)
        (hashtable-hash-function . g$12335$1yk2we)
        (make-eqv-hashtable . g$6320$1yk2we)
        (make-eq-hashtable . g$6319$1yk2we)
        (hashtable? . g$12334$1yk2we)
        (hashtable-update! . g$6326$1yk2we)
        (hashtable-size . g$6321$1yk2we)
        (hashtable-set! . g$6323$1yk2we)
        (hashtable-ref . g$6322$1yk2we)
        (hashtable-mutable? . g$12333$1yk2we)
        (hashtable-keys . g$12332$1yk2we)
        (hashtable-entries . g$12331$1yk2we)
        (hashtable-delete! . g$6324$1yk2we)
        (hashtable-copy . g$12330$1yk2we)
        (hashtable-contains? . g$6325$1yk2we)
        (hashtable-clear! . g$6327$1yk2we)
        (call-with-output-file . g$7408$1yk2we)
        (call-with-input-file . g$7407$1yk2we)
        (write-char . g$12329$1yk2we)
        (write . g$12328$1yk2we)
        (with-output-to-file . g$7406$1yk2we)
        (with-input-from-file . g$7405$1yk2we)
        (read-char . g$12327$1yk2we)
        (read . g$12326$1yk2we)
        (peek-char . g$12325$1yk2we)
        (open-output-file . g$12324$1yk2we)
        (open-input-file . g$12323$1yk2we)
        (newline . g$12322$1yk2we)
        (display . g$12321$1yk2we)
        (close-output-port . g$12320$1yk2we)
        (close-input-port . g$12319$1yk2we)
        (eof-object? . g$12318$1yk2we)
        (eof-object . g$12317$1yk2we)
        (current-error-port . g$12316$1yk2we)
        (current-output-port . g$12315$1yk2we)
        (current-input-port . g$12314$1yk2we)
        (output-port? . g$12313$1yk2we)
        (input-port? . g$12312$1yk2we)
        (utf-8-codec . g$12311$1yk2we)
        (utf-16-codec . g$12310$1yk2we)
        (transcoder-error-handling-mode . g$12309$1yk2we)
        (transcoder-eol-style . g$12308$1yk2we)
        (transcoder-codec . g$12307$1yk2we)
        (transcoded-port . g$12306$1yk2we)
        (textual-port? . g$12305$1yk2we)
        (string->bytevector . g$12304$1yk2we)
        (standard-output-port . g$12303$1yk2we)
        (standard-input-port . g$12302$1yk2we)
        (standard-error-port . g$12301$1yk2we)
        (set-port-position! . g$12300$1yk2we)
        (put-u8 . g$12299$1yk2we)
        (put-string . g$12298$1yk2we)
        (put-datum . g$12297$1yk2we)
        (put-char . g$12296$1yk2we)
        (put-bytevector . g$12295$1yk2we)
        (port? . g$7384$1yk2we)
        (port-transcoder . g$12294$1yk2we)
        (port-position . g$12293$1yk2we)
        (port-has-set-port-position!? . g$12292$1yk2we)
        (port-has-port-position? . g$12291$1yk2we)
        (port-eof? . g$12290$1yk2we)
        (output-port-buffer-mode . g$12289$1yk2we)
        (open-string-output-port . g$7383$1yk2we)
        (open-string-input-port . g$12288$1yk2we)
        (open-file-output-port . g$12287$1yk2we)
        (open-file-input/output-port . g$12286$1yk2we)
        (open-file-input-port . g$12285$1yk2we)
        (open-bytevector-output-port . g$12284$1yk2we)
        (open-bytevector-input-port . g$12283$1yk2we)
        (native-transcoder . g$12282$1yk2we)
        (native-eol-style . g$12281$1yk2we)
        (make-transcoder . g$12280$1yk2we)
        (latin-1-codec . g$12279$1yk2we)
        (make-i/o-write-error . g$7240$1yk2we)
        (make-i/o-read-error . g$7226$1yk2we)
        (make-i/o-port-error . g$7345$1yk2we)
        (make-i/o-invalid-position-error . g$7255$1yk2we)
        (make-i/o-filename-error . g$7272$1yk2we)
        (make-i/o-file-protection-error . g$7288$1yk2we)
        (make-i/o-file-is-read-only-error . g$7302$1yk2we)
        (make-i/o-file-does-not-exist-error . g$7330$1yk2we)
        (make-i/o-file-already-exists-error . g$7316$1yk2we)
        (make-i/o-error . g$7212$1yk2we)
        (make-i/o-encoding-error . g$7376$1yk2we)
        (make-i/o-decoding-error . g$7361$1yk2we)
        (make-custom-textual-output-port . g$12278$1yk2we)
        (make-custom-textual-input/output-port . g$12277$1yk2we)
        (make-custom-textual-input-port . g$12276$1yk2we)
        (make-custom-binary-output-port . g$12275$1yk2we)
        (make-custom-binary-input/output-port . g$12274$1yk2we)
        (make-custom-binary-input-port . g$12273$1yk2we)
        (make-bytevector . g$12272$1yk2we)
        (lookahead-u8 . g$12271$1yk2we)
        (lookahead-char . g$12270$1yk2we)
        (i/o-write-error? . g$7241$1yk2we)
        (i/o-read-error? . g$7227$1yk2we)
        (i/o-port-error? . g$7347$1yk2we)
        (i/o-invalid-position-error? . g$7257$1yk2we)
        (i/o-error-position . g$7258$1yk2we)
        (i/o-filename-error? . g$7274$1yk2we)
        (i/o-file-protection-error? . g$7289$1yk2we)
        (i/o-file-is-read-only-error? . g$7303$1yk2we)
        (i/o-file-does-not-exist-error? . g$7331$1yk2we)
        (i/o-file-already-exists-error? . g$7317$1yk2we)
        (i/o-error? . g$7213$1yk2we)
        (i/o-error-port . g$7348$1yk2we)
        (i/o-error-filename . g$7275$1yk2we)
        (i/o-encoding-error? . g$7378$1yk2we)
        (i/o-encoding-error-char . g$7379$1yk2we)
        (i/o-decoding-error? . g$7362$1yk2we)
        (get-u8 . g$12269$1yk2we)
        (get-string-n! . g$12268$1yk2we)
        (get-string-n . g$12267$1yk2we)
        (get-string-all . g$12266$1yk2we)
        (get-line . g$12265$1yk2we)
        (get-datum . g$12264$1yk2we)
        (get-char . g$12263$1yk2we)
        (get-bytevector-some . g$12262$1yk2we)
        (get-bytevector-n! . g$12261$1yk2we)
        (get-bytevector-n . g$12260$1yk2we)
        (get-bytevector-all . g$12259$1yk2we)
        (flush-output-port . g$12258$1yk2we)
        (close-port . g$12257$1yk2we)
        (call-with-string-output-port . g$12256$1yk2we)
        (call-with-port . g$12255$1yk2we)
        (call-with-bytevector-output-port . g$12254$1yk2we)
        (bytevector->string . g$12253$1yk2we)
        (buffer-mode? . g$12252$1yk2we)
        (binary-port? . g$12251$1yk2we)
        (scheme-report-environment . g$8846$1yk2we)
        (quotient . g$6846$1yk2we)
        (null-environment . g$8845$1yk2we)
        (remainder . g$6847$1yk2we)
        (modulo . g$6848$1yk2we)
        (inexact->exact . g$12250$1yk2we)
        (force . g$6850$1yk2we)
        (exact->inexact . g$12249$1yk2we)
        (exit . g$12248$1yk2we)
        (command-line . g$11816$1yk2we)
        (string-fill! . g$12247$1yk2we)
        (string-set! . g$12246$1yk2we)
        (set-cdr! . g$12245$1yk2we)
        (set-car! . g$12244$1yk2we)
        (remove . g$6433$1yk2we)
        (remv . g$6434$1yk2we)
        (remp . g$6419$1yk2we)
        (remq . g$6435$1yk2we)
        (partition . g$6418$1yk2we)
        (memv . g$12243$1yk2we)
        (memq . g$12242$1yk2we)
        (memp . g$6425$1yk2we)
        (member . g$6424$1yk2we)
        (exists . g$6429$1yk2we)
        (for-all . g$6428$1yk2we)
        (fold-right . g$6432$1yk2we)
        (fold-left . g$6431$1yk2we)
        (find . g$6417$1yk2we)
        (filter . g$6420$1yk2we)
        (cons* . g$6430$1yk2we)
        (assv . g$6421$1yk2we)
        (assq . g$12241$1yk2we)
        (assp . g$6423$1yk2we)
        (assoc . g$6422$1yk2we)
        (with-exception-handler . g$12240$1yk2we)
        (raise-continuable . g$12239$1yk2we)
        (raise . g$12238$1yk2we)
        (eval . g$8848$1yk2we)
        (environment . g$8844$1yk2we)
        (make-enumeration . g$7466$1yk2we)
        (enum-set=? . g$7473$1yk2we)
        (enum-set-universe . g$7467$1yk2we)
        (enum-set-union . g$7474$1yk2we)
        (enum-set-subset? . g$7472$1yk2we)
        (enum-set-projection . g$7478$1yk2we)
        (enum-set-member? . g$7471$1yk2we)
        (enum-set-intersection . g$7475$1yk2we)
        (enum-set-indexer . g$7468$1yk2we)
        (enum-set-difference . g$7476$1yk2we)
        (enum-set-constructor . g$7469$1yk2we)
        (enum-set-complement . g$7477$1yk2we)
        (enum-set->list . g$7470$1yk2we)
        (who-condition? . g$6757$1yk2we)
        (warning? . g$6668$1yk2we)
        (violation? . g$6710$1yk2we)
        (undefined-violation? . g$6834$1yk2we)
        (syntax-violation? . g$6818$1yk2we)
        (syntax-violation-subform . g$6820$1yk2we)
        (syntax-violation-form . g$6819$1yk2we)
        (syntax-violation . g$8865$1yk2we)
        (simple-conditions . g$12237$1yk2we)
        (serious-condition? . g$6682$1yk2we)
        (non-continuable-violation? . g$6772$1yk2we)
        (message-condition? . g$6653$1yk2we)
        (make-who-condition . g$6755$1yk2we)
        (make-warning . g$6667$1yk2we)
        (make-violation . g$6709$1yk2we)
        (make-undefined-violation . g$6833$1yk2we)
        (make-syntax-violation . g$6815$1yk2we)
        (make-serious-condition . g$6681$1yk2we)
        (make-non-continuable-violation . g$6771$1yk2we)
        (make-message-condition . g$6651$1yk2we)
        (make-lexical-violation . g$6799$1yk2we)
        (make-irritants-condition . g$6738$1yk2we)
        (make-implementation-restriction-violation . g$6785$1yk2we)
        (make-error . g$6695$1yk2we)
        (make-assertion-violation . g$6723$1yk2we)
        (lexical-violation? . g$6800$1yk2we)
        (irritants-condition? . g$6740$1yk2we)
        (implementation-restriction-violation? . g$6786$1yk2we)
        (error? . g$6696$1yk2we)
        (condition-who . g$6758$1yk2we)
        (condition-predicate . g$12236$1yk2we)
        (condition-message . g$6654$1yk2we)
        (condition-irritants . g$6741$1yk2we)
        (condition-accessor . g$12235$1yk2we)
        (condition . g$12234$1yk2we)
        (assertion-violation? . g$6724$1yk2we)
        (condition? . g$12233$1yk2we)
        (utf32->string . g$12232$1yk2we)
        (utf16->string . g$12231$1yk2we)
        (utf8->string . g$12230$1yk2we)
        (uint-list->bytevector . g$12229$1yk2we)
        (u8-list->bytevector . g$12228$1yk2we)
        (string->utf8 . g$12227$1yk2we)
        (string->utf32 . g$12226$1yk2we)
        (string->utf16 . g$12225$1yk2we)
        (sint-list->bytevector . g$12224$1yk2we)
        (native-endianness . g$6509$1yk2we)
        (bytevector? . g$12223$1yk2we)
        (bytevector=? . g$12222$1yk2we)
        (bytevector-uint-set! . g$12221$1yk2we)
        (bytevector-uint-ref . g$12220$1yk2we)
        (bytevector-u8-set! . g$12219$1yk2we)
        (bytevector-u8-ref . g$12218$1yk2we)
        (bytevector-u64-set! . g$6530$1yk2we)
        (bytevector-u64-ref . g$6526$1yk2we)
        (bytevector-u64-native-set! . g$6532$1yk2we)
        (bytevector-u64-native-ref . g$6528$1yk2we)
        (bytevector-u32-set! . g$6522$1yk2we)
        (bytevector-u32-ref . g$6518$1yk2we)
        (bytevector-u32-native-set! . g$6524$1yk2we)
        (bytevector-u32-native-ref . g$6520$1yk2we)
        (bytevector-u16-set! . g$6514$1yk2we)
        (bytevector-u16-ref . g$6510$1yk2we)
        (bytevector-u16-native-set! . g$6516$1yk2we)
        (bytevector-u16-native-ref . g$6512$1yk2we)
        (bytevector-sint-set! . g$12217$1yk2we)
        (bytevector-sint-ref . g$12216$1yk2we)
        (bytevector-s8-set! . g$12215$1yk2we)
        (bytevector-s8-ref . g$12214$1yk2we)
        (bytevector-s64-set! . g$6531$1yk2we)
        (bytevector-s64-ref . g$6527$1yk2we)
        (bytevector-s64-native-set! . g$6533$1yk2we)
        (bytevector-s64-native-ref . g$6529$1yk2we)
        (bytevector-s32-set! . g$6523$1yk2we)
        (bytevector-s32-ref . g$6519$1yk2we)
        (bytevector-s32-native-set! . g$6525$1yk2we)
        (bytevector-s32-native-ref . g$6521$1yk2we)
        (bytevector-s16-set! . g$6515$1yk2we)
        (bytevector-s16-ref . g$6511$1yk2we)
        (bytevector-s16-native-set! . g$6517$1yk2we)
        (bytevector-s16-native-ref . g$6513$1yk2we)
        (bytevector-length . g$12213$1yk2we)
        (bytevector-ieee-single-set! . g$12212$1yk2we)
        (bytevector-ieee-single-ref . g$12211$1yk2we)
        (bytevector-ieee-single-native-set! . g$6536$1yk2we)
        (bytevector-ieee-single-native-ref . g$6534$1yk2we)
        (bytevector-ieee-double-set! . g$12210$1yk2we)
        (bytevector-ieee-double-ref . g$12209$1yk2we)
        (bytevector-ieee-double-native-set! . g$6537$1yk2we)
        (bytevector-ieee-double-native-ref . g$6535$1yk2we)
        (bytevector-fill! . g$12208$1yk2we)
        (bytevector-copy! . g$12207$1yk2we)
        (bytevector-copy . g$12206$1yk2we)
        (bytevector->uint-list . g$12205$1yk2we)
        (bytevector->u8-list . g$12204$1yk2we)
        (bytevector->sint-list . g$12203$1yk2we)
        (no-nans-violation? . g$7198$1yk2we)
        (no-infinities-violation? . g$7184$1yk2we)
        (make-no-nans-violation . g$7197$1yk2we)
        (make-no-infinities-violation . g$7183$1yk2we)
        (real->flonum . g$12202$1yk2we)
        (flzero? . g$12201$1yk2we)
        (fltruncate . g$12200$1yk2we)
        (fltan . g$12199$1yk2we)
        (flsqrt . g$12198$1yk2we)
        (flsin . g$12197$1yk2we)
        (flround . g$12196$1yk2we)
        (flpositive? . g$12195$1yk2we)
        (flonum? . g$12194$1yk2we)
        (flodd? . g$12193$1yk2we)
        (flnumerator . g$12192$1yk2we)
        (flnegative? . g$12191$1yk2we)
        (flnan? . g$12190$1yk2we)
        (flmod0 . g$12189$1yk2we)
        (flmod . g$12188$1yk2we)
        (flmin . g$12187$1yk2we)
        (flmax . g$12186$1yk2we)
        (fllog . g$12185$1yk2we)
        (flinteger? . g$12184$1yk2we)
        (flinfinite? . g$12183$1yk2we)
        (flfloor . g$12182$1yk2we)
        (flfinite? . g$12181$1yk2we)
        (flexpt . g$12180$1yk2we)
        (flexp . g$12179$1yk2we)
        (fleven? . g$12178$1yk2we)
        (fldiv0-and-mod0 . g$12177$1yk2we)
        (fldiv0 . g$12176$1yk2we)
        (fldiv-and-mod . g$12175$1yk2we)
        (fldiv . g$12174$1yk2we)
        (fldenominator . g$12173$1yk2we)
        (flcos . g$12172$1yk2we)
        (flceiling . g$12171$1yk2we)
        (flatan . g$12170$1yk2we)
        (flasin . g$12169$1yk2we)
        (flacos . g$12168$1yk2we)
        (flabs . g$12167$1yk2we)
        (fl>? . g$12166$1yk2we)
        (fl>=? . g$12165$1yk2we)
        (fl=? . g$12164$1yk2we)
        (fl<? . g$12163$1yk2we)
        (fl<=? . g$12162$1yk2we)
        (fl/ . g$12161$1yk2we)
        (fl- . g$12160$1yk2we)
        (fl+ . g$12159$1yk2we)
        (fl* . g$12158$1yk2we)
        (fixnum->flonum . g$12157$1yk2we)
        (fxzero? . g$12156$1yk2we)
        (fxxor . g$12155$1yk2we)
        (fxrotate-bit-field . g$7129$1yk2we)
        (fxreverse-bit-field . g$12154$1yk2we)
        (fxpositive? . g$12153$1yk2we)
        (fxodd? . g$12152$1yk2we)
        (fxnot . g$12151$1yk2we)
        (fxnegative? . g$12150$1yk2we)
        (fxmod0 . g$12149$1yk2we)
        (fxmod . g$12148$1yk2we)
        (fxmin . g$12147$1yk2we)
        (fxmax . g$12146$1yk2we)
        (fxlength . g$12145$1yk2we)
        (fxior . g$12144$1yk2we)
        (fxif . g$7123$1yk2we)
        (fxfirst-bit-set . g$12143$1yk2we)
        (fxeven? . g$12142$1yk2we)
        (fxdiv0-and-mod0 . g$12141$1yk2we)
        (fxdiv0 . g$12140$1yk2we)
        (fxdiv-and-mod . g$12139$1yk2we)
        (fxdiv . g$12138$1yk2we)
        (fxcopy-bit-field . g$7126$1yk2we)
        (fxcopy-bit . g$7124$1yk2we)
        (fxbit-set? . g$12137$1yk2we)
        (fxbit-field . g$7125$1yk2we)
        (fxbit-count . g$12136$1yk2we)
        (fxarithmetic-shift-right . g$7128$1yk2we)
        (fxarithmetic-shift-left . g$7127$1yk2we)
        (fxarithmetic-shift . g$12135$1yk2we)
        (fxand . g$12134$1yk2we)
        (fx>? . g$12133$1yk2we)
        (fx>=? . g$12132$1yk2we)
        (fx=? . g$12131$1yk2we)
        (fx<? . g$12130$1yk2we)
        (fx<=? . g$12129$1yk2we)
        (fx-/carry . g$12128$1yk2we)
        (fx- . g$12127$1yk2we)
        (fx+/carry . g$12126$1yk2we)
        (fx+ . g$12125$1yk2we)
        (fx*/carry . g$12124$1yk2we)
        (fx* . g$12123$1yk2we)
        (greatest-fixnum . g$12122$1yk2we)
        (least-fixnum . g$12121$1yk2we)
        (fixnum-width . g$12120$1yk2we)
        (fixnum? . g$12119$1yk2we)
        (bitwise-rotate-bit-field . g$7081$1yk2we)
        (bitwise-reverse-bit-field . g$12118$1yk2we)
        (bitwise-length . g$12117$1yk2we)
        (bitwise-if . g$7075$1yk2we)
        (bitwise-first-bit-set . g$12116$1yk2we)
        (bitwise-copy-bit-field . g$7078$1yk2we)
        (bitwise-copy-bit . g$7076$1yk2we)
        (bitwise-bit-set? . g$12115$1yk2we)
        (bitwise-bit-field . g$12114$1yk2we)
        (bitwise-bit-count . g$12113$1yk2we)
        (bitwise-xor . g$12112$1yk2we)
        (bitwise-ior . g$12111$1yk2we)
        (bitwise-and . g$12110$1yk2we)
        (bitwise-not . g$12109$1yk2we)
        (bitwise-arithmetic-shift-right . g$7080$1yk2we)
        (bitwise-arithmetic-shift-left . g$7079$1yk2we)
        (bitwise-arithmetic-shift . g$12108$1yk2we)
        (zero? . g$12107$1yk2we)
        (vector? . g$12106$1yk2we)
        (vector-set! . g$12105$1yk2we)
        (vector-ref . g$12104$1yk2we)
        (vector-map . g$12103$1yk2we)
        (vector-length . g$12102$1yk2we)
        (vector-for-each . g$12101$1yk2we)
        (vector-fill! . g$12100$1yk2we)
        (vector->list . g$12099$1yk2we)
        (vector . g$12098$1yk2we)
        (values . g$12097$1yk2we)
        (truncate . g$12096$1yk2we)
        (tan . g$12095$1yk2we)
        (symbol? . g$12094$1yk2we)
        (symbol=? . g$5868$1yk2we)
        (symbol->string . g$12093$1yk2we)
        (substring . g$12092$1yk2we)
        (string? . g$12091$1yk2we)
        (string>? . g$5865$1yk2we)
        (string>=? . g$5867$1yk2we)
        (string=? . g$5863$1yk2we)
        (string<? . g$5864$1yk2we)
        (string<=? . g$5866$1yk2we)
        (string-ref . g$12090$1yk2we)
        (string-length . g$12089$1yk2we)
        (string-for-each . g$12088$1yk2we)
        (string-copy . g$12087$1yk2we)
        (string-append . g$12086$1yk2we)
        (string->symbol . g$12085$1yk2we)
        (string->number . g$12084$1yk2we)
        (string->list . g$12083$1yk2we)
        (string . g$12082$1yk2we)
        (sqrt . g$12081$1yk2we)
        (sin . g$12080$1yk2we)
        (round . g$12079$1yk2we)
        (reverse . g$12078$1yk2we)
        (real? . g$12077$1yk2we)
        (real-valued? . g$12076$1yk2we)
        (real-part . g$12075$1yk2we)
        (rationalize . g$5909$1yk2we)
        (rational? . g$12074$1yk2we)
        (rational-valued? . g$12073$1yk2we)
        (procedure? . g$12072$1yk2we)
        (positive? . g$12071$1yk2we)
        (pair? . g$12070$1yk2we)
        (odd? . g$12069$1yk2we)
        (numerator . g$12068$1yk2we)
        (number? . g$12067$1yk2we)
        (number->string . g$12066$1yk2we)
        (null? . g$12065$1yk2we)
        (not . g$12064$1yk2we)
        (negative? . g$12063$1yk2we)
        (nan? . g$12062$1yk2we)
        (min . g$12061$1yk2we)
        (max . g$12060$1yk2we)
        (map . g$12059$1yk2we)
        (make-vector . g$12058$1yk2we)
        (make-string . g$12057$1yk2we)
        (make-rectangular . g$12056$1yk2we)
        (make-polar . g$12055$1yk2we)
        (magnitude . g$12054$1yk2we)
        (log . g$12053$1yk2we)
        (list? . g$12052$1yk2we)
        (list-tail . g$12051$1yk2we)
        (list-ref . g$12050$1yk2we)
        (list->vector . g$12049$1yk2we)
        (list->string . g$12048$1yk2we)
        (list . g$12047$1yk2we)
        (length . g$12046$1yk2we)
        (lcm . g$12045$1yk2we)
        (integer? . g$12044$1yk2we)
        (integer-valued? . g$12043$1yk2we)
        (integer->char . g$12042$1yk2we)
        (infinite? . g$12041$1yk2we)
        (inexact? . g$12040$1yk2we)
        (inexact . g$12039$1yk2we)
        (imag-part . g$12038$1yk2we)
        (gcd . g$12037$1yk2we)
        (for-each . g$12036$1yk2we)
        (floor . g$12035$1yk2we)
        (finite? . g$12034$1yk2we)
        (expt . g$12033$1yk2we)
        (exp . g$12032$1yk2we)
        (exact? . g$12031$1yk2we)
        (exact-integer-sqrt . g$12030$1yk2we)
        (exact . g$12029$1yk2we)
        (even? . g$12028$1yk2we)
        (error . g$12027$1yk2we)
        (eqv? . g$12026$1yk2we)
        (equal? . g$12025$1yk2we)
        (eq? . g$12024$1yk2we)
        (dynamic-wind . g$12023$1yk2we)
        (div0-and-mod0 . g$12022$1yk2we)
        (mod0 . g$12021$1yk2we)
        (div0 . g$12020$1yk2we)
        (div-and-mod . g$12019$1yk2we)
        (mod . g$12018$1yk2we)
        (div . g$12017$1yk2we)
        (denominator . g$12016$1yk2we)
        (cos . g$12015$1yk2we)
        (cons . g$12014$1yk2we)
        (complex? . g$12013$1yk2we)
        (char? . g$12012$1yk2we)
        (char>? . g$5906$1yk2we)
        (char>=? . g$5908$1yk2we)
        (char=? . g$5904$1yk2we)
        (char<? . g$5905$1yk2we)
        (char<=? . g$5907$1yk2we)
        (char->integer . g$12011$1yk2we)
        (ceiling . g$12010$1yk2we)
        (call-with-values . g$12009$1yk2we)
        (call/cc . g$12008$1yk2we)
        (call-with-current-continuation . g$12007$1yk2we)
        (cddddr . g$5828$1yk2we)
        (cdddar . g$5827$1yk2we)
        (cddadr . g$5826$1yk2we)
        (cddaar . g$5825$1yk2we)
        (cdaddr . g$5824$1yk2we)
        (cdadar . g$5823$1yk2we)
        (cdaadr . g$5822$1yk2we)
        (cdaaar . g$5821$1yk2we)
        (cadddr . g$5820$1yk2we)
        (caddar . g$5819$1yk2we)
        (cadadr . g$5818$1yk2we)
        (cadaar . g$5817$1yk2we)
        (caaddr . g$5816$1yk2we)
        (caadar . g$5815$1yk2we)
        (caaadr . g$5814$1yk2we)
        (caaaar . g$5813$1yk2we)
        (cdddr . g$5812$1yk2we)
        (cddar . g$5811$1yk2we)
        (cdadr . g$5810$1yk2we)
        (cdaar . g$5809$1yk2we)
        (caddr . g$5808$1yk2we)
        (cadar . g$5807$1yk2we)
        (caadr . g$5806$1yk2we)
        (caaar . g$5805$1yk2we)
        (cddr . g$5804$1yk2we)
        (cdar . g$5803$1yk2we)
        (cadr . g$5802$1yk2we)
        (caar . g$5801$1yk2we)
        (cdr . g$12006$1yk2we)
        (car . g$12005$1yk2we)
        (boolean? . g$12004$1yk2we)
        (boolean=? . g$5869$1yk2we)
        (atan . g$12003$1yk2we)
        (assertion-violation . g$12002$1yk2we)
        (asin . g$12001$1yk2we)
        (apply . g$12000$1yk2we)
        (append . g$11999$1yk2we)
        (angle . g$11998$1yk2we)
        (acos . g$11997$1yk2we)
        (abs . g$11996$1yk2we)
        (/ . g$11995$1yk2we)
        (* . g$11994$1yk2we)
        (- . g$11993$1yk2we)
        (+ . g$11992$1yk2we)
        (>= . g$11991$1yk2we)
        (> . g$11990$1yk2we)
        (= . g$11989$1yk2we)
        (<= . g$11988$1yk2we)
        (< . g$11987$1yk2we)
        (deserialize-port . g$11982$1yk2we)
        (serialize-port . g$11981$1yk2we)
        (enum-set? . g$7441$1yk2we)
        (make-promise . g$6849$1yk2we)
        (load/args . g$11818$1yk2we)
        (printf . g$7551$1yk2we)
        (fprintf . g$7552$1yk2we)
        (format . g$7553$1yk2we)
        (get-arity . g$11980$1yk2we)
        (gc-collect . g$11979$1yk2we)
        (clr-type? . g$11978$1yk2we)
        (get-clr-type . g$11977$1yk2we)
        (vector-append . g$11975$1yk2we)
        (vector-filter . g$11974$1yk2we)
        (vector-reverse! . g$11973$1yk2we)
        (vector-contains? . g$11972$1yk2we)
        (vector-index-of . g$11971$1yk2we)
        (vector-copy . g$11970$1yk2we)
        (vector-binary-search . g$11969$1yk2we)
        (get-output-string . g$11968$1yk2we)
        (open-output-string . g$11967$1yk2we)
        (open-input-string . g$11966$1yk2we)
        (string-ci-compare . g$11965$1yk2we)
        (string-compare . g$11964$1yk2we)
        (string-format . g$11963$1yk2we)
        (trace-printer . g$11815$1yk2we)
        (make-traced-procedure . g$11962$1yk2we)
        (make-traced-macro . g$7573$1yk2we)
        (pmap . g$11961$1yk2we)
        (time-it . g$11960$1yk2we)
        (make-parameter . g$7578$1yk2we)
        (library-locator . g$11959$1yk2we)
        (get-library-paths . g$11958$1yk2we)
        (environment-bindings . g$8840$1yk2we)
        (environment-symbols . g$8843$1yk2we)
        (interaction-environment-symbols . g$8839$1yk2we)
        (optimization-level . g$11957$1yk2we)
        (library-path . g$8008$1yk2we)
        (&no-nans . g$11956$1yk2we)
        (&no-infinities . g$11955$1yk2we)
        (&i/o-encoding . g$11954$1yk2we)
        (&i/o-decoding . g$11953$1yk2we)
        (&i/o-port . g$11952$1yk2we)
        (&i/o-file-does-not-exist . g$11951$1yk2we)
        (&i/o-file-already-exists . g$11950$1yk2we)
        (&i/o-file-is-read-only . g$11949$1yk2we)
        (&i/o-file-protection . g$11948$1yk2we)
        (&i/o-filename . g$11947$1yk2we)
        (&i/o-invalid-position . g$11946$1yk2we)
        (&i/o-write . g$11945$1yk2we)
        (&i/o-read . g$11944$1yk2we)
        (&i/o . g$11943$1yk2we)
        (&non-continuable . g$11942$1yk2we)
        (&undefined . g$11941$1yk2we)
        (&syntax . g$11940$1yk2we)
        (&lexical . g$11939$1yk2we)
        (&implementation-restriction . g$11938$1yk2we)
        (&who . g$11936$1yk2we)
        (&irritants . g$11935$1yk2we)
        (&assertion . g$11934$1yk2we)
        (&violation . g$11933$1yk2we)
        (&error . g$11932$1yk2we)
        (&serious . g$11931$1yk2we)
        (&warning . g$11930$1yk2we)
        (&message . g$11929$1yk2we)
        (&condition . g$11928$1yk2we)
        (define-condition-type . g$11927$1yk2we)
        (define-enumeration . g$11926$1yk2we)
        (define-record-type . g$11925$1yk2we)
        (parent-rtd . g$11924$1yk2we)
        (nongenerative . g$11923$1yk2we)
        (opaque . g$11922$1yk2we)
        (sealed . g$11921$1yk2we)
        (protocol . g$11920$1yk2we)
        (parent . g$11919$1yk2we)
        (immutable . g$11918$1yk2we)
        (mutable . g$11917$1yk2we)
        (fields . g$11916$1yk2we)
        (error-handling-mode . g$11915$1yk2we)
        (file-options . g$11914$1yk2we)
        (buffer-mode . g$11913$1yk2we)
        (eol-style . g$11912$1yk2we)
        (guard . g$11911$1yk2we)
        (trace-letrec-syntax . g$11910$1yk2we)
        (trace-let-syntax . g$11909$1yk2we)
        (trace-define-syntax . g$11908$1yk2we)
        (trace-define . g$11907$1yk2we)
        (trace-lambda . g$11906$1yk2we)
        (unsyntax-splicing . g$11905$1yk2we)
        (unsyntax . g$11904$1yk2we)
        (unquote-splicing . g$11903$1yk2we)
        (unquote . g$11902$1yk2we)
        (_ . g$11901$1yk2we)
        (else . g$11900$1yk2we)
        (=> . g$11899$1yk2we)
        (... . g$11898$1yk2we)
        (assert . g$11897$1yk2we)
        (endianness . g$11896$1yk2we)
        (delay . g$11895$1yk2we)
        (time . g$11894$1yk2we)
        (or . g$11893$1yk2we)
        (and . g$11892$1yk2we)
        (do . g$11891$1yk2we)
        (cond . g$11890$1yk2we)
        (let* . g$11889$1yk2we)
        (let . g$11888$1yk2we)
        (identifier-syntax . g$11887$1yk2we)
        (with-syntax . g$11886$1yk2we)
        (quasisyntax . g$11885$1yk2we)
        (quasiquote . g$11884$1yk2we)
        (syntax-rules . g$11883$1yk2we)
        (include-into . g$11882$1yk2we)
        (include . g$11881$1yk2we)
        (let-values . g$11879$1yk2we)
        (let*-values . g$11878$1yk2we)
        (record-constructor-descriptor . g$11877$1yk2we)
        (record-type-descriptor . g$11876$1yk2we)
        (fluid-let-syntax . g$11875$1yk2we)
        (case . g$11874$1yk2we)
        (parameterize . g$11873$1yk2we)
        (unless . g$11872$1yk2we)
        (when . g$11871$1yk2we)
        (if . g$11870$1yk2we)
        (letrec* . g$11869$1yk2we)
        (letrec . g$11868$1yk2we)
        (case-lambda . g$11866$1yk2we)
        (lambda . g$11865$1yk2we)
        (syntax . g$11864$1yk2we)
        (syntax-case . g$11863$1yk2we)
        (quote . g$11862$1yk2we)
        (letrec-syntax . g$11860$1yk2we)
        (let-syntax . g$11859$1yk2we)
        (set! . g$11858$1yk2we)
        (import . g$11857$1yk2we)
        (library . g$11856$1yk2we)
        (begin . g$11855$1yk2we)
        (module . g$11854$1yk2we)
        (define-syntax . g$11853$1yk2we)
        (define . g$11852$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12475$1yk2we
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11958$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7135$1yk2we
      'g$12476$1yk2we
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12416$1yk2we)
        (annotation-source . g$12415$1yk2we)
        (annotation-expression . g$12414$1yk2we)
        (annotation? . g$12413$1yk2we)
        (read-annotated . g$12412$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7135$1yk2we
      'g$12477$1yk2we
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12382$1yk2we)
        (serialize-library . g$12381$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7135$1yk2we
      'g$12478$1yk2we
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8470$1yk2we)
        (variable-transformer? . g$8469$1yk2we)
        (eqv-hash . g$11985$1yk2we)
        (eq-hash . g$11984$1yk2we)
        (reverse! . g$11983$1yk2we)
        (format . g$7553$1yk2we)
        (get-command-line . g$11976$1yk2we)
        (make-traced-procedure . g$11962$1yk2we)
        (assertion-error . g$8861$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7135$1yk2we
      'g$12479$1yk2we
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11986$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12480$1yk2we
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12400$1yk2we)
        (clr-field-set!-internal . g$12399$1yk2we)
        (clr-field-get-internal . g$12398$1yk2we)
        (clr-cast-internal . g$12397$1yk2we)
        (clr-call-internal . g$12396$1yk2we)
        (clr-new-internal . g$12395$1yk2we)
        (clr-new-array-internal . g$12394$1yk2we)
        (clr-is-internal . g$12393$1yk2we)
        (clr-reference-internal . g$12392$1yk2we)
        (clr-using-internal . g$12391$1yk2we)
        (clr-clear-usings-internal . g$12390$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12481$1yk2we
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11903$1yk2we)
        (unquote . g$11902$1yk2we)
        (else . g$11900$1yk2we)
        (=> . g$11899$1yk2we)
        (delay . g$11895$1yk2we)
        (or . g$11893$1yk2we)
        (and . g$11892$1yk2we)
        (do . g$11891$1yk2we)
        (cond . g$11890$1yk2we)
        (let* . g$11889$1yk2we)
        (let . g$11888$1yk2we)
        (quasiquote . g$11884$1yk2we)
        (syntax-rules . g$11883$1yk2we)
        (case . g$11874$1yk2we)
        (if . g$11870$1yk2we)
        (letrec . g$11868$1yk2we)
        (lambda . g$11865$1yk2we)
        (quote . g$11862$1yk2we)
        (letrec-syntax . g$11860$1yk2we)
        (let-syntax . g$11859$1yk2we)
        (set! . g$11858$1yk2we)
        (begin . g$11855$1yk2we)
        (define-syntax . g$11853$1yk2we)
        (define . g$11852$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7135$1yk2we
      'g$12482$1yk2we
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8871$1yk2we)
        (char-ready? . g$12380$1yk2we)
        (string-ci>? . g$6980$1yk2we)
        (string-ci>=? . g$6982$1yk2we)
        (string-ci=? . g$6978$1yk2we)
        (string-ci<? . g$6979$1yk2we)
        (string-ci<=? . g$6981$1yk2we)
        (char-whitespace? . g$12371$1yk2we)
        (char-upper-case? . g$12370$1yk2we)
        (char-numeric? . g$12368$1yk2we)
        (char-lower-case? . g$12367$1yk2we)
        (char-upcase . g$12365$1yk2we)
        (char-downcase . g$12362$1yk2we)
        (char-ci>? . g$7019$1yk2we)
        (char-ci>=? . g$7021$1yk2we)
        (char-ci=? . g$7017$1yk2we)
        (char-ci<? . g$7018$1yk2we)
        (char-ci<=? . g$7020$1yk2we)
        (char-alphabetic? . g$12361$1yk2we)
        (call-with-output-file . g$7408$1yk2we)
        (call-with-input-file . g$7407$1yk2we)
        (write-char . g$12329$1yk2we)
        (write . g$12328$1yk2we)
        (with-output-to-file . g$7406$1yk2we)
        (with-input-from-file . g$7405$1yk2we)
        (read-char . g$12327$1yk2we)
        (read . g$12326$1yk2we)
        (peek-char . g$12325$1yk2we)
        (open-output-file . g$12324$1yk2we)
        (open-input-file . g$12323$1yk2we)
        (newline . g$12322$1yk2we)
        (display . g$12321$1yk2we)
        (close-output-port . g$12320$1yk2we)
        (close-input-port . g$12319$1yk2we)
        (eof-object? . g$12318$1yk2we)
        (eof-object . g$12317$1yk2we)
        (current-error-port . g$12316$1yk2we)
        (current-output-port . g$12315$1yk2we)
        (current-input-port . g$12314$1yk2we)
        (output-port? . g$12313$1yk2we)
        (input-port? . g$12312$1yk2we)
        (scheme-report-environment . g$8846$1yk2we)
        (quotient . g$6846$1yk2we)
        (null-environment . g$8845$1yk2we)
        (remainder . g$6847$1yk2we)
        (modulo . g$6848$1yk2we)
        (inexact->exact . g$12250$1yk2we)
        (force . g$6850$1yk2we)
        (exact->inexact . g$12249$1yk2we)
        (string-fill! . g$12247$1yk2we)
        (string-set! . g$12246$1yk2we)
        (set-cdr! . g$12245$1yk2we)
        (set-car! . g$12244$1yk2we)
        (memv . g$12243$1yk2we)
        (memq . g$12242$1yk2we)
        (member . g$6424$1yk2we)
        (assv . g$6421$1yk2we)
        (assq . g$12241$1yk2we)
        (assoc . g$6422$1yk2we)
        (eval . g$8848$1yk2we)
        (zero? . g$12107$1yk2we)
        (vector? . g$12106$1yk2we)
        (vector-set! . g$12105$1yk2we)
        (vector-ref . g$12104$1yk2we)
        (vector-length . g$12102$1yk2we)
        (vector-fill! . g$12100$1yk2we)
        (vector->list . g$12099$1yk2we)
        (vector . g$12098$1yk2we)
        (values . g$12097$1yk2we)
        (truncate . g$12096$1yk2we)
        (tan . g$12095$1yk2we)
        (symbol? . g$12094$1yk2we)
        (symbol->string . g$12093$1yk2we)
        (substring . g$12092$1yk2we)
        (string? . g$12091$1yk2we)
        (string>? . g$5865$1yk2we)
        (string>=? . g$5867$1yk2we)
        (string=? . g$5863$1yk2we)
        (string<? . g$5864$1yk2we)
        (string<=? . g$5866$1yk2we)
        (string-ref . g$12090$1yk2we)
        (string-length . g$12089$1yk2we)
        (string-copy . g$12087$1yk2we)
        (string-append . g$12086$1yk2we)
        (string->symbol . g$12085$1yk2we)
        (string->number . g$12084$1yk2we)
        (string->list . g$12083$1yk2we)
        (string . g$12082$1yk2we)
        (sqrt . g$12081$1yk2we)
        (sin . g$12080$1yk2we)
        (round . g$12079$1yk2we)
        (reverse . g$12078$1yk2we)
        (real? . g$12077$1yk2we)
        (real-part . g$12075$1yk2we)
        (rationalize . g$5909$1yk2we)
        (rational? . g$12074$1yk2we)
        (procedure? . g$12072$1yk2we)
        (positive? . g$12071$1yk2we)
        (pair? . g$12070$1yk2we)
        (odd? . g$12069$1yk2we)
        (numerator . g$12068$1yk2we)
        (number? . g$12067$1yk2we)
        (number->string . g$12066$1yk2we)
        (null? . g$12065$1yk2we)
        (not . g$12064$1yk2we)
        (negative? . g$12063$1yk2we)
        (min . g$12061$1yk2we)
        (max . g$12060$1yk2we)
        (map . g$12059$1yk2we)
        (make-vector . g$12058$1yk2we)
        (make-string . g$12057$1yk2we)
        (make-rectangular . g$12056$1yk2we)
        (make-polar . g$12055$1yk2we)
        (magnitude . g$12054$1yk2we)
        (log . g$12053$1yk2we)
        (list? . g$12052$1yk2we)
        (list-tail . g$12051$1yk2we)
        (list-ref . g$12050$1yk2we)
        (list->vector . g$12049$1yk2we)
        (list->string . g$12048$1yk2we)
        (list . g$12047$1yk2we)
        (length . g$12046$1yk2we)
        (lcm . g$12045$1yk2we)
        (integer? . g$12044$1yk2we)
        (integer->char . g$12042$1yk2we)
        (inexact? . g$12040$1yk2we)
        (imag-part . g$12038$1yk2we)
        (gcd . g$12037$1yk2we)
        (for-each . g$12036$1yk2we)
        (floor . g$12035$1yk2we)
        (expt . g$12033$1yk2we)
        (exp . g$12032$1yk2we)
        (exact? . g$12031$1yk2we)
        (even? . g$12028$1yk2we)
        (eqv? . g$12026$1yk2we)
        (equal? . g$12025$1yk2we)
        (eq? . g$12024$1yk2we)
        (dynamic-wind . g$12023$1yk2we)
        (denominator . g$12016$1yk2we)
        (cos . g$12015$1yk2we)
        (cons . g$12014$1yk2we)
        (complex? . g$12013$1yk2we)
        (char? . g$12012$1yk2we)
        (char>? . g$5906$1yk2we)
        (char>=? . g$5908$1yk2we)
        (char=? . g$5904$1yk2we)
        (char<? . g$5905$1yk2we)
        (char<=? . g$5907$1yk2we)
        (char->integer . g$12011$1yk2we)
        (ceiling . g$12010$1yk2we)
        (call-with-values . g$12009$1yk2we)
        (call-with-current-continuation . g$12007$1yk2we)
        (cddddr . g$5828$1yk2we)
        (cdddar . g$5827$1yk2we)
        (cddadr . g$5826$1yk2we)
        (cddaar . g$5825$1yk2we)
        (cdaddr . g$5824$1yk2we)
        (cdadar . g$5823$1yk2we)
        (cdaadr . g$5822$1yk2we)
        (cdaaar . g$5821$1yk2we)
        (cadddr . g$5820$1yk2we)
        (caddar . g$5819$1yk2we)
        (cadadr . g$5818$1yk2we)
        (cadaar . g$5817$1yk2we)
        (caaddr . g$5816$1yk2we)
        (caadar . g$5815$1yk2we)
        (caaadr . g$5814$1yk2we)
        (caaaar . g$5813$1yk2we)
        (cdddr . g$5812$1yk2we)
        (cddar . g$5811$1yk2we)
        (cdadr . g$5810$1yk2we)
        (cdaar . g$5809$1yk2we)
        (caddr . g$5808$1yk2we)
        (cadar . g$5807$1yk2we)
        (caadr . g$5806$1yk2we)
        (caaar . g$5805$1yk2we)
        (cddr . g$5804$1yk2we)
        (cdar . g$5803$1yk2we)
        (cadr . g$5802$1yk2we)
        (caar . g$5801$1yk2we)
        (cdr . g$12006$1yk2we)
        (car . g$12005$1yk2we)
        (boolean? . g$12004$1yk2we)
        (atan . g$12003$1yk2we)
        (asin . g$12001$1yk2we)
        (apply . g$12000$1yk2we)
        (append . g$11999$1yk2we)
        (angle . g$11998$1yk2we)
        (acos . g$11997$1yk2we)
        (abs . g$11996$1yk2we)
        (/ . g$11995$1yk2we)
        (* . g$11994$1yk2we)
        (- . g$11993$1yk2we)
        (+ . g$11992$1yk2we)
        (>= . g$11991$1yk2we)
        (> . g$11990$1yk2we)
        (= . g$11989$1yk2we)
        (<= . g$11988$1yk2we)
        (< . g$11987$1yk2we)
        (unquote-splicing . g$11903$1yk2we)
        (unquote . g$11902$1yk2we)
        (else . g$11900$1yk2we)
        (=> . g$11899$1yk2we)
        (... . g$11898$1yk2we)
        (delay . g$11895$1yk2we)
        (or . g$11893$1yk2we)
        (and . g$11892$1yk2we)
        (do . g$11891$1yk2we)
        (cond . g$11890$1yk2we)
        (let* . g$11889$1yk2we)
        (let . g$11888$1yk2we)
        (quasiquote . g$11884$1yk2we)
        (syntax-rules . g$11883$1yk2we)
        (case . g$11874$1yk2we)
        (if . g$11870$1yk2we)
        (letrec . g$11868$1yk2we)
        (lambda . g$11865$1yk2we)
        (quote . g$11862$1yk2we)
        (letrec-syntax . g$11860$1yk2we)
        (let-syntax . g$11859$1yk2we)
        (set! . g$11858$1yk2we)
        (begin . g$11855$1yk2we)
        (define-syntax . g$11853$1yk2we)
        (define . g$11852$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7135$1yk2we
      'g$12483$1yk2we
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12379$1yk2we)
        (string-titlecase . g$12378$1yk2we)
        (string-normalize-nfkd . g$12377$1yk2we)
        (string-normalize-nfkc . g$12376$1yk2we)
        (string-normalize-nfd . g$12375$1yk2we)
        (string-normalize-nfc . g$12374$1yk2we)
        (string-foldcase . g$12373$1yk2we)
        (string-downcase . g$12372$1yk2we)
        (string-ci>? . g$6980$1yk2we)
        (string-ci>=? . g$6982$1yk2we)
        (string-ci=? . g$6978$1yk2we)
        (string-ci<? . g$6979$1yk2we)
        (string-ci<=? . g$6981$1yk2we)
        (char-whitespace? . g$12371$1yk2we)
        (char-upper-case? . g$12370$1yk2we)
        (char-title-case? . g$12369$1yk2we)
        (char-numeric? . g$12368$1yk2we)
        (char-lower-case? . g$12367$1yk2we)
        (char-general-category . g$12366$1yk2we)
        (char-upcase . g$12365$1yk2we)
        (char-titlecase . g$12364$1yk2we)
        (char-foldcase . g$12363$1yk2we)
        (char-downcase . g$12362$1yk2we)
        (char-ci>? . g$7019$1yk2we)
        (char-ci>=? . g$7021$1yk2we)
        (char-ci=? . g$7017$1yk2we)
        (char-ci<? . g$7018$1yk2we)
        (char-ci<=? . g$7020$1yk2we)
        (char-alphabetic? . g$12361$1yk2we)
        (make-variable-transformer . g$8468$1yk2we)
        (identifier? . g$8866$1yk2we)
        (generate-temporaries . g$8855$1yk2we)
        (free-identifier=? . g$8856$1yk2we)
        (syntax->datum . g$8868$1yk2we)
        (datum->syntax . g$8867$1yk2we)
        (bound-identifier=? . g$8857$1yk2we)
        (record-type-descriptor? . g$12360$1yk2we)
        (record-predicate . g$12359$1yk2we)
        (record-mutator . g$12358$1yk2we)
        (record-constructor . g$12357$1yk2we)
        (record-accessor . g$12356$1yk2we)
        (make-record-type-descriptor . g$12355$1yk2we)
        (make-record-constructor-descriptor . g$12354$1yk2we)
        (record? . g$12353$1yk2we)
        (record-type-uid . g$12352$1yk2we)
        (record-type-sealed? . g$12351$1yk2we)
        (record-type-parent . g$12350$1yk2we)
        (record-type-opaque? . g$12349$1yk2we)
        (record-type-name . g$12348$1yk2we)
        (record-type-generative? . g$12347$1yk2we)
        (record-type-field-names . g$12346$1yk2we)
        (record-rtd . g$12345$1yk2we)
        (record-field-mutable? . g$12344$1yk2we)
        (delete-file . g$6353$1yk2we)
        (file-exists? . g$6352$1yk2we)
        (vector-sort! . g$12343$1yk2we)
        (vector-sort . g$12342$1yk2we)
        (list-sort . g$6866$1yk2we)
        (symbol-hash . g$12341$1yk2we)
        (string-ci-hash . g$12340$1yk2we)
        (string-hash . g$12339$1yk2we)
        (equal-hash . g$12338$1yk2we)
        (hashtable-equivalence-function . g$12337$1yk2we)
        (make-hashtable . g$12336$1yk2we)
        (hashtable-hash-function . g$12335$1yk2we)
        (make-eqv-hashtable . g$6320$1yk2we)
        (make-eq-hashtable . g$6319$1yk2we)
        (hashtable? . g$12334$1yk2we)
        (hashtable-update! . g$6326$1yk2we)
        (hashtable-size . g$6321$1yk2we)
        (hashtable-set! . g$6323$1yk2we)
        (hashtable-ref . g$6322$1yk2we)
        (hashtable-mutable? . g$12333$1yk2we)
        (hashtable-keys . g$12332$1yk2we)
        (hashtable-entries . g$12331$1yk2we)
        (hashtable-delete! . g$6324$1yk2we)
        (hashtable-copy . g$12330$1yk2we)
        (hashtable-contains? . g$6325$1yk2we)
        (hashtable-clear! . g$6327$1yk2we)
        (call-with-output-file . g$7408$1yk2we)
        (call-with-input-file . g$7407$1yk2we)
        (write-char . g$12329$1yk2we)
        (write . g$12328$1yk2we)
        (with-output-to-file . g$7406$1yk2we)
        (with-input-from-file . g$7405$1yk2we)
        (read-char . g$12327$1yk2we)
        (read . g$12326$1yk2we)
        (peek-char . g$12325$1yk2we)
        (open-output-file . g$12324$1yk2we)
        (open-input-file . g$12323$1yk2we)
        (newline . g$12322$1yk2we)
        (display . g$12321$1yk2we)
        (close-output-port . g$12320$1yk2we)
        (close-input-port . g$12319$1yk2we)
        (eof-object? . g$12318$1yk2we)
        (eof-object . g$12317$1yk2we)
        (current-error-port . g$12316$1yk2we)
        (current-output-port . g$12315$1yk2we)
        (current-input-port . g$12314$1yk2we)
        (output-port? . g$12313$1yk2we)
        (input-port? . g$12312$1yk2we)
        (utf-8-codec . g$12311$1yk2we)
        (utf-16-codec . g$12310$1yk2we)
        (transcoder-error-handling-mode . g$12309$1yk2we)
        (transcoder-eol-style . g$12308$1yk2we)
        (transcoder-codec . g$12307$1yk2we)
        (transcoded-port . g$12306$1yk2we)
        (textual-port? . g$12305$1yk2we)
        (string->bytevector . g$12304$1yk2we)
        (standard-output-port . g$12303$1yk2we)
        (standard-input-port . g$12302$1yk2we)
        (standard-error-port . g$12301$1yk2we)
        (set-port-position! . g$12300$1yk2we)
        (put-u8 . g$12299$1yk2we)
        (put-string . g$12298$1yk2we)
        (put-datum . g$12297$1yk2we)
        (put-char . g$12296$1yk2we)
        (put-bytevector . g$12295$1yk2we)
        (port? . g$7384$1yk2we)
        (port-transcoder . g$12294$1yk2we)
        (port-position . g$12293$1yk2we)
        (port-has-set-port-position!? . g$12292$1yk2we)
        (port-has-port-position? . g$12291$1yk2we)
        (port-eof? . g$12290$1yk2we)
        (output-port-buffer-mode . g$12289$1yk2we)
        (open-string-output-port . g$7383$1yk2we)
        (open-string-input-port . g$12288$1yk2we)
        (open-file-output-port . g$12287$1yk2we)
        (open-file-input/output-port . g$12286$1yk2we)
        (open-file-input-port . g$12285$1yk2we)
        (open-bytevector-output-port . g$12284$1yk2we)
        (open-bytevector-input-port . g$12283$1yk2we)
        (native-transcoder . g$12282$1yk2we)
        (native-eol-style . g$12281$1yk2we)
        (make-transcoder . g$12280$1yk2we)
        (latin-1-codec . g$12279$1yk2we)
        (make-i/o-write-error . g$7240$1yk2we)
        (make-i/o-read-error . g$7226$1yk2we)
        (make-i/o-port-error . g$7345$1yk2we)
        (make-i/o-invalid-position-error . g$7255$1yk2we)
        (make-i/o-filename-error . g$7272$1yk2we)
        (make-i/o-file-protection-error . g$7288$1yk2we)
        (make-i/o-file-is-read-only-error . g$7302$1yk2we)
        (make-i/o-file-does-not-exist-error . g$7330$1yk2we)
        (make-i/o-file-already-exists-error . g$7316$1yk2we)
        (make-i/o-error . g$7212$1yk2we)
        (make-i/o-encoding-error . g$7376$1yk2we)
        (make-i/o-decoding-error . g$7361$1yk2we)
        (make-custom-textual-output-port . g$12278$1yk2we)
        (make-custom-textual-input/output-port . g$12277$1yk2we)
        (make-custom-textual-input-port . g$12276$1yk2we)
        (make-custom-binary-output-port . g$12275$1yk2we)
        (make-custom-binary-input/output-port . g$12274$1yk2we)
        (make-custom-binary-input-port . g$12273$1yk2we)
        (make-bytevector . g$12272$1yk2we)
        (lookahead-u8 . g$12271$1yk2we)
        (lookahead-char . g$12270$1yk2we)
        (i/o-write-error? . g$7241$1yk2we)
        (i/o-read-error? . g$7227$1yk2we)
        (i/o-port-error? . g$7347$1yk2we)
        (i/o-invalid-position-error? . g$7257$1yk2we)
        (i/o-error-position . g$7258$1yk2we)
        (i/o-filename-error? . g$7274$1yk2we)
        (i/o-file-protection-error? . g$7289$1yk2we)
        (i/o-file-is-read-only-error? . g$7303$1yk2we)
        (i/o-file-does-not-exist-error? . g$7331$1yk2we)
        (i/o-file-already-exists-error? . g$7317$1yk2we)
        (i/o-error? . g$7213$1yk2we)
        (i/o-error-port . g$7348$1yk2we)
        (i/o-error-filename . g$7275$1yk2we)
        (i/o-encoding-error? . g$7378$1yk2we)
        (i/o-encoding-error-char . g$7379$1yk2we)
        (i/o-decoding-error? . g$7362$1yk2we)
        (get-u8 . g$12269$1yk2we)
        (get-string-n! . g$12268$1yk2we)
        (get-string-n . g$12267$1yk2we)
        (get-string-all . g$12266$1yk2we)
        (get-line . g$12265$1yk2we)
        (get-datum . g$12264$1yk2we)
        (get-char . g$12263$1yk2we)
        (get-bytevector-some . g$12262$1yk2we)
        (get-bytevector-n! . g$12261$1yk2we)
        (get-bytevector-n . g$12260$1yk2we)
        (get-bytevector-all . g$12259$1yk2we)
        (flush-output-port . g$12258$1yk2we)
        (close-port . g$12257$1yk2we)
        (call-with-string-output-port . g$12256$1yk2we)
        (call-with-port . g$12255$1yk2we)
        (call-with-bytevector-output-port . g$12254$1yk2we)
        (bytevector->string . g$12253$1yk2we)
        (buffer-mode? . g$12252$1yk2we)
        (binary-port? . g$12251$1yk2we)
        (exit . g$12248$1yk2we)
        (command-line . g$11816$1yk2we)
        (remove . g$6433$1yk2we)
        (remv . g$6434$1yk2we)
        (remp . g$6419$1yk2we)
        (remq . g$6435$1yk2we)
        (partition . g$6418$1yk2we)
        (memv . g$12243$1yk2we)
        (memq . g$12242$1yk2we)
        (memp . g$6425$1yk2we)
        (member . g$6424$1yk2we)
        (exists . g$6429$1yk2we)
        (for-all . g$6428$1yk2we)
        (fold-right . g$6432$1yk2we)
        (fold-left . g$6431$1yk2we)
        (find . g$6417$1yk2we)
        (filter . g$6420$1yk2we)
        (cons* . g$6430$1yk2we)
        (assv . g$6421$1yk2we)
        (assq . g$12241$1yk2we)
        (assp . g$6423$1yk2we)
        (assoc . g$6422$1yk2we)
        (with-exception-handler . g$12240$1yk2we)
        (raise-continuable . g$12239$1yk2we)
        (raise . g$12238$1yk2we)
        (make-enumeration . g$7466$1yk2we)
        (enum-set=? . g$7473$1yk2we)
        (enum-set-universe . g$7467$1yk2we)
        (enum-set-union . g$7474$1yk2we)
        (enum-set-subset? . g$7472$1yk2we)
        (enum-set-projection . g$7478$1yk2we)
        (enum-set-member? . g$7471$1yk2we)
        (enum-set-intersection . g$7475$1yk2we)
        (enum-set-indexer . g$7468$1yk2we)
        (enum-set-difference . g$7476$1yk2we)
        (enum-set-constructor . g$7469$1yk2we)
        (enum-set-complement . g$7477$1yk2we)
        (enum-set->list . g$7470$1yk2we)
        (who-condition? . g$6757$1yk2we)
        (warning? . g$6668$1yk2we)
        (violation? . g$6710$1yk2we)
        (undefined-violation? . g$6834$1yk2we)
        (syntax-violation? . g$6818$1yk2we)
        (syntax-violation-subform . g$6820$1yk2we)
        (syntax-violation-form . g$6819$1yk2we)
        (syntax-violation . g$8865$1yk2we)
        (simple-conditions . g$12237$1yk2we)
        (serious-condition? . g$6682$1yk2we)
        (non-continuable-violation? . g$6772$1yk2we)
        (message-condition? . g$6653$1yk2we)
        (make-who-condition . g$6755$1yk2we)
        (make-warning . g$6667$1yk2we)
        (make-violation . g$6709$1yk2we)
        (make-undefined-violation . g$6833$1yk2we)
        (make-syntax-violation . g$6815$1yk2we)
        (make-serious-condition . g$6681$1yk2we)
        (make-non-continuable-violation . g$6771$1yk2we)
        (make-message-condition . g$6651$1yk2we)
        (make-lexical-violation . g$6799$1yk2we)
        (make-irritants-condition . g$6738$1yk2we)
        (make-implementation-restriction-violation . g$6785$1yk2we)
        (make-error . g$6695$1yk2we)
        (make-assertion-violation . g$6723$1yk2we)
        (lexical-violation? . g$6800$1yk2we)
        (irritants-condition? . g$6740$1yk2we)
        (implementation-restriction-violation? . g$6786$1yk2we)
        (error? . g$6696$1yk2we)
        (condition-who . g$6758$1yk2we)
        (condition-predicate . g$12236$1yk2we)
        (condition-message . g$6654$1yk2we)
        (condition-irritants . g$6741$1yk2we)
        (condition-accessor . g$12235$1yk2we)
        (condition . g$12234$1yk2we)
        (assertion-violation? . g$6724$1yk2we)
        (condition? . g$12233$1yk2we)
        (utf32->string . g$12232$1yk2we)
        (utf16->string . g$12231$1yk2we)
        (utf8->string . g$12230$1yk2we)
        (uint-list->bytevector . g$12229$1yk2we)
        (u8-list->bytevector . g$12228$1yk2we)
        (string->utf8 . g$12227$1yk2we)
        (string->utf32 . g$12226$1yk2we)
        (string->utf16 . g$12225$1yk2we)
        (sint-list->bytevector . g$12224$1yk2we)
        (native-endianness . g$6509$1yk2we)
        (bytevector? . g$12223$1yk2we)
        (bytevector=? . g$12222$1yk2we)
        (bytevector-uint-set! . g$12221$1yk2we)
        (bytevector-uint-ref . g$12220$1yk2we)
        (bytevector-u8-set! . g$12219$1yk2we)
        (bytevector-u8-ref . g$12218$1yk2we)
        (bytevector-u64-set! . g$6530$1yk2we)
        (bytevector-u64-ref . g$6526$1yk2we)
        (bytevector-u64-native-set! . g$6532$1yk2we)
        (bytevector-u64-native-ref . g$6528$1yk2we)
        (bytevector-u32-set! . g$6522$1yk2we)
        (bytevector-u32-ref . g$6518$1yk2we)
        (bytevector-u32-native-set! . g$6524$1yk2we)
        (bytevector-u32-native-ref . g$6520$1yk2we)
        (bytevector-u16-set! . g$6514$1yk2we)
        (bytevector-u16-ref . g$6510$1yk2we)
        (bytevector-u16-native-set! . g$6516$1yk2we)
        (bytevector-u16-native-ref . g$6512$1yk2we)
        (bytevector-sint-set! . g$12217$1yk2we)
        (bytevector-sint-ref . g$12216$1yk2we)
        (bytevector-s8-set! . g$12215$1yk2we)
        (bytevector-s8-ref . g$12214$1yk2we)
        (bytevector-s64-set! . g$6531$1yk2we)
        (bytevector-s64-ref . g$6527$1yk2we)
        (bytevector-s64-native-set! . g$6533$1yk2we)
        (bytevector-s64-native-ref . g$6529$1yk2we)
        (bytevector-s32-set! . g$6523$1yk2we)
        (bytevector-s32-ref . g$6519$1yk2we)
        (bytevector-s32-native-set! . g$6525$1yk2we)
        (bytevector-s32-native-ref . g$6521$1yk2we)
        (bytevector-s16-set! . g$6515$1yk2we)
        (bytevector-s16-ref . g$6511$1yk2we)
        (bytevector-s16-native-set! . g$6517$1yk2we)
        (bytevector-s16-native-ref . g$6513$1yk2we)
        (bytevector-length . g$12213$1yk2we)
        (bytevector-ieee-single-set! . g$12212$1yk2we)
        (bytevector-ieee-single-ref . g$12211$1yk2we)
        (bytevector-ieee-single-native-set! . g$6536$1yk2we)
        (bytevector-ieee-single-native-ref . g$6534$1yk2we)
        (bytevector-ieee-double-set! . g$12210$1yk2we)
        (bytevector-ieee-double-ref . g$12209$1yk2we)
        (bytevector-ieee-double-native-set! . g$6537$1yk2we)
        (bytevector-ieee-double-native-ref . g$6535$1yk2we)
        (bytevector-fill! . g$12208$1yk2we)
        (bytevector-copy! . g$12207$1yk2we)
        (bytevector-copy . g$12206$1yk2we)
        (bytevector->uint-list . g$12205$1yk2we)
        (bytevector->u8-list . g$12204$1yk2we)
        (bytevector->sint-list . g$12203$1yk2we)
        (no-nans-violation? . g$7198$1yk2we)
        (no-infinities-violation? . g$7184$1yk2we)
        (make-no-nans-violation . g$7197$1yk2we)
        (make-no-infinities-violation . g$7183$1yk2we)
        (real->flonum . g$12202$1yk2we)
        (flzero? . g$12201$1yk2we)
        (fltruncate . g$12200$1yk2we)
        (fltan . g$12199$1yk2we)
        (flsqrt . g$12198$1yk2we)
        (flsin . g$12197$1yk2we)
        (flround . g$12196$1yk2we)
        (flpositive? . g$12195$1yk2we)
        (flonum? . g$12194$1yk2we)
        (flodd? . g$12193$1yk2we)
        (flnumerator . g$12192$1yk2we)
        (flnegative? . g$12191$1yk2we)
        (flnan? . g$12190$1yk2we)
        (flmod0 . g$12189$1yk2we)
        (flmod . g$12188$1yk2we)
        (flmin . g$12187$1yk2we)
        (flmax . g$12186$1yk2we)
        (fllog . g$12185$1yk2we)
        (flinteger? . g$12184$1yk2we)
        (flinfinite? . g$12183$1yk2we)
        (flfloor . g$12182$1yk2we)
        (flfinite? . g$12181$1yk2we)
        (flexpt . g$12180$1yk2we)
        (flexp . g$12179$1yk2we)
        (fleven? . g$12178$1yk2we)
        (fldiv0-and-mod0 . g$12177$1yk2we)
        (fldiv0 . g$12176$1yk2we)
        (fldiv-and-mod . g$12175$1yk2we)
        (fldiv . g$12174$1yk2we)
        (fldenominator . g$12173$1yk2we)
        (flcos . g$12172$1yk2we)
        (flceiling . g$12171$1yk2we)
        (flatan . g$12170$1yk2we)
        (flasin . g$12169$1yk2we)
        (flacos . g$12168$1yk2we)
        (flabs . g$12167$1yk2we)
        (fl>? . g$12166$1yk2we)
        (fl>=? . g$12165$1yk2we)
        (fl=? . g$12164$1yk2we)
        (fl<? . g$12163$1yk2we)
        (fl<=? . g$12162$1yk2we)
        (fl/ . g$12161$1yk2we)
        (fl- . g$12160$1yk2we)
        (fl+ . g$12159$1yk2we)
        (fl* . g$12158$1yk2we)
        (fixnum->flonum . g$12157$1yk2we)
        (fxzero? . g$12156$1yk2we)
        (fxxor . g$12155$1yk2we)
        (fxrotate-bit-field . g$7129$1yk2we)
        (fxreverse-bit-field . g$12154$1yk2we)
        (fxpositive? . g$12153$1yk2we)
        (fxodd? . g$12152$1yk2we)
        (fxnot . g$12151$1yk2we)
        (fxnegative? . g$12150$1yk2we)
        (fxmod0 . g$12149$1yk2we)
        (fxmod . g$12148$1yk2we)
        (fxmin . g$12147$1yk2we)
        (fxmax . g$12146$1yk2we)
        (fxlength . g$12145$1yk2we)
        (fxior . g$12144$1yk2we)
        (fxif . g$7123$1yk2we)
        (fxfirst-bit-set . g$12143$1yk2we)
        (fxeven? . g$12142$1yk2we)
        (fxdiv0-and-mod0 . g$12141$1yk2we)
        (fxdiv0 . g$12140$1yk2we)
        (fxdiv-and-mod . g$12139$1yk2we)
        (fxdiv . g$12138$1yk2we)
        (fxcopy-bit-field . g$7126$1yk2we)
        (fxcopy-bit . g$7124$1yk2we)
        (fxbit-set? . g$12137$1yk2we)
        (fxbit-field . g$7125$1yk2we)
        (fxbit-count . g$12136$1yk2we)
        (fxarithmetic-shift-right . g$7128$1yk2we)
        (fxarithmetic-shift-left . g$7127$1yk2we)
        (fxarithmetic-shift . g$12135$1yk2we)
        (fxand . g$12134$1yk2we)
        (fx>? . g$12133$1yk2we)
        (fx>=? . g$12132$1yk2we)
        (fx=? . g$12131$1yk2we)
        (fx<? . g$12130$1yk2we)
        (fx<=? . g$12129$1yk2we)
        (fx-/carry . g$12128$1yk2we)
        (fx- . g$12127$1yk2we)
        (fx+/carry . g$12126$1yk2we)
        (fx+ . g$12125$1yk2we)
        (fx*/carry . g$12124$1yk2we)
        (fx* . g$12123$1yk2we)
        (greatest-fixnum . g$12122$1yk2we)
        (least-fixnum . g$12121$1yk2we)
        (fixnum-width . g$12120$1yk2we)
        (fixnum? . g$12119$1yk2we)
        (bitwise-rotate-bit-field . g$7081$1yk2we)
        (bitwise-reverse-bit-field . g$12118$1yk2we)
        (bitwise-length . g$12117$1yk2we)
        (bitwise-if . g$7075$1yk2we)
        (bitwise-first-bit-set . g$12116$1yk2we)
        (bitwise-copy-bit-field . g$7078$1yk2we)
        (bitwise-copy-bit . g$7076$1yk2we)
        (bitwise-bit-set? . g$12115$1yk2we)
        (bitwise-bit-field . g$12114$1yk2we)
        (bitwise-bit-count . g$12113$1yk2we)
        (bitwise-xor . g$12112$1yk2we)
        (bitwise-ior . g$12111$1yk2we)
        (bitwise-and . g$12110$1yk2we)
        (bitwise-not . g$12109$1yk2we)
        (bitwise-arithmetic-shift-right . g$7080$1yk2we)
        (bitwise-arithmetic-shift-left . g$7079$1yk2we)
        (bitwise-arithmetic-shift . g$12108$1yk2we)
        (zero? . g$12107$1yk2we)
        (vector? . g$12106$1yk2we)
        (vector-set! . g$12105$1yk2we)
        (vector-ref . g$12104$1yk2we)
        (vector-map . g$12103$1yk2we)
        (vector-length . g$12102$1yk2we)
        (vector-for-each . g$12101$1yk2we)
        (vector-fill! . g$12100$1yk2we)
        (vector->list . g$12099$1yk2we)
        (vector . g$12098$1yk2we)
        (values . g$12097$1yk2we)
        (truncate . g$12096$1yk2we)
        (tan . g$12095$1yk2we)
        (symbol? . g$12094$1yk2we)
        (symbol=? . g$5868$1yk2we)
        (symbol->string . g$12093$1yk2we)
        (substring . g$12092$1yk2we)
        (string? . g$12091$1yk2we)
        (string>? . g$5865$1yk2we)
        (string>=? . g$5867$1yk2we)
        (string=? . g$5863$1yk2we)
        (string<? . g$5864$1yk2we)
        (string<=? . g$5866$1yk2we)
        (string-ref . g$12090$1yk2we)
        (string-length . g$12089$1yk2we)
        (string-for-each . g$12088$1yk2we)
        (string-copy . g$12087$1yk2we)
        (string-append . g$12086$1yk2we)
        (string->symbol . g$12085$1yk2we)
        (string->number . g$12084$1yk2we)
        (string->list . g$12083$1yk2we)
        (string . g$12082$1yk2we)
        (sqrt . g$12081$1yk2we)
        (sin . g$12080$1yk2we)
        (round . g$12079$1yk2we)
        (reverse . g$12078$1yk2we)
        (real? . g$12077$1yk2we)
        (real-valued? . g$12076$1yk2we)
        (real-part . g$12075$1yk2we)
        (rationalize . g$5909$1yk2we)
        (rational? . g$12074$1yk2we)
        (rational-valued? . g$12073$1yk2we)
        (procedure? . g$12072$1yk2we)
        (positive? . g$12071$1yk2we)
        (pair? . g$12070$1yk2we)
        (odd? . g$12069$1yk2we)
        (numerator . g$12068$1yk2we)
        (number? . g$12067$1yk2we)
        (number->string . g$12066$1yk2we)
        (null? . g$12065$1yk2we)
        (not . g$12064$1yk2we)
        (negative? . g$12063$1yk2we)
        (nan? . g$12062$1yk2we)
        (min . g$12061$1yk2we)
        (max . g$12060$1yk2we)
        (map . g$12059$1yk2we)
        (make-vector . g$12058$1yk2we)
        (make-string . g$12057$1yk2we)
        (make-rectangular . g$12056$1yk2we)
        (make-polar . g$12055$1yk2we)
        (magnitude . g$12054$1yk2we)
        (log . g$12053$1yk2we)
        (list? . g$12052$1yk2we)
        (list-tail . g$12051$1yk2we)
        (list-ref . g$12050$1yk2we)
        (list->vector . g$12049$1yk2we)
        (list->string . g$12048$1yk2we)
        (list . g$12047$1yk2we)
        (length . g$12046$1yk2we)
        (lcm . g$12045$1yk2we)
        (integer? . g$12044$1yk2we)
        (integer-valued? . g$12043$1yk2we)
        (integer->char . g$12042$1yk2we)
        (infinite? . g$12041$1yk2we)
        (inexact? . g$12040$1yk2we)
        (inexact . g$12039$1yk2we)
        (imag-part . g$12038$1yk2we)
        (gcd . g$12037$1yk2we)
        (for-each . g$12036$1yk2we)
        (floor . g$12035$1yk2we)
        (finite? . g$12034$1yk2we)
        (expt . g$12033$1yk2we)
        (exp . g$12032$1yk2we)
        (exact? . g$12031$1yk2we)
        (exact-integer-sqrt . g$12030$1yk2we)
        (exact . g$12029$1yk2we)
        (even? . g$12028$1yk2we)
        (error . g$12027$1yk2we)
        (eqv? . g$12026$1yk2we)
        (equal? . g$12025$1yk2we)
        (eq? . g$12024$1yk2we)
        (dynamic-wind . g$12023$1yk2we)
        (div0-and-mod0 . g$12022$1yk2we)
        (mod0 . g$12021$1yk2we)
        (div0 . g$12020$1yk2we)
        (div-and-mod . g$12019$1yk2we)
        (mod . g$12018$1yk2we)
        (div . g$12017$1yk2we)
        (denominator . g$12016$1yk2we)
        (cos . g$12015$1yk2we)
        (cons . g$12014$1yk2we)
        (complex? . g$12013$1yk2we)
        (char? . g$12012$1yk2we)
        (char>? . g$5906$1yk2we)
        (char>=? . g$5908$1yk2we)
        (char=? . g$5904$1yk2we)
        (char<? . g$5905$1yk2we)
        (char<=? . g$5907$1yk2we)
        (char->integer . g$12011$1yk2we)
        (ceiling . g$12010$1yk2we)
        (call-with-values . g$12009$1yk2we)
        (call/cc . g$12008$1yk2we)
        (call-with-current-continuation . g$12007$1yk2we)
        (cddddr . g$5828$1yk2we)
        (cdddar . g$5827$1yk2we)
        (cddadr . g$5826$1yk2we)
        (cddaar . g$5825$1yk2we)
        (cdaddr . g$5824$1yk2we)
        (cdadar . g$5823$1yk2we)
        (cdaadr . g$5822$1yk2we)
        (cdaaar . g$5821$1yk2we)
        (cadddr . g$5820$1yk2we)
        (caddar . g$5819$1yk2we)
        (cadadr . g$5818$1yk2we)
        (cadaar . g$5817$1yk2we)
        (caaddr . g$5816$1yk2we)
        (caadar . g$5815$1yk2we)
        (caaadr . g$5814$1yk2we)
        (caaaar . g$5813$1yk2we)
        (cdddr . g$5812$1yk2we)
        (cddar . g$5811$1yk2we)
        (cdadr . g$5810$1yk2we)
        (cdaar . g$5809$1yk2we)
        (caddr . g$5808$1yk2we)
        (cadar . g$5807$1yk2we)
        (caadr . g$5806$1yk2we)
        (caaar . g$5805$1yk2we)
        (cddr . g$5804$1yk2we)
        (cdar . g$5803$1yk2we)
        (cadr . g$5802$1yk2we)
        (caar . g$5801$1yk2we)
        (cdr . g$12006$1yk2we)
        (car . g$12005$1yk2we)
        (boolean? . g$12004$1yk2we)
        (boolean=? . g$5869$1yk2we)
        (atan . g$12003$1yk2we)
        (assertion-violation . g$12002$1yk2we)
        (asin . g$12001$1yk2we)
        (apply . g$12000$1yk2we)
        (append . g$11999$1yk2we)
        (angle . g$11998$1yk2we)
        (acos . g$11997$1yk2we)
        (abs . g$11996$1yk2we)
        (/ . g$11995$1yk2we)
        (* . g$11994$1yk2we)
        (- . g$11993$1yk2we)
        (+ . g$11992$1yk2we)
        (>= . g$11991$1yk2we)
        (> . g$11990$1yk2we)
        (= . g$11989$1yk2we)
        (<= . g$11988$1yk2we)
        (< . g$11987$1yk2we)
        (&no-nans . g$11956$1yk2we)
        (&no-infinities . g$11955$1yk2we)
        (&i/o-encoding . g$11954$1yk2we)
        (&i/o-decoding . g$11953$1yk2we)
        (&i/o-port . g$11952$1yk2we)
        (&i/o-file-does-not-exist . g$11951$1yk2we)
        (&i/o-file-already-exists . g$11950$1yk2we)
        (&i/o-file-is-read-only . g$11949$1yk2we)
        (&i/o-file-protection . g$11948$1yk2we)
        (&i/o-filename . g$11947$1yk2we)
        (&i/o-invalid-position . g$11946$1yk2we)
        (&i/o-write . g$11945$1yk2we)
        (&i/o-read . g$11944$1yk2we)
        (&i/o . g$11943$1yk2we)
        (&non-continuable . g$11942$1yk2we)
        (&undefined . g$11941$1yk2we)
        (&syntax . g$11940$1yk2we)
        (&lexical . g$11939$1yk2we)
        (&implementation-restriction . g$11938$1yk2we)
        (&who . g$11936$1yk2we)
        (&irritants . g$11935$1yk2we)
        (&assertion . g$11934$1yk2we)
        (&violation . g$11933$1yk2we)
        (&error . g$11932$1yk2we)
        (&serious . g$11931$1yk2we)
        (&warning . g$11930$1yk2we)
        (&message . g$11929$1yk2we)
        (&condition . g$11928$1yk2we)
        (define-condition-type . g$11927$1yk2we)
        (define-enumeration . g$11926$1yk2we)
        (define-record-type . g$11925$1yk2we)
        (parent-rtd . g$11924$1yk2we)
        (nongenerative . g$11923$1yk2we)
        (opaque . g$11922$1yk2we)
        (sealed . g$11921$1yk2we)
        (protocol . g$11920$1yk2we)
        (parent . g$11919$1yk2we)
        (immutable . g$11918$1yk2we)
        (mutable . g$11917$1yk2we)
        (fields . g$11916$1yk2we)
        (error-handling-mode . g$11915$1yk2we)
        (file-options . g$11914$1yk2we)
        (buffer-mode . g$11913$1yk2we)
        (eol-style . g$11912$1yk2we)
        (guard . g$11911$1yk2we)
        (unsyntax-splicing . g$11905$1yk2we)
        (unsyntax . g$11904$1yk2we)
        (unquote-splicing . g$11903$1yk2we)
        (unquote . g$11902$1yk2we)
        (_ . g$11901$1yk2we)
        (else . g$11900$1yk2we)
        (=> . g$11899$1yk2we)
        (... . g$11898$1yk2we)
        (assert . g$11897$1yk2we)
        (endianness . g$11896$1yk2we)
        (or . g$11893$1yk2we)
        (and . g$11892$1yk2we)
        (do . g$11891$1yk2we)
        (cond . g$11890$1yk2we)
        (let* . g$11889$1yk2we)
        (let . g$11888$1yk2we)
        (identifier-syntax . g$11887$1yk2we)
        (with-syntax . g$11886$1yk2we)
        (quasisyntax . g$11885$1yk2we)
        (quasiquote . g$11884$1yk2we)
        (syntax-rules . g$11883$1yk2we)
        (let-values . g$11879$1yk2we)
        (let*-values . g$11878$1yk2we)
        (record-constructor-descriptor . g$11877$1yk2we)
        (record-type-descriptor . g$11876$1yk2we)
        (case . g$11874$1yk2we)
        (unless . g$11872$1yk2we)
        (when . g$11871$1yk2we)
        (if . g$11870$1yk2we)
        (letrec* . g$11869$1yk2we)
        (letrec . g$11868$1yk2we)
        (case-lambda . g$11866$1yk2we)
        (lambda . g$11865$1yk2we)
        (syntax . g$11864$1yk2we)
        (syntax-case . g$11863$1yk2we)
        (quote . g$11862$1yk2we)
        (letrec-syntax . g$11860$1yk2we)
        (let-syntax . g$11859$1yk2we)
        (set! . g$11858$1yk2we)
        (begin . g$11855$1yk2we)
        (define-syntax . g$11853$1yk2we)
        (define . g$11852$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12484$1yk2we
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8871$1yk2we)
        (scheme-report-environment . g$8846$1yk2we)
        (quotient . g$6846$1yk2we)
        (null-environment . g$8845$1yk2we)
        (remainder . g$6847$1yk2we)
        (modulo . g$6848$1yk2we)
        (inexact->exact . g$12250$1yk2we)
        (force . g$6850$1yk2we)
        (exact->inexact . g$12249$1yk2we)
        (delay . g$11895$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12485$1yk2we
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11891$1yk2we)
        (unless . g$11872$1yk2we)
        (when . g$11871$1yk2we)
        (case-lambda . g$11866$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12486$1yk2we
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8848$1yk2we) (environment . g$8844$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12487$1yk2we
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12245$1yk2we) (set-car! . g$12244$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12488$1yk2we
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12247$1yk2we) (string-set! . g$12246$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12489$1yk2we
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12248$1yk2we) (command-line . g$11816$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12490$1yk2we
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8468$1yk2we)
        (identifier? . g$8866$1yk2we)
        (generate-temporaries . g$8855$1yk2we)
        (free-identifier=? . g$8856$1yk2we)
        (syntax->datum . g$8868$1yk2we)
        (datum->syntax . g$8867$1yk2we)
        (bound-identifier=? . g$8857$1yk2we)
        (syntax-violation . g$8865$1yk2we)
        (unsyntax-splicing . g$11905$1yk2we)
        (unsyntax . g$11904$1yk2we)
        (_ . g$11901$1yk2we)
        (... . g$11898$1yk2we)
        (with-syntax . g$11886$1yk2we)
        (quasisyntax . g$11885$1yk2we)
        (syntax . g$11864$1yk2we)
        (syntax-case . g$11863$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12491$1yk2we
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6353$1yk2we)
        (file-exists? . g$6352$1yk2we)
        (make-i/o-write-error . g$7240$1yk2we)
        (make-i/o-read-error . g$7226$1yk2we)
        (make-i/o-port-error . g$7345$1yk2we)
        (make-i/o-invalid-position-error . g$7255$1yk2we)
        (make-i/o-filename-error . g$7272$1yk2we)
        (make-i/o-file-protection-error . g$7288$1yk2we)
        (make-i/o-file-is-read-only-error . g$7302$1yk2we)
        (make-i/o-file-does-not-exist-error . g$7330$1yk2we)
        (make-i/o-file-already-exists-error . g$7316$1yk2we)
        (make-i/o-error . g$7212$1yk2we)
        (i/o-write-error? . g$7241$1yk2we)
        (i/o-read-error? . g$7227$1yk2we)
        (i/o-port-error? . g$7347$1yk2we)
        (i/o-invalid-position-error? . g$7257$1yk2we)
        (i/o-error-position . g$7258$1yk2we)
        (i/o-filename-error? . g$7274$1yk2we)
        (i/o-file-protection-error? . g$7289$1yk2we)
        (i/o-file-is-read-only-error? . g$7303$1yk2we)
        (i/o-file-does-not-exist-error? . g$7331$1yk2we)
        (i/o-file-already-exists-error? . g$7317$1yk2we)
        (i/o-error? . g$7213$1yk2we)
        (i/o-error-port . g$7348$1yk2we)
        (i/o-error-filename . g$7275$1yk2we)
        (&i/o-port . g$11952$1yk2we)
        (&i/o-file-does-not-exist . g$11951$1yk2we)
        (&i/o-file-already-exists . g$11950$1yk2we)
        (&i/o-file-is-read-only . g$11949$1yk2we)
        (&i/o-file-protection . g$11948$1yk2we)
        (&i/o-filename . g$11947$1yk2we)
        (&i/o-invalid-position . g$11946$1yk2we)
        (&i/o-write . g$11945$1yk2we)
        (&i/o-read . g$11944$1yk2we)
        (&i/o . g$11943$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12492$1yk2we
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12343$1yk2we)
        (vector-sort . g$12342$1yk2we)
        (list-sort . g$6866$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12493$1yk2we
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12107$1yk2we)
        (vector? . g$12106$1yk2we)
        (vector-set! . g$12105$1yk2we)
        (vector-ref . g$12104$1yk2we)
        (vector-map . g$12103$1yk2we)
        (vector-length . g$12102$1yk2we)
        (vector-for-each . g$12101$1yk2we)
        (vector-fill! . g$12100$1yk2we)
        (vector->list . g$12099$1yk2we)
        (vector . g$12098$1yk2we)
        (values . g$12097$1yk2we)
        (truncate . g$12096$1yk2we)
        (tan . g$12095$1yk2we)
        (symbol? . g$12094$1yk2we)
        (symbol=? . g$5868$1yk2we)
        (symbol->string . g$12093$1yk2we)
        (substring . g$12092$1yk2we)
        (string? . g$12091$1yk2we)
        (string>? . g$5865$1yk2we)
        (string>=? . g$5867$1yk2we)
        (string=? . g$5863$1yk2we)
        (string<? . g$5864$1yk2we)
        (string<=? . g$5866$1yk2we)
        (string-ref . g$12090$1yk2we)
        (string-length . g$12089$1yk2we)
        (string-for-each . g$12088$1yk2we)
        (string-copy . g$12087$1yk2we)
        (string-append . g$12086$1yk2we)
        (string->symbol . g$12085$1yk2we)
        (string->number . g$12084$1yk2we)
        (string->list . g$12083$1yk2we)
        (string . g$12082$1yk2we)
        (sqrt . g$12081$1yk2we)
        (sin . g$12080$1yk2we)
        (round . g$12079$1yk2we)
        (reverse . g$12078$1yk2we)
        (real? . g$12077$1yk2we)
        (real-valued? . g$12076$1yk2we)
        (real-part . g$12075$1yk2we)
        (rationalize . g$5909$1yk2we)
        (rational? . g$12074$1yk2we)
        (rational-valued? . g$12073$1yk2we)
        (procedure? . g$12072$1yk2we)
        (positive? . g$12071$1yk2we)
        (pair? . g$12070$1yk2we)
        (odd? . g$12069$1yk2we)
        (numerator . g$12068$1yk2we)
        (number? . g$12067$1yk2we)
        (number->string . g$12066$1yk2we)
        (null? . g$12065$1yk2we)
        (not . g$12064$1yk2we)
        (negative? . g$12063$1yk2we)
        (nan? . g$12062$1yk2we)
        (min . g$12061$1yk2we)
        (max . g$12060$1yk2we)
        (map . g$12059$1yk2we)
        (make-vector . g$12058$1yk2we)
        (make-string . g$12057$1yk2we)
        (make-rectangular . g$12056$1yk2we)
        (make-polar . g$12055$1yk2we)
        (magnitude . g$12054$1yk2we)
        (log . g$12053$1yk2we)
        (list? . g$12052$1yk2we)
        (list-tail . g$12051$1yk2we)
        (list-ref . g$12050$1yk2we)
        (list->vector . g$12049$1yk2we)
        (list->string . g$12048$1yk2we)
        (list . g$12047$1yk2we)
        (length . g$12046$1yk2we)
        (lcm . g$12045$1yk2we)
        (integer? . g$12044$1yk2we)
        (integer-valued? . g$12043$1yk2we)
        (integer->char . g$12042$1yk2we)
        (infinite? . g$12041$1yk2we)
        (inexact? . g$12040$1yk2we)
        (inexact . g$12039$1yk2we)
        (imag-part . g$12038$1yk2we)
        (gcd . g$12037$1yk2we)
        (for-each . g$12036$1yk2we)
        (floor . g$12035$1yk2we)
        (finite? . g$12034$1yk2we)
        (expt . g$12033$1yk2we)
        (exp . g$12032$1yk2we)
        (exact? . g$12031$1yk2we)
        (exact-integer-sqrt . g$12030$1yk2we)
        (exact . g$12029$1yk2we)
        (even? . g$12028$1yk2we)
        (error . g$12027$1yk2we)
        (eqv? . g$12026$1yk2we)
        (equal? . g$12025$1yk2we)
        (eq? . g$12024$1yk2we)
        (dynamic-wind . g$12023$1yk2we)
        (div0-and-mod0 . g$12022$1yk2we)
        (mod0 . g$12021$1yk2we)
        (div0 . g$12020$1yk2we)
        (div-and-mod . g$12019$1yk2we)
        (mod . g$12018$1yk2we)
        (div . g$12017$1yk2we)
        (denominator . g$12016$1yk2we)
        (cos . g$12015$1yk2we)
        (cons . g$12014$1yk2we)
        (complex? . g$12013$1yk2we)
        (char? . g$12012$1yk2we)
        (char>? . g$5906$1yk2we)
        (char>=? . g$5908$1yk2we)
        (char=? . g$5904$1yk2we)
        (char<? . g$5905$1yk2we)
        (char<=? . g$5907$1yk2we)
        (char->integer . g$12011$1yk2we)
        (ceiling . g$12010$1yk2we)
        (call-with-values . g$12009$1yk2we)
        (call/cc . g$12008$1yk2we)
        (call-with-current-continuation . g$12007$1yk2we)
        (cddddr . g$5828$1yk2we)
        (cdddar . g$5827$1yk2we)
        (cddadr . g$5826$1yk2we)
        (cddaar . g$5825$1yk2we)
        (cdaddr . g$5824$1yk2we)
        (cdadar . g$5823$1yk2we)
        (cdaadr . g$5822$1yk2we)
        (cdaaar . g$5821$1yk2we)
        (cadddr . g$5820$1yk2we)
        (caddar . g$5819$1yk2we)
        (cadadr . g$5818$1yk2we)
        (cadaar . g$5817$1yk2we)
        (caaddr . g$5816$1yk2we)
        (caadar . g$5815$1yk2we)
        (caaadr . g$5814$1yk2we)
        (caaaar . g$5813$1yk2we)
        (cdddr . g$5812$1yk2we)
        (cddar . g$5811$1yk2we)
        (cdadr . g$5810$1yk2we)
        (cdaar . g$5809$1yk2we)
        (caddr . g$5808$1yk2we)
        (cadar . g$5807$1yk2we)
        (caadr . g$5806$1yk2we)
        (caaar . g$5805$1yk2we)
        (cddr . g$5804$1yk2we)
        (cdar . g$5803$1yk2we)
        (cadr . g$5802$1yk2we)
        (caar . g$5801$1yk2we)
        (cdr . g$12006$1yk2we)
        (car . g$12005$1yk2we)
        (boolean? . g$12004$1yk2we)
        (boolean=? . g$5869$1yk2we)
        (atan . g$12003$1yk2we)
        (assertion-violation . g$12002$1yk2we)
        (asin . g$12001$1yk2we)
        (apply . g$12000$1yk2we)
        (append . g$11999$1yk2we)
        (angle . g$11998$1yk2we)
        (acos . g$11997$1yk2we)
        (abs . g$11996$1yk2we)
        (/ . g$11995$1yk2we)
        (* . g$11994$1yk2we)
        (- . g$11993$1yk2we)
        (+ . g$11992$1yk2we)
        (>= . g$11991$1yk2we)
        (> . g$11990$1yk2we)
        (= . g$11989$1yk2we)
        (<= . g$11988$1yk2we)
        (< . g$11987$1yk2we)
        (unquote-splicing . g$11903$1yk2we)
        (unquote . g$11902$1yk2we)
        (_ . g$11901$1yk2we)
        (else . g$11900$1yk2we)
        (=> . g$11899$1yk2we)
        (... . g$11898$1yk2we)
        (assert . g$11897$1yk2we)
        (or . g$11893$1yk2we)
        (and . g$11892$1yk2we)
        (cond . g$11890$1yk2we)
        (let* . g$11889$1yk2we)
        (let . g$11888$1yk2we)
        (identifier-syntax . g$11887$1yk2we)
        (quasiquote . g$11884$1yk2we)
        (syntax-rules . g$11883$1yk2we)
        (let-values . g$11879$1yk2we)
        (let*-values . g$11878$1yk2we)
        (case . g$11874$1yk2we)
        (if . g$11870$1yk2we)
        (letrec* . g$11869$1yk2we)
        (letrec . g$11868$1yk2we)
        (lambda . g$11865$1yk2we)
        (quote . g$11862$1yk2we)
        (letrec-syntax . g$11860$1yk2we)
        (let-syntax . g$11859$1yk2we)
        (set! . g$11858$1yk2we)
        (begin . g$11855$1yk2we)
        (define-syntax . g$11853$1yk2we)
        (define . g$11852$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12494$1yk2we
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6433$1yk2we)
        (remv . g$6434$1yk2we)
        (remp . g$6419$1yk2we)
        (remq . g$6435$1yk2we)
        (partition . g$6418$1yk2we)
        (memv . g$12243$1yk2we)
        (memq . g$12242$1yk2we)
        (memp . g$6425$1yk2we)
        (member . g$6424$1yk2we)
        (exists . g$6429$1yk2we)
        (for-all . g$6428$1yk2we)
        (fold-right . g$6432$1yk2we)
        (fold-left . g$6431$1yk2we)
        (find . g$6417$1yk2we)
        (filter . g$6420$1yk2we)
        (cons* . g$6430$1yk2we)
        (assv . g$6421$1yk2we)
        (assq . g$12241$1yk2we)
        (assp . g$6423$1yk2we)
        (assoc . g$6422$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12495$1yk2we
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7408$1yk2we)
        (call-with-input-file . g$7407$1yk2we)
        (write-char . g$12329$1yk2we)
        (write . g$12328$1yk2we)
        (with-output-to-file . g$7406$1yk2we)
        (with-input-from-file . g$7405$1yk2we)
        (read-char . g$12327$1yk2we)
        (read . g$12326$1yk2we)
        (peek-char . g$12325$1yk2we)
        (open-output-file . g$12324$1yk2we)
        (open-input-file . g$12323$1yk2we)
        (newline . g$12322$1yk2we)
        (display . g$12321$1yk2we)
        (close-output-port . g$12320$1yk2we)
        (close-input-port . g$12319$1yk2we)
        (eof-object? . g$12318$1yk2we)
        (eof-object . g$12317$1yk2we)
        (current-error-port . g$12316$1yk2we)
        (current-output-port . g$12315$1yk2we)
        (current-input-port . g$12314$1yk2we)
        (output-port? . g$12313$1yk2we)
        (input-port? . g$12312$1yk2we)
        (make-i/o-write-error . g$7240$1yk2we)
        (make-i/o-read-error . g$7226$1yk2we)
        (make-i/o-port-error . g$7345$1yk2we)
        (make-i/o-invalid-position-error . g$7255$1yk2we)
        (make-i/o-filename-error . g$7272$1yk2we)
        (make-i/o-file-protection-error . g$7288$1yk2we)
        (make-i/o-file-is-read-only-error . g$7302$1yk2we)
        (make-i/o-file-does-not-exist-error . g$7330$1yk2we)
        (make-i/o-file-already-exists-error . g$7316$1yk2we)
        (make-i/o-error . g$7212$1yk2we)
        (i/o-write-error? . g$7241$1yk2we)
        (i/o-read-error? . g$7227$1yk2we)
        (i/o-port-error? . g$7347$1yk2we)
        (i/o-invalid-position-error? . g$7257$1yk2we)
        (i/o-error-position . g$7258$1yk2we)
        (i/o-filename-error? . g$7274$1yk2we)
        (i/o-file-protection-error? . g$7289$1yk2we)
        (i/o-file-is-read-only-error? . g$7303$1yk2we)
        (i/o-file-does-not-exist-error? . g$7331$1yk2we)
        (i/o-file-already-exists-error? . g$7317$1yk2we)
        (i/o-error? . g$7213$1yk2we)
        (i/o-error-port . g$7348$1yk2we)
        (i/o-error-filename . g$7275$1yk2we)
        (&i/o-port . g$11952$1yk2we)
        (&i/o-file-does-not-exist . g$11951$1yk2we)
        (&i/o-file-already-exists . g$11950$1yk2we)
        (&i/o-file-is-read-only . g$11949$1yk2we)
        (&i/o-file-protection . g$11948$1yk2we)
        (&i/o-filename . g$11947$1yk2we)
        (&i/o-invalid-position . g$11946$1yk2we)
        (&i/o-write . g$11945$1yk2we)
        (&i/o-read . g$11944$1yk2we)
        (&i/o . g$11943$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12496$1yk2we
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12272$1yk2we)
        (utf32->string . g$12232$1yk2we)
        (utf16->string . g$12231$1yk2we)
        (utf8->string . g$12230$1yk2we)
        (uint-list->bytevector . g$12229$1yk2we)
        (u8-list->bytevector . g$12228$1yk2we)
        (string->utf8 . g$12227$1yk2we)
        (string->utf32 . g$12226$1yk2we)
        (string->utf16 . g$12225$1yk2we)
        (sint-list->bytevector . g$12224$1yk2we)
        (native-endianness . g$6509$1yk2we)
        (bytevector? . g$12223$1yk2we)
        (bytevector=? . g$12222$1yk2we)
        (bytevector-uint-set! . g$12221$1yk2we)
        (bytevector-uint-ref . g$12220$1yk2we)
        (bytevector-u8-set! . g$12219$1yk2we)
        (bytevector-u8-ref . g$12218$1yk2we)
        (bytevector-u64-set! . g$6530$1yk2we)
        (bytevector-u64-ref . g$6526$1yk2we)
        (bytevector-u64-native-set! . g$6532$1yk2we)
        (bytevector-u64-native-ref . g$6528$1yk2we)
        (bytevector-u32-set! . g$6522$1yk2we)
        (bytevector-u32-ref . g$6518$1yk2we)
        (bytevector-u32-native-set! . g$6524$1yk2we)
        (bytevector-u32-native-ref . g$6520$1yk2we)
        (bytevector-u16-set! . g$6514$1yk2we)
        (bytevector-u16-ref . g$6510$1yk2we)
        (bytevector-u16-native-set! . g$6516$1yk2we)
        (bytevector-u16-native-ref . g$6512$1yk2we)
        (bytevector-sint-set! . g$12217$1yk2we)
        (bytevector-sint-ref . g$12216$1yk2we)
        (bytevector-s8-set! . g$12215$1yk2we)
        (bytevector-s8-ref . g$12214$1yk2we)
        (bytevector-s64-set! . g$6531$1yk2we)
        (bytevector-s64-ref . g$6527$1yk2we)
        (bytevector-s64-native-set! . g$6533$1yk2we)
        (bytevector-s64-native-ref . g$6529$1yk2we)
        (bytevector-s32-set! . g$6523$1yk2we)
        (bytevector-s32-ref . g$6519$1yk2we)
        (bytevector-s32-native-set! . g$6525$1yk2we)
        (bytevector-s32-native-ref . g$6521$1yk2we)
        (bytevector-s16-set! . g$6515$1yk2we)
        (bytevector-s16-ref . g$6511$1yk2we)
        (bytevector-s16-native-set! . g$6517$1yk2we)
        (bytevector-s16-native-ref . g$6513$1yk2we)
        (bytevector-length . g$12213$1yk2we)
        (bytevector-ieee-single-set! . g$12212$1yk2we)
        (bytevector-ieee-single-ref . g$12211$1yk2we)
        (bytevector-ieee-single-native-set! . g$6536$1yk2we)
        (bytevector-ieee-single-native-ref . g$6534$1yk2we)
        (bytevector-ieee-double-set! . g$12210$1yk2we)
        (bytevector-ieee-double-ref . g$12209$1yk2we)
        (bytevector-ieee-double-native-set! . g$6537$1yk2we)
        (bytevector-ieee-double-native-ref . g$6535$1yk2we)
        (bytevector-fill! . g$12208$1yk2we)
        (bytevector-copy! . g$12207$1yk2we)
        (bytevector-copy . g$12206$1yk2we)
        (bytevector->uint-list . g$12205$1yk2we)
        (bytevector->u8-list . g$12204$1yk2we)
        (bytevector->sint-list . g$12203$1yk2we)
        (endianness . g$11896$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12497$1yk2we
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12379$1yk2we)
        (string-titlecase . g$12378$1yk2we)
        (string-normalize-nfkd . g$12377$1yk2we)
        (string-normalize-nfkc . g$12376$1yk2we)
        (string-normalize-nfd . g$12375$1yk2we)
        (string-normalize-nfc . g$12374$1yk2we)
        (string-foldcase . g$12373$1yk2we)
        (string-downcase . g$12372$1yk2we)
        (string-ci>? . g$6980$1yk2we)
        (string-ci>=? . g$6982$1yk2we)
        (string-ci=? . g$6978$1yk2we)
        (string-ci<? . g$6979$1yk2we)
        (string-ci<=? . g$6981$1yk2we)
        (char-whitespace? . g$12371$1yk2we)
        (char-upper-case? . g$12370$1yk2we)
        (char-title-case? . g$12369$1yk2we)
        (char-numeric? . g$12368$1yk2we)
        (char-lower-case? . g$12367$1yk2we)
        (char-general-category . g$12366$1yk2we)
        (char-upcase . g$12365$1yk2we)
        (char-titlecase . g$12364$1yk2we)
        (char-foldcase . g$12363$1yk2we)
        (char-downcase . g$12362$1yk2we)
        (char-ci>? . g$7019$1yk2we)
        (char-ci>=? . g$7021$1yk2we)
        (char-ci=? . g$7017$1yk2we)
        (char-ci<? . g$7018$1yk2we)
        (char-ci<=? . g$7020$1yk2we)
        (char-alphabetic? . g$12361$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12498$1yk2we
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12240$1yk2we)
        (raise-continuable . g$12239$1yk2we)
        (raise . g$12238$1yk2we)
        (guard . g$11911$1yk2we)
        (else . g$11900$1yk2we)
        (=> . g$11899$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12499$1yk2we
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7081$1yk2we)
        (bitwise-reverse-bit-field . g$12118$1yk2we)
        (bitwise-length . g$12117$1yk2we)
        (bitwise-if . g$7075$1yk2we)
        (bitwise-first-bit-set . g$12116$1yk2we)
        (bitwise-copy-bit-field . g$7078$1yk2we)
        (bitwise-copy-bit . g$7076$1yk2we)
        (bitwise-bit-set? . g$12115$1yk2we)
        (bitwise-bit-field . g$12114$1yk2we)
        (bitwise-bit-count . g$12113$1yk2we)
        (bitwise-xor . g$12112$1yk2we)
        (bitwise-ior . g$12111$1yk2we)
        (bitwise-and . g$12110$1yk2we)
        (bitwise-not . g$12109$1yk2we)
        (bitwise-arithmetic-shift-right . g$7080$1yk2we)
        (bitwise-arithmetic-shift-left . g$7079$1yk2we)
        (bitwise-arithmetic-shift . g$12108$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12500$1yk2we
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12156$1yk2we)
        (fxxor . g$12155$1yk2we)
        (fxrotate-bit-field . g$7129$1yk2we)
        (fxreverse-bit-field . g$12154$1yk2we)
        (fxpositive? . g$12153$1yk2we)
        (fxodd? . g$12152$1yk2we)
        (fxnot . g$12151$1yk2we)
        (fxnegative? . g$12150$1yk2we)
        (fxmod0 . g$12149$1yk2we)
        (fxmod . g$12148$1yk2we)
        (fxmin . g$12147$1yk2we)
        (fxmax . g$12146$1yk2we)
        (fxlength . g$12145$1yk2we)
        (fxior . g$12144$1yk2we)
        (fxif . g$7123$1yk2we)
        (fxfirst-bit-set . g$12143$1yk2we)
        (fxeven? . g$12142$1yk2we)
        (fxdiv0-and-mod0 . g$12141$1yk2we)
        (fxdiv0 . g$12140$1yk2we)
        (fxdiv-and-mod . g$12139$1yk2we)
        (fxdiv . g$12138$1yk2we)
        (fxcopy-bit-field . g$7126$1yk2we)
        (fxcopy-bit . g$7124$1yk2we)
        (fxbit-set? . g$12137$1yk2we)
        (fxbit-field . g$7125$1yk2we)
        (fxbit-count . g$12136$1yk2we)
        (fxarithmetic-shift-right . g$7128$1yk2we)
        (fxarithmetic-shift-left . g$7127$1yk2we)
        (fxarithmetic-shift . g$12135$1yk2we)
        (fxand . g$12134$1yk2we)
        (fx>? . g$12133$1yk2we)
        (fx>=? . g$12132$1yk2we)
        (fx=? . g$12131$1yk2we)
        (fx<? . g$12130$1yk2we)
        (fx<=? . g$12129$1yk2we)
        (fx-/carry . g$12128$1yk2we)
        (fx- . g$12127$1yk2we)
        (fx+/carry . g$12126$1yk2we)
        (fx+ . g$12125$1yk2we)
        (fx*/carry . g$12124$1yk2we)
        (fx* . g$12123$1yk2we)
        (greatest-fixnum . g$12122$1yk2we)
        (least-fixnum . g$12121$1yk2we)
        (fixnum-width . g$12120$1yk2we)
        (fixnum? . g$12119$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12501$1yk2we
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7198$1yk2we)
        (no-infinities-violation? . g$7184$1yk2we)
        (make-no-nans-violation . g$7197$1yk2we)
        (make-no-infinities-violation . g$7183$1yk2we)
        (real->flonum . g$12202$1yk2we)
        (flzero? . g$12201$1yk2we)
        (fltruncate . g$12200$1yk2we)
        (fltan . g$12199$1yk2we)
        (flsqrt . g$12198$1yk2we)
        (flsin . g$12197$1yk2we)
        (flround . g$12196$1yk2we)
        (flpositive? . g$12195$1yk2we)
        (flonum? . g$12194$1yk2we)
        (flodd? . g$12193$1yk2we)
        (flnumerator . g$12192$1yk2we)
        (flnegative? . g$12191$1yk2we)
        (flnan? . g$12190$1yk2we)
        (flmod0 . g$12189$1yk2we)
        (flmod . g$12188$1yk2we)
        (flmin . g$12187$1yk2we)
        (flmax . g$12186$1yk2we)
        (fllog . g$12185$1yk2we)
        (flinteger? . g$12184$1yk2we)
        (flinfinite? . g$12183$1yk2we)
        (flfloor . g$12182$1yk2we)
        (flfinite? . g$12181$1yk2we)
        (flexpt . g$12180$1yk2we)
        (flexp . g$12179$1yk2we)
        (fleven? . g$12178$1yk2we)
        (fldiv0-and-mod0 . g$12177$1yk2we)
        (fldiv0 . g$12176$1yk2we)
        (fldiv-and-mod . g$12175$1yk2we)
        (fldiv . g$12174$1yk2we)
        (fldenominator . g$12173$1yk2we)
        (flcos . g$12172$1yk2we)
        (flceiling . g$12171$1yk2we)
        (flatan . g$12170$1yk2we)
        (flasin . g$12169$1yk2we)
        (flacos . g$12168$1yk2we)
        (flabs . g$12167$1yk2we)
        (fl>? . g$12166$1yk2we)
        (fl>=? . g$12165$1yk2we)
        (fl=? . g$12164$1yk2we)
        (fl<? . g$12163$1yk2we)
        (fl<=? . g$12162$1yk2we)
        (fl/ . g$12161$1yk2we)
        (fl- . g$12160$1yk2we)
        (fl+ . g$12159$1yk2we)
        (fl* . g$12158$1yk2we)
        (fixnum->flonum . g$12157$1yk2we)
        (&no-nans . g$11956$1yk2we)
        (&no-infinities . g$11955$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12502$1yk2we
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12341$1yk2we)
        (string-ci-hash . g$12340$1yk2we)
        (string-hash . g$12339$1yk2we)
        (equal-hash . g$12338$1yk2we)
        (hashtable-equivalence-function . g$12337$1yk2we)
        (make-hashtable . g$12336$1yk2we)
        (hashtable-hash-function . g$12335$1yk2we)
        (make-eqv-hashtable . g$6320$1yk2we)
        (make-eq-hashtable . g$6319$1yk2we)
        (hashtable? . g$12334$1yk2we)
        (hashtable-update! . g$6326$1yk2we)
        (hashtable-size . g$6321$1yk2we)
        (hashtable-set! . g$6323$1yk2we)
        (hashtable-ref . g$6322$1yk2we)
        (hashtable-mutable? . g$12333$1yk2we)
        (hashtable-keys . g$12332$1yk2we)
        (hashtable-entries . g$12331$1yk2we)
        (hashtable-delete! . g$6324$1yk2we)
        (hashtable-copy . g$12330$1yk2we)
        (hashtable-contains? . g$6325$1yk2we)
        (hashtable-clear! . g$6327$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12503$1yk2we
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12318$1yk2we)
        (eof-object . g$12317$1yk2we)
        (current-error-port . g$12316$1yk2we)
        (current-output-port . g$12315$1yk2we)
        (current-input-port . g$12314$1yk2we)
        (output-port? . g$12313$1yk2we)
        (input-port? . g$12312$1yk2we)
        (utf-8-codec . g$12311$1yk2we)
        (utf-16-codec . g$12310$1yk2we)
        (transcoder-error-handling-mode . g$12309$1yk2we)
        (transcoder-eol-style . g$12308$1yk2we)
        (transcoder-codec . g$12307$1yk2we)
        (transcoded-port . g$12306$1yk2we)
        (textual-port? . g$12305$1yk2we)
        (string->bytevector . g$12304$1yk2we)
        (standard-output-port . g$12303$1yk2we)
        (standard-input-port . g$12302$1yk2we)
        (standard-error-port . g$12301$1yk2we)
        (set-port-position! . g$12300$1yk2we)
        (put-u8 . g$12299$1yk2we)
        (put-string . g$12298$1yk2we)
        (put-datum . g$12297$1yk2we)
        (put-char . g$12296$1yk2we)
        (put-bytevector . g$12295$1yk2we)
        (port? . g$7384$1yk2we)
        (port-transcoder . g$12294$1yk2we)
        (port-position . g$12293$1yk2we)
        (port-has-set-port-position!? . g$12292$1yk2we)
        (port-has-port-position? . g$12291$1yk2we)
        (port-eof? . g$12290$1yk2we)
        (output-port-buffer-mode . g$12289$1yk2we)
        (open-string-output-port . g$7383$1yk2we)
        (open-string-input-port . g$12288$1yk2we)
        (open-file-output-port . g$12287$1yk2we)
        (open-file-input/output-port . g$12286$1yk2we)
        (open-file-input-port . g$12285$1yk2we)
        (open-bytevector-output-port . g$12284$1yk2we)
        (open-bytevector-input-port . g$12283$1yk2we)
        (native-transcoder . g$12282$1yk2we)
        (native-eol-style . g$12281$1yk2we)
        (make-transcoder . g$12280$1yk2we)
        (latin-1-codec . g$12279$1yk2we)
        (make-i/o-write-error . g$7240$1yk2we)
        (make-i/o-read-error . g$7226$1yk2we)
        (make-i/o-port-error . g$7345$1yk2we)
        (make-i/o-invalid-position-error . g$7255$1yk2we)
        (make-i/o-filename-error . g$7272$1yk2we)
        (make-i/o-file-protection-error . g$7288$1yk2we)
        (make-i/o-file-is-read-only-error . g$7302$1yk2we)
        (make-i/o-file-does-not-exist-error . g$7330$1yk2we)
        (make-i/o-file-already-exists-error . g$7316$1yk2we)
        (make-i/o-error . g$7212$1yk2we)
        (make-i/o-encoding-error . g$7376$1yk2we)
        (make-i/o-decoding-error . g$7361$1yk2we)
        (make-custom-textual-output-port . g$12278$1yk2we)
        (make-custom-textual-input/output-port . g$12277$1yk2we)
        (make-custom-textual-input-port . g$12276$1yk2we)
        (make-custom-binary-output-port . g$12275$1yk2we)
        (make-custom-binary-input/output-port . g$12274$1yk2we)
        (make-custom-binary-input-port . g$12273$1yk2we)
        (lookahead-u8 . g$12271$1yk2we)
        (lookahead-char . g$12270$1yk2we)
        (i/o-write-error? . g$7241$1yk2we)
        (i/o-read-error? . g$7227$1yk2we)
        (i/o-port-error? . g$7347$1yk2we)
        (i/o-invalid-position-error? . g$7257$1yk2we)
        (i/o-error-position . g$7258$1yk2we)
        (i/o-filename-error? . g$7274$1yk2we)
        (i/o-file-protection-error? . g$7289$1yk2we)
        (i/o-file-is-read-only-error? . g$7303$1yk2we)
        (i/o-file-does-not-exist-error? . g$7331$1yk2we)
        (i/o-file-already-exists-error? . g$7317$1yk2we)
        (i/o-error? . g$7213$1yk2we)
        (i/o-error-port . g$7348$1yk2we)
        (i/o-error-filename . g$7275$1yk2we)
        (i/o-encoding-error? . g$7378$1yk2we)
        (i/o-encoding-error-char . g$7379$1yk2we)
        (i/o-decoding-error? . g$7362$1yk2we)
        (get-u8 . g$12269$1yk2we)
        (get-string-n! . g$12268$1yk2we)
        (get-string-n . g$12267$1yk2we)
        (get-string-all . g$12266$1yk2we)
        (get-line . g$12265$1yk2we)
        (get-datum . g$12264$1yk2we)
        (get-char . g$12263$1yk2we)
        (get-bytevector-some . g$12262$1yk2we)
        (get-bytevector-n! . g$12261$1yk2we)
        (get-bytevector-n . g$12260$1yk2we)
        (get-bytevector-all . g$12259$1yk2we)
        (flush-output-port . g$12258$1yk2we)
        (close-port . g$12257$1yk2we)
        (call-with-string-output-port . g$12256$1yk2we)
        (call-with-port . g$12255$1yk2we)
        (call-with-bytevector-output-port . g$12254$1yk2we)
        (bytevector->string . g$12253$1yk2we)
        (buffer-mode? . g$12252$1yk2we)
        (binary-port? . g$12251$1yk2we)
        (&i/o-encoding . g$11954$1yk2we)
        (&i/o-decoding . g$11953$1yk2we)
        (&i/o-port . g$11952$1yk2we)
        (&i/o-file-does-not-exist . g$11951$1yk2we)
        (&i/o-file-already-exists . g$11950$1yk2we)
        (&i/o-file-is-read-only . g$11949$1yk2we)
        (&i/o-file-protection . g$11948$1yk2we)
        (&i/o-filename . g$11947$1yk2we)
        (&i/o-invalid-position . g$11946$1yk2we)
        (&i/o-write . g$11945$1yk2we)
        (&i/o-read . g$11944$1yk2we)
        (&i/o . g$11943$1yk2we)
        (error-handling-mode . g$11915$1yk2we)
        (file-options . g$11914$1yk2we)
        (buffer-mode . g$11913$1yk2we)
        (eol-style . g$11912$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12504$1yk2we
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7466$1yk2we)
        (enum-set=? . g$7473$1yk2we)
        (enum-set-universe . g$7467$1yk2we)
        (enum-set-union . g$7474$1yk2we)
        (enum-set-subset? . g$7472$1yk2we)
        (enum-set-projection . g$7478$1yk2we)
        (enum-set-member? . g$7471$1yk2we)
        (enum-set-intersection . g$7475$1yk2we)
        (enum-set-indexer . g$7468$1yk2we)
        (enum-set-difference . g$7476$1yk2we)
        (enum-set-constructor . g$7469$1yk2we)
        (enum-set-complement . g$7477$1yk2we)
        (enum-set->list . g$7470$1yk2we)
        (define-enumeration . g$11926$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12505$1yk2we
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6757$1yk2we)
        (warning? . g$6668$1yk2we)
        (violation? . g$6710$1yk2we)
        (undefined-violation? . g$6834$1yk2we)
        (syntax-violation? . g$6818$1yk2we)
        (syntax-violation-subform . g$6820$1yk2we)
        (syntax-violation-form . g$6819$1yk2we)
        (syntax-violation . g$8865$1yk2we)
        (simple-conditions . g$12237$1yk2we)
        (serious-condition? . g$6682$1yk2we)
        (non-continuable-violation? . g$6772$1yk2we)
        (message-condition? . g$6653$1yk2we)
        (make-who-condition . g$6755$1yk2we)
        (make-warning . g$6667$1yk2we)
        (make-violation . g$6709$1yk2we)
        (make-undefined-violation . g$6833$1yk2we)
        (make-syntax-violation . g$6815$1yk2we)
        (make-serious-condition . g$6681$1yk2we)
        (make-non-continuable-violation . g$6771$1yk2we)
        (make-message-condition . g$6651$1yk2we)
        (make-lexical-violation . g$6799$1yk2we)
        (make-irritants-condition . g$6738$1yk2we)
        (make-implementation-restriction-violation . g$6785$1yk2we)
        (make-error . g$6695$1yk2we)
        (make-assertion-violation . g$6723$1yk2we)
        (lexical-violation? . g$6800$1yk2we)
        (irritants-condition? . g$6740$1yk2we)
        (implementation-restriction-violation? . g$6786$1yk2we)
        (error? . g$6696$1yk2we)
        (condition-who . g$6758$1yk2we)
        (condition-predicate . g$12236$1yk2we)
        (condition-message . g$6654$1yk2we)
        (condition-irritants . g$6741$1yk2we)
        (condition-accessor . g$12235$1yk2we)
        (condition . g$12234$1yk2we)
        (assertion-violation? . g$6724$1yk2we)
        (condition? . g$12233$1yk2we)
        (&non-continuable . g$11942$1yk2we)
        (&undefined . g$11941$1yk2we)
        (&syntax . g$11940$1yk2we)
        (&lexical . g$11939$1yk2we)
        (&implementation-restriction . g$11938$1yk2we)
        (&who . g$11936$1yk2we)
        (&irritants . g$11935$1yk2we)
        (&assertion . g$11934$1yk2we)
        (&violation . g$11933$1yk2we)
        (&error . g$11932$1yk2we)
        (&serious . g$11931$1yk2we)
        (&warning . g$11930$1yk2we)
        (&message . g$11929$1yk2we)
        (&condition . g$11928$1yk2we)
        (define-condition-type . g$11927$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12506$1yk2we
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12353$1yk2we)
        (record-type-uid . g$12352$1yk2we)
        (record-type-sealed? . g$12351$1yk2we)
        (record-type-parent . g$12350$1yk2we)
        (record-type-opaque? . g$12349$1yk2we)
        (record-type-name . g$12348$1yk2we)
        (record-type-generative? . g$12347$1yk2we)
        (record-type-field-names . g$12346$1yk2we)
        (record-rtd . g$12345$1yk2we)
        (record-field-mutable? . g$12344$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12507$1yk2we
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12360$1yk2we)
        (record-predicate . g$12359$1yk2we)
        (record-mutator . g$12358$1yk2we)
        (record-constructor . g$12357$1yk2we)
        (record-accessor . g$12356$1yk2we)
        (make-record-type-descriptor . g$12355$1yk2we)
        (make-record-constructor-descriptor . g$12354$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12508$1yk2we
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11925$1yk2we)
        (parent-rtd . g$11924$1yk2we)
        (nongenerative . g$11923$1yk2we)
        (opaque . g$11922$1yk2we)
        (sealed . g$11921$1yk2we)
        (protocol . g$11920$1yk2we)
        (parent . g$11919$1yk2we)
        (immutable . g$11918$1yk2we)
        (mutable . g$11917$1yk2we)
        (fields . g$11916$1yk2we)
        (record-constructor-descriptor . g$11877$1yk2we)
        (record-type-descriptor . g$11876$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7135$1yk2we
      'g$12509$1yk2we
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8738$1yk2we)
        (&no-nans-rcd . g$12473$1yk2we)
        (&no-nans-rtd . g$12472$1yk2we)
        (&no-infinities-rcd . g$12471$1yk2we)
        (&no-infinities-rtd . g$12470$1yk2we)
        (&i/o-encoding-rcd . g$12469$1yk2we)
        (&i/o-encoding-rtd . g$12468$1yk2we)
        (&i/o-decoding-rcd . g$12467$1yk2we)
        (&i/o-decoding-rtd . g$12466$1yk2we)
        (&i/o-port-rcd . g$12465$1yk2we)
        (&i/o-port-rtd . g$12464$1yk2we)
        (&i/o-file-does-not-exist-rcd . g$12463$1yk2we)
        (&i/o-file-does-not-exist-rtd . g$12462$1yk2we)
        (&i/o-file-already-exists-rcd . g$12461$1yk2we)
        (&i/o-file-already-exists-rtd . g$12460$1yk2we)
        (&i/o-file-is-read-only-rcd . g$12459$1yk2we)
        (&i/o-file-is-read-only-rtd . g$12458$1yk2we)
        (&i/o-file-protection-rcd . g$12457$1yk2we)
        (&i/o-file-protection-rtd . g$12456$1yk2we)
        (&i/o-filename-rcd . g$12455$1yk2we)
        (&i/o-filename-rtd . g$12454$1yk2we)
        (&i/o-invalid-position-rcd . g$12453$1yk2we)
        (&i/o-invalid-position-rtd . g$12452$1yk2we)
        (&i/o-write-rcd . g$12451$1yk2we)
        (&i/o-write-rtd . g$12450$1yk2we)
        (&i/o-read-rcd . g$12449$1yk2we)
        (&i/o-read-rtd . g$12448$1yk2we)
        (&i/o-rcd . g$12447$1yk2we)
        (&i/o-rtd . g$12446$1yk2we)
        (&undefined-rcd . g$12445$1yk2we)
        (&undefined-rtd . g$12444$1yk2we)
        (&syntax-rcd . g$12443$1yk2we)
        (&syntax-rtd . g$12442$1yk2we)
        (&lexical-rcd . g$12441$1yk2we)
        (&lexical-rtd . g$12440$1yk2we)
        (&implementation-restriction-rcd . g$12439$1yk2we)
        (&implementation-restriction-rtd . g$12438$1yk2we)
        (&non-continuable-rcd . g$12437$1yk2we)
        (&non-continuable-rtd . g$12436$1yk2we)
        (&who-rcd . g$12435$1yk2we)
        (&who-rtd . g$12434$1yk2we)
        (&irritants-rcd . g$12433$1yk2we)
        (&irritants-rtd . g$12432$1yk2we)
        (&assertion-rcd . g$12431$1yk2we)
        (&assertion-rtd . g$12430$1yk2we)
        (&violation-rcd . g$12429$1yk2we)
        (&violation-rtd . g$12428$1yk2we)
        (&error-rcd . g$12427$1yk2we)
        (&error-rtd . g$12426$1yk2we)
        (&serious-rcd . g$12425$1yk2we)
        (&serious-rtd . g$12424$1yk2we)
        (&warning-rcd . g$12423$1yk2we)
        (&warning-rtd . g$12422$1yk2we)
        (&message-rcd . g$12421$1yk2we)
        (&message-rtd . g$12420$1yk2we)
        (&condition-rcd . g$12419$1yk2we)
        (&condition-rtd . g$12418$1yk2we)
        (library-letrec* . g$12417$1yk2we)
        (annotation-stripped . g$12416$1yk2we)
        (annotation-source . g$12415$1yk2we)
        (annotation-expression . g$12414$1yk2we)
        (annotation? . g$12413$1yk2we)
        (read-annotated . g$12412$1yk2we)
        (tanh . g$12411$1yk2we)
        (cosh . g$12410$1yk2we)
        (sinh . g$12409$1yk2we)
        (make-guid . g$12408$1yk2we)
        (unspecified? . g$12407$1yk2we)
        (make-trace . g$12406$1yk2we)
        (make-list . g$12405$1yk2we)
        (last-pair . g$12404$1yk2we)
        (load-r5rs . g$12403$1yk2we)
        (license . g$12402$1yk2we)
        (stacktrace . g$12401$1yk2we)
        (ironscheme-build . g$11820$1yk2we)
        (define-clr-class-internal . g$12400$1yk2we)
        (clr-field-set!-internal . g$12399$1yk2we)
        (clr-field-get-internal . g$12398$1yk2we)
        (clr-cast-internal . g$12397$1yk2we)
        (clr-call-internal . g$12396$1yk2we)
        (clr-new-internal . g$12395$1yk2we)
        (clr-new-array-internal . g$12394$1yk2we)
        (clr-is-internal . g$12393$1yk2we)
        (clr-reference-internal . g$12392$1yk2we)
        (clr-using-internal . g$12391$1yk2we)
        (clr-clear-usings-internal . g$12390$1yk2we)
        (syntax-error . g$8862$1yk2we)
        (syntax-dispatch . g$8733$1yk2we)
        (compile-core . g$12389$1yk2we)
        (eval-core . g$12388$1yk2we)
        (set-symbol-value! . g$12387$1yk2we)
        (symbol-value . g$12386$1yk2we)
        (ungensym . g$12385$1yk2we)
        (gensym . g$12384$1yk2we)
        (void . g$12383$1yk2we)
        (load-serialized-library . g$12382$1yk2we)
        (serialize-library . g$12381$1yk2we)
        (compile-system-libraries . g$11822$1yk2we)
        (compile->closure . g$11824$1yk2we)
        (compile . g$11823$1yk2we)
        (load . g$11819$1yk2we)
        (interaction-environment . g$8871$1yk2we)
        (char-ready? . g$12380$1yk2we)
        (string-upcase . g$12379$1yk2we)
        (string-titlecase . g$12378$1yk2we)
        (string-normalize-nfkd . g$12377$1yk2we)
        (string-normalize-nfkc . g$12376$1yk2we)
        (string-normalize-nfd . g$12375$1yk2we)
        (string-normalize-nfc . g$12374$1yk2we)
        (string-foldcase . g$12373$1yk2we)
        (string-downcase . g$12372$1yk2we)
        (string-ci>? . g$6980$1yk2we)
        (string-ci>=? . g$6982$1yk2we)
        (string-ci=? . g$6978$1yk2we)
        (string-ci<? . g$6979$1yk2we)
        (string-ci<=? . g$6981$1yk2we)
        (char-whitespace? . g$12371$1yk2we)
        (char-upper-case? . g$12370$1yk2we)
        (char-title-case? . g$12369$1yk2we)
        (char-numeric? . g$12368$1yk2we)
        (char-lower-case? . g$12367$1yk2we)
        (char-general-category . g$12366$1yk2we)
        (char-upcase . g$12365$1yk2we)
        (char-titlecase . g$12364$1yk2we)
        (char-foldcase . g$12363$1yk2we)
        (char-downcase . g$12362$1yk2we)
        (char-ci>? . g$7019$1yk2we)
        (char-ci>=? . g$7021$1yk2we)
        (char-ci=? . g$7017$1yk2we)
        (char-ci<? . g$7018$1yk2we)
        (char-ci<=? . g$7020$1yk2we)
        (char-alphabetic? . g$12361$1yk2we)
        (variable-transformer-procedure . g$8470$1yk2we)
        (variable-transformer? . g$8469$1yk2we)
        (make-variable-transformer . g$8468$1yk2we)
        (identifier? . g$8866$1yk2we)
        (generate-temporaries . g$8855$1yk2we)
        (free-identifier=? . g$8856$1yk2we)
        (syntax->datum . g$8868$1yk2we)
        (datum->syntax . g$8867$1yk2we)
        (bound-identifier=? . g$8857$1yk2we)
        (record-type-descriptor? . g$12360$1yk2we)
        (record-predicate . g$12359$1yk2we)
        (record-mutator . g$12358$1yk2we)
        (record-constructor . g$12357$1yk2we)
        (record-accessor . g$12356$1yk2we)
        (make-record-type-descriptor . g$12355$1yk2we)
        (make-record-constructor-descriptor . g$12354$1yk2we)
        (record? . g$12353$1yk2we)
        (record-type-uid . g$12352$1yk2we)
        (record-type-sealed? . g$12351$1yk2we)
        (record-type-parent . g$12350$1yk2we)
        (record-type-opaque? . g$12349$1yk2we)
        (record-type-name . g$12348$1yk2we)
        (record-type-generative? . g$12347$1yk2we)
        (record-type-field-names . g$12346$1yk2we)
        (record-rtd . g$12345$1yk2we)
        (record-field-mutable? . g$12344$1yk2we)
        (delete-file . g$6353$1yk2we)
        (file-exists? . g$6352$1yk2we)
        (vector-sort! . g$12343$1yk2we)
        (vector-sort . g$12342$1yk2we)
        (list-sort . g$6866$1yk2we)
        (symbol-hash . g$12341$1yk2we)
        (string-ci-hash . g$12340$1yk2we)
        (string-hash . g$12339$1yk2we)
        (equal-hash . g$12338$1yk2we)
        (hashtable-equivalence-function . g$12337$1yk2we)
        (make-hashtable . g$12336$1yk2we)
        (hashtable-hash-function . g$12335$1yk2we)
        (make-eqv-hashtable . g$6320$1yk2we)
        (make-eq-hashtable . g$6319$1yk2we)
        (hashtable? . g$12334$1yk2we)
        (hashtable-update! . g$6326$1yk2we)
        (hashtable-size . g$6321$1yk2we)
        (hashtable-set! . g$6323$1yk2we)
        (hashtable-ref . g$6322$1yk2we)
        (hashtable-mutable? . g$12333$1yk2we)
        (hashtable-keys . g$12332$1yk2we)
        (hashtable-entries . g$12331$1yk2we)
        (hashtable-delete! . g$6324$1yk2we)
        (hashtable-copy . g$12330$1yk2we)
        (hashtable-contains? . g$6325$1yk2we)
        (hashtable-clear! . g$6327$1yk2we)
        (call-with-output-file . g$7408$1yk2we)
        (call-with-input-file . g$7407$1yk2we)
        (write-char . g$12329$1yk2we)
        (write . g$12328$1yk2we)
        (with-output-to-file . g$7406$1yk2we)
        (with-input-from-file . g$7405$1yk2we)
        (read-char . g$12327$1yk2we)
        (read . g$12326$1yk2we)
        (peek-char . g$12325$1yk2we)
        (open-output-file . g$12324$1yk2we)
        (open-input-file . g$12323$1yk2we)
        (newline . g$12322$1yk2we)
        (display . g$12321$1yk2we)
        (close-output-port . g$12320$1yk2we)
        (close-input-port . g$12319$1yk2we)
        (eof-object? . g$12318$1yk2we)
        (eof-object . g$12317$1yk2we)
        (current-error-port . g$12316$1yk2we)
        (current-output-port . g$12315$1yk2we)
        (current-input-port . g$12314$1yk2we)
        (output-port? . g$12313$1yk2we)
        (input-port? . g$12312$1yk2we)
        (utf-8-codec . g$12311$1yk2we)
        (utf-16-codec . g$12310$1yk2we)
        (transcoder-error-handling-mode . g$12309$1yk2we)
        (transcoder-eol-style . g$12308$1yk2we)
        (transcoder-codec . g$12307$1yk2we)
        (transcoded-port . g$12306$1yk2we)
        (textual-port? . g$12305$1yk2we)
        (string->bytevector . g$12304$1yk2we)
        (standard-output-port . g$12303$1yk2we)
        (standard-input-port . g$12302$1yk2we)
        (standard-error-port . g$12301$1yk2we)
        (set-port-position! . g$12300$1yk2we)
        (put-u8 . g$12299$1yk2we)
        (put-string . g$12298$1yk2we)
        (put-datum . g$12297$1yk2we)
        (put-char . g$12296$1yk2we)
        (put-bytevector . g$12295$1yk2we)
        (port? . g$7384$1yk2we)
        (port-transcoder . g$12294$1yk2we)
        (port-position . g$12293$1yk2we)
        (port-has-set-port-position!? . g$12292$1yk2we)
        (port-has-port-position? . g$12291$1yk2we)
        (port-eof? . g$12290$1yk2we)
        (output-port-buffer-mode . g$12289$1yk2we)
        (open-string-output-port . g$7383$1yk2we)
        (open-string-input-port . g$12288$1yk2we)
        (open-file-output-port . g$12287$1yk2we)
        (open-file-input/output-port . g$12286$1yk2we)
        (open-file-input-port . g$12285$1yk2we)
        (open-bytevector-output-port . g$12284$1yk2we)
        (open-bytevector-input-port . g$12283$1yk2we)
        (native-transcoder . g$12282$1yk2we)
        (native-eol-style . g$12281$1yk2we)
        (make-transcoder . g$12280$1yk2we)
        (latin-1-codec . g$12279$1yk2we)
        (make-i/o-write-error . g$7240$1yk2we)
        (make-i/o-read-error . g$7226$1yk2we)
        (make-i/o-port-error . g$7345$1yk2we)
        (make-i/o-invalid-position-error . g$7255$1yk2we)
        (make-i/o-filename-error . g$7272$1yk2we)
        (make-i/o-file-protection-error . g$7288$1yk2we)
        (make-i/o-file-is-read-only-error . g$7302$1yk2we)
        (make-i/o-file-does-not-exist-error . g$7330$1yk2we)
        (make-i/o-file-already-exists-error . g$7316$1yk2we)
        (make-i/o-error . g$7212$1yk2we)
        (make-i/o-encoding-error . g$7376$1yk2we)
        (make-i/o-decoding-error . g$7361$1yk2we)
        (make-custom-textual-output-port . g$12278$1yk2we)
        (make-custom-textual-input/output-port . g$12277$1yk2we)
        (make-custom-textual-input-port . g$12276$1yk2we)
        (make-custom-binary-output-port . g$12275$1yk2we)
        (make-custom-binary-input/output-port . g$12274$1yk2we)
        (make-custom-binary-input-port . g$12273$1yk2we)
        (make-bytevector . g$12272$1yk2we)
        (lookahead-u8 . g$12271$1yk2we)
        (lookahead-char . g$12270$1yk2we)
        (i/o-write-error? . g$7241$1yk2we)
        (i/o-read-error? . g$7227$1yk2we)
        (i/o-port-error? . g$7347$1yk2we)
        (i/o-invalid-position-error? . g$7257$1yk2we)
        (i/o-error-position . g$7258$1yk2we)
        (i/o-filename-error? . g$7274$1yk2we)
        (i/o-file-protection-error? . g$7289$1yk2we)
        (i/o-file-is-read-only-error? . g$7303$1yk2we)
        (i/o-file-does-not-exist-error? . g$7331$1yk2we)
        (i/o-file-already-exists-error? . g$7317$1yk2we)
        (i/o-error? . g$7213$1yk2we)
        (i/o-error-port . g$7348$1yk2we)
        (i/o-error-filename . g$7275$1yk2we)
        (i/o-encoding-error? . g$7378$1yk2we)
        (i/o-encoding-error-char . g$7379$1yk2we)
        (i/o-decoding-error? . g$7362$1yk2we)
        (get-u8 . g$12269$1yk2we)
        (get-string-n! . g$12268$1yk2we)
        (get-string-n . g$12267$1yk2we)
        (get-string-all . g$12266$1yk2we)
        (get-line . g$12265$1yk2we)
        (get-datum . g$12264$1yk2we)
        (get-char . g$12263$1yk2we)
        (get-bytevector-some . g$12262$1yk2we)
        (get-bytevector-n! . g$12261$1yk2we)
        (get-bytevector-n . g$12260$1yk2we)
        (get-bytevector-all . g$12259$1yk2we)
        (flush-output-port . g$12258$1yk2we)
        (close-port . g$12257$1yk2we)
        (call-with-string-output-port . g$12256$1yk2we)
        (call-with-port . g$12255$1yk2we)
        (call-with-bytevector-output-port . g$12254$1yk2we)
        (bytevector->string . g$12253$1yk2we)
        (buffer-mode? . g$12252$1yk2we)
        (binary-port? . g$12251$1yk2we)
        (scheme-report-environment . g$8846$1yk2we)
        (quotient . g$6846$1yk2we)
        (null-environment . g$8845$1yk2we)
        (remainder . g$6847$1yk2we)
        (modulo . g$6848$1yk2we)
        (inexact->exact . g$12250$1yk2we)
        (force . g$6850$1yk2we)
        (exact->inexact . g$12249$1yk2we)
        (exit . g$12248$1yk2we)
        (command-line . g$11816$1yk2we)
        (string-fill! . g$12247$1yk2we)
        (string-set! . g$12246$1yk2we)
        (set-cdr! . g$12245$1yk2we)
        (set-car! . g$12244$1yk2we)
        (remove . g$6433$1yk2we)
        (remv . g$6434$1yk2we)
        (remp . g$6419$1yk2we)
        (remq . g$6435$1yk2we)
        (partition . g$6418$1yk2we)
        (memv . g$12243$1yk2we)
        (memq . g$12242$1yk2we)
        (memp . g$6425$1yk2we)
        (member . g$6424$1yk2we)
        (exists . g$6429$1yk2we)
        (for-all . g$6428$1yk2we)
        (fold-right . g$6432$1yk2we)
        (fold-left . g$6431$1yk2we)
        (find . g$6417$1yk2we)
        (filter . g$6420$1yk2we)
        (cons* . g$6430$1yk2we)
        (assv . g$6421$1yk2we)
        (assq . g$12241$1yk2we)
        (assp . g$6423$1yk2we)
        (assoc . g$6422$1yk2we)
        (with-exception-handler . g$12240$1yk2we)
        (raise-continuable . g$12239$1yk2we)
        (raise . g$12238$1yk2we)
        (eval . g$8848$1yk2we)
        (environment . g$8844$1yk2we)
        (make-enumeration . g$7466$1yk2we)
        (enum-set=? . g$7473$1yk2we)
        (enum-set-universe . g$7467$1yk2we)
        (enum-set-union . g$7474$1yk2we)
        (enum-set-subset? . g$7472$1yk2we)
        (enum-set-projection . g$7478$1yk2we)
        (enum-set-member? . g$7471$1yk2we)
        (enum-set-intersection . g$7475$1yk2we)
        (enum-set-indexer . g$7468$1yk2we)
        (enum-set-difference . g$7476$1yk2we)
        (enum-set-constructor . g$7469$1yk2we)
        (enum-set-complement . g$7477$1yk2we)
        (enum-set->list . g$7470$1yk2we)
        (who-condition? . g$6757$1yk2we)
        (warning? . g$6668$1yk2we)
        (violation? . g$6710$1yk2we)
        (undefined-violation? . g$6834$1yk2we)
        (syntax-violation? . g$6818$1yk2we)
        (syntax-violation-subform . g$6820$1yk2we)
        (syntax-violation-form . g$6819$1yk2we)
        (syntax-violation . g$8865$1yk2we)
        (simple-conditions . g$12237$1yk2we)
        (serious-condition? . g$6682$1yk2we)
        (non-continuable-violation? . g$6772$1yk2we)
        (message-condition? . g$6653$1yk2we)
        (make-who-condition . g$6755$1yk2we)
        (make-warning . g$6667$1yk2we)
        (make-violation . g$6709$1yk2we)
        (make-undefined-violation . g$6833$1yk2we)
        (make-syntax-violation . g$6815$1yk2we)
        (make-serious-condition . g$6681$1yk2we)
        (make-non-continuable-violation . g$6771$1yk2we)
        (make-message-condition . g$6651$1yk2we)
        (make-lexical-violation . g$6799$1yk2we)
        (make-irritants-condition . g$6738$1yk2we)
        (make-implementation-restriction-violation . g$6785$1yk2we)
        (make-error . g$6695$1yk2we)
        (make-assertion-violation . g$6723$1yk2we)
        (lexical-violation? . g$6800$1yk2we)
        (irritants-condition? . g$6740$1yk2we)
        (implementation-restriction-violation? . g$6786$1yk2we)
        (error? . g$6696$1yk2we)
        (condition-who . g$6758$1yk2we)
        (condition-predicate . g$12236$1yk2we)
        (condition-message . g$6654$1yk2we)
        (condition-irritants . g$6741$1yk2we)
        (condition-accessor . g$12235$1yk2we)
        (condition . g$12234$1yk2we)
        (assertion-violation? . g$6724$1yk2we)
        (condition? . g$12233$1yk2we)
        (utf32->string . g$12232$1yk2we)
        (utf16->string . g$12231$1yk2we)
        (utf8->string . g$12230$1yk2we)
        (uint-list->bytevector . g$12229$1yk2we)
        (u8-list->bytevector . g$12228$1yk2we)
        (string->utf8 . g$12227$1yk2we)
        (string->utf32 . g$12226$1yk2we)
        (string->utf16 . g$12225$1yk2we)
        (sint-list->bytevector . g$12224$1yk2we)
        (native-endianness . g$6509$1yk2we)
        (bytevector? . g$12223$1yk2we)
        (bytevector=? . g$12222$1yk2we)
        (bytevector-uint-set! . g$12221$1yk2we)
        (bytevector-uint-ref . g$12220$1yk2we)
        (bytevector-u8-set! . g$12219$1yk2we)
        (bytevector-u8-ref . g$12218$1yk2we)
        (bytevector-u64-set! . g$6530$1yk2we)
        (bytevector-u64-ref . g$6526$1yk2we)
        (bytevector-u64-native-set! . g$6532$1yk2we)
        (bytevector-u64-native-ref . g$6528$1yk2we)
        (bytevector-u32-set! . g$6522$1yk2we)
        (bytevector-u32-ref . g$6518$1yk2we)
        (bytevector-u32-native-set! . g$6524$1yk2we)
        (bytevector-u32-native-ref . g$6520$1yk2we)
        (bytevector-u16-set! . g$6514$1yk2we)
        (bytevector-u16-ref . g$6510$1yk2we)
        (bytevector-u16-native-set! . g$6516$1yk2we)
        (bytevector-u16-native-ref . g$6512$1yk2we)
        (bytevector-sint-set! . g$12217$1yk2we)
        (bytevector-sint-ref . g$12216$1yk2we)
        (bytevector-s8-set! . g$12215$1yk2we)
        (bytevector-s8-ref . g$12214$1yk2we)
        (bytevector-s64-set! . g$6531$1yk2we)
        (bytevector-s64-ref . g$6527$1yk2we)
        (bytevector-s64-native-set! . g$6533$1yk2we)
        (bytevector-s64-native-ref . g$6529$1yk2we)
        (bytevector-s32-set! . g$6523$1yk2we)
        (bytevector-s32-ref . g$6519$1yk2we)
        (bytevector-s32-native-set! . g$6525$1yk2we)
        (bytevector-s32-native-ref . g$6521$1yk2we)
        (bytevector-s16-set! . g$6515$1yk2we)
        (bytevector-s16-ref . g$6511$1yk2we)
        (bytevector-s16-native-set! . g$6517$1yk2we)
        (bytevector-s16-native-ref . g$6513$1yk2we)
        (bytevector-length . g$12213$1yk2we)
        (bytevector-ieee-single-set! . g$12212$1yk2we)
        (bytevector-ieee-single-ref . g$12211$1yk2we)
        (bytevector-ieee-single-native-set! . g$6536$1yk2we)
        (bytevector-ieee-single-native-ref . g$6534$1yk2we)
        (bytevector-ieee-double-set! . g$12210$1yk2we)
        (bytevector-ieee-double-ref . g$12209$1yk2we)
        (bytevector-ieee-double-native-set! . g$6537$1yk2we)
        (bytevector-ieee-double-native-ref . g$6535$1yk2we)
        (bytevector-fill! . g$12208$1yk2we)
        (bytevector-copy! . g$12207$1yk2we)
        (bytevector-copy . g$12206$1yk2we)
        (bytevector->uint-list . g$12205$1yk2we)
        (bytevector->u8-list . g$12204$1yk2we)
        (bytevector->sint-list . g$12203$1yk2we)
        (no-nans-violation? . g$7198$1yk2we)
        (no-infinities-violation? . g$7184$1yk2we)
        (make-no-nans-violation . g$7197$1yk2we)
        (make-no-infinities-violation . g$7183$1yk2we)
        (real->flonum . g$12202$1yk2we)
        (flzero? . g$12201$1yk2we)
        (fltruncate . g$12200$1yk2we)
        (fltan . g$12199$1yk2we)
        (flsqrt . g$12198$1yk2we)
        (flsin . g$12197$1yk2we)
        (flround . g$12196$1yk2we)
        (flpositive? . g$12195$1yk2we)
        (flonum? . g$12194$1yk2we)
        (flodd? . g$12193$1yk2we)
        (flnumerator . g$12192$1yk2we)
        (flnegative? . g$12191$1yk2we)
        (flnan? . g$12190$1yk2we)
        (flmod0 . g$12189$1yk2we)
        (flmod . g$12188$1yk2we)
        (flmin . g$12187$1yk2we)
        (flmax . g$12186$1yk2we)
        (fllog . g$12185$1yk2we)
        (flinteger? . g$12184$1yk2we)
        (flinfinite? . g$12183$1yk2we)
        (flfloor . g$12182$1yk2we)
        (flfinite? . g$12181$1yk2we)
        (flexpt . g$12180$1yk2we)
        (flexp . g$12179$1yk2we)
        (fleven? . g$12178$1yk2we)
        (fldiv0-and-mod0 . g$12177$1yk2we)
        (fldiv0 . g$12176$1yk2we)
        (fldiv-and-mod . g$12175$1yk2we)
        (fldiv . g$12174$1yk2we)
        (fldenominator . g$12173$1yk2we)
        (flcos . g$12172$1yk2we)
        (flceiling . g$12171$1yk2we)
        (flatan . g$12170$1yk2we)
        (flasin . g$12169$1yk2we)
        (flacos . g$12168$1yk2we)
        (flabs . g$12167$1yk2we)
        (fl>? . g$12166$1yk2we)
        (fl>=? . g$12165$1yk2we)
        (fl=? . g$12164$1yk2we)
        (fl<? . g$12163$1yk2we)
        (fl<=? . g$12162$1yk2we)
        (fl/ . g$12161$1yk2we)
        (fl- . g$12160$1yk2we)
        (fl+ . g$12159$1yk2we)
        (fl* . g$12158$1yk2we)
        (fixnum->flonum . g$12157$1yk2we)
        (fxzero? . g$12156$1yk2we)
        (fxxor . g$12155$1yk2we)
        (fxrotate-bit-field . g$7129$1yk2we)
        (fxreverse-bit-field . g$12154$1yk2we)
        (fxpositive? . g$12153$1yk2we)
        (fxodd? . g$12152$1yk2we)
        (fxnot . g$12151$1yk2we)
        (fxnegative? . g$12150$1yk2we)
        (fxmod0 . g$12149$1yk2we)
        (fxmod . g$12148$1yk2we)
        (fxmin . g$12147$1yk2we)
        (fxmax . g$12146$1yk2we)
        (fxlength . g$12145$1yk2we)
        (fxior . g$12144$1yk2we)
        (fxif . g$7123$1yk2we)
        (fxfirst-bit-set . g$12143$1yk2we)
        (fxeven? . g$12142$1yk2we)
        (fxdiv0-and-mod0 . g$12141$1yk2we)
        (fxdiv0 . g$12140$1yk2we)
        (fxdiv-and-mod . g$12139$1yk2we)
        (fxdiv . g$12138$1yk2we)
        (fxcopy-bit-field . g$7126$1yk2we)
        (fxcopy-bit . g$7124$1yk2we)
        (fxbit-set? . g$12137$1yk2we)
        (fxbit-field . g$7125$1yk2we)
        (fxbit-count . g$12136$1yk2we)
        (fxarithmetic-shift-right . g$7128$1yk2we)
        (fxarithmetic-shift-left . g$7127$1yk2we)
        (fxarithmetic-shift . g$12135$1yk2we)
        (fxand . g$12134$1yk2we)
        (fx>? . g$12133$1yk2we)
        (fx>=? . g$12132$1yk2we)
        (fx=? . g$12131$1yk2we)
        (fx<? . g$12130$1yk2we)
        (fx<=? . g$12129$1yk2we)
        (fx-/carry . g$12128$1yk2we)
        (fx- . g$12127$1yk2we)
        (fx+/carry . g$12126$1yk2we)
        (fx+ . g$12125$1yk2we)
        (fx*/carry . g$12124$1yk2we)
        (fx* . g$12123$1yk2we)
        (greatest-fixnum . g$12122$1yk2we)
        (least-fixnum . g$12121$1yk2we)
        (fixnum-width . g$12120$1yk2we)
        (fixnum? . g$12119$1yk2we)
        (bitwise-rotate-bit-field . g$7081$1yk2we)
        (bitwise-reverse-bit-field . g$12118$1yk2we)
        (bitwise-length . g$12117$1yk2we)
        (bitwise-if . g$7075$1yk2we)
        (bitwise-first-bit-set . g$12116$1yk2we)
        (bitwise-copy-bit-field . g$7078$1yk2we)
        (bitwise-copy-bit . g$7076$1yk2we)
        (bitwise-bit-set? . g$12115$1yk2we)
        (bitwise-bit-field . g$12114$1yk2we)
        (bitwise-bit-count . g$12113$1yk2we)
        (bitwise-xor . g$12112$1yk2we)
        (bitwise-ior . g$12111$1yk2we)
        (bitwise-and . g$12110$1yk2we)
        (bitwise-not . g$12109$1yk2we)
        (bitwise-arithmetic-shift-right . g$7080$1yk2we)
        (bitwise-arithmetic-shift-left . g$7079$1yk2we)
        (bitwise-arithmetic-shift . g$12108$1yk2we)
        (zero? . g$12107$1yk2we)
        (vector? . g$12106$1yk2we)
        (vector-set! . g$12105$1yk2we)
        (vector-ref . g$12104$1yk2we)
        (vector-map . g$12103$1yk2we)
        (vector-length . g$12102$1yk2we)
        (vector-for-each . g$12101$1yk2we)
        (vector-fill! . g$12100$1yk2we)
        (vector->list . g$12099$1yk2we)
        (vector . g$12098$1yk2we)
        (values . g$12097$1yk2we)
        (truncate . g$12096$1yk2we)
        (tan . g$12095$1yk2we)
        (symbol? . g$12094$1yk2we)
        (symbol=? . g$5868$1yk2we)
        (symbol->string . g$12093$1yk2we)
        (substring . g$12092$1yk2we)
        (string? . g$12091$1yk2we)
        (string>? . g$5865$1yk2we)
        (string>=? . g$5867$1yk2we)
        (string=? . g$5863$1yk2we)
        (string<? . g$5864$1yk2we)
        (string<=? . g$5866$1yk2we)
        (string-ref . g$12090$1yk2we)
        (string-length . g$12089$1yk2we)
        (string-for-each . g$12088$1yk2we)
        (string-copy . g$12087$1yk2we)
        (string-append . g$12086$1yk2we)
        (string->symbol . g$12085$1yk2we)
        (string->number . g$12084$1yk2we)
        (string->list . g$12083$1yk2we)
        (string . g$12082$1yk2we)
        (sqrt . g$12081$1yk2we)
        (sin . g$12080$1yk2we)
        (round . g$12079$1yk2we)
        (reverse . g$12078$1yk2we)
        (real? . g$12077$1yk2we)
        (real-valued? . g$12076$1yk2we)
        (real-part . g$12075$1yk2we)
        (rationalize . g$5909$1yk2we)
        (rational? . g$12074$1yk2we)
        (rational-valued? . g$12073$1yk2we)
        (procedure? . g$12072$1yk2we)
        (positive? . g$12071$1yk2we)
        (pair? . g$12070$1yk2we)
        (odd? . g$12069$1yk2we)
        (numerator . g$12068$1yk2we)
        (number? . g$12067$1yk2we)
        (number->string . g$12066$1yk2we)
        (null? . g$12065$1yk2we)
        (not . g$12064$1yk2we)
        (negative? . g$12063$1yk2we)
        (nan? . g$12062$1yk2we)
        (min . g$12061$1yk2we)
        (max . g$12060$1yk2we)
        (map . g$12059$1yk2we)
        (make-vector . g$12058$1yk2we)
        (make-string . g$12057$1yk2we)
        (make-rectangular . g$12056$1yk2we)
        (make-polar . g$12055$1yk2we)
        (magnitude . g$12054$1yk2we)
        (log . g$12053$1yk2we)
        (list? . g$12052$1yk2we)
        (list-tail . g$12051$1yk2we)
        (list-ref . g$12050$1yk2we)
        (list->vector . g$12049$1yk2we)
        (list->string . g$12048$1yk2we)
        (list . g$12047$1yk2we)
        (length . g$12046$1yk2we)
        (lcm . g$12045$1yk2we)
        (integer? . g$12044$1yk2we)
        (integer-valued? . g$12043$1yk2we)
        (integer->char . g$12042$1yk2we)
        (infinite? . g$12041$1yk2we)
        (inexact? . g$12040$1yk2we)
        (inexact . g$12039$1yk2we)
        (imag-part . g$12038$1yk2we)
        (gcd . g$12037$1yk2we)
        (for-each . g$12036$1yk2we)
        (floor . g$12035$1yk2we)
        (finite? . g$12034$1yk2we)
        (expt . g$12033$1yk2we)
        (exp . g$12032$1yk2we)
        (exact? . g$12031$1yk2we)
        (exact-integer-sqrt . g$12030$1yk2we)
        (exact . g$12029$1yk2we)
        (even? . g$12028$1yk2we)
        (error . g$12027$1yk2we)
        (eqv? . g$12026$1yk2we)
        (equal? . g$12025$1yk2we)
        (eq? . g$12024$1yk2we)
        (dynamic-wind . g$12023$1yk2we)
        (div0-and-mod0 . g$12022$1yk2we)
        (mod0 . g$12021$1yk2we)
        (div0 . g$12020$1yk2we)
        (div-and-mod . g$12019$1yk2we)
        (mod . g$12018$1yk2we)
        (div . g$12017$1yk2we)
        (denominator . g$12016$1yk2we)
        (cos . g$12015$1yk2we)
        (cons . g$12014$1yk2we)
        (complex? . g$12013$1yk2we)
        (char? . g$12012$1yk2we)
        (char>? . g$5906$1yk2we)
        (char>=? . g$5908$1yk2we)
        (char=? . g$5904$1yk2we)
        (char<? . g$5905$1yk2we)
        (char<=? . g$5907$1yk2we)
        (char->integer . g$12011$1yk2we)
        (ceiling . g$12010$1yk2we)
        (call-with-values . g$12009$1yk2we)
        (call/cc . g$12008$1yk2we)
        (call-with-current-continuation . g$12007$1yk2we)
        (cddddr . g$5828$1yk2we)
        (cdddar . g$5827$1yk2we)
        (cddadr . g$5826$1yk2we)
        (cddaar . g$5825$1yk2we)
        (cdaddr . g$5824$1yk2we)
        (cdadar . g$5823$1yk2we)
        (cdaadr . g$5822$1yk2we)
        (cdaaar . g$5821$1yk2we)
        (cadddr . g$5820$1yk2we)
        (caddar . g$5819$1yk2we)
        (cadadr . g$5818$1yk2we)
        (cadaar . g$5817$1yk2we)
        (caaddr . g$5816$1yk2we)
        (caadar . g$5815$1yk2we)
        (caaadr . g$5814$1yk2we)
        (caaaar . g$5813$1yk2we)
        (cdddr . g$5812$1yk2we)
        (cddar . g$5811$1yk2we)
        (cdadr . g$5810$1yk2we)
        (cdaar . g$5809$1yk2we)
        (caddr . g$5808$1yk2we)
        (cadar . g$5807$1yk2we)
        (caadr . g$5806$1yk2we)
        (caaar . g$5805$1yk2we)
        (cddr . g$5804$1yk2we)
        (cdar . g$5803$1yk2we)
        (cadr . g$5802$1yk2we)
        (caar . g$5801$1yk2we)
        (cdr . g$12006$1yk2we)
        (car . g$12005$1yk2we)
        (boolean? . g$12004$1yk2we)
        (boolean=? . g$5869$1yk2we)
        (atan . g$12003$1yk2we)
        (assertion-violation . g$12002$1yk2we)
        (asin . g$12001$1yk2we)
        (apply . g$12000$1yk2we)
        (append . g$11999$1yk2we)
        (angle . g$11998$1yk2we)
        (acos . g$11997$1yk2we)
        (abs . g$11996$1yk2we)
        (/ . g$11995$1yk2we)
        (* . g$11994$1yk2we)
        (- . g$11993$1yk2we)
        (+ . g$11992$1yk2we)
        (>= . g$11991$1yk2we)
        (> . g$11990$1yk2we)
        (= . g$11989$1yk2we)
        (<= . g$11988$1yk2we)
        (< . g$11987$1yk2we)
        (make-record-printer . g$11986$1yk2we)
        (eqv-hash . g$11985$1yk2we)
        (eq-hash . g$11984$1yk2we)
        (reverse! . g$11983$1yk2we)
        (deserialize-port . g$11982$1yk2we)
        (serialize-port . g$11981$1yk2we)
        (enum-set? . g$7441$1yk2we)
        (make-promise . g$6849$1yk2we)
        (load/args . g$11818$1yk2we)
        (printf . g$7551$1yk2we)
        (fprintf . g$7552$1yk2we)
        (format . g$7553$1yk2we)
        (get-arity . g$11980$1yk2we)
        (gc-collect . g$11979$1yk2we)
        (clr-type? . g$11978$1yk2we)
        (get-clr-type . g$11977$1yk2we)
        (get-command-line . g$11976$1yk2we)
        (vector-append . g$11975$1yk2we)
        (vector-filter . g$11974$1yk2we)
        (vector-reverse! . g$11973$1yk2we)
        (vector-contains? . g$11972$1yk2we)
        (vector-index-of . g$11971$1yk2we)
        (vector-copy . g$11970$1yk2we)
        (vector-binary-search . g$11969$1yk2we)
        (get-output-string . g$11968$1yk2we)
        (open-output-string . g$11967$1yk2we)
        (open-input-string . g$11966$1yk2we)
        (string-ci-compare . g$11965$1yk2we)
        (string-compare . g$11964$1yk2we)
        (string-format . g$11963$1yk2we)
        (trace-printer . g$11815$1yk2we)
        (make-traced-procedure . g$11962$1yk2we)
        (make-traced-macro . g$7573$1yk2we)
        (assertion-error . g$8861$1yk2we)
        (pmap . g$11961$1yk2we)
        (time-it . g$11960$1yk2we)
        (make-parameter . g$7578$1yk2we)
        (library-locator . g$11959$1yk2we)
        (get-library-paths . g$11958$1yk2we)
        (environment-bindings . g$8840$1yk2we)
        (environment-symbols . g$8843$1yk2we)
        (interaction-environment-symbols . g$8839$1yk2we)
        (optimization-level . g$11957$1yk2we)
        (library-path . g$8008$1yk2we)
        (&no-nans . g$11956$1yk2we)
        (&no-infinities . g$11955$1yk2we)
        (&i/o-encoding . g$11954$1yk2we)
        (&i/o-decoding . g$11953$1yk2we)
        (&i/o-port . g$11952$1yk2we)
        (&i/o-file-does-not-exist . g$11951$1yk2we)
        (&i/o-file-already-exists . g$11950$1yk2we)
        (&i/o-file-is-read-only . g$11949$1yk2we)
        (&i/o-file-protection . g$11948$1yk2we)
        (&i/o-filename . g$11947$1yk2we)
        (&i/o-invalid-position . g$11946$1yk2we)
        (&i/o-write . g$11945$1yk2we)
        (&i/o-read . g$11944$1yk2we)
        (&i/o . g$11943$1yk2we)
        (&non-continuable . g$11942$1yk2we)
        (&undefined . g$11941$1yk2we)
        (&syntax . g$11940$1yk2we)
        (&lexical . g$11939$1yk2we)
        (&implementation-restriction . g$11938$1yk2we)
        (&non . g$11937$1yk2we)
        (&who . g$11936$1yk2we)
        (&irritants . g$11935$1yk2we)
        (&assertion . g$11934$1yk2we)
        (&violation . g$11933$1yk2we)
        (&error . g$11932$1yk2we)
        (&serious . g$11931$1yk2we)
        (&warning . g$11930$1yk2we)
        (&message . g$11929$1yk2we)
        (&condition . g$11928$1yk2we)
        (define-condition-type . g$11927$1yk2we)
        (define-enumeration . g$11926$1yk2we)
        (define-record-type . g$11925$1yk2we)
        (parent-rtd . g$11924$1yk2we)
        (nongenerative . g$11923$1yk2we)
        (opaque . g$11922$1yk2we)
        (sealed . g$11921$1yk2we)
        (protocol . g$11920$1yk2we)
        (parent . g$11919$1yk2we)
        (immutable . g$11918$1yk2we)
        (mutable . g$11917$1yk2we)
        (fields . g$11916$1yk2we)
        (error-handling-mode . g$11915$1yk2we)
        (file-options . g$11914$1yk2we)
        (buffer-mode . g$11913$1yk2we)
        (eol-style . g$11912$1yk2we)
        (guard . g$11911$1yk2we)
        (trace-letrec-syntax . g$11910$1yk2we)
        (trace-let-syntax . g$11909$1yk2we)
        (trace-define-syntax . g$11908$1yk2we)
        (trace-define . g$11907$1yk2we)
        (trace-lambda . g$11906$1yk2we)
        (unsyntax-splicing . g$11905$1yk2we)
        (unsyntax . g$11904$1yk2we)
        (unquote-splicing . g$11903$1yk2we)
        (unquote . g$11902$1yk2we)
        (_ . g$11901$1yk2we)
        (else . g$11900$1yk2we)
        (=> . g$11899$1yk2we)
        (... . g$11898$1yk2we)
        (assert . g$11897$1yk2we)
        (endianness . g$11896$1yk2we)
        (delay . g$11895$1yk2we)
        (time . g$11894$1yk2we)
        (or . g$11893$1yk2we)
        (and . g$11892$1yk2we)
        (do . g$11891$1yk2we)
        (cond . g$11890$1yk2we)
        (let* . g$11889$1yk2we)
        (let . g$11888$1yk2we)
        (identifier-syntax . g$11887$1yk2we)
        (with-syntax . g$11886$1yk2we)
        (quasisyntax . g$11885$1yk2we)
        (quasiquote . g$11884$1yk2we)
        (syntax-rules . g$11883$1yk2we)
        (include-into . g$11882$1yk2we)
        (include . g$11881$1yk2we)
        (define-struct . g$11880$1yk2we)
        (let-values . g$11879$1yk2we)
        (let*-values . g$11878$1yk2we)
        (record-constructor-descriptor . g$11877$1yk2we)
        (record-type-descriptor . g$11876$1yk2we)
        (fluid-let-syntax . g$11875$1yk2we)
        (case . g$11874$1yk2we)
        (parameterize . g$11873$1yk2we)
        (unless . g$11872$1yk2we)
        (when . g$11871$1yk2we)
        (if . g$11870$1yk2we)
        (letrec* . g$11869$1yk2we)
        (letrec . g$11868$1yk2we)
        (type-descriptor . g$11867$1yk2we)
        (case-lambda . g$11866$1yk2we)
        (lambda . g$11865$1yk2we)
        (syntax . g$11864$1yk2we)
        (syntax-case . g$11863$1yk2we)
        (quote . g$11862$1yk2we)
        (foreign-call . g$11861$1yk2we)
        (letrec-syntax . g$11860$1yk2we)
        (let-syntax . g$11859$1yk2we)
        (set! . g$11858$1yk2we)
        (import . g$11857$1yk2we)
        (library . g$11856$1yk2we)
        (begin . g$11855$1yk2we)
        (module . g$11854$1yk2we)
        (define-syntax . g$11853$1yk2we)
        (define . g$11852$1yk2we))
      '((g$8738$1yk2we core-prim . ellipsis-map)
        (g$12473$1yk2we core-prim . &no-nans-rcd)
        (g$12472$1yk2we core-prim . &no-nans-rtd)
        (g$12471$1yk2we core-prim . &no-infinities-rcd)
        (g$12470$1yk2we core-prim . &no-infinities-rtd)
        (g$12469$1yk2we core-prim . &i/o-encoding-rcd)
        (g$12468$1yk2we core-prim . &i/o-encoding-rtd)
        (g$12467$1yk2we core-prim . &i/o-decoding-rcd)
        (g$12466$1yk2we core-prim . &i/o-decoding-rtd)
        (g$12465$1yk2we core-prim . &i/o-port-rcd)
        (g$12464$1yk2we core-prim . &i/o-port-rtd)
        (g$12463$1yk2we core-prim . &i/o-file-does-not-exist-rcd)
        (g$12462$1yk2we core-prim . &i/o-file-does-not-exist-rtd)
        (g$12461$1yk2we core-prim . &i/o-file-already-exists-rcd)
        (g$12460$1yk2we core-prim . &i/o-file-already-exists-rtd)
        (g$12459$1yk2we core-prim . &i/o-file-is-read-only-rcd)
        (g$12458$1yk2we core-prim . &i/o-file-is-read-only-rtd)
        (g$12457$1yk2we core-prim . &i/o-file-protection-rcd)
        (g$12456$1yk2we core-prim . &i/o-file-protection-rtd)
        (g$12455$1yk2we core-prim . &i/o-filename-rcd)
        (g$12454$1yk2we core-prim . &i/o-filename-rtd)
        (g$12453$1yk2we core-prim . &i/o-invalid-position-rcd)
        (g$12452$1yk2we core-prim . &i/o-invalid-position-rtd)
        (g$12451$1yk2we core-prim . &i/o-write-rcd)
        (g$12450$1yk2we core-prim . &i/o-write-rtd)
        (g$12449$1yk2we core-prim . &i/o-read-rcd)
        (g$12448$1yk2we core-prim . &i/o-read-rtd)
        (g$12447$1yk2we core-prim . &i/o-rcd)
        (g$12446$1yk2we core-prim . &i/o-rtd)
        (g$12445$1yk2we core-prim . &undefined-rcd)
        (g$12444$1yk2we core-prim . &undefined-rtd)
        (g$12443$1yk2we core-prim . &syntax-rcd)
        (g$12442$1yk2we core-prim . &syntax-rtd)
        (g$12441$1yk2we core-prim . &lexical-rcd)
        (g$12440$1yk2we core-prim . &lexical-rtd)
        (g$12439$1yk2we core-prim . &implementation-restriction-rcd)
        (g$12438$1yk2we core-prim . &implementation-restriction-rtd)
        (g$12437$1yk2we core-prim . &non-continuable-rcd)
        (g$12436$1yk2we core-prim . &non-continuable-rtd)
        (g$12435$1yk2we core-prim . &who-rcd)
        (g$12434$1yk2we core-prim . &who-rtd)
        (g$12433$1yk2we core-prim . &irritants-rcd)
        (g$12432$1yk2we core-prim . &irritants-rtd)
        (g$12431$1yk2we core-prim . &assertion-rcd)
        (g$12430$1yk2we core-prim . &assertion-rtd)
        (g$12429$1yk2we core-prim . &violation-rcd)
        (g$12428$1yk2we core-prim . &violation-rtd)
        (g$12427$1yk2we core-prim . &error-rcd)
        (g$12426$1yk2we core-prim . &error-rtd)
        (g$12425$1yk2we core-prim . &serious-rcd)
        (g$12424$1yk2we core-prim . &serious-rtd)
        (g$12423$1yk2we core-prim . &warning-rcd)
        (g$12422$1yk2we core-prim . &warning-rtd)
        (g$12421$1yk2we core-prim . &message-rcd)
        (g$12420$1yk2we core-prim . &message-rtd)
        (g$12419$1yk2we core-prim . &condition-rcd)
        (g$12418$1yk2we core-prim . &condition-rtd)
        (g$12417$1yk2we core-prim . library-letrec*)
        (g$12416$1yk2we core-prim . annotation-stripped)
        (g$12415$1yk2we core-prim . annotation-source)
        (g$12414$1yk2we core-prim . annotation-expression)
        (g$12413$1yk2we core-prim . annotation?)
        (g$12412$1yk2we core-prim . read-annotated)
        (g$12411$1yk2we core-prim . tanh)
        (g$12410$1yk2we core-prim . cosh)
        (g$12409$1yk2we core-prim . sinh)
        (g$12408$1yk2we core-prim . make-guid)
        (g$12407$1yk2we core-prim . unspecified?)
        (g$12406$1yk2we core-prim . make-trace)
        (g$12405$1yk2we core-prim . make-list)
        (g$12404$1yk2we core-prim . last-pair)
        (g$12403$1yk2we core-prim . load-r5rs)
        (g$12402$1yk2we core-prim . license)
        (g$12401$1yk2we core-prim . stacktrace)
        (g$11820$1yk2we core-prim . ironscheme-build)
        (g$12400$1yk2we core-prim . define-clr-class-internal)
        (g$12399$1yk2we core-prim . clr-field-set!-internal)
        (g$12398$1yk2we core-prim . clr-field-get-internal)
        (g$12397$1yk2we core-prim . clr-cast-internal)
        (g$12396$1yk2we core-prim . clr-call-internal)
        (g$12395$1yk2we core-prim . clr-new-internal)
        (g$12394$1yk2we core-prim . clr-new-array-internal)
        (g$12393$1yk2we core-prim . clr-is-internal)
        (g$12392$1yk2we core-prim . clr-reference-internal)
        (g$12391$1yk2we core-prim . clr-using-internal)
        (g$12390$1yk2we core-prim . clr-clear-usings-internal)
        (g$8862$1yk2we core-prim . syntax-error)
        (g$8733$1yk2we core-prim . syntax-dispatch)
        (g$12389$1yk2we core-prim . compile-core)
        (g$12388$1yk2we core-prim . eval-core)
        (g$12387$1yk2we core-prim . set-symbol-value!)
        (g$12386$1yk2we core-prim . symbol-value)
        (g$12385$1yk2we core-prim . ungensym)
        (g$12384$1yk2we core-prim . gensym)
        (g$12383$1yk2we core-prim . void)
        (g$12382$1yk2we core-prim . load-serialized-library)
        (g$12381$1yk2we core-prim . serialize-library)
        (g$11822$1yk2we core-prim . compile-system-libraries)
        (g$11824$1yk2we core-prim . compile->closure)
        (g$11823$1yk2we core-prim . compile)
        (g$11819$1yk2we core-prim . load)
        (g$8871$1yk2we core-prim . interaction-environment)
        (g$12380$1yk2we core-prim . char-ready?)
        (g$12379$1yk2we core-prim . string-upcase)
        (g$12378$1yk2we core-prim . string-titlecase)
        (g$12377$1yk2we core-prim . string-normalize-nfkd)
        (g$12376$1yk2we core-prim . string-normalize-nfkc)
        (g$12375$1yk2we core-prim . string-normalize-nfd)
        (g$12374$1yk2we core-prim . string-normalize-nfc)
        (g$12373$1yk2we core-prim . string-foldcase)
        (g$12372$1yk2we core-prim . string-downcase)
        (g$6980$1yk2we core-prim . string-ci>?)
        (g$6982$1yk2we core-prim . string-ci>=?)
        (g$6978$1yk2we core-prim . string-ci=?)
        (g$6979$1yk2we core-prim . string-ci<?)
        (g$6981$1yk2we core-prim . string-ci<=?)
        (g$12371$1yk2we core-prim . char-whitespace?)
        (g$12370$1yk2we core-prim . char-upper-case?)
        (g$12369$1yk2we core-prim . char-title-case?)
        (g$12368$1yk2we core-prim . char-numeric?)
        (g$12367$1yk2we core-prim . char-lower-case?)
        (g$12366$1yk2we core-prim . char-general-category)
        (g$12365$1yk2we core-prim . char-upcase)
        (g$12364$1yk2we core-prim . char-titlecase)
        (g$12363$1yk2we core-prim . char-foldcase)
        (g$12362$1yk2we core-prim . char-downcase)
        (g$7019$1yk2we core-prim . char-ci>?)
        (g$7021$1yk2we core-prim . char-ci>=?)
        (g$7017$1yk2we core-prim . char-ci=?)
        (g$7018$1yk2we core-prim . char-ci<?)
        (g$7020$1yk2we core-prim . char-ci<=?)
        (g$12361$1yk2we core-prim . char-alphabetic?)
        (g$8470$1yk2we core-prim . variable-transformer-procedure)
        (g$8469$1yk2we core-prim . variable-transformer?)
        (g$8468$1yk2we core-prim . make-variable-transformer)
        (g$8866$1yk2we core-prim . identifier?)
        (g$8855$1yk2we core-prim . generate-temporaries)
        (g$8856$1yk2we core-prim . free-identifier=?)
        (g$8868$1yk2we core-prim . syntax->datum)
        (g$8867$1yk2we core-prim . datum->syntax)
        (g$8857$1yk2we core-prim . bound-identifier=?)
        (g$12360$1yk2we core-prim . record-type-descriptor?)
        (g$12359$1yk2we core-prim . record-predicate)
        (g$12358$1yk2we core-prim . record-mutator)
        (g$12357$1yk2we core-prim . record-constructor)
        (g$12356$1yk2we core-prim . record-accessor)
        (g$12355$1yk2we core-prim . make-record-type-descriptor)
        (g$12354$1yk2we core-prim . make-record-constructor-descriptor)
        (g$12353$1yk2we core-prim . record?)
        (g$12352$1yk2we core-prim . record-type-uid)
        (g$12351$1yk2we core-prim . record-type-sealed?)
        (g$12350$1yk2we core-prim . record-type-parent)
        (g$12349$1yk2we core-prim . record-type-opaque?)
        (g$12348$1yk2we core-prim . record-type-name)
        (g$12347$1yk2we core-prim . record-type-generative?)
        (g$12346$1yk2we core-prim . record-type-field-names)
        (g$12345$1yk2we core-prim . record-rtd)
        (g$12344$1yk2we core-prim . record-field-mutable?)
        (g$6353$1yk2we core-prim . delete-file)
        (g$6352$1yk2we core-prim . file-exists?)
        (g$12343$1yk2we core-prim . vector-sort!)
        (g$12342$1yk2we core-prim . vector-sort)
        (g$6866$1yk2we core-prim . list-sort)
        (g$12341$1yk2we core-prim . symbol-hash)
        (g$12340$1yk2we core-prim . string-ci-hash)
        (g$12339$1yk2we core-prim . string-hash)
        (g$12338$1yk2we core-prim . equal-hash)
        (g$12337$1yk2we core-prim . hashtable-equivalence-function)
        (g$12336$1yk2we core-prim . make-hashtable)
        (g$12335$1yk2we core-prim . hashtable-hash-function)
        (g$6320$1yk2we core-prim . make-eqv-hashtable)
        (g$6319$1yk2we core-prim . make-eq-hashtable)
        (g$12334$1yk2we core-prim . hashtable?)
        (g$6326$1yk2we core-prim . hashtable-update!)
        (g$6321$1yk2we core-prim . hashtable-size)
        (g$6323$1yk2we core-prim . hashtable-set!)
        (g$6322$1yk2we core-prim . hashtable-ref)
        (g$12333$1yk2we core-prim . hashtable-mutable?)
        (g$12332$1yk2we core-prim . hashtable-keys)
        (g$12331$1yk2we core-prim . hashtable-entries)
        (g$6324$1yk2we core-prim . hashtable-delete!)
        (g$12330$1yk2we core-prim . hashtable-copy)
        (g$6325$1yk2we core-prim . hashtable-contains?)
        (g$6327$1yk2we core-prim . hashtable-clear!)
        (g$7408$1yk2we core-prim . call-with-output-file)
        (g$7407$1yk2we core-prim . call-with-input-file)
        (g$12329$1yk2we core-prim . write-char)
        (g$12328$1yk2we core-prim . write)
        (g$7406$1yk2we core-prim . with-output-to-file)
        (g$7405$1yk2we core-prim . with-input-from-file)
        (g$12327$1yk2we core-prim . read-char)
        (g$12326$1yk2we core-prim . read)
        (g$12325$1yk2we core-prim . peek-char)
        (g$12324$1yk2we core-prim . open-output-file)
        (g$12323$1yk2we core-prim . open-input-file)
        (g$12322$1yk2we core-prim . newline)
        (g$12321$1yk2we core-prim . display)
        (g$12320$1yk2we core-prim . close-output-port)
        (g$12319$1yk2we core-prim . close-input-port)
        (g$12318$1yk2we core-prim . eof-object?)
        (g$12317$1yk2we core-prim . eof-object)
        (g$12316$1yk2we core-prim . current-error-port)
        (g$12315$1yk2we core-prim . current-output-port)
        (g$12314$1yk2we core-prim . current-input-port)
        (g$12313$1yk2we core-prim . output-port?)
        (g$12312$1yk2we core-prim . input-port?)
        (g$12311$1yk2we core-prim . utf-8-codec)
        (g$12310$1yk2we core-prim . utf-16-codec)
        (g$12309$1yk2we core-prim . transcoder-error-handling-mode)
        (g$12308$1yk2we core-prim . transcoder-eol-style)
        (g$12307$1yk2we core-prim . transcoder-codec)
        (g$12306$1yk2we core-prim . transcoded-port)
        (g$12305$1yk2we core-prim . textual-port?)
        (g$12304$1yk2we core-prim . string->bytevector)
        (g$12303$1yk2we core-prim . standard-output-port)
        (g$12302$1yk2we core-prim . standard-input-port)
        (g$12301$1yk2we core-prim . standard-error-port)
        (g$12300$1yk2we core-prim . set-port-position!)
        (g$12299$1yk2we core-prim . put-u8)
        (g$12298$1yk2we core-prim . put-string)
        (g$12297$1yk2we core-prim . put-datum)
        (g$12296$1yk2we core-prim . put-char)
        (g$12295$1yk2we core-prim . put-bytevector)
        (g$7384$1yk2we core-prim . port?)
        (g$12294$1yk2we core-prim . port-transcoder)
        (g$12293$1yk2we core-prim . port-position)
        (g$12292$1yk2we core-prim . port-has-set-port-position!?)
        (g$12291$1yk2we core-prim . port-has-port-position?)
        (g$12290$1yk2we core-prim . port-eof?)
        (g$12289$1yk2we core-prim . output-port-buffer-mode)
        (g$7383$1yk2we core-prim . open-string-output-port)
        (g$12288$1yk2we core-prim . open-string-input-port)
        (g$12287$1yk2we core-prim . open-file-output-port)
        (g$12286$1yk2we core-prim . open-file-input/output-port)
        (g$12285$1yk2we core-prim . open-file-input-port)
        (g$12284$1yk2we core-prim . open-bytevector-output-port)
        (g$12283$1yk2we core-prim . open-bytevector-input-port)
        (g$12282$1yk2we core-prim . native-transcoder)
        (g$12281$1yk2we core-prim . native-eol-style)
        (g$12280$1yk2we core-prim . make-transcoder)
        (g$12279$1yk2we core-prim . latin-1-codec)
        (g$7240$1yk2we core-prim . make-i/o-write-error)
        (g$7226$1yk2we core-prim . make-i/o-read-error)
        (g$7345$1yk2we core-prim . make-i/o-port-error)
        (g$7255$1yk2we core-prim . make-i/o-invalid-position-error)
        (g$7272$1yk2we core-prim . make-i/o-filename-error)
        (g$7288$1yk2we core-prim . make-i/o-file-protection-error)
        (g$7302$1yk2we core-prim . make-i/o-file-is-read-only-error)
        (g$7330$1yk2we core-prim . make-i/o-file-does-not-exist-error)
        (g$7316$1yk2we core-prim . make-i/o-file-already-exists-error)
        (g$7212$1yk2we core-prim . make-i/o-error)
        (g$7376$1yk2we core-prim . make-i/o-encoding-error)
        (g$7361$1yk2we core-prim . make-i/o-decoding-error)
        (g$12278$1yk2we core-prim . make-custom-textual-output-port)
        (g$12277$1yk2we core-prim . make-custom-textual-input/output-port)
        (g$12276$1yk2we core-prim . make-custom-textual-input-port)
        (g$12275$1yk2we core-prim . make-custom-binary-output-port)
        (g$12274$1yk2we core-prim . make-custom-binary-input/output-port)
        (g$12273$1yk2we core-prim . make-custom-binary-input-port)
        (g$12272$1yk2we core-prim . make-bytevector)
        (g$12271$1yk2we core-prim . lookahead-u8)
        (g$12270$1yk2we core-prim . lookahead-char)
        (g$7241$1yk2we core-prim . i/o-write-error?)
        (g$7227$1yk2we core-prim . i/o-read-error?)
        (g$7347$1yk2we core-prim . i/o-port-error?)
        (g$7257$1yk2we core-prim . i/o-invalid-position-error?)
        (g$7258$1yk2we core-prim . i/o-error-position)
        (g$7274$1yk2we core-prim . i/o-filename-error?)
        (g$7289$1yk2we core-prim . i/o-file-protection-error?)
        (g$7303$1yk2we core-prim . i/o-file-is-read-only-error?)
        (g$7331$1yk2we core-prim . i/o-file-does-not-exist-error?)
        (g$7317$1yk2we core-prim . i/o-file-already-exists-error?)
        (g$7213$1yk2we core-prim . i/o-error?)
        (g$7348$1yk2we core-prim . i/o-error-port)
        (g$7275$1yk2we core-prim . i/o-error-filename)
        (g$7378$1yk2we core-prim . i/o-encoding-error?)
        (g$7379$1yk2we core-prim . i/o-encoding-error-char)
        (g$7362$1yk2we core-prim . i/o-decoding-error?)
        (g$12269$1yk2we core-prim . get-u8)
        (g$12268$1yk2we core-prim . get-string-n!)
        (g$12267$1yk2we core-prim . get-string-n)
        (g$12266$1yk2we core-prim . get-string-all)
        (g$12265$1yk2we core-prim . get-line)
        (g$12264$1yk2we core-prim . get-datum)
        (g$12263$1yk2we core-prim . get-char)
        (g$12262$1yk2we core-prim . get-bytevector-some)
        (g$12261$1yk2we core-prim . get-bytevector-n!)
        (g$12260$1yk2we core-prim . get-bytevector-n)
        (g$12259$1yk2we core-prim . get-bytevector-all)
        (g$12258$1yk2we core-prim . flush-output-port)
        (g$12257$1yk2we core-prim . close-port)
        (g$12256$1yk2we core-prim . call-with-string-output-port)
        (g$12255$1yk2we core-prim . call-with-port)
        (g$12254$1yk2we core-prim . call-with-bytevector-output-port)
        (g$12253$1yk2we core-prim . bytevector->string)
        (g$12252$1yk2we core-prim . buffer-mode?)
        (g$12251$1yk2we core-prim . binary-port?)
        (g$8846$1yk2we core-prim . scheme-report-environment)
        (g$6846$1yk2we core-prim . quotient)
        (g$8845$1yk2we core-prim . null-environment)
        (g$6847$1yk2we core-prim . remainder)
        (g$6848$1yk2we core-prim . modulo)
        (g$12250$1yk2we core-prim . inexact->exact)
        (g$6850$1yk2we core-prim . force)
        (g$12249$1yk2we core-prim . exact->inexact)
        (g$12248$1yk2we core-prim . exit)
        (g$11816$1yk2we core-prim . command-line)
        (g$12247$1yk2we core-prim . string-fill!)
        (g$12246$1yk2we core-prim . string-set!)
        (g$12245$1yk2we core-prim . set-cdr!)
        (g$12244$1yk2we core-prim . set-car!)
        (g$6433$1yk2we core-prim . remove)
        (g$6434$1yk2we core-prim . remv)
        (g$6419$1yk2we core-prim . remp)
        (g$6435$1yk2we core-prim . remq)
        (g$6418$1yk2we core-prim . partition)
        (g$12243$1yk2we core-prim . memv)
        (g$12242$1yk2we core-prim . memq)
        (g$6425$1yk2we core-prim . memp)
        (g$6424$1yk2we core-prim . member)
        (g$6429$1yk2we core-prim . exists)
        (g$6428$1yk2we core-prim . for-all)
        (g$6432$1yk2we core-prim . fold-right)
        (g$6431$1yk2we core-prim . fold-left)
        (g$6417$1yk2we core-prim . find)
        (g$6420$1yk2we core-prim . filter)
        (g$6430$1yk2we core-prim . cons*)
        (g$6421$1yk2we core-prim . assv)
        (g$12241$1yk2we core-prim . assq)
        (g$6423$1yk2we core-prim . assp)
        (g$6422$1yk2we core-prim . assoc)
        (g$12240$1yk2we core-prim . with-exception-handler)
        (g$12239$1yk2we core-prim . raise-continuable)
        (g$12238$1yk2we core-prim . raise)
        (g$8848$1yk2we core-prim . eval)
        (g$8844$1yk2we core-prim . environment)
        (g$7466$1yk2we core-prim . make-enumeration)
        (g$7473$1yk2we core-prim . enum-set=?)
        (g$7467$1yk2we core-prim . enum-set-universe)
        (g$7474$1yk2we core-prim . enum-set-union)
        (g$7472$1yk2we core-prim . enum-set-subset?)
        (g$7478$1yk2we core-prim . enum-set-projection)
        (g$7471$1yk2we core-prim . enum-set-member?)
        (g$7475$1yk2we core-prim . enum-set-intersection)
        (g$7468$1yk2we core-prim . enum-set-indexer)
        (g$7476$1yk2we core-prim . enum-set-difference)
        (g$7469$1yk2we core-prim . enum-set-constructor)
        (g$7477$1yk2we core-prim . enum-set-complement)
        (g$7470$1yk2we core-prim . enum-set->list)
        (g$6757$1yk2we core-prim . who-condition?)
        (g$6668$1yk2we core-prim . warning?)
        (g$6710$1yk2we core-prim . violation?)
        (g$6834$1yk2we core-prim . undefined-violation?)
        (g$6818$1yk2we core-prim . syntax-violation?)
        (g$6820$1yk2we core-prim . syntax-violation-subform)
        (g$6819$1yk2we core-prim . syntax-violation-form)
        (g$8865$1yk2we core-prim . syntax-violation)
        (g$12237$1yk2we core-prim . simple-conditions)
        (g$6682$1yk2we core-prim . serious-condition?)
        (g$6772$1yk2we core-prim . non-continuable-violation?)
        (g$6653$1yk2we core-prim . message-condition?)
        (g$6755$1yk2we core-prim . make-who-condition)
        (g$6667$1yk2we core-prim . make-warning)
        (g$6709$1yk2we core-prim . make-violation)
        (g$6833$1yk2we core-prim . make-undefined-violation)
        (g$6815$1yk2we core-prim . make-syntax-violation)
        (g$6681$1yk2we core-prim . make-serious-condition)
        (g$6771$1yk2we core-prim . make-non-continuable-violation)
        (g$6651$1yk2we core-prim . make-message-condition)
        (g$6799$1yk2we core-prim . make-lexical-violation)
        (g$6738$1yk2we core-prim . make-irritants-condition)
        (g$6785$1yk2we core-prim . make-implementation-restriction-violation)
        (g$6695$1yk2we core-prim . make-error)
        (g$6723$1yk2we core-prim . make-assertion-violation)
        (g$6800$1yk2we core-prim . lexical-violation?)
        (g$6740$1yk2we core-prim . irritants-condition?)
        (g$6786$1yk2we core-prim . implementation-restriction-violation?)
        (g$6696$1yk2we core-prim . error?)
        (g$6758$1yk2we core-prim . condition-who)
        (g$12236$1yk2we core-prim . condition-predicate)
        (g$6654$1yk2we core-prim . condition-message)
        (g$6741$1yk2we core-prim . condition-irritants)
        (g$12235$1yk2we core-prim . condition-accessor)
        (g$12234$1yk2we core-prim . condition)
        (g$6724$1yk2we core-prim . assertion-violation?)
        (g$12233$1yk2we core-prim . condition?)
        (g$12232$1yk2we core-prim . utf32->string)
        (g$12231$1yk2we core-prim . utf16->string)
        (g$12230$1yk2we core-prim . utf8->string)
        (g$12229$1yk2we core-prim . uint-list->bytevector)
        (g$12228$1yk2we core-prim . u8-list->bytevector)
        (g$12227$1yk2we core-prim . string->utf8)
        (g$12226$1yk2we core-prim . string->utf32)
        (g$12225$1yk2we core-prim . string->utf16)
        (g$12224$1yk2we core-prim . sint-list->bytevector)
        (g$6509$1yk2we core-prim . native-endianness)
        (g$12223$1yk2we core-prim . bytevector?)
        (g$12222$1yk2we core-prim . bytevector=?)
        (g$12221$1yk2we core-prim . bytevector-uint-set!)
        (g$12220$1yk2we core-prim . bytevector-uint-ref)
        (g$12219$1yk2we core-prim . bytevector-u8-set!)
        (g$12218$1yk2we core-prim . bytevector-u8-ref)
        (g$6530$1yk2we core-prim . bytevector-u64-set!)
        (g$6526$1yk2we core-prim . bytevector-u64-ref)
        (g$6532$1yk2we core-prim . bytevector-u64-native-set!)
        (g$6528$1yk2we core-prim . bytevector-u64-native-ref)
        (g$6522$1yk2we core-prim . bytevector-u32-set!)
        (g$6518$1yk2we core-prim . bytevector-u32-ref)
        (g$6524$1yk2we core-prim . bytevector-u32-native-set!)
        (g$6520$1yk2we core-prim . bytevector-u32-native-ref)
        (g$6514$1yk2we core-prim . bytevector-u16-set!)
        (g$6510$1yk2we core-prim . bytevector-u16-ref)
        (g$6516$1yk2we core-prim . bytevector-u16-native-set!)
        (g$6512$1yk2we core-prim . bytevector-u16-native-ref)
        (g$12217$1yk2we core-prim . bytevector-sint-set!)
        (g$12216$1yk2we core-prim . bytevector-sint-ref)
        (g$12215$1yk2we core-prim . bytevector-s8-set!)
        (g$12214$1yk2we core-prim . bytevector-s8-ref)
        (g$6531$1yk2we core-prim . bytevector-s64-set!)
        (g$6527$1yk2we core-prim . bytevector-s64-ref)
        (g$6533$1yk2we core-prim . bytevector-s64-native-set!)
        (g$6529$1yk2we core-prim . bytevector-s64-native-ref)
        (g$6523$1yk2we core-prim . bytevector-s32-set!)
        (g$6519$1yk2we core-prim . bytevector-s32-ref)
        (g$6525$1yk2we core-prim . bytevector-s32-native-set!)
        (g$6521$1yk2we core-prim . bytevector-s32-native-ref)
        (g$6515$1yk2we core-prim . bytevector-s16-set!)
        (g$6511$1yk2we core-prim . bytevector-s16-ref)
        (g$6517$1yk2we core-prim . bytevector-s16-native-set!)
        (g$6513$1yk2we core-prim . bytevector-s16-native-ref)
        (g$12213$1yk2we core-prim . bytevector-length)
        (g$12212$1yk2we core-prim . bytevector-ieee-single-set!)
        (g$12211$1yk2we core-prim . bytevector-ieee-single-ref)
        (g$6536$1yk2we core-prim . bytevector-ieee-single-native-set!)
        (g$6534$1yk2we core-prim . bytevector-ieee-single-native-ref)
        (g$12210$1yk2we core-prim . bytevector-ieee-double-set!)
        (g$12209$1yk2we core-prim . bytevector-ieee-double-ref)
        (g$6537$1yk2we core-prim . bytevector-ieee-double-native-set!)
        (g$6535$1yk2we core-prim . bytevector-ieee-double-native-ref)
        (g$12208$1yk2we core-prim . bytevector-fill!)
        (g$12207$1yk2we core-prim . bytevector-copy!)
        (g$12206$1yk2we core-prim . bytevector-copy)
        (g$12205$1yk2we core-prim . bytevector->uint-list)
        (g$12204$1yk2we core-prim . bytevector->u8-list)
        (g$12203$1yk2we core-prim . bytevector->sint-list)
        (g$7198$1yk2we core-prim . no-nans-violation?)
        (g$7184$1yk2we core-prim . no-infinities-violation?)
        (g$7197$1yk2we core-prim . make-no-nans-violation)
        (g$7183$1yk2we core-prim . make-no-infinities-violation)
        (g$12202$1yk2we core-prim . real->flonum)
        (g$12201$1yk2we core-prim . flzero?)
        (g$12200$1yk2we core-prim . fltruncate)
        (g$12199$1yk2we core-prim . fltan)
        (g$12198$1yk2we core-prim . flsqrt)
        (g$12197$1yk2we core-prim . flsin)
        (g$12196$1yk2we core-prim . flround)
        (g$12195$1yk2we core-prim . flpositive?)
        (g$12194$1yk2we core-prim . flonum?)
        (g$12193$1yk2we core-prim . flodd?)
        (g$12192$1yk2we core-prim . flnumerator)
        (g$12191$1yk2we core-prim . flnegative?)
        (g$12190$1yk2we core-prim . flnan?)
        (g$12189$1yk2we core-prim . flmod0)
        (g$12188$1yk2we core-prim . flmod)
        (g$12187$1yk2we core-prim . flmin)
        (g$12186$1yk2we core-prim . flmax)
        (g$12185$1yk2we core-prim . fllog)
        (g$12184$1yk2we core-prim . flinteger?)
        (g$12183$1yk2we core-prim . flinfinite?)
        (g$12182$1yk2we core-prim . flfloor)
        (g$12181$1yk2we core-prim . flfinite?)
        (g$12180$1yk2we core-prim . flexpt)
        (g$12179$1yk2we core-prim . flexp)
        (g$12178$1yk2we core-prim . fleven?)
        (g$12177$1yk2we core-prim . fldiv0-and-mod0)
        (g$12176$1yk2we core-prim . fldiv0)
        (g$12175$1yk2we core-prim . fldiv-and-mod)
        (g$12174$1yk2we core-prim . fldiv)
        (g$12173$1yk2we core-prim . fldenominator)
        (g$12172$1yk2we core-prim . flcos)
        (g$12171$1yk2we core-prim . flceiling)
        (g$12170$1yk2we core-prim . flatan)
        (g$12169$1yk2we core-prim . flasin)
        (g$12168$1yk2we core-prim . flacos)
        (g$12167$1yk2we core-prim . flabs)
        (g$12166$1yk2we core-prim . fl>?)
        (g$12165$1yk2we core-prim . fl>=?)
        (g$12164$1yk2we core-prim . fl=?)
        (g$12163$1yk2we core-prim . fl<?)
        (g$12162$1yk2we core-prim . fl<=?)
        (g$12161$1yk2we core-prim . fl/)
        (g$12160$1yk2we core-prim . fl-)
        (g$12159$1yk2we core-prim . fl+)
        (g$12158$1yk2we core-prim . fl*)
        (g$12157$1yk2we core-prim . fixnum->flonum)
        (g$12156$1yk2we core-prim . fxzero?)
        (g$12155$1yk2we core-prim . fxxor)
        (g$7129$1yk2we core-prim . fxrotate-bit-field)
        (g$12154$1yk2we core-prim . fxreverse-bit-field)
        (g$12153$1yk2we core-prim . fxpositive?)
        (g$12152$1yk2we core-prim . fxodd?)
        (g$12151$1yk2we core-prim . fxnot)
        (g$12150$1yk2we core-prim . fxnegative?)
        (g$12149$1yk2we core-prim . fxmod0)
        (g$12148$1yk2we core-prim . fxmod)
        (g$12147$1yk2we core-prim . fxmin)
        (g$12146$1yk2we core-prim . fxmax)
        (g$12145$1yk2we core-prim . fxlength)
        (g$12144$1yk2we core-prim . fxior)
        (g$7123$1yk2we core-prim . fxif)
        (g$12143$1yk2we core-prim . fxfirst-bit-set)
        (g$12142$1yk2we core-prim . fxeven?)
        (g$12141$1yk2we core-prim . fxdiv0-and-mod0)
        (g$12140$1yk2we core-prim . fxdiv0)
        (g$12139$1yk2we core-prim . fxdiv-and-mod)
        (g$12138$1yk2we core-prim . fxdiv)
        (g$7126$1yk2we core-prim . fxcopy-bit-field)
        (g$7124$1yk2we core-prim . fxcopy-bit)
        (g$12137$1yk2we core-prim . fxbit-set?)
        (g$7125$1yk2we core-prim . fxbit-field)
        (g$12136$1yk2we core-prim . fxbit-count)
        (g$7128$1yk2we core-prim . fxarithmetic-shift-right)
        (g$7127$1yk2we core-prim . fxarithmetic-shift-left)
        (g$12135$1yk2we core-prim . fxarithmetic-shift)
        (g$12134$1yk2we core-prim . fxand)
        (g$12133$1yk2we core-prim . fx>?)
        (g$12132$1yk2we core-prim . fx>=?)
        (g$12131$1yk2we core-prim . fx=?)
        (g$12130$1yk2we core-prim . fx<?)
        (g$12129$1yk2we core-prim . fx<=?)
        (g$12128$1yk2we core-prim . fx-/carry)
        (g$12127$1yk2we core-prim . fx-)
        (g$12126$1yk2we core-prim . fx+/carry)
        (g$12125$1yk2we core-prim . fx+)
        (g$12124$1yk2we core-prim . fx*/carry)
        (g$12123$1yk2we core-prim . fx*)
        (g$12122$1yk2we core-prim . greatest-fixnum)
        (g$12121$1yk2we core-prim . least-fixnum)
        (g$12120$1yk2we core-prim . fixnum-width)
        (g$12119$1yk2we core-prim . fixnum?)
        (g$7081$1yk2we core-prim . bitwise-rotate-bit-field)
        (g$12118$1yk2we core-prim . bitwise-reverse-bit-field)
        (g$12117$1yk2we core-prim . bitwise-length)
        (g$7075$1yk2we core-prim . bitwise-if)
        (g$12116$1yk2we core-prim . bitwise-first-bit-set)
        (g$7078$1yk2we core-prim . bitwise-copy-bit-field)
        (g$7076$1yk2we core-prim . bitwise-copy-bit)
        (g$12115$1yk2we core-prim . bitwise-bit-set?)
        (g$12114$1yk2we core-prim . bitwise-bit-field)
        (g$12113$1yk2we core-prim . bitwise-bit-count)
        (g$12112$1yk2we core-prim . bitwise-xor)
        (g$12111$1yk2we core-prim . bitwise-ior)
        (g$12110$1yk2we core-prim . bitwise-and)
        (g$12109$1yk2we core-prim . bitwise-not)
        (g$7080$1yk2we core-prim . bitwise-arithmetic-shift-right)
        (g$7079$1yk2we core-prim . bitwise-arithmetic-shift-left)
        (g$12108$1yk2we core-prim . bitwise-arithmetic-shift)
        (g$12107$1yk2we core-prim . zero?)
        (g$12106$1yk2we core-prim . vector?)
        (g$12105$1yk2we core-prim . vector-set!)
        (g$12104$1yk2we core-prim . vector-ref)
        (g$12103$1yk2we core-prim . vector-map)
        (g$12102$1yk2we core-prim . vector-length)
        (g$12101$1yk2we core-prim . vector-for-each)
        (g$12100$1yk2we core-prim . vector-fill!)
        (g$12099$1yk2we core-prim . vector->list)
        (g$12098$1yk2we core-prim . vector)
        (g$12097$1yk2we core-prim . values)
        (g$12096$1yk2we core-prim . truncate)
        (g$12095$1yk2we core-prim . tan)
        (g$12094$1yk2we core-prim . symbol?)
        (g$5868$1yk2we core-prim . symbol=?)
        (g$12093$1yk2we core-prim . symbol->string)
        (g$12092$1yk2we core-prim . substring)
        (g$12091$1yk2we core-prim . string?)
        (g$5865$1yk2we core-prim . string>?)
        (g$5867$1yk2we core-prim . string>=?)
        (g$5863$1yk2we core-prim . string=?)
        (g$5864$1yk2we core-prim . string<?)
        (g$5866$1yk2we core-prim . string<=?)
        (g$12090$1yk2we core-prim . string-ref)
        (g$12089$1yk2we core-prim . string-length)
        (g$12088$1yk2we core-prim . string-for-each)
        (g$12087$1yk2we core-prim . string-copy)
        (g$12086$1yk2we core-prim . string-append)
        (g$12085$1yk2we core-prim . string->symbol)
        (g$12084$1yk2we core-prim . string->number)
        (g$12083$1yk2we core-prim . string->list)
        (g$12082$1yk2we core-prim . string)
        (g$12081$1yk2we core-prim . sqrt)
        (g$12080$1yk2we core-prim . sin)
        (g$12079$1yk2we core-prim . round)
        (g$12078$1yk2we core-prim . reverse)
        (g$12077$1yk2we core-prim . real?)
        (g$12076$1yk2we core-prim . real-valued?)
        (g$12075$1yk2we core-prim . real-part)
        (g$5909$1yk2we core-prim . rationalize)
        (g$12074$1yk2we core-prim . rational?)
        (g$12073$1yk2we core-prim . rational-valued?)
        (g$12072$1yk2we core-prim . procedure?)
        (g$12071$1yk2we core-prim . positive?)
        (g$12070$1yk2we core-prim . pair?)
        (g$12069$1yk2we core-prim . odd?)
        (g$12068$1yk2we core-prim . numerator)
        (g$12067$1yk2we core-prim . number?)
        (g$12066$1yk2we core-prim . number->string)
        (g$12065$1yk2we core-prim . null?)
        (g$12064$1yk2we core-prim . not)
        (g$12063$1yk2we core-prim . negative?)
        (g$12062$1yk2we core-prim . nan?)
        (g$12061$1yk2we core-prim . min)
        (g$12060$1yk2we core-prim . max)
        (g$12059$1yk2we core-prim . map)
        (g$12058$1yk2we core-prim . make-vector)
        (g$12057$1yk2we core-prim . make-string)
        (g$12056$1yk2we core-prim . make-rectangular)
        (g$12055$1yk2we core-prim . make-polar)
        (g$12054$1yk2we core-prim . magnitude)
        (g$12053$1yk2we core-prim . log)
        (g$12052$1yk2we core-prim . list?)
        (g$12051$1yk2we core-prim . list-tail)
        (g$12050$1yk2we core-prim . list-ref)
        (g$12049$1yk2we core-prim . list->vector)
        (g$12048$1yk2we core-prim . list->string)
        (g$12047$1yk2we core-prim . list)
        (g$12046$1yk2we core-prim . length)
        (g$12045$1yk2we core-prim . lcm)
        (g$12044$1yk2we core-prim . integer?)
        (g$12043$1yk2we core-prim . integer-valued?)
        (g$12042$1yk2we core-prim . integer->char)
        (g$12041$1yk2we core-prim . infinite?)
        (g$12040$1yk2we core-prim . inexact?)
        (g$12039$1yk2we core-prim . inexact)
        (g$12038$1yk2we core-prim . imag-part)
        (g$12037$1yk2we core-prim . gcd)
        (g$12036$1yk2we core-prim . for-each)
        (g$12035$1yk2we core-prim . floor)
        (g$12034$1yk2we core-prim . finite?)
        (g$12033$1yk2we core-prim . expt)
        (g$12032$1yk2we core-prim . exp)
        (g$12031$1yk2we core-prim . exact?)
        (g$12030$1yk2we core-prim . exact-integer-sqrt)
        (g$12029$1yk2we core-prim . exact)
        (g$12028$1yk2we core-prim . even?)
        (g$12027$1yk2we core-prim . error)
        (g$12026$1yk2we core-prim . eqv?)
        (g$12025$1yk2we core-prim . equal?)
        (g$12024$1yk2we core-prim . eq?)
        (g$12023$1yk2we core-prim . dynamic-wind)
        (g$12022$1yk2we core-prim . div0-and-mod0)
        (g$12021$1yk2we core-prim . mod0)
        (g$12020$1yk2we core-prim . div0)
        (g$12019$1yk2we core-prim . div-and-mod)
        (g$12018$1yk2we core-prim . mod)
        (g$12017$1yk2we core-prim . div)
        (g$12016$1yk2we core-prim . denominator)
        (g$12015$1yk2we core-prim . cos)
        (g$12014$1yk2we core-prim . cons)
        (g$12013$1yk2we core-prim . complex?)
        (g$12012$1yk2we core-prim . char?)
        (g$5906$1yk2we core-prim . char>?)
        (g$5908$1yk2we core-prim . char>=?)
        (g$5904$1yk2we core-prim . char=?)
        (g$5905$1yk2we core-prim . char<?)
        (g$5907$1yk2we core-prim . char<=?)
        (g$12011$1yk2we core-prim . char->integer)
        (g$12010$1yk2we core-prim . ceiling)
        (g$12009$1yk2we core-prim . call-with-values)
        (g$12008$1yk2we core-prim . call/cc)
        (g$12007$1yk2we core-prim . call-with-current-continuation)
        (g$5828$1yk2we core-prim . cddddr)
        (g$5827$1yk2we core-prim . cdddar)
        (g$5826$1yk2we core-prim . cddadr)
        (g$5825$1yk2we core-prim . cddaar)
        (g$5824$1yk2we core-prim . cdaddr)
        (g$5823$1yk2we core-prim . cdadar)
        (g$5822$1yk2we core-prim . cdaadr)
        (g$5821$1yk2we core-prim . cdaaar)
        (g$5820$1yk2we core-prim . cadddr)
        (g$5819$1yk2we core-prim . caddar)
        (g$5818$1yk2we core-prim . cadadr)
        (g$5817$1yk2we core-prim . cadaar)
        (g$5816$1yk2we core-prim . caaddr)
        (g$5815$1yk2we core-prim . caadar)
        (g$5814$1yk2we core-prim . caaadr)
        (g$5813$1yk2we core-prim . caaaar)
        (g$5812$1yk2we core-prim . cdddr)
        (g$5811$1yk2we core-prim . cddar)
        (g$5810$1yk2we core-prim . cdadr)
        (g$5809$1yk2we core-prim . cdaar)
        (g$5808$1yk2we core-prim . caddr)
        (g$5807$1yk2we core-prim . cadar)
        (g$5806$1yk2we core-prim . caadr)
        (g$5805$1yk2we core-prim . caaar)
        (g$5804$1yk2we core-prim . cddr)
        (g$5803$1yk2we core-prim . cdar)
        (g$5802$1yk2we core-prim . cadr)
        (g$5801$1yk2we core-prim . caar)
        (g$12006$1yk2we core-prim . cdr)
        (g$12005$1yk2we core-prim . car)
        (g$12004$1yk2we core-prim . boolean?)
        (g$5869$1yk2we core-prim . boolean=?)
        (g$12003$1yk2we core-prim . atan)
        (g$12002$1yk2we core-prim . assertion-violation)
        (g$12001$1yk2we core-prim . asin)
        (g$12000$1yk2we core-prim . apply)
        (g$11999$1yk2we core-prim . append)
        (g$11998$1yk2we core-prim . angle)
        (g$11997$1yk2we core-prim . acos)
        (g$11996$1yk2we core-prim . abs)
        (g$11995$1yk2we core-prim . /)
        (g$11994$1yk2we core-prim . *)
        (g$11993$1yk2we core-prim . -)
        (g$11992$1yk2we core-prim . +)
        (g$11991$1yk2we core-prim . >=)
        (g$11990$1yk2we core-prim . >)
        (g$11989$1yk2we core-prim . =)
        (g$11988$1yk2we core-prim . <=)
        (g$11987$1yk2we core-prim . <)
        (g$11986$1yk2we core-prim . make-record-printer)
        (g$11985$1yk2we core-prim . eqv-hash)
        (g$11984$1yk2we core-prim . eq-hash)
        (g$11983$1yk2we core-prim . reverse!)
        (g$11982$1yk2we core-prim . deserialize-port)
        (g$11981$1yk2we core-prim . serialize-port)
        (g$7441$1yk2we core-prim . enum-set?)
        (g$6849$1yk2we core-prim . make-promise)
        (g$11818$1yk2we core-prim . load/args)
        (g$7551$1yk2we core-prim . printf)
        (g$7552$1yk2we core-prim . fprintf)
        (g$7553$1yk2we core-prim . format)
        (g$11980$1yk2we core-prim . get-arity)
        (g$11979$1yk2we core-prim . gc-collect)
        (g$11978$1yk2we core-prim . clr-type?)
        (g$11977$1yk2we core-prim . get-clr-type)
        (g$11976$1yk2we core-prim . get-command-line)
        (g$11975$1yk2we core-prim . vector-append)
        (g$11974$1yk2we core-prim . vector-filter)
        (g$11973$1yk2we core-prim . vector-reverse!)
        (g$11972$1yk2we core-prim . vector-contains?)
        (g$11971$1yk2we core-prim . vector-index-of)
        (g$11970$1yk2we core-prim . vector-copy)
        (g$11969$1yk2we core-prim . vector-binary-search)
        (g$11968$1yk2we core-prim . get-output-string)
        (g$11967$1yk2we core-prim . open-output-string)
        (g$11966$1yk2we core-prim . open-input-string)
        (g$11965$1yk2we core-prim . string-ci-compare)
        (g$11964$1yk2we core-prim . string-compare)
        (g$11963$1yk2we core-prim . string-format)
        (g$11815$1yk2we core-prim . trace-printer)
        (g$11962$1yk2we core-prim . make-traced-procedure)
        (g$7573$1yk2we core-prim . make-traced-macro)
        (g$8861$1yk2we core-prim . assertion-error)
        (g$11961$1yk2we core-prim . pmap)
        (g$11960$1yk2we core-prim . time-it)
        (g$7578$1yk2we core-prim . make-parameter)
        (g$11959$1yk2we core-prim . library-locator)
        (g$11958$1yk2we core-prim . get-library-paths)
        (g$8840$1yk2we core-prim . environment-bindings)
        (g$8843$1yk2we core-prim . environment-symbols)
        (g$8839$1yk2we core-prim . interaction-environment-symbols)
        (g$11957$1yk2we core-prim . optimization-level)
        (g$8008$1yk2we core-prim . library-path)
        (g$11956$1yk2we $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11955$1yk2we $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11954$1yk2we $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11953$1yk2we $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11952$1yk2we $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11951$1yk2we
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11950$1yk2we
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11949$1yk2we
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11948$1yk2we
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11947$1yk2we $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11946$1yk2we
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11945$1yk2we $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11944$1yk2we $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11943$1yk2we $core-rtd &i/o-rtd &i/o-rcd)
        (g$11942$1yk2we $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11941$1yk2we $core-rtd &undefined-rtd &undefined-rcd)
        (g$11940$1yk2we $core-rtd &syntax-rtd &syntax-rcd)
        (g$11939$1yk2we $core-rtd &lexical-rtd &lexical-rcd)
        (g$11938$1yk2we
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11937$1yk2we $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11936$1yk2we $core-rtd &who-rtd &who-rcd)
        (g$11935$1yk2we $core-rtd &irritants-rtd &irritants-rcd)
        (g$11934$1yk2we $core-rtd &assertion-rtd &assertion-rcd)
        (g$11933$1yk2we $core-rtd &violation-rtd &violation-rcd)
        (g$11932$1yk2we $core-rtd &error-rtd &error-rcd)
        (g$11931$1yk2we $core-rtd &serious-rtd &serious-rcd)
        (g$11930$1yk2we $core-rtd &warning-rtd &warning-rcd)
        (g$11929$1yk2we $core-rtd &message-rtd &message-rcd)
        (g$11928$1yk2we $core-rtd &condition-rtd &condition-rcd)
        (g$11927$1yk2we macro . define-condition-type)
        (g$11926$1yk2we macro . define-enumeration)
        (g$11925$1yk2we macro . define-record-type)
        (g$11924$1yk2we macro . parent-rtd)
        (g$11923$1yk2we macro . nongenerative)
        (g$11922$1yk2we macro . opaque)
        (g$11921$1yk2we macro . sealed)
        (g$11920$1yk2we macro . protocol)
        (g$11919$1yk2we macro . parent)
        (g$11918$1yk2we macro . immutable)
        (g$11917$1yk2we macro . mutable)
        (g$11916$1yk2we macro . fields)
        (g$11915$1yk2we macro . error-handling-mode)
        (g$11914$1yk2we macro . file-options)
        (g$11913$1yk2we macro . buffer-mode)
        (g$11912$1yk2we macro . eol-style)
        (g$11911$1yk2we macro . guard)
        (g$11910$1yk2we macro . trace-letrec-syntax)
        (g$11909$1yk2we macro . trace-let-syntax)
        (g$11908$1yk2we macro . trace-define-syntax)
        (g$11907$1yk2we macro . trace-define)
        (g$11906$1yk2we macro . trace-lambda)
        (g$11905$1yk2we macro . unsyntax-splicing)
        (g$11904$1yk2we macro . unsyntax)
        (g$11903$1yk2we macro . unquote-splicing)
        (g$11902$1yk2we macro . unquote)
        (g$11901$1yk2we macro . _)
        (g$11900$1yk2we macro . else)
        (g$11899$1yk2we macro . =>)
        (g$11898$1yk2we macro . ...)
        (g$11897$1yk2we macro . assert)
        (g$11896$1yk2we macro . endianness)
        (g$11895$1yk2we macro . delay)
        (g$11894$1yk2we macro . time)
        (g$11893$1yk2we macro . or)
        (g$11892$1yk2we macro . and)
        (g$11891$1yk2we macro . do)
        (g$11890$1yk2we macro . cond)
        (g$11889$1yk2we macro . let*)
        (g$11888$1yk2we macro . let)
        (g$11887$1yk2we macro . identifier-syntax)
        (g$11886$1yk2we macro . with-syntax)
        (g$11885$1yk2we macro . quasisyntax)
        (g$11884$1yk2we macro . quasiquote)
        (g$11883$1yk2we macro . syntax-rules)
        (g$11882$1yk2we macro . include-into)
        (g$11881$1yk2we macro . include)
        (g$11880$1yk2we macro . define-struct)
        (g$11879$1yk2we macro . let-values)
        (g$11878$1yk2we macro . let*-values)
        (g$11877$1yk2we core-macro . record-constructor-descriptor)
        (g$11876$1yk2we core-macro . record-type-descriptor)
        (g$11875$1yk2we core-macro . fluid-let-syntax)
        (g$11874$1yk2we macro . case)
        (g$11873$1yk2we macro . parameterize)
        (g$11872$1yk2we macro . unless)
        (g$11871$1yk2we macro . when)
        (g$11870$1yk2we core-macro . if)
        (g$11869$1yk2we core-macro . letrec*)
        (g$11868$1yk2we core-macro . letrec)
        (g$11867$1yk2we core-macro . type-descriptor)
        (g$11866$1yk2we core-macro . case-lambda)
        (g$11865$1yk2we core-macro . lambda)
        (g$11864$1yk2we core-macro . syntax)
        (g$11863$1yk2we core-macro . syntax-case)
        (g$11862$1yk2we core-macro . quote)
        (g$11861$1yk2we core-macro . foreign-call)
        (g$11860$1yk2we letrec-syntax)
        (g$11859$1yk2we let-syntax)
        (g$11858$1yk2we set!)
        (g$11857$1yk2we import)
        (g$11856$1yk2we library)
        (g$11855$1yk2we begin)
        (g$11854$1yk2we module)
        (g$11853$1yk2we define-syntax)
        (g$11852$1yk2we define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7135$1yk2we
      'g$12510$1yk2we
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12389$1yk2we)
        (eval-core . g$12388$1yk2we)
        (set-symbol-value! . g$12387$1yk2we)
        (symbol-value . g$12386$1yk2we)
        (gensym . g$12384$1yk2we)
        (void . g$12383$1yk2we))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11179$1yk2we
     g$trace-printer$11219$1yk2we
     (g$make-parameter$6590$1yk2we write))
   (g$command-line$11180$1yk2we
     g$command-line$11220$1yk2we
     (g$make-parameter$6590$1yk2we (get-command-line)))
   (g$local-library-path$11181$1yk2we
     g$local-library-path$11221$1yk2we
     (case-lambda
       ((g$filename$11192$1yk2we)
        (cons
          (g$get-directory-name$5366$1yk2we g$filename$11192$1yk2we)
          (g$library-path$7119$1yk2we)))))
   (g$load/args$11182$1yk2we
     g$load/args$11222$1yk2we
     (case-lambda
       ((g$filename$11193$1yk2we . g$args$11194$1yk2we)
        (begin
          (apply
            g$load-r6rs-top-level$11189$1yk2we
            g$filename$11193$1yk2we
            'load
            g$args$11194$1yk2we)
          (void)))))
   (g$load$11183$1yk2we
     g$load$11223$1yk2we
     (case-lambda
       ((g$filename$11195$1yk2we)
        (begin
          (apply
            g$load-r6rs-top-level$11189$1yk2we
            g$filename$11195$1yk2we
            'load
            (cdr (g$command-line$11180$1yk2we)))
          (void)))))
   (g$ironscheme-build$11184$1yk2we
     g$ironscheme-build$11224$1yk2we
     (case-lambda (() (g$load$11183$1yk2we '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11185$1yk2we
     g$eval-top-level$11225$1yk2we
     (case-lambda
       ((g$x$11196$1yk2we)
        (g$eval$11154$1yk2we
          g$x$11196$1yk2we
          (g$interaction-environment$11177$1yk2we)))))
   (g$compile-system-libraries$11186$1yk2we
     g$compile-system-libraries$11226$1yk2we
     (case-lambda
       (()
        (g$eval-top-level$11185$1yk2we
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11187$1yk2we
     g$compile$11227$1yk2we
     (case-lambda
       ((g$filename$11197$1yk2we)
        (g$load-r6rs-top-level$11189$1yk2we g$filename$11197$1yk2we 'compile))))
   (g$compile->closure$11188$1yk2we
     g$compile->closure$11228$1yk2we
     (case-lambda
       ((g$filename$11198$1yk2we)
        (g$load-r6rs-top-level$11189$1yk2we g$filename$11198$1yk2we 'closure))))
   (g$load-r6rs-top-level$11189$1yk2we
     g$load-r6rs-top-level$11229$1yk2we
     (case-lambda
       ((g$filename$11199$1yk2we g$how$11200$1yk2we . g$args$11201$1yk2we)
        ((case-lambda
           ((g$library-path$11204$1yk2we g$library-path$11205$1yk2we)
            ((case-lambda
               ((g$swap$11206$1yk2we)
                (dynamic-wind
                  g$swap$11206$1yk2we
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11207$1yk2we)
                         ((case-lambda
                            ((g$t$11208$1yk2we)
                             (if (memv g$t$11208$1yk2we '(closure))
                               (g$pre-compile-r6rs-top-level$11176$1yk2we
                                 g$x*$11207$1yk2we)
                               (if (memv g$t$11208$1yk2we '(load))
                                 ((case-lambda
                                    ((g$command-line$11211$1yk2we
                                       g$command-line$11212$1yk2we)
                                     ((case-lambda
                                        ((g$swap$11213$1yk2we)
                                         (dynamic-wind
                                           g$swap$11213$1yk2we
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11175$1yk2we
                                                 g$x*$11207$1yk2we))))
                                           g$swap$11213$1yk2we)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11214$1yk2we)
                                             (begin
                                               (g$command-line$11211$1yk2we
                                                 g$command-line$11212$1yk2we)
                                               (set! g$command-line$11212$1yk2we
                                                 g$t$11214$1yk2we))))
                                          (g$command-line$11211$1yk2we)))))))
                                  g$command-line$11180$1yk2we
                                  (cons
                                    g$filename$11199$1yk2we
                                    (map (case-lambda
                                           ((g$x$11215$1yk2we)
                                            (g$format$6505$1yk2we
                                              '"~a"
                                              g$x$11215$1yk2we)))
                                         g$args$11201$1yk2we)))
                                 (if (memv g$t$11208$1yk2we '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11175$1yk2we
                                       g$x*$11207$1yk2we)
                                     (g$serialize-all$7123$1yk2we
                                       serialize-library
                                       g$compile-core-expr$6837$1yk2we))
                                   (if '#f '#f (void)))))))
                          g$how$11200$1yk2we)))
                      (g$with-input-from-file$6333$1yk2we
                        g$filename$11199$1yk2we
                        (case-lambda
                          (()
                           ((letrec ((g$f$11216$1yk2we
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11217$1yk2we)
                                              (if (eof-object? g$x$11217$1yk2we)
                                                '()
                                                (cons
                                                  g$x$11217$1yk2we
                                                  (g$f$11216$1yk2we)))))
                                           (read-annotated))))))
                              g$f$11216$1yk2we))))))))
                  g$swap$11206$1yk2we)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11218$1yk2we)
                    (begin
                      (g$library-path$11204$1yk2we g$library-path$11205$1yk2we)
                      (set! g$library-path$11205$1yk2we g$t$11218$1yk2we))))
                 (g$library-path$11204$1yk2we)))))))
         g$library-path$7119$1yk2we
         (g$local-library-path$11181$1yk2we g$filename$11199$1yk2we)))))
   (g$fo$11190$1yk2we
     g$fo$11230$1yk2we
     (g$make-enumeration$6467$1yk2we '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7124$1yk2we
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11191$1yk2we)
         (if (g$serious-condition?$5749$1yk2we g$ex$11191$1yk2we)
           (raise g$ex$11191$1yk2we)
           (begin (display g$ex$11191$1yk2we) (newline))))))
    (set-symbol-value! 'load g$load$11183$1yk2we)
    (set-symbol-value! 'compile g$compile$11187$1yk2we)
    (set-symbol-value! 'compile->closure g$compile->closure$11188$1yk2we)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11185$1yk2we)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11145$1yk2we)
    (set-symbol-value! 'expanded2core g$expanded->core$6836$1yk2we)
    (set-symbol-value! 'trace-printer g$trace-printer$11179$1yk2we)
    (g$file-options-constructor$6591$1yk2we
      (g$enum-set-constructor$6470$1yk2we g$fo$11190$1yk2we))
    (g$library-path$7119$1yk2we (get-library-paths))))

