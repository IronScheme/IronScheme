;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme base)
  ((g$caar$4816$1bEyPh
     g$caar$5009$1bEyPh
     (case-lambda ((g$x$4871$1bEyPh) (car (car g$x$4871$1bEyPh)))))
   (g$cadr$4817$1bEyPh
     g$cadr$5010$1bEyPh
     (case-lambda ((g$x$4872$1bEyPh) (car (cdr g$x$4872$1bEyPh)))))
   (g$cdar$4818$1bEyPh
     g$cdar$5011$1bEyPh
     (case-lambda ((g$x$4873$1bEyPh) (cdr (car g$x$4873$1bEyPh)))))
   (g$cddr$4819$1bEyPh
     g$cddr$5012$1bEyPh
     (case-lambda ((g$x$4874$1bEyPh) (cdr (cdr g$x$4874$1bEyPh)))))
   (g$caaar$4820$1bEyPh
     g$caaar$5013$1bEyPh
     (case-lambda
       ((g$x$4875$1bEyPh) (g$caar$4816$1bEyPh (car g$x$4875$1bEyPh)))))
   (g$caadr$4821$1bEyPh
     g$caadr$5014$1bEyPh
     (case-lambda
       ((g$x$4876$1bEyPh) (g$caar$4816$1bEyPh (cdr g$x$4876$1bEyPh)))))
   (g$cadar$4822$1bEyPh
     g$cadar$5015$1bEyPh
     (case-lambda
       ((g$x$4877$1bEyPh) (g$cadr$4817$1bEyPh (car g$x$4877$1bEyPh)))))
   (g$caddr$4823$1bEyPh
     g$caddr$5016$1bEyPh
     (case-lambda
       ((g$x$4878$1bEyPh) (g$cadr$4817$1bEyPh (cdr g$x$4878$1bEyPh)))))
   (g$cdaar$4824$1bEyPh
     g$cdaar$5017$1bEyPh
     (case-lambda
       ((g$x$4879$1bEyPh) (g$cdar$4818$1bEyPh (car g$x$4879$1bEyPh)))))
   (g$cdadr$4825$1bEyPh
     g$cdadr$5018$1bEyPh
     (case-lambda
       ((g$x$4880$1bEyPh) (g$cdar$4818$1bEyPh (cdr g$x$4880$1bEyPh)))))
   (g$cddar$4826$1bEyPh
     g$cddar$5019$1bEyPh
     (case-lambda
       ((g$x$4881$1bEyPh) (g$cddr$4819$1bEyPh (car g$x$4881$1bEyPh)))))
   (g$cdddr$4827$1bEyPh
     g$cdddr$5020$1bEyPh
     (case-lambda
       ((g$x$4882$1bEyPh) (g$cddr$4819$1bEyPh (cdr g$x$4882$1bEyPh)))))
   (g$caaaar$4828$1bEyPh
     g$caaaar$5021$1bEyPh
     (case-lambda
       ((g$x$4883$1bEyPh) (g$caaar$4820$1bEyPh (car g$x$4883$1bEyPh)))))
   (g$caaadr$4829$1bEyPh
     g$caaadr$5022$1bEyPh
     (case-lambda
       ((g$x$4884$1bEyPh) (g$caaar$4820$1bEyPh (cdr g$x$4884$1bEyPh)))))
   (g$caadar$4830$1bEyPh
     g$caadar$5023$1bEyPh
     (case-lambda
       ((g$x$4885$1bEyPh) (g$caadr$4821$1bEyPh (car g$x$4885$1bEyPh)))))
   (g$caaddr$4831$1bEyPh
     g$caaddr$5024$1bEyPh
     (case-lambda
       ((g$x$4886$1bEyPh) (g$caadr$4821$1bEyPh (cdr g$x$4886$1bEyPh)))))
   (g$cadaar$4832$1bEyPh
     g$cadaar$5025$1bEyPh
     (case-lambda
       ((g$x$4887$1bEyPh) (g$cadar$4822$1bEyPh (car g$x$4887$1bEyPh)))))
   (g$cadadr$4833$1bEyPh
     g$cadadr$5026$1bEyPh
     (case-lambda
       ((g$x$4888$1bEyPh) (g$cadar$4822$1bEyPh (cdr g$x$4888$1bEyPh)))))
   (g$caddar$4834$1bEyPh
     g$caddar$5027$1bEyPh
     (case-lambda
       ((g$x$4889$1bEyPh) (g$caddr$4823$1bEyPh (car g$x$4889$1bEyPh)))))
   (g$cadddr$4835$1bEyPh
     g$cadddr$5028$1bEyPh
     (case-lambda
       ((g$x$4890$1bEyPh) (g$caddr$4823$1bEyPh (cdr g$x$4890$1bEyPh)))))
   (g$cdaaar$4836$1bEyPh
     g$cdaaar$5029$1bEyPh
     (case-lambda
       ((g$x$4891$1bEyPh) (g$cdaar$4824$1bEyPh (car g$x$4891$1bEyPh)))))
   (g$cdaadr$4837$1bEyPh
     g$cdaadr$5030$1bEyPh
     (case-lambda
       ((g$x$4892$1bEyPh) (g$cdaar$4824$1bEyPh (cdr g$x$4892$1bEyPh)))))
   (g$cdadar$4838$1bEyPh
     g$cdadar$5031$1bEyPh
     (case-lambda
       ((g$x$4893$1bEyPh) (g$cdadr$4825$1bEyPh (car g$x$4893$1bEyPh)))))
   (g$cdaddr$4839$1bEyPh
     g$cdaddr$5032$1bEyPh
     (case-lambda
       ((g$x$4894$1bEyPh) (g$cdadr$4825$1bEyPh (cdr g$x$4894$1bEyPh)))))
   (g$cddaar$4840$1bEyPh
     g$cddaar$5033$1bEyPh
     (case-lambda
       ((g$x$4895$1bEyPh) (g$cddar$4826$1bEyPh (car g$x$4895$1bEyPh)))))
   (g$cddadr$4841$1bEyPh
     g$cddadr$5034$1bEyPh
     (case-lambda
       ((g$x$4896$1bEyPh) (g$cddar$4826$1bEyPh (cdr g$x$4896$1bEyPh)))))
   (g$cdddar$4842$1bEyPh
     g$cdddar$5035$1bEyPh
     (case-lambda
       ((g$x$4897$1bEyPh) (g$cdddr$4827$1bEyPh (car g$x$4897$1bEyPh)))))
   (g$cddddr$4843$1bEyPh
     g$cddddr$5036$1bEyPh
     (case-lambda
       ((g$x$4898$1bEyPh) (g$cdddr$4827$1bEyPh (cdr g$x$4898$1bEyPh)))))
   (g$string=?$4850$1bEyPh
     g$string=?$5037$1bEyPh
     (case-lambda
       ((g$a$4899$1bEyPh g$b$4900$1bEyPh . g$rest$4901$1bEyPh)
        (begin
          (if (not (string? g$a$4899$1bEyPh))
            (assertion-violation 'string=? '"not a string" g$a$4899$1bEyPh)
            (void))
          (if (not (string? g$b$4900$1bEyPh))
            (assertion-violation 'string=? '"not a string" g$b$4900$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4902$1bEyPh)
               (if (not (string? g$x$4902$1bEyPh))
                 (assertion-violation 'string=? '"not a string" g$x$4902$1bEyPh)
                 (void))))
            g$rest$4901$1bEyPh)
          ((letrec ((g$f$4903$1bEyPh
                      (case-lambda
                        ((g$a$4904$1bEyPh g$b$4905$1bEyPh g$rest$4906$1bEyPh)
                         (if (null? g$rest$4906$1bEyPh)
                           (= (string-compare g$a$4904$1bEyPh g$b$4905$1bEyPh)
                              '0)
                           (if (= (string-compare
                                    g$a$4904$1bEyPh
                                    g$b$4905$1bEyPh)
                                  '0)
                             (begin
                               '#f
                               (g$f$4903$1bEyPh
                                 g$b$4905$1bEyPh
                                 (car g$rest$4906$1bEyPh)
                                 (cdr g$rest$4906$1bEyPh)))
                             '#f))))))
             g$f$4903$1bEyPh)
           g$a$4899$1bEyPh
           g$b$4900$1bEyPh
           g$rest$4901$1bEyPh)))))
   (g$string<?$4851$1bEyPh
     g$string<?$5038$1bEyPh
     (case-lambda
       ((g$a$4907$1bEyPh g$b$4908$1bEyPh . g$rest$4909$1bEyPh)
        (begin
          (if (not (string? g$a$4907$1bEyPh))
            (assertion-violation 'string<? '"not a string" g$a$4907$1bEyPh)
            (void))
          (if (not (string? g$b$4908$1bEyPh))
            (assertion-violation 'string<? '"not a string" g$b$4908$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4910$1bEyPh)
               (if (not (string? g$x$4910$1bEyPh))
                 (assertion-violation 'string<? '"not a string" g$x$4910$1bEyPh)
                 (void))))
            g$rest$4909$1bEyPh)
          ((letrec ((g$f$4911$1bEyPh
                      (case-lambda
                        ((g$a$4912$1bEyPh g$b$4913$1bEyPh g$rest$4914$1bEyPh)
                         (if (null? g$rest$4914$1bEyPh)
                           (< (string-compare g$a$4912$1bEyPh g$b$4913$1bEyPh)
                              '0)
                           (if (< (string-compare
                                    g$a$4912$1bEyPh
                                    g$b$4913$1bEyPh)
                                  '0)
                             (begin
                               '#f
                               (g$f$4911$1bEyPh
                                 g$b$4913$1bEyPh
                                 (car g$rest$4914$1bEyPh)
                                 (cdr g$rest$4914$1bEyPh)))
                             '#f))))))
             g$f$4911$1bEyPh)
           g$a$4907$1bEyPh
           g$b$4908$1bEyPh
           g$rest$4909$1bEyPh)))))
   (g$string>?$4852$1bEyPh
     g$string>?$5039$1bEyPh
     (case-lambda
       ((g$a$4915$1bEyPh g$b$4916$1bEyPh . g$rest$4917$1bEyPh)
        (begin
          (if (not (string? g$a$4915$1bEyPh))
            (assertion-violation 'string>? '"not a string" g$a$4915$1bEyPh)
            (void))
          (if (not (string? g$b$4916$1bEyPh))
            (assertion-violation 'string>? '"not a string" g$b$4916$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4918$1bEyPh)
               (if (not (string? g$x$4918$1bEyPh))
                 (assertion-violation 'string>? '"not a string" g$x$4918$1bEyPh)
                 (void))))
            g$rest$4917$1bEyPh)
          ((letrec ((g$f$4919$1bEyPh
                      (case-lambda
                        ((g$a$4920$1bEyPh g$b$4921$1bEyPh g$rest$4922$1bEyPh)
                         (if (null? g$rest$4922$1bEyPh)
                           (> (string-compare g$a$4920$1bEyPh g$b$4921$1bEyPh)
                              '0)
                           (if (> (string-compare
                                    g$a$4920$1bEyPh
                                    g$b$4921$1bEyPh)
                                  '0)
                             (begin
                               '#f
                               (g$f$4919$1bEyPh
                                 g$b$4921$1bEyPh
                                 (car g$rest$4922$1bEyPh)
                                 (cdr g$rest$4922$1bEyPh)))
                             '#f))))))
             g$f$4919$1bEyPh)
           g$a$4915$1bEyPh
           g$b$4916$1bEyPh
           g$rest$4917$1bEyPh)))))
   (g$string<=?$4853$1bEyPh
     g$string<=?$5040$1bEyPh
     (case-lambda
       ((g$a$4923$1bEyPh g$b$4924$1bEyPh . g$rest$4925$1bEyPh)
        (begin
          (if (not (string? g$a$4923$1bEyPh))
            (assertion-violation 'string<=? '"not a string" g$a$4923$1bEyPh)
            (void))
          (if (not (string? g$b$4924$1bEyPh))
            (assertion-violation 'string<=? '"not a string" g$b$4924$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4926$1bEyPh)
               (if (not (string? g$x$4926$1bEyPh))
                 (assertion-violation
                   'string<=?
                   '"not a string"
                   g$x$4926$1bEyPh)
                 (void))))
            g$rest$4925$1bEyPh)
          ((letrec ((g$f$4927$1bEyPh
                      (case-lambda
                        ((g$a$4928$1bEyPh g$b$4929$1bEyPh g$rest$4930$1bEyPh)
                         (if (null? g$rest$4930$1bEyPh)
                           (<= (string-compare g$a$4928$1bEyPh g$b$4929$1bEyPh)
                               '0)
                           (if (<= (string-compare
                                     g$a$4928$1bEyPh
                                     g$b$4929$1bEyPh)
                                   '0)
                             (begin
                               '#f
                               (g$f$4927$1bEyPh
                                 g$b$4929$1bEyPh
                                 (car g$rest$4930$1bEyPh)
                                 (cdr g$rest$4930$1bEyPh)))
                             '#f))))))
             g$f$4927$1bEyPh)
           g$a$4923$1bEyPh
           g$b$4924$1bEyPh
           g$rest$4925$1bEyPh)))))
   (g$string>=?$4854$1bEyPh
     g$string>=?$5041$1bEyPh
     (case-lambda
       ((g$a$4931$1bEyPh g$b$4932$1bEyPh . g$rest$4933$1bEyPh)
        (begin
          (if (not (string? g$a$4931$1bEyPh))
            (assertion-violation 'string>=? '"not a string" g$a$4931$1bEyPh)
            (void))
          (if (not (string? g$b$4932$1bEyPh))
            (assertion-violation 'string>=? '"not a string" g$b$4932$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4934$1bEyPh)
               (if (not (string? g$x$4934$1bEyPh))
                 (assertion-violation
                   'string>=?
                   '"not a string"
                   g$x$4934$1bEyPh)
                 (void))))
            g$rest$4933$1bEyPh)
          ((letrec ((g$f$4935$1bEyPh
                      (case-lambda
                        ((g$a$4936$1bEyPh g$b$4937$1bEyPh g$rest$4938$1bEyPh)
                         (if (null? g$rest$4938$1bEyPh)
                           (>= (string-compare g$a$4936$1bEyPh g$b$4937$1bEyPh)
                               '0)
                           (if (>= (string-compare
                                     g$a$4936$1bEyPh
                                     g$b$4937$1bEyPh)
                                   '0)
                             (begin
                               '#f
                               (g$f$4935$1bEyPh
                                 g$b$4937$1bEyPh
                                 (car g$rest$4938$1bEyPh)
                                 (cdr g$rest$4938$1bEyPh)))
                             '#f))))))
             g$f$4935$1bEyPh)
           g$a$4931$1bEyPh
           g$b$4932$1bEyPh
           g$rest$4933$1bEyPh)))))
   (g$symbol=?$4855$1bEyPh
     g$symbol=?$5042$1bEyPh
     (case-lambda
       ((g$a$4939$1bEyPh g$b$4940$1bEyPh . g$rest$4941$1bEyPh)
        (begin
          (if (not (symbol? g$a$4939$1bEyPh))
            (assertion-violation 'symbol=? '"not a symbol" g$a$4939$1bEyPh)
            (void))
          (if (not (symbol? g$b$4940$1bEyPh))
            (assertion-violation 'symbol=? '"not a symbol" g$b$4940$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4942$1bEyPh)
               (if (not (symbol? g$x$4942$1bEyPh))
                 (assertion-violation 'symbol=? '"not a symbol" g$x$4942$1bEyPh)
                 (void))))
            g$rest$4941$1bEyPh)
          ((letrec ((g$f$4943$1bEyPh
                      (case-lambda
                        ((g$a$4944$1bEyPh g$b$4945$1bEyPh g$rest$4946$1bEyPh)
                         (if (null? g$rest$4946$1bEyPh)
                           (eq? g$a$4944$1bEyPh g$b$4945$1bEyPh)
                           (if (eq? g$a$4944$1bEyPh g$b$4945$1bEyPh)
                             (begin
                               '#f
                               (g$f$4943$1bEyPh
                                 g$b$4945$1bEyPh
                                 (car g$rest$4946$1bEyPh)
                                 (cdr g$rest$4946$1bEyPh)))
                             '#f))))))
             g$f$4943$1bEyPh)
           g$a$4939$1bEyPh
           g$b$4940$1bEyPh
           g$rest$4941$1bEyPh)))))
   (g$boolean=?$4856$1bEyPh
     g$boolean=?$5043$1bEyPh
     (case-lambda
       ((g$a$4947$1bEyPh g$b$4948$1bEyPh . g$rest$4949$1bEyPh)
        (begin
          (if (not (boolean? g$a$4947$1bEyPh))
            (assertion-violation 'boolean=? '"not a boolean" g$a$4947$1bEyPh)
            (void))
          (if (not (boolean? g$b$4948$1bEyPh))
            (assertion-violation 'boolean=? '"not a boolean" g$b$4948$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4950$1bEyPh)
               (if (not (boolean? g$x$4950$1bEyPh))
                 (assertion-violation
                   'boolean=?
                   '"not a boolean"
                   g$x$4950$1bEyPh)
                 (void))))
            g$rest$4949$1bEyPh)
          ((letrec ((g$f$4951$1bEyPh
                      (case-lambda
                        ((g$a$4952$1bEyPh g$b$4953$1bEyPh g$rest$4954$1bEyPh)
                         (if (null? g$rest$4954$1bEyPh)
                           (eq? g$a$4952$1bEyPh g$b$4953$1bEyPh)
                           (if (eq? g$a$4952$1bEyPh g$b$4953$1bEyPh)
                             (begin
                               '#f
                               (g$f$4951$1bEyPh
                                 g$b$4953$1bEyPh
                                 (car g$rest$4954$1bEyPh)
                                 (cdr g$rest$4954$1bEyPh)))
                             '#f))))))
             g$f$4951$1bEyPh)
           g$a$4947$1bEyPh
           g$b$4948$1bEyPh
           g$rest$4949$1bEyPh)))))
   (g$char=?$4863$1bEyPh
     g$char=?$5044$1bEyPh
     (case-lambda
       ((g$a$4955$1bEyPh g$b$4956$1bEyPh . g$rest$4957$1bEyPh)
        (begin
          (if (not (char? g$a$4955$1bEyPh))
            (assertion-violation 'char=? '"not a char" g$a$4955$1bEyPh)
            (void))
          (if (not (char? g$b$4956$1bEyPh))
            (assertion-violation 'char=? '"not a char" g$b$4956$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4958$1bEyPh)
               (if (not (char? g$x$4958$1bEyPh))
                 (assertion-violation 'char=? '"not a char" g$x$4958$1bEyPh)
                 (void))))
            g$rest$4957$1bEyPh)
          ((letrec ((g$f$4959$1bEyPh
                      (case-lambda
                        ((g$a$4960$1bEyPh g$b$4961$1bEyPh g$rest$4962$1bEyPh)
                         (if (null? g$rest$4962$1bEyPh)
                           (= (char->integer g$a$4960$1bEyPh)
                              (char->integer g$b$4961$1bEyPh))
                           (if (= (char->integer g$a$4960$1bEyPh)
                                  (char->integer g$b$4961$1bEyPh))
                             (begin
                               '#f
                               (g$f$4959$1bEyPh
                                 g$b$4961$1bEyPh
                                 (car g$rest$4962$1bEyPh)
                                 (cdr g$rest$4962$1bEyPh)))
                             '#f))))))
             g$f$4959$1bEyPh)
           g$a$4955$1bEyPh
           g$b$4956$1bEyPh
           g$rest$4957$1bEyPh)))))
   (g$char<?$4864$1bEyPh
     g$char<?$5045$1bEyPh
     (case-lambda
       ((g$a$4963$1bEyPh g$b$4964$1bEyPh . g$rest$4965$1bEyPh)
        (begin
          (if (not (char? g$a$4963$1bEyPh))
            (assertion-violation 'char<? '"not a char" g$a$4963$1bEyPh)
            (void))
          (if (not (char? g$b$4964$1bEyPh))
            (assertion-violation 'char<? '"not a char" g$b$4964$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4966$1bEyPh)
               (if (not (char? g$x$4966$1bEyPh))
                 (assertion-violation 'char<? '"not a char" g$x$4966$1bEyPh)
                 (void))))
            g$rest$4965$1bEyPh)
          ((letrec ((g$f$4967$1bEyPh
                      (case-lambda
                        ((g$a$4968$1bEyPh g$b$4969$1bEyPh g$rest$4970$1bEyPh)
                         (if (null? g$rest$4970$1bEyPh)
                           (< (char->integer g$a$4968$1bEyPh)
                              (char->integer g$b$4969$1bEyPh))
                           (if (< (char->integer g$a$4968$1bEyPh)
                                  (char->integer g$b$4969$1bEyPh))
                             (begin
                               '#f
                               (g$f$4967$1bEyPh
                                 g$b$4969$1bEyPh
                                 (car g$rest$4970$1bEyPh)
                                 (cdr g$rest$4970$1bEyPh)))
                             '#f))))))
             g$f$4967$1bEyPh)
           g$a$4963$1bEyPh
           g$b$4964$1bEyPh
           g$rest$4965$1bEyPh)))))
   (g$char>?$4865$1bEyPh
     g$char>?$5046$1bEyPh
     (case-lambda
       ((g$a$4971$1bEyPh g$b$4972$1bEyPh . g$rest$4973$1bEyPh)
        (begin
          (if (not (char? g$a$4971$1bEyPh))
            (assertion-violation 'char>? '"not a char" g$a$4971$1bEyPh)
            (void))
          (if (not (char? g$b$4972$1bEyPh))
            (assertion-violation 'char>? '"not a char" g$b$4972$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4974$1bEyPh)
               (if (not (char? g$x$4974$1bEyPh))
                 (assertion-violation 'char>? '"not a char" g$x$4974$1bEyPh)
                 (void))))
            g$rest$4973$1bEyPh)
          ((letrec ((g$f$4975$1bEyPh
                      (case-lambda
                        ((g$a$4976$1bEyPh g$b$4977$1bEyPh g$rest$4978$1bEyPh)
                         (if (null? g$rest$4978$1bEyPh)
                           (> (char->integer g$a$4976$1bEyPh)
                              (char->integer g$b$4977$1bEyPh))
                           (if (> (char->integer g$a$4976$1bEyPh)
                                  (char->integer g$b$4977$1bEyPh))
                             (begin
                               '#f
                               (g$f$4975$1bEyPh
                                 g$b$4977$1bEyPh
                                 (car g$rest$4978$1bEyPh)
                                 (cdr g$rest$4978$1bEyPh)))
                             '#f))))))
             g$f$4975$1bEyPh)
           g$a$4971$1bEyPh
           g$b$4972$1bEyPh
           g$rest$4973$1bEyPh)))))
   (g$char<=?$4866$1bEyPh
     g$char<=?$5047$1bEyPh
     (case-lambda
       ((g$a$4979$1bEyPh g$b$4980$1bEyPh . g$rest$4981$1bEyPh)
        (begin
          (if (not (char? g$a$4979$1bEyPh))
            (assertion-violation 'char<=? '"not a char" g$a$4979$1bEyPh)
            (void))
          (if (not (char? g$b$4980$1bEyPh))
            (assertion-violation 'char<=? '"not a char" g$b$4980$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4982$1bEyPh)
               (if (not (char? g$x$4982$1bEyPh))
                 (assertion-violation 'char<=? '"not a char" g$x$4982$1bEyPh)
                 (void))))
            g$rest$4981$1bEyPh)
          ((letrec ((g$f$4983$1bEyPh
                      (case-lambda
                        ((g$a$4984$1bEyPh g$b$4985$1bEyPh g$rest$4986$1bEyPh)
                         (if (null? g$rest$4986$1bEyPh)
                           (<= (char->integer g$a$4984$1bEyPh)
                               (char->integer g$b$4985$1bEyPh))
                           (if (<= (char->integer g$a$4984$1bEyPh)
                                   (char->integer g$b$4985$1bEyPh))
                             (begin
                               '#f
                               (g$f$4983$1bEyPh
                                 g$b$4985$1bEyPh
                                 (car g$rest$4986$1bEyPh)
                                 (cdr g$rest$4986$1bEyPh)))
                             '#f))))))
             g$f$4983$1bEyPh)
           g$a$4979$1bEyPh
           g$b$4980$1bEyPh
           g$rest$4981$1bEyPh)))))
   (g$char>=?$4867$1bEyPh
     g$char>=?$5048$1bEyPh
     (case-lambda
       ((g$a$4987$1bEyPh g$b$4988$1bEyPh . g$rest$4989$1bEyPh)
        (begin
          (if (not (char? g$a$4987$1bEyPh))
            (assertion-violation 'char>=? '"not a char" g$a$4987$1bEyPh)
            (void))
          (if (not (char? g$b$4988$1bEyPh))
            (assertion-violation 'char>=? '"not a char" g$b$4988$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$4990$1bEyPh)
               (if (not (char? g$x$4990$1bEyPh))
                 (assertion-violation 'char>=? '"not a char" g$x$4990$1bEyPh)
                 (void))))
            g$rest$4989$1bEyPh)
          ((letrec ((g$f$4991$1bEyPh
                      (case-lambda
                        ((g$a$4992$1bEyPh g$b$4993$1bEyPh g$rest$4994$1bEyPh)
                         (if (null? g$rest$4994$1bEyPh)
                           (>= (char->integer g$a$4992$1bEyPh)
                               (char->integer g$b$4993$1bEyPh))
                           (if (>= (char->integer g$a$4992$1bEyPh)
                                   (char->integer g$b$4993$1bEyPh))
                             (begin
                               '#f
                               (g$f$4991$1bEyPh
                                 g$b$4993$1bEyPh
                                 (car g$rest$4994$1bEyPh)
                                 (cdr g$rest$4994$1bEyPh)))
                             '#f))))))
             g$f$4991$1bEyPh)
           g$a$4987$1bEyPh
           g$b$4988$1bEyPh
           g$rest$4989$1bEyPh)))))
   (g$rationalize$4868$1bEyPh
     g$rationalize$5049$1bEyPh
     (case-lambda
       ((g$x$4995$1bEyPh g$e$4996$1bEyPh)
        (if (if (infinite? g$x$4995$1bEyPh)
              (begin '#f (infinite? g$e$4996$1bEyPh))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$4997$1bEyPh)
              (if (if (exact? g$x$4995$1bEyPh)
                    (begin '#f (exact? g$e$4996$1bEyPh))
                    '#f)
                g$r$4997$1bEyPh
                (inexact g$r$4997$1bEyPh))))
           (apply
             /
             (g$find-ratio$4869$1bEyPh g$x$4995$1bEyPh g$e$4996$1bEyPh)))))))
   (g$find-ratio$4869$1bEyPh
     g$find-ratio$5050$1bEyPh
     (case-lambda
       ((g$x$4998$1bEyPh g$e$4999$1bEyPh)
        (g$find-ratio-between$4870$1bEyPh
          (- g$x$4998$1bEyPh g$e$4999$1bEyPh)
          (+ g$x$4998$1bEyPh g$e$4999$1bEyPh)))))
   (g$find-ratio-between$4870$1bEyPh
     g$find-ratio-between$5051$1bEyPh
     (case-lambda
       ((g$x$5000$1bEyPh g$y$5001$1bEyPh)
        (letrec* ((g$sr$5002$1bEyPh
                    (case-lambda
                      ((g$x$5004$1bEyPh g$y$5005$1bEyPh)
                       ((case-lambda
                          ((g$fx$5006$1bEyPh g$fy$5007$1bEyPh)
                           (if (>= g$fx$5006$1bEyPh g$x$5004$1bEyPh)
                             (list g$fx$5006$1bEyPh '1)
                             (if (= g$fx$5006$1bEyPh g$fy$5007$1bEyPh)
                               ((case-lambda
                                  ((g$rat$5008$1bEyPh)
                                   (list
                                     (+ (g$cadr$4817$1bEyPh g$rat$5008$1bEyPh)
                                        (* g$fx$5006$1bEyPh
                                           (car g$rat$5008$1bEyPh)))
                                     (car g$rat$5008$1bEyPh))))
                                (g$sr$5002$1bEyPh
                                  (/ (- g$y$5005$1bEyPh g$fy$5007$1bEyPh))
                                  (/ (- g$x$5004$1bEyPh g$fx$5006$1bEyPh))))
                               (list (+ '1 g$fx$5006$1bEyPh) '1)))))
                        (exact (floor g$x$5004$1bEyPh))
                        (exact (floor g$y$5005$1bEyPh)))))))
          (if (< g$y$5001$1bEyPh g$x$5000$1bEyPh)
            (g$find-ratio-between$4870$1bEyPh g$y$5001$1bEyPh g$x$5000$1bEyPh)
            (if (>= g$x$5000$1bEyPh g$y$5001$1bEyPh)
              (list g$x$5000$1bEyPh '1)
              (if (positive? g$x$5000$1bEyPh)
                (g$sr$5002$1bEyPh g$x$5000$1bEyPh g$y$5001$1bEyPh)
                (if (negative? g$y$5001$1bEyPh)
                  ((case-lambda
                     ((g$rat$5003$1bEyPh)
                      (list
                        (- (car g$rat$5003$1bEyPh))
                        (g$cadr$4817$1bEyPh g$rat$5003$1bEyPh))))
                   (g$sr$5002$1bEyPh (- g$y$5001$1bEyPh) (- g$x$5000$1bEyPh)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5247$1bEyPh g$using$5282$1bEyPh (clr-using-internal 'system))
   (g$using$5249$1bEyPh
     g$using$5283$1bEyPh
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5250$1bEyPh
     g$make-eq-hashtable$5284$1bEyPh
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5261$1bEyPh)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5261$1bEyPh)))))
   (g$make-eqv-hashtable$5251$1bEyPh
     g$make-eqv-hashtable$5285$1bEyPh
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5262$1bEyPh) (make-hashtable eqv-hash eqv? g$k$5262$1bEyPh))))
   (g$hashtable-size$5252$1bEyPh
     g$hashtable-size$5286$1bEyPh
     (case-lambda
       ((g$ht$5263$1bEyPh)
        (clr-call-internal 'hashtable 'get_count g$ht$5263$1bEyPh))))
   (g$hashtable-ref$5253$1bEyPh
     g$hashtable-ref$5287$1bEyPh
     (case-lambda
       ((g$ht$5264$1bEyPh g$key$5265$1bEyPh g$default$5266$1bEyPh)
        (letrec* ((g$r$5267$1bEyPh
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5264$1bEyPh
                      g$key$5265$1bEyPh)))
          (if (not (null? g$r$5267$1bEyPh))
            g$r$5267$1bEyPh
            g$default$5266$1bEyPh)))))
   (g$hashtable-set!$5254$1bEyPh
     g$hashtable-set!$5288$1bEyPh
     (case-lambda
       ((g$ht$5268$1bEyPh g$key$5269$1bEyPh g$obj$5270$1bEyPh)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5268$1bEyPh
          g$key$5269$1bEyPh
          g$obj$5270$1bEyPh))))
   (g$hashtable-delete!$5255$1bEyPh
     g$hashtable-delete!$5289$1bEyPh
     (case-lambda
       ((g$ht$5271$1bEyPh g$key$5272$1bEyPh)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5271$1bEyPh
          g$key$5272$1bEyPh))))
   (g$hashtable-contains?$5256$1bEyPh
     g$hashtable-contains?$5290$1bEyPh
     (case-lambda
       ((g$ht$5273$1bEyPh g$key$5274$1bEyPh)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5273$1bEyPh
          g$key$5274$1bEyPh))))
   (g$hashtable-update!$5257$1bEyPh
     g$hashtable-update!$5291$1bEyPh
     (case-lambda
       ((g$ht$5275$1bEyPh
          g$key$5276$1bEyPh
          g$proc$5277$1bEyPh
          g$default$5278$1bEyPh)
        (g$hashtable-set!$5254$1bEyPh
          g$ht$5275$1bEyPh
          g$key$5276$1bEyPh
          (g$proc$5277$1bEyPh
            (g$hashtable-ref$5253$1bEyPh
              g$ht$5275$1bEyPh
              g$key$5276$1bEyPh
              g$default$5278$1bEyPh))))))
   (g$hashtable-clear!$5258$1bEyPh
     g$hashtable-clear!$5292$1bEyPh
     (case-lambda
       ((g$ht$5279$1bEyPh)
        (clr-call-internal 'hashtable 'clear g$ht$5279$1bEyPh))
       ((g$ht$5280$1bEyPh g$k$5281$1bEyPh)
        (clr-call-internal 'hashtable 'clear g$ht$5280$1bEyPh))))
   (g$clear-usings$5260$1bEyPh
     g$clear-usings$5293$1bEyPh
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5295$1bEyPh
     g$using$5361$1bEyPh
     (clr-using-internal 'system.io))
   (g$file-exists?$5296$1bEyPh
     g$file-exists?$5362$1bEyPh
     (case-lambda
       ((g$fn$5324$1bEyPh)
        (clr-call-internal 'file 'exists '() g$fn$5324$1bEyPh))))
   (g$delete-file$5297$1bEyPh
     g$delete-file$5363$1bEyPh
     (case-lambda
       ((g$fn$5325$1bEyPh)
        (clr-call-internal 'file 'delete '() g$fn$5325$1bEyPh))))
   (g$file-copy$5298$1bEyPh
     g$file-copy$5364$1bEyPh
     (case-lambda
       ((g$from$5326$1bEyPh g$to$5327$1bEyPh)
        (g$file-copy$5298$1bEyPh g$from$5326$1bEyPh g$to$5327$1bEyPh '#f))
       ((g$from$5328$1bEyPh g$to$5329$1bEyPh g$overwrite?$5330$1bEyPh)
        (clr-call-internal
          'file
          'copy
          '()
          g$from$5328$1bEyPh
          g$to$5329$1bEyPh
          g$overwrite?$5330$1bEyPh))))
   (g$file-move$5299$1bEyPh
     g$file-move$5365$1bEyPh
     (case-lambda
       ((g$from$5331$1bEyPh g$to$5332$1bEyPh)
        (clr-call-internal
          'file
          'move
          '()
          g$from$5331$1bEyPh
          g$to$5332$1bEyPh))))
   (g$file-create-time$5300$1bEyPh
     g$file-create-time$5366$1bEyPh
     (case-lambda
       ((g$fn$5333$1bEyPh)
        (clr-call-internal 'file 'getcreationtime '() g$fn$5333$1bEyPh))))
   (g$file-access-time$5301$1bEyPh
     g$file-access-time$5367$1bEyPh
     (case-lambda
       ((g$fn$5334$1bEyPh)
        (clr-call-internal 'file 'getlastaccesstime '() g$fn$5334$1bEyPh))))
   (g$file-modified-time$5302$1bEyPh
     g$file-modified-time$5368$1bEyPh
     (case-lambda
       ((g$fn$5335$1bEyPh)
        (clr-call-internal 'file 'getlastwritetime '() g$fn$5335$1bEyPh))))
   (g$directory-exists?$5303$1bEyPh
     g$directory-exists?$5369$1bEyPh
     (case-lambda
       ((g$fn$5336$1bEyPh)
        (clr-call-internal 'directory 'exists '() g$fn$5336$1bEyPh))))
   (g$delete-directory$5304$1bEyPh
     g$delete-directory$5370$1bEyPh
     (case-lambda
       ((g$dir$5337$1bEyPh)
        (g$delete-directory$5304$1bEyPh g$dir$5337$1bEyPh '#f))
       ((g$dir$5338$1bEyPh g$recursive?$5339$1bEyPh)
        (clr-call-internal
          'directory
          'delete
          '()
          g$dir$5338$1bEyPh
          g$recursive?$5339$1bEyPh))))
   (g$directory-move$5305$1bEyPh
     g$directory-move$5371$1bEyPh
     (case-lambda
       ((g$from$5340$1bEyPh g$to$5341$1bEyPh)
        (clr-call-internal
          'directory
          'move
          '()
          g$from$5340$1bEyPh
          g$to$5341$1bEyPh))))
   (g$create-directory$5306$1bEyPh
     g$create-directory$5372$1bEyPh
     (case-lambda
       ((g$name$5342$1bEyPh)
        (clr-call-internal
          'directory
          'createdirectory
          '()
          g$name$5342$1bEyPh))))
   (g$get-files$5307$1bEyPh
     g$get-files$5373$1bEyPh
     (case-lambda
       ((g$dir$5343$1bEyPh) (g$get-files$5307$1bEyPh g$dir$5343$1bEyPh '"*"))
       ((g$dir$5344$1bEyPh g$pattern$5345$1bEyPh)
        (clr-call-internal
          'directory
          'getfiles
          '()
          g$dir$5344$1bEyPh
          g$pattern$5345$1bEyPh))))
   (g$get-directories$5308$1bEyPh
     g$get-directories$5374$1bEyPh
     (case-lambda
       ((g$dir$5346$1bEyPh)
        (g$get-directories$5308$1bEyPh g$dir$5346$1bEyPh '"*"))
       ((g$dir$5347$1bEyPh g$pattern$5348$1bEyPh)
        (clr-call-internal
          'directory
          'getdirectories
          '()
          g$dir$5347$1bEyPh
          g$pattern$5348$1bEyPh))))
   (g$change-extension$5309$1bEyPh
     g$change-extension$5375$1bEyPh
     (case-lambda
       ((g$path$5349$1bEyPh g$extension$5350$1bEyPh)
        (clr-call-internal
          'path
          'changeextension
          '()
          g$path$5349$1bEyPh
          g$extension$5350$1bEyPh))))
   (g$path-combine$5310$1bEyPh
     g$path-combine$5376$1bEyPh
     (case-lambda
       ((g$path1$5351$1bEyPh g$path2$5352$1bEyPh)
        (clr-call-internal
          'path
          'combine
          '()
          g$path1$5351$1bEyPh
          g$path2$5352$1bEyPh))))
   (g$get-directory-name$5311$1bEyPh
     g$get-directory-name$5377$1bEyPh
     (case-lambda
       ((g$path$5353$1bEyPh)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5353$1bEyPh))))
   (g$get-extension$5312$1bEyPh
     g$get-extension$5378$1bEyPh
     (case-lambda
       ((g$path$5354$1bEyPh)
        (clr-call-internal 'path 'getextension '() g$path$5354$1bEyPh))))
   (g$get-filename$5313$1bEyPh
     g$get-filename$5379$1bEyPh
     (case-lambda
       ((g$path$5355$1bEyPh)
        (clr-call-internal 'path 'getfilename '() g$path$5355$1bEyPh))))
   (g$get-filename-without-extension$5314$1bEyPh
     g$get-filename-without-extension$5380$1bEyPh
     (case-lambda
       ((g$path$5356$1bEyPh)
        (clr-call-internal
          'path
          'getfilenamewithoutextension
          '()
          g$path$5356$1bEyPh))))
   (g$get-full-path$5315$1bEyPh
     g$get-full-path$5381$1bEyPh
     (case-lambda
       ((g$path$5357$1bEyPh)
        (clr-call-internal 'path 'getfullpath '() g$path$5357$1bEyPh))))
   (g$get-path-root$5316$1bEyPh
     g$get-path-root$5382$1bEyPh
     (case-lambda
       ((g$path$5358$1bEyPh)
        (clr-call-internal 'path 'getpathroot '() g$path$5358$1bEyPh))))
   (g$get-random-filename$5317$1bEyPh
     g$get-random-filename$5383$1bEyPh
     (case-lambda (() (clr-call-internal 'path 'getrandomfilename '()))))
   (g$get-temp-filename$5318$1bEyPh
     g$get-temp-filename$5384$1bEyPh
     (case-lambda (() (clr-call-internal 'path 'gettempfilename '()))))
   (g$get-temp-path$5319$1bEyPh
     g$get-temp-path$5385$1bEyPh
     (case-lambda (() (clr-call-internal 'path 'gettemppath '()))))
   (g$path-rooted?$5320$1bEyPh
     g$path-rooted?$5386$1bEyPh
     (case-lambda
       ((g$path$5359$1bEyPh)
        (clr-call-internal 'path 'ispathrooted '() g$path$5359$1bEyPh))))
   (g$path-has-extension?$5321$1bEyPh
     g$path-has-extension?$5387$1bEyPh
     (case-lambda
       ((g$path$5360$1bEyPh)
        (clr-call-internal 'path 'hasextension '() g$path$5360$1bEyPh))))
   (g$clear-usings$5323$1bEyPh
     g$clear-usings$5388$1bEyPh
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme lists)
  ((g$find$5389$1bEyPh
     g$find$5480$1bEyPh
     (case-lambda
       ((g$proc$5408$1bEyPh g$l$5409$1bEyPh)
        (if (null? g$l$5409$1bEyPh)
          '#f
          ((case-lambda
             ((g$e$5410$1bEyPh)
              (if (g$proc$5408$1bEyPh g$e$5410$1bEyPh)
                g$e$5410$1bEyPh
                (g$find$5389$1bEyPh g$proc$5408$1bEyPh (cdr g$l$5409$1bEyPh)))))
           (car g$l$5409$1bEyPh))))))
   (g$partition$5390$1bEyPh
     g$partition$5481$1bEyPh
     (case-lambda
       ((g$proc$5411$1bEyPh g$l$5412$1bEyPh)
        ((letrec ((g$f$5413$1bEyPh
                    (case-lambda
                      ((g$l$5414$1bEyPh g$a$5415$1bEyPh g$b$5416$1bEyPh)
                       (if (null? g$l$5414$1bEyPh)
                         (values
                           (reverse! g$a$5415$1bEyPh)
                           (reverse! g$b$5416$1bEyPh))
                         ((case-lambda
                            ((g$e$5417$1bEyPh)
                             (if (g$proc$5411$1bEyPh g$e$5417$1bEyPh)
                               (g$f$5413$1bEyPh
                                 (cdr g$l$5414$1bEyPh)
                                 (cons g$e$5417$1bEyPh g$a$5415$1bEyPh)
                                 g$b$5416$1bEyPh)
                               (g$f$5413$1bEyPh
                                 (cdr g$l$5414$1bEyPh)
                                 g$a$5415$1bEyPh
                                 (cons g$e$5417$1bEyPh g$b$5416$1bEyPh)))))
                          (car g$l$5414$1bEyPh)))))))
           g$f$5413$1bEyPh)
         g$l$5412$1bEyPh
         '()
         '()))))
   (g$remp$5391$1bEyPh
     g$remp$5482$1bEyPh
     (case-lambda
       ((g$proc$5418$1bEyPh g$l$5419$1bEyPh)
        ((letrec ((g$f$5420$1bEyPh
                    (case-lambda
                      ((g$l$5421$1bEyPh g$a$5422$1bEyPh)
                       (if (null? g$l$5421$1bEyPh)
                         (reverse! g$a$5422$1bEyPh)
                         ((case-lambda
                            ((g$e$5423$1bEyPh)
                             (if (g$proc$5418$1bEyPh g$e$5423$1bEyPh)
                               (g$f$5420$1bEyPh
                                 (cdr g$l$5421$1bEyPh)
                                 g$a$5422$1bEyPh)
                               (g$f$5420$1bEyPh
                                 (cdr g$l$5421$1bEyPh)
                                 (cons g$e$5423$1bEyPh g$a$5422$1bEyPh)))))
                          (car g$l$5421$1bEyPh)))))))
           g$f$5420$1bEyPh)
         g$l$5419$1bEyPh
         '()))))
   (g$filter$5392$1bEyPh
     g$filter$5483$1bEyPh
     (case-lambda
       ((g$proc$5424$1bEyPh g$l$5425$1bEyPh)
        ((letrec ((g$f$5426$1bEyPh
                    (case-lambda
                      ((g$l$5427$1bEyPh g$a$5428$1bEyPh)
                       (if (null? g$l$5427$1bEyPh)
                         (reverse! g$a$5428$1bEyPh)
                         ((case-lambda
                            ((g$e$5429$1bEyPh)
                             (if (g$proc$5424$1bEyPh g$e$5429$1bEyPh)
                               (g$f$5426$1bEyPh
                                 (cdr g$l$5427$1bEyPh)
                                 (cons g$e$5429$1bEyPh g$a$5428$1bEyPh))
                               (g$f$5426$1bEyPh
                                 (cdr g$l$5427$1bEyPh)
                                 g$a$5428$1bEyPh))))
                          (car g$l$5427$1bEyPh)))))))
           g$f$5426$1bEyPh)
         g$l$5425$1bEyPh
         '()))))
   (g$assv$5393$1bEyPh
     g$assv$5484$1bEyPh
     (case-lambda
       ((g$obj$5430$1bEyPh g$lst$5431$1bEyPh)
        (if (null? g$lst$5431$1bEyPh)
          '#f
          ((case-lambda
             ((g$c$5432$1bEyPh)
              (if (eqv? g$obj$5430$1bEyPh (car g$c$5432$1bEyPh))
                g$c$5432$1bEyPh
                (g$assv$5393$1bEyPh
                  g$obj$5430$1bEyPh
                  (cdr g$lst$5431$1bEyPh)))))
           (car g$lst$5431$1bEyPh))))))
   (g$assoc$5394$1bEyPh
     g$assoc$5485$1bEyPh
     (case-lambda
       ((g$obj$5433$1bEyPh g$lst$5434$1bEyPh)
        (if (null? g$lst$5434$1bEyPh)
          '#f
          ((case-lambda
             ((g$c$5435$1bEyPh)
              (if (equal? g$obj$5433$1bEyPh (car g$c$5435$1bEyPh))
                g$c$5435$1bEyPh
                (g$assoc$5394$1bEyPh
                  g$obj$5433$1bEyPh
                  (cdr g$lst$5434$1bEyPh)))))
           (car g$lst$5434$1bEyPh))))))
   (g$assp$5395$1bEyPh
     g$assp$5486$1bEyPh
     (case-lambda
       ((g$p?$5436$1bEyPh g$lst$5437$1bEyPh)
        (if (null? g$lst$5437$1bEyPh)
          '#f
          ((case-lambda
             ((g$c$5438$1bEyPh)
              (if (g$p?$5436$1bEyPh (car g$c$5438$1bEyPh))
                g$c$5438$1bEyPh
                (g$assp$5395$1bEyPh g$p?$5436$1bEyPh (cdr g$lst$5437$1bEyPh)))))
           (car g$lst$5437$1bEyPh))))))
   (g$member$5396$1bEyPh
     g$member$5487$1bEyPh
     (case-lambda
       ((g$obj$5439$1bEyPh g$lst$5440$1bEyPh)
        (if (null? g$lst$5440$1bEyPh)
          '#f
          (if (equal? g$obj$5439$1bEyPh (car g$lst$5440$1bEyPh))
            g$lst$5440$1bEyPh
            (g$member$5396$1bEyPh
              g$obj$5439$1bEyPh
              (cdr g$lst$5440$1bEyPh)))))))
   (g$memp$5397$1bEyPh
     g$memp$5488$1bEyPh
     (case-lambda
       ((g$p?$5441$1bEyPh g$lst$5442$1bEyPh)
        (if (null? g$lst$5442$1bEyPh)
          '#f
          (if (g$p?$5441$1bEyPh (car g$lst$5442$1bEyPh))
            g$lst$5442$1bEyPh
            (g$memp$5397$1bEyPh g$p?$5441$1bEyPh (cdr g$lst$5442$1bEyPh)))))))
   (g$all-empty?$5398$1bEyPh
     g$all-empty?$5489$1bEyPh
     (case-lambda
       ((g$ls$5443$1bEyPh)
        ((case-lambda
           ((g$t$5444$1bEyPh)
            (if g$t$5444$1bEyPh
              g$t$5444$1bEyPh
              (begin
                '#f
                (if (null? (car g$ls$5443$1bEyPh))
                  (begin '#f (g$all-empty?$5398$1bEyPh (cdr g$ls$5443$1bEyPh)))
                  '#f)))))
         (null? g$ls$5443$1bEyPh)))))
   (g$split$5399$1bEyPh
     g$split$5490$1bEyPh
     (case-lambda
       ((g$ls$5445$1bEyPh)
        (if (null? g$ls$5445$1bEyPh)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5399$1bEyPh (cdr g$ls$5445$1bEyPh))))
            (case-lambda
              ((g$cars$5446$1bEyPh g$cdrs$5447$1bEyPh)
               ((case-lambda
                  ((g$a$5448$1bEyPh)
                   (values
                     (cons (car g$a$5448$1bEyPh) g$cars$5446$1bEyPh)
                     (cons (cdr g$a$5448$1bEyPh) g$cdrs$5447$1bEyPh))))
                (car g$ls$5445$1bEyPh)))))))))
   (g$for-all$5400$1bEyPh
     g$for-all$5491$1bEyPh
     (case-lambda
       ((g$f$5449$1bEyPh . g$args$5450$1bEyPh)
        (if (g$all-empty?$5398$1bEyPh g$args$5450$1bEyPh)
          '#t
          (call-with-values
            (case-lambda (() (g$split$5399$1bEyPh g$args$5450$1bEyPh)))
            (case-lambda
              ((g$cars$5451$1bEyPh g$cdrs$5452$1bEyPh)
               (if (g$all-empty?$5398$1bEyPh g$cdrs$5452$1bEyPh)
                 (apply g$f$5449$1bEyPh g$cars$5451$1bEyPh)
                 (if (apply g$f$5449$1bEyPh g$cars$5451$1bEyPh)
                   (begin
                     '#f
                     (apply
                       g$for-all$5400$1bEyPh
                       g$f$5449$1bEyPh
                       g$cdrs$5452$1bEyPh))
                   '#f)))))))))
   (g$exists$5401$1bEyPh
     g$exists$5492$1bEyPh
     (case-lambda
       ((g$f$5453$1bEyPh . g$args$5454$1bEyPh)
        (if (g$all-empty?$5398$1bEyPh g$args$5454$1bEyPh)
          '#f
          (call-with-values
            (case-lambda (() (g$split$5399$1bEyPh g$args$5454$1bEyPh)))
            (case-lambda
              ((g$cars$5455$1bEyPh g$cdrs$5456$1bEyPh)
               ((case-lambda
                  ((g$t$5457$1bEyPh)
                   (if g$t$5457$1bEyPh
                     g$t$5457$1bEyPh
                     (begin
                       '#f
                       (apply
                         g$exists$5401$1bEyPh
                         g$f$5453$1bEyPh
                         g$cdrs$5456$1bEyPh)))))
                (apply g$f$5453$1bEyPh g$cars$5455$1bEyPh)))))))))
   (g$cons*$5402$1bEyPh
     g$cons*$5493$1bEyPh
     (case-lambda
       ((g$a$5458$1bEyPh . g$rest$5459$1bEyPh)
        ((letrec ((g$f$5460$1bEyPh
                    (case-lambda
                      ((g$a$5461$1bEyPh g$rest$5462$1bEyPh)
                       (if (null? g$rest$5462$1bEyPh)
                         g$a$5461$1bEyPh
                         (cons
                           g$a$5461$1bEyPh
                           (g$f$5460$1bEyPh
                             (car g$rest$5462$1bEyPh)
                             (cdr g$rest$5462$1bEyPh))))))))
           g$f$5460$1bEyPh)
         g$a$5458$1bEyPh
         g$rest$5459$1bEyPh))))
   (g$fold-left$5403$1bEyPh
     g$fold-left$5494$1bEyPh
     (case-lambda
       ((g$combine$5463$1bEyPh
          g$nil$5464$1bEyPh
          g$list1$5465$1bEyPh
          .
          g$lists$5466$1bEyPh)
        (if (null? g$list1$5465$1bEyPh)
          g$nil$5464$1bEyPh
          (apply
            g$fold-left$5403$1bEyPh
            (g$cons*$5402$1bEyPh
              g$combine$5463$1bEyPh
              (apply
                g$combine$5463$1bEyPh
                (g$cons*$5402$1bEyPh
                  g$nil$5464$1bEyPh
                  (car g$list1$5465$1bEyPh)
                  (map car g$lists$5466$1bEyPh)))
              (cdr g$list1$5465$1bEyPh)
              (map cdr g$lists$5466$1bEyPh)))))))
   (g$fold-right$5404$1bEyPh
     g$fold-right$5495$1bEyPh
     (case-lambda
       ((g$combine$5467$1bEyPh
          g$nil$5468$1bEyPh
          g$list1$5469$1bEyPh
          .
          g$lists$5470$1bEyPh)
        (if (null? g$list1$5469$1bEyPh)
          g$nil$5468$1bEyPh
          (apply
            g$combine$5467$1bEyPh
            (append
              (list (car g$list1$5469$1bEyPh))
              (map car g$lists$5470$1bEyPh)
              (list
                (apply
                  g$fold-right$5404$1bEyPh
                  (g$cons*$5402$1bEyPh
                    g$combine$5467$1bEyPh
                    g$nil$5468$1bEyPh
                    (cdr g$list1$5469$1bEyPh)
                    (map cdr g$lists$5470$1bEyPh))))))))))
   (g$remove$5405$1bEyPh
     g$remove$5496$1bEyPh
     (case-lambda
       ((g$obj$5471$1bEyPh g$list$5472$1bEyPh)
        (g$remp$5391$1bEyPh
          (case-lambda
            ((g$x$5473$1bEyPh) (equal? g$obj$5471$1bEyPh g$x$5473$1bEyPh)))
          g$list$5472$1bEyPh))))
   (g$remv$5406$1bEyPh
     g$remv$5497$1bEyPh
     (case-lambda
       ((g$obj$5474$1bEyPh g$list$5475$1bEyPh)
        (g$remp$5391$1bEyPh
          (case-lambda
            ((g$x$5476$1bEyPh) (eqv? g$obj$5474$1bEyPh g$x$5476$1bEyPh)))
          g$list$5475$1bEyPh))))
   (g$remq$5407$1bEyPh
     g$remq$5498$1bEyPh
     (case-lambda
       ((g$obj$5477$1bEyPh g$list$5478$1bEyPh)
        (g$remp$5391$1bEyPh
          (case-lambda
            ((g$x$5479$1bEyPh) (eq? g$obj$5477$1bEyPh g$x$5479$1bEyPh)))
          g$list$5478$1bEyPh)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5499$1bEyPh
     g$native-endianness$5610$1bEyPh
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5500$1bEyPh
     g$bytevector-u16-ref$5611$1bEyPh
     (case-lambda
       ((g$bytevector$5528$1bEyPh g$k$5529$1bEyPh g$endianness$5530$1bEyPh)
        (bytevector-uint-ref
          g$bytevector$5528$1bEyPh
          g$k$5529$1bEyPh
          g$endianness$5530$1bEyPh
          '2))))
   (g$bytevector-s16-ref$5501$1bEyPh
     g$bytevector-s16-ref$5612$1bEyPh
     (case-lambda
       ((g$bytevector$5531$1bEyPh g$k$5532$1bEyPh g$endianness$5533$1bEyPh)
        (bytevector-sint-ref
          g$bytevector$5531$1bEyPh
          g$k$5532$1bEyPh
          g$endianness$5533$1bEyPh
          '2))))
   (g$bytevector-u16-native-ref$5502$1bEyPh
     g$bytevector-u16-native-ref$5613$1bEyPh
     (case-lambda
       ((g$bytevector$5534$1bEyPh g$k$5535$1bEyPh)
        (bytevector-uint-ref
          g$bytevector$5534$1bEyPh
          g$k$5535$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '2))))
   (g$bytevector-s16-native-ref$5503$1bEyPh
     g$bytevector-s16-native-ref$5614$1bEyPh
     (case-lambda
       ((g$bytevector$5536$1bEyPh g$k$5537$1bEyPh)
        (bytevector-sint-ref
          g$bytevector$5536$1bEyPh
          g$k$5537$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '2))))
   (g$bytevector-u16-set!$5504$1bEyPh
     g$bytevector-u16-set!$5615$1bEyPh
     (case-lambda
       ((g$bytevector$5538$1bEyPh
          g$k$5539$1bEyPh
          g$n$5540$1bEyPh
          g$endianness$5541$1bEyPh)
        (bytevector-uint-set!
          g$bytevector$5538$1bEyPh
          g$k$5539$1bEyPh
          g$n$5540$1bEyPh
          g$endianness$5541$1bEyPh
          '2))))
   (g$bytevector-s16-set!$5505$1bEyPh
     g$bytevector-s16-set!$5616$1bEyPh
     (case-lambda
       ((g$bytevector$5542$1bEyPh
          g$k$5543$1bEyPh
          g$n$5544$1bEyPh
          g$endianness$5545$1bEyPh)
        (bytevector-sint-set!
          g$bytevector$5542$1bEyPh
          g$k$5543$1bEyPh
          g$n$5544$1bEyPh
          g$endianness$5545$1bEyPh
          '2))))
   (g$bytevector-u16-native-set!$5506$1bEyPh
     g$bytevector-u16-native-set!$5617$1bEyPh
     (case-lambda
       ((g$bytevector$5546$1bEyPh g$k$5547$1bEyPh g$n$5548$1bEyPh)
        (bytevector-uint-set!
          g$bytevector$5546$1bEyPh
          g$k$5547$1bEyPh
          g$n$5548$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '2))))
   (g$bytevector-s16-native-set!$5507$1bEyPh
     g$bytevector-s16-native-set!$5618$1bEyPh
     (case-lambda
       ((g$bytevector$5549$1bEyPh g$k$5550$1bEyPh g$n$5551$1bEyPh)
        (bytevector-sint-set!
          g$bytevector$5549$1bEyPh
          g$k$5550$1bEyPh
          g$n$5551$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '2))))
   (g$bytevector-u32-ref$5508$1bEyPh
     g$bytevector-u32-ref$5619$1bEyPh
     (case-lambda
       ((g$bytevector$5552$1bEyPh g$k$5553$1bEyPh g$endianness$5554$1bEyPh)
        (bytevector-uint-ref
          g$bytevector$5552$1bEyPh
          g$k$5553$1bEyPh
          g$endianness$5554$1bEyPh
          '4))))
   (g$bytevector-s32-ref$5509$1bEyPh
     g$bytevector-s32-ref$5620$1bEyPh
     (case-lambda
       ((g$bytevector$5555$1bEyPh g$k$5556$1bEyPh g$endianness$5557$1bEyPh)
        (bytevector-sint-ref
          g$bytevector$5555$1bEyPh
          g$k$5556$1bEyPh
          g$endianness$5557$1bEyPh
          '4))))
   (g$bytevector-u32-native-ref$5510$1bEyPh
     g$bytevector-u32-native-ref$5621$1bEyPh
     (case-lambda
       ((g$bytevector$5558$1bEyPh g$k$5559$1bEyPh)
        (bytevector-uint-ref
          g$bytevector$5558$1bEyPh
          g$k$5559$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '4))))
   (g$bytevector-s32-native-ref$5511$1bEyPh
     g$bytevector-s32-native-ref$5622$1bEyPh
     (case-lambda
       ((g$bytevector$5560$1bEyPh g$k$5561$1bEyPh)
        (bytevector-sint-ref
          g$bytevector$5560$1bEyPh
          g$k$5561$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '4))))
   (g$bytevector-u32-set!$5512$1bEyPh
     g$bytevector-u32-set!$5623$1bEyPh
     (case-lambda
       ((g$bytevector$5562$1bEyPh
          g$k$5563$1bEyPh
          g$n$5564$1bEyPh
          g$endianness$5565$1bEyPh)
        (bytevector-uint-set!
          g$bytevector$5562$1bEyPh
          g$k$5563$1bEyPh
          g$n$5564$1bEyPh
          g$endianness$5565$1bEyPh
          '4))))
   (g$bytevector-s32-set!$5513$1bEyPh
     g$bytevector-s32-set!$5624$1bEyPh
     (case-lambda
       ((g$bytevector$5566$1bEyPh
          g$k$5567$1bEyPh
          g$n$5568$1bEyPh
          g$endianness$5569$1bEyPh)
        (bytevector-sint-set!
          g$bytevector$5566$1bEyPh
          g$k$5567$1bEyPh
          g$n$5568$1bEyPh
          g$endianness$5569$1bEyPh
          '4))))
   (g$bytevector-u32-native-set!$5514$1bEyPh
     g$bytevector-u32-native-set!$5625$1bEyPh
     (case-lambda
       ((g$bytevector$5570$1bEyPh g$k$5571$1bEyPh g$n$5572$1bEyPh)
        (bytevector-uint-set!
          g$bytevector$5570$1bEyPh
          g$k$5571$1bEyPh
          g$n$5572$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '4))))
   (g$bytevector-s32-native-set!$5515$1bEyPh
     g$bytevector-s32-native-set!$5626$1bEyPh
     (case-lambda
       ((g$bytevector$5573$1bEyPh g$k$5574$1bEyPh g$n$5575$1bEyPh)
        (bytevector-sint-set!
          g$bytevector$5573$1bEyPh
          g$k$5574$1bEyPh
          g$n$5575$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '4))))
   (g$bytevector-u64-ref$5516$1bEyPh
     g$bytevector-u64-ref$5627$1bEyPh
     (case-lambda
       ((g$bytevector$5576$1bEyPh g$k$5577$1bEyPh g$endianness$5578$1bEyPh)
        (bytevector-uint-ref
          g$bytevector$5576$1bEyPh
          g$k$5577$1bEyPh
          g$endianness$5578$1bEyPh
          '8))))
   (g$bytevector-s64-ref$5517$1bEyPh
     g$bytevector-s64-ref$5628$1bEyPh
     (case-lambda
       ((g$bytevector$5579$1bEyPh g$k$5580$1bEyPh g$endianness$5581$1bEyPh)
        (bytevector-sint-ref
          g$bytevector$5579$1bEyPh
          g$k$5580$1bEyPh
          g$endianness$5581$1bEyPh
          '8))))
   (g$bytevector-u64-native-ref$5518$1bEyPh
     g$bytevector-u64-native-ref$5629$1bEyPh
     (case-lambda
       ((g$bytevector$5582$1bEyPh g$k$5583$1bEyPh)
        (bytevector-uint-ref
          g$bytevector$5582$1bEyPh
          g$k$5583$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '8))))
   (g$bytevector-s64-native-ref$5519$1bEyPh
     g$bytevector-s64-native-ref$5630$1bEyPh
     (case-lambda
       ((g$bytevector$5584$1bEyPh g$k$5585$1bEyPh)
        (bytevector-sint-ref
          g$bytevector$5584$1bEyPh
          g$k$5585$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '8))))
   (g$bytevector-u64-set!$5520$1bEyPh
     g$bytevector-u64-set!$5631$1bEyPh
     (case-lambda
       ((g$bytevector$5586$1bEyPh
          g$k$5587$1bEyPh
          g$n$5588$1bEyPh
          g$endianness$5589$1bEyPh)
        (bytevector-uint-set!
          g$bytevector$5586$1bEyPh
          g$k$5587$1bEyPh
          g$n$5588$1bEyPh
          g$endianness$5589$1bEyPh
          '8))))
   (g$bytevector-s64-set!$5521$1bEyPh
     g$bytevector-s64-set!$5632$1bEyPh
     (case-lambda
       ((g$bytevector$5590$1bEyPh
          g$k$5591$1bEyPh
          g$n$5592$1bEyPh
          g$endianness$5593$1bEyPh)
        (bytevector-sint-set!
          g$bytevector$5590$1bEyPh
          g$k$5591$1bEyPh
          g$n$5592$1bEyPh
          g$endianness$5593$1bEyPh
          '8))))
   (g$bytevector-u64-native-set!$5522$1bEyPh
     g$bytevector-u64-native-set!$5633$1bEyPh
     (case-lambda
       ((g$bytevector$5594$1bEyPh g$k$5595$1bEyPh g$n$5596$1bEyPh)
        (bytevector-uint-set!
          g$bytevector$5594$1bEyPh
          g$k$5595$1bEyPh
          g$n$5596$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '8))))
   (g$bytevector-s64-native-set!$5523$1bEyPh
     g$bytevector-s64-native-set!$5634$1bEyPh
     (case-lambda
       ((g$bytevector$5597$1bEyPh g$k$5598$1bEyPh g$n$5599$1bEyPh)
        (bytevector-sint-set!
          g$bytevector$5597$1bEyPh
          g$k$5598$1bEyPh
          g$n$5599$1bEyPh
          (g$native-endianness$5499$1bEyPh)
          '8))))
   (g$bytevector-ieee-single-native-ref$5524$1bEyPh
     g$bytevector-ieee-single-native-ref$5635$1bEyPh
     (case-lambda
       ((g$bytevector$5600$1bEyPh g$k$5601$1bEyPh)
        (if (not (zero? (mod g$k$5601$1bEyPh '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5601$1bEyPh)
          (bytevector-ieee-single-ref
            g$bytevector$5600$1bEyPh
            g$k$5601$1bEyPh
            (g$native-endianness$5499$1bEyPh))))))
   (g$bytevector-ieee-double-native-ref$5525$1bEyPh
     g$bytevector-ieee-double-native-ref$5636$1bEyPh
     (case-lambda
       ((g$bytevector$5602$1bEyPh g$k$5603$1bEyPh)
        (if (not (zero? (mod g$k$5603$1bEyPh '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5603$1bEyPh)
          (bytevector-ieee-double-ref
            g$bytevector$5602$1bEyPh
            g$k$5603$1bEyPh
            (g$native-endianness$5499$1bEyPh))))))
   (g$bytevector-ieee-single-native-set!$5526$1bEyPh
     g$bytevector-ieee-single-native-set!$5637$1bEyPh
     (case-lambda
       ((g$bytevector$5604$1bEyPh g$k$5605$1bEyPh g$x$5606$1bEyPh)
        (if (not (zero? (mod g$k$5605$1bEyPh '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5605$1bEyPh)
          (bytevector-ieee-single-set!
            g$bytevector$5604$1bEyPh
            g$k$5605$1bEyPh
            g$x$5606$1bEyPh
            (g$native-endianness$5499$1bEyPh))))))
   (g$bytevector-ieee-double-native-set!$5527$1bEyPh
     g$bytevector-ieee-double-native-set!$5638$1bEyPh
     (case-lambda
       ((g$bytevector$5607$1bEyPh g$k$5608$1bEyPh g$x$5609$1bEyPh)
        (if (not (zero? (mod g$k$5608$1bEyPh '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5608$1bEyPh)
          (bytevector-ieee-double-set!
            g$bytevector$5607$1bEyPh
            g$k$5608$1bEyPh
            g$x$5609$1bEyPh
            (g$native-endianness$5499$1bEyPh)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6649$5639$1bEyPh
     g$6649$5734$1bEyPh
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6652$1bEyPh
       '#f
       '#f
       '#()))
   (g$6651$5640$1bEyPh g$6651$5735$1bEyPh '#f)
   (g$6650$5641$1bEyPh
     g$6650$5736$1bEyPh
     (make-record-constructor-descriptor
       g$6649$5639$1bEyPh
       '#f
       g$6651$5640$1bEyPh))
   (g$&condition?$5642$1bEyPh
     g$&condition?$5737$1bEyPh
     (record-predicate g$6649$5639$1bEyPh))
   (g$make-&condition$5643$1bEyPh
     g$make-&condition$5738$1bEyPh
     (record-constructor g$6650$5641$1bEyPh))
   (g$&condition-rtd$5644$1bEyPh
     g$&condition-rtd$5739$1bEyPh
     g$6649$5639$1bEyPh)
   (g$&condition-rcd$5645$1bEyPh
     g$&condition-rcd$5740$1bEyPh
     g$6650$5641$1bEyPh)
   (g$6665$5646$1bEyPh
     g$6665$5741$1bEyPh
     (make-record-type-descriptor
       '&message
       g$6649$5639$1bEyPh
       'g$6668$1bEyPh
       '#f
       '#f
       '#((immutable message))))
   (g$6667$5647$1bEyPh g$6667$5742$1bEyPh '#f)
   (g$6666$5648$1bEyPh
     g$6666$5743$1bEyPh
     (make-record-constructor-descriptor
       g$6665$5646$1bEyPh
       g$6650$5641$1bEyPh
       g$6667$5647$1bEyPh))
   (g$6664$5649$1bEyPh
     g$6664$5744$1bEyPh
     (record-predicate g$6665$5646$1bEyPh))
   (g$make-message-condition$5650$1bEyPh
     g$make-message-condition$5745$1bEyPh
     (record-constructor g$6666$5648$1bEyPh))
   (g$6663$5651$1bEyPh
     g$6663$5746$1bEyPh
     (record-accessor g$6665$5646$1bEyPh '0))
   (g$message-condition?$5652$1bEyPh
     g$message-condition?$5747$1bEyPh
     (condition-predicate g$6665$5646$1bEyPh))
   (g$condition-message$5653$1bEyPh
     g$condition-message$5748$1bEyPh
     (condition-accessor g$6665$5646$1bEyPh g$6663$5651$1bEyPh))
   (g$6681$5654$1bEyPh
     g$6681$5749$1bEyPh
     (make-record-type-descriptor
       '&warning
       g$6649$5639$1bEyPh
       'g$6684$1bEyPh
       '#f
       '#f
       '#()))
   (g$6683$5655$1bEyPh g$6683$5750$1bEyPh '#f)
   (g$6682$5656$1bEyPh
     g$6682$5751$1bEyPh
     (make-record-constructor-descriptor
       g$6681$5654$1bEyPh
       g$6650$5641$1bEyPh
       g$6683$5655$1bEyPh))
   (g$6680$5657$1bEyPh
     g$6680$5752$1bEyPh
     (record-predicate g$6681$5654$1bEyPh))
   (g$make-warning$5658$1bEyPh
     g$make-warning$5753$1bEyPh
     (record-constructor g$6682$5656$1bEyPh))
   (g$warning?$5659$1bEyPh
     g$warning?$5754$1bEyPh
     (condition-predicate g$6681$5654$1bEyPh))
   (g$6695$5660$1bEyPh
     g$6695$5755$1bEyPh
     (make-record-type-descriptor
       '&serious
       g$6649$5639$1bEyPh
       'g$6698$1bEyPh
       '#f
       '#f
       '#()))
   (g$6697$5661$1bEyPh g$6697$5756$1bEyPh '#f)
   (g$6696$5662$1bEyPh
     g$6696$5757$1bEyPh
     (make-record-constructor-descriptor
       g$6695$5660$1bEyPh
       g$6650$5641$1bEyPh
       g$6697$5661$1bEyPh))
   (g$6694$5663$1bEyPh
     g$6694$5758$1bEyPh
     (record-predicate g$6695$5660$1bEyPh))
   (g$make-serious-condition$5664$1bEyPh
     g$make-serious-condition$5759$1bEyPh
     (record-constructor g$6696$5662$1bEyPh))
   (g$serious-condition?$5665$1bEyPh
     g$serious-condition?$5760$1bEyPh
     (condition-predicate g$6695$5660$1bEyPh))
   (g$6709$5666$1bEyPh
     g$6709$5761$1bEyPh
     (make-record-type-descriptor
       '&error
       g$6695$5660$1bEyPh
       'g$6712$1bEyPh
       '#f
       '#f
       '#()))
   (g$6711$5667$1bEyPh g$6711$5762$1bEyPh '#f)
   (g$6710$5668$1bEyPh
     g$6710$5763$1bEyPh
     (make-record-constructor-descriptor
       g$6709$5666$1bEyPh
       g$6696$5662$1bEyPh
       g$6711$5667$1bEyPh))
   (g$6708$5669$1bEyPh
     g$6708$5764$1bEyPh
     (record-predicate g$6709$5666$1bEyPh))
   (g$make-error$5670$1bEyPh
     g$make-error$5765$1bEyPh
     (record-constructor g$6710$5668$1bEyPh))
   (g$error?$5671$1bEyPh
     g$error?$5766$1bEyPh
     (condition-predicate g$6709$5666$1bEyPh))
   (g$6723$5672$1bEyPh
     g$6723$5767$1bEyPh
     (make-record-type-descriptor
       '&violation
       g$6695$5660$1bEyPh
       'g$6726$1bEyPh
       '#f
       '#f
       '#()))
   (g$6725$5673$1bEyPh g$6725$5768$1bEyPh '#f)
   (g$6724$5674$1bEyPh
     g$6724$5769$1bEyPh
     (make-record-constructor-descriptor
       g$6723$5672$1bEyPh
       g$6696$5662$1bEyPh
       g$6725$5673$1bEyPh))
   (g$6722$5675$1bEyPh
     g$6722$5770$1bEyPh
     (record-predicate g$6723$5672$1bEyPh))
   (g$make-violation$5676$1bEyPh
     g$make-violation$5771$1bEyPh
     (record-constructor g$6724$5674$1bEyPh))
   (g$violation?$5677$1bEyPh
     g$violation?$5772$1bEyPh
     (condition-predicate g$6723$5672$1bEyPh))
   (g$6737$5678$1bEyPh
     g$6737$5773$1bEyPh
     (make-record-type-descriptor
       '&assertion
       g$6723$5672$1bEyPh
       'g$6740$1bEyPh
       '#f
       '#f
       '#()))
   (g$6739$5679$1bEyPh g$6739$5774$1bEyPh '#f)
   (g$6738$5680$1bEyPh
     g$6738$5775$1bEyPh
     (make-record-constructor-descriptor
       g$6737$5678$1bEyPh
       g$6724$5674$1bEyPh
       g$6739$5679$1bEyPh))
   (g$6736$5681$1bEyPh
     g$6736$5776$1bEyPh
     (record-predicate g$6737$5678$1bEyPh))
   (g$make-assertion-violation$5682$1bEyPh
     g$make-assertion-violation$5777$1bEyPh
     (record-constructor g$6738$5680$1bEyPh))
   (g$assertion-violation?$5683$1bEyPh
     g$assertion-violation?$5778$1bEyPh
     (condition-predicate g$6737$5678$1bEyPh))
   (g$6752$5684$1bEyPh
     g$6752$5779$1bEyPh
     (make-record-type-descriptor
       '&irritants
       g$6649$5639$1bEyPh
       'g$6755$1bEyPh
       '#f
       '#f
       '#((immutable irritants))))
   (g$6754$5685$1bEyPh g$6754$5780$1bEyPh '#f)
   (g$6753$5686$1bEyPh
     g$6753$5781$1bEyPh
     (make-record-constructor-descriptor
       g$6752$5684$1bEyPh
       g$6650$5641$1bEyPh
       g$6754$5685$1bEyPh))
   (g$6751$5687$1bEyPh
     g$6751$5782$1bEyPh
     (record-predicate g$6752$5684$1bEyPh))
   (g$make-irritants-condition$5688$1bEyPh
     g$make-irritants-condition$5783$1bEyPh
     (record-constructor g$6753$5686$1bEyPh))
   (g$6750$5689$1bEyPh
     g$6750$5784$1bEyPh
     (record-accessor g$6752$5684$1bEyPh '0))
   (g$irritants-condition?$5690$1bEyPh
     g$irritants-condition?$5785$1bEyPh
     (condition-predicate g$6752$5684$1bEyPh))
   (g$condition-irritants$5691$1bEyPh
     g$condition-irritants$5786$1bEyPh
     (condition-accessor g$6752$5684$1bEyPh g$6750$5689$1bEyPh))
   (g$6769$5692$1bEyPh
     g$6769$5787$1bEyPh
     (make-record-type-descriptor
       '&who
       g$6649$5639$1bEyPh
       'g$6772$1bEyPh
       '#f
       '#f
       '#((immutable who))))
   (g$6771$5693$1bEyPh g$6771$5788$1bEyPh '#f)
   (g$6770$5694$1bEyPh
     g$6770$5789$1bEyPh
     (make-record-constructor-descriptor
       g$6769$5692$1bEyPh
       g$6650$5641$1bEyPh
       g$6771$5693$1bEyPh))
   (g$6768$5695$1bEyPh
     g$6768$5790$1bEyPh
     (record-predicate g$6769$5692$1bEyPh))
   (g$make-who-condition$5696$1bEyPh
     g$make-who-condition$5791$1bEyPh
     (record-constructor g$6770$5694$1bEyPh))
   (g$6767$5697$1bEyPh
     g$6767$5792$1bEyPh
     (record-accessor g$6769$5692$1bEyPh '0))
   (g$who-condition?$5698$1bEyPh
     g$who-condition?$5793$1bEyPh
     (condition-predicate g$6769$5692$1bEyPh))
   (g$condition-who$5699$1bEyPh
     g$condition-who$5794$1bEyPh
     (condition-accessor g$6769$5692$1bEyPh g$6767$5697$1bEyPh))
   (g$6785$5700$1bEyPh
     g$6785$5795$1bEyPh
     (make-record-type-descriptor
       '&non-continuable
       g$6723$5672$1bEyPh
       'g$6788$1bEyPh
       '#f
       '#f
       '#()))
   (g$6787$5701$1bEyPh g$6787$5796$1bEyPh '#f)
   (g$6786$5702$1bEyPh
     g$6786$5797$1bEyPh
     (make-record-constructor-descriptor
       g$6785$5700$1bEyPh
       g$6724$5674$1bEyPh
       g$6787$5701$1bEyPh))
   (g$6784$5703$1bEyPh
     g$6784$5798$1bEyPh
     (record-predicate g$6785$5700$1bEyPh))
   (g$make-non-continuable-violation$5704$1bEyPh
     g$make-non-continuable-violation$5799$1bEyPh
     (record-constructor g$6786$5702$1bEyPh))
   (g$non-continuable-violation?$5705$1bEyPh
     g$non-continuable-violation?$5800$1bEyPh
     (condition-predicate g$6785$5700$1bEyPh))
   (g$6799$5706$1bEyPh
     g$6799$5801$1bEyPh
     (make-record-type-descriptor
       '&implementation-restriction
       g$6723$5672$1bEyPh
       'g$6802$1bEyPh
       '#f
       '#f
       '#()))
   (g$6801$5707$1bEyPh g$6801$5802$1bEyPh '#f)
   (g$6800$5708$1bEyPh
     g$6800$5803$1bEyPh
     (make-record-constructor-descriptor
       g$6799$5706$1bEyPh
       g$6724$5674$1bEyPh
       g$6801$5707$1bEyPh))
   (g$6798$5709$1bEyPh
     g$6798$5804$1bEyPh
     (record-predicate g$6799$5706$1bEyPh))
   (g$make-implementation-restriction-violation$5710$1bEyPh
     g$make-implementation-restriction-violation$5805$1bEyPh
     (record-constructor g$6800$5708$1bEyPh))
   (g$implementation-restriction-violation?$5711$1bEyPh
     g$implementation-restriction-violation?$5806$1bEyPh
     (condition-predicate g$6799$5706$1bEyPh))
   (g$6813$5712$1bEyPh
     g$6813$5807$1bEyPh
     (make-record-type-descriptor
       '&lexical
       g$6723$5672$1bEyPh
       'g$6816$1bEyPh
       '#f
       '#f
       '#()))
   (g$6815$5713$1bEyPh g$6815$5808$1bEyPh '#f)
   (g$6814$5714$1bEyPh
     g$6814$5809$1bEyPh
     (make-record-constructor-descriptor
       g$6813$5712$1bEyPh
       g$6724$5674$1bEyPh
       g$6815$5713$1bEyPh))
   (g$6812$5715$1bEyPh
     g$6812$5810$1bEyPh
     (record-predicate g$6813$5712$1bEyPh))
   (g$make-lexical-violation$5716$1bEyPh
     g$make-lexical-violation$5811$1bEyPh
     (record-constructor g$6814$5714$1bEyPh))
   (g$lexical-violation?$5717$1bEyPh
     g$lexical-violation?$5812$1bEyPh
     (condition-predicate g$6813$5712$1bEyPh))
   (g$6829$5718$1bEyPh
     g$6829$5813$1bEyPh
     (make-record-type-descriptor
       '&syntax
       g$6723$5672$1bEyPh
       'g$6832$1bEyPh
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6831$5719$1bEyPh g$6831$5814$1bEyPh '#f)
   (g$6830$5720$1bEyPh
     g$6830$5815$1bEyPh
     (make-record-constructor-descriptor
       g$6829$5718$1bEyPh
       g$6724$5674$1bEyPh
       g$6831$5719$1bEyPh))
   (g$6828$5721$1bEyPh
     g$6828$5816$1bEyPh
     (record-predicate g$6829$5718$1bEyPh))
   (g$make-syntax-violation$5722$1bEyPh
     g$make-syntax-violation$5817$1bEyPh
     (record-constructor g$6830$5720$1bEyPh))
   (g$6826$5723$1bEyPh
     g$6826$5818$1bEyPh
     (record-accessor g$6829$5718$1bEyPh '0))
   (g$6827$5724$1bEyPh
     g$6827$5819$1bEyPh
     (record-accessor g$6829$5718$1bEyPh '1))
   (g$syntax-violation?$5725$1bEyPh
     g$syntax-violation?$5820$1bEyPh
     (condition-predicate g$6829$5718$1bEyPh))
   (g$syntax-violation-form$5726$1bEyPh
     g$syntax-violation-form$5821$1bEyPh
     (condition-accessor g$6829$5718$1bEyPh g$6826$5723$1bEyPh))
   (g$syntax-violation-subform$5727$1bEyPh
     g$syntax-violation-subform$5822$1bEyPh
     (condition-accessor g$6829$5718$1bEyPh g$6827$5724$1bEyPh))
   (g$6847$5728$1bEyPh
     g$6847$5823$1bEyPh
     (make-record-type-descriptor
       '&undefined
       g$6723$5672$1bEyPh
       'g$6850$1bEyPh
       '#f
       '#f
       '#()))
   (g$6849$5729$1bEyPh g$6849$5824$1bEyPh '#f)
   (g$6848$5730$1bEyPh
     g$6848$5825$1bEyPh
     (make-record-constructor-descriptor
       g$6847$5728$1bEyPh
       g$6724$5674$1bEyPh
       g$6849$5729$1bEyPh))
   (g$6846$5731$1bEyPh
     g$6846$5826$1bEyPh
     (record-predicate g$6847$5728$1bEyPh))
   (g$make-undefined-violation$5732$1bEyPh
     g$make-undefined-violation$5827$1bEyPh
     (record-constructor g$6848$5730$1bEyPh))
   (g$undefined-violation?$5733$1bEyPh
     g$undefined-violation?$5828$1bEyPh
     (condition-predicate g$6847$5728$1bEyPh)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5829$1bEyPh
     g$append!$5835$1bEyPh
     (case-lambda
       ((g$a$5830$1bEyPh . g$b$5831$1bEyPh)
        (if (null? g$a$5830$1bEyPh)
          g$b$5831$1bEyPh
          (if (null? g$b$5831$1bEyPh)
            g$a$5830$1bEyPh
            (begin
              ((letrec ((g$f$5832$1bEyPh
                          (case-lambda
                            ((g$a$5833$1bEyPh)
                             ((case-lambda
                                ((g$n$5834$1bEyPh)
                                 (if (null? g$n$5834$1bEyPh)
                                   (set-cdr! g$a$5833$1bEyPh g$b$5831$1bEyPh)
                                   (g$f$5832$1bEyPh g$n$5834$1bEyPh))))
                              (cdr g$a$5833$1bEyPh))))))
                 g$f$5832$1bEyPh)
               g$a$5830$1bEyPh)
              g$a$5830$1bEyPh)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5836$1bEyPh
     g$sign$5854$1bEyPh
     (case-lambda
       ((g$n$5842$1bEyPh)
        (if (> g$n$5842$1bEyPh '0) '1 (if (< g$n$5842$1bEyPh '0) '-1 '0)))))
   (g$quotient$5837$1bEyPh
     g$quotient$5855$1bEyPh
     (case-lambda
       ((g$n1$5843$1bEyPh g$n2$5844$1bEyPh)
        (begin
          (if (not (integer? g$n1$5843$1bEyPh))
            (assertion-violation 'quotient '"not an integer" g$n1$5843$1bEyPh)
            (void))
          (if (not (integer? g$n2$5844$1bEyPh))
            (assertion-violation 'quotient '"not an integer" g$n2$5844$1bEyPh)
            (void))
          (* (g$sign$5836$1bEyPh g$n1$5843$1bEyPh)
             (g$sign$5836$1bEyPh g$n2$5844$1bEyPh)
             (div (abs g$n1$5843$1bEyPh) (abs g$n2$5844$1bEyPh)))))))
   (g$remainder$5838$1bEyPh
     g$remainder$5856$1bEyPh
     (case-lambda
       ((g$n1$5845$1bEyPh g$n2$5846$1bEyPh)
        (begin
          (if (not (integer? g$n1$5845$1bEyPh))
            (assertion-violation 'remainder '"not an integer" g$n1$5845$1bEyPh)
            (void))
          (if (not (integer? g$n2$5846$1bEyPh))
            (assertion-violation 'remainder '"not an integer" g$n2$5846$1bEyPh)
            (void))
          (* (g$sign$5836$1bEyPh g$n1$5845$1bEyPh)
             (mod (abs g$n1$5845$1bEyPh) (abs g$n2$5846$1bEyPh)))))))
   (g$modulo$5839$1bEyPh
     g$modulo$5857$1bEyPh
     (case-lambda
       ((g$n1$5847$1bEyPh g$n2$5848$1bEyPh)
        (begin
          (if (not (integer? g$n1$5847$1bEyPh))
            (assertion-violation 'modulo '"not an integer" g$n1$5847$1bEyPh)
            (void))
          (if (not (integer? g$n2$5848$1bEyPh))
            (assertion-violation 'modulo '"not an integer" g$n2$5848$1bEyPh)
            (void))
          (* (g$sign$5836$1bEyPh g$n2$5848$1bEyPh)
             (mod (* (g$sign$5836$1bEyPh g$n2$5848$1bEyPh) g$n1$5847$1bEyPh)
                  (abs g$n2$5848$1bEyPh)))))))
   (g$make-promise$5840$1bEyPh
     g$make-promise$5858$1bEyPh
     (case-lambda
       ((g$proc$5849$1bEyPh)
        ((case-lambda
           ((g$result-ready?$5850$1bEyPh g$result$5851$1bEyPh)
            (case-lambda
              (()
               (if g$result-ready?$5850$1bEyPh
                 g$result$5851$1bEyPh
                 ((case-lambda
                    ((g$x$5852$1bEyPh)
                     (if g$result-ready?$5850$1bEyPh
                       g$result$5851$1bEyPh
                       (begin
                         (set! g$result-ready?$5850$1bEyPh '#t)
                         (set! g$result$5851$1bEyPh g$x$5852$1bEyPh)
                         g$result$5851$1bEyPh))))
                  (g$proc$5849$1bEyPh)))))))
         '#f
         '#f))))
   (g$force$5841$1bEyPh
     g$force$5859$1bEyPh
     (case-lambda ((g$object$5853$1bEyPh) (g$object$5853$1bEyPh)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5860$1bEyPh
     g$split$5886$1bEyPh
     (case-lambda
       ((g$ls$5863$1bEyPh)
        ((letrec ((g$loop$5864$1bEyPh
                    (case-lambda
                      ((g$rest$5865$1bEyPh
                         g$left$5866$1bEyPh
                         g$right$5867$1bEyPh)
                       (if (null? g$rest$5865$1bEyPh)
                         (cons g$left$5866$1bEyPh g$right$5867$1bEyPh)
                         (if (null? (cdr g$rest$5865$1bEyPh))
                           (cons
                             (cons (car g$rest$5865$1bEyPh) g$left$5866$1bEyPh)
                             g$right$5867$1bEyPh)
                           (g$loop$5864$1bEyPh
                             (g$cddr$5012$1bEyPh g$rest$5865$1bEyPh)
                             (cons (car g$rest$5865$1bEyPh) g$left$5866$1bEyPh)
                             (cons
                               (g$cadr$5010$1bEyPh g$rest$5865$1bEyPh)
                               g$right$5867$1bEyPh))))))))
           g$loop$5864$1bEyPh)
         g$ls$5863$1bEyPh
         '()
         '()))))
   (g$reverse-it$5861$1bEyPh
     g$reverse-it$5887$1bEyPh
     (case-lambda
       ((g$head$5868$1bEyPh g$tail$5869$1bEyPh)
        (if (null? g$head$5868$1bEyPh)
          g$tail$5869$1bEyPh
          ((case-lambda
             ((g$hd$5870$1bEyPh g$tl$5871$1bEyPh)
              (g$reverse-it$5861$1bEyPh
                g$tl$5871$1bEyPh
                (cons g$hd$5870$1bEyPh g$tail$5869$1bEyPh))))
           (car g$head$5868$1bEyPh)
           (cdr g$head$5868$1bEyPh))))))
   (g$list-sort$5862$1bEyPh
     g$list-sort$5888$1bEyPh
     (case-lambda
       ((g$precedes?$5872$1bEyPh g$ls$5873$1bEyPh)
        ((case-lambda
           ((g$merge$5874$1bEyPh)
            ((case-lambda
               (()
                (if (null? g$ls$5873$1bEyPh)
                  '()
                  ((letrec ((g$helper$5875$1bEyPh
                              (case-lambda
                                ((g$piece$5876$1bEyPh)
                                 (if (null? (cdr g$piece$5876$1bEyPh))
                                   g$piece$5876$1bEyPh
                                   ((case-lambda
                                      ((g$parts$5877$1bEyPh)
                                       (g$merge$5874$1bEyPh
                                         (g$helper$5875$1bEyPh
                                           (car g$parts$5877$1bEyPh))
                                         (g$helper$5875$1bEyPh
                                           (cdr g$parts$5877$1bEyPh)))))
                                    (g$split$5860$1bEyPh
                                      g$piece$5876$1bEyPh)))))))
                     g$helper$5875$1bEyPh)
                   g$ls$5873$1bEyPh)))))))
         (case-lambda
           ((g$list-1$5878$1bEyPh g$list-2$5879$1bEyPh)
            ((letrec ((g$loop$5880$1bEyPh
                        (case-lambda
                          ((g$source-1$5881$1bEyPh
                             g$source-2$5882$1bEyPh
                             g$so-far$5883$1bEyPh)
                           (if (null? g$source-1$5881$1bEyPh)
                             (g$reverse-it$5861$1bEyPh
                               g$so-far$5883$1bEyPh
                               g$source-2$5882$1bEyPh)
                             (if (null? g$source-2$5882$1bEyPh)
                               (g$reverse-it$5861$1bEyPh
                                 g$so-far$5883$1bEyPh
                                 g$source-1$5881$1bEyPh)
                               ((case-lambda
                                  ((g$car-1$5884$1bEyPh g$car-2$5885$1bEyPh)
                                   (if (g$precedes?$5872$1bEyPh
                                         g$car-2$5885$1bEyPh
                                         g$car-1$5884$1bEyPh)
                                     (g$loop$5880$1bEyPh
                                       g$source-1$5881$1bEyPh
                                       (cdr g$source-2$5882$1bEyPh)
                                       (cons
                                         g$car-2$5885$1bEyPh
                                         g$so-far$5883$1bEyPh))
                                     (g$loop$5880$1bEyPh
                                       g$source-2$5882$1bEyPh
                                       (cdr g$source-1$5881$1bEyPh)
                                       (cons
                                         g$car-1$5884$1bEyPh
                                         g$so-far$5883$1bEyPh)))))
                                (car g$source-1$5881$1bEyPh)
                                (car g$source-2$5882$1bEyPh))))))))
               g$loop$5880$1bEyPh)
             g$list-1$5878$1bEyPh
             g$list-2$5879$1bEyPh
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5932$1bEyPh
     g$string-ci=?$6028$1bEyPh
     (case-lambda
       ((g$a$5948$1bEyPh g$b$5949$1bEyPh . g$rest$5950$1bEyPh)
        (begin
          (if (not (string? g$a$5948$1bEyPh))
            (assertion-violation 'string-ci=? '"not a string" g$a$5948$1bEyPh)
            (void))
          (if (not (string? g$b$5949$1bEyPh))
            (assertion-violation 'string-ci=? '"not a string" g$b$5949$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$5951$1bEyPh)
               (if (not (string? g$x$5951$1bEyPh))
                 (assertion-violation
                   'string-ci=?
                   '"not a string"
                   g$x$5951$1bEyPh)
                 (void))))
            g$rest$5950$1bEyPh)
          ((letrec ((g$f$5952$1bEyPh
                      (case-lambda
                        ((g$a$5953$1bEyPh g$b$5954$1bEyPh g$rest$5955$1bEyPh)
                         (if (null? g$rest$5955$1bEyPh)
                           (= (string-ci-compare
                                g$a$5953$1bEyPh
                                g$b$5954$1bEyPh)
                              '0)
                           (if (= (string-compare
                                    g$a$5953$1bEyPh
                                    g$b$5954$1bEyPh)
                                  '0)
                             (begin
                               '#f
                               (g$f$5952$1bEyPh
                                 g$b$5954$1bEyPh
                                 (car g$rest$5955$1bEyPh)
                                 (cdr g$rest$5955$1bEyPh)))
                             '#f))))))
             g$f$5952$1bEyPh)
           g$a$5948$1bEyPh
           g$b$5949$1bEyPh
           g$rest$5950$1bEyPh)))))
   (g$string-ci<?$5933$1bEyPh
     g$string-ci<?$6029$1bEyPh
     (case-lambda
       ((g$a$5956$1bEyPh g$b$5957$1bEyPh . g$rest$5958$1bEyPh)
        (begin
          (if (not (string? g$a$5956$1bEyPh))
            (assertion-violation 'string-ci<? '"not a string" g$a$5956$1bEyPh)
            (void))
          (if (not (string? g$b$5957$1bEyPh))
            (assertion-violation 'string-ci<? '"not a string" g$b$5957$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$5959$1bEyPh)
               (if (not (string? g$x$5959$1bEyPh))
                 (assertion-violation
                   'string-ci<?
                   '"not a string"
                   g$x$5959$1bEyPh)
                 (void))))
            g$rest$5958$1bEyPh)
          ((letrec ((g$f$5960$1bEyPh
                      (case-lambda
                        ((g$a$5961$1bEyPh g$b$5962$1bEyPh g$rest$5963$1bEyPh)
                         (if (null? g$rest$5963$1bEyPh)
                           (< (string-ci-compare
                                g$a$5961$1bEyPh
                                g$b$5962$1bEyPh)
                              '0)
                           (if (< (string-compare
                                    g$a$5961$1bEyPh
                                    g$b$5962$1bEyPh)
                                  '0)
                             (begin
                               '#f
                               (g$f$5960$1bEyPh
                                 g$b$5962$1bEyPh
                                 (car g$rest$5963$1bEyPh)
                                 (cdr g$rest$5963$1bEyPh)))
                             '#f))))))
             g$f$5960$1bEyPh)
           g$a$5956$1bEyPh
           g$b$5957$1bEyPh
           g$rest$5958$1bEyPh)))))
   (g$string-ci>?$5934$1bEyPh
     g$string-ci>?$6030$1bEyPh
     (case-lambda
       ((g$a$5964$1bEyPh g$b$5965$1bEyPh . g$rest$5966$1bEyPh)
        (begin
          (if (not (string? g$a$5964$1bEyPh))
            (assertion-violation 'string-ci>? '"not a string" g$a$5964$1bEyPh)
            (void))
          (if (not (string? g$b$5965$1bEyPh))
            (assertion-violation 'string-ci>? '"not a string" g$b$5965$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$5967$1bEyPh)
               (if (not (string? g$x$5967$1bEyPh))
                 (assertion-violation
                   'string-ci>?
                   '"not a string"
                   g$x$5967$1bEyPh)
                 (void))))
            g$rest$5966$1bEyPh)
          ((letrec ((g$f$5968$1bEyPh
                      (case-lambda
                        ((g$a$5969$1bEyPh g$b$5970$1bEyPh g$rest$5971$1bEyPh)
                         (if (null? g$rest$5971$1bEyPh)
                           (> (string-ci-compare
                                g$a$5969$1bEyPh
                                g$b$5970$1bEyPh)
                              '0)
                           (if (> (string-compare
                                    g$a$5969$1bEyPh
                                    g$b$5970$1bEyPh)
                                  '0)
                             (begin
                               '#f
                               (g$f$5968$1bEyPh
                                 g$b$5970$1bEyPh
                                 (car g$rest$5971$1bEyPh)
                                 (cdr g$rest$5971$1bEyPh)))
                             '#f))))))
             g$f$5968$1bEyPh)
           g$a$5964$1bEyPh
           g$b$5965$1bEyPh
           g$rest$5966$1bEyPh)))))
   (g$string-ci<=?$5935$1bEyPh
     g$string-ci<=?$6031$1bEyPh
     (case-lambda
       ((g$a$5972$1bEyPh g$b$5973$1bEyPh . g$rest$5974$1bEyPh)
        (begin
          (if (not (string? g$a$5972$1bEyPh))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5972$1bEyPh)
            (void))
          (if (not (string? g$b$5973$1bEyPh))
            (assertion-violation 'string-ci<=? '"not a string" g$b$5973$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$5975$1bEyPh)
               (if (not (string? g$x$5975$1bEyPh))
                 (assertion-violation
                   'string-ci<=?
                   '"not a string"
                   g$x$5975$1bEyPh)
                 (void))))
            g$rest$5974$1bEyPh)
          ((letrec ((g$f$5976$1bEyPh
                      (case-lambda
                        ((g$a$5977$1bEyPh g$b$5978$1bEyPh g$rest$5979$1bEyPh)
                         (if (null? g$rest$5979$1bEyPh)
                           (<= (string-ci-compare
                                 g$a$5977$1bEyPh
                                 g$b$5978$1bEyPh)
                               '0)
                           (if (<= (string-compare
                                     g$a$5977$1bEyPh
                                     g$b$5978$1bEyPh)
                                   '0)
                             (begin
                               '#f
                               (g$f$5976$1bEyPh
                                 g$b$5978$1bEyPh
                                 (car g$rest$5979$1bEyPh)
                                 (cdr g$rest$5979$1bEyPh)))
                             '#f))))))
             g$f$5976$1bEyPh)
           g$a$5972$1bEyPh
           g$b$5973$1bEyPh
           g$rest$5974$1bEyPh)))))
   (g$string-ci>=?$5936$1bEyPh
     g$string-ci>=?$6032$1bEyPh
     (case-lambda
       ((g$a$5980$1bEyPh g$b$5981$1bEyPh . g$rest$5982$1bEyPh)
        (begin
          (if (not (string? g$a$5980$1bEyPh))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5980$1bEyPh)
            (void))
          (if (not (string? g$b$5981$1bEyPh))
            (assertion-violation 'string-ci>=? '"not a string" g$b$5981$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$5983$1bEyPh)
               (if (not (string? g$x$5983$1bEyPh))
                 (assertion-violation
                   'string-ci>=?
                   '"not a string"
                   g$x$5983$1bEyPh)
                 (void))))
            g$rest$5982$1bEyPh)
          ((letrec ((g$f$5984$1bEyPh
                      (case-lambda
                        ((g$a$5985$1bEyPh g$b$5986$1bEyPh g$rest$5987$1bEyPh)
                         (if (null? g$rest$5987$1bEyPh)
                           (>= (string-ci-compare
                                 g$a$5985$1bEyPh
                                 g$b$5986$1bEyPh)
                               '0)
                           (if (>= (string-compare
                                     g$a$5985$1bEyPh
                                     g$b$5986$1bEyPh)
                                   '0)
                             (begin
                               '#f
                               (g$f$5984$1bEyPh
                                 g$b$5986$1bEyPh
                                 (car g$rest$5987$1bEyPh)
                                 (cdr g$rest$5987$1bEyPh)))
                             '#f))))))
             g$f$5984$1bEyPh)
           g$a$5980$1bEyPh
           g$b$5981$1bEyPh
           g$rest$5982$1bEyPh)))))
   (g$char-ci=?$5943$1bEyPh
     g$char-ci=?$6033$1bEyPh
     (case-lambda
       ((g$a$5988$1bEyPh g$b$5989$1bEyPh . g$rest$5990$1bEyPh)
        (begin
          (if (not (char? g$a$5988$1bEyPh))
            (assertion-violation 'char-ci=? '"not a char" g$a$5988$1bEyPh)
            (void))
          (if (not (char? g$b$5989$1bEyPh))
            (assertion-violation 'char-ci=? '"not a char" g$b$5989$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$5991$1bEyPh)
               (if (not (char? g$x$5991$1bEyPh))
                 (assertion-violation 'char-ci=? '"not a char" g$x$5991$1bEyPh)
                 (void))))
            g$rest$5990$1bEyPh)
          ((letrec ((g$f$5992$1bEyPh
                      (case-lambda
                        ((g$a$5993$1bEyPh g$b$5994$1bEyPh g$rest$5995$1bEyPh)
                         (if (null? g$rest$5995$1bEyPh)
                           (= (char->integer (char-upcase g$a$5993$1bEyPh))
                              (char->integer (char-upcase g$b$5994$1bEyPh)))
                           (if (= (char->integer (char-upcase g$a$5993$1bEyPh))
                                  (char->integer (char-upcase g$b$5994$1bEyPh)))
                             (begin
                               '#f
                               (g$f$5992$1bEyPh
                                 g$b$5994$1bEyPh
                                 (car g$rest$5995$1bEyPh)
                                 (cdr g$rest$5995$1bEyPh)))
                             '#f))))))
             g$f$5992$1bEyPh)
           g$a$5988$1bEyPh
           g$b$5989$1bEyPh
           g$rest$5990$1bEyPh)))))
   (g$char-ci<?$5944$1bEyPh
     g$char-ci<?$6034$1bEyPh
     (case-lambda
       ((g$a$5996$1bEyPh g$b$5997$1bEyPh . g$rest$5998$1bEyPh)
        (begin
          (if (not (char? g$a$5996$1bEyPh))
            (assertion-violation 'char-ci<? '"not a char" g$a$5996$1bEyPh)
            (void))
          (if (not (char? g$b$5997$1bEyPh))
            (assertion-violation 'char-ci<? '"not a char" g$b$5997$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$5999$1bEyPh)
               (if (not (char? g$x$5999$1bEyPh))
                 (assertion-violation 'char-ci<? '"not a char" g$x$5999$1bEyPh)
                 (void))))
            g$rest$5998$1bEyPh)
          ((letrec ((g$f$6000$1bEyPh
                      (case-lambda
                        ((g$a$6001$1bEyPh g$b$6002$1bEyPh g$rest$6003$1bEyPh)
                         (if (null? g$rest$6003$1bEyPh)
                           (< (char->integer (char-upcase g$a$6001$1bEyPh))
                              (char->integer (char-upcase g$b$6002$1bEyPh)))
                           (if (< (char->integer (char-upcase g$a$6001$1bEyPh))
                                  (char->integer (char-upcase g$b$6002$1bEyPh)))
                             (begin
                               '#f
                               (g$f$6000$1bEyPh
                                 g$b$6002$1bEyPh
                                 (car g$rest$6003$1bEyPh)
                                 (cdr g$rest$6003$1bEyPh)))
                             '#f))))))
             g$f$6000$1bEyPh)
           g$a$5996$1bEyPh
           g$b$5997$1bEyPh
           g$rest$5998$1bEyPh)))))
   (g$char-ci>?$5945$1bEyPh
     g$char-ci>?$6035$1bEyPh
     (case-lambda
       ((g$a$6004$1bEyPh g$b$6005$1bEyPh . g$rest$6006$1bEyPh)
        (begin
          (if (not (char? g$a$6004$1bEyPh))
            (assertion-violation 'char-ci>? '"not a char" g$a$6004$1bEyPh)
            (void))
          (if (not (char? g$b$6005$1bEyPh))
            (assertion-violation 'char-ci>? '"not a char" g$b$6005$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$6007$1bEyPh)
               (if (not (char? g$x$6007$1bEyPh))
                 (assertion-violation 'char-ci>? '"not a char" g$x$6007$1bEyPh)
                 (void))))
            g$rest$6006$1bEyPh)
          ((letrec ((g$f$6008$1bEyPh
                      (case-lambda
                        ((g$a$6009$1bEyPh g$b$6010$1bEyPh g$rest$6011$1bEyPh)
                         (if (null? g$rest$6011$1bEyPh)
                           (> (char->integer (char-upcase g$a$6009$1bEyPh))
                              (char->integer (char-upcase g$b$6010$1bEyPh)))
                           (if (> (char->integer (char-upcase g$a$6009$1bEyPh))
                                  (char->integer (char-upcase g$b$6010$1bEyPh)))
                             (begin
                               '#f
                               (g$f$6008$1bEyPh
                                 g$b$6010$1bEyPh
                                 (car g$rest$6011$1bEyPh)
                                 (cdr g$rest$6011$1bEyPh)))
                             '#f))))))
             g$f$6008$1bEyPh)
           g$a$6004$1bEyPh
           g$b$6005$1bEyPh
           g$rest$6006$1bEyPh)))))
   (g$char-ci<=?$5946$1bEyPh
     g$char-ci<=?$6036$1bEyPh
     (case-lambda
       ((g$a$6012$1bEyPh g$b$6013$1bEyPh . g$rest$6014$1bEyPh)
        (begin
          (if (not (char? g$a$6012$1bEyPh))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6012$1bEyPh)
            (void))
          (if (not (char? g$b$6013$1bEyPh))
            (assertion-violation 'char-ci<=? '"not a char" g$b$6013$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$6015$1bEyPh)
               (if (not (char? g$x$6015$1bEyPh))
                 (assertion-violation 'char-ci<=? '"not a char" g$x$6015$1bEyPh)
                 (void))))
            g$rest$6014$1bEyPh)
          ((letrec ((g$f$6016$1bEyPh
                      (case-lambda
                        ((g$a$6017$1bEyPh g$b$6018$1bEyPh g$rest$6019$1bEyPh)
                         (if (null? g$rest$6019$1bEyPh)
                           (<= (char->integer (char-upcase g$a$6017$1bEyPh))
                               (char->integer (char-upcase g$b$6018$1bEyPh)))
                           (if (<= (char->integer (char-upcase g$a$6017$1bEyPh))
                                   (char->integer
                                     (char-upcase g$b$6018$1bEyPh)))
                             (begin
                               '#f
                               (g$f$6016$1bEyPh
                                 g$b$6018$1bEyPh
                                 (car g$rest$6019$1bEyPh)
                                 (cdr g$rest$6019$1bEyPh)))
                             '#f))))))
             g$f$6016$1bEyPh)
           g$a$6012$1bEyPh
           g$b$6013$1bEyPh
           g$rest$6014$1bEyPh)))))
   (g$char-ci>=?$5947$1bEyPh
     g$char-ci>=?$6037$1bEyPh
     (case-lambda
       ((g$a$6020$1bEyPh g$b$6021$1bEyPh . g$rest$6022$1bEyPh)
        (begin
          (if (not (char? g$a$6020$1bEyPh))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6020$1bEyPh)
            (void))
          (if (not (char? g$b$6021$1bEyPh))
            (assertion-violation 'char-ci>=? '"not a char" g$b$6021$1bEyPh)
            (void))
          (for-each
            (case-lambda
              ((g$x$6023$1bEyPh)
               (if (not (char? g$x$6023$1bEyPh))
                 (assertion-violation 'char-ci>=? '"not a char" g$x$6023$1bEyPh)
                 (void))))
            g$rest$6022$1bEyPh)
          ((letrec ((g$f$6024$1bEyPh
                      (case-lambda
                        ((g$a$6025$1bEyPh g$b$6026$1bEyPh g$rest$6027$1bEyPh)
                         (if (null? g$rest$6027$1bEyPh)
                           (>= (char->integer (char-upcase g$a$6025$1bEyPh))
                               (char->integer (char-upcase g$b$6026$1bEyPh)))
                           (if (>= (char->integer (char-upcase g$a$6025$1bEyPh))
                                   (char->integer
                                     (char-upcase g$b$6026$1bEyPh)))
                             (begin
                               '#f
                               (g$f$6024$1bEyPh
                                 g$b$6026$1bEyPh
                                 (car g$rest$6027$1bEyPh)
                                 (cdr g$rest$6027$1bEyPh)))
                             '#f))))))
             g$f$6024$1bEyPh)
           g$a$6020$1bEyPh
           g$b$6021$1bEyPh
           g$rest$6022$1bEyPh))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6038$1bEyPh
     g$bitwise-if$6085$1bEyPh
     (case-lambda
       ((g$ei1$6045$1bEyPh g$ei2$6046$1bEyPh g$ei3$6047$1bEyPh)
        (bitwise-ior
          (bitwise-and g$ei1$6045$1bEyPh g$ei2$6046$1bEyPh)
          (bitwise-and (bitwise-not g$ei1$6045$1bEyPh) g$ei3$6047$1bEyPh)))))
   (g$bitwise-copy-bit$6039$1bEyPh
     g$bitwise-copy-bit$6086$1bEyPh
     (case-lambda
       ((g$ei1$6048$1bEyPh g$ei2$6049$1bEyPh g$ei3$6050$1bEyPh)
        ((case-lambda
           ((g$mask$6051$1bEyPh)
            ((case-lambda
               (()
                (g$bitwise-if$6038$1bEyPh
                  g$mask$6051$1bEyPh
                  (g$bitwise-arithmetic-shift-left$6042$1bEyPh
                    g$ei3$6050$1bEyPh
                    g$ei2$6049$1bEyPh)
                  g$ei1$6048$1bEyPh))))))
         (g$bitwise-arithmetic-shift-left$6042$1bEyPh '1 g$ei2$6049$1bEyPh)))))
   (g$bitwise-bit-field$6040$1bEyPh
     g$bitwise-bit-field$6087$1bEyPh
     (case-lambda
       ((g$ei1$6052$1bEyPh g$ei2$6053$1bEyPh g$ei3$6054$1bEyPh)
        ((case-lambda
           ((g$mask$6055$1bEyPh)
            (g$bitwise-arithmetic-shift-right$6043$1bEyPh
              (bitwise-and g$ei1$6052$1bEyPh g$mask$6055$1bEyPh)
              g$ei2$6053$1bEyPh)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$6042$1bEyPh
             '-1
             g$ei3$6054$1bEyPh))))))
   (g$bitwise-copy-bit-field$6041$1bEyPh
     g$bitwise-copy-bit-field$6088$1bEyPh
     (case-lambda
       ((g$ei1$6056$1bEyPh
          g$ei2$6057$1bEyPh
          g$ei3$6058$1bEyPh
          g$ei4$6059$1bEyPh)
        ((case-lambda
           ((g$to$6060$1bEyPh)
            ((case-lambda
               ((g$start$6061$1bEyPh)
                ((case-lambda
                   ((g$end$6062$1bEyPh)
                    ((case-lambda
                       ((g$from$6063$1bEyPh)
                        ((case-lambda
                           ((g$mask1$6064$1bEyPh)
                            ((case-lambda
                               ((g$mask2$6065$1bEyPh)
                                ((case-lambda
                                   ((g$mask$6066$1bEyPh)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$6038$1bEyPh
                                          g$mask$6066$1bEyPh
                                          (g$bitwise-arithmetic-shift-left$6042$1bEyPh
                                            g$from$6063$1bEyPh
                                            g$start$6061$1bEyPh)
                                          g$to$6060$1bEyPh))))))
                                 (bitwise-and
                                   g$mask1$6064$1bEyPh
                                   g$mask2$6065$1bEyPh))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$6042$1bEyPh
                                 '-1
                                 g$end$6062$1bEyPh)))))
                         (g$bitwise-arithmetic-shift-left$6042$1bEyPh
                           '-1
                           g$start$6061$1bEyPh))))
                     g$ei4$6059$1bEyPh)))
                 g$ei3$6058$1bEyPh)))
             g$ei2$6057$1bEyPh)))
         g$ei1$6056$1bEyPh))))
   (g$bitwise-arithmetic-shift-left$6042$1bEyPh
     g$bitwise-arithmetic-shift-left$6089$1bEyPh
     (case-lambda
       ((g$ei1$6067$1bEyPh g$ei2$6068$1bEyPh)
        (bitwise-arithmetic-shift g$ei1$6067$1bEyPh g$ei2$6068$1bEyPh))))
   (g$bitwise-arithmetic-shift-right$6043$1bEyPh
     g$bitwise-arithmetic-shift-right$6090$1bEyPh
     (case-lambda
       ((g$ei1$6069$1bEyPh g$ei2$6070$1bEyPh)
        (bitwise-arithmetic-shift g$ei1$6069$1bEyPh (- g$ei2$6070$1bEyPh)))))
   (g$bitwise-rotate-bit-field$6044$1bEyPh
     g$bitwise-rotate-bit-field$6091$1bEyPh
     (case-lambda
       ((g$ei1$6071$1bEyPh
          g$ei2$6072$1bEyPh
          g$ei3$6073$1bEyPh
          g$ei4$6074$1bEyPh)
        ((case-lambda
           ((g$n$6075$1bEyPh)
            ((case-lambda
               ((g$start$6076$1bEyPh)
                ((case-lambda
                   ((g$end$6077$1bEyPh)
                    ((case-lambda
                       ((g$count$6078$1bEyPh)
                        ((case-lambda
                           ((g$width$6079$1bEyPh)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6079$1bEyPh)
                                  ((case-lambda
                                     ((g$count$6080$1bEyPh)
                                      ((case-lambda
                                         ((g$field0$6081$1bEyPh)
                                          ((case-lambda
                                             ((g$field1$6082$1bEyPh)
                                              ((case-lambda
                                                 ((g$field2$6083$1bEyPh)
                                                  ((case-lambda
                                                     ((g$field$6084$1bEyPh)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$6041$1bEyPh
                                                            g$n$6075$1bEyPh
                                                            g$start$6076$1bEyPh
                                                            g$end$6077$1bEyPh
                                                            g$field$6084$1bEyPh))))))
                                                   (bitwise-ior
                                                     g$field1$6082$1bEyPh
                                                     g$field2$6083$1bEyPh))))
                                               (g$bitwise-arithmetic-shift-right$6043$1bEyPh
                                                 g$field0$6081$1bEyPh
                                                 (- g$width$6079$1bEyPh
                                                    g$count$6080$1bEyPh)))))
                                           (g$bitwise-arithmetic-shift-left$6042$1bEyPh
                                             g$field0$6081$1bEyPh
                                             g$count$6080$1bEyPh))))
                                       (g$bitwise-bit-field$6040$1bEyPh
                                         g$n$6075$1bEyPh
                                         g$start$6076$1bEyPh
                                         g$end$6077$1bEyPh))))
                                   (mod g$count$6078$1bEyPh
                                        g$width$6079$1bEyPh))
                                  g$n$6075$1bEyPh))))))
                         (- g$end$6077$1bEyPh g$start$6076$1bEyPh))))
                     g$ei4$6074$1bEyPh)))
                 g$ei3$6073$1bEyPh)))
             g$ei2$6072$1bEyPh)))
         g$ei1$6071$1bEyPh)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$6092$1bEyPh
     g$fxif$6139$1bEyPh
     (case-lambda
       ((g$fx1$6099$1bEyPh g$fx2$6100$1bEyPh g$fx3$6101$1bEyPh)
        (fxior
          (fxand g$fx1$6099$1bEyPh g$fx2$6100$1bEyPh)
          (fxand (fxnot g$fx1$6099$1bEyPh) g$fx3$6101$1bEyPh)))))
   (g$fxcopy-bit$6093$1bEyPh
     g$fxcopy-bit$6140$1bEyPh
     (case-lambda
       ((g$fx1$6102$1bEyPh g$fx2$6103$1bEyPh g$fx3$6104$1bEyPh)
        ((case-lambda
           ((g$mask$6105$1bEyPh)
            ((case-lambda
               (()
                (g$fxif$6092$1bEyPh
                  g$mask$6105$1bEyPh
                  (g$fxarithmetic-shift-left$6096$1bEyPh
                    g$fx3$6104$1bEyPh
                    g$fx2$6103$1bEyPh)
                  g$fx1$6102$1bEyPh))))))
         (g$fxarithmetic-shift-left$6096$1bEyPh '1 g$fx2$6103$1bEyPh)))))
   (g$fxbit-field$6094$1bEyPh
     g$fxbit-field$6141$1bEyPh
     (case-lambda
       ((g$fx1$6106$1bEyPh g$fx2$6107$1bEyPh g$fx3$6108$1bEyPh)
        ((case-lambda
           ((g$mask$6109$1bEyPh)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$6097$1bEyPh
                  (fxand g$fx1$6106$1bEyPh g$mask$6109$1bEyPh)
                  g$fx2$6107$1bEyPh))))))
         (fxnot
           (g$fxarithmetic-shift-left$6096$1bEyPh '-1 g$fx3$6108$1bEyPh))))))
   (g$fxcopy-bit-field$6095$1bEyPh
     g$fxcopy-bit-field$6142$1bEyPh
     (case-lambda
       ((g$fx1$6110$1bEyPh
          g$fx2$6111$1bEyPh
          g$fx3$6112$1bEyPh
          g$fx4$6113$1bEyPh)
        ((case-lambda
           ((g$to$6114$1bEyPh)
            ((case-lambda
               ((g$start$6115$1bEyPh)
                ((case-lambda
                   ((g$end$6116$1bEyPh)
                    ((case-lambda
                       ((g$from$6117$1bEyPh)
                        ((case-lambda
                           ((g$mask1$6118$1bEyPh)
                            ((case-lambda
                               ((g$mask2$6119$1bEyPh)
                                ((case-lambda
                                   ((g$mask$6120$1bEyPh)
                                    ((case-lambda
                                       (()
                                        (g$fxif$6092$1bEyPh
                                          g$mask$6120$1bEyPh
                                          (g$fxarithmetic-shift-left$6096$1bEyPh
                                            g$from$6117$1bEyPh
                                            g$start$6115$1bEyPh)
                                          g$to$6114$1bEyPh))))))
                                 (fxand
                                   g$mask1$6118$1bEyPh
                                   g$mask2$6119$1bEyPh))))
                             (fxnot
                               (g$fxarithmetic-shift-left$6096$1bEyPh
                                 '-1
                                 g$end$6116$1bEyPh)))))
                         (g$fxarithmetic-shift-left$6096$1bEyPh
                           '-1
                           g$start$6115$1bEyPh))))
                     g$fx4$6113$1bEyPh)))
                 g$fx3$6112$1bEyPh)))
             g$fx2$6111$1bEyPh)))
         g$fx1$6110$1bEyPh))))
   (g$fxarithmetic-shift-left$6096$1bEyPh
     g$fxarithmetic-shift-left$6143$1bEyPh
     (case-lambda
       ((g$fx1$6121$1bEyPh g$fx2$6122$1bEyPh)
        (fxarithmetic-shift g$fx1$6121$1bEyPh g$fx2$6122$1bEyPh))))
   (g$fxarithmetic-shift-right$6097$1bEyPh
     g$fxarithmetic-shift-right$6144$1bEyPh
     (case-lambda
       ((g$fx1$6123$1bEyPh g$fx2$6124$1bEyPh)
        (fxarithmetic-shift g$fx1$6123$1bEyPh (- g$fx2$6124$1bEyPh)))))
   (g$fxrotate-bit-field$6098$1bEyPh
     g$fxrotate-bit-field$6145$1bEyPh
     (case-lambda
       ((g$fx1$6125$1bEyPh
          g$fx2$6126$1bEyPh
          g$fx3$6127$1bEyPh
          g$fx4$6128$1bEyPh)
        ((case-lambda
           ((g$n$6129$1bEyPh)
            ((case-lambda
               ((g$start$6130$1bEyPh)
                ((case-lambda
                   ((g$end$6131$1bEyPh)
                    ((case-lambda
                       ((g$count$6132$1bEyPh)
                        ((case-lambda
                           ((g$width$6133$1bEyPh)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6133$1bEyPh)
                                  ((case-lambda
                                     ((g$count$6134$1bEyPh)
                                      ((case-lambda
                                         ((g$field0$6135$1bEyPh)
                                          ((case-lambda
                                             ((g$field1$6136$1bEyPh)
                                              ((case-lambda
                                                 ((g$field2$6137$1bEyPh)
                                                  ((case-lambda
                                                     ((g$field$6138$1bEyPh)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$6095$1bEyPh
                                                            g$n$6129$1bEyPh
                                                            g$start$6130$1bEyPh
                                                            g$end$6131$1bEyPh
                                                            g$field$6138$1bEyPh))))))
                                                   (fxior
                                                     g$field1$6136$1bEyPh
                                                     g$field2$6137$1bEyPh))))
                                               (g$fxarithmetic-shift-right$6097$1bEyPh
                                                 g$field0$6135$1bEyPh
                                                 (- g$width$6133$1bEyPh
                                                    g$count$6134$1bEyPh)))))
                                           (g$fxarithmetic-shift-left$6096$1bEyPh
                                             g$field0$6135$1bEyPh
                                             g$count$6134$1bEyPh))))
                                       (g$fxbit-field$6094$1bEyPh
                                         g$n$6129$1bEyPh
                                         g$start$6130$1bEyPh
                                         g$end$6131$1bEyPh))))
                                   (mod g$count$6132$1bEyPh
                                        g$width$6133$1bEyPh))
                                  g$n$6129$1bEyPh))))))
                         (- g$end$6131$1bEyPh g$start$6130$1bEyPh))))
                     g$fx4$6128$1bEyPh)))
                 g$fx3$6127$1bEyPh)))
             g$fx2$6126$1bEyPh)))
         g$fx1$6125$1bEyPh)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7251$6146$1bEyPh
     g$7251$6158$1bEyPh
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7254$1bEyPh
       '#f
       '#f
       '#()))
   (g$7253$6147$1bEyPh g$7253$6159$1bEyPh '#f)
   (g$7252$6148$1bEyPh
     g$7252$6160$1bEyPh
     (make-record-constructor-descriptor
       g$7251$6146$1bEyPh
       &implementation-restriction-rcd
       g$7253$6147$1bEyPh))
   (g$7250$6149$1bEyPh
     g$7250$6161$1bEyPh
     (record-predicate g$7251$6146$1bEyPh))
   (g$make-no-infinities-violation$6150$1bEyPh
     g$make-no-infinities-violation$6162$1bEyPh
     (record-constructor g$7252$6148$1bEyPh))
   (g$no-infinities-violation?$6151$1bEyPh
     g$no-infinities-violation?$6163$1bEyPh
     (condition-predicate g$7251$6146$1bEyPh))
   (g$7265$6152$1bEyPh
     g$7265$6164$1bEyPh
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7268$1bEyPh
       '#f
       '#f
       '#()))
   (g$7267$6153$1bEyPh g$7267$6165$1bEyPh '#f)
   (g$7266$6154$1bEyPh
     g$7266$6166$1bEyPh
     (make-record-constructor-descriptor
       g$7265$6152$1bEyPh
       &implementation-restriction-rcd
       g$7267$6153$1bEyPh))
   (g$7264$6155$1bEyPh
     g$7264$6167$1bEyPh
     (record-predicate g$7265$6152$1bEyPh))
   (g$make-no-nans-violation$6156$1bEyPh
     g$make-no-nans-violation$6168$1bEyPh
     (record-constructor g$7266$6154$1bEyPh))
   (g$no-nans-violation?$6157$1bEyPh
     g$no-nans-violation?$6169$1bEyPh
     (condition-predicate g$7265$6152$1bEyPh)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7280$6170$1bEyPh
     g$7280$6250$1bEyPh
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7283$1bEyPh
       '#f
       '#f
       '#()))
   (g$7282$6171$1bEyPh g$7282$6251$1bEyPh '#f)
   (g$7281$6172$1bEyPh
     g$7281$6252$1bEyPh
     (make-record-constructor-descriptor
       g$7280$6170$1bEyPh
       &error-rcd
       g$7282$6171$1bEyPh))
   (g$7279$6173$1bEyPh
     g$7279$6253$1bEyPh
     (record-predicate g$7280$6170$1bEyPh))
   (g$make-i/o-error$6174$1bEyPh
     g$make-i/o-error$6254$1bEyPh
     (record-constructor g$7281$6172$1bEyPh))
   (g$i/o-error?$6175$1bEyPh
     g$i/o-error?$6255$1bEyPh
     (condition-predicate g$7280$6170$1bEyPh))
   (g$7294$6176$1bEyPh
     g$7294$6256$1bEyPh
     (make-record-type-descriptor
       '&i/o-read
       g$7280$6170$1bEyPh
       'g$7297$1bEyPh
       '#f
       '#f
       '#()))
   (g$7296$6177$1bEyPh g$7296$6257$1bEyPh '#f)
   (g$7295$6178$1bEyPh
     g$7295$6258$1bEyPh
     (make-record-constructor-descriptor
       g$7294$6176$1bEyPh
       g$7281$6172$1bEyPh
       g$7296$6177$1bEyPh))
   (g$7293$6179$1bEyPh
     g$7293$6259$1bEyPh
     (record-predicate g$7294$6176$1bEyPh))
   (g$make-i/o-read-error$6180$1bEyPh
     g$make-i/o-read-error$6260$1bEyPh
     (record-constructor g$7295$6178$1bEyPh))
   (g$i/o-read-error?$6181$1bEyPh
     g$i/o-read-error?$6261$1bEyPh
     (condition-predicate g$7294$6176$1bEyPh))
   (g$7308$6182$1bEyPh
     g$7308$6262$1bEyPh
     (make-record-type-descriptor
       '&i/o-write
       g$7280$6170$1bEyPh
       'g$7311$1bEyPh
       '#f
       '#f
       '#()))
   (g$7310$6183$1bEyPh g$7310$6263$1bEyPh '#f)
   (g$7309$6184$1bEyPh
     g$7309$6264$1bEyPh
     (make-record-constructor-descriptor
       g$7308$6182$1bEyPh
       g$7281$6172$1bEyPh
       g$7310$6183$1bEyPh))
   (g$7307$6185$1bEyPh
     g$7307$6265$1bEyPh
     (record-predicate g$7308$6182$1bEyPh))
   (g$make-i/o-write-error$6186$1bEyPh
     g$make-i/o-write-error$6266$1bEyPh
     (record-constructor g$7309$6184$1bEyPh))
   (g$i/o-write-error?$6187$1bEyPh
     g$i/o-write-error?$6267$1bEyPh
     (condition-predicate g$7308$6182$1bEyPh))
   (g$7323$6188$1bEyPh
     g$7323$6268$1bEyPh
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7280$6170$1bEyPh
       'g$7326$1bEyPh
       '#f
       '#f
       '#((immutable position))))
   (g$7325$6189$1bEyPh g$7325$6269$1bEyPh '#f)
   (g$7324$6190$1bEyPh
     g$7324$6270$1bEyPh
     (make-record-constructor-descriptor
       g$7323$6188$1bEyPh
       g$7281$6172$1bEyPh
       g$7325$6189$1bEyPh))
   (g$7322$6191$1bEyPh
     g$7322$6271$1bEyPh
     (record-predicate g$7323$6188$1bEyPh))
   (g$make-i/o-invalid-position-error$6192$1bEyPh
     g$make-i/o-invalid-position-error$6272$1bEyPh
     (record-constructor g$7324$6190$1bEyPh))
   (g$7321$6193$1bEyPh
     g$7321$6273$1bEyPh
     (record-accessor g$7323$6188$1bEyPh '0))
   (g$i/o-invalid-position-error?$6194$1bEyPh
     g$i/o-invalid-position-error?$6274$1bEyPh
     (condition-predicate g$7323$6188$1bEyPh))
   (g$i/o-error-position$6195$1bEyPh
     g$i/o-error-position$6275$1bEyPh
     (condition-accessor g$7323$6188$1bEyPh g$7321$6193$1bEyPh))
   (g$7340$6196$1bEyPh
     g$7340$6276$1bEyPh
     (make-record-type-descriptor
       '&i/o-filename
       g$7280$6170$1bEyPh
       'g$7343$1bEyPh
       '#f
       '#f
       '#((immutable filename))))
   (g$7342$6197$1bEyPh g$7342$6277$1bEyPh '#f)
   (g$7341$6198$1bEyPh
     g$7341$6278$1bEyPh
     (make-record-constructor-descriptor
       g$7340$6196$1bEyPh
       g$7281$6172$1bEyPh
       g$7342$6197$1bEyPh))
   (g$7339$6199$1bEyPh
     g$7339$6279$1bEyPh
     (record-predicate g$7340$6196$1bEyPh))
   (g$make-i/o-filename-error$6200$1bEyPh
     g$make-i/o-filename-error$6280$1bEyPh
     (record-constructor g$7341$6198$1bEyPh))
   (g$7338$6201$1bEyPh
     g$7338$6281$1bEyPh
     (record-accessor g$7340$6196$1bEyPh '0))
   (g$i/o-filename-error?$6202$1bEyPh
     g$i/o-filename-error?$6282$1bEyPh
     (condition-predicate g$7340$6196$1bEyPh))
   (g$i/o-error-filename$6203$1bEyPh
     g$i/o-error-filename$6283$1bEyPh
     (condition-accessor g$7340$6196$1bEyPh g$7338$6201$1bEyPh))
   (g$7356$6204$1bEyPh
     g$7356$6284$1bEyPh
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7340$6196$1bEyPh
       'g$7359$1bEyPh
       '#f
       '#f
       '#()))
   (g$7358$6205$1bEyPh g$7358$6285$1bEyPh '#f)
   (g$7357$6206$1bEyPh
     g$7357$6286$1bEyPh
     (make-record-constructor-descriptor
       g$7356$6204$1bEyPh
       g$7341$6198$1bEyPh
       g$7358$6205$1bEyPh))
   (g$7355$6207$1bEyPh
     g$7355$6287$1bEyPh
     (record-predicate g$7356$6204$1bEyPh))
   (g$make-i/o-file-protection-error$6208$1bEyPh
     g$make-i/o-file-protection-error$6288$1bEyPh
     (record-constructor g$7357$6206$1bEyPh))
   (g$i/o-file-protection-error?$6209$1bEyPh
     g$i/o-file-protection-error?$6289$1bEyPh
     (condition-predicate g$7356$6204$1bEyPh))
   (g$7370$6210$1bEyPh
     g$7370$6290$1bEyPh
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7356$6204$1bEyPh
       'g$7373$1bEyPh
       '#f
       '#f
       '#()))
   (g$7372$6211$1bEyPh g$7372$6291$1bEyPh '#f)
   (g$7371$6212$1bEyPh
     g$7371$6292$1bEyPh
     (make-record-constructor-descriptor
       g$7370$6210$1bEyPh
       g$7357$6206$1bEyPh
       g$7372$6211$1bEyPh))
   (g$7369$6213$1bEyPh
     g$7369$6293$1bEyPh
     (record-predicate g$7370$6210$1bEyPh))
   (g$make-i/o-file-is-read-only-error$6214$1bEyPh
     g$make-i/o-file-is-read-only-error$6294$1bEyPh
     (record-constructor g$7371$6212$1bEyPh))
   (g$i/o-file-is-read-only-error?$6215$1bEyPh
     g$i/o-file-is-read-only-error?$6295$1bEyPh
     (condition-predicate g$7370$6210$1bEyPh))
   (g$7384$6216$1bEyPh
     g$7384$6296$1bEyPh
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7340$6196$1bEyPh
       'g$7387$1bEyPh
       '#f
       '#f
       '#()))
   (g$7386$6217$1bEyPh g$7386$6297$1bEyPh '#f)
   (g$7385$6218$1bEyPh
     g$7385$6298$1bEyPh
     (make-record-constructor-descriptor
       g$7384$6216$1bEyPh
       g$7341$6198$1bEyPh
       g$7386$6217$1bEyPh))
   (g$7383$6219$1bEyPh
     g$7383$6299$1bEyPh
     (record-predicate g$7384$6216$1bEyPh))
   (g$make-i/o-file-already-exists-error$6220$1bEyPh
     g$make-i/o-file-already-exists-error$6300$1bEyPh
     (record-constructor g$7385$6218$1bEyPh))
   (g$i/o-file-already-exists-error?$6221$1bEyPh
     g$i/o-file-already-exists-error?$6301$1bEyPh
     (condition-predicate g$7384$6216$1bEyPh))
   (g$7398$6222$1bEyPh
     g$7398$6302$1bEyPh
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7340$6196$1bEyPh
       'g$7401$1bEyPh
       '#f
       '#f
       '#()))
   (g$7400$6223$1bEyPh g$7400$6303$1bEyPh '#f)
   (g$7399$6224$1bEyPh
     g$7399$6304$1bEyPh
     (make-record-constructor-descriptor
       g$7398$6222$1bEyPh
       g$7341$6198$1bEyPh
       g$7400$6223$1bEyPh))
   (g$7397$6225$1bEyPh
     g$7397$6305$1bEyPh
     (record-predicate g$7398$6222$1bEyPh))
   (g$make-i/o-file-does-not-exist-error$6226$1bEyPh
     g$make-i/o-file-does-not-exist-error$6306$1bEyPh
     (record-constructor g$7399$6224$1bEyPh))
   (g$i/o-file-does-not-exist-error?$6227$1bEyPh
     g$i/o-file-does-not-exist-error?$6307$1bEyPh
     (condition-predicate g$7398$6222$1bEyPh))
   (g$7413$6228$1bEyPh
     g$7413$6308$1bEyPh
     (make-record-type-descriptor
       '&i/o-port
       g$7280$6170$1bEyPh
       'g$7416$1bEyPh
       '#f
       '#f
       '#((immutable port))))
   (g$7415$6229$1bEyPh g$7415$6309$1bEyPh '#f)
   (g$7414$6230$1bEyPh
     g$7414$6310$1bEyPh
     (make-record-constructor-descriptor
       g$7413$6228$1bEyPh
       g$7281$6172$1bEyPh
       g$7415$6229$1bEyPh))
   (g$7412$6231$1bEyPh
     g$7412$6311$1bEyPh
     (record-predicate g$7413$6228$1bEyPh))
   (g$make-i/o-port-error$6232$1bEyPh
     g$make-i/o-port-error$6312$1bEyPh
     (record-constructor g$7414$6230$1bEyPh))
   (g$7411$6233$1bEyPh
     g$7411$6313$1bEyPh
     (record-accessor g$7413$6228$1bEyPh '0))
   (g$i/o-port-error?$6234$1bEyPh
     g$i/o-port-error?$6314$1bEyPh
     (condition-predicate g$7413$6228$1bEyPh))
   (g$i/o-error-port$6235$1bEyPh
     g$i/o-error-port$6315$1bEyPh
     (condition-accessor g$7413$6228$1bEyPh g$7411$6233$1bEyPh))
   (g$7429$6236$1bEyPh
     g$7429$6316$1bEyPh
     (make-record-type-descriptor
       '&i/o-decoding
       g$7413$6228$1bEyPh
       'g$7432$1bEyPh
       '#f
       '#f
       '#()))
   (g$7431$6237$1bEyPh g$7431$6317$1bEyPh '#f)
   (g$7430$6238$1bEyPh
     g$7430$6318$1bEyPh
     (make-record-constructor-descriptor
       g$7429$6236$1bEyPh
       g$7414$6230$1bEyPh
       g$7431$6237$1bEyPh))
   (g$7428$6239$1bEyPh
     g$7428$6319$1bEyPh
     (record-predicate g$7429$6236$1bEyPh))
   (g$make-i/o-decoding-error$6240$1bEyPh
     g$make-i/o-decoding-error$6320$1bEyPh
     (record-constructor g$7430$6238$1bEyPh))
   (g$i/o-decoding-error?$6241$1bEyPh
     g$i/o-decoding-error?$6321$1bEyPh
     (condition-predicate g$7429$6236$1bEyPh))
   (g$7444$6242$1bEyPh
     g$7444$6322$1bEyPh
     (make-record-type-descriptor
       '&i/o-encoding
       g$7413$6228$1bEyPh
       'g$7447$1bEyPh
       '#f
       '#f
       '#((immutable char))))
   (g$7446$6243$1bEyPh g$7446$6323$1bEyPh '#f)
   (g$7445$6244$1bEyPh
     g$7445$6324$1bEyPh
     (make-record-constructor-descriptor
       g$7444$6242$1bEyPh
       g$7414$6230$1bEyPh
       g$7446$6243$1bEyPh))
   (g$7443$6245$1bEyPh
     g$7443$6325$1bEyPh
     (record-predicate g$7444$6242$1bEyPh))
   (g$make-i/o-encoding-error$6246$1bEyPh
     g$make-i/o-encoding-error$6326$1bEyPh
     (record-constructor g$7445$6244$1bEyPh))
   (g$7442$6247$1bEyPh
     g$7442$6327$1bEyPh
     (record-accessor g$7444$6242$1bEyPh '0))
   (g$i/o-encoding-error?$6248$1bEyPh
     g$i/o-encoding-error?$6328$1bEyPh
     (condition-predicate g$7444$6242$1bEyPh))
   (g$i/o-encoding-error-char$6249$1bEyPh
     g$i/o-encoding-error-char$6329$1bEyPh
     (condition-accessor g$7444$6242$1bEyPh g$7442$6247$1bEyPh)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6330$1bEyPh
     g$get-output-string$6338$1bEyPh
     (case-lambda
       ((g$port$6334$1bEyPh)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6334$1bEyPh))))
   (g$open-output-string$6331$1bEyPh
     g$open-output-string$6339$1bEyPh
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6332$1bEyPh
     g$open-string-output-port$6340$1bEyPh
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6335$1bEyPh)
            (values
              g$p$6335$1bEyPh
              (case-lambda
                (() (g$get-output-string$6330$1bEyPh g$p$6335$1bEyPh))))))
         (g$open-output-string$6331$1bEyPh)))))
   (g$port?$6333$1bEyPh
     g$port?$6341$1bEyPh
     (case-lambda
       ((g$obj$6336$1bEyPh)
        ((case-lambda
           ((g$t$6337$1bEyPh)
            (if g$t$6337$1bEyPh
              g$t$6337$1bEyPh
              (begin '#f (binary-port? g$obj$6336$1bEyPh)))))
         (textual-port? g$obj$6336$1bEyPh))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6348$1bEyPh
     g$with-input-from-file$6374$1bEyPh
     (case-lambda
       ((g$filename$6352$1bEyPh g$thunk$6353$1bEyPh)
        ((case-lambda
           ((g$current-input-port$6356$1bEyPh g$t$6357$1bEyPh)
            ((case-lambda
               ((g$swap$6358$1bEyPh)
                (dynamic-wind
                  g$swap$6358$1bEyPh
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6353$1bEyPh)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6358$1bEyPh)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6359$1bEyPh)
                    (begin
                      (g$current-input-port$6356$1bEyPh g$t$6357$1bEyPh)
                      (set! g$t$6357$1bEyPh g$t$6359$1bEyPh))))
                 (g$current-input-port$6356$1bEyPh)))))))
         current-input-port
         (open-input-file g$filename$6352$1bEyPh)))))
   (g$with-output-to-file$6349$1bEyPh
     g$with-output-to-file$6375$1bEyPh
     (case-lambda
       ((g$filename$6360$1bEyPh g$thunk$6361$1bEyPh)
        ((case-lambda
           ((g$current-output-port$6364$1bEyPh g$t$6365$1bEyPh)
            ((case-lambda
               ((g$swap$6366$1bEyPh)
                (dynamic-wind
                  g$swap$6366$1bEyPh
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6361$1bEyPh)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6366$1bEyPh)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6367$1bEyPh)
                    (begin
                      (g$current-output-port$6364$1bEyPh g$t$6365$1bEyPh)
                      (set! g$t$6365$1bEyPh g$t$6367$1bEyPh))))
                 (g$current-output-port$6364$1bEyPh)))))))
         current-output-port
         (open-output-file g$filename$6360$1bEyPh)))))
   (g$call-with-input-file$6350$1bEyPh
     g$call-with-input-file$6376$1bEyPh
     (case-lambda
       ((g$filename$6368$1bEyPh g$proc$6369$1bEyPh)
        ((case-lambda
           ((g$p$6370$1bEyPh)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6369$1bEyPh g$p$6370$1bEyPh)))
              (case-lambda (() (close-input-port g$p$6370$1bEyPh))))))
         (open-input-file g$filename$6368$1bEyPh)))))
   (g$call-with-output-file$6351$1bEyPh
     g$call-with-output-file$6377$1bEyPh
     (case-lambda
       ((g$filename$6371$1bEyPh g$proc$6372$1bEyPh)
        ((case-lambda
           ((g$p$6373$1bEyPh)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6372$1bEyPh g$p$6373$1bEyPh)))
              (case-lambda (() (close-output-port g$p$6373$1bEyPh))))))
         (open-output-file g$filename$6371$1bEyPh))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7511$6378$1bEyPh
     g$7511$6484$1bEyPh
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7513$6379$1bEyPh g$7513$6485$1bEyPh '#f)
   (g$7512$6380$1bEyPh
     g$7512$6486$1bEyPh
     (make-record-constructor-descriptor
       g$7511$6378$1bEyPh
       '#f
       g$7513$6379$1bEyPh))
   (g$enum?$6381$1bEyPh
     g$enum?$6487$1bEyPh
     (record-predicate g$7511$6378$1bEyPh))
   (g$make-enum$6382$1bEyPh
     g$make-enum$6488$1bEyPh
     (record-constructor g$7512$6380$1bEyPh))
   (g$enum-value$6383$1bEyPh
     g$enum-value$6489$1bEyPh
     (record-accessor g$7511$6378$1bEyPh '0))
   (g$enum-info$6384$1bEyPh
     g$enum-info$6490$1bEyPh
     (record-accessor g$7511$6378$1bEyPh '1))
   (g$7524$6385$1bEyPh
     g$7524$6491$1bEyPh
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7526$6386$1bEyPh g$7526$6492$1bEyPh '#f)
   (g$7525$6387$1bEyPh
     g$7525$6493$1bEyPh
     (make-record-constructor-descriptor
       g$7524$6385$1bEyPh
       '#f
       g$7526$6386$1bEyPh))
   (g$enum-universe?$6388$1bEyPh
     g$enum-universe?$6494$1bEyPh
     (record-predicate g$7524$6385$1bEyPh))
   (g$make-enum-universe$6389$1bEyPh
     g$make-enum-universe$6495$1bEyPh
     (record-constructor g$7525$6387$1bEyPh))
   (g$enum-universe-id$6390$1bEyPh
     g$enum-universe-id$6496$1bEyPh
     (record-accessor g$7524$6385$1bEyPh '0))
   (g$enum-universe-symbols$6391$1bEyPh
     g$enum-universe-symbols$6497$1bEyPh
     (record-accessor g$7524$6385$1bEyPh '1))
   (g$enum-universe-mapping$6392$1bEyPh
     g$enum-universe-mapping$6498$1bEyPh
     (record-accessor g$7524$6385$1bEyPh '2))
   (g$enum-universe-value$6393$1bEyPh
     g$enum-universe-value$6499$1bEyPh
     (record-accessor g$7524$6385$1bEyPh '3))
   (g$enum-type=?$6394$1bEyPh
     g$enum-type=?$6500$1bEyPh
     (case-lambda
       ((g$enumset1$6414$1bEyPh g$enumset2$6415$1bEyPh)
        (eq? (g$enum-universe-id$6390$1bEyPh
               (g$enum-info$6384$1bEyPh g$enumset1$6414$1bEyPh))
             (g$enum-universe-id$6390$1bEyPh
               (g$enum-info$6384$1bEyPh g$enumset2$6415$1bEyPh))))))
   (g$get-symbols$6395$1bEyPh
     g$get-symbols$6501$1bEyPh
     (case-lambda
       ((g$enumset$6416$1bEyPh)
        (g$enum-universe-symbols$6391$1bEyPh
          (g$enum-info$6384$1bEyPh g$enumset$6416$1bEyPh)))))
   (g$get-value$6396$1bEyPh
     g$get-value$6502$1bEyPh
     (case-lambda
       ((g$enumset$6417$1bEyPh g$s$6418$1bEyPh)
        (g$hashtable-ref$5287$1bEyPh
          (g$enum-universe-mapping$6392$1bEyPh
            (g$enum-info$6384$1bEyPh g$enumset$6417$1bEyPh))
          g$s$6418$1bEyPh
          '#f))))
   (g$assert-enum$6397$1bEyPh
     g$assert-enum$6503$1bEyPh
     (case-lambda
       ((g$who$6419$1bEyPh g$enumset$6420$1bEyPh)
        (if (not (g$enum?$6381$1bEyPh g$enumset$6420$1bEyPh))
          (assertion-violation
            g$who$6419$1bEyPh
            '"not an enumeration"
            g$enumset$6420$1bEyPh)
          (void)))))
   (g$make-info$6398$1bEyPh
     g$make-info$6504$1bEyPh
     (case-lambda
       ((g$symbols$6421$1bEyPh)
        ((case-lambda
           ((g$ht$6422$1bEyPh)
            ((letrec ((g$f$6423$1bEyPh
                        (case-lambda
                          ((g$s$6424$1bEyPh g$a$6425$1bEyPh g$mask$6426$1bEyPh)
                           (if (null? g$s$6424$1bEyPh)
                             (values
                               (reverse! g$a$6425$1bEyPh)
                               g$ht$6422$1bEyPh
                               (- g$mask$6426$1bEyPh '1))
                             ((case-lambda
                                ((g$n$6427$1bEyPh)
                                 (if (symbol? g$n$6427$1bEyPh)
                                   (if (g$hashtable-contains?$5290$1bEyPh
                                         g$ht$6422$1bEyPh
                                         g$n$6427$1bEyPh)
                                     (g$f$6423$1bEyPh
                                       (cdr g$s$6424$1bEyPh)
                                       g$a$6425$1bEyPh
                                       g$mask$6426$1bEyPh)
                                     (begin
                                       (g$hashtable-set!$5288$1bEyPh
                                         g$ht$6422$1bEyPh
                                         g$n$6427$1bEyPh
                                         g$mask$6426$1bEyPh)
                                       (g$f$6423$1bEyPh
                                         (cdr g$s$6424$1bEyPh)
                                         (cons g$n$6427$1bEyPh g$a$6425$1bEyPh)
                                         (g$bitwise-arithmetic-shift-left$6089$1bEyPh
                                           g$mask$6426$1bEyPh
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6427$1bEyPh))))
                              (car g$s$6424$1bEyPh)))))))
               g$f$6423$1bEyPh)
             g$symbols$6421$1bEyPh
             '()
             '1)))
         (g$make-eq-hashtable$5284$1bEyPh)))))
   (g$make-enumeration$6399$1bEyPh
     g$make-enumeration$6505$1bEyPh
     (case-lambda
       ((g$symbols$6428$1bEyPh)
        (call-with-values
          (case-lambda (() (g$make-info$6398$1bEyPh g$symbols$6428$1bEyPh)))
          (case-lambda
            ((g$s$6432$1bEyPh g$mapping$6433$1bEyPh g$mask$6434$1bEyPh)
             ((case-lambda
                ((g$mask$6435$1bEyPh g$mapping$6436$1bEyPh g$s$6437$1bEyPh)
                 (g$make-enum$6382$1bEyPh
                   g$mask$6435$1bEyPh
                   (g$make-enum-universe$6389$1bEyPh
                     (gensym)
                     g$s$6437$1bEyPh
                     g$mapping$6436$1bEyPh
                     g$mask$6435$1bEyPh))))
              g$mask$6434$1bEyPh
              g$mapping$6433$1bEyPh
              g$s$6432$1bEyPh)))))))
   (g$enum-set-universe$6400$1bEyPh
     g$enum-set-universe$6506$1bEyPh
     (case-lambda
       ((g$enumset$6438$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh 'enum-set-universe g$enumset$6438$1bEyPh)
          ((case-lambda
             ((g$ei$6439$1bEyPh)
              (g$make-enum$6382$1bEyPh
                (g$enum-universe-value$6393$1bEyPh g$ei$6439$1bEyPh)
                g$ei$6439$1bEyPh)))
           (g$enum-info$6384$1bEyPh g$enumset$6438$1bEyPh))))))
   (g$enum-set-indexer$6401$1bEyPh
     g$enum-set-indexer$6507$1bEyPh
     (case-lambda
       ((g$enumset$6440$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh 'enum-set-indexer g$enumset$6440$1bEyPh)
          (case-lambda
            ((g$symbol$6441$1bEyPh)
             (begin
               (if (not (symbol? g$symbol$6441$1bEyPh))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6441$1bEyPh)
                 (void))
               ((case-lambda
                  ((g$v$6442$1bEyPh)
                   (if g$v$6442$1bEyPh
                     (- (bitwise-length g$v$6442$1bEyPh) '1)
                     '#f)))
                (g$get-value$6396$1bEyPh
                  g$enumset$6440$1bEyPh
                  g$symbol$6441$1bEyPh)))))))))
   (g$enum-set-constructor$6402$1bEyPh
     g$enum-set-constructor$6508$1bEyPh
     (case-lambda
       ((g$enumset$6443$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh
            'enum-set-constructor
            g$enumset$6443$1bEyPh)
          (case-lambda
            ((g$symbols$6444$1bEyPh)
             ((letrec ((g$f$6445$1bEyPh
                         (case-lambda
                           ((g$v$6446$1bEyPh g$s$6447$1bEyPh)
                            (if (null? g$s$6447$1bEyPh)
                              (g$make-enum$6382$1bEyPh
                                g$v$6446$1bEyPh
                                (g$enum-info$6384$1bEyPh g$enumset$6443$1bEyPh))
                              ((case-lambda
                                 ((g$n$6448$1bEyPh)
                                  (if (symbol? g$n$6448$1bEyPh)
                                    ((case-lambda
                                       ((g$v*$6449$1bEyPh)
                                        (if g$v*$6449$1bEyPh
                                          (g$f$6445$1bEyPh
                                            (bitwise-ior
                                              g$v$6446$1bEyPh
                                              g$v*$6449$1bEyPh)
                                            (cdr g$s$6447$1bEyPh))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6448$1bEyPh))))
                                     (g$get-value$6396$1bEyPh
                                       g$enumset$6443$1bEyPh
                                       g$n$6448$1bEyPh))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6448$1bEyPh))))
                               (car g$s$6447$1bEyPh)))))))
                g$f$6445$1bEyPh)
              '0
              g$symbols$6444$1bEyPh)))))))
   (g$enum-set->list$6403$1bEyPh
     g$enum-set->list$6509$1bEyPh
     (case-lambda
       ((g$enumset$6450$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh 'enum-set->list g$enumset$6450$1bEyPh)
          ((case-lambda
             ((g$value$6451$1bEyPh)
              ((letrec ((g$f$6452$1bEyPh
                          (case-lambda
                            ((g$s$6453$1bEyPh g$l$6454$1bEyPh)
                             (if (null? g$s$6453$1bEyPh)
                               (reverse! g$l$6454$1bEyPh)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6396$1bEyPh
                                         g$enumset$6450$1bEyPh
                                         (car g$s$6453$1bEyPh))
                                       g$value$6451$1bEyPh))
                                 (g$f$6452$1bEyPh
                                   (cdr g$s$6453$1bEyPh)
                                   g$l$6454$1bEyPh)
                                 (g$f$6452$1bEyPh
                                   (cdr g$s$6453$1bEyPh)
                                   (cons
                                     (car g$s$6453$1bEyPh)
                                     g$l$6454$1bEyPh))))))))
                 g$f$6452$1bEyPh)
               (g$get-symbols$6395$1bEyPh g$enumset$6450$1bEyPh)
               '())))
           (g$enum-value$6383$1bEyPh g$enumset$6450$1bEyPh))))))
   (g$enum-set-member?$6404$1bEyPh
     g$enum-set-member?$6510$1bEyPh
     (case-lambda
       ((g$symbol$6455$1bEyPh g$enumset$6456$1bEyPh)
        (begin
          (if (not (symbol? g$symbol$6455$1bEyPh))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6455$1bEyPh)
            (void))
          (g$assert-enum$6397$1bEyPh 'enum-set-member? g$enumset$6456$1bEyPh)
          ((case-lambda
             ((g$v$6457$1bEyPh)
              (if g$v$6457$1bEyPh
                (not (zero?
                       (bitwise-and
                         g$v$6457$1bEyPh
                         (g$enum-value$6383$1bEyPh g$enumset$6456$1bEyPh))))
                '#f)))
           (g$get-value$6396$1bEyPh
             g$enumset$6456$1bEyPh
             g$symbol$6455$1bEyPh))))))
   (g$enum-set-subset?$6405$1bEyPh
     g$enum-set-subset?$6511$1bEyPh
     (case-lambda
       ((g$enumset1$6458$1bEyPh g$enumset2$6459$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh 'enum-set-subset? g$enumset1$6458$1bEyPh)
          (g$assert-enum$6397$1bEyPh 'enum-set-subset? g$enumset2$6459$1bEyPh)
          ((case-lambda
             ((g$v1$6460$1bEyPh g$v2$6461$1bEyPh)
              (if (g$enum-type=?$6394$1bEyPh
                    g$enumset1$6458$1bEyPh
                    g$enumset2$6459$1bEyPh)
                (= (bitwise-and g$v1$6460$1bEyPh g$v2$6461$1bEyPh)
                   g$v1$6460$1bEyPh)
                ((letrec ((g$f$6462$1bEyPh
                            (case-lambda
                              ((g$s$6463$1bEyPh)
                               (if (null? g$s$6463$1bEyPh)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6464$1bEyPh g$v2*$6465$1bEyPh)
                                     (if g$v2*$6465$1bEyPh
                                       ((case-lambda
                                          ((g$has1$6466$1bEyPh
                                             g$has2$6467$1bEyPh)
                                           (if (if g$has1$6466$1bEyPh
                                                 (begin
                                                   '#f
                                                   (not g$has2$6467$1bEyPh))
                                                 '#f)
                                             '#f
                                             (g$f$6462$1bEyPh
                                               (cdr g$s$6463$1bEyPh)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6460$1bEyPh
                                                 g$v1*$6464$1bEyPh)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6461$1bEyPh
                                                 g$v2*$6465$1bEyPh))))
                                       '#f)))
                                  (g$get-value$6396$1bEyPh
                                    g$enumset1$6458$1bEyPh
                                    (car g$s$6463$1bEyPh))
                                  (g$get-value$6396$1bEyPh
                                    g$enumset2$6459$1bEyPh
                                    (car g$s$6463$1bEyPh))))))))
                   g$f$6462$1bEyPh)
                 (g$get-symbols$6395$1bEyPh g$enumset1$6458$1bEyPh)))))
           (g$enum-value$6383$1bEyPh g$enumset1$6458$1bEyPh)
           (g$enum-value$6383$1bEyPh g$enumset2$6459$1bEyPh))))))
   (g$enum-set=?$6406$1bEyPh
     g$enum-set=?$6512$1bEyPh
     (case-lambda
       ((g$enumset1$6468$1bEyPh g$enumset2$6469$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh 'enum-set=? g$enumset1$6468$1bEyPh)
          (g$assert-enum$6397$1bEyPh 'enum-set=? g$enumset2$6469$1bEyPh)
          (if (g$enum-set-subset?$6405$1bEyPh
                g$enumset1$6468$1bEyPh
                g$enumset2$6469$1bEyPh)
            (begin
              '#f
              (g$enum-set-subset?$6405$1bEyPh
                g$enumset2$6469$1bEyPh
                g$enumset1$6468$1bEyPh))
            '#f)))))
   (g$enum-set-union$6407$1bEyPh
     g$enum-set-union$6513$1bEyPh
     (case-lambda
       ((g$enumset1$6470$1bEyPh g$enumset2$6471$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh 'enum-set-union g$enumset1$6470$1bEyPh)
          (g$assert-enum$6397$1bEyPh 'enum-set-union g$enumset2$6471$1bEyPh)
          (if (g$enum-type=?$6394$1bEyPh
                g$enumset1$6470$1bEyPh
                g$enumset2$6471$1bEyPh)
            (g$make-enum$6382$1bEyPh
              (bitwise-ior
                (g$enum-value$6383$1bEyPh g$enumset1$6470$1bEyPh)
                (g$enum-value$6383$1bEyPh g$enumset2$6471$1bEyPh))
              (g$enum-info$6384$1bEyPh g$enumset1$6470$1bEyPh))
            '#f)))))
   (g$enum-set-intersection$6408$1bEyPh
     g$enum-set-intersection$6514$1bEyPh
     (case-lambda
       ((g$enumset1$6472$1bEyPh g$enumset2$6473$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh
            'enum-set-intersection
            g$enumset1$6472$1bEyPh)
          (g$assert-enum$6397$1bEyPh
            'enum-set-intersection
            g$enumset2$6473$1bEyPh)
          (if (g$enum-type=?$6394$1bEyPh
                g$enumset1$6472$1bEyPh
                g$enumset2$6473$1bEyPh)
            (g$make-enum$6382$1bEyPh
              (bitwise-and
                (g$enum-value$6383$1bEyPh g$enumset1$6472$1bEyPh)
                (g$enum-value$6383$1bEyPh g$enumset2$6473$1bEyPh))
              (g$enum-info$6384$1bEyPh g$enumset1$6472$1bEyPh))
            '#f)))))
   (g$enum-set-difference$6409$1bEyPh
     g$enum-set-difference$6515$1bEyPh
     (case-lambda
       ((g$enumset1$6474$1bEyPh g$enumset2$6475$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh
            'enum-set-difference
            g$enumset1$6474$1bEyPh)
          (g$assert-enum$6397$1bEyPh
            'enum-set-difference
            g$enumset2$6475$1bEyPh)
          (if (g$enum-type=?$6394$1bEyPh
                g$enumset1$6474$1bEyPh
                g$enumset2$6475$1bEyPh)
            (g$make-enum$6382$1bEyPh
              (bitwise-and
                (g$enum-value$6383$1bEyPh g$enumset1$6474$1bEyPh)
                (bitwise-not (g$enum-value$6383$1bEyPh g$enumset2$6475$1bEyPh)))
              (g$enum-info$6384$1bEyPh g$enumset1$6474$1bEyPh))
            '#f)))))
   (g$enum-set-complement$6410$1bEyPh
     g$enum-set-complement$6516$1bEyPh
     (case-lambda
       ((g$enumset$6476$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh 'enum-set-complement g$enumset$6476$1bEyPh)
          (g$make-enum$6382$1bEyPh
            (bitwise-not (g$enum-value$6383$1bEyPh g$enumset$6476$1bEyPh))
            (g$enum-info$6384$1bEyPh g$enumset$6476$1bEyPh))))))
   (g$enum-set-projection$6411$1bEyPh
     g$enum-set-projection$6517$1bEyPh
     (case-lambda
       ((g$enumset1$6477$1bEyPh g$enumset2$6478$1bEyPh)
        (begin
          (g$assert-enum$6397$1bEyPh
            'enum-set-projection
            g$enumset1$6477$1bEyPh)
          (g$assert-enum$6397$1bEyPh
            'enum-set-projection
            g$enumset2$6478$1bEyPh)
          ((case-lambda
             ((g$v1$6479$1bEyPh)
              ((letrec ((g$f$6480$1bEyPh
                          (case-lambda
                            ((g$s$6481$1bEyPh g$v$6482$1bEyPh)
                             (if (null? g$s$6481$1bEyPh)
                               (g$make-enum$6382$1bEyPh
                                 g$v$6482$1bEyPh
                                 (g$enum-info$6384$1bEyPh
                                   g$enumset2$6478$1bEyPh))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6479$1bEyPh
                                       (g$get-value$6396$1bEyPh
                                         g$enumset1$6477$1bEyPh
                                         (car g$s$6481$1bEyPh))))
                                 (g$f$6480$1bEyPh
                                   (cdr g$s$6481$1bEyPh)
                                   g$v$6482$1bEyPh)
                                 ((case-lambda
                                    ((g$v2$6483$1bEyPh)
                                     (if g$v2$6483$1bEyPh
                                       (g$f$6480$1bEyPh
                                         (cdr g$s$6481$1bEyPh)
                                         (bitwise-ior
                                           g$v$6482$1bEyPh
                                           g$v2$6483$1bEyPh))
                                       (g$f$6480$1bEyPh
                                         (cdr g$s$6481$1bEyPh)
                                         g$v$6482$1bEyPh))))
                                  (g$get-value$6396$1bEyPh
                                    g$enumset2$6478$1bEyPh
                                    (car g$s$6481$1bEyPh)))))))))
                 g$f$6480$1bEyPh)
               (g$get-symbols$6395$1bEyPh g$enumset1$6477$1bEyPh)
               '0)))
           (g$enum-value$6383$1bEyPh g$enumset1$6477$1bEyPh)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6412$1bEyPh g$p$6413$1bEyPh)
       (g$fprintf$6542$1bEyPh
         g$p$6413$1bEyPh
         '"#[enum-set ~a]"
         (g$enum-set->list$6403$1bEyPh g$x$6412$1bEyPh))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6518$1bEyPh
     g$dofmt$6540$1bEyPh
     (case-lambda
       ((g$p$6522$1bEyPh g$cntl$6523$1bEyPh g$args$6524$1bEyPh)
        ((case-lambda
           ((g$nmax$6525$1bEyPh)
            ((letrec ((g$loop$6526$1bEyPh
                        (case-lambda
                          ((g$n$6527$1bEyPh g$a$6528$1bEyPh)
                           (if (fx<=? g$n$6527$1bEyPh g$nmax$6525$1bEyPh)
                             ((case-lambda
                                ((g$c$6529$1bEyPh)
                                 (if (if (g$char=?$5044$1bEyPh
                                           g$c$6529$1bEyPh
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6527$1bEyPh
                                           g$nmax$6525$1bEyPh))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6530$1bEyPh)
                                       (if (memv g$t$6530$1bEyPh '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6528$1bEyPh)
                                             g$p$6522$1bEyPh)
                                           (g$loop$6526$1bEyPh
                                             (fx+ g$n$6527$1bEyPh '2)
                                             (cdr g$a$6528$1bEyPh)))
                                         (if (memv g$t$6530$1bEyPh '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6528$1bEyPh)
                                               g$p$6522$1bEyPh)
                                             (g$loop$6526$1bEyPh
                                               (fx+ g$n$6527$1bEyPh '2)
                                               (cdr g$a$6528$1bEyPh)))
                                           (if (memv g$t$6530$1bEyPh '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6528$1bEyPh)
                                                   '2)
                                                 g$p$6522$1bEyPh)
                                               (g$loop$6526$1bEyPh
                                                 (fx+ g$n$6527$1bEyPh '2)
                                                 (cdr g$a$6528$1bEyPh)))
                                             (if (memv g$t$6530$1bEyPh '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6528$1bEyPh)
                                                     '8)
                                                   g$p$6522$1bEyPh)
                                                 (g$loop$6526$1bEyPh
                                                   (fx+ g$n$6527$1bEyPh '2)
                                                   (cdr g$a$6528$1bEyPh)))
                                               (if (memv g$t$6530$1bEyPh '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6528$1bEyPh)
                                                       '16)
                                                     g$p$6522$1bEyPh)
                                                   (g$loop$6526$1bEyPh
                                                     (fx+ g$n$6527$1bEyPh '2)
                                                     (cdr g$a$6528$1bEyPh)))
                                                 (if (memv
                                                       g$t$6530$1bEyPh
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6528$1bEyPh)
                                                         '10)
                                                       g$p$6522$1bEyPh)
                                                     (g$loop$6526$1bEyPh
                                                       (fx+ g$n$6527$1bEyPh '2)
                                                       (cdr g$a$6528$1bEyPh)))
                                                   (if (memv
                                                         g$t$6530$1bEyPh
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6522$1bEyPh)
                                                       (g$loop$6526$1bEyPh
                                                         (fx+ g$n$6527$1bEyPh
                                                              '2)
                                                         g$a$6528$1bEyPh))
                                                     (begin
                                                       (write-char
                                                         g$c$6529$1bEyPh
                                                         g$p$6522$1bEyPh)
                                                       (g$loop$6526$1bEyPh
                                                         (fx+ g$n$6527$1bEyPh
                                                              '1)
                                                         g$a$6528$1bEyPh)))))))))))
                                    (string-ref
                                      g$cntl$6523$1bEyPh
                                      (fx+ g$n$6527$1bEyPh '1)))
                                   (begin
                                     (write-char
                                       g$c$6529$1bEyPh
                                       g$p$6522$1bEyPh)
                                     (g$loop$6526$1bEyPh
                                       (fx+ g$n$6527$1bEyPh '1)
                                       g$a$6528$1bEyPh)))))
                              (string-ref g$cntl$6523$1bEyPh g$n$6527$1bEyPh))
                             (void))))))
               g$loop$6526$1bEyPh)
             '0
             g$args$6524$1bEyPh)))
         (fx- (string-length g$cntl$6523$1bEyPh) '1)))))
   (g$printf$6519$1bEyPh
     g$printf$6541$1bEyPh
     (case-lambda
       ((g$control$6531$1bEyPh . g$args$6532$1bEyPh)
        (g$dofmt$6518$1bEyPh
          (current-output-port)
          g$control$6531$1bEyPh
          g$args$6532$1bEyPh))))
   (g$fprintf$6520$1bEyPh
     g$fprintf$6542$1bEyPh
     (case-lambda
       ((g$p$6533$1bEyPh g$control$6534$1bEyPh . g$args$6535$1bEyPh)
        (g$dofmt$6518$1bEyPh
          g$p$6533$1bEyPh
          g$control$6534$1bEyPh
          g$args$6535$1bEyPh))))
   (g$format$6521$1bEyPh
     g$format$6543$1bEyPh
     (case-lambda
       ((g$control$6536$1bEyPh . g$args$6537$1bEyPh)
        (call-with-values
          g$open-string-output-port$6340$1bEyPh
          (case-lambda
            ((g$p$6538$1bEyPh g$c$6539$1bEyPh)
             (begin
               (g$dofmt$6518$1bEyPh
                 g$p$6538$1bEyPh
                 g$control$6536$1bEyPh
                 g$args$6537$1bEyPh)
               (g$c$6539$1bEyPh)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6544$1bEyPh
     g$make-traced-macro$6547$1bEyPh
     (case-lambda
       ((g$name$6545$1bEyPh g$x$6546$1bEyPh)
        (if (procedure? g$x$6546$1bEyPh)
          (make-traced-procedure
            g$name$6545$1bEyPh
            g$x$6546$1bEyPh
            g$syntax->datum$11190$1bEyPh)
          (if (g$variable-transformer?$11015$1bEyPh g$x$6546$1bEyPh)
            (g$make-variable-transformer$11014$1bEyPh
              (make-traced-procedure
                g$name$6545$1bEyPh
                (g$variable-transformer-procedure$11016$1bEyPh g$x$6546$1bEyPh)
                g$syntax->datum$11190$1bEyPh))
            g$x$6546$1bEyPh))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6548$1bEyPh
     g$read-library-source-file$6627$1bEyPh
     (case-lambda
       ((g$file-name$6619$1bEyPh)
        (g$with-input-from-file$6374$1bEyPh
          g$file-name$6619$1bEyPh
          read-annotated))))
   (g$make-parameter$6549$1bEyPh
     g$make-parameter$6628$1bEyPh
     (case-lambda
       ((g$x$6620$1bEyPh)
        (g$make-parameter$6549$1bEyPh
          g$x$6620$1bEyPh
          (case-lambda ((g$x$6621$1bEyPh) g$x$6621$1bEyPh))))
       ((g$x$6622$1bEyPh g$fender$6623$1bEyPh)
        (begin
          (if (not (procedure? g$fender$6623$1bEyPh))
            (g$assertion-error$11183$1bEyPh
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6624$1bEyPh)
              (case-lambda
                (() g$x$6624$1bEyPh)
                ((g$v$6625$1bEyPh)
                 (set! g$x$6624$1bEyPh
                   (g$fender$6623$1bEyPh g$v$6625$1bEyPh))))))
           (g$fender$6623$1bEyPh g$x$6622$1bEyPh))))))
   (g$file-options-constructor$6617$1bEyPh
     g$file-options-constructor$6629$1bEyPh
     (g$make-parameter$6549$1bEyPh '#f))
   (g$file-options-spec$6618$1bEyPh
     g$file-options-spec$6630$1bEyPh
     (case-lambda
       ((g$x$6626$1bEyPh)
        ((g$file-options-constructor$6617$1bEyPh) g$x$6626$1bEyPh)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6827$1bEyPh
     g$current-primitive-locations$6872$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda ((g$x$6833$1bEyPh) '#f))
       (case-lambda
         ((g$p$6834$1bEyPh)
          (begin
            (if (not (procedure? g$p$6834$1bEyPh))
              (g$assertion-error$11183$1bEyPh
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6834$1bEyPh)))))
   (g$mutable?$6828$1bEyPh
     g$mutable?$6873$1bEyPh
     (case-lambda
       ((g$x$6835$1bEyPh)
        (letrec* ((g$simple?$6836$1bEyPh
                    (case-lambda
                      ((g$x$6837$1bEyPh)
                       ((case-lambda
                          ((g$t$6838$1bEyPh)
                           (if g$t$6838$1bEyPh
                             g$t$6838$1bEyPh
                             ((case-lambda
                                ((g$t$6839$1bEyPh)
                                 (if g$t$6839$1bEyPh
                                   g$t$6839$1bEyPh
                                   ((case-lambda
                                      ((g$t$6840$1bEyPh)
                                       (if g$t$6840$1bEyPh
                                         g$t$6840$1bEyPh
                                         ((case-lambda
                                            ((g$t$6841$1bEyPh)
                                             (if g$t$6841$1bEyPh
                                               g$t$6841$1bEyPh
                                               ((case-lambda
                                                  ((g$t$6842$1bEyPh)
                                                   (if g$t$6842$1bEyPh
                                                     g$t$6842$1bEyPh
                                                     ((case-lambda
                                                        ((g$t$6843$1bEyPh)
                                                         (if g$t$6843$1bEyPh
                                                           g$t$6843$1bEyPh
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6837$1bEyPh)))))
                                                      (bytevector?
                                                        g$x$6837$1bEyPh)))))
                                                (string? g$x$6837$1bEyPh)))))
                                          (boolean? g$x$6837$1bEyPh)))))
                                    (symbol? g$x$6837$1bEyPh)))))
                              (char? g$x$6837$1bEyPh)))))
                        (null? g$x$6837$1bEyPh))))))
          (not (g$simple?$6836$1bEyPh g$x$6835$1bEyPh))))))
   (g$rewriter$6829$1bEyPh
     g$rewriter$6874$1bEyPh
     (case-lambda
       ((g$quote-hack?$6844$1bEyPh)
        (letrec* ((g$f$6845$1bEyPh
                    (case-lambda
                      ((g$x$6846$1bEyPh)
                       (if (pair? g$x$6846$1bEyPh)
                         ((case-lambda
                            ((g$t$6847$1bEyPh)
                             (if (memv g$t$6847$1bEyPh '(quote))
                               (if (if g$quote-hack?$6844$1bEyPh
                                     (begin
                                       '#f
                                       (g$mutable?$6828$1bEyPh
                                         (g$cadr$5010$1bEyPh g$x$6846$1bEyPh)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6848$1bEyPh)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6848$1bEyPh
                                         (g$cadr$5010$1bEyPh g$x$6846$1bEyPh))
                                       g$g$6848$1bEyPh)))
                                  (gensym))
                                 g$x$6846$1bEyPh)
                               (if (memv g$t$6847$1bEyPh '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6849$1bEyPh)
                                           (cons
                                             (car g$x$6849$1bEyPh)
                                             (map g$f$6845$1bEyPh
                                                  (cdr g$x$6849$1bEyPh)))))
                                        (cdr g$x$6846$1bEyPh)))
                                 (if (memv g$t$6847$1bEyPh '(lambda))
                                   (g$cons*$5493$1bEyPh
                                     'lambda
                                     (g$cadr$5010$1bEyPh g$x$6846$1bEyPh)
                                     (map g$f$6845$1bEyPh
                                          (g$cddr$5012$1bEyPh g$x$6846$1bEyPh)))
                                   (if (memv g$t$6847$1bEyPh '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6850$1bEyPh
                                           g$body*$6851$1bEyPh)
                                         ((case-lambda
                                            ((g$lhs*$6852$1bEyPh
                                               g$rhs*$6853$1bEyPh)
                                             (g$cons*$5493$1bEyPh
                                               'letrec
                                               (map list
                                                    g$lhs*$6852$1bEyPh
                                                    (map g$f$6845$1bEyPh
                                                         g$rhs*$6853$1bEyPh))
                                               (map g$f$6845$1bEyPh
                                                    g$body*$6851$1bEyPh))))
                                          (map car g$bindings$6850$1bEyPh)
                                          (map g$cadr$5010$1bEyPh
                                               g$bindings$6850$1bEyPh))))
                                      (g$cadr$5010$1bEyPh g$x$6846$1bEyPh)
                                      (g$cddr$5012$1bEyPh g$x$6846$1bEyPh))
                                     (if (memv g$t$6847$1bEyPh '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6854$1bEyPh
                                             g$body*$6855$1bEyPh)
                                           ((case-lambda
                                              ((g$lhs*$6856$1bEyPh
                                                 g$rhs*$6857$1bEyPh)
                                               (g$cons*$5493$1bEyPh
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6856$1bEyPh
                                                      (map g$f$6845$1bEyPh
                                                           g$rhs*$6857$1bEyPh))
                                                 (map g$f$6845$1bEyPh
                                                      g$body*$6855$1bEyPh))))
                                            (map car g$bindings$6854$1bEyPh)
                                            (map g$cadr$5010$1bEyPh
                                                 g$bindings$6854$1bEyPh))))
                                        (g$cadr$5010$1bEyPh g$x$6846$1bEyPh)
                                        (g$cddr$5012$1bEyPh g$x$6846$1bEyPh))
                                       (if (memv
                                             g$t$6847$1bEyPh
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6858$1bEyPh
                                               g$x$6859$1bEyPh)
                                             ((case-lambda
                                                ((g$bindings$6860$1bEyPh
                                                   g$body*$6861$1bEyPh)
                                                 ((case-lambda
                                                    ((g$lhs*$6862$1bEyPh
                                                       g$lhs**$6863$1bEyPh
                                                       g$rhs*$6864$1bEyPh)
                                                     (g$cons*$5493$1bEyPh
                                                       'library-letrec*
                                                       g$name$6858$1bEyPh
                                                       (map list
                                                            g$lhs*$6862$1bEyPh
                                                            g$lhs**$6863$1bEyPh
                                                            (map g$f$6845$1bEyPh
                                                                 g$rhs*$6864$1bEyPh))
                                                       (map g$f$6845$1bEyPh
                                                            g$body*$6861$1bEyPh))))
                                                  (map car
                                                       g$bindings$6860$1bEyPh)
                                                  (map g$cadr$5010$1bEyPh
                                                       g$bindings$6860$1bEyPh)
                                                  (map g$caddr$5016$1bEyPh
                                                       g$bindings$6860$1bEyPh))))
                                              (g$cadr$5010$1bEyPh
                                                g$x$6859$1bEyPh)
                                              (g$cddr$5012$1bEyPh
                                                g$x$6859$1bEyPh))))
                                          (g$cadr$5010$1bEyPh g$x$6846$1bEyPh)
                                          (cdr g$x$6846$1bEyPh))
                                         (if (memv g$t$6847$1bEyPh '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6845$1bEyPh
                                                  (cdr g$x$6846$1bEyPh)))
                                           (if (memv g$t$6847$1bEyPh '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5010$1bEyPh
                                                 g$x$6846$1bEyPh)
                                               (g$f$6845$1bEyPh
                                                 (g$caddr$5016$1bEyPh
                                                   g$x$6846$1bEyPh)))
                                             (if (memv
                                                   g$t$6847$1bEyPh
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6865$1bEyPh)
                                                   ((case-lambda
                                                      ((g$t$6866$1bEyPh)
                                                       (if g$t$6866$1bEyPh
                                                         ((case-lambda
                                                            ((g$loc$6867$1bEyPh)
                                                             g$loc$6867$1bEyPh))
                                                          g$t$6866$1bEyPh)
                                                         g$op$6865$1bEyPh)))
                                                    ((g$current-primitive-locations$6827$1bEyPh)
                                                     g$op$6865$1bEyPh))))
                                                (g$cadr$5010$1bEyPh
                                                  g$x$6846$1bEyPh))
                                               (if (memv
                                                     g$t$6847$1bEyPh
                                                     '(define))
                                                 g$x$6846$1bEyPh
                                                 (if (list? g$x$6846$1bEyPh)
                                                   (map g$f$6845$1bEyPh
                                                        g$x$6846$1bEyPh)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6846$1bEyPh
                                                     (list?
                                                       g$x$6846$1bEyPh)))))))))))))))
                          (car g$x$6846$1bEyPh))
                         g$x$6846$1bEyPh)))))
          g$f$6845$1bEyPh))))
   (g$expanded->core$6830$1bEyPh
     g$expanded->core$6875$1bEyPh
     (case-lambda
       ((g$x$6868$1bEyPh) ((g$rewriter$6829$1bEyPh '#t) g$x$6868$1bEyPh))))
   (g$compile-core-expr$6831$1bEyPh
     g$compile-core-expr$6876$1bEyPh
     (case-lambda
       ((g$x$6869$1bEyPh) ((g$rewriter$6829$1bEyPh '#f) g$x$6869$1bEyPh))))
   (g$compile-core-expr-to-port$6832$1bEyPh
     g$compile-core-expr-to-port$6877$1bEyPh
     (case-lambda
       ((g$x$6870$1bEyPh g$p$6871$1bEyPh)
        (g$pretty-print$6826$1bEyPh
          ((g$rewriter$6829$1bEyPh '#f) g$x$6870$1bEyPh)
          g$p$6871$1bEyPh)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6916$1bEyPh
     g$make-collection$7120$1bEyPh
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6977$1bEyPh)
            (letrec* ((g$set-cons$6978$1bEyPh
                        (case-lambda
                          ((g$x$6980$1bEyPh g$ls$6981$1bEyPh)
                           (if (memq g$x$6980$1bEyPh g$ls$6981$1bEyPh)
                             g$ls$6981$1bEyPh
                             (cons g$x$6980$1bEyPh g$ls$6981$1bEyPh))))))
              (case-lambda
                (() g$set$6977$1bEyPh)
                ((g$x$6979$1bEyPh)
                 (set! g$set$6977$1bEyPh
                   (g$set-cons$6978$1bEyPh
                     g$x$6979$1bEyPh
                     g$set$6977$1bEyPh)))))))
         '()))))
   (g$current-library-collection$6917$1bEyPh
     g$current-library-collection$7121$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (g$make-collection$6916$1bEyPh)
       (case-lambda
         ((g$x$6982$1bEyPh)
          (begin
            (if (not (procedure? g$x$6982$1bEyPh))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6982$1bEyPh)
              (void))
            g$x$6982$1bEyPh)))))
   (g$8043$6918$1bEyPh
     g$8043$7122$1bEyPh
     (make-record-type-descriptor
       'library
       '#f
       'g$8046$1bEyPh
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8045$6919$1bEyPh g$8045$7123$1bEyPh '#f)
   (g$8044$6920$1bEyPh
     g$8044$7124$1bEyPh
     (make-record-constructor-descriptor
       g$8043$6918$1bEyPh
       '#f
       g$8045$6919$1bEyPh))
   (g$library?$6921$1bEyPh
     g$library?$7125$1bEyPh
     (record-predicate g$8043$6918$1bEyPh))
   (g$make-library$6922$1bEyPh
     g$make-library$7126$1bEyPh
     (record-constructor g$8044$6920$1bEyPh))
   (g$library-id$6923$1bEyPh
     g$library-id$7127$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '0))
   (g$library-name$6924$1bEyPh
     g$library-name$7128$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '1))
   (g$library-version$6925$1bEyPh
     g$library-version$7129$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '2))
   (g$library-imp*$6926$1bEyPh
     g$library-imp*$7130$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '3))
   (g$library-vis*$6927$1bEyPh
     g$library-vis*$7131$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '4))
   (g$library-inv*$6928$1bEyPh
     g$library-inv*$7132$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '5))
   (g$library-subst$6929$1bEyPh
     g$library-subst$7133$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '6))
   (g$library-env$6930$1bEyPh
     g$library-env$7134$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '7))
   (g$library-visit-state$6931$1bEyPh
     g$library-visit-state$7135$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '8))
   (g$library-invoke-state$6932$1bEyPh
     g$library-invoke-state$7136$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '9))
   (g$library-visit-code$6933$1bEyPh
     g$library-visit-code$7137$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '10))
   (g$library-invoke-code$6934$1bEyPh
     g$library-invoke-code$7138$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '11))
   (g$library-visible?$6935$1bEyPh
     g$library-visible?$7139$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '12))
   (g$library-source-file-name$6936$1bEyPh
     g$library-source-file-name$7140$1bEyPh
     (record-accessor g$8043$6918$1bEyPh '13))
   (g$set-library-id!$6937$1bEyPh
     g$set-library-id!$7141$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '0))
   (g$set-library-name!$6938$1bEyPh
     g$set-library-name!$7142$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '1))
   (g$set-library-version!$6939$1bEyPh
     g$set-library-version!$7143$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '2))
   (g$set-library-imp*!$6940$1bEyPh
     g$set-library-imp*!$7144$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '3))
   (g$set-library-vis*!$6941$1bEyPh
     g$set-library-vis*!$7145$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '4))
   (g$set-library-inv*!$6942$1bEyPh
     g$set-library-inv*!$7146$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '5))
   (g$set-library-subst!$6943$1bEyPh
     g$set-library-subst!$7147$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '6))
   (g$set-library-env!$6944$1bEyPh
     g$set-library-env!$7148$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '7))
   (g$set-library-visit-state!$6945$1bEyPh
     g$set-library-visit-state!$7149$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '8))
   (g$set-library-invoke-state!$6946$1bEyPh
     g$set-library-invoke-state!$7150$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '9))
   (g$set-library-visit-code!$6947$1bEyPh
     g$set-library-visit-code!$7151$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '10))
   (g$set-library-invoke-code!$6948$1bEyPh
     g$set-library-invoke-code!$7152$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '11))
   (g$set-library-visible?!$6949$1bEyPh
     g$set-library-visible?!$7153$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '12))
   (g$set-library-source-file-name!$6950$1bEyPh
     g$set-library-source-file-name!$7154$1bEyPh
     (record-mutator g$8043$6918$1bEyPh '13))
   (g$rp$6951$1bEyPh
     g$rp$7155$1bEyPh
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6983$1bEyPh g$p$6984$1bEyPh)
          (begin
            (if (not (g$library?$6921$1bEyPh g$x$6983$1bEyPh))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6543$1bEyPh
                '"#<library ~s>"
                (if (null? (g$library-version$6925$1bEyPh g$x$6983$1bEyPh))
                  (g$library-name$6924$1bEyPh g$x$6983$1bEyPh)
                  (append
                    (g$library-name$6924$1bEyPh g$x$6983$1bEyPh)
                    (list (g$library-version$6925$1bEyPh g$x$6983$1bEyPh)))))
              g$p$6984$1bEyPh))))))
   (g$find-dependencies$6952$1bEyPh
     g$find-dependencies$7156$1bEyPh
     (case-lambda
       ((g$ls$6985$1bEyPh)
        (if (null? g$ls$6985$1bEyPh)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6953$1bEyPh
     g$find-library-by$7157$1bEyPh
     (case-lambda
       ((g$pred$6986$1bEyPh)
        ((letrec ((g$f$6987$1bEyPh
                    (case-lambda
                      ((g$ls$6988$1bEyPh)
                       (if (null? g$ls$6988$1bEyPh)
                         '#f
                         (if (g$pred$6986$1bEyPh (car g$ls$6988$1bEyPh))
                           (car g$ls$6988$1bEyPh)
                           (g$f$6987$1bEyPh (cdr g$ls$6988$1bEyPh))))))))
           g$f$6987$1bEyPh)
         ((g$current-library-collection$6917$1bEyPh))))))
   (g$library-path$6954$1bEyPh
     g$library-path$7158$1bEyPh
     (g$make-parameter$6628$1bEyPh
       '(".")
       (case-lambda
         ((g$x$6989$1bEyPh)
          (if (if (list? g$x$6989$1bEyPh)
                (begin '#f (g$for-all$5491$1bEyPh string? g$x$6989$1bEyPh))
                '#f)
            (map (case-lambda ((g$x$6990$1bEyPh) g$x$6990$1bEyPh))
                 g$x$6989$1bEyPh)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6989$1bEyPh))))))
   (g$library-extensions$6955$1bEyPh
     g$library-extensions$7159$1bEyPh
     (g$make-parameter$6628$1bEyPh
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6991$1bEyPh)
          (if (if (list? g$x$6991$1bEyPh)
                (begin '#f (g$for-all$5491$1bEyPh string? g$x$6991$1bEyPh))
                '#f)
            (map (case-lambda ((g$x$6992$1bEyPh) g$x$6992$1bEyPh))
                 g$x$6991$1bEyPh)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6991$1bEyPh))))))
   (g$library-name->file-name$6956$1bEyPh
     g$library-name->file-name$7160$1bEyPh
     (case-lambda
       ((g$x$6993$1bEyPh)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6340$1bEyPh)))
          (case-lambda
            ((g$p$6996$1bEyPh g$extract$6997$1bEyPh)
             ((case-lambda
                ((g$extract$6998$1bEyPh g$p$6999$1bEyPh)
                 (letrec* ((g$display-hex$7000$1bEyPh
                             (case-lambda
                               ((g$n$7008$1bEyPh)
                                (if (<= '0 g$n$7008$1bEyPh '9)
                                  (display g$n$7008$1bEyPh g$p$6999$1bEyPh)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7008$1bEyPh '10)))
                                    g$p$6999$1bEyPh))))))
                   (begin
                     ((letrec ((g$f$7001$1bEyPh
                                 (case-lambda
                                   ((g$ls$7002$1bEyPh)
                                    (if (not (null? g$ls$7002$1bEyPh))
                                      (begin
                                        (display '"/" g$p$6999$1bEyPh)
                                        (for-each
                                          (case-lambda
                                            ((g$c$7003$1bEyPh)
                                             (if ((case-lambda
                                                    ((g$t$7004$1bEyPh)
                                                     (if g$t$7004$1bEyPh
                                                       g$t$7004$1bEyPh
                                                       ((case-lambda
                                                          ((g$t$7005$1bEyPh)
                                                           (if g$t$7005$1bEyPh
                                                             g$t$7005$1bEyPh
                                                             ((case-lambda
                                                                ((g$t$7006$1bEyPh)
                                                                 (if g$t$7006$1bEyPh
                                                                   g$t$7006$1bEyPh
                                                                   (begin
                                                                     '#f
                                                                     (memv
                                                                       g$c$7003$1bEyPh
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5047$1bEyPh
                                                                '#\0
                                                                g$c$7003$1bEyPh
                                                                '#\9)))))
                                                        (g$char<=?$5047$1bEyPh
                                                          '#\A
                                                          g$c$7003$1bEyPh
                                                          '#\Z)))))
                                                  (g$char<=?$5047$1bEyPh
                                                    '#\a
                                                    g$c$7003$1bEyPh
                                                    '#\z))
                                               (display
                                                 g$c$7003$1bEyPh
                                                 g$p$6999$1bEyPh)
                                               (begin
                                                 (display '"%" g$p$6999$1bEyPh)
                                                 ((case-lambda
                                                    ((g$n$7007$1bEyPh)
                                                     (begin
                                                       (g$display-hex$7000$1bEyPh
                                                         (g$quotient$5855$1bEyPh
                                                           g$n$7007$1bEyPh
                                                           '16))
                                                       (g$display-hex$7000$1bEyPh
                                                         (g$remainder$5856$1bEyPh
                                                           g$n$7007$1bEyPh
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7003$1bEyPh))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7002$1bEyPh))))
                                        (g$f$7001$1bEyPh
                                          (cdr g$ls$7002$1bEyPh)))
                                      (void))))))
                        g$f$7001$1bEyPh)
                      g$x$6993$1bEyPh)
                     (g$extract$6998$1bEyPh)))))
              g$extract$6997$1bEyPh
              g$p$6996$1bEyPh)))))))
   (g$file-locator$6957$1bEyPh
     g$file-locator$7161$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda
         ((g$x$7009$1bEyPh)
          ((case-lambda
             ((g$str$7010$1bEyPh)
              ((letrec ((g$f$7011$1bEyPh
                          (case-lambda
                            ((g$ls$7012$1bEyPh
                               g$exts$7013$1bEyPh
                               g$failed-list$7014$1bEyPh)
                             (if (null? g$ls$7012$1bEyPh)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8148$7015$1bEyPh
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8151$1bEyPh
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8150$7016$1bEyPh '#f)
                                             (g$8149$7017$1bEyPh
                                               (make-record-constructor-descriptor
                                                 g$8148$7015$1bEyPh
                                                 &condition-rcd
                                                 g$8150$7016$1bEyPh))
                                             (g$8147$7018$1bEyPh
                                               (record-predicate
                                                 g$8148$7015$1bEyPh))
                                             (g$make-library-resolution-condition$7019$1bEyPh
                                               (record-constructor
                                                 g$8149$7017$1bEyPh))
                                             (g$8145$7020$1bEyPh
                                               (record-accessor
                                                 g$8148$7015$1bEyPh
                                                 '0))
                                             (g$8146$7021$1bEyPh
                                               (record-accessor
                                                 g$8148$7015$1bEyPh
                                                 '1))
                                             (g$library-resolution-condition?$7022$1bEyPh
                                               (condition-predicate
                                                 g$8148$7015$1bEyPh))
                                             (g$condition-library$7023$1bEyPh
                                               (condition-accessor
                                                 g$8148$7015$1bEyPh
                                                 g$8145$7020$1bEyPh))
                                             (g$condition-files$7024$1bEyPh
                                               (condition-accessor
                                                 g$8148$7015$1bEyPh
                                                 g$8146$7021$1bEyPh)))
                                     (raise
                                       (condition
                                         (g$make-error$5765$1bEyPh)
                                         (g$make-who-condition$5791$1bEyPh
                                           'expander)
                                         (g$make-message-condition$5745$1bEyPh
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$7019$1bEyPh
                                           g$x$7009$1bEyPh
                                           (reverse
                                             g$failed-list$7014$1bEyPh))))))))
                               (if (null? g$exts$7013$1bEyPh)
                                 (g$f$7011$1bEyPh
                                   (cdr g$ls$7012$1bEyPh)
                                   (g$library-extensions$6955$1bEyPh)
                                   g$failed-list$7014$1bEyPh)
                                 ((case-lambda
                                    ((g$name$7025$1bEyPh)
                                     (if (g$file-exists?$5362$1bEyPh
                                           g$name$7025$1bEyPh)
                                       g$name$7025$1bEyPh
                                       (g$f$7011$1bEyPh
                                         g$ls$7012$1bEyPh
                                         (cdr g$exts$7013$1bEyPh)
                                         (cons
                                           g$name$7025$1bEyPh
                                           g$failed-list$7014$1bEyPh)))))
                                  (string-append
                                    (car g$ls$7012$1bEyPh)
                                    g$str$7010$1bEyPh
                                    (car g$exts$7013$1bEyPh)))))))))
                 g$f$7011$1bEyPh)
               (g$library-path$6954$1bEyPh)
               (g$library-extensions$6955$1bEyPh)
               '())))
           (g$library-name->file-name$6956$1bEyPh g$x$7009$1bEyPh))))
       (case-lambda
         ((g$f$7026$1bEyPh)
          (if (procedure? g$f$7026$1bEyPh)
            g$f$7026$1bEyPh
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7026$1bEyPh))))))
   (g$serialize-all$6958$1bEyPh
     g$serialize-all$7162$1bEyPh
     (case-lambda
       ((g$serialize$7027$1bEyPh g$compile$7028$1bEyPh)
        (letrec* ((g$library-desc$7029$1bEyPh
                    (case-lambda
                      ((g$x$7031$1bEyPh)
                       (list
                         (g$library-id$6923$1bEyPh g$x$7031$1bEyPh)
                         (g$library-name$6924$1bEyPh g$x$7031$1bEyPh))))))
          (for-each
            (case-lambda
              ((g$x$7030$1bEyPh)
               (if (g$library-source-file-name$6936$1bEyPh g$x$7030$1bEyPh)
                 (g$serialize$7027$1bEyPh
                   (g$library-source-file-name$6936$1bEyPh g$x$7030$1bEyPh)
                   (list
                     (g$library-id$6923$1bEyPh g$x$7030$1bEyPh)
                     (g$library-name$6924$1bEyPh g$x$7030$1bEyPh)
                     (g$library-version$6925$1bEyPh g$x$7030$1bEyPh)
                     (map g$library-desc$7029$1bEyPh
                          (g$library-imp*$6926$1bEyPh g$x$7030$1bEyPh))
                     (map g$library-desc$7029$1bEyPh
                          (g$library-vis*$6927$1bEyPh g$x$7030$1bEyPh))
                     (map g$library-desc$7029$1bEyPh
                          (g$library-inv*$6928$1bEyPh g$x$7030$1bEyPh))
                     (g$library-subst$6929$1bEyPh g$x$7030$1bEyPh)
                     (g$library-env$6930$1bEyPh g$x$7030$1bEyPh)
                     (g$compile$7028$1bEyPh
                       (g$library-visit-code$6933$1bEyPh g$x$7030$1bEyPh))
                     (g$compile$7028$1bEyPh
                       (g$library-invoke-code$6934$1bEyPh g$x$7030$1bEyPh))
                     (g$library-visible?$6935$1bEyPh g$x$7030$1bEyPh)))
                 (void))))
            ((g$current-library-collection$6917$1bEyPh)))))))
   (g$current-precompiled-library-loader$6959$1bEyPh
     g$current-precompiled-library-loader$7163$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda ((g$filename$7032$1bEyPh g$sk$7033$1bEyPh) '#f))))
   (g$try-load-from-file$6960$1bEyPh
     g$try-load-from-file$7164$1bEyPh
     (case-lambda
       ((g$filename$7034$1bEyPh)
        ((g$current-precompiled-library-loader$6959$1bEyPh)
         g$filename$7034$1bEyPh
         (case-lambda
           ((g$id$7035$1bEyPh
              g$name$7036$1bEyPh
              g$ver$7037$1bEyPh
              g$imp*$7038$1bEyPh
              g$vis*$7039$1bEyPh
              g$inv*$7040$1bEyPh
              g$exp-subst$7041$1bEyPh
              g$exp-env$7042$1bEyPh
              g$visit-proc$7043$1bEyPh
              g$invoke-proc$7044$1bEyPh
              g$visible?$7045$1bEyPh)
            ((letrec ((g$f$7046$1bEyPh
                        (case-lambda
                          ((g$deps$7047$1bEyPh)
                           (if (null? g$deps$7047$1bEyPh)
                             (begin
                               (g$install-library$6970$1bEyPh
                                 g$id$7035$1bEyPh
                                 g$name$7036$1bEyPh
                                 g$ver$7037$1bEyPh
                                 g$imp*$7038$1bEyPh
                                 g$vis*$7039$1bEyPh
                                 g$inv*$7040$1bEyPh
                                 g$exp-subst$7041$1bEyPh
                                 g$exp-env$7042$1bEyPh
                                 g$visit-proc$7043$1bEyPh
                                 g$invoke-proc$7044$1bEyPh
                                 '#f
                                 '#f
                                 g$visible?$7045$1bEyPh
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7048$1bEyPh)
                                 ((case-lambda
                                    ((g$label$7049$1bEyPh g$dname$7050$1bEyPh)
                                     ((case-lambda
                                        ((g$l$7051$1bEyPh)
                                         (if (if (g$library?$6921$1bEyPh
                                                   g$l$7051$1bEyPh)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7049$1bEyPh
                                                      (g$library-id$6923$1bEyPh
                                                        g$l$7051$1bEyPh)))
                                               '#f)
                                           (g$f$7046$1bEyPh
                                             (cdr g$deps$7047$1bEyPh))
                                           (begin
                                             (g$fprintf$6542$1bEyPh
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$7036$1bEyPh
                                               g$dname$7050$1bEyPh
                                               g$filename$7034$1bEyPh)
                                             '#f))))
                                      (g$find-library-by-name$6965$1bEyPh
                                        g$dname$7050$1bEyPh))))
                                  (car g$d$7048$1bEyPh)
                                  (g$cadr$5010$1bEyPh g$d$7048$1bEyPh))))
                              (car g$deps$7047$1bEyPh)))))))
               g$f$7046$1bEyPh)
             (append g$imp*$7038$1bEyPh g$vis*$7039$1bEyPh g$inv*$7040$1bEyPh)))
           (g$others$7052$1bEyPh '#f))))))
   (g$library-loader$6961$1bEyPh
     g$library-loader$7165$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda
         ((g$x$7053$1bEyPh)
          ((case-lambda
             ((g$file-name$7054$1bEyPh)
              (if (not g$file-name$7054$1bEyPh)
                (assertion-violation '#f '"cannot file library" g$x$7053$1bEyPh)
                ((case-lambda
                   ((g$t$7055$1bEyPh)
                    (if g$t$7055$1bEyPh
                      g$t$7055$1bEyPh
                      (begin
                        '#f
                        ((g$current-library-expander$6962$1bEyPh)
                         (g$read-library-source-file$6627$1bEyPh
                           g$file-name$7054$1bEyPh)
                         g$file-name$7054$1bEyPh
                         (case-lambda
                           ((g$name$7056$1bEyPh)
                            (if (not (equal?
                                       g$name$7056$1bEyPh
                                       g$x$7053$1bEyPh))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6340$1bEyPh)))
                                  (case-lambda
                                    ((g$p$7059$1bEyPh g$e$7060$1bEyPh)
                                     ((case-lambda
                                        ((g$e$7061$1bEyPh g$p$7062$1bEyPh)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7062$1bEyPh)
                                           (write
                                             g$x$7053$1bEyPh
                                             g$p$7062$1bEyPh)
                                           (display
                                             '" in file "
                                             g$p$7062$1bEyPh)
                                           (display
                                             g$file-name$7054$1bEyPh
                                             g$p$7062$1bEyPh)
                                           (display '", found " g$p$7062$1bEyPh)
                                           (write
                                             g$name$7056$1bEyPh
                                             g$p$7062$1bEyPh)
                                           (display '" instead" g$p$7062$1bEyPh)
                                           (g$e$7061$1bEyPh))))
                                      g$e$7060$1bEyPh
                                      g$p$7059$1bEyPh)))))
                              (void)))))))))
                 (g$try-load-from-file$6960$1bEyPh g$file-name$7054$1bEyPh)))))
           ((g$file-locator$6957$1bEyPh) g$x$7053$1bEyPh))))
       (case-lambda
         ((g$f$7063$1bEyPh)
          (if (procedure? g$f$7063$1bEyPh)
            g$f$7063$1bEyPh
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7063$1bEyPh))))))
   (g$current-library-expander$6962$1bEyPh
     g$current-library-expander$7166$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda
         ((g$x$7064$1bEyPh)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7065$1bEyPh)
          (if (procedure? g$f$7065$1bEyPh)
            g$f$7065$1bEyPh
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7065$1bEyPh))))))
   (g$external-pending-libraries$6963$1bEyPh
     g$external-pending-libraries$7167$1bEyPh
     (g$make-parameter$6628$1bEyPh '()))
   (g$find-external-library$6964$1bEyPh
     g$find-external-library$7168$1bEyPh
     (case-lambda
       ((g$name$7066$1bEyPh)
        (begin
          (if (g$member$5487$1bEyPh
                g$name$7066$1bEyPh
                (g$external-pending-libraries$6963$1bEyPh))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7066$1bEyPh)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7069$1bEyPh
                g$external-pending-libraries$7070$1bEyPh)
              ((case-lambda
                 ((g$swap$7071$1bEyPh)
                  (dynamic-wind
                    g$swap$7071$1bEyPh
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6961$1bEyPh) g$name$7066$1bEyPh)
                         ((case-lambda
                            ((g$t$7072$1bEyPh)
                             (if g$t$7072$1bEyPh
                               g$t$7072$1bEyPh
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7066$1bEyPh)))))
                          (g$find-library-by$6953$1bEyPh
                            (case-lambda
                              ((g$x$7073$1bEyPh)
                               (equal?
                                 (g$library-name$6924$1bEyPh g$x$7073$1bEyPh)
                                 g$name$7066$1bEyPh))))))))
                    g$swap$7071$1bEyPh)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7074$1bEyPh)
                      (begin
                        (g$external-pending-libraries$7069$1bEyPh
                          g$external-pending-libraries$7070$1bEyPh)
                        (set! g$external-pending-libraries$7070$1bEyPh
                          g$t$7074$1bEyPh))))
                   (g$external-pending-libraries$7069$1bEyPh)))))))
           g$external-pending-libraries$6963$1bEyPh
           (cons
             g$name$7066$1bEyPh
             (g$external-pending-libraries$6963$1bEyPh)))))))
   (g$find-library-by-name$6965$1bEyPh
     g$find-library-by-name$7169$1bEyPh
     (case-lambda
       ((g$name$7075$1bEyPh)
        ((case-lambda
           ((g$t$7076$1bEyPh)
            (if g$t$7076$1bEyPh
              g$t$7076$1bEyPh
              (begin
                '#f
                (g$find-external-library$6964$1bEyPh g$name$7075$1bEyPh)))))
         (g$find-library-by$6953$1bEyPh
           (case-lambda
             ((g$x$7077$1bEyPh)
              (equal?
                (g$library-name$6924$1bEyPh g$x$7077$1bEyPh)
                g$name$7075$1bEyPh))))))))
   (g$library-exists?$6966$1bEyPh
     g$library-exists?$7170$1bEyPh
     (case-lambda
       ((g$name$7078$1bEyPh)
        (if (g$find-library-by$6953$1bEyPh
              (case-lambda
                ((g$x$7079$1bEyPh)
                 (equal?
                   (g$library-name$6924$1bEyPh g$x$7079$1bEyPh)
                   g$name$7078$1bEyPh))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6967$1bEyPh
     g$find-library-by-spec/die$7171$1bEyPh
     (case-lambda
       ((g$spec$7080$1bEyPh)
        ((case-lambda
           ((g$id$7081$1bEyPh)
            ((case-lambda
               ((g$t$7082$1bEyPh)
                (if g$t$7082$1bEyPh
                  g$t$7082$1bEyPh
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7080$1bEyPh)))))
             (g$find-library-by$6953$1bEyPh
               (case-lambda
                 ((g$x$7083$1bEyPh)
                  (eq? g$id$7081$1bEyPh
                       (g$library-id$6923$1bEyPh g$x$7083$1bEyPh))))))))
         (car g$spec$7080$1bEyPh)))))
   (g$label->binding-table$6968$1bEyPh
     g$label->binding-table$7172$1bEyPh
     (g$make-eq-hashtable$5284$1bEyPh))
   (g$install-library-record$6969$1bEyPh
     g$install-library-record$7173$1bEyPh
     (case-lambda
       ((g$lib$7084$1bEyPh)
        (begin
          ((case-lambda
             ((g$exp-env$7085$1bEyPh)
              (for-each
                (case-lambda
                  ((g$x$7086$1bEyPh)
                   ((case-lambda
                      ((g$label$7087$1bEyPh g$binding$7088$1bEyPh)
                       ((case-lambda
                          ((g$binding$7089$1bEyPh)
                           (g$hashtable-set!$5288$1bEyPh
                             g$label->binding-table$6968$1bEyPh
                             g$label$7087$1bEyPh
                             g$binding$7089$1bEyPh)))
                        ((case-lambda
                           ((g$t$7090$1bEyPh)
                            (if (memv g$t$7090$1bEyPh '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7084$1bEyPh
                                  (cdr g$binding$7088$1bEyPh)))
                              (if (memv g$t$7090$1bEyPh '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7084$1bEyPh
                                    (cdr g$binding$7088$1bEyPh)))
                                (if (memv g$t$7090$1bEyPh '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7084$1bEyPh
                                      (cdr g$binding$7088$1bEyPh)))
                                  g$binding$7088$1bEyPh)))))
                         (car g$binding$7088$1bEyPh)))))
                    (car g$x$7086$1bEyPh)
                    (cdr g$x$7086$1bEyPh))))
                g$exp-env$7085$1bEyPh)))
           (g$library-env$6930$1bEyPh g$lib$7084$1bEyPh))
          ((g$current-library-collection$6917$1bEyPh) g$lib$7084$1bEyPh)))))
   (g$install-library$6970$1bEyPh
     g$install-library$7174$1bEyPh
     (case-lambda
       ((g$id$7091$1bEyPh
          g$name$7092$1bEyPh
          g$ver$7093$1bEyPh
          g$imp*$7094$1bEyPh
          g$vis*$7095$1bEyPh
          g$inv*$7096$1bEyPh
          g$exp-subst$7097$1bEyPh
          g$exp-env$7098$1bEyPh
          g$visit-proc$7099$1bEyPh
          g$invoke-proc$7100$1bEyPh
          g$visit-code$7101$1bEyPh
          g$invoke-code$7102$1bEyPh
          g$visible?$7103$1bEyPh
          g$source-file-name$7104$1bEyPh)
        ((case-lambda
           ((g$imp-lib*$7105$1bEyPh
              g$vis-lib*$7106$1bEyPh
              g$inv-lib*$7107$1bEyPh)
            (begin
              (if (not (if (symbol? g$id$7091$1bEyPh)
                         (if (list? g$name$7092$1bEyPh)
                           (begin '#f (list? g$ver$7093$1bEyPh))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7091$1bEyPh
                  g$name$7092$1bEyPh
                  g$ver$7093$1bEyPh)
                (void))
              (if (g$library-exists?$6966$1bEyPh g$name$7092$1bEyPh)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7092$1bEyPh)
                (void))
              ((case-lambda
                 ((g$lib$7108$1bEyPh)
                  (g$install-library-record$6969$1bEyPh g$lib$7108$1bEyPh)))
               (g$make-library$6922$1bEyPh
                 g$id$7091$1bEyPh
                 g$name$7092$1bEyPh
                 g$ver$7093$1bEyPh
                 g$imp-lib*$7105$1bEyPh
                 g$vis-lib*$7106$1bEyPh
                 g$inv-lib*$7107$1bEyPh
                 g$exp-subst$7097$1bEyPh
                 g$exp-env$7098$1bEyPh
                 g$visit-proc$7099$1bEyPh
                 g$invoke-proc$7100$1bEyPh
                 g$visit-code$7101$1bEyPh
                 g$invoke-code$7102$1bEyPh
                 g$visible?$7103$1bEyPh
                 g$source-file-name$7104$1bEyPh)))))
         (map g$find-library-by-spec/die$6967$1bEyPh g$imp*$7094$1bEyPh)
         (map g$find-library-by-spec/die$6967$1bEyPh g$vis*$7095$1bEyPh)
         (map g$find-library-by-spec/die$6967$1bEyPh g$inv*$7096$1bEyPh)))))
   (g$imported-label->binding$6971$1bEyPh
     g$imported-label->binding$7175$1bEyPh
     (case-lambda
       ((g$lab$7109$1bEyPh)
        (g$hashtable-ref$5287$1bEyPh
          g$label->binding-table$6968$1bEyPh
          g$lab$7109$1bEyPh
          '#f))))
   (g$invoke-library$6972$1bEyPh
     g$invoke-library$7176$1bEyPh
     (case-lambda
       ((g$lib$7110$1bEyPh)
        ((case-lambda
           ((g$invoke$7111$1bEyPh)
            (if (procedure? g$invoke$7111$1bEyPh)
              (begin
                (g$set-library-invoke-state!$6946$1bEyPh
                  g$lib$7110$1bEyPh
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7110$1bEyPh))))
                (for-each
                  g$invoke-library$6972$1bEyPh
                  (g$library-inv*$6928$1bEyPh g$lib$7110$1bEyPh))
                (g$set-library-invoke-state!$6946$1bEyPh
                  g$lib$7110$1bEyPh
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7110$1bEyPh))))
                (g$invoke$7111$1bEyPh)
                (g$set-library-invoke-state!$6946$1bEyPh g$lib$7110$1bEyPh '#t))
              (void))))
         (g$library-invoke-state$6932$1bEyPh g$lib$7110$1bEyPh)))))
   (g$visit-library$6973$1bEyPh
     g$visit-library$7177$1bEyPh
     (case-lambda
       ((g$lib$7112$1bEyPh)
        ((case-lambda
           ((g$visit$7113$1bEyPh)
            (if (procedure? g$visit$7113$1bEyPh)
              (begin
                (g$set-library-visit-state!$6945$1bEyPh
                  g$lib$7112$1bEyPh
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7112$1bEyPh))))
                (for-each
                  g$invoke-library$6972$1bEyPh
                  (g$library-vis*$6927$1bEyPh g$lib$7112$1bEyPh))
                (g$set-library-visit-state!$6945$1bEyPh
                  g$lib$7112$1bEyPh
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7112$1bEyPh))))
                (g$visit$7113$1bEyPh)
                (g$set-library-visit-state!$6945$1bEyPh g$lib$7112$1bEyPh '#t))
              (void))))
         (g$library-visit-state$6931$1bEyPh g$lib$7112$1bEyPh)))))
   (g$invoke-library-by-spec$6974$1bEyPh
     g$invoke-library-by-spec$7178$1bEyPh
     (case-lambda
       ((g$spec$7114$1bEyPh)
        (g$invoke-library$6972$1bEyPh
          (g$find-library-by-spec/die$6967$1bEyPh g$spec$7114$1bEyPh)))))
   (g$installed-libraries$6975$1bEyPh
     g$installed-libraries$7179$1bEyPh
     (case-lambda
       ((g$all?$7115$1bEyPh)
        ((letrec ((g$f$7116$1bEyPh
                    (case-lambda
                      ((g$ls$7117$1bEyPh)
                       (if (null? g$ls$7117$1bEyPh)
                         '()
                         (if ((case-lambda
                                ((g$t$7118$1bEyPh)
                                 (if g$t$7118$1bEyPh
                                   g$t$7118$1bEyPh
                                   (begin
                                     '#f
                                     (g$library-visible?$6935$1bEyPh
                                       (car g$ls$7117$1bEyPh))))))
                              g$all?$7115$1bEyPh)
                           (cons
                             (car g$ls$7117$1bEyPh)
                             (g$f$7116$1bEyPh (cdr g$ls$7117$1bEyPh)))
                           (g$f$7116$1bEyPh (cdr g$ls$7117$1bEyPh))))))))
           g$f$7116$1bEyPh)
         ((g$current-library-collection$6917$1bEyPh))))
       (() (g$installed-libraries$6975$1bEyPh '#f))))
   (g$library-spec$6976$1bEyPh
     g$library-spec$7180$1bEyPh
     (case-lambda
       ((g$x$7119$1bEyPh)
        (begin
          (if (not (g$library?$6921$1bEyPh g$x$7119$1bEyPh))
            (assertion-violation 'library-spec '"not a library" g$x$7119$1bEyPh)
            (void))
          (list
            (g$library-id$6923$1bEyPh g$x$7119$1bEyPh)
            (g$library-name$6924$1bEyPh g$x$7119$1bEyPh)
            (g$library-version$6925$1bEyPh g$x$7119$1bEyPh)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7181$1bEyPh
     g$build-global-define$7291$1bEyPh
     (case-lambda ((g$x$7262$1bEyPh) (g$build-void$7258$1bEyPh))))
   (g$build-lambda$7230$1bEyPh
     g$build-lambda$7292$1bEyPh
     (case-lambda
       ((g$ae$7263$1bEyPh g$vars$7264$1bEyPh g$exp$7265$1bEyPh)
        (list 'case-lambda (list g$vars$7264$1bEyPh g$exp$7265$1bEyPh)))))
   (g$build-case-lambda$7231$1bEyPh
     g$build-case-lambda$7293$1bEyPh
     (case-lambda
       ((g$ae$7266$1bEyPh g$vars*$7267$1bEyPh g$exp*$7268$1bEyPh)
        (cons 'case-lambda (map list g$vars*$7267$1bEyPh g$exp*$7268$1bEyPh)))))
   (g$build-let$7232$1bEyPh
     g$build-let$7294$1bEyPh
     (case-lambda
       ((g$ae$7269$1bEyPh
          g$lhs*$7270$1bEyPh
          g$rhs*$7271$1bEyPh
          g$body$7272$1bEyPh)
        (cons
          (g$build-lambda$7230$1bEyPh
            g$ae$7269$1bEyPh
            g$lhs*$7270$1bEyPh
            g$body$7272$1bEyPh)
          g$rhs*$7271$1bEyPh))))
   (g$build-sequence$7257$1bEyPh
     g$build-sequence$7295$1bEyPh
     (case-lambda
       ((g$ae$7273$1bEyPh g$exps$7274$1bEyPh)
        ((letrec ((g$loop$7275$1bEyPh
                    (case-lambda
                      ((g$exps$7276$1bEyPh)
                       (if (null? (cdr g$exps$7276$1bEyPh))
                         (car g$exps$7276$1bEyPh)
                         (if (equal?
                               (car g$exps$7276$1bEyPh)
                               (g$build-void$7258$1bEyPh))
                           (g$loop$7275$1bEyPh (cdr g$exps$7276$1bEyPh))
                           (cons 'begin g$exps$7276$1bEyPh)))))))
           g$loop$7275$1bEyPh)
         g$exps$7274$1bEyPh))))
   (g$build-void$7258$1bEyPh
     g$build-void$7296$1bEyPh
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7259$1bEyPh
     g$build-letrec$7297$1bEyPh
     (case-lambda
       ((g$ae$7277$1bEyPh
          g$vars$7278$1bEyPh
          g$val-exps$7279$1bEyPh
          g$body-exp$7280$1bEyPh)
        (if (null? g$vars$7278$1bEyPh)
          g$body-exp$7280$1bEyPh
          (list
            'letrec
            (map list g$vars$7278$1bEyPh g$val-exps$7279$1bEyPh)
            g$body-exp$7280$1bEyPh)))))
   (g$build-letrec*$7260$1bEyPh
     g$build-letrec*$7298$1bEyPh
     (case-lambda
       ((g$ae$7281$1bEyPh
          g$vars$7282$1bEyPh
          g$val-exps$7283$1bEyPh
          g$body-exp$7284$1bEyPh)
        (if (null? g$vars$7282$1bEyPh)
          g$body-exp$7284$1bEyPh
          (list
            'letrec*
            (map list g$vars$7282$1bEyPh g$val-exps$7283$1bEyPh)
            g$body-exp$7284$1bEyPh)))))
   (g$build-library-letrec*$7261$1bEyPh
     g$build-library-letrec*$7299$1bEyPh
     (case-lambda
       ((g$ae$7285$1bEyPh
          g$name$7286$1bEyPh
          g$vars$7287$1bEyPh
          g$locs$7288$1bEyPh
          g$val-exps$7289$1bEyPh
          g$body-exp$7290$1bEyPh)
        (list
          'library-letrec*
          g$name$7286$1bEyPh
          (map list
               g$vars$7287$1bEyPh
               g$locs$7288$1bEyPh
               g$val-exps$7289$1bEyPh)
          g$body-exp$7290$1bEyPh)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7300$1bEyPh
     g$set-cons$10932$1bEyPh
     (case-lambda
       ((g$x$7756$1bEyPh g$ls$7757$1bEyPh)
        (if (memq g$x$7756$1bEyPh g$ls$7757$1bEyPh)
          g$ls$7757$1bEyPh
          (cons g$x$7756$1bEyPh g$ls$7757$1bEyPh)))))
   (g$set-union$7301$1bEyPh
     g$set-union$10933$1bEyPh
     (case-lambda
       ((g$ls1$7758$1bEyPh g$ls2$7759$1bEyPh)
        (if (null? g$ls1$7758$1bEyPh)
          g$ls2$7759$1bEyPh
          (if (memq (car g$ls1$7758$1bEyPh) g$ls2$7759$1bEyPh)
            (g$set-union$7301$1bEyPh (cdr g$ls1$7758$1bEyPh) g$ls2$7759$1bEyPh)
            (cons
              (car g$ls1$7758$1bEyPh)
              (g$set-union$7301$1bEyPh
                (cdr g$ls1$7758$1bEyPh)
                g$ls2$7759$1bEyPh)))))))
   (g$top-mark*$7303$1bEyPh g$top-mark*$10934$1bEyPh '(top))
   (g$top-marked?$7304$1bEyPh
     g$top-marked?$10935$1bEyPh
     (case-lambda ((g$m*$7760$1bEyPh) (memq 'top g$m*$7760$1bEyPh))))
   (g$gen-lexical$7305$1bEyPh
     g$gen-lexical$10936$1bEyPh
     (case-lambda
       ((g$sym$7761$1bEyPh)
        (if (symbol? g$sym$7761$1bEyPh)
          (gensym g$sym$7761$1bEyPh)
          (if (g$stx?$7333$1bEyPh g$sym$7761$1bEyPh)
            (g$gen-lexical$7305$1bEyPh
              (g$id->sym$7362$1bEyPh g$sym$7761$1bEyPh))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7761$1bEyPh))))))
   (g$gen-global$7306$1bEyPh
     g$gen-global$10937$1bEyPh
     (case-lambda
       ((g$x$7762$1bEyPh) (g$gen-lexical$7305$1bEyPh g$x$7762$1bEyPh))))
   (g$gen-label$7307$1bEyPh
     g$gen-label$10938$1bEyPh
     (case-lambda ((g$_$7763$1bEyPh) (gensym))))
   (g$gen-top-level-label$7308$1bEyPh
     g$gen-top-level-label$10939$1bEyPh
     (case-lambda
       ((g$id$7764$1bEyPh g$rib$7765$1bEyPh)
        (letrec* ((g$find$7766$1bEyPh
                    (case-lambda
                      ((g$sym$7772$1bEyPh
                         g$mark*$7773$1bEyPh
                         g$sym*$7774$1bEyPh
                         g$mark**$7775$1bEyPh
                         g$label*$7776$1bEyPh)
                       (if (pair? g$sym*$7774$1bEyPh)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7772$1bEyPh
                                        (car g$sym*$7774$1bEyPh))
                                 (begin
                                   '#f
                                   (g$same-marks?$7363$1bEyPh
                                     g$mark*$7773$1bEyPh
                                     (car g$mark**$7775$1bEyPh)))
                                 '#f)
                             (car g$label*$7776$1bEyPh)
                             (g$find$7766$1bEyPh
                               g$sym$7772$1bEyPh
                               g$mark*$7773$1bEyPh
                               (cdr g$sym*$7774$1bEyPh)
                               (cdr g$mark**$7775$1bEyPh)
                               (cdr g$label*$7776$1bEyPh))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7767$1bEyPh g$mark*$7768$1bEyPh)
              ((case-lambda
                 ((g$sym*$7769$1bEyPh)
                  ((case-lambda
                     ((g$t$7770$1bEyPh)
                      (if g$t$7770$1bEyPh
                        ((case-lambda
                           ((g$label$7771$1bEyPh)
                            (if (g$imported-label->binding$7175$1bEyPh
                                  g$label$7771$1bEyPh)
                              (gensym)
                              g$label$7771$1bEyPh)))
                         g$t$7770$1bEyPh)
                        (gensym))))
                   (if (memq
                         g$sym$7767$1bEyPh
                         (g$rib-sym*$7316$1bEyPh g$rib$7765$1bEyPh))
                     (begin
                       '#f
                       (g$find$7766$1bEyPh
                         g$sym$7767$1bEyPh
                         g$mark*$7768$1bEyPh
                         g$sym*$7769$1bEyPh
                         (g$rib-mark**$7317$1bEyPh g$rib$7765$1bEyPh)
                         (g$rib-label*$7318$1bEyPh g$rib$7765$1bEyPh)))
                     '#f))))
               (g$rib-sym*$7316$1bEyPh g$rib$7765$1bEyPh))))
           (g$id->sym$7362$1bEyPh g$id$7764$1bEyPh)
           (g$stx-mark*$7336$1bEyPh g$id$7764$1bEyPh))))))
   (g$gen-define-label+loc$7309$1bEyPh
     g$gen-define-label+loc$10940$1bEyPh
     (case-lambda
       ((g$id$7777$1bEyPh g$rib$7778$1bEyPh)
        ((case-lambda
           ((g$t$7779$1bEyPh)
            (if g$t$7779$1bEyPh
              ((case-lambda
                 ((g$env$7780$1bEyPh)
                  ((case-lambda
                     ((g$label$7781$1bEyPh g$locs$7782$1bEyPh)
                      (values
                        g$label$7781$1bEyPh
                        ((case-lambda
                           ((g$t$7783$1bEyPh)
                            (if g$t$7783$1bEyPh
                              (cdr g$t$7783$1bEyPh)
                              ((case-lambda
                                 ((g$loc$7784$1bEyPh)
                                  (begin
                                    (g$set-interaction-env-locs!$7722$1bEyPh
                                      g$env$7780$1bEyPh
                                      (cons
                                        (cons
                                          g$label$7781$1bEyPh
                                          g$loc$7784$1bEyPh)
                                        g$locs$7782$1bEyPh))
                                    g$loc$7784$1bEyPh)))
                               (g$gen-lexical$7305$1bEyPh g$id$7777$1bEyPh)))))
                         (assq g$label$7781$1bEyPh g$locs$7782$1bEyPh)))))
                   (g$gen-top-level-label$7308$1bEyPh
                     g$id$7777$1bEyPh
                     g$rib$7778$1bEyPh)
                   (g$interaction-env-locs$7719$1bEyPh g$env$7780$1bEyPh))))
               g$t$7779$1bEyPh)
              (values (gensym) (g$gen-lexical$7305$1bEyPh g$id$7777$1bEyPh)))))
         (g$top-level-context$7755$1bEyPh)))))
   (g$gen-define-label$7310$1bEyPh
     g$gen-define-label$10941$1bEyPh
     (case-lambda
       ((g$id$7785$1bEyPh g$rib$7786$1bEyPh)
        (if (g$top-level-context$7755$1bEyPh)
          (g$gen-top-level-label$7308$1bEyPh g$id$7785$1bEyPh g$rib$7786$1bEyPh)
          (gensym)))))
   (g$8446$7311$1bEyPh
     g$8446$10942$1bEyPh
     (make-record-type-descriptor
       'rib
       '#f
       'g$8449$1bEyPh
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8448$7312$1bEyPh g$8448$10943$1bEyPh '#f)
   (g$8447$7313$1bEyPh
     g$8447$10944$1bEyPh
     (make-record-constructor-descriptor
       g$8446$7311$1bEyPh
       '#f
       g$8448$7312$1bEyPh))
   (g$rib?$7314$1bEyPh
     g$rib?$10945$1bEyPh
     (record-predicate g$8446$7311$1bEyPh))
   (g$make-rib$7315$1bEyPh
     g$make-rib$10946$1bEyPh
     (record-constructor g$8447$7313$1bEyPh))
   (g$rib-sym*$7316$1bEyPh
     g$rib-sym*$10947$1bEyPh
     (record-accessor g$8446$7311$1bEyPh '0))
   (g$rib-mark**$7317$1bEyPh
     g$rib-mark**$10948$1bEyPh
     (record-accessor g$8446$7311$1bEyPh '1))
   (g$rib-label*$7318$1bEyPh
     g$rib-label*$10949$1bEyPh
     (record-accessor g$8446$7311$1bEyPh '2))
   (g$rib-sealed/freq$7319$1bEyPh
     g$rib-sealed/freq$10950$1bEyPh
     (record-accessor g$8446$7311$1bEyPh '3))
   (g$set-rib-sym*!$7320$1bEyPh
     g$set-rib-sym*!$10951$1bEyPh
     (record-mutator g$8446$7311$1bEyPh '0))
   (g$set-rib-mark**!$7321$1bEyPh
     g$set-rib-mark**!$10952$1bEyPh
     (record-mutator g$8446$7311$1bEyPh '1))
   (g$set-rib-label*!$7322$1bEyPh
     g$set-rib-label*!$10953$1bEyPh
     (record-mutator g$8446$7311$1bEyPh '2))
   (g$set-rib-sealed/freq!$7323$1bEyPh
     g$set-rib-sealed/freq!$10954$1bEyPh
     (record-mutator g$8446$7311$1bEyPh '3))
   (g$make-empty-rib$7324$1bEyPh
     g$make-empty-rib$10955$1bEyPh
     (case-lambda (() (g$make-rib$7315$1bEyPh '() '() '() '#f))))
   (g$extend-rib!$7325$1bEyPh
     g$extend-rib!$10956$1bEyPh
     (case-lambda
       ((g$rib$7787$1bEyPh g$id$7788$1bEyPh g$label$7789$1bEyPh)
        (letrec* ((g$find$7790$1bEyPh
                    (case-lambda
                      ((g$sym$7796$1bEyPh
                         g$mark*$7797$1bEyPh
                         g$sym*$7798$1bEyPh
                         g$mark**$7799$1bEyPh
                         g$label*$7800$1bEyPh)
                       (if (pair? g$sym*$7798$1bEyPh)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7796$1bEyPh
                                        (car g$sym*$7798$1bEyPh))
                                 (begin
                                   '#f
                                   (g$same-marks?$7363$1bEyPh
                                     g$mark*$7797$1bEyPh
                                     (car g$mark**$7799$1bEyPh)))
                                 '#f)
                             g$label*$7800$1bEyPh
                             (g$find$7790$1bEyPh
                               g$sym$7796$1bEyPh
                               g$mark*$7797$1bEyPh
                               (cdr g$sym*$7798$1bEyPh)
                               (cdr g$mark**$7799$1bEyPh)
                               (cdr g$label*$7800$1bEyPh))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7319$1bEyPh g$rib$7787$1bEyPh)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7787$1bEyPh)
              (void))
            ((case-lambda
               ((g$sym$7791$1bEyPh g$mark*$7792$1bEyPh)
                ((case-lambda
                   ((g$sym*$7793$1bEyPh)
                    ((case-lambda
                       ((g$t$7794$1bEyPh)
                        (if g$t$7794$1bEyPh
                          ((case-lambda
                             ((g$p$7795$1bEyPh)
                              (if (not (eq? g$label$7789$1bEyPh
                                            (car g$p$7795$1bEyPh)))
                                (if (g$top-level-context$7755$1bEyPh)
                                  (set-car! g$p$7795$1bEyPh g$label$7789$1bEyPh)
                                  (g$syntax-violation$7748$1bEyPh
                                    '#f
                                    '"cannot redefine"
                                    g$id$7788$1bEyPh))
                                (void))))
                           g$t$7794$1bEyPh)
                          (begin
                            (g$set-rib-sym*!$7320$1bEyPh
                              g$rib$7787$1bEyPh
                              (cons g$sym$7791$1bEyPh g$sym*$7793$1bEyPh))
                            (g$set-rib-mark**!$7321$1bEyPh
                              g$rib$7787$1bEyPh
                              (cons
                                g$mark*$7792$1bEyPh
                                (g$rib-mark**$7317$1bEyPh g$rib$7787$1bEyPh)))
                            (g$set-rib-label*!$7322$1bEyPh
                              g$rib$7787$1bEyPh
                              (cons
                                g$label$7789$1bEyPh
                                (g$rib-label*$7318$1bEyPh
                                  g$rib$7787$1bEyPh)))))))
                     (if (memq
                           g$sym$7791$1bEyPh
                           (g$rib-sym*$7316$1bEyPh g$rib$7787$1bEyPh))
                       (begin
                         '#f
                         (g$find$7790$1bEyPh
                           g$sym$7791$1bEyPh
                           g$mark*$7792$1bEyPh
                           g$sym*$7793$1bEyPh
                           (g$rib-mark**$7317$1bEyPh g$rib$7787$1bEyPh)
                           (g$rib-label*$7318$1bEyPh g$rib$7787$1bEyPh)))
                       '#f))))
                 (g$rib-sym*$7316$1bEyPh g$rib$7787$1bEyPh))))
             (g$id->sym$7362$1bEyPh g$id$7788$1bEyPh)
             (g$stx-mark*$7336$1bEyPh g$id$7788$1bEyPh)))))))
   (g$make-rib-map$7326$1bEyPh
     g$make-rib-map$10957$1bEyPh
     (case-lambda
       ((g$sym*$7801$1bEyPh)
        ((case-lambda
           ((g$ht$7802$1bEyPh)
            ((letrec ((g$f$7803$1bEyPh
                        (case-lambda
                          ((g$i$7804$1bEyPh g$sym*$7805$1bEyPh)
                           (if (null? g$sym*$7805$1bEyPh)
                             g$ht$7802$1bEyPh
                             (begin
                               (g$hashtable-update!$5291$1bEyPh
                                 g$ht$7802$1bEyPh
                                 (car g$sym*$7805$1bEyPh)
                                 (case-lambda
                                   ((g$x$7806$1bEyPh)
                                    (cons g$i$7804$1bEyPh g$x$7806$1bEyPh)))
                                 '())
                               (g$f$7803$1bEyPh
                                 (+ g$i$7804$1bEyPh '1)
                                 (cdr g$sym*$7805$1bEyPh))))))))
               g$f$7803$1bEyPh)
             '0
             g$sym*$7801$1bEyPh)))
         (g$make-eq-hashtable$5284$1bEyPh)))))
   (g$seal-rib!$7327$1bEyPh
     g$seal-rib!$10958$1bEyPh
     (case-lambda
       ((g$rib$7807$1bEyPh)
        ((case-lambda
           ((g$sym*$7808$1bEyPh)
            (if (not (null? g$sym*$7808$1bEyPh))
              (begin
                (g$set-rib-sym*!$7320$1bEyPh
                  g$rib$7807$1bEyPh
                  (list->vector g$sym*$7808$1bEyPh))
                (g$set-rib-mark**!$7321$1bEyPh
                  g$rib$7807$1bEyPh
                  (list->vector (g$rib-mark**$7317$1bEyPh g$rib$7807$1bEyPh)))
                (g$set-rib-label*!$7322$1bEyPh
                  g$rib$7807$1bEyPh
                  (list->vector (g$rib-label*$7318$1bEyPh g$rib$7807$1bEyPh)))
                (g$set-rib-sealed/freq!$7323$1bEyPh
                  g$rib$7807$1bEyPh
                  (g$make-rib-map$7326$1bEyPh g$sym*$7808$1bEyPh)))
              (void))))
         (g$rib-sym*$7316$1bEyPh g$rib$7807$1bEyPh)))))
   (g$unseal-rib!$7328$1bEyPh
     g$unseal-rib!$10959$1bEyPh
     (case-lambda
       ((g$rib$7809$1bEyPh)
        (if (g$rib-sealed/freq$7319$1bEyPh g$rib$7809$1bEyPh)
          (begin
            (g$set-rib-sealed/freq!$7323$1bEyPh g$rib$7809$1bEyPh '#f)
            (g$set-rib-sym*!$7320$1bEyPh
              g$rib$7809$1bEyPh
              (vector->list (g$rib-sym*$7316$1bEyPh g$rib$7809$1bEyPh)))
            (g$set-rib-mark**!$7321$1bEyPh
              g$rib$7809$1bEyPh
              (vector->list (g$rib-mark**$7317$1bEyPh g$rib$7809$1bEyPh)))
            (g$set-rib-label*!$7322$1bEyPh
              g$rib$7809$1bEyPh
              (vector->list (g$rib-label*$7318$1bEyPh g$rib$7809$1bEyPh))))
          (void)))))
   (g$make-full-rib$7329$1bEyPh
     g$make-full-rib$10960$1bEyPh
     (case-lambda
       ((g$id*$7810$1bEyPh g$label*$7811$1bEyPh)
        ((case-lambda
           ((g$r$7812$1bEyPh)
            (begin (g$seal-rib!$7327$1bEyPh g$r$7812$1bEyPh) g$r$7812$1bEyPh)))
         (g$make-rib$7315$1bEyPh
           (map g$id->sym$7362$1bEyPh g$id*$7810$1bEyPh)
           (map g$stx-mark*$7336$1bEyPh g$id*$7810$1bEyPh)
           g$label*$7811$1bEyPh
           '#f)))))
   (g$8472$7330$1bEyPh
     g$8472$10961$1bEyPh
     (make-record-type-descriptor
       'stx
       '#f
       'g$8475$1bEyPh
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8474$7331$1bEyPh g$8474$10962$1bEyPh '#f)
   (g$8473$7332$1bEyPh
     g$8473$10963$1bEyPh
     (make-record-constructor-descriptor
       g$8472$7330$1bEyPh
       '#f
       g$8474$7331$1bEyPh))
   (g$stx?$7333$1bEyPh
     g$stx?$10964$1bEyPh
     (record-predicate g$8472$7330$1bEyPh))
   (g$make-stx$7334$1bEyPh
     g$make-stx$10965$1bEyPh
     (record-constructor g$8473$7332$1bEyPh))
   (g$stx-expr$7335$1bEyPh
     g$stx-expr$10966$1bEyPh
     (record-accessor g$8472$7330$1bEyPh '0))
   (g$stx-mark*$7336$1bEyPh
     g$stx-mark*$10967$1bEyPh
     (record-accessor g$8472$7330$1bEyPh '1))
   (g$stx-subst*$7337$1bEyPh
     g$stx-subst*$10968$1bEyPh
     (record-accessor g$8472$7330$1bEyPh '2))
   (g$stx-ae*$7338$1bEyPh
     g$stx-ae*$10969$1bEyPh
     (record-accessor g$8472$7330$1bEyPh '3))
   (g$set-stx-expr!$7339$1bEyPh
     g$set-stx-expr!$10970$1bEyPh
     (record-mutator g$8472$7330$1bEyPh '0))
   (g$set-stx-mark*!$7340$1bEyPh
     g$set-stx-mark*!$10971$1bEyPh
     (record-mutator g$8472$7330$1bEyPh '1))
   (g$set-stx-subst*!$7341$1bEyPh
     g$set-stx-subst*!$10972$1bEyPh
     (record-mutator g$8472$7330$1bEyPh '2))
   (g$set-stx-ae*!$7342$1bEyPh
     g$set-stx-ae*!$10973$1bEyPh
     (record-mutator g$8472$7330$1bEyPh '3))
   (g$rp$7343$1bEyPh
     g$rp$10974$1bEyPh
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7813$1bEyPh g$p$7814$1bEyPh)
          (begin
            (display '"#<syntax " g$p$7814$1bEyPh)
            (write (g$stx->datum$7372$1bEyPh g$x$7813$1bEyPh) g$p$7814$1bEyPh)
            ((case-lambda
               ((g$expr$7815$1bEyPh)
                (if (annotation? g$expr$7815$1bEyPh)
                  ((case-lambda
                     ((g$src$7816$1bEyPh)
                      (if (pair? g$src$7816$1bEyPh)
                        (begin
                          (display '" [" g$p$7814$1bEyPh)
                          (display (cdr g$src$7816$1bEyPh) g$p$7814$1bEyPh)
                          (display '" of " g$p$7814$1bEyPh)
                          (display (car g$src$7816$1bEyPh) g$p$7814$1bEyPh)
                          (display '"]" g$p$7814$1bEyPh))
                        (void))))
                   (annotation-source g$expr$7815$1bEyPh))
                  (void))))
             (g$stx-expr$7335$1bEyPh g$x$7813$1bEyPh))
            (display '">" g$p$7814$1bEyPh))))))
   (g$datum->stx$7344$1bEyPh
     g$datum->stx$10975$1bEyPh
     (case-lambda
       ((g$id$7817$1bEyPh g$datum$7818$1bEyPh)
        (g$make-stx$7334$1bEyPh
          g$datum$7818$1bEyPh
          (g$stx-mark*$7336$1bEyPh g$id$7817$1bEyPh)
          (g$stx-subst*$7337$1bEyPh g$id$7817$1bEyPh)
          (g$stx-ae*$7338$1bEyPh g$id$7817$1bEyPh)))))
   (g$gen-mark$7345$1bEyPh
     g$gen-mark$10976$1bEyPh
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7346$1bEyPh g$anti-mark$10977$1bEyPh '#f)
   (g$anti-mark?$7347$1bEyPh g$anti-mark?$10978$1bEyPh not)
   (g$join-wraps$7348$1bEyPh
     g$join-wraps$10979$1bEyPh
     (case-lambda
       ((g$m1*$7819$1bEyPh
          g$s1*$7820$1bEyPh
          g$ae1*$7821$1bEyPh
          g$e$7822$1bEyPh)
        (letrec* ((g$cancel$7823$1bEyPh
                    (case-lambda
                      ((g$ls1$7827$1bEyPh g$ls2$7828$1bEyPh)
                       ((letrec ((g$f$7829$1bEyPh
                                   (case-lambda
                                     ((g$x$7830$1bEyPh g$ls1$7831$1bEyPh)
                                      (if (null? g$ls1$7831$1bEyPh)
                                        (cdr g$ls2$7828$1bEyPh)
                                        (cons
                                          g$x$7830$1bEyPh
                                          (g$f$7829$1bEyPh
                                            (car g$ls1$7831$1bEyPh)
                                            (cdr g$ls1$7831$1bEyPh))))))))
                          g$f$7829$1bEyPh)
                        (car g$ls1$7827$1bEyPh)
                        (cdr g$ls1$7827$1bEyPh))))))
          ((case-lambda
             ((g$m2*$7824$1bEyPh g$s2*$7825$1bEyPh g$ae2*$7826$1bEyPh)
              (if (if (not (null? g$m1*$7819$1bEyPh))
                    (if (not (null? g$m2*$7824$1bEyPh))
                      (begin
                        '#f
                        (g$anti-mark?$7347$1bEyPh (car g$m2*$7824$1bEyPh)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7823$1bEyPh g$m1*$7819$1bEyPh g$m2*$7824$1bEyPh)
                  (g$cancel$7823$1bEyPh g$s1*$7820$1bEyPh g$s2*$7825$1bEyPh)
                  (g$cancel$7823$1bEyPh g$ae1*$7821$1bEyPh g$ae2*$7826$1bEyPh))
                (values
                  (append g$m1*$7819$1bEyPh g$m2*$7824$1bEyPh)
                  (append g$s1*$7820$1bEyPh g$s2*$7825$1bEyPh)
                  (append g$ae1*$7821$1bEyPh g$ae2*$7826$1bEyPh)))))
           (g$stx-mark*$7336$1bEyPh g$e$7822$1bEyPh)
           (g$stx-subst*$7337$1bEyPh g$e$7822$1bEyPh)
           (g$stx-ae*$7338$1bEyPh g$e$7822$1bEyPh))))))
   (g$mkstx$7349$1bEyPh
     g$mkstx$10980$1bEyPh
     (case-lambda
       ((g$e$7832$1bEyPh g$m*$7833$1bEyPh g$s*$7834$1bEyPh g$ae*$7835$1bEyPh)
        (if (g$stx?$7333$1bEyPh g$e$7832$1bEyPh)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7348$1bEyPh
                 g$m*$7833$1bEyPh
                 g$s*$7834$1bEyPh
                 g$ae*$7835$1bEyPh
                 g$e$7832$1bEyPh)))
            (case-lambda
              ((g$m*$7839$1bEyPh g$s*$7840$1bEyPh g$ae*$7841$1bEyPh)
               ((case-lambda
                  ((g$ae*$7842$1bEyPh g$s*$7843$1bEyPh g$m*$7844$1bEyPh)
                   (g$make-stx$7334$1bEyPh
                     (g$stx-expr$7335$1bEyPh g$e$7832$1bEyPh)
                     g$m*$7844$1bEyPh
                     g$s*$7843$1bEyPh
                     g$ae*$7842$1bEyPh)))
                g$ae*$7841$1bEyPh
                g$s*$7840$1bEyPh
                g$m*$7839$1bEyPh))))
          (g$make-stx$7334$1bEyPh
            g$e$7832$1bEyPh
            g$m*$7833$1bEyPh
            g$s*$7834$1bEyPh
            g$ae*$7835$1bEyPh)))))
   (g$add-mark$7350$1bEyPh
     g$add-mark$10981$1bEyPh
     (case-lambda
       ((g$m$7845$1bEyPh g$e$7846$1bEyPh g$ae$7847$1bEyPh)
        (g$mkstx$7349$1bEyPh
          g$e$7846$1bEyPh
          (list g$m$7845$1bEyPh)
          '(shift)
          (list g$ae$7847$1bEyPh)))))
   (g$add-subst$7351$1bEyPh
     g$add-subst$10982$1bEyPh
     (case-lambda
       ((g$subst$7848$1bEyPh g$e$7849$1bEyPh)
        (g$mkstx$7349$1bEyPh
          g$e$7849$1bEyPh
          '()
          (list g$subst$7848$1bEyPh)
          '()))))
   (g$syntax-kind?$7352$1bEyPh
     g$syntax-kind?$10983$1bEyPh
     (case-lambda
       ((g$x$7850$1bEyPh g$p?$7851$1bEyPh)
        (if (g$stx?$7333$1bEyPh g$x$7850$1bEyPh)
          (g$syntax-kind?$7352$1bEyPh
            (g$stx-expr$7335$1bEyPh g$x$7850$1bEyPh)
            g$p?$7851$1bEyPh)
          (if (annotation? g$x$7850$1bEyPh)
            (g$syntax-kind?$7352$1bEyPh
              (annotation-expression g$x$7850$1bEyPh)
              g$p?$7851$1bEyPh)
            (g$p?$7851$1bEyPh g$x$7850$1bEyPh))))))
   (g$syntax-vector->list$7353$1bEyPh
     g$syntax-vector->list$10984$1bEyPh
     (case-lambda
       ((g$x$7852$1bEyPh)
        (if (g$stx?$7333$1bEyPh g$x$7852$1bEyPh)
          ((case-lambda
             ((g$ls$7853$1bEyPh
                g$m*$7854$1bEyPh
                g$s*$7855$1bEyPh
                g$ae*$7856$1bEyPh)
              (map (case-lambda
                     ((g$x$7857$1bEyPh)
                      (g$mkstx$7349$1bEyPh
                        g$x$7857$1bEyPh
                        g$m*$7854$1bEyPh
                        g$s*$7855$1bEyPh
                        g$ae*$7856$1bEyPh)))
                   g$ls$7853$1bEyPh)))
           (g$syntax-vector->list$7353$1bEyPh
             (g$stx-expr$7335$1bEyPh g$x$7852$1bEyPh))
           (g$stx-mark*$7336$1bEyPh g$x$7852$1bEyPh)
           (g$stx-subst*$7337$1bEyPh g$x$7852$1bEyPh)
           (g$stx-ae*$7338$1bEyPh g$x$7852$1bEyPh))
          (if (annotation? g$x$7852$1bEyPh)
            (g$syntax-vector->list$7353$1bEyPh
              (annotation-expression g$x$7852$1bEyPh))
            (if (vector? g$x$7852$1bEyPh)
              (vector->list g$x$7852$1bEyPh)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7852$1bEyPh)))))))
   (g$syntax-pair?$7354$1bEyPh
     g$syntax-pair?$10985$1bEyPh
     (case-lambda
       ((g$x$7858$1bEyPh) (g$syntax-kind?$7352$1bEyPh g$x$7858$1bEyPh pair?))))
   (g$syntax-vector?$7355$1bEyPh
     g$syntax-vector?$10986$1bEyPh
     (case-lambda
       ((g$x$7859$1bEyPh)
        (g$syntax-kind?$7352$1bEyPh g$x$7859$1bEyPh vector?))))
   (g$syntax-null?$7356$1bEyPh
     g$syntax-null?$10987$1bEyPh
     (case-lambda
       ((g$x$7860$1bEyPh) (g$syntax-kind?$7352$1bEyPh g$x$7860$1bEyPh null?))))
   (g$syntax-list?$7357$1bEyPh
     g$syntax-list?$10988$1bEyPh
     (case-lambda
       ((g$x$7861$1bEyPh)
        ((case-lambda
           ((g$t$7862$1bEyPh)
            (if g$t$7862$1bEyPh
              g$t$7862$1bEyPh
              (begin
                '#f
                (if (g$syntax-pair?$7354$1bEyPh g$x$7861$1bEyPh)
                  (begin
                    '#f
                    (g$syntax-list?$7357$1bEyPh
                      (g$syntax-cdr$7359$1bEyPh g$x$7861$1bEyPh)))
                  '#f)))))
         (g$syntax-null?$7356$1bEyPh g$x$7861$1bEyPh)))))
   (g$syntax-car$7358$1bEyPh
     g$syntax-car$10989$1bEyPh
     (case-lambda
       ((g$x$7863$1bEyPh)
        (if (g$stx?$7333$1bEyPh g$x$7863$1bEyPh)
          (g$mkstx$7349$1bEyPh
            (g$syntax-car$7358$1bEyPh (g$stx-expr$7335$1bEyPh g$x$7863$1bEyPh))
            (g$stx-mark*$7336$1bEyPh g$x$7863$1bEyPh)
            (g$stx-subst*$7337$1bEyPh g$x$7863$1bEyPh)
            (g$stx-ae*$7338$1bEyPh g$x$7863$1bEyPh))
          (if (annotation? g$x$7863$1bEyPh)
            (g$syntax-car$7358$1bEyPh (annotation-expression g$x$7863$1bEyPh))
            (if (pair? g$x$7863$1bEyPh)
              (car g$x$7863$1bEyPh)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7863$1bEyPh)))))))
   (g$syntax-cdr$7359$1bEyPh
     g$syntax-cdr$10990$1bEyPh
     (case-lambda
       ((g$x$7864$1bEyPh)
        (if (g$stx?$7333$1bEyPh g$x$7864$1bEyPh)
          (g$mkstx$7349$1bEyPh
            (g$syntax-cdr$7359$1bEyPh (g$stx-expr$7335$1bEyPh g$x$7864$1bEyPh))
            (g$stx-mark*$7336$1bEyPh g$x$7864$1bEyPh)
            (g$stx-subst*$7337$1bEyPh g$x$7864$1bEyPh)
            (g$stx-ae*$7338$1bEyPh g$x$7864$1bEyPh))
          (if (annotation? g$x$7864$1bEyPh)
            (g$syntax-cdr$7359$1bEyPh (annotation-expression g$x$7864$1bEyPh))
            (if (pair? g$x$7864$1bEyPh)
              (cdr g$x$7864$1bEyPh)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7864$1bEyPh)))))))
   (g$syntax->list$7360$1bEyPh
     g$syntax->list$10991$1bEyPh
     (case-lambda
       ((g$x$7865$1bEyPh)
        (if (g$syntax-pair?$7354$1bEyPh g$x$7865$1bEyPh)
          (cons
            (g$syntax-car$7358$1bEyPh g$x$7865$1bEyPh)
            (g$syntax->list$7360$1bEyPh
              (g$syntax-cdr$7359$1bEyPh g$x$7865$1bEyPh)))
          (if (g$syntax-null?$7356$1bEyPh g$x$7865$1bEyPh)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7865$1bEyPh))))))
   (g$id?$7361$1bEyPh
     g$id?$10992$1bEyPh
     (case-lambda
       ((g$x$7866$1bEyPh)
        (if (g$stx?$7333$1bEyPh g$x$7866$1bEyPh)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7867$1bEyPh)
                (symbol?
                  (if (annotation? g$expr$7867$1bEyPh)
                    (annotation-stripped g$expr$7867$1bEyPh)
                    g$expr$7867$1bEyPh))))
             (g$stx-expr$7335$1bEyPh g$x$7866$1bEyPh)))
          '#f))))
   (g$id->sym$7362$1bEyPh
     g$id->sym$10993$1bEyPh
     (case-lambda
       ((g$x$7868$1bEyPh)
        (begin
          (if (not (g$stx?$7333$1bEyPh g$x$7868$1bEyPh))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7868$1bEyPh)
            (void))
          ((case-lambda
             ((g$expr$7869$1bEyPh)
              ((case-lambda
                 ((g$sym$7870$1bEyPh)
                  (if (symbol? g$sym$7870$1bEyPh)
                    g$sym$7870$1bEyPh
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7868$1bEyPh))))
               (if (annotation? g$expr$7869$1bEyPh)
                 (annotation-stripped g$expr$7869$1bEyPh)
                 g$expr$7869$1bEyPh))))
           (g$stx-expr$7335$1bEyPh g$x$7868$1bEyPh))))))
   (g$same-marks?$7363$1bEyPh
     g$same-marks?$10994$1bEyPh
     (case-lambda
       ((g$x$7871$1bEyPh g$y$7872$1bEyPh)
        ((case-lambda
           ((g$t$7873$1bEyPh)
            (if g$t$7873$1bEyPh
              g$t$7873$1bEyPh
              (begin
                '#f
                (if (pair? g$x$7871$1bEyPh)
                  (if (pair? g$y$7872$1bEyPh)
                    (if (eq? (car g$x$7871$1bEyPh) (car g$y$7872$1bEyPh))
                      (begin
                        '#f
                        (g$same-marks?$7363$1bEyPh
                          (cdr g$x$7871$1bEyPh)
                          (cdr g$y$7872$1bEyPh)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7871$1bEyPh)
           (begin '#f (null? g$y$7872$1bEyPh))
           '#f)))))
   (g$bound-id=?$7364$1bEyPh
     g$bound-id=?$10995$1bEyPh
     (case-lambda
       ((g$x$7874$1bEyPh g$y$7875$1bEyPh)
        (if (eq? (g$id->sym$7362$1bEyPh g$x$7874$1bEyPh)
                 (g$id->sym$7362$1bEyPh g$y$7875$1bEyPh))
          (begin
            '#f
            (g$same-marks?$7363$1bEyPh
              (g$stx-mark*$7336$1bEyPh g$x$7874$1bEyPh)
              (g$stx-mark*$7336$1bEyPh g$y$7875$1bEyPh)))
          '#f))))
   (g$free-id=?$7365$1bEyPh
     g$free-id=?$10996$1bEyPh
     (case-lambda
       ((g$i$7876$1bEyPh g$j$7877$1bEyPh)
        ((case-lambda
           ((g$t0$7878$1bEyPh g$t1$7879$1bEyPh)
            (if ((case-lambda
                   ((g$t$7880$1bEyPh)
                    (if g$t$7880$1bEyPh
                      g$t$7880$1bEyPh
                      (begin '#f g$t1$7879$1bEyPh))))
                 g$t0$7878$1bEyPh)
              (eq? g$t0$7878$1bEyPh g$t1$7879$1bEyPh)
              (eq? (g$id->sym$7362$1bEyPh g$i$7876$1bEyPh)
                   (g$id->sym$7362$1bEyPh g$j$7877$1bEyPh)))))
         (g$id->real-label$7375$1bEyPh g$i$7876$1bEyPh)
         (g$id->real-label$7375$1bEyPh g$j$7877$1bEyPh)))))
   (g$valid-bound-ids?$7366$1bEyPh
     g$valid-bound-ids?$10997$1bEyPh
     (case-lambda
       ((g$id*$7881$1bEyPh)
        (if (g$for-all$5491$1bEyPh g$id?$7361$1bEyPh g$id*$7881$1bEyPh)
          (begin '#f (g$distinct-bound-ids?$7367$1bEyPh g$id*$7881$1bEyPh))
          '#f))))
   (g$distinct-bound-ids?$7367$1bEyPh
     g$distinct-bound-ids?$10998$1bEyPh
     (case-lambda
       ((g$id*$7882$1bEyPh)
        ((case-lambda
           ((g$t$7883$1bEyPh)
            (if g$t$7883$1bEyPh
              g$t$7883$1bEyPh
              (begin
                '#f
                (if (not (g$bound-id-member?$7368$1bEyPh
                           (car g$id*$7882$1bEyPh)
                           (cdr g$id*$7882$1bEyPh)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7367$1bEyPh (cdr g$id*$7882$1bEyPh)))
                  '#f)))))
         (null? g$id*$7882$1bEyPh)))))
   (g$bound-id-member?$7368$1bEyPh
     g$bound-id-member?$10999$1bEyPh
     (case-lambda
       ((g$id$7884$1bEyPh g$id*$7885$1bEyPh)
        (if (pair? g$id*$7885$1bEyPh)
          (begin
            '#f
            ((case-lambda
               ((g$t$7886$1bEyPh)
                (if g$t$7886$1bEyPh
                  g$t$7886$1bEyPh
                  (begin
                    '#f
                    (g$bound-id-member?$7368$1bEyPh
                      g$id$7884$1bEyPh
                      (cdr g$id*$7885$1bEyPh))))))
             (g$bound-id=?$7364$1bEyPh
               g$id$7884$1bEyPh
               (car g$id*$7885$1bEyPh))))
          '#f))))
   (g$self-evaluating?$7369$1bEyPh
     g$self-evaluating?$11000$1bEyPh
     (case-lambda
       ((g$x$7887$1bEyPh)
        ((case-lambda
           ((g$t$7888$1bEyPh)
            (if g$t$7888$1bEyPh
              g$t$7888$1bEyPh
              ((case-lambda
                 ((g$t$7889$1bEyPh)
                  (if g$t$7889$1bEyPh
                    g$t$7889$1bEyPh
                    ((case-lambda
                       ((g$t$7890$1bEyPh)
                        (if g$t$7890$1bEyPh
                          g$t$7890$1bEyPh
                          ((case-lambda
                             ((g$t$7891$1bEyPh)
                              (if g$t$7891$1bEyPh
                                g$t$7891$1bEyPh
                                (begin '#f (bytevector? g$x$7887$1bEyPh)))))
                           (boolean? g$x$7887$1bEyPh)))))
                     (char? g$x$7887$1bEyPh)))))
               (string? g$x$7887$1bEyPh)))))
         (number? g$x$7887$1bEyPh)))))
   (g$strip-annotations$7370$1bEyPh
     g$strip-annotations$11001$1bEyPh
     (case-lambda
       ((g$x$7892$1bEyPh)
        (if (pair? g$x$7892$1bEyPh)
          (cons
            (g$strip-annotations$7370$1bEyPh (car g$x$7892$1bEyPh))
            (g$strip-annotations$7370$1bEyPh (cdr g$x$7892$1bEyPh)))
          (if (vector? g$x$7892$1bEyPh)
            (vector-map g$strip-annotations$7370$1bEyPh g$x$7892$1bEyPh)
            (if (annotation? g$x$7892$1bEyPh)
              (annotation-stripped g$x$7892$1bEyPh)
              g$x$7892$1bEyPh))))))
   (g$strip$7371$1bEyPh
     g$strip$11002$1bEyPh
     (case-lambda
       ((g$x$7893$1bEyPh g$m*$7894$1bEyPh)
        (if (g$top-marked?$7304$1bEyPh g$m*$7894$1bEyPh)
          (if ((case-lambda
                 ((g$t$7895$1bEyPh)
                  (if g$t$7895$1bEyPh
                    g$t$7895$1bEyPh
                    ((case-lambda
                       ((g$t$7896$1bEyPh)
                        (if g$t$7896$1bEyPh
                          g$t$7896$1bEyPh
                          (begin
                            '#f
                            (if (vector? g$x$7893$1bEyPh)
                              (if (> (vector-length g$x$7893$1bEyPh) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7893$1bEyPh '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7893$1bEyPh)
                       (begin '#f (annotation? (car g$x$7893$1bEyPh)))
                       '#f)))))
               (annotation? g$x$7893$1bEyPh))
            (g$strip-annotations$7370$1bEyPh g$x$7893$1bEyPh)
            g$x$7893$1bEyPh)
          ((letrec ((g$f$7897$1bEyPh
                      (case-lambda
                        ((g$x$7898$1bEyPh)
                         (if (g$stx?$7333$1bEyPh g$x$7898$1bEyPh)
                           (g$strip$7371$1bEyPh
                             (g$stx-expr$7335$1bEyPh g$x$7898$1bEyPh)
                             (g$stx-mark*$7336$1bEyPh g$x$7898$1bEyPh))
                           (if (annotation? g$x$7898$1bEyPh)
                             (annotation-stripped g$x$7898$1bEyPh)
                             (if (pair? g$x$7898$1bEyPh)
                               ((case-lambda
                                  ((g$a$7899$1bEyPh g$d$7900$1bEyPh)
                                   (if (if (eq? g$a$7899$1bEyPh
                                                (car g$x$7898$1bEyPh))
                                         (begin
                                           '#f
                                           (eq? g$d$7900$1bEyPh
                                                (cdr g$x$7898$1bEyPh)))
                                         '#f)
                                     g$x$7898$1bEyPh
                                     (cons g$a$7899$1bEyPh g$d$7900$1bEyPh))))
                                (g$f$7897$1bEyPh (car g$x$7898$1bEyPh))
                                (g$f$7897$1bEyPh (cdr g$x$7898$1bEyPh)))
                               (if (vector? g$x$7898$1bEyPh)
                                 ((case-lambda
                                    ((g$old$7901$1bEyPh)
                                     ((case-lambda
                                        ((g$new$7902$1bEyPh)
                                         (if (g$for-all$5491$1bEyPh
                                               eq?
                                               g$old$7901$1bEyPh
                                               g$new$7902$1bEyPh)
                                           g$x$7898$1bEyPh
                                           (list->vector g$new$7902$1bEyPh))))
                                      (map g$f$7897$1bEyPh g$old$7901$1bEyPh))))
                                  (vector->list g$x$7898$1bEyPh))
                                 g$x$7898$1bEyPh))))))))
             g$f$7897$1bEyPh)
           g$x$7893$1bEyPh)))))
   (g$stx->datum$7372$1bEyPh
     g$stx->datum$11003$1bEyPh
     (case-lambda
       ((g$x$7903$1bEyPh) (g$strip$7371$1bEyPh g$x$7903$1bEyPh '()))))
   (g$same-marks*?$7373$1bEyPh
     g$same-marks*?$11004$1bEyPh
     (case-lambda
       ((g$mark*$7904$1bEyPh g$mark**$7905$1bEyPh g$si$7906$1bEyPh)
        (if (null? g$si$7906$1bEyPh)
          '#f
          (if (g$same-marks?$7363$1bEyPh
                g$mark*$7904$1bEyPh
                (vector-ref g$mark**$7905$1bEyPh (car g$si$7906$1bEyPh)))
            (car g$si$7906$1bEyPh)
            (g$same-marks*?$7373$1bEyPh
              g$mark*$7904$1bEyPh
              g$mark**$7905$1bEyPh
              (cdr g$si$7906$1bEyPh)))))))
   (g$id->label$7374$1bEyPh
     g$id->label$11005$1bEyPh
     (case-lambda
       ((g$id$7907$1bEyPh)
        ((case-lambda
           ((g$t$7908$1bEyPh)
            (if g$t$7908$1bEyPh
              g$t$7908$1bEyPh
              (begin
                '#f
                ((case-lambda
                   ((g$t$7909$1bEyPh)
                    (if g$t$7909$1bEyPh
                      ((case-lambda
                         ((g$env$7910$1bEyPh)
                          ((case-lambda
                             ((g$rib$7911$1bEyPh)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7309$1bEyPh
                                     g$id$7907$1bEyPh
                                     g$rib$7911$1bEyPh)))
                                (case-lambda
                                  ((g$lab$7914$1bEyPh g$loc_$7915$1bEyPh)
                                   ((case-lambda
                                      ((g$loc_$7916$1bEyPh g$lab$7917$1bEyPh)
                                       (begin
                                         (g$extend-rib!$7325$1bEyPh
                                           g$rib$7911$1bEyPh
                                           g$id$7907$1bEyPh
                                           g$lab$7917$1bEyPh)
                                         g$lab$7917$1bEyPh)))
                                    g$loc_$7915$1bEyPh
                                    g$lab$7914$1bEyPh))))))
                           (g$interaction-env-rib$7717$1bEyPh
                             g$env$7910$1bEyPh))))
                       g$t$7909$1bEyPh)
                      '#f)))
                 (g$top-level-context$7755$1bEyPh))))))
         (g$id->real-label$7375$1bEyPh g$id$7907$1bEyPh)))))
   (g$id->real-label$7375$1bEyPh
     g$id->real-label$11006$1bEyPh
     (case-lambda
       ((g$id$7918$1bEyPh)
        ((case-lambda
           ((g$sym$7919$1bEyPh)
            ((letrec ((g$search$7920$1bEyPh
                        (case-lambda
                          ((g$subst*$7921$1bEyPh g$mark*$7922$1bEyPh)
                           (if (null? g$subst*$7921$1bEyPh)
                             '#f
                             (if (eq? (car g$subst*$7921$1bEyPh) 'shift)
                               (g$search$7920$1bEyPh
                                 (cdr g$subst*$7921$1bEyPh)
                                 (cdr g$mark*$7922$1bEyPh))
                               ((case-lambda
                                  ((g$rib$7923$1bEyPh)
                                   ((case-lambda
                                      ((g$t$7924$1bEyPh)
                                       (if g$t$7924$1bEyPh
                                         ((case-lambda
                                            ((g$ht$7925$1bEyPh)
                                             ((case-lambda
                                                ((g$si$7926$1bEyPh)
                                                 ((case-lambda
                                                    ((g$i$7927$1bEyPh)
                                                     (if g$i$7927$1bEyPh
                                                       (vector-ref
                                                         (g$rib-label*$7318$1bEyPh
                                                           g$rib$7923$1bEyPh)
                                                         g$i$7927$1bEyPh)
                                                       (g$search$7920$1bEyPh
                                                         (cdr g$subst*$7921$1bEyPh)
                                                         g$mark*$7922$1bEyPh))))
                                                  (if g$si$7926$1bEyPh
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7373$1bEyPh
                                                        g$mark*$7922$1bEyPh
                                                        (g$rib-mark**$7317$1bEyPh
                                                          g$rib$7923$1bEyPh)
                                                        (reverse
                                                          g$si$7926$1bEyPh)))
                                                    '#f))))
                                              (g$hashtable-ref$5287$1bEyPh
                                                g$ht$7925$1bEyPh
                                                g$sym$7919$1bEyPh
                                                '#f))))
                                          g$t$7924$1bEyPh)
                                         ((letrec ((g$f$7928$1bEyPh
                                                     (case-lambda
                                                       ((g$sym*$7929$1bEyPh
                                                          g$mark**$7930$1bEyPh
                                                          g$label*$7931$1bEyPh)
                                                        (if (null?
                                                              g$sym*$7929$1bEyPh)
                                                          (g$search$7920$1bEyPh
                                                            (cdr g$subst*$7921$1bEyPh)
                                                            g$mark*$7922$1bEyPh)
                                                          (if (if (eq? (car g$sym*$7929$1bEyPh)
                                                                       g$sym$7919$1bEyPh)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7363$1bEyPh
                                                                    (car g$mark**$7930$1bEyPh)
                                                                    g$mark*$7922$1bEyPh))
                                                                '#f)
                                                            (car g$label*$7931$1bEyPh)
                                                            (g$f$7928$1bEyPh
                                                              (cdr g$sym*$7929$1bEyPh)
                                                              (cdr g$mark**$7930$1bEyPh)
                                                              (cdr g$label*$7931$1bEyPh))))))))
                                            g$f$7928$1bEyPh)
                                          (g$rib-sym*$7316$1bEyPh
                                            g$rib$7923$1bEyPh)
                                          (g$rib-mark**$7317$1bEyPh
                                            g$rib$7923$1bEyPh)
                                          (g$rib-label*$7318$1bEyPh
                                            g$rib$7923$1bEyPh)))))
                                    (g$rib-sealed/freq$7319$1bEyPh
                                      g$rib$7923$1bEyPh))))
                                (car g$subst*$7921$1bEyPh))))))))
               g$search$7920$1bEyPh)
             (g$stx-subst*$7337$1bEyPh g$id$7918$1bEyPh)
             (g$stx-mark*$7336$1bEyPh g$id$7918$1bEyPh))))
         (g$id->sym$7362$1bEyPh g$id$7918$1bEyPh)))))
   (g$label->binding$7376$1bEyPh
     g$label->binding$11007$1bEyPh
     (case-lambda
       ((g$x$7932$1bEyPh g$r$7933$1bEyPh)
        ((case-lambda
           ((g$t$7934$1bEyPh)
            (if g$t$7934$1bEyPh
              ((case-lambda
                 ((g$b$7935$1bEyPh)
                  (if (if (pair? g$b$7935$1bEyPh)
                        (begin '#f (eq? (car g$b$7935$1bEyPh) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7602$1bEyPh (cdr g$b$7935$1bEyPh)))
                    (if (if (pair? g$b$7935$1bEyPh)
                          (begin '#f (eq? (car g$b$7935$1bEyPh) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7936$1bEyPh g$loc$7937$1bEyPh)
                          (cons '$rtd (symbol-value g$loc$7937$1bEyPh))))
                       (g$cadr$5010$1bEyPh g$b$7935$1bEyPh)
                       (g$cddr$5012$1bEyPh g$b$7935$1bEyPh))
                      g$b$7935$1bEyPh))))
               g$t$7934$1bEyPh)
              ((case-lambda
                 ((g$t$7938$1bEyPh)
                  (if g$t$7938$1bEyPh
                    (cdr g$t$7938$1bEyPh)
                    ((case-lambda
                       ((g$t$7939$1bEyPh)
                        (if g$t$7939$1bEyPh
                          ((case-lambda
                             ((g$env$7940$1bEyPh)
                              ((case-lambda
                                 ((g$t$7941$1bEyPh)
                                  (if g$t$7941$1bEyPh
                                    ((case-lambda
                                       ((g$p$7942$1bEyPh)
                                        (g$cons*$5493$1bEyPh
                                          'lexical
                                          (cdr g$p$7942$1bEyPh)
                                          '#f)))
                                     g$t$7941$1bEyPh)
                                    '(displaced-lexical . #f))))
                               (assq
                                 g$x$7932$1bEyPh
                                 (g$interaction-env-locs$7719$1bEyPh
                                   g$env$7940$1bEyPh)))))
                           g$t$7939$1bEyPh)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7755$1bEyPh)))))
               (assq g$x$7932$1bEyPh g$r$7933$1bEyPh)))))
         (g$imported-label->binding$7175$1bEyPh g$x$7932$1bEyPh)))))
   (g$make-binding$7377$1bEyPh g$make-binding$11008$1bEyPh cons)
   (g$binding-type$7378$1bEyPh g$binding-type$11009$1bEyPh car)
   (g$binding-value$7379$1bEyPh g$binding-value$11010$1bEyPh cdr)
   (g$raise-unbound-error$7380$1bEyPh
     g$raise-unbound-error$11011$1bEyPh
     (case-lambda
       ((g$id$7943$1bEyPh)
        (g$syntax-violation*$7747$1bEyPh
          '#f
          '"unbound identifier"
          g$id$7943$1bEyPh
          (g$make-undefined-violation$5827$1bEyPh)))))
   (g$syntax-type$7381$1bEyPh
     g$syntax-type$11012$1bEyPh
     (case-lambda
       ((g$e$7944$1bEyPh g$r$7945$1bEyPh)
        (if (g$id?$7361$1bEyPh g$e$7944$1bEyPh)
          ((case-lambda
             ((g$id$7946$1bEyPh)
              ((case-lambda
                 ((g$label$7947$1bEyPh)
                  ((case-lambda
                     ((g$b$7948$1bEyPh)
                      ((case-lambda
                         ((g$type$7949$1bEyPh)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7947$1bEyPh)
                                  (g$raise-unbound-error$7380$1bEyPh
                                    g$id$7946$1bEyPh)
                                  (void))
                                ((case-lambda
                                   ((g$t$7950$1bEyPh)
                                    (if (memv
                                          g$t$7950$1bEyPh
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7949$1bEyPh
                                        (g$binding-value$7379$1bEyPh
                                          g$b$7948$1bEyPh)
                                        g$id$7946$1bEyPh)
                                      (values 'other '#f '#f))))
                                 g$type$7949$1bEyPh)))))))
                       (g$binding-type$7378$1bEyPh g$b$7948$1bEyPh))))
                   (g$label->binding$7376$1bEyPh
                     g$label$7947$1bEyPh
                     g$r$7945$1bEyPh))))
               (g$id->label$7374$1bEyPh g$id$7946$1bEyPh))))
           g$e$7944$1bEyPh)
          (if (g$syntax-pair?$7354$1bEyPh g$e$7944$1bEyPh)
            ((case-lambda
               ((g$id$7951$1bEyPh)
                (if (g$id?$7361$1bEyPh g$id$7951$1bEyPh)
                  ((case-lambda
                     ((g$label$7952$1bEyPh)
                      ((case-lambda
                         ((g$b$7953$1bEyPh)
                          ((case-lambda
                             ((g$type$7954$1bEyPh)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7952$1bEyPh)
                                      (g$raise-unbound-error$7380$1bEyPh
                                        g$id$7951$1bEyPh)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7955$1bEyPh)
                                        (if (memv
                                              g$t$7955$1bEyPh
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 $core-rtd))
                                          (values
                                            g$type$7954$1bEyPh
                                            (g$binding-value$7379$1bEyPh
                                              g$b$7953$1bEyPh)
                                            g$id$7951$1bEyPh)
                                          (values 'call '#f '#f))))
                                     g$type$7954$1bEyPh)))))))
                           (g$binding-type$7378$1bEyPh g$b$7953$1bEyPh))))
                       (g$label->binding$7376$1bEyPh
                         g$label$7952$1bEyPh
                         g$r$7945$1bEyPh))))
                   (g$id->label$7374$1bEyPh g$id$7951$1bEyPh))
                  (values 'call '#f '#f))))
             (g$syntax-car$7358$1bEyPh g$e$7944$1bEyPh))
            ((case-lambda
               ((g$d$7956$1bEyPh)
                (if (g$self-evaluating?$7369$1bEyPh g$d$7956$1bEyPh)
                  (values 'constant g$d$7956$1bEyPh '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7372$1bEyPh g$e$7944$1bEyPh)))))))
   (g$sanitize-binding$7389$1bEyPh
     g$sanitize-binding$11013$1bEyPh
     (case-lambda
       ((g$x$7957$1bEyPh g$src$7958$1bEyPh)
        (if (procedure? g$x$7957$1bEyPh)
          (g$cons*$5493$1bEyPh 'local-macro g$x$7957$1bEyPh g$src$7958$1bEyPh)
          (if (if (pair? g$x$7957$1bEyPh)
                (if (eq? (car g$x$7957$1bEyPh) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7957$1bEyPh)))
                  '#f)
                '#f)
            (g$cons*$5493$1bEyPh
              'local-macro!
              (cdr g$x$7957$1bEyPh)
              g$src$7958$1bEyPh)
            (if (if (pair? g$x$7957$1bEyPh)
                  (begin '#f (eq? (car g$x$7957$1bEyPh) '$rtd))
                  '#f)
              g$x$7957$1bEyPh
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7957$1bEyPh)))))))
   (g$make-variable-transformer$7390$1bEyPh
     g$make-variable-transformer$11014$1bEyPh
     (case-lambda
       ((g$x$7959$1bEyPh)
        (if (procedure? g$x$7959$1bEyPh)
          (cons 'macro! g$x$7959$1bEyPh)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7959$1bEyPh)))))
   (g$variable-transformer?$7391$1bEyPh
     g$variable-transformer?$11015$1bEyPh
     (case-lambda
       ((g$x$7960$1bEyPh)
        (if (pair? g$x$7960$1bEyPh)
          (if (eq? (car g$x$7960$1bEyPh) 'macro!)
            (begin '#f (procedure? (cdr g$x$7960$1bEyPh)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7392$1bEyPh
     g$variable-transformer-procedure$11016$1bEyPh
     (case-lambda
       ((g$x$7961$1bEyPh)
        (if (g$variable-transformer?$7391$1bEyPh g$x$7961$1bEyPh)
          (cdr g$x$7961$1bEyPh)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7961$1bEyPh)))))
   (g$make-eval-transformer$7393$1bEyPh
     g$make-eval-transformer$11017$1bEyPh
     (case-lambda
       ((g$x$7962$1bEyPh)
        (g$sanitize-binding$7389$1bEyPh
          (eval-core (g$expanded->core$6875$1bEyPh g$x$7962$1bEyPh))
          g$x$7962$1bEyPh))))
   (g$parse-define$7579$1bEyPh
     g$parse-define$11018$1bEyPh
     (case-lambda
       ((g$x$7963$1bEyPh)
        ((case-lambda
           ((g$t$7964$1bEyPh)
            ((case-lambda
               ((g$ls/false$7965$1bEyPh)
                (if (if g$ls/false$7965$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7966$1bEyPh
                               g$fmls$7967$1bEyPh
                               g$b$7968$1bEyPh
                               g$b*$7969$1bEyPh)
                             (g$id?$7361$1bEyPh g$id$7966$1bEyPh)))
                          g$ls/false$7965$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7970$1bEyPh
                         g$fmls$7971$1bEyPh
                         g$b$7972$1bEyPh
                         g$b*$7973$1bEyPh)
                       (begin
                         (g$verify-formals$7659$1bEyPh
                           g$fmls$7971$1bEyPh
                           g$x$7963$1bEyPh)
                         (values
                           g$id$7970$1bEyPh
                           (cons
                             'defun
                             (cons
                               g$fmls$7971$1bEyPh
                               (cons g$b$7972$1bEyPh g$b*$7973$1bEyPh)))))))
                    g$ls/false$7965$1bEyPh)
                  ((case-lambda
                     ((g$t$7974$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$7975$1bEyPh)
                          (if (if g$ls/false$7975$1bEyPh
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7976$1bEyPh g$val$7977$1bEyPh)
                                       (g$id?$7361$1bEyPh g$id$7976$1bEyPh)))
                                    g$ls/false$7975$1bEyPh))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7978$1bEyPh g$val$7979$1bEyPh)
                                 (values
                                   g$id$7978$1bEyPh
                                   (cons 'expr g$val$7979$1bEyPh))))
                              g$ls/false$7975$1bEyPh)
                            ((case-lambda
                               ((g$t$7980$1bEyPh)
                                ((case-lambda
                                   ((g$ls/false$7981$1bEyPh)
                                    (if (if g$ls/false$7981$1bEyPh
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7982$1bEyPh)
                                                 (g$id?$7361$1bEyPh
                                                   g$id$7982$1bEyPh)))
                                              g$ls/false$7981$1bEyPh))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7983$1bEyPh)
                                           (values
                                             g$id$7983$1bEyPh
                                             (cons
                                               'expr
                                               (g$bless$7602$1bEyPh '(void))))))
                                        g$ls/false$7981$1bEyPh)
                                      (g$syntax-violation$7748$1bEyPh
                                        '#f
                                        '"invalid syntax"
                                        g$t$7980$1bEyPh))))
                                 (g$syntax-dispatch$7639$1bEyPh
                                   g$t$7980$1bEyPh
                                   '(_ any)))))
                             g$t$7974$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$7974$1bEyPh
                         '(_ any any)))))
                   g$t$7964$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$7964$1bEyPh
               '(_ (any . any) any . each-any)))))
         g$x$7963$1bEyPh))))
   (g$parse-define-syntax$7580$1bEyPh
     g$parse-define-syntax$11019$1bEyPh
     (case-lambda
       ((g$x$7984$1bEyPh)
        ((case-lambda
           ((g$t$7985$1bEyPh)
            ((case-lambda
               ((g$ls/false$7986$1bEyPh)
                (if (if g$ls/false$7986$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7987$1bEyPh g$val$7988$1bEyPh)
                             (g$id?$7361$1bEyPh g$id$7987$1bEyPh)))
                          g$ls/false$7986$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7989$1bEyPh g$val$7990$1bEyPh)
                       (values g$id$7989$1bEyPh g$val$7990$1bEyPh)))
                    g$ls/false$7986$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$7985$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$7985$1bEyPh '(_ any any)))))
         g$x$7984$1bEyPh))))
   (g$scheme-stx-hashtable$7581$1bEyPh
     g$scheme-stx-hashtable$11020$1bEyPh
     (g$make-eq-hashtable$5284$1bEyPh))
   (g$scheme-stx$7582$1bEyPh
     g$scheme-stx$11021$1bEyPh
     (case-lambda
       ((g$sym$7991$1bEyPh)
        ((case-lambda
           ((g$t$7992$1bEyPh)
            (if g$t$7992$1bEyPh
              g$t$7992$1bEyPh
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7993$1bEyPh)
                    ((case-lambda
                       ((g$stx$7994$1bEyPh)
                        ((case-lambda
                           ((g$stx$7995$1bEyPh)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5288$1bEyPh
                                    g$scheme-stx-hashtable$7581$1bEyPh
                                    g$sym$7991$1bEyPh
                                    g$stx$7995$1bEyPh)
                                  g$stx$7995$1bEyPh))))))
                         ((case-lambda
                            ((g$t$7996$1bEyPh)
                             (if g$t$7996$1bEyPh
                               ((case-lambda
                                  ((g$x$7997$1bEyPh)
                                   ((case-lambda
                                      ((g$name$7998$1bEyPh g$label$7999$1bEyPh)
                                       (g$add-subst$7351$1bEyPh
                                         (g$make-rib$7315$1bEyPh
                                           (list g$name$7998$1bEyPh)
                                           (list g$top-mark*$7303$1bEyPh)
                                           (list g$label$7999$1bEyPh)
                                           '#f)
                                         g$stx$7994$1bEyPh)))
                                    (car g$x$7997$1bEyPh)
                                    (cdr g$x$7997$1bEyPh))))
                                g$t$7996$1bEyPh)
                               g$stx$7994$1bEyPh)))
                          (assq g$sym$7991$1bEyPh g$subst$7993$1bEyPh)))))
                     (g$make-stx$7334$1bEyPh
                       g$sym$7991$1bEyPh
                       g$top-mark*$7303$1bEyPh
                       '()
                       '()))))
                 (g$library-subst$7133$1bEyPh
                   (g$find-library-by-name$7169$1bEyPh
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5287$1bEyPh
           g$scheme-stx-hashtable$7581$1bEyPh
           g$sym$7991$1bEyPh
           '#f)))))
   (g$lexical-var$7583$1bEyPh g$lexical-var$11022$1bEyPh car)
   (g$lexical-mutable?$7584$1bEyPh g$lexical-mutable?$11023$1bEyPh cdr)
   (g$set-lexical-mutable!$7585$1bEyPh
     g$set-lexical-mutable!$11024$1bEyPh
     set-cdr!)
   (g$add-lexical$7586$1bEyPh
     g$add-lexical$11025$1bEyPh
     (case-lambda
       ((g$lab$8000$1bEyPh g$lex$8001$1bEyPh g$r$8002$1bEyPh)
        (cons
          (g$cons*$5493$1bEyPh g$lab$8000$1bEyPh 'lexical g$lex$8001$1bEyPh '#f)
          g$r$8002$1bEyPh))))
   (g$add-lexicals$7587$1bEyPh
     g$add-lexicals$11026$1bEyPh
     (case-lambda
       ((g$lab*$8003$1bEyPh g$lex*$8004$1bEyPh g$r$8005$1bEyPh)
        (if (null? g$lab*$8003$1bEyPh)
          g$r$8005$1bEyPh
          (g$add-lexicals$7587$1bEyPh
            (cdr g$lab*$8003$1bEyPh)
            (cdr g$lex*$8004$1bEyPh)
            (g$add-lexical$7586$1bEyPh
              (car g$lab*$8003$1bEyPh)
              (car g$lex*$8004$1bEyPh)
              g$r$8005$1bEyPh))))))
   (g$letrec-helper$7588$1bEyPh
     g$letrec-helper$11027$1bEyPh
     (case-lambda
       ((g$e$8006$1bEyPh g$r$8007$1bEyPh g$mr$8008$1bEyPh g$build$8009$1bEyPh)
        ((case-lambda
           ((g$t$8010$1bEyPh)
            ((case-lambda
               ((g$ls/false$8011$1bEyPh)
                (if g$ls/false$8011$1bEyPh
                  (apply
                    (case-lambda
                      ((g$lhs*$8012$1bEyPh
                         g$rhs*$8013$1bEyPh
                         g$b$8014$1bEyPh
                         g$b*$8015$1bEyPh)
                       (if (not (g$valid-bound-ids?$7366$1bEyPh
                                  g$lhs*$8012$1bEyPh))
                         (g$invalid-fmls-error$7604$1bEyPh
                           g$e$8006$1bEyPh
                           g$lhs*$8012$1bEyPh)
                         ((case-lambda
                            ((g$lex*$8016$1bEyPh g$lab*$8017$1bEyPh)
                             ((case-lambda
                                ((g$rib$8018$1bEyPh g$r$8019$1bEyPh)
                                 ((case-lambda
                                    ((g$body$8020$1bEyPh g$rhs*$8021$1bEyPh)
                                     (g$build$8009$1bEyPh
                                       '#f
                                       g$lex*$8016$1bEyPh
                                       g$rhs*$8021$1bEyPh
                                       g$body$8020$1bEyPh)))
                                  (g$chi-internal$7668$1bEyPh
                                    (g$add-subst$7351$1bEyPh
                                      g$rib$8018$1bEyPh
                                      (cons g$b$8014$1bEyPh g$b*$8015$1bEyPh))
                                    g$r$8019$1bEyPh
                                    g$mr$8008$1bEyPh)
                                  (g$chi-expr*$7655$1bEyPh
                                    (map (case-lambda
                                           ((g$x$8022$1bEyPh)
                                            (g$add-subst$7351$1bEyPh
                                              g$rib$8018$1bEyPh
                                              g$x$8022$1bEyPh)))
                                         g$rhs*$8013$1bEyPh)
                                    g$r$8019$1bEyPh
                                    g$mr$8008$1bEyPh))))
                              (g$make-full-rib$7329$1bEyPh
                                g$lhs*$8012$1bEyPh
                                g$lab*$8017$1bEyPh)
                              (g$add-lexicals$7587$1bEyPh
                                g$lab*$8017$1bEyPh
                                g$lex*$8016$1bEyPh
                                g$r$8007$1bEyPh))))
                          (map g$gen-lexical$7305$1bEyPh g$lhs*$8012$1bEyPh)
                          (map g$gen-label$7307$1bEyPh g$lhs*$8012$1bEyPh)))))
                    g$ls/false$8011$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8010$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8010$1bEyPh
               '(_ #(each (any any)) any . each-any)))))
         g$e$8006$1bEyPh))))
   (g$letrec-transformer$7589$1bEyPh
     g$letrec-transformer$11028$1bEyPh
     (case-lambda
       ((g$e$8023$1bEyPh g$r$8024$1bEyPh g$mr$8025$1bEyPh)
        (g$letrec-helper$7588$1bEyPh
          g$e$8023$1bEyPh
          g$r$8024$1bEyPh
          g$mr$8025$1bEyPh
          g$build-letrec$7297$1bEyPh))))
   (g$letrec*-transformer$7590$1bEyPh
     g$letrec*-transformer$11029$1bEyPh
     (case-lambda
       ((g$e$8026$1bEyPh g$r$8027$1bEyPh g$mr$8028$1bEyPh)
        (g$letrec-helper$7588$1bEyPh
          g$e$8026$1bEyPh
          g$r$8027$1bEyPh
          g$mr$8028$1bEyPh
          g$build-letrec*$7298$1bEyPh))))
   (g$fluid-let-syntax-transformer$7591$1bEyPh
     g$fluid-let-syntax-transformer$11030$1bEyPh
     (case-lambda
       ((g$e$8029$1bEyPh g$r$8030$1bEyPh g$mr$8031$1bEyPh)
        (letrec* ((g$lookup$8032$1bEyPh
                    (case-lambda
                      ((g$x$8042$1bEyPh)
                       ((case-lambda
                          ((g$t$8043$1bEyPh)
                           (if g$t$8043$1bEyPh
                             g$t$8043$1bEyPh
                             (begin
                               '#f
                               (g$syntax-violation$7748$1bEyPh
                                 '#f
                                 '"unbound identifier"
                                 g$e$8029$1bEyPh
                                 g$x$8042$1bEyPh)))))
                        (g$id->label$7374$1bEyPh g$x$8042$1bEyPh))))))
          ((case-lambda
             ((g$t$8033$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8034$1bEyPh)
                  (if g$ls/false$8034$1bEyPh
                    (apply
                      (case-lambda
                        ((g$lhs*$8035$1bEyPh
                           g$rhs*$8036$1bEyPh
                           g$b$8037$1bEyPh
                           g$b*$8038$1bEyPh)
                         (if (not (g$valid-bound-ids?$7366$1bEyPh
                                    g$lhs*$8035$1bEyPh))
                           (g$invalid-fmls-error$7604$1bEyPh
                             g$e$8029$1bEyPh
                             g$lhs*$8035$1bEyPh)
                           ((case-lambda
                              ((g$lab*$8039$1bEyPh g$rhs*$8040$1bEyPh)
                               (g$chi-internal$7668$1bEyPh
                                 (cons g$b$8037$1bEyPh g$b*$8038$1bEyPh)
                                 (append
                                   (map cons
                                        g$lab*$8039$1bEyPh
                                        g$rhs*$8040$1bEyPh)
                                   g$r$8030$1bEyPh)
                                 (append
                                   (map cons
                                        g$lab*$8039$1bEyPh
                                        g$rhs*$8040$1bEyPh)
                                   g$mr$8031$1bEyPh))))
                            (map g$lookup$8032$1bEyPh g$lhs*$8035$1bEyPh)
                            (map (case-lambda
                                   ((g$x$8041$1bEyPh)
                                    (g$make-eval-transformer$7393$1bEyPh
                                      (g$expand-transformer$7684$1bEyPh
                                        g$x$8041$1bEyPh
                                        g$mr$8031$1bEyPh))))
                                 g$rhs*$8036$1bEyPh)))))
                      g$ls/false$8034$1bEyPh)
                    (g$syntax-violation$7748$1bEyPh
                      '#f
                      '"invalid syntax"
                      g$t$8033$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$8033$1bEyPh
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8029$1bEyPh)))))
   (g$type-descriptor-transformer$7592$1bEyPh
     g$type-descriptor-transformer$11031$1bEyPh
     (case-lambda
       ((g$e$8044$1bEyPh g$r$8045$1bEyPh g$mr$8046$1bEyPh)
        ((case-lambda
           ((g$t$8047$1bEyPh)
            ((case-lambda
               ((g$ls/false$8048$1bEyPh)
                (if (if g$ls/false$8048$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8049$1bEyPh)
                             (g$id?$7361$1bEyPh g$id$8049$1bEyPh)))
                          g$ls/false$8048$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8050$1bEyPh)
                       ((case-lambda
                          ((g$lab$8051$1bEyPh)
                           ((case-lambda
                              ((g$b$8052$1bEyPh)
                               ((case-lambda
                                  ((g$type$8053$1bEyPh)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8051$1bEyPh)
                                           (g$raise-unbound-error$7380$1bEyPh
                                             g$id$8050$1bEyPh)
                                           (void))
                                         (if (not (if (eq? g$type$8053$1bEyPh
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7379$1bEyPh
                                                               g$b$8052$1bEyPh))))
                                                    '#f))
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"not a record type"
                                             g$e$8044$1bEyPh)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7379$1bEyPh
                                             g$b$8052$1bEyPh))))))))
                                (g$binding-type$7378$1bEyPh g$b$8052$1bEyPh))))
                            (g$label->binding$7376$1bEyPh
                              g$lab$8051$1bEyPh
                              g$r$8045$1bEyPh))))
                        (g$id->label$7374$1bEyPh g$id$8050$1bEyPh))))
                    g$ls/false$8048$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8047$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8047$1bEyPh '(_ any)))))
         g$e$8044$1bEyPh))))
   (g$record-type-descriptor-transformer$7593$1bEyPh
     g$record-type-descriptor-transformer$11032$1bEyPh
     (case-lambda
       ((g$e$8054$1bEyPh g$r$8055$1bEyPh g$mr$8056$1bEyPh)
        ((case-lambda
           ((g$t$8057$1bEyPh)
            ((case-lambda
               ((g$ls/false$8058$1bEyPh)
                (if (if g$ls/false$8058$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8059$1bEyPh)
                             (g$id?$7361$1bEyPh g$id$8059$1bEyPh)))
                          g$ls/false$8058$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8060$1bEyPh)
                       ((case-lambda
                          ((g$lab$8061$1bEyPh)
                           ((case-lambda
                              ((g$b$8062$1bEyPh)
                               ((case-lambda
                                  ((g$type$8063$1bEyPh)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8061$1bEyPh)
                                           (g$raise-unbound-error$7380$1bEyPh
                                             g$id$8060$1bEyPh)
                                           (void))
                                         (if (not (if (eq? g$type$8063$1bEyPh
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7379$1bEyPh
                                                          g$b$8062$1bEyPh)))
                                                    '#f))
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"not a record type"
                                             g$e$8054$1bEyPh)
                                           (void))
                                         (g$chi-expr$7657$1bEyPh
                                           (car (g$binding-value$7379$1bEyPh
                                                  g$b$8062$1bEyPh))
                                           g$r$8055$1bEyPh
                                           g$mr$8056$1bEyPh)))))))
                                (g$binding-type$7378$1bEyPh g$b$8062$1bEyPh))))
                            (g$label->binding$7376$1bEyPh
                              g$lab$8061$1bEyPh
                              g$r$8055$1bEyPh))))
                        (g$id->label$7374$1bEyPh g$id$8060$1bEyPh))))
                    g$ls/false$8058$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8057$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8057$1bEyPh '(_ any)))))
         g$e$8054$1bEyPh))))
   (g$record-constructor-descriptor-transformer$7594$1bEyPh
     g$record-constructor-descriptor-transformer$11033$1bEyPh
     (case-lambda
       ((g$e$8064$1bEyPh g$r$8065$1bEyPh g$mr$8066$1bEyPh)
        ((case-lambda
           ((g$t$8067$1bEyPh)
            ((case-lambda
               ((g$ls/false$8068$1bEyPh)
                (if (if g$ls/false$8068$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8069$1bEyPh)
                             (g$id?$7361$1bEyPh g$id$8069$1bEyPh)))
                          g$ls/false$8068$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8070$1bEyPh)
                       ((case-lambda
                          ((g$lab$8071$1bEyPh)
                           ((case-lambda
                              ((g$b$8072$1bEyPh)
                               ((case-lambda
                                  ((g$type$8073$1bEyPh)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$8071$1bEyPh)
                                           (g$raise-unbound-error$7380$1bEyPh
                                             g$id$8070$1bEyPh)
                                           (void))
                                         (if (not (if (eq? g$type$8073$1bEyPh
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7379$1bEyPh
                                                          g$b$8072$1bEyPh)))
                                                    '#f))
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid type"
                                             g$e$8064$1bEyPh)
                                           (void))
                                         (g$chi-expr$7657$1bEyPh
                                           (g$cadr$5010$1bEyPh
                                             (g$binding-value$7379$1bEyPh
                                               g$b$8072$1bEyPh))
                                           g$r$8065$1bEyPh
                                           g$mr$8066$1bEyPh)))))))
                                (g$binding-type$7378$1bEyPh g$b$8072$1bEyPh))))
                            (g$label->binding$7376$1bEyPh
                              g$lab$8071$1bEyPh
                              g$r$8065$1bEyPh))))
                        (g$id->label$7374$1bEyPh g$id$8070$1bEyPh))))
                    g$ls/false$8068$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8067$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8067$1bEyPh '(_ any)))))
         g$e$8064$1bEyPh))))
   (g$when-macro$7595$1bEyPh
     g$when-macro$11034$1bEyPh
     (case-lambda
       ((g$e$8074$1bEyPh)
        ((case-lambda
           ((g$t$8075$1bEyPh)
            ((case-lambda
               ((g$ls/false$8076$1bEyPh)
                (if g$ls/false$8076$1bEyPh
                  (apply
                    (case-lambda
                      ((g$test$8077$1bEyPh g$e$8078$1bEyPh g$e*$8079$1bEyPh)
                       (g$bless$7602$1bEyPh
                         (list
                           'if
                           g$test$8077$1bEyPh
                           (cons
                             'begin
                             (cons g$e$8078$1bEyPh g$e*$8079$1bEyPh))))))
                    g$ls/false$8076$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8075$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8075$1bEyPh
               '(_ any any . each-any)))))
         g$e$8074$1bEyPh))))
   (g$unless-macro$7596$1bEyPh
     g$unless-macro$11035$1bEyPh
     (case-lambda
       ((g$e$8080$1bEyPh)
        ((case-lambda
           ((g$t$8081$1bEyPh)
            ((case-lambda
               ((g$ls/false$8082$1bEyPh)
                (if g$ls/false$8082$1bEyPh
                  (apply
                    (case-lambda
                      ((g$test$8083$1bEyPh g$e$8084$1bEyPh g$e*$8085$1bEyPh)
                       (g$bless$7602$1bEyPh
                         (list
                           'if
                           (list 'not g$test$8083$1bEyPh)
                           (cons
                             'begin
                             (cons g$e$8084$1bEyPh g$e*$8085$1bEyPh))))))
                    g$ls/false$8082$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8081$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8081$1bEyPh
               '(_ any any . each-any)))))
         g$e$8080$1bEyPh))))
   (g$if-transformer$7597$1bEyPh
     g$if-transformer$11036$1bEyPh
     (case-lambda
       ((g$e$8086$1bEyPh g$r$8087$1bEyPh g$mr$8088$1bEyPh)
        ((case-lambda
           ((g$t$8089$1bEyPh)
            ((case-lambda
               ((g$ls/false$8090$1bEyPh)
                (if g$ls/false$8090$1bEyPh
                  (apply
                    (case-lambda
                      ((g$e0$8091$1bEyPh g$e1$8092$1bEyPh g$e2$8093$1bEyPh)
                       (list
                         'if
                         (g$chi-expr$7657$1bEyPh
                           g$e0$8091$1bEyPh
                           g$r$8087$1bEyPh
                           g$mr$8088$1bEyPh)
                         (g$chi-expr$7657$1bEyPh
                           g$e1$8092$1bEyPh
                           g$r$8087$1bEyPh
                           g$mr$8088$1bEyPh)
                         (g$chi-expr$7657$1bEyPh
                           g$e2$8093$1bEyPh
                           g$r$8087$1bEyPh
                           g$mr$8088$1bEyPh))))
                    g$ls/false$8090$1bEyPh)
                  ((case-lambda
                     ((g$t$8094$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8095$1bEyPh)
                          (if g$ls/false$8095$1bEyPh
                            (apply
                              (case-lambda
                                ((g$e0$8096$1bEyPh g$e1$8097$1bEyPh)
                                 (list
                                   'if
                                   (g$chi-expr$7657$1bEyPh
                                     g$e0$8096$1bEyPh
                                     g$r$8087$1bEyPh
                                     g$mr$8088$1bEyPh)
                                   (g$chi-expr$7657$1bEyPh
                                     g$e1$8097$1bEyPh
                                     g$r$8087$1bEyPh
                                     g$mr$8088$1bEyPh)
                                   (g$build-void$7296$1bEyPh))))
                              g$ls/false$8095$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$8094$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$8094$1bEyPh
                         '(_ any any)))))
                   g$t$8089$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8089$1bEyPh '(_ any any any)))))
         g$e$8086$1bEyPh))))
   (g$case-macro$7598$1bEyPh
     g$case-macro$11037$1bEyPh
     (case-lambda
       ((g$e$8098$1bEyPh)
        (letrec* ((g$build-last$8099$1bEyPh
                    (case-lambda
                      ((g$cls$8119$1bEyPh)
                       ((case-lambda
                          ((g$t$8120$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$8121$1bEyPh)
                               (if g$ls/false$8121$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$e$8122$1bEyPh g$e*$8123$1bEyPh)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8122$1bEyPh
                                          g$e*$8123$1bEyPh))))
                                   g$ls/false$8121$1bEyPh)
                                 ((case-lambda
                                    ((g$t$8124$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$8125$1bEyPh)
                                         (if g$ls/false$8125$1bEyPh
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8100$1bEyPh
                                                  g$cls$8119$1bEyPh
                                                  '(if #f #f))))
                                             g$ls/false$8125$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$8124$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$8124$1bEyPh
                                        '_))))
                                  g$t$8120$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$8120$1bEyPh
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8119$1bEyPh))))
                  (g$build-one$8100$1bEyPh
                    (case-lambda
                      ((g$cls$8112$1bEyPh g$k$8113$1bEyPh)
                       ((case-lambda
                          ((g$t$8114$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$8115$1bEyPh)
                               (if g$ls/false$8115$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$d*$8116$1bEyPh
                                        g$e$8117$1bEyPh
                                        g$e*$8118$1bEyPh)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8116$1bEyPh))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8117$1bEyPh
                                            g$e*$8118$1bEyPh))
                                        g$k$8113$1bEyPh)))
                                   g$ls/false$8115$1bEyPh)
                                 (g$syntax-violation$7748$1bEyPh
                                   '#f
                                   '"invalid syntax"
                                   g$t$8114$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$8114$1bEyPh
                              '(each-any any . each-any)))))
                        g$cls$8112$1bEyPh)))))
          ((case-lambda
             ((g$t$8101$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8102$1bEyPh)
                  (if g$ls/false$8102$1bEyPh
                    (apply
                      (case-lambda
                        ((g$expr$8103$1bEyPh)
                         (g$bless$7602$1bEyPh
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8103$1bEyPh))
                               '((if #f #f)))))))
                      g$ls/false$8102$1bEyPh)
                    ((case-lambda
                       ((g$t$8104$1bEyPh)
                        ((case-lambda
                           ((g$ls/false$8105$1bEyPh)
                            (if g$ls/false$8105$1bEyPh
                              (apply
                                (case-lambda
                                  ((g$expr$8106$1bEyPh
                                     g$cls$8107$1bEyPh
                                     g$cls*$8108$1bEyPh)
                                   (g$bless$7602$1bEyPh
                                     (list
                                       'let
                                       (list (list 't g$expr$8106$1bEyPh))
                                       ((letrec ((g$f$8109$1bEyPh
                                                   (case-lambda
                                                     ((g$cls$8110$1bEyPh
                                                        g$cls*$8111$1bEyPh)
                                                      (if (null?
                                                            g$cls*$8111$1bEyPh)
                                                        (g$build-last$8099$1bEyPh
                                                          g$cls$8110$1bEyPh)
                                                        (g$build-one$8100$1bEyPh
                                                          g$cls$8110$1bEyPh
                                                          (g$f$8109$1bEyPh
                                                            (car g$cls*$8111$1bEyPh)
                                                            (cdr g$cls*$8111$1bEyPh))))))))
                                          g$f$8109$1bEyPh)
                                        g$cls$8107$1bEyPh
                                        g$cls*$8108$1bEyPh)))))
                                g$ls/false$8105$1bEyPh)
                              (g$syntax-violation$7748$1bEyPh
                                '#f
                                '"invalid syntax"
                                g$t$8104$1bEyPh))))
                         (g$syntax-dispatch$7639$1bEyPh
                           g$t$8104$1bEyPh
                           '(_ any any . each-any)))))
                     g$t$8101$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh g$t$8101$1bEyPh '(_ any)))))
           g$e$8098$1bEyPh)))))
   (g$quote-transformer$7599$1bEyPh
     g$quote-transformer$11038$1bEyPh
     (case-lambda
       ((g$e$8126$1bEyPh g$r$8127$1bEyPh g$mr$8128$1bEyPh)
        ((case-lambda
           ((g$t$8129$1bEyPh)
            ((case-lambda
               ((g$ls/false$8130$1bEyPh)
                (if g$ls/false$8130$1bEyPh
                  (apply
                    (case-lambda
                      ((g$datum$8131$1bEyPh)
                       (list
                         'quote
                         (g$stx->datum$7372$1bEyPh g$datum$8131$1bEyPh))))
                    g$ls/false$8130$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8129$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8129$1bEyPh '(_ any)))))
         g$e$8126$1bEyPh))))
   (g$case-lambda-transformer$7600$1bEyPh
     g$case-lambda-transformer$11039$1bEyPh
     (case-lambda
       ((g$e$8132$1bEyPh g$r$8133$1bEyPh g$mr$8134$1bEyPh)
        ((case-lambda
           ((g$t$8135$1bEyPh)
            ((case-lambda
               ((g$ls/false$8136$1bEyPh)
                (if g$ls/false$8136$1bEyPh
                  (apply
                    (case-lambda
                      ((g$fmls*$8137$1bEyPh g$b*$8138$1bEyPh g$b**$8139$1bEyPh)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7661$1bEyPh
                              g$e$8132$1bEyPh
                              g$fmls*$8137$1bEyPh
                              (map cons g$b*$8138$1bEyPh g$b**$8139$1bEyPh)
                              g$r$8133$1bEyPh
                              g$mr$8134$1bEyPh)))
                         (case-lambda
                           ((g$fmls*$8142$1bEyPh g$body*$8143$1bEyPh)
                            ((case-lambda
                               ((g$body*$8144$1bEyPh g$fmls*$8145$1bEyPh)
                                (g$build-case-lambda$7293$1bEyPh
                                  '#f
                                  g$fmls*$8145$1bEyPh
                                  g$body*$8144$1bEyPh)))
                             g$body*$8143$1bEyPh
                             g$fmls*$8142$1bEyPh))))))
                    g$ls/false$8136$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8135$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8135$1bEyPh
               '(_ . #(each (any any . each-any)))))))
         g$e$8132$1bEyPh))))
   (g$lambda-transformer$7601$1bEyPh
     g$lambda-transformer$11040$1bEyPh
     (case-lambda
       ((g$e$8146$1bEyPh g$r$8147$1bEyPh g$mr$8148$1bEyPh)
        ((case-lambda
           ((g$t$8149$1bEyPh)
            ((case-lambda
               ((g$ls/false$8150$1bEyPh)
                (if g$ls/false$8150$1bEyPh
                  (apply
                    (case-lambda
                      ((g$fmls$8151$1bEyPh g$b$8152$1bEyPh g$b*$8153$1bEyPh)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7660$1bEyPh
                              g$e$8146$1bEyPh
                              g$fmls$8151$1bEyPh
                              (cons g$b$8152$1bEyPh g$b*$8153$1bEyPh)
                              g$r$8147$1bEyPh
                              g$mr$8148$1bEyPh)))
                         (case-lambda
                           ((g$fmls$8156$1bEyPh g$body$8157$1bEyPh)
                            ((case-lambda
                               ((g$body$8158$1bEyPh g$fmls$8159$1bEyPh)
                                (g$build-lambda$7292$1bEyPh
                                  '#f
                                  g$fmls$8159$1bEyPh
                                  g$body$8158$1bEyPh)))
                             g$body$8157$1bEyPh
                             g$fmls$8156$1bEyPh))))))
                    g$ls/false$8150$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8149$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8149$1bEyPh
               '(_ any any . each-any)))))
         g$e$8146$1bEyPh))))
   (g$bless$7602$1bEyPh
     g$bless$11041$1bEyPh
     (case-lambda
       ((g$x$8160$1bEyPh)
        (g$mkstx$7349$1bEyPh
          ((letrec ((g$f$8161$1bEyPh
                      (case-lambda
                        ((g$x$8162$1bEyPh)
                         (if (g$stx?$7333$1bEyPh g$x$8162$1bEyPh)
                           g$x$8162$1bEyPh
                           (if (pair? g$x$8162$1bEyPh)
                             (cons
                               (g$f$8161$1bEyPh (car g$x$8162$1bEyPh))
                               (g$f$8161$1bEyPh (cdr g$x$8162$1bEyPh)))
                             (if (symbol? g$x$8162$1bEyPh)
                               (g$scheme-stx$7582$1bEyPh g$x$8162$1bEyPh)
                               (if (vector? g$x$8162$1bEyPh)
                                 (vector-map g$f$8161$1bEyPh g$x$8162$1bEyPh)
                                 g$x$8162$1bEyPh))))))))
             g$f$8161$1bEyPh)
           g$x$8160$1bEyPh)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7603$1bEyPh
     g$with-syntax-macro$11042$1bEyPh
     (case-lambda
       ((g$e$8163$1bEyPh)
        ((case-lambda
           ((g$t$8164$1bEyPh)
            ((case-lambda
               ((g$ls/false$8165$1bEyPh)
                (if g$ls/false$8165$1bEyPh
                  (apply
                    (case-lambda
                      ((g$pat*$8166$1bEyPh
                         g$expr*$8167$1bEyPh
                         g$b$8168$1bEyPh
                         g$b*$8169$1bEyPh)
                       ((case-lambda
                          ((g$idn*$8170$1bEyPh)
                           (begin
                             (g$verify-formals$7659$1bEyPh
                               (map car g$idn*$8170$1bEyPh)
                               g$e$8163$1bEyPh)
                             ((case-lambda
                                ((g$t*$8171$1bEyPh)
                                 (g$bless$7602$1bEyPh
                                   (list
                                     'let
                                     (map list
                                          g$t*$8171$1bEyPh
                                          g$expr*$8167$1bEyPh)
                                     ((letrec ((g$f$8172$1bEyPh
                                                 (case-lambda
                                                   ((g$pat*$8173$1bEyPh
                                                      g$t*$8174$1bEyPh)
                                                    (if (null?
                                                          g$pat*$8173$1bEyPh)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8168$1bEyPh
                                                            g$b*$8169$1bEyPh)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8174$1bEyPh)
                                                        '()
                                                        (list
                                                          (car g$pat*$8173$1bEyPh)
                                                          (g$f$8172$1bEyPh
                                                            (cdr g$pat*$8173$1bEyPh)
                                                            (cdr g$t*$8174$1bEyPh)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8173$1bEyPh))
                                                            (car g$t*$8174$1bEyPh)))))))))
                                        g$f$8172$1bEyPh)
                                      g$pat*$8166$1bEyPh
                                      g$t*$8171$1bEyPh)))))
                              (g$generate-temporaries$7738$1bEyPh
                                g$expr*$8167$1bEyPh)))))
                        ((letrec ((g$f$8175$1bEyPh
                                    (case-lambda
                                      ((g$pat*$8176$1bEyPh)
                                       (if (null? g$pat*$8176$1bEyPh)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7638$1bEyPh
                                                (car g$pat*$8176$1bEyPh)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8179$1bEyPh
                                                g$idn*$8180$1bEyPh)
                                              ((case-lambda
                                                 ((g$idn*$8181$1bEyPh
                                                    g$pat$8182$1bEyPh)
                                                  (append
                                                    g$idn*$8181$1bEyPh
                                                    (g$f$8175$1bEyPh
                                                      (cdr g$pat*$8176$1bEyPh)))))
                                               g$idn*$8180$1bEyPh
                                               g$pat$8179$1bEyPh)))))))))
                           g$f$8175$1bEyPh)
                         g$pat*$8166$1bEyPh))))
                    g$ls/false$8165$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8164$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8164$1bEyPh
               '(_ #(each (any any)) any . each-any)))))
         g$e$8163$1bEyPh))))
   (g$invalid-fmls-error$7604$1bEyPh
     g$invalid-fmls-error$11043$1bEyPh
     (case-lambda
       ((g$stx$8183$1bEyPh g$fmls$8184$1bEyPh)
        ((case-lambda
           ((g$t$8185$1bEyPh)
            ((case-lambda
               ((g$ls/false$8186$1bEyPh)
                (if g$ls/false$8186$1bEyPh
                  (apply
                    (case-lambda
                      ((g$id*$8187$1bEyPh g$last$8188$1bEyPh)
                       ((letrec ((g$f$8189$1bEyPh
                                   (case-lambda
                                     ((g$id*$8190$1bEyPh)
                                      (if (null? g$id*$8190$1bEyPh)
                                        (values)
                                        (if (not (g$id?$7361$1bEyPh
                                                   (car g$id*$8190$1bEyPh)))
                                          (g$syntax-violation$7748$1bEyPh
                                            '#f
                                            '"not an identifier"
                                            g$stx$8183$1bEyPh
                                            (car g$id*$8190$1bEyPh))
                                          (begin
                                            (g$f$8189$1bEyPh
                                              (cdr g$id*$8190$1bEyPh))
                                            (if (g$bound-id-member?$7368$1bEyPh
                                                  (car g$id*$8190$1bEyPh)
                                                  (cdr g$id*$8190$1bEyPh))
                                              (g$syntax-violation$7748$1bEyPh
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8183$1bEyPh
                                                (car g$id*$8190$1bEyPh))
                                              (void)))))))))
                          g$f$8189$1bEyPh)
                        (if (g$id?$7361$1bEyPh g$last$8188$1bEyPh)
                          (cons g$last$8188$1bEyPh g$id*$8187$1bEyPh)
                          (if (g$syntax-null?$7356$1bEyPh g$last$8188$1bEyPh)
                            g$id*$8187$1bEyPh
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"not an identifier"
                              g$stx$8183$1bEyPh
                              g$last$8188$1bEyPh))))))
                    g$ls/false$8186$1bEyPh)
                  ((case-lambda
                     ((g$t$8191$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8192$1bEyPh)
                          (if g$ls/false$8192$1bEyPh
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7748$1bEyPh
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8183$1bEyPh
                                   g$fmls$8184$1bEyPh)))
                              g$ls/false$8192$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$8191$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh g$t$8191$1bEyPh '_))))
                   g$t$8185$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8185$1bEyPh
               '#(each+ any () any)))))
         g$fmls$8184$1bEyPh))))
   (g$let-macro$7605$1bEyPh
     g$let-macro$11044$1bEyPh
     (case-lambda
       ((g$stx$8193$1bEyPh)
        ((case-lambda
           ((g$t$8194$1bEyPh)
            ((case-lambda
               ((g$ls/false$8195$1bEyPh)
                (if g$ls/false$8195$1bEyPh
                  (apply
                    (case-lambda
                      ((g$lhs*$8196$1bEyPh
                         g$rhs*$8197$1bEyPh
                         g$b$8198$1bEyPh
                         g$b*$8199$1bEyPh)
                       (if (g$valid-bound-ids?$7366$1bEyPh g$lhs*$8196$1bEyPh)
                         (g$bless$7602$1bEyPh
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8196$1bEyPh
                                 (cons g$b$8198$1bEyPh g$b*$8199$1bEyPh)))
                             g$rhs*$8197$1bEyPh))
                         (g$invalid-fmls-error$7604$1bEyPh
                           g$stx$8193$1bEyPh
                           g$lhs*$8196$1bEyPh))))
                    g$ls/false$8195$1bEyPh)
                  ((case-lambda
                     ((g$t$8200$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8201$1bEyPh)
                          (if (if g$ls/false$8201$1bEyPh
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8202$1bEyPh
                                         g$lhs*$8203$1bEyPh
                                         g$rhs*$8204$1bEyPh
                                         g$b$8205$1bEyPh
                                         g$b*$8206$1bEyPh)
                                       (g$id?$7361$1bEyPh g$f$8202$1bEyPh)))
                                    g$ls/false$8201$1bEyPh))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8207$1bEyPh
                                   g$lhs*$8208$1bEyPh
                                   g$rhs*$8209$1bEyPh
                                   g$b$8210$1bEyPh
                                   g$b*$8211$1bEyPh)
                                 (if (g$valid-bound-ids?$7366$1bEyPh
                                       g$lhs*$8208$1bEyPh)
                                   (g$bless$7602$1bEyPh
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8207$1bEyPh
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8208$1bEyPh
                                                 (cons
                                                   g$b$8210$1bEyPh
                                                   g$b*$8211$1bEyPh)))))
                                         g$f$8207$1bEyPh)
                                       g$rhs*$8209$1bEyPh))
                                   (g$invalid-fmls-error$7604$1bEyPh
                                     g$stx$8193$1bEyPh
                                     g$lhs*$8208$1bEyPh))))
                              g$ls/false$8201$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$8200$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$8200$1bEyPh
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8194$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8194$1bEyPh
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8193$1bEyPh))))
   (g$let-values-macro$7606$1bEyPh
     g$let-values-macro$11045$1bEyPh
     (case-lambda
       ((g$stx$8212$1bEyPh)
        (letrec* ((g$rename$8213$1bEyPh
                    (case-lambda
                      ((g$x$8264$1bEyPh g$old*$8265$1bEyPh g$new*$8266$1bEyPh)
                       (begin
                         (if (not (g$id?$7361$1bEyPh g$x$8264$1bEyPh))
                           (g$syntax-violation$7748$1bEyPh
                             '#f
                             '"not an indentifier"
                             g$stx$8212$1bEyPh
                             g$x$8264$1bEyPh)
                           (void))
                         (if (g$bound-id-member?$7368$1bEyPh
                               g$x$8264$1bEyPh
                               g$old*$8265$1bEyPh)
                           (g$syntax-violation$7748$1bEyPh
                             '#f
                             '"duplicate binding"
                             g$stx$8212$1bEyPh
                             g$x$8264$1bEyPh)
                           (void))
                         ((case-lambda
                            ((g$y$8267$1bEyPh)
                             (values
                               g$y$8267$1bEyPh
                               (cons g$x$8264$1bEyPh g$old*$8265$1bEyPh)
                               (cons g$y$8267$1bEyPh g$new*$8266$1bEyPh))))
                          (gensym
                            (g$syntax->datum$7751$1bEyPh g$x$8264$1bEyPh)))))))
                  (g$rename*$8214$1bEyPh
                    (case-lambda
                      ((g$x*$8255$1bEyPh g$old*$8256$1bEyPh g$new*$8257$1bEyPh)
                       (if (null? g$x*$8255$1bEyPh)
                         (values '() g$old*$8256$1bEyPh g$new*$8257$1bEyPh)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8213$1bEyPh
                                (car g$x*$8255$1bEyPh)
                                g$old*$8256$1bEyPh
                                g$new*$8257$1bEyPh)))
                           (case-lambda
                             ((g$x$8258$1bEyPh
                                g$old*$8259$1bEyPh
                                g$new*$8260$1bEyPh)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8214$1bEyPh
                                     (cdr g$x*$8255$1bEyPh)
                                     g$old*$8259$1bEyPh
                                     g$new*$8260$1bEyPh)))
                                (case-lambda
                                  ((g$x*$8261$1bEyPh
                                     g$old*$8262$1bEyPh
                                     g$new*$8263$1bEyPh)
                                   (values
                                     (cons g$x$8258$1bEyPh g$x*$8261$1bEyPh)
                                     g$old*$8262$1bEyPh
                                     g$new*$8263$1bEyPh))))))))))))
          ((case-lambda
             ((g$t$8215$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8216$1bEyPh)
                  (if g$ls/false$8216$1bEyPh
                    (apply
                      (case-lambda
                        ((g$b$8217$1bEyPh g$b*$8218$1bEyPh)
                         (g$cons*$5493$1bEyPh
                           (g$bless$7602$1bEyPh 'let)
                           '()
                           g$b$8217$1bEyPh
                           g$b*$8218$1bEyPh)))
                      g$ls/false$8216$1bEyPh)
                    ((case-lambda
                       ((g$t$8219$1bEyPh)
                        ((case-lambda
                           ((g$ls/false$8220$1bEyPh)
                            (if g$ls/false$8220$1bEyPh
                              (apply
                                (case-lambda
                                  ((g$lhs*$8221$1bEyPh
                                     g$rhs*$8222$1bEyPh
                                     g$b$8223$1bEyPh
                                     g$b*$8224$1bEyPh)
                                   (g$bless$7602$1bEyPh
                                     ((letrec ((g$f$8225$1bEyPh
                                                 (case-lambda
                                                   ((g$lhs*$8226$1bEyPh
                                                      g$rhs*$8227$1bEyPh
                                                      g$old*$8228$1bEyPh
                                                      g$new*$8229$1bEyPh)
                                                    (if (null?
                                                          g$lhs*$8226$1bEyPh)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8228$1bEyPh
                                                               g$new*$8229$1bEyPh)
                                                          (cons
                                                            g$b$8223$1bEyPh
                                                            g$b*$8224$1bEyPh)))
                                                      ((case-lambda
                                                         ((g$t$8230$1bEyPh)
                                                          ((case-lambda
                                                             ((g$ls/false$8231$1bEyPh)
                                                              (if g$ls/false$8231$1bEyPh
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8232$1bEyPh)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8214$1bEyPh
                                                                            g$x*$8232$1bEyPh
                                                                            g$old*$8228$1bEyPh
                                                                            g$new*$8229$1bEyPh)))
                                                                       (case-lambda
                                                                         ((g$y*$8236$1bEyPh
                                                                            g$old*$8237$1bEyPh
                                                                            g$new*$8238$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$new*$8239$1bEyPh
                                                                                g$old*$8240$1bEyPh
                                                                                g$y*$8241$1bEyPh)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8227$1bEyPh))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8241$1bEyPh
                                                                                  (g$f$8225$1bEyPh
                                                                                    (cdr g$lhs*$8226$1bEyPh)
                                                                                    (cdr g$rhs*$8227$1bEyPh)
                                                                                    g$old*$8240$1bEyPh
                                                                                    g$new*$8239$1bEyPh)))))
                                                                           g$new*$8238$1bEyPh
                                                                           g$old*$8237$1bEyPh
                                                                           g$y*$8236$1bEyPh))))))
                                                                  g$ls/false$8231$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$t$8242$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8243$1bEyPh)
                                                                        (if g$ls/false$8243$1bEyPh
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8244$1bEyPh
                                                                                 g$x$8245$1bEyPh)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8213$1bEyPh
                                                                                      g$x$8245$1bEyPh
                                                                                      g$old*$8228$1bEyPh
                                                                                      g$new*$8229$1bEyPh)))
                                                                                 (case-lambda
                                                                                   ((g$y$8246$1bEyPh
                                                                                      g$old*$8247$1bEyPh
                                                                                      g$new*$8248$1bEyPh)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8214$1bEyPh
                                                                                           g$x*$8244$1bEyPh
                                                                                           g$old*$8247$1bEyPh
                                                                                           g$new*$8248$1bEyPh)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8249$1bEyPh
                                                                                           g$old*$8250$1bEyPh
                                                                                           g$new*$8251$1bEyPh)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8227$1bEyPh))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8249$1bEyPh
                                                                                               g$y$8246$1bEyPh)
                                                                                             (g$f$8225$1bEyPh
                                                                                               (cdr g$lhs*$8226$1bEyPh)
                                                                                               (cdr g$rhs*$8227$1bEyPh)
                                                                                               g$old*$8250$1bEyPh
                                                                                               g$new*$8251$1bEyPh)))))))))))
                                                                            g$ls/false$8243$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$t$8252$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8253$1bEyPh)
                                                                                  (if g$ls/false$8253$1bEyPh
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8254$1bEyPh)
                                                                                         (g$syntax-violation$7748$1bEyPh
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8212$1bEyPh
                                                                                           g$others$8254$1bEyPh)))
                                                                                      g$ls/false$8253$1bEyPh)
                                                                                    (g$syntax-violation$7748$1bEyPh
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8252$1bEyPh))))
                                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                                 g$t$8252$1bEyPh
                                                                                 'any))))
                                                                           g$t$8242$1bEyPh))))
                                                                     (g$syntax-dispatch$7639$1bEyPh
                                                                       g$t$8242$1bEyPh
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8230$1bEyPh))))
                                                           (g$syntax-dispatch$7639$1bEyPh
                                                             g$t$8230$1bEyPh
                                                             'each-any))))
                                                       (car g$lhs*$8226$1bEyPh)))))))
                                        g$f$8225$1bEyPh)
                                      g$lhs*$8221$1bEyPh
                                      g$rhs*$8222$1bEyPh
                                      '()
                                      '()))))
                                g$ls/false$8220$1bEyPh)
                              (g$syntax-violation$7748$1bEyPh
                                '#f
                                '"invalid syntax"
                                g$t$8219$1bEyPh))))
                         (g$syntax-dispatch$7639$1bEyPh
                           g$t$8219$1bEyPh
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8215$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$8215$1bEyPh
                 '(_ () any . each-any)))))
           g$stx$8212$1bEyPh)))))
   (g$let*-values-macro$7607$1bEyPh
     g$let*-values-macro$11046$1bEyPh
     (case-lambda
       ((g$stx$8268$1bEyPh)
        (letrec* ((g$check$8269$1bEyPh
                    (case-lambda
                      ((g$x*$8293$1bEyPh)
                       (if (not (null? g$x*$8293$1bEyPh))
                         ((case-lambda
                            ((g$x$8294$1bEyPh)
                             (begin
                               (if (not (g$id?$7361$1bEyPh g$x$8294$1bEyPh))
                                 (g$syntax-violation$7748$1bEyPh
                                   '#f
                                   '"not an identifier"
                                   g$stx$8268$1bEyPh
                                   g$x$8294$1bEyPh)
                                 (void))
                               (g$check$8269$1bEyPh (cdr g$x*$8293$1bEyPh))
                               (if (g$bound-id-member?$7368$1bEyPh
                                     g$x$8294$1bEyPh
                                     (cdr g$x*$8293$1bEyPh))
                                 (g$syntax-violation$7748$1bEyPh
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8268$1bEyPh
                                   g$x$8294$1bEyPh)
                                 (void)))))
                          (car g$x*$8293$1bEyPh))
                         (void))))))
          ((case-lambda
             ((g$t$8270$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8271$1bEyPh)
                  (if g$ls/false$8271$1bEyPh
                    (apply
                      (case-lambda
                        ((g$b$8272$1bEyPh g$b*$8273$1bEyPh)
                         (g$cons*$5493$1bEyPh
                           (g$bless$7602$1bEyPh 'let)
                           '()
                           g$b$8272$1bEyPh
                           g$b*$8273$1bEyPh)))
                      g$ls/false$8271$1bEyPh)
                    ((case-lambda
                       ((g$t$8274$1bEyPh)
                        ((case-lambda
                           ((g$ls/false$8275$1bEyPh)
                            (if g$ls/false$8275$1bEyPh
                              (apply
                                (case-lambda
                                  ((g$lhs*$8276$1bEyPh
                                     g$rhs*$8277$1bEyPh
                                     g$b$8278$1bEyPh
                                     g$b*$8279$1bEyPh)
                                   (g$bless$7602$1bEyPh
                                     ((letrec ((g$f$8280$1bEyPh
                                                 (case-lambda
                                                   ((g$lhs*$8281$1bEyPh
                                                      g$rhs*$8282$1bEyPh)
                                                    (if (null?
                                                          g$lhs*$8281$1bEyPh)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8278$1bEyPh
                                                          g$b*$8279$1bEyPh))
                                                      ((case-lambda
                                                         ((g$t$8283$1bEyPh)
                                                          ((case-lambda
                                                             ((g$ls/false$8284$1bEyPh)
                                                              (if g$ls/false$8284$1bEyPh
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8285$1bEyPh)
                                                                     (begin
                                                                       (g$check$8269$1bEyPh
                                                                         g$x*$8285$1bEyPh)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8282$1bEyPh))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8285$1bEyPh
                                                                           (g$f$8280$1bEyPh
                                                                             (cdr g$lhs*$8281$1bEyPh)
                                                                             (cdr g$rhs*$8282$1bEyPh)))))))
                                                                  g$ls/false$8284$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$t$8286$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8287$1bEyPh)
                                                                        (if g$ls/false$8287$1bEyPh
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8288$1bEyPh
                                                                                 g$x$8289$1bEyPh)
                                                                               (begin
                                                                                 (g$check$8269$1bEyPh
                                                                                   (cons
                                                                                     g$x$8289$1bEyPh
                                                                                     g$x*$8288$1bEyPh))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8282$1bEyPh))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8288$1bEyPh
                                                                                       g$x$8289$1bEyPh)
                                                                                     (g$f$8280$1bEyPh
                                                                                       (cdr g$lhs*$8281$1bEyPh)
                                                                                       (cdr g$rhs*$8282$1bEyPh)))))))
                                                                            g$ls/false$8287$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$t$8290$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8291$1bEyPh)
                                                                                  (if g$ls/false$8291$1bEyPh
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8292$1bEyPh)
                                                                                         (g$syntax-violation$7748$1bEyPh
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8268$1bEyPh
                                                                                           g$others$8292$1bEyPh)))
                                                                                      g$ls/false$8291$1bEyPh)
                                                                                    (g$syntax-violation$7748$1bEyPh
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8290$1bEyPh))))
                                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                                 g$t$8290$1bEyPh
                                                                                 'any))))
                                                                           g$t$8286$1bEyPh))))
                                                                     (g$syntax-dispatch$7639$1bEyPh
                                                                       g$t$8286$1bEyPh
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8283$1bEyPh))))
                                                           (g$syntax-dispatch$7639$1bEyPh
                                                             g$t$8283$1bEyPh
                                                             'each-any))))
                                                       (car g$lhs*$8281$1bEyPh)))))))
                                        g$f$8280$1bEyPh)
                                      g$lhs*$8276$1bEyPh
                                      g$rhs*$8277$1bEyPh))))
                                g$ls/false$8275$1bEyPh)
                              (g$syntax-violation$7748$1bEyPh
                                '#f
                                '"invalid syntax"
                                g$t$8274$1bEyPh))))
                         (g$syntax-dispatch$7639$1bEyPh
                           g$t$8274$1bEyPh
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8270$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$8270$1bEyPh
                 '(_ () any . each-any)))))
           g$stx$8268$1bEyPh)))))
   (g$trace-lambda-macro$7608$1bEyPh
     g$trace-lambda-macro$11047$1bEyPh
     (case-lambda
       ((g$stx$8295$1bEyPh)
        ((case-lambda
           ((g$t$8296$1bEyPh)
            ((case-lambda
               ((g$ls/false$8297$1bEyPh)
                (if g$ls/false$8297$1bEyPh
                  (apply
                    (case-lambda
                      ((g$who$8298$1bEyPh
                         g$fmls$8299$1bEyPh
                         g$b$8300$1bEyPh
                         g$b*$8301$1bEyPh)
                       (if (g$valid-bound-ids?$7366$1bEyPh g$fmls$8299$1bEyPh)
                         (g$bless$7602$1bEyPh
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8298$1bEyPh)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8299$1bEyPh
                                 (cons g$b$8300$1bEyPh g$b*$8301$1bEyPh)))))
                         (g$invalid-fmls-error$7604$1bEyPh
                           g$stx$8295$1bEyPh
                           g$fmls$8299$1bEyPh))))
                    g$ls/false$8297$1bEyPh)
                  ((case-lambda
                     ((g$t$8302$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8303$1bEyPh)
                          (if g$ls/false$8303$1bEyPh
                            (apply
                              (case-lambda
                                ((g$who$8304$1bEyPh
                                   g$fmls$8305$1bEyPh
                                   g$last$8306$1bEyPh
                                   g$b$8307$1bEyPh
                                   g$b*$8308$1bEyPh)
                                 (if (g$valid-bound-ids?$7366$1bEyPh
                                       (cons
                                         g$last$8306$1bEyPh
                                         g$fmls$8305$1bEyPh))
                                   (g$bless$7602$1bEyPh
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8304$1bEyPh)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8305$1bEyPh
                                             g$last$8306$1bEyPh)
                                           (cons
                                             g$b$8307$1bEyPh
                                             g$b*$8308$1bEyPh)))))
                                   (g$invalid-fmls-error$7604$1bEyPh
                                     g$stx$8295$1bEyPh
                                     (append
                                       g$fmls$8305$1bEyPh
                                       g$last$8306$1bEyPh)))))
                              g$ls/false$8303$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$8302$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$8302$1bEyPh
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8296$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8296$1bEyPh
               '(_ any each-any any . each-any)))))
         g$stx$8295$1bEyPh))))
   (g$trace-define-macro$7609$1bEyPh
     g$trace-define-macro$11048$1bEyPh
     (case-lambda
       ((g$stx$8309$1bEyPh)
        ((case-lambda
           ((g$t$8310$1bEyPh)
            ((case-lambda
               ((g$ls/false$8311$1bEyPh)
                (if g$ls/false$8311$1bEyPh
                  (apply
                    (case-lambda
                      ((g$who$8312$1bEyPh
                         g$fmls$8313$1bEyPh
                         g$b$8314$1bEyPh
                         g$b*$8315$1bEyPh)
                       (if (g$valid-bound-ids?$7366$1bEyPh g$fmls$8313$1bEyPh)
                         (g$bless$7602$1bEyPh
                           (list
                             'define
                             g$who$8312$1bEyPh
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8312$1bEyPh)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8313$1bEyPh
                                   (cons g$b$8314$1bEyPh g$b*$8315$1bEyPh))))))
                         (g$invalid-fmls-error$7604$1bEyPh
                           g$stx$8309$1bEyPh
                           g$fmls$8313$1bEyPh))))
                    g$ls/false$8311$1bEyPh)
                  ((case-lambda
                     ((g$t$8316$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8317$1bEyPh)
                          (if g$ls/false$8317$1bEyPh
                            (apply
                              (case-lambda
                                ((g$who$8318$1bEyPh
                                   g$fmls$8319$1bEyPh
                                   g$last$8320$1bEyPh
                                   g$b$8321$1bEyPh
                                   g$b*$8322$1bEyPh)
                                 (if (g$valid-bound-ids?$7366$1bEyPh
                                       (cons
                                         g$last$8320$1bEyPh
                                         g$fmls$8319$1bEyPh))
                                   (g$bless$7602$1bEyPh
                                     (list
                                       'define
                                       g$who$8318$1bEyPh
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8318$1bEyPh)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8319$1bEyPh
                                               g$last$8320$1bEyPh)
                                             (cons
                                               g$b$8321$1bEyPh
                                               g$b*$8322$1bEyPh))))))
                                   (g$invalid-fmls-error$7604$1bEyPh
                                     g$stx$8309$1bEyPh
                                     (append
                                       g$fmls$8319$1bEyPh
                                       g$last$8320$1bEyPh)))))
                              g$ls/false$8317$1bEyPh)
                            ((case-lambda
                               ((g$t$8323$1bEyPh)
                                ((case-lambda
                                   ((g$ls/false$8324$1bEyPh)
                                    (if g$ls/false$8324$1bEyPh
                                      (apply
                                        (case-lambda
                                          ((g$who$8325$1bEyPh
                                             g$expr$8326$1bEyPh)
                                           (if (g$id?$7361$1bEyPh
                                                 g$who$8325$1bEyPh)
                                             (g$bless$7602$1bEyPh
                                               (list
                                                 'define
                                                 g$who$8325$1bEyPh
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8326$1bEyPh))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8325$1bEyPh)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7748$1bEyPh
                                               '#f
                                               '"invalid name"
                                               g$stx$8309$1bEyPh))))
                                        g$ls/false$8324$1bEyPh)
                                      (g$syntax-violation$7748$1bEyPh
                                        '#f
                                        '"invalid syntax"
                                        g$t$8323$1bEyPh))))
                                 (g$syntax-dispatch$7639$1bEyPh
                                   g$t$8323$1bEyPh
                                   '(_ any any)))))
                             g$t$8316$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$8316$1bEyPh
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8310$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8310$1bEyPh
               '(_ (any . each-any) any . each-any)))))
         g$stx$8309$1bEyPh))))
   (g$trace-define-syntax-macro$7610$1bEyPh
     g$trace-define-syntax-macro$11049$1bEyPh
     (case-lambda
       ((g$stx$8327$1bEyPh)
        ((case-lambda
           ((g$t$8328$1bEyPh)
            ((case-lambda
               ((g$ls/false$8329$1bEyPh)
                (if g$ls/false$8329$1bEyPh
                  (apply
                    (case-lambda
                      ((g$who$8330$1bEyPh g$expr$8331$1bEyPh)
                       (if (g$id?$7361$1bEyPh g$who$8330$1bEyPh)
                         (g$bless$7602$1bEyPh
                           (list
                             'define-syntax
                             g$who$8330$1bEyPh
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8330$1bEyPh)
                               g$expr$8331$1bEyPh)))
                         (g$syntax-violation$7748$1bEyPh
                           '#f
                           '"invalid name"
                           g$stx$8327$1bEyPh))))
                    g$ls/false$8329$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8328$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8328$1bEyPh '(_ any any)))))
         g$stx$8327$1bEyPh))))
   (g$trace-let/rec-syntax$7611$1bEyPh
     g$trace-let/rec-syntax$11050$1bEyPh
     (case-lambda
       ((g$who$8332$1bEyPh)
        (case-lambda
          ((g$stx$8333$1bEyPh)
           ((case-lambda
              ((g$t$8334$1bEyPh)
               ((case-lambda
                  ((g$ls/false$8335$1bEyPh)
                   (if g$ls/false$8335$1bEyPh
                     (apply
                       (case-lambda
                         ((g$lhs*$8336$1bEyPh
                            g$rhs*$8337$1bEyPh
                            g$b$8338$1bEyPh
                            g$b*$8339$1bEyPh)
                          (if (g$valid-bound-ids?$7366$1bEyPh
                                g$lhs*$8336$1bEyPh)
                            ((case-lambda
                               ((g$rhs*$8340$1bEyPh)
                                (g$bless$7602$1bEyPh
                                  (cons
                                    g$who$8332$1bEyPh
                                    (cons
                                      (map list
                                           g$lhs*$8336$1bEyPh
                                           g$rhs*$8340$1bEyPh)
                                      (cons
                                        g$b$8338$1bEyPh
                                        g$b*$8339$1bEyPh))))))
                             (map (case-lambda
                                    ((g$lhs$8341$1bEyPh g$rhs$8342$1bEyPh)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8341$1bEyPh)
                                       g$rhs$8342$1bEyPh)))
                                  g$lhs*$8336$1bEyPh
                                  g$rhs*$8337$1bEyPh))
                            (g$invalid-fmls-error$7604$1bEyPh
                              g$stx$8333$1bEyPh
                              g$lhs*$8336$1bEyPh))))
                       g$ls/false$8335$1bEyPh)
                     (g$syntax-violation$7748$1bEyPh
                       '#f
                       '"invalid syntax"
                       g$t$8334$1bEyPh))))
                (g$syntax-dispatch$7639$1bEyPh
                  g$t$8334$1bEyPh
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8333$1bEyPh))))))
   (g$trace-let-syntax-macro$7612$1bEyPh
     g$trace-let-syntax-macro$11051$1bEyPh
     (g$trace-let/rec-syntax$7611$1bEyPh 'let-syntax))
   (g$trace-letrec-syntax-macro$7613$1bEyPh
     g$trace-letrec-syntax-macro$11052$1bEyPh
     (g$trace-let/rec-syntax$7611$1bEyPh 'letrec-syntax))
   (g$guard-macro$7614$1bEyPh
     g$guard-macro$11053$1bEyPh
     (case-lambda
       ((g$x$8343$1bEyPh)
        (letrec* ((g$gen-clauses$8344$1bEyPh
                    (case-lambda
                      ((g$con$8356$1bEyPh
                         g$outerk$8357$1bEyPh
                         g$clause*$8358$1bEyPh)
                       (letrec* ((g$f$8359$1bEyPh
                                   (case-lambda
                                     ((g$x$8387$1bEyPh g$k$8388$1bEyPh)
                                      ((case-lambda
                                         ((g$t$8389$1bEyPh)
                                          ((case-lambda
                                             ((g$ls/false$8390$1bEyPh)
                                              (if g$ls/false$8390$1bEyPh
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8391$1bEyPh
                                                       g$p$8392$1bEyPh)
                                                     ((case-lambda
                                                        ((g$t$8393$1bEyPh)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8393$1bEyPh
                                                               g$e$8391$1bEyPh))
                                                           (list
                                                             'if
                                                             g$t$8393$1bEyPh
                                                             (list
                                                               g$p$8392$1bEyPh
                                                               g$t$8393$1bEyPh)
                                                             g$k$8388$1bEyPh))))
                                                      (gensym))))
                                                  g$ls/false$8390$1bEyPh)
                                                ((case-lambda
                                                   ((g$t$8394$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$8395$1bEyPh)
                                                        (if g$ls/false$8395$1bEyPh
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8396$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$t$8397$1bEyPh)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8397$1bEyPh
                                                                         g$e$8396$1bEyPh))
                                                                     (list
                                                                       'if
                                                                       g$t$8397$1bEyPh
                                                                       g$t$8397$1bEyPh
                                                                       g$k$8388$1bEyPh))))
                                                                (gensym))))
                                                            g$ls/false$8395$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$8398$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$8399$1bEyPh)
                                                                  (if g$ls/false$8399$1bEyPh
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8400$1bEyPh
                                                                           g$v$8401$1bEyPh
                                                                           g$v*$8402$1bEyPh)
                                                                         (list
                                                                           'if
                                                                           g$e$8400$1bEyPh
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8401$1bEyPh
                                                                               g$v*$8402$1bEyPh))
                                                                           g$k$8388$1bEyPh)))
                                                                      g$ls/false$8399$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$t$8403$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8404$1bEyPh)
                                                                            (if g$ls/false$8404$1bEyPh
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7748$1bEyPh
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8387$1bEyPh)))
                                                                                g$ls/false$8404$1bEyPh)
                                                                              (g$syntax-violation$7748$1bEyPh
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8403$1bEyPh))))
                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                           g$t$8403$1bEyPh
                                                                           '_))))
                                                                     g$t$8398$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$8398$1bEyPh
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8394$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$8394$1bEyPh
                                                       '(any)))))
                                                 g$t$8389$1bEyPh))))
                                           (g$syntax-dispatch$7639$1bEyPh
                                             g$t$8389$1bEyPh
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8387$1bEyPh))))
                                 (g$f*$8360$1bEyPh
                                   (case-lambda
                                     ((g$x*$8367$1bEyPh)
                                      ((case-lambda
                                         ((g$t$8368$1bEyPh)
                                          ((case-lambda
                                             ((g$ls/false$8369$1bEyPh)
                                              (if g$ls/false$8369$1bEyPh
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8356$1bEyPh)
                                                       '#t)))
                                                  g$ls/false$8369$1bEyPh)
                                                ((case-lambda
                                                   ((g$t$8370$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$8371$1bEyPh)
                                                        (if g$ls/false$8371$1bEyPh
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8372$1bEyPh
                                                                 g$e*$8373$1bEyPh)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8372$1bEyPh
                                                                     g$e*$8373$1bEyPh))
                                                                 '#f)))
                                                            g$ls/false$8371$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$8374$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$8375$1bEyPh)
                                                                  (if g$ls/false$8375$1bEyPh
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8376$1bEyPh
                                                                           g$cls*$8377$1bEyPh)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8360$1bEyPh
                                                                                g$cls*$8377$1bEyPh)))
                                                                           (case-lambda
                                                                             ((g$e$8380$1bEyPh
                                                                                g$g$8381$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$g$8382$1bEyPh
                                                                                    g$e$8383$1bEyPh)
                                                                                  (values
                                                                                    (g$f$8359$1bEyPh
                                                                                      g$cls$8376$1bEyPh
                                                                                      g$e$8383$1bEyPh)
                                                                                    g$g$8382$1bEyPh)))
                                                                               g$g$8381$1bEyPh
                                                                               g$e$8380$1bEyPh))))))
                                                                      g$ls/false$8375$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$t$8384$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8385$1bEyPh)
                                                                            (if g$ls/false$8385$1bEyPh
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8386$1bEyPh)
                                                                                   (g$syntax-violation$7748$1bEyPh
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8386$1bEyPh)))
                                                                                g$ls/false$8385$1bEyPh)
                                                                              (g$syntax-violation$7748$1bEyPh
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8384$1bEyPh))))
                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                           g$t$8384$1bEyPh
                                                                           'any))))
                                                                     g$t$8374$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$8374$1bEyPh
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8370$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$8370$1bEyPh
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8368$1bEyPh))))
                                           (g$syntax-dispatch$7639$1bEyPh
                                             g$t$8368$1bEyPh
                                             '()))))
                                       g$x*$8367$1bEyPh)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8360$1bEyPh g$clause*$8358$1bEyPh)))
                           (case-lambda
                             ((g$code$8363$1bEyPh g$raisek$8364$1bEyPh)
                              ((case-lambda
                                 ((g$raisek$8365$1bEyPh g$code$8366$1bEyPh)
                                  (if g$raisek$8365$1bEyPh
                                    (list
                                      g$outerk$8357$1bEyPh
                                      g$code$8366$1bEyPh)
                                    g$code$8366$1bEyPh)))
                               g$raisek$8364$1bEyPh
                               g$code$8363$1bEyPh)))))))))
          ((case-lambda
             ((g$t$8345$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8346$1bEyPh)
                  (if (if g$ls/false$8346$1bEyPh
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8347$1bEyPh
                                 g$clause*$8348$1bEyPh
                                 g$b$8349$1bEyPh
                                 g$b*$8350$1bEyPh)
                               (g$id?$7361$1bEyPh g$con$8347$1bEyPh)))
                            g$ls/false$8346$1bEyPh))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8351$1bEyPh
                           g$clause*$8352$1bEyPh
                           g$b$8353$1bEyPh
                           g$b*$8354$1bEyPh)
                         ((case-lambda
                            ((g$outerk$8355$1bEyPh)
                             (g$bless$7602$1bEyPh
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8355$1bEyPh)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8351$1bEyPh)
                                           (g$gen-clauses$8344$1bEyPh
                                             g$con$8351$1bEyPh
                                             g$outerk$8355$1bEyPh
                                             g$clause*$8352$1bEyPh))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8353$1bEyPh
                                                 g$b*$8354$1bEyPh))))))))))))
                          (gensym))))
                      g$ls/false$8346$1bEyPh)
                    (g$syntax-violation$7748$1bEyPh
                      '#f
                      '"invalid syntax"
                      g$t$8345$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$8345$1bEyPh
                 '(_ (any . each-any) any . each-any)))))
           g$x$8343$1bEyPh)))))
   (g$define-enumeration-macro$7615$1bEyPh
     g$define-enumeration-macro$11054$1bEyPh
     (case-lambda
       ((g$stx$8405$1bEyPh)
        (letrec* ((g$set?$8406$1bEyPh
                    (case-lambda
                      ((g$x$8419$1bEyPh)
                       ((case-lambda
                          ((g$t$8420$1bEyPh)
                           (if g$t$8420$1bEyPh
                             g$t$8420$1bEyPh
                             (begin
                               '#f
                               (if (not (memq
                                          (car g$x$8419$1bEyPh)
                                          (cdr g$x$8419$1bEyPh)))
                                 (begin
                                   '#f
                                   (g$set?$8406$1bEyPh (cdr g$x$8419$1bEyPh)))
                                 '#f)))))
                        (null? g$x$8419$1bEyPh)))))
                  (g$remove-dups$8407$1bEyPh
                    (case-lambda
                      ((g$ls$8418$1bEyPh)
                       (if (null? g$ls$8418$1bEyPh)
                         '()
                         (cons
                           (car g$ls$8418$1bEyPh)
                           (g$remove-dups$8407$1bEyPh
                             (g$remq$5498$1bEyPh
                               (car g$ls$8418$1bEyPh)
                               (cdr g$ls$8418$1bEyPh)))))))))
          ((case-lambda
             ((g$t$8408$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8409$1bEyPh)
                  (if (if g$ls/false$8409$1bEyPh
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8410$1bEyPh
                                 g$id*$8411$1bEyPh
                                 g$maker$8412$1bEyPh)
                               (if (g$id?$7361$1bEyPh g$name$8410$1bEyPh)
                                 (if (g$id?$7361$1bEyPh g$maker$8412$1bEyPh)
                                   (begin
                                     '#f
                                     (g$for-all$5491$1bEyPh
                                       g$id?$7361$1bEyPh
                                       g$id*$8411$1bEyPh))
                                   '#f)
                                 '#f)))
                            g$ls/false$8409$1bEyPh))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8413$1bEyPh
                           g$id*$8414$1bEyPh
                           g$maker$8415$1bEyPh)
                         ((case-lambda
                            ((g$name*$8416$1bEyPh g$mk$8417$1bEyPh)
                             (g$bless$7602$1bEyPh
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8417$1bEyPh
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8416$1bEyPh))))
                                 (list
                                   'define-syntax
                                   g$name$8413$1bEyPh
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8416$1bEyPh))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8413$1bEyPh)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8415$1bEyPh
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8415$1bEyPh)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8416$1bEyPh))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8415$1bEyPh)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8417$1bEyPh
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8407$1bEyPh
                            (g$syntax->datum$7751$1bEyPh g$id*$8414$1bEyPh))
                          (gensym))))
                      g$ls/false$8409$1bEyPh)
                    (g$syntax-violation$7748$1bEyPh
                      '#f
                      '"invalid syntax"
                      g$t$8408$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$8408$1bEyPh
                 '(_ any each-any any)))))
           g$stx$8405$1bEyPh)))))
   (g$time-macro$7616$1bEyPh
     g$time-macro$11055$1bEyPh
     (case-lambda
       ((g$stx$8421$1bEyPh)
        ((case-lambda
           ((g$t$8422$1bEyPh)
            ((case-lambda
               ((g$ls/false$8423$1bEyPh)
                (if g$ls/false$8423$1bEyPh
                  (apply
                    (case-lambda
                      ((g$expr$8424$1bEyPh)
                       ((case-lambda
                          ((g$str$8425$1bEyPh)
                           (g$bless$7602$1bEyPh
                             (list
                               'time-it
                               g$str$8425$1bEyPh
                               (list 'lambda '() g$expr$8424$1bEyPh)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6340$1bEyPh)))
                          (case-lambda
                            ((g$p$8428$1bEyPh g$e$8429$1bEyPh)
                             ((case-lambda
                                ((g$e$8430$1bEyPh g$p$8431$1bEyPh)
                                 (begin
                                   (write
                                     (g$syntax->datum$7751$1bEyPh
                                       g$expr$8424$1bEyPh)
                                     g$p$8431$1bEyPh)
                                   (g$e$8430$1bEyPh))))
                              g$e$8429$1bEyPh
                              g$p$8428$1bEyPh)))))))
                    g$ls/false$8423$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8422$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8422$1bEyPh '(_ any)))))
         g$stx$8421$1bEyPh))))
   (g$delay-macro$7617$1bEyPh
     g$delay-macro$11056$1bEyPh
     (case-lambda
       ((g$stx$8432$1bEyPh)
        ((case-lambda
           ((g$t$8433$1bEyPh)
            ((case-lambda
               ((g$ls/false$8434$1bEyPh)
                (if g$ls/false$8434$1bEyPh
                  (apply
                    (case-lambda
                      ((g$expr$8435$1bEyPh)
                       (g$bless$7602$1bEyPh
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8435$1bEyPh)))))
                    g$ls/false$8434$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8433$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8433$1bEyPh '(_ any)))))
         g$stx$8432$1bEyPh))))
   (g$assert-macro$7618$1bEyPh
     g$assert-macro$11057$1bEyPh
     (case-lambda
       ((g$stx$8436$1bEyPh)
        ((case-lambda
           ((g$t$8437$1bEyPh)
            ((case-lambda
               ((g$ls/false$8438$1bEyPh)
                (if g$ls/false$8438$1bEyPh
                  (apply
                    (case-lambda
                      ((g$expr$8439$1bEyPh)
                       ((case-lambda
                          ((g$pos$8440$1bEyPh)
                           (g$bless$7602$1bEyPh
                             (list
                               'unless
                               g$expr$8439$1bEyPh
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8439$1bEyPh)
                                 (list 'quote g$pos$8440$1bEyPh))))))
                        ((case-lambda
                           ((g$t$8441$1bEyPh)
                            (if g$t$8441$1bEyPh
                              g$t$8441$1bEyPh
                              (begin
                                '#f
                                (g$expression-position$7743$1bEyPh
                                  g$expr$8439$1bEyPh)))))
                         (g$expression-position$7743$1bEyPh
                           g$stx$8436$1bEyPh)))))
                    g$ls/false$8438$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8437$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8437$1bEyPh '(_ any)))))
         g$stx$8436$1bEyPh))))
   (g$endianness-macro$7619$1bEyPh
     g$endianness-macro$11058$1bEyPh
     (case-lambda
       ((g$stx$8442$1bEyPh)
        ((case-lambda
           ((g$t$8443$1bEyPh)
            ((case-lambda
               ((g$ls/false$8444$1bEyPh)
                (if g$ls/false$8444$1bEyPh
                  (apply
                    (case-lambda
                      ((g$e$8445$1bEyPh)
                       ((case-lambda
                          ((g$t$8446$1bEyPh)
                           (if (memv g$t$8446$1bEyPh '(little))
                             (g$bless$7602$1bEyPh ''little)
                             (if (memv g$t$8446$1bEyPh '(big))
                               (g$bless$7602$1bEyPh ''big)
                               (g$syntax-violation$7748$1bEyPh
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8442$1bEyPh)))))
                        (g$syntax->datum$7751$1bEyPh g$e$8445$1bEyPh))))
                    g$ls/false$8444$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8443$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8443$1bEyPh '(_ any)))))
         g$stx$8442$1bEyPh))))
   (g$identifier-syntax-macro$7620$1bEyPh
     g$identifier-syntax-macro$11059$1bEyPh
     (case-lambda
       ((g$stx$8447$1bEyPh)
        ((case-lambda
           ((g$t$8448$1bEyPh)
            ((case-lambda
               ((g$ls/false$8449$1bEyPh)
                (if g$ls/false$8449$1bEyPh
                  (apply
                    (case-lambda
                      ((g$expr$8450$1bEyPh)
                       (g$bless$7602$1bEyPh
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8450$1bEyPh))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8450$1bEyPh)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8449$1bEyPh)
                  ((case-lambda
                     ((g$t$8451$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8452$1bEyPh)
                          (if (if g$ls/false$8452$1bEyPh
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8453$1bEyPh
                                         g$expr1$8454$1bEyPh
                                         g$id2$8455$1bEyPh
                                         g$expr2$8456$1bEyPh
                                         g$expr3$8457$1bEyPh)
                                       (if (g$id?$7361$1bEyPh g$id1$8453$1bEyPh)
                                         (if (g$id?$7361$1bEyPh
                                               g$id2$8455$1bEyPh)
                                           (begin
                                             '#f
                                             (g$id?$7361$1bEyPh
                                               g$expr2$8456$1bEyPh))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8452$1bEyPh))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8458$1bEyPh
                                   g$expr1$8459$1bEyPh
                                   g$id2$8460$1bEyPh
                                   g$expr2$8461$1bEyPh
                                   g$expr3$8462$1bEyPh)
                                 (g$bless$7602$1bEyPh
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8459$1bEyPh))
                                         (list
                                           (list 'set! 'id g$expr2$8461$1bEyPh)
                                           (list 'syntax g$expr3$8462$1bEyPh))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8459$1bEyPh
                                               '(e* ...))))))))))
                              g$ls/false$8452$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$8451$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$8451$1bEyPh
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8448$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8448$1bEyPh '(_ any)))))
         g$stx$8447$1bEyPh))))
   (g$do-macro$7621$1bEyPh
     g$do-macro$11060$1bEyPh
     (case-lambda
       ((g$stx$8463$1bEyPh)
        (letrec* ((g$bind$8464$1bEyPh
                    (case-lambda
                      ((g$x$8476$1bEyPh)
                       ((case-lambda
                          ((g$t$8477$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$8478$1bEyPh)
                               (if g$ls/false$8478$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$x$8479$1bEyPh g$init$8480$1bEyPh)
                                      (list
                                        g$x$8479$1bEyPh
                                        g$init$8480$1bEyPh
                                        g$x$8479$1bEyPh)))
                                   g$ls/false$8478$1bEyPh)
                                 ((case-lambda
                                    ((g$t$8481$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$8482$1bEyPh)
                                         (if g$ls/false$8482$1bEyPh
                                           (apply
                                             (case-lambda
                                               ((g$x$8483$1bEyPh
                                                  g$init$8484$1bEyPh
                                                  g$step$8485$1bEyPh)
                                                (list
                                                  g$x$8483$1bEyPh
                                                  g$init$8484$1bEyPh
                                                  g$step$8485$1bEyPh)))
                                             g$ls/false$8482$1bEyPh)
                                           ((case-lambda
                                              ((g$t$8486$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$8487$1bEyPh)
                                                   (if g$ls/false$8487$1bEyPh
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7748$1bEyPh
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8463$1bEyPh)))
                                                       g$ls/false$8487$1bEyPh)
                                                     (g$syntax-violation$7748$1bEyPh
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8486$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$8486$1bEyPh
                                                  '_))))
                                            g$t$8481$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$8481$1bEyPh
                                        '(any any any)))))
                                  g$t$8477$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$8477$1bEyPh
                              '(any any)))))
                        g$x$8476$1bEyPh)))))
          ((case-lambda
             ((g$t$8465$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8466$1bEyPh)
                  (if g$ls/false$8466$1bEyPh
                    (apply
                      (case-lambda
                        ((g$binding*$8467$1bEyPh
                           g$test$8468$1bEyPh
                           g$expr*$8469$1bEyPh
                           g$command*$8470$1bEyPh)
                         ((case-lambda
                            ((g$t$8471$1bEyPh)
                             ((case-lambda
                                ((g$ls/false$8472$1bEyPh)
                                 (if g$ls/false$8472$1bEyPh
                                   (apply
                                     (case-lambda
                                       ((g$x*$8473$1bEyPh
                                          g$init*$8474$1bEyPh
                                          g$step*$8475$1bEyPh)
                                        (if (g$valid-bound-ids?$7366$1bEyPh
                                              g$x*$8473$1bEyPh)
                                          (g$bless$7602$1bEyPh
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8473$1bEyPh
                                                    (list
                                                      'if
                                                      g$test$8468$1bEyPh
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8469$1bEyPh))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8470$1bEyPh
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8475$1bEyPh))))))))
                                              (cons 'loop g$init*$8474$1bEyPh)))
                                          (g$syntax-violation$7748$1bEyPh
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8463$1bEyPh))))
                                     g$ls/false$8472$1bEyPh)
                                   (g$syntax-violation$7748$1bEyPh
                                     '#f
                                     '"invalid syntax"
                                     g$t$8471$1bEyPh))))
                              (g$syntax-dispatch$7639$1bEyPh
                                g$t$8471$1bEyPh
                                '#(each (any any any))))))
                          (map g$bind$8464$1bEyPh g$binding*$8467$1bEyPh))))
                      g$ls/false$8466$1bEyPh)
                    (g$syntax-violation$7748$1bEyPh
                      '#f
                      '"invalid syntax"
                      g$t$8465$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$8465$1bEyPh
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8463$1bEyPh)))))
   (g$let*-macro$7622$1bEyPh
     g$let*-macro$11061$1bEyPh
     (case-lambda
       ((g$stx$8488$1bEyPh)
        ((case-lambda
           ((g$t$8489$1bEyPh)
            ((case-lambda
               ((g$ls/false$8490$1bEyPh)
                (if (if g$ls/false$8490$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8491$1bEyPh
                               g$rhs*$8492$1bEyPh
                               g$b$8493$1bEyPh
                               g$b*$8494$1bEyPh)
                             (g$for-all$5491$1bEyPh
                               g$id?$7361$1bEyPh
                               g$lhs*$8491$1bEyPh)))
                          g$ls/false$8490$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8495$1bEyPh
                         g$rhs*$8496$1bEyPh
                         g$b$8497$1bEyPh
                         g$b*$8498$1bEyPh)
                       (g$bless$7602$1bEyPh
                         ((letrec ((g$f$8499$1bEyPh
                                     (case-lambda
                                       ((g$x*$8500$1bEyPh)
                                        (if (null? g$x*$8500$1bEyPh)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8497$1bEyPh
                                                g$b*$8498$1bEyPh)))
                                          (list
                                            'let
                                            (list (car g$x*$8500$1bEyPh))
                                            (g$f$8499$1bEyPh
                                              (cdr g$x*$8500$1bEyPh))))))))
                            g$f$8499$1bEyPh)
                          (map list g$lhs*$8495$1bEyPh g$rhs*$8496$1bEyPh)))))
                    g$ls/false$8490$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8489$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8489$1bEyPh
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8488$1bEyPh))))
   (g$or-macro$7623$1bEyPh
     g$or-macro$11062$1bEyPh
     (case-lambda
       ((g$stx$8501$1bEyPh)
        ((case-lambda
           ((g$t$8502$1bEyPh)
            ((case-lambda
               ((g$ls/false$8503$1bEyPh)
                (if g$ls/false$8503$1bEyPh
                  (apply (case-lambda (() '#f)) g$ls/false$8503$1bEyPh)
                  ((case-lambda
                     ((g$t$8504$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8505$1bEyPh)
                          (if g$ls/false$8505$1bEyPh
                            (apply
                              (case-lambda
                                ((g$e$8506$1bEyPh g$e*$8507$1bEyPh)
                                 (g$bless$7602$1bEyPh
                                   ((letrec ((g$f$8508$1bEyPh
                                               (case-lambda
                                                 ((g$e$8509$1bEyPh
                                                    g$e*$8510$1bEyPh)
                                                  (if (null? g$e*$8510$1bEyPh)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8509$1bEyPh)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8509$1bEyPh))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8508$1bEyPh
                                                          (car g$e*$8510$1bEyPh)
                                                          (cdr g$e*$8510$1bEyPh)))))))))
                                      g$f$8508$1bEyPh)
                                    g$e$8506$1bEyPh
                                    g$e*$8507$1bEyPh))))
                              g$ls/false$8505$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$8504$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$8504$1bEyPh
                         '(_ any . each-any)))))
                   g$t$8502$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8502$1bEyPh '(_)))))
         g$stx$8501$1bEyPh))))
   (g$and-macro$7624$1bEyPh
     g$and-macro$11063$1bEyPh
     (case-lambda
       ((g$stx$8511$1bEyPh)
        ((case-lambda
           ((g$t$8512$1bEyPh)
            ((case-lambda
               ((g$ls/false$8513$1bEyPh)
                (if g$ls/false$8513$1bEyPh
                  (apply (case-lambda (() '#t)) g$ls/false$8513$1bEyPh)
                  ((case-lambda
                     ((g$t$8514$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$8515$1bEyPh)
                          (if g$ls/false$8515$1bEyPh
                            (apply
                              (case-lambda
                                ((g$e$8516$1bEyPh g$e*$8517$1bEyPh)
                                 (g$bless$7602$1bEyPh
                                   ((letrec ((g$f$8518$1bEyPh
                                               (case-lambda
                                                 ((g$e$8519$1bEyPh
                                                    g$e*$8520$1bEyPh)
                                                  (if (null? g$e*$8520$1bEyPh)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8519$1bEyPh)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8519$1bEyPh
                                                        (cons
                                                          (g$f$8518$1bEyPh
                                                            (car g$e*$8520$1bEyPh)
                                                            (cdr g$e*$8520$1bEyPh))
                                                          '(#f)))))))))
                                      g$f$8518$1bEyPh)
                                    g$e$8516$1bEyPh
                                    g$e*$8517$1bEyPh))))
                              g$ls/false$8515$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$8514$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$8514$1bEyPh
                         '(_ any . each-any)))))
                   g$t$8512$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8512$1bEyPh '(_)))))
         g$stx$8511$1bEyPh))))
   (g$cond-macro$7625$1bEyPh
     g$cond-macro$11064$1bEyPh
     (case-lambda
       ((g$stx$8521$1bEyPh)
        ((case-lambda
           ((g$t$8522$1bEyPh)
            ((case-lambda
               ((g$ls/false$8523$1bEyPh)
                (if g$ls/false$8523$1bEyPh
                  (apply
                    (case-lambda
                      ((g$cls$8524$1bEyPh g$cls*$8525$1bEyPh)
                       (g$bless$7602$1bEyPh
                         ((letrec ((g$f$8526$1bEyPh
                                     (case-lambda
                                       ((g$cls$8527$1bEyPh g$cls*$8528$1bEyPh)
                                        (if (null? g$cls*$8528$1bEyPh)
                                          ((case-lambda
                                             ((g$t$8529$1bEyPh)
                                              ((case-lambda
                                                 ((g$ls/false$8530$1bEyPh)
                                                  (if g$ls/false$8530$1bEyPh
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8531$1bEyPh
                                                           g$e*$8532$1bEyPh)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8531$1bEyPh
                                                             g$e*$8532$1bEyPh))))
                                                      g$ls/false$8530$1bEyPh)
                                                    ((case-lambda
                                                       ((g$t$8533$1bEyPh)
                                                        ((case-lambda
                                                           ((g$ls/false$8534$1bEyPh)
                                                            (if g$ls/false$8534$1bEyPh
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8535$1bEyPh
                                                                     g$p$8536$1bEyPh)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8535$1bEyPh))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8536$1bEyPh
                                                                         '(t))))))
                                                                g$ls/false$8534$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$t$8537$1bEyPh)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8538$1bEyPh)
                                                                      (if g$ls/false$8538$1bEyPh
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8539$1bEyPh)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8539$1bEyPh
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8538$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$t$8540$1bEyPh)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8541$1bEyPh)
                                                                                (if g$ls/false$8541$1bEyPh
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8542$1bEyPh
                                                                                         g$e*$8543$1bEyPh)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8542$1bEyPh
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8543$1bEyPh))))
                                                                                    g$ls/false$8541$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$t$8544$1bEyPh)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8545$1bEyPh)
                                                                                          (if g$ls/false$8545$1bEyPh
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7748$1bEyPh
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8521$1bEyPh)))
                                                                                              g$ls/false$8545$1bEyPh)
                                                                                            (g$syntax-violation$7748$1bEyPh
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8544$1bEyPh))))
                                                                                       (g$syntax-dispatch$7639$1bEyPh
                                                                                         g$t$8544$1bEyPh
                                                                                         '_))))
                                                                                   g$t$8540$1bEyPh))))
                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                               g$t$8540$1bEyPh
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8537$1bEyPh))))
                                                                   (g$syntax-dispatch$7639$1bEyPh
                                                                     g$t$8537$1bEyPh
                                                                     '(any)))))
                                                               g$t$8533$1bEyPh))))
                                                         (g$syntax-dispatch$7639$1bEyPh
                                                           g$t$8533$1bEyPh
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8529$1bEyPh))))
                                               (g$syntax-dispatch$7639$1bEyPh
                                                 g$t$8529$1bEyPh
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8527$1bEyPh)
                                          ((case-lambda
                                             ((g$t$8546$1bEyPh)
                                              ((case-lambda
                                                 ((g$ls/false$8547$1bEyPh)
                                                  (if g$ls/false$8547$1bEyPh
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8548$1bEyPh
                                                           g$e*$8549$1bEyPh)
                                                         (g$syntax-violation$7748$1bEyPh
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8521$1bEyPh)))
                                                      g$ls/false$8547$1bEyPh)
                                                    ((case-lambda
                                                       ((g$t$8550$1bEyPh)
                                                        ((case-lambda
                                                           ((g$ls/false$8551$1bEyPh)
                                                            (if g$ls/false$8551$1bEyPh
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8552$1bEyPh
                                                                     g$p$8553$1bEyPh)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8552$1bEyPh))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8553$1bEyPh
                                                                         '(t))
                                                                       (g$f$8526$1bEyPh
                                                                         (car g$cls*$8528$1bEyPh)
                                                                         (cdr g$cls*$8528$1bEyPh))))))
                                                                g$ls/false$8551$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$t$8554$1bEyPh)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8555$1bEyPh)
                                                                      (if g$ls/false$8555$1bEyPh
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8556$1bEyPh)
                                                                             (list
                                                                               'or
                                                                               g$e$8556$1bEyPh
                                                                               (g$f$8526$1bEyPh
                                                                                 (car g$cls*$8528$1bEyPh)
                                                                                 (cdr g$cls*$8528$1bEyPh)))))
                                                                          g$ls/false$8555$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$t$8557$1bEyPh)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8558$1bEyPh)
                                                                                (if g$ls/false$8558$1bEyPh
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8559$1bEyPh
                                                                                         g$e*$8560$1bEyPh)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8559$1bEyPh
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8560$1bEyPh)
                                                                                         (g$f$8526$1bEyPh
                                                                                           (car g$cls*$8528$1bEyPh)
                                                                                           (cdr g$cls*$8528$1bEyPh)))))
                                                                                    g$ls/false$8558$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$t$8561$1bEyPh)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8562$1bEyPh)
                                                                                          (if g$ls/false$8562$1bEyPh
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7748$1bEyPh
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8521$1bEyPh)))
                                                                                              g$ls/false$8562$1bEyPh)
                                                                                            (g$syntax-violation$7748$1bEyPh
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8561$1bEyPh))))
                                                                                       (g$syntax-dispatch$7639$1bEyPh
                                                                                         g$t$8561$1bEyPh
                                                                                         '_))))
                                                                                   g$t$8557$1bEyPh))))
                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                               g$t$8557$1bEyPh
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8554$1bEyPh))))
                                                                   (g$syntax-dispatch$7639$1bEyPh
                                                                     g$t$8554$1bEyPh
                                                                     '(any)))))
                                                               g$t$8550$1bEyPh))))
                                                         (g$syntax-dispatch$7639$1bEyPh
                                                           g$t$8550$1bEyPh
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8546$1bEyPh))))
                                               (g$syntax-dispatch$7639$1bEyPh
                                                 g$t$8546$1bEyPh
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8527$1bEyPh))))))
                            g$f$8526$1bEyPh)
                          g$cls$8524$1bEyPh
                          g$cls*$8525$1bEyPh))))
                    g$ls/false$8523$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8522$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8522$1bEyPh
               '(_ any . each-any)))))
         g$stx$8521$1bEyPh))))
   (g$do-include$7626$1bEyPh
     g$do-include$11065$1bEyPh
     (case-lambda
       ((g$stx$8563$1bEyPh g$id$8564$1bEyPh g$filename$8565$1bEyPh)
        ((case-lambda
           ((g$filename$8566$1bEyPh)
            (begin
              (if (not (if (string? g$filename$8566$1bEyPh)
                         (begin '#f (g$id?$7361$1bEyPh g$id$8564$1bEyPh))
                         '#f))
                (g$syntax-violation$7748$1bEyPh
                  '#f
                  '"invalid syntax"
                  g$stx$8563$1bEyPh)
                (void))
              (cons
                (g$bless$7602$1bEyPh 'begin)
                (g$with-input-from-file$6374$1bEyPh
                  g$filename$8566$1bEyPh
                  (case-lambda
                    (()
                     ((letrec ((g$f$8567$1bEyPh
                                 (case-lambda
                                   ((g$ls$8568$1bEyPh)
                                    ((case-lambda
                                       ((g$x$8569$1bEyPh)
                                        (if (eof-object? g$x$8569$1bEyPh)
                                          (reverse g$ls$8568$1bEyPh)
                                          (g$f$8567$1bEyPh
                                            (cons
                                              (g$datum->stx$7344$1bEyPh
                                                g$id$8564$1bEyPh
                                                g$x$8569$1bEyPh)
                                              g$ls$8568$1bEyPh)))))
                                     (read-annotated))))))
                        g$f$8567$1bEyPh)
                      '()))))))))
         (g$stx->datum$7372$1bEyPh g$filename$8565$1bEyPh)))))
   (g$include-macro$7627$1bEyPh
     g$include-macro$11066$1bEyPh
     (case-lambda
       ((g$e$8570$1bEyPh)
        ((case-lambda
           ((g$t$8571$1bEyPh)
            ((case-lambda
               ((g$ls/false$8572$1bEyPh)
                (if g$ls/false$8572$1bEyPh
                  (apply
                    (case-lambda
                      ((g$id$8573$1bEyPh g$filename$8574$1bEyPh)
                       (g$do-include$7626$1bEyPh
                         g$e$8570$1bEyPh
                         g$id$8573$1bEyPh
                         g$filename$8574$1bEyPh)))
                    g$ls/false$8572$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8571$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8571$1bEyPh '(any any)))))
         g$e$8570$1bEyPh))))
   (g$include-into-macro$7628$1bEyPh
     g$include-into-macro$11067$1bEyPh
     (case-lambda
       ((g$e$8575$1bEyPh)
        ((case-lambda
           ((g$t$8576$1bEyPh)
            ((case-lambda
               ((g$ls/false$8577$1bEyPh)
                (if g$ls/false$8577$1bEyPh
                  (apply
                    (case-lambda
                      ((g$id$8578$1bEyPh g$filename$8579$1bEyPh)
                       (g$do-include$7626$1bEyPh
                         g$e$8575$1bEyPh
                         g$id$8578$1bEyPh
                         g$filename$8579$1bEyPh)))
                    g$ls/false$8577$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8576$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$8576$1bEyPh '(_ any any)))))
         g$e$8575$1bEyPh))))
   (g$syntax-rules-macro$7629$1bEyPh
     g$syntax-rules-macro$11068$1bEyPh
     (case-lambda
       ((g$e$8580$1bEyPh)
        ((case-lambda
           ((g$t$8581$1bEyPh)
            ((case-lambda
               ((g$ls/false$8582$1bEyPh)
                (if g$ls/false$8582$1bEyPh
                  (apply
                    (case-lambda
                      ((g$lits$8583$1bEyPh
                         g$pat*$8584$1bEyPh
                         g$tmp*$8585$1bEyPh)
                       (begin
                         (g$verify-literals$7642$1bEyPh
                           g$lits$8583$1bEyPh
                           g$e$8580$1bEyPh)
                         (g$bless$7602$1bEyPh
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8583$1bEyPh
                                   (map (case-lambda
                                          ((g$pat$8586$1bEyPh g$tmp$8587$1bEyPh)
                                           ((case-lambda
                                              ((g$t$8588$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$8589$1bEyPh)
                                                   (if g$ls/false$8589$1bEyPh
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8590$1bEyPh)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8590$1bEyPh)
                                                            (list
                                                              'syntax
                                                              g$tmp$8587$1bEyPh))))
                                                       g$ls/false$8589$1bEyPh)
                                                     ((case-lambda
                                                        ((g$t$8591$1bEyPh)
                                                         ((case-lambda
                                                            ((g$ls/false$8592$1bEyPh)
                                                             (if g$ls/false$8592$1bEyPh
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7748$1bEyPh
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8580$1bEyPh
                                                                      g$pat$8586$1bEyPh)))
                                                                 g$ls/false$8592$1bEyPh)
                                                               (g$syntax-violation$7748$1bEyPh
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8591$1bEyPh))))
                                                          (g$syntax-dispatch$7639$1bEyPh
                                                            g$t$8591$1bEyPh
                                                            '_))))
                                                      g$t$8588$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$8588$1bEyPh
                                                  '(_ . any)))))
                                            g$pat$8586$1bEyPh)))
                                        g$pat*$8584$1bEyPh
                                        g$tmp*$8585$1bEyPh)))))))))
                    g$ls/false$8582$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$8581$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$8581$1bEyPh
               '(_ each-any . #(each (any any)))))))
         g$e$8580$1bEyPh))))
   (g$quasiquote-macro$7630$1bEyPh
     g$quasiquote-macro$11069$1bEyPh
     ((case-lambda
        (()
         (letrec* ((g$datum$8593$1bEyPh
                     (case-lambda
                       ((g$x$8724$1bEyPh)
                        (list
                          (g$scheme-stx$7582$1bEyPh 'quote)
                          (g$mkstx$7349$1bEyPh g$x$8724$1bEyPh '() '() '())))))
                   (g$quasicons*$8609$1bEyPh
                     (case-lambda
                       ((g$x$8720$1bEyPh g$y$8721$1bEyPh)
                        ((letrec ((g$f$8722$1bEyPh
                                    (case-lambda
                                      ((g$x$8723$1bEyPh)
                                       (if (null? g$x$8723$1bEyPh)
                                         g$y$8721$1bEyPh
                                         (g$quasicons$8610$1bEyPh
                                           (car g$x$8723$1bEyPh)
                                           (g$f$8722$1bEyPh
                                             (cdr g$x$8723$1bEyPh))))))))
                           g$f$8722$1bEyPh)
                         g$x$8720$1bEyPh))))
                   (g$quasicons$8610$1bEyPh
                     (case-lambda
                       ((g$x$8701$1bEyPh g$y$8702$1bEyPh)
                        ((case-lambda
                           ((g$t$8703$1bEyPh)
                            ((case-lambda
                               ((g$ls/false$8704$1bEyPh)
                                (if g$ls/false$8704$1bEyPh
                                  (apply
                                    (case-lambda
                                      ((g$dy$8705$1bEyPh)
                                       ((case-lambda
                                          ((g$t$8706$1bEyPh)
                                           ((case-lambda
                                              ((g$ls/false$8707$1bEyPh)
                                               (if g$ls/false$8707$1bEyPh
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8708$1bEyPh)
                                                      (list
                                                        (g$scheme-stx$7582$1bEyPh
                                                          'quote)
                                                        (cons
                                                          g$dx$8708$1bEyPh
                                                          g$dy$8705$1bEyPh))))
                                                   g$ls/false$8707$1bEyPh)
                                                 ((case-lambda
                                                    ((g$t$8709$1bEyPh)
                                                     ((case-lambda
                                                        ((g$ls/false$8710$1bEyPh)
                                                         (if g$ls/false$8710$1bEyPh
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8711$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8712$1bEyPh)
                                                                        (if g$ls/false$8712$1bEyPh
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7582$1bEyPh
                                                                                   'list)
                                                                                 g$x$8701$1bEyPh)))
                                                                            g$ls/false$8712$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$t$8713$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8714$1bEyPh)
                                                                                  (if g$ls/false$8714$1bEyPh
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7582$1bEyPh
                                                                                             'cons)
                                                                                           g$x$8701$1bEyPh
                                                                                           g$y$8702$1bEyPh)))
                                                                                      g$ls/false$8714$1bEyPh)
                                                                                    (g$syntax-violation$7748$1bEyPh
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8713$1bEyPh))))
                                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                                 g$t$8713$1bEyPh
                                                                                 '_))))
                                                                           g$t$8711$1bEyPh))))
                                                                     (g$syntax-dispatch$7639$1bEyPh
                                                                       g$t$8711$1bEyPh
                                                                       '()))))
                                                                 g$dy$8705$1bEyPh)))
                                                             g$ls/false$8710$1bEyPh)
                                                           (g$syntax-violation$7748$1bEyPh
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8709$1bEyPh))))
                                                      (g$syntax-dispatch$7639$1bEyPh
                                                        g$t$8709$1bEyPh
                                                        '_))))
                                                  g$t$8706$1bEyPh))))
                                            (g$syntax-dispatch$7639$1bEyPh
                                              g$t$8706$1bEyPh
                                              '(#(scheme-id quote) any)))))
                                        g$x$8701$1bEyPh)))
                                    g$ls/false$8704$1bEyPh)
                                  ((case-lambda
                                     ((g$t$8715$1bEyPh)
                                      ((case-lambda
                                         ((g$ls/false$8716$1bEyPh)
                                          (if g$ls/false$8716$1bEyPh
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8717$1bEyPh)
                                                 (g$cons*$5493$1bEyPh
                                                   (g$scheme-stx$7582$1bEyPh
                                                     'list)
                                                   g$x$8701$1bEyPh
                                                   g$stuff$8717$1bEyPh)))
                                              g$ls/false$8716$1bEyPh)
                                            ((case-lambda
                                               ((g$t$8718$1bEyPh)
                                                ((case-lambda
                                                   ((g$ls/false$8719$1bEyPh)
                                                    (if g$ls/false$8719$1bEyPh
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7582$1bEyPh
                                                               'cons)
                                                             g$x$8701$1bEyPh
                                                             g$y$8702$1bEyPh)))
                                                        g$ls/false$8719$1bEyPh)
                                                      (g$syntax-violation$7748$1bEyPh
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8718$1bEyPh))))
                                                 (g$syntax-dispatch$7639$1bEyPh
                                                   g$t$8718$1bEyPh
                                                   '_))))
                                             g$t$8715$1bEyPh))))
                                       (g$syntax-dispatch$7639$1bEyPh
                                         g$t$8715$1bEyPh
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8703$1bEyPh))))
                             (g$syntax-dispatch$7639$1bEyPh
                               g$t$8703$1bEyPh
                               '(#(scheme-id quote) any)))))
                         g$y$8702$1bEyPh))))
                   (g$quasiappend$8611$1bEyPh
                     (case-lambda
                       ((g$x$8688$1bEyPh g$y$8689$1bEyPh)
                        ((case-lambda
                           ((g$ls$8690$1bEyPh)
                            (if (null? g$ls$8690$1bEyPh)
                              (list (g$scheme-stx$7582$1bEyPh 'quote) '())
                              (if (null? (cdr g$ls$8690$1bEyPh))
                                (car g$ls$8690$1bEyPh)
                                (g$cons*$5493$1bEyPh
                                  (g$scheme-stx$7582$1bEyPh 'append)
                                  g$ls$8690$1bEyPh)))))
                         ((letrec ((g$f$8691$1bEyPh
                                     (case-lambda
                                       ((g$x$8692$1bEyPh)
                                        (if (null? g$x$8692$1bEyPh)
                                          ((case-lambda
                                             ((g$t$8693$1bEyPh)
                                              ((case-lambda
                                                 ((g$ls/false$8694$1bEyPh)
                                                  (if g$ls/false$8694$1bEyPh
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8694$1bEyPh)
                                                    ((case-lambda
                                                       ((g$t$8695$1bEyPh)
                                                        ((case-lambda
                                                           ((g$ls/false$8696$1bEyPh)
                                                            (if g$ls/false$8696$1bEyPh
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8689$1bEyPh)))
                                                                g$ls/false$8696$1bEyPh)
                                                              (g$syntax-violation$7748$1bEyPh
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8695$1bEyPh))))
                                                         (g$syntax-dispatch$7639$1bEyPh
                                                           g$t$8695$1bEyPh
                                                           '_))))
                                                     g$t$8693$1bEyPh))))
                                               (g$syntax-dispatch$7639$1bEyPh
                                                 g$t$8693$1bEyPh
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8689$1bEyPh)
                                          ((case-lambda
                                             ((g$t$8697$1bEyPh)
                                              ((case-lambda
                                                 ((g$ls/false$8698$1bEyPh)
                                                  (if g$ls/false$8698$1bEyPh
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8691$1bEyPh
                                                           (cdr g$x$8692$1bEyPh))))
                                                      g$ls/false$8698$1bEyPh)
                                                    ((case-lambda
                                                       ((g$t$8699$1bEyPh)
                                                        ((case-lambda
                                                           ((g$ls/false$8700$1bEyPh)
                                                            (if g$ls/false$8700$1bEyPh
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8692$1bEyPh)
                                                                     (g$f$8691$1bEyPh
                                                                       (cdr g$x$8692$1bEyPh)))))
                                                                g$ls/false$8700$1bEyPh)
                                                              (g$syntax-violation$7748$1bEyPh
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8699$1bEyPh))))
                                                         (g$syntax-dispatch$7639$1bEyPh
                                                           g$t$8699$1bEyPh
                                                           '_))))
                                                     g$t$8697$1bEyPh))))
                                               (g$syntax-dispatch$7639$1bEyPh
                                                 g$t$8697$1bEyPh
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8692$1bEyPh)))))))
                            g$f$8691$1bEyPh)
                          g$x$8688$1bEyPh)))))
                   (g$quasivector$8612$1bEyPh
                     (case-lambda
                       ((g$x$8663$1bEyPh)
                        ((case-lambda
                           ((g$pat-x$8664$1bEyPh)
                            ((case-lambda
                               ((g$t$8665$1bEyPh)
                                ((case-lambda
                                   ((g$ls/false$8666$1bEyPh)
                                    (if g$ls/false$8666$1bEyPh
                                      (apply
                                        (case-lambda
                                          ((g$x*$8667$1bEyPh)
                                           (list
                                             (g$scheme-stx$7582$1bEyPh 'quote)
                                             (list->vector g$x*$8667$1bEyPh))))
                                        g$ls/false$8666$1bEyPh)
                                      ((case-lambda
                                         ((g$t$8668$1bEyPh)
                                          ((case-lambda
                                             ((g$ls/false$8669$1bEyPh)
                                              (if g$ls/false$8669$1bEyPh
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8670$1bEyPh
                                                                 (case-lambda
                                                                   ((g$x$8671$1bEyPh
                                                                      g$k$8672$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$t$8673$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8674$1bEyPh)
                                                                            (if g$ls/false$8674$1bEyPh
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8675$1bEyPh)
                                                                                   (g$k$8672$1bEyPh
                                                                                     (map (case-lambda
                                                                                            ((g$x$8676$1bEyPh)
                                                                                             (list
                                                                                               (g$scheme-stx$7582$1bEyPh
                                                                                                 'quote)
                                                                                               g$x$8676$1bEyPh)))
                                                                                          g$x*$8675$1bEyPh))))
                                                                                g$ls/false$8674$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$t$8677$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8678$1bEyPh)
                                                                                      (if g$ls/false$8678$1bEyPh
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8679$1bEyPh)
                                                                                             (g$k$8672$1bEyPh
                                                                                               g$x*$8679$1bEyPh)))
                                                                                          g$ls/false$8678$1bEyPh)
                                                                                        ((case-lambda
                                                                                           ((g$t$8680$1bEyPh)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8681$1bEyPh)
                                                                                                (if g$ls/false$8681$1bEyPh
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8682$1bEyPh
                                                                                                         g$y$8683$1bEyPh)
                                                                                                       (g$f$8670$1bEyPh
                                                                                                         g$y$8683$1bEyPh
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8684$1bEyPh)
                                                                                                            (g$k$8672$1bEyPh
                                                                                                              (cons
                                                                                                                g$x$8682$1bEyPh
                                                                                                                g$ls$8684$1bEyPh)))))))
                                                                                                    g$ls/false$8681$1bEyPh)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8685$1bEyPh)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8686$1bEyPh)
                                                                                                          (if g$ls/false$8686$1bEyPh
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7582$1bEyPh
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8664$1bEyPh)))
                                                                                                              g$ls/false$8686$1bEyPh)
                                                                                                            (g$syntax-violation$7748$1bEyPh
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8685$1bEyPh))))
                                                                                                       (g$syntax-dispatch$7639$1bEyPh
                                                                                                         g$t$8685$1bEyPh
                                                                                                         '_))))
                                                                                                   g$t$8680$1bEyPh))))
                                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                                               g$t$8680$1bEyPh
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8677$1bEyPh))))
                                                                                   (g$syntax-dispatch$7639$1bEyPh
                                                                                     g$t$8677$1bEyPh
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8673$1bEyPh))))
                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                           g$t$8673$1bEyPh
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8671$1bEyPh)))))
                                                        g$f$8670$1bEyPh)
                                                      g$x$8663$1bEyPh
                                                      (case-lambda
                                                        ((g$ls$8687$1bEyPh)
                                                         (g$cons*$5493$1bEyPh
                                                           (g$scheme-stx$7582$1bEyPh
                                                             'vector)
                                                           g$ls$8687$1bEyPh))))))
                                                  g$ls/false$8669$1bEyPh)
                                                (g$syntax-violation$7748$1bEyPh
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8668$1bEyPh))))
                                           (g$syntax-dispatch$7639$1bEyPh
                                             g$t$8668$1bEyPh
                                             '_))))
                                       g$t$8665$1bEyPh))))
                                 (g$syntax-dispatch$7639$1bEyPh
                                   g$t$8665$1bEyPh
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8664$1bEyPh)))
                         g$x$8663$1bEyPh))))
                   (g$vquasi$8613$1bEyPh
                     (case-lambda
                       ((g$p$8646$1bEyPh g$lev$8647$1bEyPh)
                        ((case-lambda
                           ((g$t$8648$1bEyPh)
                            ((case-lambda
                               ((g$ls/false$8649$1bEyPh)
                                (if g$ls/false$8649$1bEyPh
                                  (apply
                                    (case-lambda
                                      ((g$p$8650$1bEyPh g$q$8651$1bEyPh)
                                       ((case-lambda
                                          ((g$t$8652$1bEyPh)
                                           ((case-lambda
                                              ((g$ls/false$8653$1bEyPh)
                                               (if g$ls/false$8653$1bEyPh
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8654$1bEyPh)
                                                      (if (= g$lev$8647$1bEyPh
                                                             '0)
                                                        (g$quasicons*$8609$1bEyPh
                                                          g$p$8654$1bEyPh
                                                          (g$vquasi$8613$1bEyPh
                                                            g$q$8651$1bEyPh
                                                            g$lev$8647$1bEyPh))
                                                        (g$quasicons$8610$1bEyPh
                                                          (g$quasicons$8610$1bEyPh
                                                            (g$datum$8593$1bEyPh
                                                              'unquote)
                                                            (g$quasi$8614$1bEyPh
                                                              g$p$8654$1bEyPh
                                                              (- g$lev$8647$1bEyPh
                                                                 '1)))
                                                          (g$vquasi$8613$1bEyPh
                                                            g$q$8651$1bEyPh
                                                            g$lev$8647$1bEyPh)))))
                                                   g$ls/false$8653$1bEyPh)
                                                 ((case-lambda
                                                    ((g$t$8655$1bEyPh)
                                                     ((case-lambda
                                                        ((g$ls/false$8656$1bEyPh)
                                                         (if g$ls/false$8656$1bEyPh
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8657$1bEyPh)
                                                                (if (= g$lev$8647$1bEyPh
                                                                       '0)
                                                                  (g$quasiappend$8611$1bEyPh
                                                                    g$p$8657$1bEyPh
                                                                    (g$vquasi$8613$1bEyPh
                                                                      g$q$8651$1bEyPh
                                                                      g$lev$8647$1bEyPh))
                                                                  (g$quasicons$8610$1bEyPh
                                                                    (g$quasicons$8610$1bEyPh
                                                                      (g$datum$8593$1bEyPh
                                                                        'unquote-splicing)
                                                                      (g$quasi$8614$1bEyPh
                                                                        g$p$8657$1bEyPh
                                                                        (- g$lev$8647$1bEyPh
                                                                           '1)))
                                                                    (g$vquasi$8613$1bEyPh
                                                                      g$q$8651$1bEyPh
                                                                      g$lev$8647$1bEyPh)))))
                                                             g$ls/false$8656$1bEyPh)
                                                           ((case-lambda
                                                              ((g$t$8658$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$ls/false$8659$1bEyPh)
                                                                   (if g$ls/false$8659$1bEyPh
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8660$1bEyPh)
                                                                          (g$quasicons$8610$1bEyPh
                                                                            (g$quasi$8614$1bEyPh
                                                                              g$p$8660$1bEyPh
                                                                              g$lev$8647$1bEyPh)
                                                                            (g$vquasi$8613$1bEyPh
                                                                              g$q$8651$1bEyPh
                                                                              g$lev$8647$1bEyPh))))
                                                                       g$ls/false$8659$1bEyPh)
                                                                     (g$syntax-violation$7748$1bEyPh
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8658$1bEyPh))))
                                                                (g$syntax-dispatch$7639$1bEyPh
                                                                  g$t$8658$1bEyPh
                                                                  'any))))
                                                            g$t$8655$1bEyPh))))
                                                      (g$syntax-dispatch$7639$1bEyPh
                                                        g$t$8655$1bEyPh
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8652$1bEyPh))))
                                            (g$syntax-dispatch$7639$1bEyPh
                                              g$t$8652$1bEyPh
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8650$1bEyPh)))
                                    g$ls/false$8649$1bEyPh)
                                  ((case-lambda
                                     ((g$t$8661$1bEyPh)
                                      ((case-lambda
                                         ((g$ls/false$8662$1bEyPh)
                                          (if g$ls/false$8662$1bEyPh
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7582$1bEyPh
                                                     'quote)
                                                   '())))
                                              g$ls/false$8662$1bEyPh)
                                            (g$syntax-violation$7748$1bEyPh
                                              '#f
                                              '"invalid syntax"
                                              g$t$8661$1bEyPh))))
                                       (g$syntax-dispatch$7639$1bEyPh
                                         g$t$8661$1bEyPh
                                         '()))))
                                   g$t$8648$1bEyPh))))
                             (g$syntax-dispatch$7639$1bEyPh
                               g$t$8648$1bEyPh
                               '(any . any)))))
                         g$p$8646$1bEyPh))))
                   (g$quasi$8614$1bEyPh
                     (case-lambda
                       ((g$p$8619$1bEyPh g$lev$8620$1bEyPh)
                        ((case-lambda
                           ((g$t$8621$1bEyPh)
                            ((case-lambda
                               ((g$ls/false$8622$1bEyPh)
                                (if g$ls/false$8622$1bEyPh
                                  (apply
                                    (case-lambda
                                      ((g$p$8623$1bEyPh)
                                       (if (= g$lev$8620$1bEyPh '0)
                                         g$p$8623$1bEyPh
                                         (g$quasicons$8610$1bEyPh
                                           (g$datum$8593$1bEyPh 'unquote)
                                           (g$quasi$8614$1bEyPh
                                             (list g$p$8623$1bEyPh)
                                             (- g$lev$8620$1bEyPh '1))))))
                                    g$ls/false$8622$1bEyPh)
                                  ((case-lambda
                                     ((g$t$8624$1bEyPh)
                                      ((case-lambda
                                         ((g$ls/false$8625$1bEyPh)
                                          (if g$ls/false$8625$1bEyPh
                                            (apply
                                              (case-lambda
                                                ((g$p$8626$1bEyPh
                                                   g$q$8627$1bEyPh)
                                                 (if (= g$lev$8620$1bEyPh '0)
                                                   (g$quasicons*$8609$1bEyPh
                                                     g$p$8626$1bEyPh
                                                     (g$quasi$8614$1bEyPh
                                                       g$q$8627$1bEyPh
                                                       g$lev$8620$1bEyPh))
                                                   (g$quasicons$8610$1bEyPh
                                                     (g$quasicons$8610$1bEyPh
                                                       (g$datum$8593$1bEyPh
                                                         'unquote)
                                                       (g$quasi$8614$1bEyPh
                                                         g$p$8626$1bEyPh
                                                         (- g$lev$8620$1bEyPh
                                                            '1)))
                                                     (g$quasi$8614$1bEyPh
                                                       g$q$8627$1bEyPh
                                                       g$lev$8620$1bEyPh)))))
                                              g$ls/false$8625$1bEyPh)
                                            ((case-lambda
                                               ((g$t$8628$1bEyPh)
                                                ((case-lambda
                                                   ((g$ls/false$8629$1bEyPh)
                                                    (if g$ls/false$8629$1bEyPh
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8630$1bEyPh
                                                             g$q$8631$1bEyPh)
                                                           (if (= g$lev$8620$1bEyPh
                                                                  '0)
                                                             (g$quasiappend$8611$1bEyPh
                                                               g$p$8630$1bEyPh
                                                               (g$quasi$8614$1bEyPh
                                                                 g$q$8631$1bEyPh
                                                                 g$lev$8620$1bEyPh))
                                                             (g$quasicons$8610$1bEyPh
                                                               (g$quasicons$8610$1bEyPh
                                                                 (g$datum$8593$1bEyPh
                                                                   'unquote-splicing)
                                                                 (g$quasi$8614$1bEyPh
                                                                   g$p$8630$1bEyPh
                                                                   (- g$lev$8620$1bEyPh
                                                                      '1)))
                                                               (g$quasi$8614$1bEyPh
                                                                 g$q$8631$1bEyPh
                                                                 g$lev$8620$1bEyPh)))))
                                                        g$ls/false$8629$1bEyPh)
                                                      ((case-lambda
                                                         ((g$t$8632$1bEyPh)
                                                          ((case-lambda
                                                             ((g$ls/false$8633$1bEyPh)
                                                              (if g$ls/false$8633$1bEyPh
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8634$1bEyPh)
                                                                     (g$quasicons$8610$1bEyPh
                                                                       (g$datum$8593$1bEyPh
                                                                         'quasiquote)
                                                                       (g$quasi$8614$1bEyPh
                                                                         (list
                                                                           g$p$8634$1bEyPh)
                                                                         (+ g$lev$8620$1bEyPh
                                                                            '1)))))
                                                                  g$ls/false$8633$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$t$8635$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8636$1bEyPh)
                                                                        (if g$ls/false$8636$1bEyPh
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8637$1bEyPh
                                                                                 g$q$8638$1bEyPh)
                                                                               (g$quasicons$8610$1bEyPh
                                                                                 (g$quasi$8614$1bEyPh
                                                                                   g$p$8637$1bEyPh
                                                                                   g$lev$8620$1bEyPh)
                                                                                 (g$quasi$8614$1bEyPh
                                                                                   g$q$8638$1bEyPh
                                                                                   g$lev$8620$1bEyPh))))
                                                                            g$ls/false$8636$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$t$8639$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8640$1bEyPh)
                                                                                  (if (if g$ls/false$8640$1bEyPh
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8641$1bEyPh)
                                                                                               (not (g$stx?$7333$1bEyPh
                                                                                                      g$x$8641$1bEyPh))))
                                                                                            g$ls/false$8640$1bEyPh))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8642$1bEyPh)
                                                                                         (g$quasivector$8612$1bEyPh
                                                                                           (g$vquasi$8613$1bEyPh
                                                                                             g$x$8642$1bEyPh
                                                                                             g$lev$8620$1bEyPh))))
                                                                                      g$ls/false$8640$1bEyPh)
                                                                                    ((case-lambda
                                                                                       ((g$t$8643$1bEyPh)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8644$1bEyPh)
                                                                                            (if g$ls/false$8644$1bEyPh
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8645$1bEyPh)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7582$1bEyPh
                                                                                                       'quote)
                                                                                                     g$p$8645$1bEyPh)))
                                                                                                g$ls/false$8644$1bEyPh)
                                                                                              (g$syntax-violation$7748$1bEyPh
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8643$1bEyPh))))
                                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                                           g$t$8643$1bEyPh
                                                                                           'any))))
                                                                                     g$t$8639$1bEyPh))))
                                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                                 g$t$8639$1bEyPh
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8635$1bEyPh))))
                                                                     (g$syntax-dispatch$7639$1bEyPh
                                                                       g$t$8635$1bEyPh
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8632$1bEyPh))))
                                                           (g$syntax-dispatch$7639$1bEyPh
                                                             g$t$8632$1bEyPh
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8628$1bEyPh))))
                                                 (g$syntax-dispatch$7639$1bEyPh
                                                   g$t$8628$1bEyPh
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8624$1bEyPh))))
                                       (g$syntax-dispatch$7639$1bEyPh
                                         g$t$8624$1bEyPh
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8621$1bEyPh))))
                             (g$syntax-dispatch$7639$1bEyPh
                               g$t$8621$1bEyPh
                               '(#(scheme-id unquote) any)))))
                         g$p$8619$1bEyPh)))))
           (case-lambda
             ((g$x$8615$1bEyPh)
              ((case-lambda
                 ((g$t$8616$1bEyPh)
                  ((case-lambda
                     ((g$ls/false$8617$1bEyPh)
                      (if g$ls/false$8617$1bEyPh
                        (apply
                          (case-lambda
                            ((g$e$8618$1bEyPh)
                             (g$quasi$8614$1bEyPh g$e$8618$1bEyPh '0)))
                          g$ls/false$8617$1bEyPh)
                        (g$syntax-violation$7748$1bEyPh
                          '#f
                          '"invalid syntax"
                          g$t$8616$1bEyPh))))
                   (g$syntax-dispatch$7639$1bEyPh g$t$8616$1bEyPh '(_ any)))))
               g$x$8615$1bEyPh))))))))
   (g$quasisyntax-macro$7631$1bEyPh
     g$quasisyntax-macro$11070$1bEyPh
     ((case-lambda
        (()
         (letrec* ((g$quasi$8725$1bEyPh
                     (case-lambda
                       ((g$p$8739$1bEyPh g$lev$8740$1bEyPh)
                        ((case-lambda
                           ((g$t$8741$1bEyPh)
                            ((case-lambda
                               ((g$ls/false$8742$1bEyPh)
                                (if g$ls/false$8742$1bEyPh
                                  (apply
                                    (case-lambda
                                      ((g$p$8743$1bEyPh)
                                       (if (= g$lev$8740$1bEyPh '0)
                                         ((case-lambda
                                            ((g$g$8744$1bEyPh)
                                             (values
                                               (list g$g$8744$1bEyPh)
                                               (list g$p$8743$1bEyPh)
                                               g$g$8744$1bEyPh)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8725$1bEyPh
                                                g$p$8743$1bEyPh
                                                (- g$lev$8740$1bEyPh '1))))
                                           (case-lambda
                                             ((g$lhs*$8748$1bEyPh
                                                g$rhs*$8749$1bEyPh
                                                g$p$8750$1bEyPh)
                                              ((case-lambda
                                                 ((g$p$8751$1bEyPh
                                                    g$rhs*$8752$1bEyPh
                                                    g$lhs*$8753$1bEyPh)
                                                  (values
                                                    g$lhs*$8753$1bEyPh
                                                    g$rhs*$8752$1bEyPh
                                                    (list
                                                      'unsyntax
                                                      g$p$8751$1bEyPh))))
                                               g$p$8750$1bEyPh
                                               g$rhs*$8749$1bEyPh
                                               g$lhs*$8748$1bEyPh)))))))
                                    g$ls/false$8742$1bEyPh)
                                  ((case-lambda
                                     ((g$t$8754$1bEyPh)
                                      ((case-lambda
                                         ((g$ls/false$8755$1bEyPh)
                                          (if (if g$ls/false$8755$1bEyPh
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8740$1bEyPh
                                                          '0)))
                                                    g$ls/false$8755$1bEyPh))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7748$1bEyPh
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8739$1bEyPh)))
                                              g$ls/false$8755$1bEyPh)
                                            ((case-lambda
                                               ((g$t$8756$1bEyPh)
                                                ((case-lambda
                                                   ((g$ls/false$8757$1bEyPh)
                                                    (if g$ls/false$8757$1bEyPh
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8758$1bEyPh
                                                             g$q$8759$1bEyPh)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8725$1bEyPh
                                                                  g$q$8759$1bEyPh
                                                                  g$lev$8740$1bEyPh)))
                                                             (case-lambda
                                                               ((g$lhs*$8763$1bEyPh
                                                                  g$rhs*$8764$1bEyPh
                                                                  g$q$8765$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$q$8766$1bEyPh
                                                                      g$rhs*$8767$1bEyPh
                                                                      g$lhs*$8768$1bEyPh)
                                                                    (if (= g$lev$8740$1bEyPh
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8769$1bEyPh)
                                                                          (values
                                                                            (append
                                                                              g$g*$8769$1bEyPh
                                                                              g$lhs*$8768$1bEyPh)
                                                                            (append
                                                                              g$p*$8758$1bEyPh
                                                                              g$rhs*$8767$1bEyPh)
                                                                            (append
                                                                              g$g*$8769$1bEyPh
                                                                              g$q$8766$1bEyPh))))
                                                                       (map (case-lambda
                                                                              ((g$x$8770$1bEyPh)
                                                                               (gensym)))
                                                                            g$p*$8758$1bEyPh))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8725$1bEyPh
                                                                             g$p*$8758$1bEyPh
                                                                             (- g$lev$8740$1bEyPh
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8774$1bEyPh
                                                                             g$rhs2*$8775$1bEyPh
                                                                             g$p*$8776$1bEyPh)
                                                                           ((case-lambda
                                                                              ((g$p*$8777$1bEyPh
                                                                                 g$rhs2*$8778$1bEyPh
                                                                                 g$lhs2*$8779$1bEyPh)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8779$1bEyPh
                                                                                   g$lhs*$8768$1bEyPh)
                                                                                 (append
                                                                                   g$rhs2*$8778$1bEyPh
                                                                                   g$rhs*$8767$1bEyPh)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8777$1bEyPh)
                                                                                   g$q$8766$1bEyPh))))
                                                                            g$p*$8776$1bEyPh
                                                                            g$rhs2*$8775$1bEyPh
                                                                            g$lhs2*$8774$1bEyPh)))))))
                                                                 g$q$8765$1bEyPh
                                                                 g$rhs*$8764$1bEyPh
                                                                 g$lhs*$8763$1bEyPh))))))
                                                        g$ls/false$8757$1bEyPh)
                                                      ((case-lambda
                                                         ((g$t$8780$1bEyPh)
                                                          ((case-lambda
                                                             ((g$ls/false$8781$1bEyPh)
                                                              (if g$ls/false$8781$1bEyPh
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8782$1bEyPh
                                                                       g$q$8783$1bEyPh)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8725$1bEyPh
                                                                            g$q$8783$1bEyPh
                                                                            g$lev$8740$1bEyPh)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8787$1bEyPh
                                                                            g$rhs*$8788$1bEyPh
                                                                            g$q$8789$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$q$8790$1bEyPh
                                                                                g$rhs*$8791$1bEyPh
                                                                                g$lhs*$8792$1bEyPh)
                                                                              (if (= g$lev$8740$1bEyPh
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8793$1bEyPh)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8794$1bEyPh)
                                                                                                (cons
                                                                                                  g$g$8794$1bEyPh
                                                                                                  '(...))))
                                                                                             g$g*$8793$1bEyPh)
                                                                                        g$lhs*$8792$1bEyPh)
                                                                                      (append
                                                                                        g$p*$8782$1bEyPh
                                                                                        g$rhs*$8791$1bEyPh)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8795$1bEyPh)
                                                                                                  (cons
                                                                                                    g$g$8795$1bEyPh
                                                                                                    '(...))))
                                                                                               g$g*$8793$1bEyPh))
                                                                                        g$q$8790$1bEyPh))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8796$1bEyPh)
                                                                                         (gensym)))
                                                                                      g$p*$8782$1bEyPh))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8725$1bEyPh
                                                                                       g$p*$8782$1bEyPh
                                                                                       (- g$lev$8740$1bEyPh
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8800$1bEyPh
                                                                                       g$rhs2*$8801$1bEyPh
                                                                                       g$p*$8802$1bEyPh)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8803$1bEyPh
                                                                                           g$rhs2*$8804$1bEyPh
                                                                                           g$lhs2*$8805$1bEyPh)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8805$1bEyPh
                                                                                             g$lhs*$8792$1bEyPh)
                                                                                           (append
                                                                                             g$rhs2*$8804$1bEyPh
                                                                                             g$rhs*$8791$1bEyPh)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8803$1bEyPh)
                                                                                             g$q$8790$1bEyPh))))
                                                                                      g$p*$8802$1bEyPh
                                                                                      g$rhs2*$8801$1bEyPh
                                                                                      g$lhs2*$8800$1bEyPh)))))))
                                                                           g$q$8789$1bEyPh
                                                                           g$rhs*$8788$1bEyPh
                                                                           g$lhs*$8787$1bEyPh))))))
                                                                  g$ls/false$8781$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$t$8806$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8807$1bEyPh)
                                                                        (if (if g$ls/false$8807$1bEyPh
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8740$1bEyPh
                                                                                        '0)))
                                                                                  g$ls/false$8807$1bEyPh))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7748$1bEyPh
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8739$1bEyPh)))
                                                                            g$ls/false$8807$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$t$8808$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8809$1bEyPh)
                                                                                  (if g$ls/false$8809$1bEyPh
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8810$1bEyPh)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8725$1bEyPh
                                                                                                g$p$8810$1bEyPh
                                                                                                (+ g$lev$8740$1bEyPh
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8814$1bEyPh
                                                                                                g$rhs*$8815$1bEyPh
                                                                                                g$p$8816$1bEyPh)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8817$1bEyPh
                                                                                                    g$rhs*$8818$1bEyPh
                                                                                                    g$lhs*$8819$1bEyPh)
                                                                                                  (values
                                                                                                    g$lhs*$8819$1bEyPh
                                                                                                    g$rhs*$8818$1bEyPh
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8817$1bEyPh))))
                                                                                               g$p$8816$1bEyPh
                                                                                               g$rhs*$8815$1bEyPh
                                                                                               g$lhs*$8814$1bEyPh))))))
                                                                                      g$ls/false$8809$1bEyPh)
                                                                                    ((case-lambda
                                                                                       ((g$t$8820$1bEyPh)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8821$1bEyPh)
                                                                                            (if g$ls/false$8821$1bEyPh
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8822$1bEyPh
                                                                                                     g$q$8823$1bEyPh)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8725$1bEyPh
                                                                                                          g$p$8822$1bEyPh
                                                                                                          g$lev$8740$1bEyPh)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8830$1bEyPh
                                                                                                          g$rhs*$8831$1bEyPh
                                                                                                          g$p$8832$1bEyPh)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8725$1bEyPh
                                                                                                               g$q$8823$1bEyPh
                                                                                                               g$lev$8740$1bEyPh)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8833$1bEyPh
                                                                                                               g$rhs2*$8834$1bEyPh
                                                                                                               g$q$8835$1bEyPh)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8836$1bEyPh
                                                                                                                   g$rhs2*$8837$1bEyPh
                                                                                                                   g$lhs2*$8838$1bEyPh
                                                                                                                   g$p$8839$1bEyPh
                                                                                                                   g$rhs*$8840$1bEyPh
                                                                                                                   g$lhs*$8841$1bEyPh)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8838$1bEyPh
                                                                                                                     g$lhs*$8841$1bEyPh)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8837$1bEyPh
                                                                                                                     g$rhs*$8840$1bEyPh)
                                                                                                                   (cons
                                                                                                                     g$p$8839$1bEyPh
                                                                                                                     g$q$8836$1bEyPh))))
                                                                                                              g$q$8835$1bEyPh
                                                                                                              g$rhs2*$8834$1bEyPh
                                                                                                              g$lhs2*$8833$1bEyPh
                                                                                                              g$p$8832$1bEyPh
                                                                                                              g$rhs*$8831$1bEyPh
                                                                                                              g$lhs*$8830$1bEyPh)))))))))
                                                                                                g$ls/false$8821$1bEyPh)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8842$1bEyPh)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8843$1bEyPh)
                                                                                                      (if g$ls/false$8843$1bEyPh
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8844$1bEyPh)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8725$1bEyPh
                                                                                                                    g$x*$8844$1bEyPh
                                                                                                                    g$lev$8740$1bEyPh)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8848$1bEyPh
                                                                                                                    g$rhs*$8849$1bEyPh
                                                                                                                    g$x*$8850$1bEyPh)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8851$1bEyPh
                                                                                                                        g$rhs*$8852$1bEyPh
                                                                                                                        g$lhs*$8853$1bEyPh)
                                                                                                                      (values
                                                                                                                        g$lhs*$8853$1bEyPh
                                                                                                                        g$rhs*$8852$1bEyPh
                                                                                                                        (list->vector
                                                                                                                          g$x*$8851$1bEyPh))))
                                                                                                                   g$x*$8850$1bEyPh
                                                                                                                   g$rhs*$8849$1bEyPh
                                                                                                                   g$lhs*$8848$1bEyPh))))))
                                                                                                          g$ls/false$8843$1bEyPh)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8854$1bEyPh)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8855$1bEyPh)
                                                                                                                (if g$ls/false$8855$1bEyPh
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8739$1bEyPh)))
                                                                                                                    g$ls/false$8855$1bEyPh)
                                                                                                                  (g$syntax-violation$7748$1bEyPh
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8854$1bEyPh))))
                                                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                                                               g$t$8854$1bEyPh
                                                                                                               '_))))
                                                                                                         g$t$8842$1bEyPh))))
                                                                                                   (g$syntax-dispatch$7639$1bEyPh
                                                                                                     g$t$8842$1bEyPh
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8820$1bEyPh))))
                                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                                           g$t$8820$1bEyPh
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8808$1bEyPh))))
                                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                                 g$t$8808$1bEyPh
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8806$1bEyPh))))
                                                                     (g$syntax-dispatch$7639$1bEyPh
                                                                       g$t$8806$1bEyPh
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8780$1bEyPh))))
                                                           (g$syntax-dispatch$7639$1bEyPh
                                                             g$t$8780$1bEyPh
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8756$1bEyPh))))
                                                 (g$syntax-dispatch$7639$1bEyPh
                                                   g$t$8756$1bEyPh
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8754$1bEyPh))))
                                       (g$syntax-dispatch$7639$1bEyPh
                                         g$t$8754$1bEyPh
                                         '#(scheme-id unsyntax)))))
                                   g$t$8741$1bEyPh))))
                             (g$syntax-dispatch$7639$1bEyPh
                               g$t$8741$1bEyPh
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8739$1bEyPh)))))
           (case-lambda
             ((g$x$8726$1bEyPh)
              ((case-lambda
                 ((g$t$8727$1bEyPh)
                  ((case-lambda
                     ((g$ls/false$8728$1bEyPh)
                      (if g$ls/false$8728$1bEyPh
                        (apply
                          (case-lambda
                            ((g$e$8729$1bEyPh)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8725$1bEyPh g$e$8729$1bEyPh '0)))
                               (case-lambda
                                 ((g$lhs*$8733$1bEyPh
                                    g$rhs*$8734$1bEyPh
                                    g$v$8735$1bEyPh)
                                  ((case-lambda
                                     ((g$v$8736$1bEyPh
                                        g$rhs*$8737$1bEyPh
                                        g$lhs*$8738$1bEyPh)
                                      (g$bless$7602$1bEyPh
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8737$1bEyPh)
                                          '()
                                          (list
                                            g$lhs*$8738$1bEyPh
                                            (list 'syntax g$v$8736$1bEyPh))))))
                                   g$v$8735$1bEyPh
                                   g$rhs*$8734$1bEyPh
                                   g$lhs*$8733$1bEyPh))))))
                          g$ls/false$8728$1bEyPh)
                        (g$syntax-violation$7748$1bEyPh
                          '#f
                          '"invalid syntax"
                          g$t$8727$1bEyPh))))
                   (g$syntax-dispatch$7639$1bEyPh g$t$8727$1bEyPh '(_ any)))))
               g$x$8726$1bEyPh))))))))
   (g$define-struct-macro$7632$1bEyPh
     g$define-struct-macro$11071$1bEyPh
     (case-lambda
       ((g$stx$8856$1bEyPh)
        (g$syntax-violation$7748$1bEyPh
          '#f
          '"define-struct not supported"
          g$stx$8856$1bEyPh))))
   (g$define-record-type-macro$7633$1bEyPh
     g$define-record-type-macro$11072$1bEyPh
     (case-lambda
       ((g$x$8857$1bEyPh)
        (letrec* ((g$id$8858$1bEyPh
                    (case-lambda
                      ((g$ctxt$9110$1bEyPh . g$str*$9111$1bEyPh)
                       (g$datum->syntax$7750$1bEyPh
                         g$ctxt$9110$1bEyPh
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9112$1bEyPh)
                                     (if (symbol? g$x$9112$1bEyPh)
                                       (symbol->string g$x$9112$1bEyPh)
                                       (if (string? g$x$9112$1bEyPh)
                                         g$x$9112$1bEyPh
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9111$1bEyPh)))))))
                  (g$get-record-name$8859$1bEyPh
                    (case-lambda
                      ((g$spec$9101$1bEyPh)
                       ((case-lambda
                          ((g$t$9102$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$9103$1bEyPh)
                               (if g$ls/false$9103$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$foo$9104$1bEyPh
                                        g$make-foo$9105$1bEyPh
                                        g$foo?$9106$1bEyPh)
                                      g$foo$9104$1bEyPh))
                                   g$ls/false$9103$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9107$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9108$1bEyPh)
                                         (if g$ls/false$9108$1bEyPh
                                           (apply
                                             (case-lambda
                                               ((g$foo$9109$1bEyPh)
                                                g$foo$9109$1bEyPh))
                                             g$ls/false$9108$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$9107$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9107$1bEyPh
                                        'any))))
                                  g$t$9102$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$9102$1bEyPh
                              '(any any any)))))
                        g$spec$9101$1bEyPh))))
                  (g$get-record-constructor-name$8860$1bEyPh
                    (case-lambda
                      ((g$spec$9091$1bEyPh)
                       ((case-lambda
                          ((g$t$9092$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$9093$1bEyPh)
                               (if g$ls/false$9093$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$foo$9094$1bEyPh
                                        g$make-foo$9095$1bEyPh
                                        g$foo?$9096$1bEyPh)
                                      g$make-foo$9095$1bEyPh))
                                   g$ls/false$9093$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9097$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9098$1bEyPh)
                                         (if (if g$ls/false$9098$1bEyPh
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9099$1bEyPh)
                                                      (g$id?$7361$1bEyPh
                                                        g$foo$9099$1bEyPh)))
                                                   g$ls/false$9098$1bEyPh))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9100$1bEyPh)
                                                (g$id$8858$1bEyPh
                                                  g$foo$9100$1bEyPh
                                                  '"make-"
                                                  (g$stx->datum$7372$1bEyPh
                                                    g$foo$9100$1bEyPh))))
                                             g$ls/false$9098$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$9097$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9097$1bEyPh
                                        'any))))
                                  g$t$9092$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$9092$1bEyPh
                              '(any any any)))))
                        g$spec$9091$1bEyPh))))
                  (g$get-record-predicate-name$8861$1bEyPh
                    (case-lambda
                      ((g$spec$9081$1bEyPh)
                       ((case-lambda
                          ((g$t$9082$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$9083$1bEyPh)
                               (if g$ls/false$9083$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$foo$9084$1bEyPh
                                        g$make-foo$9085$1bEyPh
                                        g$foo?$9086$1bEyPh)
                                      g$foo?$9086$1bEyPh))
                                   g$ls/false$9083$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9087$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9088$1bEyPh)
                                         (if (if g$ls/false$9088$1bEyPh
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9089$1bEyPh)
                                                      (g$id?$7361$1bEyPh
                                                        g$foo$9089$1bEyPh)))
                                                   g$ls/false$9088$1bEyPh))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9090$1bEyPh)
                                                (g$id$8858$1bEyPh
                                                  g$foo$9090$1bEyPh
                                                  (g$stx->datum$7372$1bEyPh
                                                    g$foo$9090$1bEyPh)
                                                  '"?")))
                                             g$ls/false$9088$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$9087$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9087$1bEyPh
                                        'any))))
                                  g$t$9082$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$9082$1bEyPh
                              '(any any any)))))
                        g$spec$9081$1bEyPh))))
                  (g$get-clause$8862$1bEyPh
                    (case-lambda
                      ((g$id$9072$1bEyPh g$ls$9073$1bEyPh)
                       ((case-lambda
                          ((g$t$9074$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$9075$1bEyPh)
                               (if g$ls/false$9075$1bEyPh
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9075$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9076$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9077$1bEyPh)
                                         (if g$ls/false$9077$1bEyPh
                                           (apply
                                             (case-lambda
                                               ((g$x$9078$1bEyPh
                                                  g$rest$9079$1bEyPh
                                                  g$ls$9080$1bEyPh)
                                                (if (g$free-id=?$7365$1bEyPh
                                                      (g$bless$7602$1bEyPh
                                                        g$id$9072$1bEyPh)
                                                      g$x$9078$1bEyPh)
                                                  (cons
                                                    g$x$9078$1bEyPh
                                                    g$rest$9079$1bEyPh)
                                                  (g$get-clause$8862$1bEyPh
                                                    g$id$9072$1bEyPh
                                                    g$ls$9080$1bEyPh))))
                                             g$ls/false$9077$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$9076$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9076$1bEyPh
                                        '((any . any) . any)))))
                                  g$t$9074$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$9074$1bEyPh
                              '()))))
                        g$ls$9073$1bEyPh))))
                  (g$foo-rtd-code$8863$1bEyPh
                    (case-lambda
                      ((g$name$9031$1bEyPh
                         g$clause*$9032$1bEyPh
                         g$parent-rtd-code$9033$1bEyPh)
                       (letrec* ((g$convert-field-spec*$9034$1bEyPh
                                   (case-lambda
                                     ((g$ls$9059$1bEyPh)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$9060$1bEyPh)
                                                ((case-lambda
                                                   ((g$t$9061$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$9062$1bEyPh)
                                                        (if g$ls/false$9062$1bEyPh
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$9063$1bEyPh
                                                                 g$rest$9064$1bEyPh)
                                                               (list
                                                                 'mutable
                                                                 g$name$9063$1bEyPh)))
                                                            g$ls/false$9062$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$9065$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$9066$1bEyPh)
                                                                  (if g$ls/false$9066$1bEyPh
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$9067$1bEyPh
                                                                           g$rest$9068$1bEyPh)
                                                                         (list
                                                                           'immutable
                                                                           g$name$9067$1bEyPh)))
                                                                      g$ls/false$9066$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$t$9069$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9070$1bEyPh)
                                                                            (if g$ls/false$9070$1bEyPh
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$9071$1bEyPh)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$9071$1bEyPh)))
                                                                                g$ls/false$9070$1bEyPh)
                                                                              (g$syntax-violation$7748$1bEyPh
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9069$1bEyPh))))
                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                           g$t$9069$1bEyPh
                                                                           'any))))
                                                                     g$t$9065$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$9065$1bEyPh
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$9061$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$9061$1bEyPh
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$9060$1bEyPh)))
                                             g$ls$9059$1bEyPh))))))
                         ((case-lambda
                            ((g$uid-code$9035$1bEyPh
                               g$sealed?$9036$1bEyPh
                               g$opaque?$9037$1bEyPh
                               g$fields$9038$1bEyPh)
                             (g$bless$7602$1bEyPh
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9031$1bEyPh)
                                 g$parent-rtd-code$9033$1bEyPh
                                 g$uid-code$9035$1bEyPh
                                 g$sealed?$9036$1bEyPh
                                 g$opaque?$9037$1bEyPh
                                 g$fields$9038$1bEyPh))))
                          ((case-lambda
                             ((g$t$9039$1bEyPh)
                              ((case-lambda
                                 ((g$ls/false$9040$1bEyPh)
                                  (if g$ls/false$9040$1bEyPh
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9040$1bEyPh)
                                    ((case-lambda
                                       ((g$t$9041$1bEyPh)
                                        ((case-lambda
                                           ((g$ls/false$9042$1bEyPh)
                                            (if g$ls/false$9042$1bEyPh
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9043$1bEyPh)
                                                   (list
                                                     'quote
                                                     g$uid$9043$1bEyPh)))
                                                g$ls/false$9042$1bEyPh)
                                              ((case-lambda
                                                 ((g$t$9044$1bEyPh)
                                                  ((case-lambda
                                                     ((g$ls/false$9045$1bEyPh)
                                                      (if g$ls/false$9045$1bEyPh
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9045$1bEyPh)
                                                        (g$syntax-violation$7748$1bEyPh
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9044$1bEyPh))))
                                                   (g$syntax-dispatch$7639$1bEyPh
                                                     g$t$9044$1bEyPh
                                                     '_))))
                                               g$t$9041$1bEyPh))))
                                         (g$syntax-dispatch$7639$1bEyPh
                                           g$t$9041$1bEyPh
                                           '(_ any)))))
                                     g$t$9039$1bEyPh))))
                               (g$syntax-dispatch$7639$1bEyPh
                                 g$t$9039$1bEyPh
                                 '(_)))))
                           (g$get-clause$8862$1bEyPh
                             'nongenerative
                             g$clause*$9032$1bEyPh))
                          ((case-lambda
                             ((g$t$9046$1bEyPh)
                              ((case-lambda
                                 ((g$ls/false$9047$1bEyPh)
                                  (if g$ls/false$9047$1bEyPh
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9047$1bEyPh)
                                    ((case-lambda
                                       ((g$t$9048$1bEyPh)
                                        ((case-lambda
                                           ((g$ls/false$9049$1bEyPh)
                                            (if g$ls/false$9049$1bEyPh
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9049$1bEyPh)
                                              (g$syntax-violation$7748$1bEyPh
                                                '#f
                                                '"invalid syntax"
                                                g$t$9048$1bEyPh))))
                                         (g$syntax-dispatch$7639$1bEyPh
                                           g$t$9048$1bEyPh
                                           '_))))
                                     g$t$9046$1bEyPh))))
                               (g$syntax-dispatch$7639$1bEyPh
                                 g$t$9046$1bEyPh
                                 '(_ #(atom #t))))))
                           (g$get-clause$8862$1bEyPh
                             'sealed
                             g$clause*$9032$1bEyPh))
                          ((case-lambda
                             ((g$t$9050$1bEyPh)
                              ((case-lambda
                                 ((g$ls/false$9051$1bEyPh)
                                  (if g$ls/false$9051$1bEyPh
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9051$1bEyPh)
                                    ((case-lambda
                                       ((g$t$9052$1bEyPh)
                                        ((case-lambda
                                           ((g$ls/false$9053$1bEyPh)
                                            (if g$ls/false$9053$1bEyPh
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9053$1bEyPh)
                                              (g$syntax-violation$7748$1bEyPh
                                                '#f
                                                '"invalid syntax"
                                                g$t$9052$1bEyPh))))
                                         (g$syntax-dispatch$7639$1bEyPh
                                           g$t$9052$1bEyPh
                                           '_))))
                                     g$t$9050$1bEyPh))))
                               (g$syntax-dispatch$7639$1bEyPh
                                 g$t$9050$1bEyPh
                                 '(_ #(atom #t))))))
                           (g$get-clause$8862$1bEyPh
                             'opaque
                             g$clause*$9032$1bEyPh))
                          ((case-lambda
                             ((g$t$9054$1bEyPh)
                              ((case-lambda
                                 ((g$ls/false$9055$1bEyPh)
                                  (if g$ls/false$9055$1bEyPh
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9056$1bEyPh)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9034$1bEyPh
                                             g$field-spec*$9056$1bEyPh))))
                                      g$ls/false$9055$1bEyPh)
                                    ((case-lambda
                                       ((g$t$9057$1bEyPh)
                                        ((case-lambda
                                           ((g$ls/false$9058$1bEyPh)
                                            (if g$ls/false$9058$1bEyPh
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9058$1bEyPh)
                                              (g$syntax-violation$7748$1bEyPh
                                                '#f
                                                '"invalid syntax"
                                                g$t$9057$1bEyPh))))
                                         (g$syntax-dispatch$7639$1bEyPh
                                           g$t$9057$1bEyPh
                                           '_))))
                                     g$t$9054$1bEyPh))))
                               (g$syntax-dispatch$7639$1bEyPh
                                 g$t$9054$1bEyPh
                                 '(_ . each-any)))))
                           (g$get-clause$8862$1bEyPh
                             'fields
                             g$clause*$9032$1bEyPh)))))))
                  (g$parent-rtd-code$8864$1bEyPh
                    (case-lambda
                      ((g$clause*$9019$1bEyPh)
                       ((case-lambda
                          ((g$t$9020$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$9021$1bEyPh)
                               (if g$ls/false$9021$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$name$9022$1bEyPh)
                                      (list
                                        'record-type-descriptor
                                        g$name$9022$1bEyPh)))
                                   g$ls/false$9021$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9023$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9024$1bEyPh)
                                         (if g$ls/false$9024$1bEyPh
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9025$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$9026$1bEyPh)
                                                        (if g$ls/false$9026$1bEyPh
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9027$1bEyPh
                                                                 g$rcd$9028$1bEyPh)
                                                               g$rtd$9027$1bEyPh))
                                                            g$ls/false$9026$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$9029$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$9030$1bEyPh)
                                                                  (if g$ls/false$9030$1bEyPh
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9030$1bEyPh)
                                                                    (g$syntax-violation$7748$1bEyPh
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9029$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$9029$1bEyPh
                                                                 '#(atom #f)))))
                                                           g$t$9025$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$9025$1bEyPh
                                                       '(_ any any)))))
                                                 (g$get-clause$8862$1bEyPh
                                                   'parent-rtd
                                                   g$clause*$9019$1bEyPh))))
                                             g$ls/false$9024$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$9023$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9023$1bEyPh
                                        '#(atom #f)))))
                                  g$t$9020$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$9020$1bEyPh
                              '(_ any)))))
                        (g$get-clause$8862$1bEyPh
                          'parent
                          g$clause*$9019$1bEyPh)))))
                  (g$parent-rcd-code$8865$1bEyPh
                    (case-lambda
                      ((g$clause*$9007$1bEyPh)
                       ((case-lambda
                          ((g$t$9008$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$9009$1bEyPh)
                               (if g$ls/false$9009$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$name$9010$1bEyPh)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9010$1bEyPh)))
                                   g$ls/false$9009$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9011$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9012$1bEyPh)
                                         (if g$ls/false$9012$1bEyPh
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9013$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$9014$1bEyPh)
                                                        (if g$ls/false$9014$1bEyPh
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9015$1bEyPh
                                                                 g$rcd$9016$1bEyPh)
                                                               g$rcd$9016$1bEyPh))
                                                            g$ls/false$9014$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$9017$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$9018$1bEyPh)
                                                                  (if g$ls/false$9018$1bEyPh
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9018$1bEyPh)
                                                                    (g$syntax-violation$7748$1bEyPh
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9017$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$9017$1bEyPh
                                                                 '#(atom #f)))))
                                                           g$t$9013$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$9013$1bEyPh
                                                       '(_ any any)))))
                                                 (g$get-clause$8862$1bEyPh
                                                   'parent-rtd
                                                   g$clause*$9007$1bEyPh))))
                                             g$ls/false$9012$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$9011$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9011$1bEyPh
                                        '#(atom #f)))))
                                  g$t$9008$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$9008$1bEyPh
                              '(_ any)))))
                        (g$get-clause$8862$1bEyPh
                          'parent
                          g$clause*$9007$1bEyPh)))))
                  (g$foo-rcd-code$8866$1bEyPh
                    (case-lambda
                      ((g$clause*$9003$1bEyPh
                         g$foo-rtd$9004$1bEyPh
                         g$protocol$9005$1bEyPh
                         g$parent-rcd-code$9006$1bEyPh)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9004$1bEyPh
                         g$parent-rcd-code$9006$1bEyPh
                         g$protocol$9005$1bEyPh))))
                  (g$get-protocol-code$8867$1bEyPh
                    (case-lambda
                      ((g$clause*$8997$1bEyPh)
                       ((case-lambda
                          ((g$t$8998$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$8999$1bEyPh)
                               (if g$ls/false$8999$1bEyPh
                                 (apply
                                   (case-lambda
                                     ((g$expr$9000$1bEyPh) g$expr$9000$1bEyPh))
                                   g$ls/false$8999$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9001$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9002$1bEyPh)
                                         (if g$ls/false$9002$1bEyPh
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9002$1bEyPh)
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$t$9001$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9001$1bEyPh
                                        '_))))
                                  g$t$8998$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$8998$1bEyPh
                              '(_ any)))))
                        (g$get-clause$8862$1bEyPh
                          'protocol
                          g$clause*$8997$1bEyPh)))))
                  (g$get-fields$8868$1bEyPh
                    (case-lambda
                      ((g$clause*$8988$1bEyPh)
                       ((case-lambda
                          ((g$t$8989$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$8990$1bEyPh)
                               (if g$ls/false$8990$1bEyPh
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8990$1bEyPh)
                                 ((case-lambda
                                    ((g$t$8991$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$8992$1bEyPh)
                                         (if g$ls/false$8992$1bEyPh
                                           (apply
                                             (case-lambda
                                               ((g$f*$8993$1bEyPh)
                                                g$f*$8993$1bEyPh))
                                             g$ls/false$8992$1bEyPh)
                                           ((case-lambda
                                              ((g$t$8994$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$8995$1bEyPh)
                                                   (if g$ls/false$8995$1bEyPh
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8996$1bEyPh)
                                                          (g$get-fields$8868$1bEyPh
                                                            g$rest$8996$1bEyPh)))
                                                       g$ls/false$8995$1bEyPh)
                                                     (g$syntax-violation$7748$1bEyPh
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8994$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$8994$1bEyPh
                                                  '(_ . any)))))
                                            g$t$8991$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$8991$1bEyPh
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8989$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$8989$1bEyPh
                              '()))))
                        g$clause*$8988$1bEyPh))))
                  (g$get-mutator-indices$8869$1bEyPh
                    (case-lambda
                      ((g$fields$8976$1bEyPh)
                       ((letrec ((g$f$8977$1bEyPh
                                   (case-lambda
                                     ((g$fields$8978$1bEyPh g$i$8979$1bEyPh)
                                      ((case-lambda
                                         ((g$t$8980$1bEyPh)
                                          ((case-lambda
                                             ((g$ls/false$8981$1bEyPh)
                                              (if g$ls/false$8981$1bEyPh
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8981$1bEyPh)
                                                ((case-lambda
                                                   ((g$t$8982$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$8983$1bEyPh)
                                                        (if g$ls/false$8983$1bEyPh
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8984$1bEyPh)
                                                               (cons
                                                                 g$i$8979$1bEyPh
                                                                 (g$f$8977$1bEyPh
                                                                   g$rest$8984$1bEyPh
                                                                   (+ g$i$8979$1bEyPh
                                                                      '1)))))
                                                            g$ls/false$8983$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$8985$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$8986$1bEyPh)
                                                                  (if g$ls/false$8986$1bEyPh
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8987$1bEyPh)
                                                                         (g$f$8977$1bEyPh
                                                                           g$rest$8987$1bEyPh
                                                                           (+ g$i$8979$1bEyPh
                                                                              '1))))
                                                                      g$ls/false$8986$1bEyPh)
                                                                    (g$syntax-violation$7748$1bEyPh
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8985$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$8985$1bEyPh
                                                                 '(_ . any)))))
                                                           g$t$8982$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$8982$1bEyPh
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8980$1bEyPh))))
                                           (g$syntax-dispatch$7639$1bEyPh
                                             g$t$8980$1bEyPh
                                             '()))))
                                       g$fields$8978$1bEyPh)))))
                          g$f$8977$1bEyPh)
                        g$fields$8976$1bEyPh
                        '0))))
                  (g$get-mutators$8870$1bEyPh
                    (case-lambda
                      ((g$foo$8955$1bEyPh g$fields$8956$1bEyPh)
                       (letrec* ((g$gen-name$8957$1bEyPh
                                   (case-lambda
                                     ((g$x$8975$1bEyPh)
                                      (g$datum->syntax$7750$1bEyPh
                                        g$foo$8955$1bEyPh
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7751$1bEyPh
                                                g$foo$8955$1bEyPh))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7751$1bEyPh
                                                g$x$8975$1bEyPh))
                                            '"-set!")))))))
                         ((letrec ((g$f$8958$1bEyPh
                                     (case-lambda
                                       ((g$fields$8959$1bEyPh)
                                        ((case-lambda
                                           ((g$t$8960$1bEyPh)
                                            ((case-lambda
                                               ((g$ls/false$8961$1bEyPh)
                                                (if g$ls/false$8961$1bEyPh
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8961$1bEyPh)
                                                  ((case-lambda
                                                     ((g$t$8962$1bEyPh)
                                                      ((case-lambda
                                                         ((g$ls/false$8963$1bEyPh)
                                                          (if g$ls/false$8963$1bEyPh
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8964$1bEyPh
                                                                   g$accessor$8965$1bEyPh
                                                                   g$mutator$8966$1bEyPh
                                                                   g$rest$8967$1bEyPh)
                                                                 (cons
                                                                   g$mutator$8966$1bEyPh
                                                                   (g$f$8958$1bEyPh
                                                                     g$rest$8967$1bEyPh))))
                                                              g$ls/false$8963$1bEyPh)
                                                            ((case-lambda
                                                               ((g$t$8968$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$ls/false$8969$1bEyPh)
                                                                    (if g$ls/false$8969$1bEyPh
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8970$1bEyPh
                                                                             g$rest$8971$1bEyPh)
                                                                           (cons
                                                                             (g$gen-name$8957$1bEyPh
                                                                               g$name$8970$1bEyPh)
                                                                             (g$f$8958$1bEyPh
                                                                               g$rest$8971$1bEyPh))))
                                                                        g$ls/false$8969$1bEyPh)
                                                                      ((case-lambda
                                                                         ((g$t$8972$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8973$1bEyPh)
                                                                              (if g$ls/false$8973$1bEyPh
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8974$1bEyPh)
                                                                                     (g$f$8958$1bEyPh
                                                                                       g$rest$8974$1bEyPh)))
                                                                                  g$ls/false$8973$1bEyPh)
                                                                                (g$syntax-violation$7748$1bEyPh
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8972$1bEyPh))))
                                                                           (g$syntax-dispatch$7639$1bEyPh
                                                                             g$t$8972$1bEyPh
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8968$1bEyPh))))
                                                                 (g$syntax-dispatch$7639$1bEyPh
                                                                   g$t$8968$1bEyPh
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8962$1bEyPh))))
                                                       (g$syntax-dispatch$7639$1bEyPh
                                                         g$t$8962$1bEyPh
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8960$1bEyPh))))
                                             (g$syntax-dispatch$7639$1bEyPh
                                               g$t$8960$1bEyPh
                                               '()))))
                                         g$fields$8959$1bEyPh)))))
                            g$f$8958$1bEyPh)
                          g$fields$8956$1bEyPh)))))
                  (g$get-accessors$8871$1bEyPh
                    (case-lambda
                      ((g$foo$8921$1bEyPh g$fields$8922$1bEyPh)
                       (letrec* ((g$gen-name$8923$1bEyPh
                                   (case-lambda
                                     ((g$x$8954$1bEyPh)
                                      (g$datum->syntax$7750$1bEyPh
                                        g$foo$8921$1bEyPh
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7751$1bEyPh
                                                g$foo$8921$1bEyPh))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7751$1bEyPh
                                                g$x$8954$1bEyPh)))))))))
                         (map (case-lambda
                                ((g$field$8924$1bEyPh)
                                 ((case-lambda
                                    ((g$t$8925$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$8926$1bEyPh)
                                         (if (if g$ls/false$8926$1bEyPh
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8927$1bEyPh
                                                        g$accessor$8928$1bEyPh
                                                        g$mutator$8929$1bEyPh)
                                                      (g$id?$7361$1bEyPh
                                                        g$accessor$8928$1bEyPh)))
                                                   g$ls/false$8926$1bEyPh))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8930$1bEyPh
                                                  g$accessor$8931$1bEyPh
                                                  g$mutator$8932$1bEyPh)
                                                g$accessor$8931$1bEyPh))
                                             g$ls/false$8926$1bEyPh)
                                           ((case-lambda
                                              ((g$t$8933$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$8934$1bEyPh)
                                                   (if (if g$ls/false$8934$1bEyPh
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8935$1bEyPh
                                                                  g$accessor$8936$1bEyPh)
                                                                (g$id?$7361$1bEyPh
                                                                  g$accessor$8936$1bEyPh)))
                                                             g$ls/false$8934$1bEyPh))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8937$1bEyPh
                                                            g$accessor$8938$1bEyPh)
                                                          g$accessor$8938$1bEyPh))
                                                       g$ls/false$8934$1bEyPh)
                                                     ((case-lambda
                                                        ((g$t$8939$1bEyPh)
                                                         ((case-lambda
                                                            ((g$ls/false$8940$1bEyPh)
                                                             (if (if g$ls/false$8940$1bEyPh
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8941$1bEyPh)
                                                                          (g$id?$7361$1bEyPh
                                                                            g$name$8941$1bEyPh)))
                                                                       g$ls/false$8940$1bEyPh))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8942$1bEyPh)
                                                                    (g$gen-name$8923$1bEyPh
                                                                      g$name$8942$1bEyPh)))
                                                                 g$ls/false$8940$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$t$8943$1bEyPh)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8944$1bEyPh)
                                                                       (if (if g$ls/false$8944$1bEyPh
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8945$1bEyPh)
                                                                                    (g$id?$7361$1bEyPh
                                                                                      g$name$8945$1bEyPh)))
                                                                                 g$ls/false$8944$1bEyPh))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8946$1bEyPh)
                                                                              (g$gen-name$8923$1bEyPh
                                                                                g$name$8946$1bEyPh)))
                                                                           g$ls/false$8944$1bEyPh)
                                                                         ((case-lambda
                                                                            ((g$t$8947$1bEyPh)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8948$1bEyPh)
                                                                                 (if (if g$ls/false$8948$1bEyPh
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8949$1bEyPh)
                                                                                              (g$id?$7361$1bEyPh
                                                                                                g$name$8949$1bEyPh)))
                                                                                           g$ls/false$8948$1bEyPh))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8950$1bEyPh)
                                                                                        (g$gen-name$8923$1bEyPh
                                                                                          g$name$8950$1bEyPh)))
                                                                                     g$ls/false$8948$1bEyPh)
                                                                                   ((case-lambda
                                                                                      ((g$t$8951$1bEyPh)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8952$1bEyPh)
                                                                                           (if g$ls/false$8952$1bEyPh
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8953$1bEyPh)
                                                                                                  (g$syntax-violation$7748$1bEyPh
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8924$1bEyPh)))
                                                                                               g$ls/false$8952$1bEyPh)
                                                                                             (g$syntax-violation$7748$1bEyPh
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8951$1bEyPh))))
                                                                                        (g$syntax-dispatch$7639$1bEyPh
                                                                                          g$t$8951$1bEyPh
                                                                                          'any))))
                                                                                    g$t$8947$1bEyPh))))
                                                                              (g$syntax-dispatch$7639$1bEyPh
                                                                                g$t$8947$1bEyPh
                                                                                'any))))
                                                                          g$t$8943$1bEyPh))))
                                                                    (g$syntax-dispatch$7639$1bEyPh
                                                                      g$t$8943$1bEyPh
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8939$1bEyPh))))
                                                          (g$syntax-dispatch$7639$1bEyPh
                                                            g$t$8939$1bEyPh
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8933$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$8933$1bEyPh
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8925$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$8925$1bEyPh
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8924$1bEyPh)))
                              g$fields$8922$1bEyPh)))))
                  (g$enumerate$8872$1bEyPh
                    (case-lambda
                      ((g$ls$8917$1bEyPh)
                       ((letrec ((g$f$8918$1bEyPh
                                   (case-lambda
                                     ((g$ls$8919$1bEyPh g$i$8920$1bEyPh)
                                      (if (null? g$ls$8919$1bEyPh)
                                        '()
                                        (cons
                                          g$i$8920$1bEyPh
                                          (g$f$8918$1bEyPh
                                            (cdr g$ls$8919$1bEyPh)
                                            (+ g$i$8920$1bEyPh '1))))))))
                          g$f$8918$1bEyPh)
                        g$ls$8917$1bEyPh
                        '0))))
                  (g$do-define-record$8873$1bEyPh
                    (case-lambda
                      ((g$namespec$8897$1bEyPh g$clause*$8898$1bEyPh)
                       ((case-lambda
                          ((g$foo$8899$1bEyPh)
                           ((case-lambda
                              ((g$foo-rtd$8900$1bEyPh)
                               ((case-lambda
                                  ((g$foo-rcd$8901$1bEyPh)
                                   ((case-lambda
                                      ((g$protocol$8902$1bEyPh)
                                       ((case-lambda
                                          ((g$make-foo$8903$1bEyPh)
                                           ((case-lambda
                                              ((g$fields$8904$1bEyPh)
                                               ((case-lambda
                                                  ((g$idx*$8905$1bEyPh)
                                                   ((case-lambda
                                                      ((g$foo-x*$8906$1bEyPh)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8907$1bEyPh)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8908$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$foo?$8909$1bEyPh)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8910$1bEyPh)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8911$1bEyPh)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8912$1bEyPh)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7602$1bEyPh
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8900$1bEyPh
                                                                                           g$foo-rtd-code$8910$1bEyPh)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8902$1bEyPh
                                                                                             g$protocol-code$8912$1bEyPh)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8901$1bEyPh
                                                                                               g$foo-rcd-code$8911$1bEyPh)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8899$1bEyPh
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8900$1bEyPh)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8901$1bEyPh)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8909$1bEyPh
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8900$1bEyPh))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8903$1bEyPh
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8901$1bEyPh))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8913$1bEyPh
                                                                                                               g$idx$8914$1bEyPh)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8913$1bEyPh
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8900$1bEyPh
                                                                                                                 g$idx$8914$1bEyPh))))
                                                                                                          g$foo-x*$8906$1bEyPh
                                                                                                          g$idx*$8905$1bEyPh)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8915$1bEyPh
                                                                                                               g$idx$8916$1bEyPh)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8915$1bEyPh
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8900$1bEyPh
                                                                                                                 g$idx$8916$1bEyPh))))
                                                                                                          g$set-foo-x!*$8907$1bEyPh
                                                                                                          g$set-foo-idx*$8908$1bEyPh)))))))))))))))
                                                                            (g$get-protocol-code$8867$1bEyPh
                                                                              g$clause*$8898$1bEyPh))))
                                                                        (g$foo-rcd-code$8866$1bEyPh
                                                                          g$clause*$8898$1bEyPh
                                                                          g$foo-rtd$8900$1bEyPh
                                                                          g$protocol$8902$1bEyPh
                                                                          (g$parent-rcd-code$8865$1bEyPh
                                                                            g$clause*$8898$1bEyPh)))))
                                                                    (g$foo-rtd-code$8863$1bEyPh
                                                                      g$foo$8899$1bEyPh
                                                                      g$clause*$8898$1bEyPh
                                                                      (g$parent-rtd-code$8864$1bEyPh
                                                                        g$clause*$8898$1bEyPh)))))
                                                                (g$get-record-predicate-name$8861$1bEyPh
                                                                  g$namespec$8897$1bEyPh))))
                                                            (g$get-mutator-indices$8869$1bEyPh
                                                              g$fields$8904$1bEyPh))))
                                                        (g$get-mutators$8870$1bEyPh
                                                          g$foo$8899$1bEyPh
                                                          g$fields$8904$1bEyPh))))
                                                    (g$get-accessors$8871$1bEyPh
                                                      g$foo$8899$1bEyPh
                                                      g$fields$8904$1bEyPh))))
                                                (g$enumerate$8872$1bEyPh
                                                  g$fields$8904$1bEyPh))))
                                            (g$get-fields$8868$1bEyPh
                                              g$clause*$8898$1bEyPh))))
                                        (g$get-record-constructor-name$8860$1bEyPh
                                          g$namespec$8897$1bEyPh))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8859$1bEyPh
                          g$namespec$8897$1bEyPh)))))
                  (g$verify-clauses$8874$1bEyPh
                    (case-lambda
                      ((g$x$8879$1bEyPh g$cls*$8880$1bEyPh)
                       (letrec* ((g$valid-kwds$8881$1bEyPh
                                   (map g$bless$7602$1bEyPh
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8882$1bEyPh
                                   (case-lambda
                                     ((g$x$8894$1bEyPh g$ls$8895$1bEyPh)
                                      (if (pair? g$ls$8895$1bEyPh)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8896$1bEyPh)
                                              (if g$t$8896$1bEyPh
                                                g$t$8896$1bEyPh
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8882$1bEyPh
                                                    g$x$8894$1bEyPh
                                                    (cdr g$ls$8895$1bEyPh))))))
                                           (g$free-id=?$7365$1bEyPh
                                             g$x$8894$1bEyPh
                                             (car g$ls$8895$1bEyPh))))
                                        '#f)))))
                         ((letrec ((g$f$8883$1bEyPh
                                     (case-lambda
                                       ((g$cls*$8884$1bEyPh g$seen*$8885$1bEyPh)
                                        (if (not (null? g$cls*$8884$1bEyPh))
                                          ((case-lambda
                                             ((g$t$8886$1bEyPh)
                                              ((case-lambda
                                                 ((g$ls/false$8887$1bEyPh)
                                                  (if g$ls/false$8887$1bEyPh
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8888$1bEyPh
                                                           g$rest$8889$1bEyPh)
                                                         (if ((case-lambda
                                                                ((g$t$8890$1bEyPh)
                                                                 (if g$t$8890$1bEyPh
                                                                   g$t$8890$1bEyPh
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8882$1bEyPh
                                                                            g$kwd$8888$1bEyPh
                                                                            g$valid-kwds$8881$1bEyPh))))))
                                                              (not (g$id?$7361$1bEyPh
                                                                     g$kwd$8888$1bEyPh)))
                                                           (g$syntax-violation$7748$1bEyPh
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8888$1bEyPh)
                                                           (if (g$bound-id-member?$7368$1bEyPh
                                                                 g$kwd$8888$1bEyPh
                                                                 g$seen*$8885$1bEyPh)
                                                             (g$syntax-violation$7748$1bEyPh
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8879$1bEyPh
                                                               g$kwd$8888$1bEyPh)
                                                             (g$f$8883$1bEyPh
                                                               (cdr g$cls*$8884$1bEyPh)
                                                               (cons
                                                                 g$kwd$8888$1bEyPh
                                                                 g$seen*$8885$1bEyPh))))))
                                                      g$ls/false$8887$1bEyPh)
                                                    ((case-lambda
                                                       ((g$t$8891$1bEyPh)
                                                        ((case-lambda
                                                           ((g$ls/false$8892$1bEyPh)
                                                            (if g$ls/false$8892$1bEyPh
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8893$1bEyPh)
                                                                   (g$syntax-violation$7748$1bEyPh
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8893$1bEyPh)))
                                                                g$ls/false$8892$1bEyPh)
                                                              (g$syntax-violation$7748$1bEyPh
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8891$1bEyPh))))
                                                         (g$syntax-dispatch$7639$1bEyPh
                                                           g$t$8891$1bEyPh
                                                           'any))))
                                                     g$t$8886$1bEyPh))))
                                               (g$syntax-dispatch$7639$1bEyPh
                                                 g$t$8886$1bEyPh
                                                 '(any . any)))))
                                           (car g$cls*$8884$1bEyPh))
                                          (void))))))
                            g$f$8883$1bEyPh)
                          g$cls*$8880$1bEyPh
                          '()))))))
          ((case-lambda
             ((g$t$8875$1bEyPh)
              ((case-lambda
                 ((g$ls/false$8876$1bEyPh)
                  (if g$ls/false$8876$1bEyPh
                    (apply
                      (case-lambda
                        ((g$namespec$8877$1bEyPh g$clause*$8878$1bEyPh)
                         (begin
                           (g$verify-clauses$8874$1bEyPh
                             g$x$8857$1bEyPh
                             g$clause*$8878$1bEyPh)
                           (g$do-define-record$8873$1bEyPh
                             g$namespec$8877$1bEyPh
                             g$clause*$8878$1bEyPh))))
                      g$ls/false$8876$1bEyPh)
                    (g$syntax-violation$7748$1bEyPh
                      '#f
                      '"invalid syntax"
                      g$t$8875$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$8875$1bEyPh
                 '(_ any . each-any)))))
           g$x$8857$1bEyPh)))))
   (g$define-condition-type-macro$7634$1bEyPh
     g$define-condition-type-macro$11073$1bEyPh
     (case-lambda
       ((g$x$9113$1bEyPh)
        (letrec* ((g$mkname$9114$1bEyPh
                    (case-lambda
                      ((g$name$9137$1bEyPh g$suffix$9138$1bEyPh)
                       (g$datum->syntax$7750$1bEyPh
                         g$name$9137$1bEyPh
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7751$1bEyPh g$name$9137$1bEyPh))
                             g$suffix$9138$1bEyPh)))))))
          ((case-lambda
             ((g$t$9115$1bEyPh)
              ((case-lambda
                 ((g$ls/false$9116$1bEyPh)
                  (if (if g$ls/false$9116$1bEyPh
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9117$1bEyPh
                                 g$name$9118$1bEyPh
                                 g$super$9119$1bEyPh
                                 g$constructor$9120$1bEyPh
                                 g$predicate$9121$1bEyPh
                                 g$field*$9122$1bEyPh
                                 g$accessor*$9123$1bEyPh)
                               (if (g$id?$7361$1bEyPh g$name$9118$1bEyPh)
                                 (if (g$id?$7361$1bEyPh g$super$9119$1bEyPh)
                                   (if (g$id?$7361$1bEyPh
                                         g$constructor$9120$1bEyPh)
                                     (if (g$id?$7361$1bEyPh
                                           g$predicate$9121$1bEyPh)
                                       (if (g$for-all$5491$1bEyPh
                                             g$id?$7361$1bEyPh
                                             g$field*$9122$1bEyPh)
                                         (begin
                                           '#f
                                           (g$for-all$5491$1bEyPh
                                             g$id?$7361$1bEyPh
                                             g$accessor*$9123$1bEyPh))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9116$1bEyPh))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9124$1bEyPh
                           g$name$9125$1bEyPh
                           g$super$9126$1bEyPh
                           g$constructor$9127$1bEyPh
                           g$predicate$9128$1bEyPh
                           g$field*$9129$1bEyPh
                           g$accessor*$9130$1bEyPh)
                         ((case-lambda
                            ((g$aux-accessor*$9131$1bEyPh)
                             (g$bless$7602$1bEyPh
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9125$1bEyPh
                                         g$constructor$9127$1bEyPh
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9126$1bEyPh)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9132$1bEyPh
                                                       g$aux$9133$1bEyPh)
                                                     (list
                                                       'immutable
                                                       g$field$9132$1bEyPh
                                                       g$aux$9133$1bEyPh)))
                                                  g$field*$9129$1bEyPh
                                                  g$aux-accessor*$9131$1bEyPh))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9128$1bEyPh
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9125$1bEyPh)))
                                     (map (case-lambda
                                            ((g$accessor$9134$1bEyPh
                                               g$aux$9135$1bEyPh)
                                             (list
                                               'define
                                               g$accessor$9134$1bEyPh
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9125$1bEyPh)
                                                 g$aux$9135$1bEyPh))))
                                          g$accessor*$9130$1bEyPh
                                          g$aux-accessor*$9131$1bEyPh)))))))
                          (map (case-lambda ((g$x$9136$1bEyPh) (gensym)))
                               g$accessor*$9130$1bEyPh))))
                      g$ls/false$9116$1bEyPh)
                    (g$syntax-violation$7748$1bEyPh
                      '#f
                      '"invalid syntax"
                      g$t$9115$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$9115$1bEyPh
                 '(any any any any any . #(each (any any)))))))
           g$x$9113$1bEyPh)))))
   (g$incorrect-usage-macro$7635$1bEyPh
     g$incorrect-usage-macro$11074$1bEyPh
     (case-lambda
       ((g$e$9139$1bEyPh)
        (g$syntax-violation$7748$1bEyPh
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9139$1bEyPh))))
   (g$parameterize-macro$7636$1bEyPh
     g$parameterize-macro$11075$1bEyPh
     (case-lambda
       ((g$e$9140$1bEyPh)
        ((case-lambda
           ((g$t$9141$1bEyPh)
            ((case-lambda
               ((g$ls/false$9142$1bEyPh)
                (if g$ls/false$9142$1bEyPh
                  (apply
                    (case-lambda
                      ((g$b$9143$1bEyPh g$b*$9144$1bEyPh)
                       (g$bless$7602$1bEyPh
                         (cons
                           'begin
                           (cons g$b$9143$1bEyPh g$b*$9144$1bEyPh)))))
                    g$ls/false$9142$1bEyPh)
                  ((case-lambda
                     ((g$t$9145$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$9146$1bEyPh)
                          (if g$ls/false$9146$1bEyPh
                            (apply
                              (case-lambda
                                ((g$olhs*$9147$1bEyPh
                                   g$orhs*$9148$1bEyPh
                                   g$b$9149$1bEyPh
                                   g$b*$9150$1bEyPh)
                                 ((case-lambda
                                    ((g$lhs*$9151$1bEyPh g$rhs*$9152$1bEyPh)
                                     (g$bless$7602$1bEyPh
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9151$1bEyPh
                                             g$rhs*$9152$1bEyPh)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9153$1bEyPh
                                                               g$rhs$9154$1bEyPh)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9153$1bEyPh)))
                                                               (list
                                                                 g$lhs$9153$1bEyPh
                                                                 g$rhs$9154$1bEyPh)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9154$1bEyPh
                                                                   '(t))))))
                                                          g$lhs*$9151$1bEyPh
                                                          g$rhs*$9152$1bEyPh)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9149$1bEyPh
                                                         g$b*$9150$1bEyPh)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9147$1bEyPh
                                           g$orhs*$9148$1bEyPh)))))
                                  (g$generate-temporaries$7738$1bEyPh
                                    g$olhs*$9147$1bEyPh)
                                  (g$generate-temporaries$7738$1bEyPh
                                    g$orhs*$9148$1bEyPh))))
                              g$ls/false$9146$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$9145$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$9145$1bEyPh
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9141$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$9141$1bEyPh
               '(_ () any . each-any)))))
         g$e$9140$1bEyPh))))
   (g$foreign-call-transformer$7637$1bEyPh
     g$foreign-call-transformer$11076$1bEyPh
     (case-lambda
       ((g$e$9155$1bEyPh g$r$9156$1bEyPh g$mr$9157$1bEyPh)
        ((case-lambda
           ((g$t$9158$1bEyPh)
            ((case-lambda
               ((g$ls/false$9159$1bEyPh)
                (if g$ls/false$9159$1bEyPh
                  (apply
                    (case-lambda
                      ((g$name$9160$1bEyPh g$arg*$9161$1bEyPh)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7657$1bEyPh
                             g$name$9160$1bEyPh
                             g$r$9156$1bEyPh
                             g$mr$9157$1bEyPh)
                           (g$chi-expr*$7655$1bEyPh
                             g$arg*$9161$1bEyPh
                             g$r$9156$1bEyPh
                             g$mr$9157$1bEyPh)))))
                    g$ls/false$9159$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$9158$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$9158$1bEyPh
               '(_ any . each-any)))))
         g$e$9155$1bEyPh))))
   (g$convert-pattern$7638$1bEyPh
     g$convert-pattern$11077$1bEyPh
     (case-lambda
       ((g$pattern$9162$1bEyPh g$keys$9163$1bEyPh)
        (letrec* ((g$cvt*$9164$1bEyPh
                    (case-lambda
                      ((g$p*$9244$1bEyPh g$n$9245$1bEyPh g$ids$9246$1bEyPh)
                       (if (null? g$p*$9244$1bEyPh)
                         (values '() g$ids$9246$1bEyPh)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9164$1bEyPh
                                (cdr g$p*$9244$1bEyPh)
                                g$n$9245$1bEyPh
                                g$ids$9246$1bEyPh)))
                           (case-lambda
                             ((g$y$9249$1bEyPh g$ids$9250$1bEyPh)
                              ((case-lambda
                                 ((g$ids$9251$1bEyPh g$y$9252$1bEyPh)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9165$1bEyPh
                                         (car g$p*$9244$1bEyPh)
                                         g$n$9245$1bEyPh
                                         g$ids$9251$1bEyPh)))
                                    (case-lambda
                                      ((g$x$9255$1bEyPh g$ids$9256$1bEyPh)
                                       ((case-lambda
                                          ((g$ids$9257$1bEyPh g$x$9258$1bEyPh)
                                           (values
                                             (cons
                                               g$x$9258$1bEyPh
                                               g$y$9252$1bEyPh)
                                             g$ids$9257$1bEyPh)))
                                        g$ids$9256$1bEyPh
                                        g$x$9255$1bEyPh))))))
                               g$ids$9250$1bEyPh
                               g$y$9249$1bEyPh))))))))
                  (g$cvt$9165$1bEyPh
                    (case-lambda
                      ((g$p$9166$1bEyPh g$n$9167$1bEyPh g$ids$9168$1bEyPh)
                       ((case-lambda
                          ((g$t$9169$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$9170$1bEyPh)
                               (if (if g$ls/false$9170$1bEyPh
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9171$1bEyPh)
                                            (g$id?$7361$1bEyPh
                                              g$id$9171$1bEyPh)))
                                         g$ls/false$9170$1bEyPh))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9172$1bEyPh)
                                      (if (g$bound-id-member?$7368$1bEyPh
                                            g$p$9166$1bEyPh
                                            g$keys$9163$1bEyPh)
                                        (values
                                          (vector 'free-id g$p$9166$1bEyPh)
                                          g$ids$9168$1bEyPh)
                                        (if (g$free-id=?$7365$1bEyPh
                                              g$p$9166$1bEyPh
                                              (g$scheme-stx$7582$1bEyPh '_))
                                          (values '_ g$ids$9168$1bEyPh)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9166$1bEyPh
                                                g$n$9167$1bEyPh)
                                              g$ids$9168$1bEyPh))))))
                                   g$ls/false$9170$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9173$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$9174$1bEyPh)
                                         (if (if g$ls/false$9174$1bEyPh
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9175$1bEyPh
                                                        g$dots$9176$1bEyPh)
                                                      (g$ellipsis?$7640$1bEyPh
                                                        g$dots$9176$1bEyPh)))
                                                   g$ls/false$9174$1bEyPh))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9177$1bEyPh
                                                  g$dots$9178$1bEyPh)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9165$1bEyPh
                                                       g$p$9177$1bEyPh
                                                       (+ g$n$9167$1bEyPh '1)
                                                       g$ids$9168$1bEyPh)))
                                                  (case-lambda
                                                    ((g$p$9181$1bEyPh
                                                       g$ids$9182$1bEyPh)
                                                     ((case-lambda
                                                        ((g$ids$9183$1bEyPh
                                                           g$p$9184$1bEyPh)
                                                         (values
                                                           (if (eq? g$p$9184$1bEyPh
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9184$1bEyPh))
                                                           g$ids$9183$1bEyPh)))
                                                      g$ids$9182$1bEyPh
                                                      g$p$9181$1bEyPh))))))
                                             g$ls/false$9174$1bEyPh)
                                           ((case-lambda
                                              ((g$t$9185$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$9186$1bEyPh)
                                                   (if (if g$ls/false$9186$1bEyPh
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9187$1bEyPh
                                                                  g$dots$9188$1bEyPh
                                                                  g$ys$9189$1bEyPh
                                                                  g$z$9190$1bEyPh)
                                                                (g$ellipsis?$7640$1bEyPh
                                                                  g$dots$9188$1bEyPh)))
                                                             g$ls/false$9186$1bEyPh))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9191$1bEyPh
                                                            g$dots$9192$1bEyPh
                                                            g$ys$9193$1bEyPh
                                                            g$z$9194$1bEyPh)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9165$1bEyPh
                                                                 g$z$9194$1bEyPh
                                                                 g$n$9167$1bEyPh
                                                                 g$ids$9168$1bEyPh)))
                                                            (case-lambda
                                                              ((g$z$9197$1bEyPh
                                                                 g$ids$9198$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$ids$9199$1bEyPh
                                                                     g$z$9200$1bEyPh)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9164$1bEyPh
                                                                          g$ys$9193$1bEyPh
                                                                          g$n$9167$1bEyPh
                                                                          g$ids$9199$1bEyPh)))
                                                                     (case-lambda
                                                                       ((g$ys$9203$1bEyPh
                                                                          g$ids$9204$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$ids$9205$1bEyPh
                                                                              g$ys$9206$1bEyPh)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9165$1bEyPh
                                                                                   g$x$9191$1bEyPh
                                                                                   (+ g$n$9167$1bEyPh
                                                                                      '1)
                                                                                   g$ids$9205$1bEyPh)))
                                                                              (case-lambda
                                                                                ((g$x$9209$1bEyPh
                                                                                   g$ids$9210$1bEyPh)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9211$1bEyPh
                                                                                       g$x$9212$1bEyPh)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9212$1bEyPh
                                                                                         (reverse
                                                                                           g$ys$9206$1bEyPh)
                                                                                         g$z$9200$1bEyPh)
                                                                                       g$ids$9211$1bEyPh)))
                                                                                  g$ids$9210$1bEyPh
                                                                                  g$x$9209$1bEyPh))))))
                                                                         g$ids$9204$1bEyPh
                                                                         g$ys$9203$1bEyPh))))))
                                                                g$ids$9198$1bEyPh
                                                                g$z$9197$1bEyPh))))))
                                                       g$ls/false$9186$1bEyPh)
                                                     ((case-lambda
                                                        ((g$t$9213$1bEyPh)
                                                         ((case-lambda
                                                            ((g$ls/false$9214$1bEyPh)
                                                             (if g$ls/false$9214$1bEyPh
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9215$1bEyPh
                                                                      g$y$9216$1bEyPh)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9165$1bEyPh
                                                                           g$y$9216$1bEyPh
                                                                           g$n$9167$1bEyPh
                                                                           g$ids$9168$1bEyPh)))
                                                                      (case-lambda
                                                                        ((g$y$9219$1bEyPh
                                                                           g$ids$9220$1bEyPh)
                                                                         ((case-lambda
                                                                            ((g$ids$9221$1bEyPh
                                                                               g$y$9222$1bEyPh)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9165$1bEyPh
                                                                                    g$x$9215$1bEyPh
                                                                                    g$n$9167$1bEyPh
                                                                                    g$ids$9221$1bEyPh)))
                                                                               (case-lambda
                                                                                 ((g$x$9225$1bEyPh
                                                                                    g$ids$9226$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9227$1bEyPh
                                                                                        g$x$9228$1bEyPh)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9228$1bEyPh
                                                                                          g$y$9222$1bEyPh)
                                                                                        g$ids$9227$1bEyPh)))
                                                                                   g$ids$9226$1bEyPh
                                                                                   g$x$9225$1bEyPh))))))
                                                                          g$ids$9220$1bEyPh
                                                                          g$y$9219$1bEyPh))))))
                                                                 g$ls/false$9214$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$t$9229$1bEyPh)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9230$1bEyPh)
                                                                       (if g$ls/false$9230$1bEyPh
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9168$1bEyPh)))
                                                                           g$ls/false$9230$1bEyPh)
                                                                         ((case-lambda
                                                                            ((g$t$9231$1bEyPh)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9232$1bEyPh)
                                                                                 (if (if g$ls/false$9232$1bEyPh
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9233$1bEyPh)
                                                                                              (not (g$stx?$7333$1bEyPh
                                                                                                     g$p$9233$1bEyPh))))
                                                                                           g$ls/false$9232$1bEyPh))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9234$1bEyPh)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9165$1bEyPh
                                                                                               g$p$9234$1bEyPh
                                                                                               g$n$9167$1bEyPh
                                                                                               g$ids$9168$1bEyPh)))
                                                                                          (case-lambda
                                                                                            ((g$p$9237$1bEyPh
                                                                                               g$ids$9238$1bEyPh)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9239$1bEyPh
                                                                                                   g$p$9240$1bEyPh)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9240$1bEyPh)
                                                                                                   g$ids$9239$1bEyPh)))
                                                                                              g$ids$9238$1bEyPh
                                                                                              g$p$9237$1bEyPh))))))
                                                                                     g$ls/false$9232$1bEyPh)
                                                                                   ((case-lambda
                                                                                      ((g$t$9241$1bEyPh)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9242$1bEyPh)
                                                                                           (if g$ls/false$9242$1bEyPh
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9243$1bEyPh)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7372$1bEyPh
                                                                                                        g$datum$9243$1bEyPh))
                                                                                                    g$ids$9168$1bEyPh)))
                                                                                               g$ls/false$9242$1bEyPh)
                                                                                             (g$syntax-violation$7748$1bEyPh
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9241$1bEyPh))))
                                                                                        (g$syntax-dispatch$7639$1bEyPh
                                                                                          g$t$9241$1bEyPh
                                                                                          'any))))
                                                                                    g$t$9231$1bEyPh))))
                                                                              (g$syntax-dispatch$7639$1bEyPh
                                                                                g$t$9231$1bEyPh
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9229$1bEyPh))))
                                                                    (g$syntax-dispatch$7639$1bEyPh
                                                                      g$t$9229$1bEyPh
                                                                      '()))))
                                                                g$t$9213$1bEyPh))))
                                                          (g$syntax-dispatch$7639$1bEyPh
                                                            g$t$9213$1bEyPh
                                                            '(any . any)))))
                                                      g$t$9185$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$9185$1bEyPh
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9173$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$9173$1bEyPh
                                        '(any any)))))
                                  g$t$9169$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$9169$1bEyPh
                              'any))))
                        g$p$9166$1bEyPh)))))
          (g$cvt$9165$1bEyPh g$pattern$9162$1bEyPh '0 '())))))
   (g$syntax-dispatch$7639$1bEyPh
     g$syntax-dispatch$11078$1bEyPh
     (case-lambda
       ((g$e$9259$1bEyPh g$p$9260$1bEyPh)
        (letrec* ((g$stx^$9261$1bEyPh
                    (case-lambda
                      ((g$e$9369$1bEyPh
                         g$m*$9370$1bEyPh
                         g$s*$9371$1bEyPh
                         g$ae*$9372$1bEyPh)
                       (if (if (null? g$m*$9370$1bEyPh)
                             (if (null? g$s*$9371$1bEyPh)
                               (begin '#f (null? g$ae*$9372$1bEyPh))
                               '#f)
                             '#f)
                         g$e$9369$1bEyPh
                         (g$mkstx$7349$1bEyPh
                           g$e$9369$1bEyPh
                           g$m*$9370$1bEyPh
                           g$s*$9371$1bEyPh
                           g$ae*$9372$1bEyPh)))))
                  (g$match-each$9262$1bEyPh
                    (case-lambda
                      ((g$e$9353$1bEyPh
                         g$p$9354$1bEyPh
                         g$m*$9355$1bEyPh
                         g$s*$9356$1bEyPh
                         g$ae*$9357$1bEyPh)
                       (if (pair? g$e$9353$1bEyPh)
                         ((case-lambda
                            ((g$first$9358$1bEyPh)
                             (if g$first$9358$1bEyPh
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9359$1bEyPh)
                                     (if g$rest$9359$1bEyPh
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9358$1bEyPh
                                           g$rest$9359$1bEyPh))
                                       '#f)))
                                  (g$match-each$9262$1bEyPh
                                    (cdr g$e$9353$1bEyPh)
                                    g$p$9354$1bEyPh
                                    g$m*$9355$1bEyPh
                                    g$s*$9356$1bEyPh
                                    g$ae*$9357$1bEyPh)))
                               '#f)))
                          (g$match$9268$1bEyPh
                            (car g$e$9353$1bEyPh)
                            g$p$9354$1bEyPh
                            g$m*$9355$1bEyPh
                            g$s*$9356$1bEyPh
                            g$ae*$9357$1bEyPh
                            '()))
                         (if (null? g$e$9353$1bEyPh)
                           '()
                           (if (g$stx?$7333$1bEyPh g$e$9353$1bEyPh)
                             (if (not (g$top-marked?$7304$1bEyPh
                                        g$m*$9355$1bEyPh))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7348$1bEyPh
                                        g$m*$9355$1bEyPh
                                        g$s*$9356$1bEyPh
                                        g$ae*$9357$1bEyPh
                                        g$e$9353$1bEyPh)))
                                   (case-lambda
                                     ((g$m*$9363$1bEyPh
                                        g$s*$9364$1bEyPh
                                        g$ae*$9365$1bEyPh)
                                      ((case-lambda
                                         ((g$ae*$9366$1bEyPh
                                            g$s*$9367$1bEyPh
                                            g$m*$9368$1bEyPh)
                                          (g$match-each$9262$1bEyPh
                                            (g$stx-expr$7335$1bEyPh
                                              g$e$9353$1bEyPh)
                                            g$p$9354$1bEyPh
                                            g$m*$9368$1bEyPh
                                            g$s*$9367$1bEyPh
                                            g$ae*$9366$1bEyPh)))
                                       g$ae*$9365$1bEyPh
                                       g$s*$9364$1bEyPh
                                       g$m*$9363$1bEyPh)))))
                               '#f)
                             (if (annotation? g$e$9353$1bEyPh)
                               (g$match-each$9262$1bEyPh
                                 (annotation-expression g$e$9353$1bEyPh)
                                 g$p$9354$1bEyPh
                                 g$m*$9355$1bEyPh
                                 g$s*$9356$1bEyPh
                                 g$ae*$9357$1bEyPh)
                               '#f)))))))
                  (g$match-each+$9263$1bEyPh
                    (case-lambda
                      ((g$e$9321$1bEyPh
                         g$x-pat$9322$1bEyPh
                         g$y-pat$9323$1bEyPh
                         g$z-pat$9324$1bEyPh
                         g$m*$9325$1bEyPh
                         g$s*$9326$1bEyPh
                         g$ae*$9327$1bEyPh
                         g$r$9328$1bEyPh)
                       ((letrec ((g$f$9329$1bEyPh
                                   (case-lambda
                                     ((g$e$9330$1bEyPh
                                        g$m*$9331$1bEyPh
                                        g$s*$9332$1bEyPh
                                        g$ae*$9333$1bEyPh)
                                      (if (pair? g$e$9330$1bEyPh)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9329$1bEyPh
                                               (cdr g$e$9330$1bEyPh)
                                               g$m*$9331$1bEyPh
                                               g$s*$9332$1bEyPh
                                               g$ae*$9333$1bEyPh)))
                                          (case-lambda
                                            ((g$xr*$9337$1bEyPh
                                               g$y-pat$9338$1bEyPh
                                               g$r$9339$1bEyPh)
                                             ((case-lambda
                                                ((g$r$9340$1bEyPh
                                                   g$y-pat$9341$1bEyPh
                                                   g$xr*$9342$1bEyPh)
                                                 (if g$r$9340$1bEyPh
                                                   (if (null?
                                                         g$y-pat$9341$1bEyPh)
                                                     ((case-lambda
                                                        ((g$xr$9343$1bEyPh)
                                                         (if g$xr$9343$1bEyPh
                                                           (values
                                                             (cons
                                                               g$xr$9343$1bEyPh
                                                               g$xr*$9342$1bEyPh)
                                                             g$y-pat$9341$1bEyPh
                                                             g$r$9340$1bEyPh)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9268$1bEyPh
                                                        (car g$e$9330$1bEyPh)
                                                        g$x-pat$9322$1bEyPh
                                                        g$m*$9331$1bEyPh
                                                        g$s*$9332$1bEyPh
                                                        g$ae*$9333$1bEyPh
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9341$1bEyPh)
                                                       (g$match$9268$1bEyPh
                                                         (car g$e$9330$1bEyPh)
                                                         (car g$y-pat$9341$1bEyPh)
                                                         g$m*$9331$1bEyPh
                                                         g$s*$9332$1bEyPh
                                                         g$ae*$9333$1bEyPh
                                                         g$r$9340$1bEyPh)))
                                                   (values '#f '#f '#f))))
                                              g$r$9339$1bEyPh
                                              g$y-pat$9338$1bEyPh
                                              g$xr*$9337$1bEyPh))))
                                        (if (g$stx?$7333$1bEyPh g$e$9330$1bEyPh)
                                          (if (g$top-marked?$7304$1bEyPh
                                                g$m*$9331$1bEyPh)
                                            (values
                                              '()
                                              g$y-pat$9323$1bEyPh
                                              (g$match$9268$1bEyPh
                                                g$e$9330$1bEyPh
                                                g$z-pat$9324$1bEyPh
                                                g$m*$9331$1bEyPh
                                                g$s*$9332$1bEyPh
                                                g$ae*$9333$1bEyPh
                                                g$r$9328$1bEyPh))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7348$1bEyPh
                                                   g$m*$9331$1bEyPh
                                                   g$s*$9332$1bEyPh
                                                   g$ae*$9333$1bEyPh
                                                   g$e$9330$1bEyPh)))
                                              (case-lambda
                                                ((g$m*$9347$1bEyPh
                                                   g$s*$9348$1bEyPh
                                                   g$ae*$9349$1bEyPh)
                                                 ((case-lambda
                                                    ((g$ae*$9350$1bEyPh
                                                       g$s*$9351$1bEyPh
                                                       g$m*$9352$1bEyPh)
                                                     (g$f$9329$1bEyPh
                                                       (g$stx-expr$7335$1bEyPh
                                                         g$e$9330$1bEyPh)
                                                       g$m*$9352$1bEyPh
                                                       g$s*$9351$1bEyPh
                                                       g$ae*$9350$1bEyPh)))
                                                  g$ae*$9349$1bEyPh
                                                  g$s*$9348$1bEyPh
                                                  g$m*$9347$1bEyPh)))))
                                          (if (annotation? g$e$9330$1bEyPh)
                                            (g$f$9329$1bEyPh
                                              (annotation-expression
                                                g$e$9330$1bEyPh)
                                              g$m*$9331$1bEyPh
                                              g$s*$9332$1bEyPh
                                              g$ae*$9333$1bEyPh)
                                            (values
                                              '()
                                              g$y-pat$9323$1bEyPh
                                              (g$match$9268$1bEyPh
                                                g$e$9330$1bEyPh
                                                g$z-pat$9324$1bEyPh
                                                g$m*$9331$1bEyPh
                                                g$s*$9332$1bEyPh
                                                g$ae*$9333$1bEyPh
                                                g$r$9328$1bEyPh)))))))))
                          g$f$9329$1bEyPh)
                        g$e$9321$1bEyPh
                        g$m*$9325$1bEyPh
                        g$s*$9326$1bEyPh
                        g$ae*$9327$1bEyPh))))
                  (g$match-each-any$9264$1bEyPh
                    (case-lambda
                      ((g$e$9307$1bEyPh
                         g$m*$9308$1bEyPh
                         g$s*$9309$1bEyPh
                         g$ae*$9310$1bEyPh)
                       (if (pair? g$e$9307$1bEyPh)
                         ((case-lambda
                            ((g$l$9311$1bEyPh)
                             (if g$l$9311$1bEyPh
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9261$1bEyPh
                                     (car g$e$9307$1bEyPh)
                                     g$m*$9308$1bEyPh
                                     g$s*$9309$1bEyPh
                                     g$ae*$9310$1bEyPh)
                                   g$l$9311$1bEyPh))
                               '#f)))
                          (g$match-each-any$9264$1bEyPh
                            (cdr g$e$9307$1bEyPh)
                            g$m*$9308$1bEyPh
                            g$s*$9309$1bEyPh
                            g$ae*$9310$1bEyPh))
                         (if (null? g$e$9307$1bEyPh)
                           '()
                           (if (g$stx?$7333$1bEyPh g$e$9307$1bEyPh)
                             (if (not (g$top-marked?$7304$1bEyPh
                                        g$m*$9308$1bEyPh))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7348$1bEyPh
                                        g$m*$9308$1bEyPh
                                        g$s*$9309$1bEyPh
                                        g$ae*$9310$1bEyPh
                                        g$e$9307$1bEyPh)))
                                   (case-lambda
                                     ((g$m*$9315$1bEyPh
                                        g$s*$9316$1bEyPh
                                        g$ae*$9317$1bEyPh)
                                      ((case-lambda
                                         ((g$ae*$9318$1bEyPh
                                            g$s*$9319$1bEyPh
                                            g$m*$9320$1bEyPh)
                                          (g$match-each-any$9264$1bEyPh
                                            (g$stx-expr$7335$1bEyPh
                                              g$e$9307$1bEyPh)
                                            g$m*$9320$1bEyPh
                                            g$s*$9319$1bEyPh
                                            g$ae*$9318$1bEyPh)))
                                       g$ae*$9317$1bEyPh
                                       g$s*$9316$1bEyPh
                                       g$m*$9315$1bEyPh)))))
                               '#f)
                             (if (annotation? g$e$9307$1bEyPh)
                               (g$match-each-any$9264$1bEyPh
                                 (annotation-expression g$e$9307$1bEyPh)
                                 g$m*$9308$1bEyPh
                                 g$s*$9309$1bEyPh
                                 g$ae*$9310$1bEyPh)
                               '#f)))))))
                  (g$match-empty$9265$1bEyPh
                    (case-lambda
                      ((g$p$9304$1bEyPh g$r$9305$1bEyPh)
                       (if (null? g$p$9304$1bEyPh)
                         g$r$9305$1bEyPh
                         (if (eq? g$p$9304$1bEyPh '_)
                           g$r$9305$1bEyPh
                           (if (eq? g$p$9304$1bEyPh 'any)
                             (cons '() g$r$9305$1bEyPh)
                             (if (pair? g$p$9304$1bEyPh)
                               (g$match-empty$9265$1bEyPh
                                 (car g$p$9304$1bEyPh)
                                 (g$match-empty$9265$1bEyPh
                                   (cdr g$p$9304$1bEyPh)
                                   g$r$9305$1bEyPh))
                               (if (eq? g$p$9304$1bEyPh 'each-any)
                                 (cons '() g$r$9305$1bEyPh)
                                 ((case-lambda
                                    ((g$t$9306$1bEyPh)
                                     (if (memv g$t$9306$1bEyPh '(each))
                                       (g$match-empty$9265$1bEyPh
                                         (vector-ref g$p$9304$1bEyPh '1)
                                         g$r$9305$1bEyPh)
                                       (if (memv g$t$9306$1bEyPh '(each+))
                                         (g$match-empty$9265$1bEyPh
                                           (vector-ref g$p$9304$1bEyPh '1)
                                           (g$match-empty$9265$1bEyPh
                                             (reverse
                                               (vector-ref g$p$9304$1bEyPh '2))
                                             (g$match-empty$9265$1bEyPh
                                               (vector-ref g$p$9304$1bEyPh '3)
                                               g$r$9305$1bEyPh)))
                                         (if (memv
                                               g$t$9306$1bEyPh
                                               '(free-id atom))
                                           g$r$9305$1bEyPh
                                           (if (memv
                                                 g$t$9306$1bEyPh
                                                 '(scheme-id atom))
                                             g$r$9305$1bEyPh
                                             (if (memv
                                                   g$t$9306$1bEyPh
                                                   '(vector))
                                               (g$match-empty$9265$1bEyPh
                                                 (vector-ref g$p$9304$1bEyPh '1)
                                                 g$r$9305$1bEyPh)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9304$1bEyPh))))))))
                                  (vector-ref g$p$9304$1bEyPh '0))))))))))
                  (g$combine$9266$1bEyPh
                    (case-lambda
                      ((g$r*$9302$1bEyPh g$r$9303$1bEyPh)
                       (if (null? (car g$r*$9302$1bEyPh))
                         g$r$9303$1bEyPh
                         (cons
                           (map car g$r*$9302$1bEyPh)
                           (g$combine$9266$1bEyPh
                             (map cdr g$r*$9302$1bEyPh)
                             g$r$9303$1bEyPh))))))
                  (g$match*$9267$1bEyPh
                    (case-lambda
                      ((g$e$9284$1bEyPh
                         g$p$9285$1bEyPh
                         g$m*$9286$1bEyPh
                         g$s*$9287$1bEyPh
                         g$ae*$9288$1bEyPh
                         g$r$9289$1bEyPh)
                       (if (null? g$p$9285$1bEyPh)
                         (if (null? g$e$9284$1bEyPh)
                           (begin '#f g$r$9289$1bEyPh)
                           '#f)
                         (if (pair? g$p$9285$1bEyPh)
                           (if (pair? g$e$9284$1bEyPh)
                             (begin
                               '#f
                               (g$match$9268$1bEyPh
                                 (car g$e$9284$1bEyPh)
                                 (car g$p$9285$1bEyPh)
                                 g$m*$9286$1bEyPh
                                 g$s*$9287$1bEyPh
                                 g$ae*$9288$1bEyPh
                                 (g$match$9268$1bEyPh
                                   (cdr g$e$9284$1bEyPh)
                                   (cdr g$p$9285$1bEyPh)
                                   g$m*$9286$1bEyPh
                                   g$s*$9287$1bEyPh
                                   g$ae*$9288$1bEyPh
                                   g$r$9289$1bEyPh)))
                             '#f)
                           (if (eq? g$p$9285$1bEyPh 'each-any)
                             ((case-lambda
                                ((g$l$9290$1bEyPh)
                                 (if g$l$9290$1bEyPh
                                   (begin
                                     '#f
                                     (cons g$l$9290$1bEyPh g$r$9289$1bEyPh))
                                   '#f)))
                              (g$match-each-any$9264$1bEyPh
                                g$e$9284$1bEyPh
                                g$m*$9286$1bEyPh
                                g$s*$9287$1bEyPh
                                g$ae*$9288$1bEyPh))
                             ((case-lambda
                                ((g$t$9291$1bEyPh)
                                 (if (memv g$t$9291$1bEyPh '(each))
                                   (if (null? g$e$9284$1bEyPh)
                                     (g$match-empty$9265$1bEyPh
                                       (vector-ref g$p$9285$1bEyPh '1)
                                       g$r$9289$1bEyPh)
                                     ((case-lambda
                                        ((g$r*$9292$1bEyPh)
                                         (if g$r*$9292$1bEyPh
                                           (begin
                                             '#f
                                             (g$combine$9266$1bEyPh
                                               g$r*$9292$1bEyPh
                                               g$r$9289$1bEyPh))
                                           '#f)))
                                      (g$match-each$9262$1bEyPh
                                        g$e$9284$1bEyPh
                                        (vector-ref g$p$9285$1bEyPh '1)
                                        g$m*$9286$1bEyPh
                                        g$s*$9287$1bEyPh
                                        g$ae*$9288$1bEyPh)))
                                   (if (memv g$t$9291$1bEyPh '(free-id))
                                     (if (symbol? g$e$9284$1bEyPh)
                                       (if (g$top-marked?$7304$1bEyPh
                                             g$m*$9286$1bEyPh)
                                         (if (g$free-id=?$7365$1bEyPh
                                               (g$stx^$9261$1bEyPh
                                                 g$e$9284$1bEyPh
                                                 g$m*$9286$1bEyPh
                                                 g$s*$9287$1bEyPh
                                                 g$ae*$9288$1bEyPh)
                                               (vector-ref g$p$9285$1bEyPh '1))
                                           (begin '#f g$r$9289$1bEyPh)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (memv g$t$9291$1bEyPh '(scheme-id))
                                       (if (symbol? g$e$9284$1bEyPh)
                                         (if (g$top-marked?$7304$1bEyPh
                                               g$m*$9286$1bEyPh)
                                           (if (g$free-id=?$7365$1bEyPh
                                                 (g$stx^$9261$1bEyPh
                                                   g$e$9284$1bEyPh
                                                   g$m*$9286$1bEyPh
                                                   g$s*$9287$1bEyPh
                                                   g$ae*$9288$1bEyPh)
                                                 (g$scheme-stx$7582$1bEyPh
                                                   (vector-ref
                                                     g$p$9285$1bEyPh
                                                     '1)))
                                             (begin '#f g$r$9289$1bEyPh)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (memv g$t$9291$1bEyPh '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9263$1bEyPh
                                                g$e$9284$1bEyPh
                                                (vector-ref g$p$9285$1bEyPh '1)
                                                (vector-ref g$p$9285$1bEyPh '2)
                                                (vector-ref g$p$9285$1bEyPh '3)
                                                g$m*$9286$1bEyPh
                                                g$s*$9287$1bEyPh
                                                g$ae*$9288$1bEyPh
                                                g$r$9289$1bEyPh)))
                                           (case-lambda
                                             ((g$xr*$9296$1bEyPh
                                                g$y-pat$9297$1bEyPh
                                                g$r$9298$1bEyPh)
                                              ((case-lambda
                                                 ((g$r$9299$1bEyPh
                                                    g$y-pat$9300$1bEyPh
                                                    g$xr*$9301$1bEyPh)
                                                  (if g$r$9299$1bEyPh
                                                    (if (null?
                                                          g$y-pat$9300$1bEyPh)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9301$1bEyPh)
                                                          (g$match-empty$9265$1bEyPh
                                                            (vector-ref
                                                              g$p$9285$1bEyPh
                                                              '1)
                                                            g$r$9299$1bEyPh)
                                                          (g$combine$9266$1bEyPh
                                                            g$xr*$9301$1bEyPh
                                                            g$r$9299$1bEyPh)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9298$1bEyPh
                                               g$y-pat$9297$1bEyPh
                                               g$xr*$9296$1bEyPh))))
                                         (if (memv g$t$9291$1bEyPh '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9285$1bEyPh '1)
                                                 (g$strip$7371$1bEyPh
                                                   g$e$9284$1bEyPh
                                                   g$m*$9286$1bEyPh))
                                             (begin '#f g$r$9289$1bEyPh)
                                             '#f)
                                           (if (memv g$t$9291$1bEyPh '(vector))
                                             (if (vector? g$e$9284$1bEyPh)
                                               (begin
                                                 '#f
                                                 (g$match$9268$1bEyPh
                                                   (vector->list
                                                     g$e$9284$1bEyPh)
                                                   (vector-ref
                                                     g$p$9285$1bEyPh
                                                     '1)
                                                   g$m*$9286$1bEyPh
                                                   g$s*$9287$1bEyPh
                                                   g$ae*$9288$1bEyPh
                                                   g$r$9289$1bEyPh))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9285$1bEyPh)))))))))
                              (vector-ref g$p$9285$1bEyPh '0))))))))
                  (g$match$9268$1bEyPh
                    (case-lambda
                      ((g$e$9269$1bEyPh
                         g$p$9270$1bEyPh
                         g$m*$9271$1bEyPh
                         g$s*$9272$1bEyPh
                         g$ae*$9273$1bEyPh
                         g$r$9274$1bEyPh)
                       (if (not g$r$9274$1bEyPh)
                         '#f
                         (if (eq? g$p$9270$1bEyPh '_)
                           g$r$9274$1bEyPh
                           (if (eq? g$p$9270$1bEyPh 'any)
                             (cons
                               (g$stx^$9261$1bEyPh
                                 g$e$9269$1bEyPh
                                 g$m*$9271$1bEyPh
                                 g$s*$9272$1bEyPh
                                 g$ae*$9273$1bEyPh)
                               g$r$9274$1bEyPh)
                             (if (g$stx?$7333$1bEyPh g$e$9269$1bEyPh)
                               (if (not (g$top-marked?$7304$1bEyPh
                                          g$m*$9271$1bEyPh))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7348$1bEyPh
                                          g$m*$9271$1bEyPh
                                          g$s*$9272$1bEyPh
                                          g$ae*$9273$1bEyPh
                                          g$e$9269$1bEyPh)))
                                     (case-lambda
                                       ((g$m*$9278$1bEyPh
                                          g$s*$9279$1bEyPh
                                          g$ae*$9280$1bEyPh)
                                        ((case-lambda
                                           ((g$ae*$9281$1bEyPh
                                              g$s*$9282$1bEyPh
                                              g$m*$9283$1bEyPh)
                                            (g$match$9268$1bEyPh
                                              (g$stx-expr$7335$1bEyPh
                                                g$e$9269$1bEyPh)
                                              g$p$9270$1bEyPh
                                              g$m*$9283$1bEyPh
                                              g$s*$9282$1bEyPh
                                              g$ae*$9281$1bEyPh
                                              g$r$9274$1bEyPh)))
                                         g$ae*$9280$1bEyPh
                                         g$s*$9279$1bEyPh
                                         g$m*$9278$1bEyPh)))))
                                 '#f)
                               (if (annotation? g$e$9269$1bEyPh)
                                 (g$match$9268$1bEyPh
                                   (annotation-expression g$e$9269$1bEyPh)
                                   g$p$9270$1bEyPh
                                   g$m*$9271$1bEyPh
                                   g$s*$9272$1bEyPh
                                   g$ae*$9273$1bEyPh
                                   g$r$9274$1bEyPh)
                                 (g$match*$9267$1bEyPh
                                   g$e$9269$1bEyPh
                                   g$p$9270$1bEyPh
                                   g$m*$9271$1bEyPh
                                   g$s*$9272$1bEyPh
                                   g$ae*$9273$1bEyPh
                                   g$r$9274$1bEyPh))))))))))
          (g$match$9268$1bEyPh
            g$e$9259$1bEyPh
            g$p$9260$1bEyPh
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7640$1bEyPh
     g$ellipsis?$11079$1bEyPh
     (case-lambda
       ((g$x$9373$1bEyPh)
        (if (g$id?$7361$1bEyPh g$x$9373$1bEyPh)
          (begin
            '#f
            (g$free-id=?$7365$1bEyPh
              g$x$9373$1bEyPh
              (g$scheme-stx$7582$1bEyPh '...)))
          '#f))))
   (g$underscore?$7641$1bEyPh
     g$underscore?$11080$1bEyPh
     (case-lambda
       ((g$x$9374$1bEyPh)
        (if (g$id?$7361$1bEyPh g$x$9374$1bEyPh)
          (begin
            '#f
            (g$free-id=?$7365$1bEyPh
              g$x$9374$1bEyPh
              (g$scheme-stx$7582$1bEyPh '_)))
          '#f))))
   (g$verify-literals$7642$1bEyPh
     g$verify-literals$11081$1bEyPh
     (case-lambda
       ((g$lits$9375$1bEyPh g$expr$9376$1bEyPh)
        (for-each
          (case-lambda
            ((g$x$9377$1bEyPh)
             (if ((case-lambda
                    ((g$t$9378$1bEyPh)
                     (if g$t$9378$1bEyPh
                       g$t$9378$1bEyPh
                       ((case-lambda
                          ((g$t$9379$1bEyPh)
                           (if g$t$9379$1bEyPh
                             g$t$9379$1bEyPh
                             (begin
                               '#f
                               (g$underscore?$7641$1bEyPh g$x$9377$1bEyPh)))))
                        (g$ellipsis?$7640$1bEyPh g$x$9377$1bEyPh)))))
                  (not (g$id?$7361$1bEyPh g$x$9377$1bEyPh)))
               (g$syntax-violation$7748$1bEyPh
                 '#f
                 '"invalid literal"
                 g$expr$9376$1bEyPh
                 g$x$9377$1bEyPh)
               (void))))
          g$lits$9375$1bEyPh))))
   (g$syntax-case-transformer$7643$1bEyPh
     g$syntax-case-transformer$11082$1bEyPh
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9380$1bEyPh
                     (case-lambda
                       ((g$pvars$9437$1bEyPh
                          g$expr$9438$1bEyPh
                          g$y$9439$1bEyPh
                          g$r$9440$1bEyPh
                          g$mr$9441$1bEyPh)
                        ((case-lambda
                           ((g$ids$9442$1bEyPh g$levels$9443$1bEyPh)
                            ((case-lambda
                               ((g$labels$9444$1bEyPh g$new-vars$9445$1bEyPh)
                                ((case-lambda
                                   ((g$body$9446$1bEyPh)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7292$1bEyPh
                                        '#f
                                        g$new-vars$9445$1bEyPh
                                        g$body$9446$1bEyPh)
                                      g$y$9439$1bEyPh)))
                                 (g$chi-expr$7657$1bEyPh
                                   (g$add-subst$7351$1bEyPh
                                     (g$make-full-rib$7329$1bEyPh
                                       g$ids$9442$1bEyPh
                                       g$labels$9444$1bEyPh)
                                     g$expr$9438$1bEyPh)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9447$1bEyPh
                                               g$var$9448$1bEyPh
                                               g$level$9449$1bEyPh)
                                             (cons
                                               g$label$9447$1bEyPh
                                               (g$make-binding$7377$1bEyPh
                                                 'syntax
                                                 (cons
                                                   g$var$9448$1bEyPh
                                                   g$level$9449$1bEyPh)))))
                                          g$labels$9444$1bEyPh
                                          g$new-vars$9445$1bEyPh
                                          (map cdr g$pvars$9437$1bEyPh))
                                     g$r$9440$1bEyPh)
                                   g$mr$9441$1bEyPh))))
                             (map g$gen-label$7307$1bEyPh g$ids$9442$1bEyPh)
                             (map g$gen-lexical$7305$1bEyPh
                                  g$ids$9442$1bEyPh))))
                         (map car g$pvars$9437$1bEyPh)
                         (map cdr g$pvars$9437$1bEyPh)))))
                   (g$invalid-ids-error$9381$1bEyPh
                     (case-lambda
                       ((g$id*$9431$1bEyPh g$e$9432$1bEyPh g$class$9433$1bEyPh)
                        ((letrec ((g$find$9434$1bEyPh
                                    (case-lambda
                                      ((g$id*$9435$1bEyPh g$ok*$9436$1bEyPh)
                                       (if (null? g$id*$9435$1bEyPh)
                                         (g$syntax-violation$7748$1bEyPh
                                           '#f
                                           '"invalid syntax"
                                           g$e$9432$1bEyPh)
                                         (if (g$id?$7361$1bEyPh
                                               (car g$id*$9435$1bEyPh))
                                           (if (g$bound-id-member?$7368$1bEyPh
                                                 (car g$id*$9435$1bEyPh)
                                                 g$ok*$9436$1bEyPh)
                                             (g$syntax-error$7745$1bEyPh
                                               (car g$id*$9435$1bEyPh)
                                               '"duplicate "
                                               g$class$9433$1bEyPh)
                                             (g$find$9434$1bEyPh
                                               (cdr g$id*$9435$1bEyPh)
                                               (cons
                                                 (car g$id*$9435$1bEyPh)
                                                 g$ok*$9436$1bEyPh)))
                                           (g$syntax-error$7745$1bEyPh
                                             (car g$id*$9435$1bEyPh)
                                             '"invalid "
                                             g$class$9433$1bEyPh)))))))
                           g$find$9434$1bEyPh)
                         g$id*$9431$1bEyPh
                         '()))))
                   (g$gen-clause$9382$1bEyPh
                     (case-lambda
                       ((g$x$9411$1bEyPh
                          g$keys$9412$1bEyPh
                          g$clauses$9413$1bEyPh
                          g$r$9414$1bEyPh
                          g$mr$9415$1bEyPh
                          g$pat$9416$1bEyPh
                          g$fender$9417$1bEyPh
                          g$expr$9418$1bEyPh)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7638$1bEyPh
                               g$pat$9416$1bEyPh
                               g$keys$9412$1bEyPh)))
                          (case-lambda
                            ((g$p$9421$1bEyPh g$pvars$9422$1bEyPh)
                             ((case-lambda
                                ((g$pvars$9423$1bEyPh g$p$9424$1bEyPh)
                                 (if (not (g$distinct-bound-ids?$7367$1bEyPh
                                            (map car g$pvars$9423$1bEyPh)))
                                   (g$invalid-ids-error$9381$1bEyPh
                                     (map car g$pvars$9423$1bEyPh)
                                     g$pat$9416$1bEyPh
                                     '"pattern variable")
                                   (if (not (g$for-all$5491$1bEyPh
                                              (case-lambda
                                                ((g$x$9425$1bEyPh)
                                                 (not (g$ellipsis?$7640$1bEyPh
                                                        (car g$x$9425$1bEyPh)))))
                                              g$pvars$9423$1bEyPh))
                                     (g$syntax-violation$7748$1bEyPh
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9416$1bEyPh)
                                     ((case-lambda
                                        ((g$y$9426$1bEyPh)
                                         ((case-lambda
                                            ((g$test$9427$1bEyPh)
                                             ((case-lambda
                                                ((g$conseq$9428$1bEyPh)
                                                 ((case-lambda
                                                    ((g$altern$9429$1bEyPh)
                                                     (list
                                                       (g$build-lambda$7292$1bEyPh
                                                         '#f
                                                         (list g$y$9426$1bEyPh)
                                                         (list
                                                           'if
                                                           g$test$9427$1bEyPh
                                                           g$conseq$9428$1bEyPh
                                                           g$altern$9429$1bEyPh))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9411$1bEyPh
                                                         (list
                                                           'quote
                                                           g$p$9424$1bEyPh)))))
                                                  (g$gen-syntax-case$9383$1bEyPh
                                                    g$x$9411$1bEyPh
                                                    g$keys$9412$1bEyPh
                                                    g$clauses$9413$1bEyPh
                                                    g$r$9414$1bEyPh
                                                    g$mr$9415$1bEyPh))))
                                              (g$build-dispatch-call$9380$1bEyPh
                                                g$pvars$9423$1bEyPh
                                                g$expr$9418$1bEyPh
                                                g$y$9426$1bEyPh
                                                g$r$9414$1bEyPh
                                                g$mr$9415$1bEyPh))))
                                          (if (eq? g$fender$9417$1bEyPh '#t)
                                            g$y$9426$1bEyPh
                                            ((case-lambda
                                               ((g$call$9430$1bEyPh)
                                                (list
                                                  'if
                                                  g$y$9426$1bEyPh
                                                  g$call$9430$1bEyPh
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9380$1bEyPh
                                               g$pvars$9423$1bEyPh
                                               g$fender$9417$1bEyPh
                                               g$y$9426$1bEyPh
                                               g$r$9414$1bEyPh
                                               g$mr$9415$1bEyPh))))))
                                      (g$gen-lexical$7305$1bEyPh 'tmp))))))
                              g$pvars$9422$1bEyPh
                              g$p$9421$1bEyPh)))))))
                   (g$gen-syntax-case$9383$1bEyPh
                     (case-lambda
                       ((g$x$9394$1bEyPh
                          g$keys$9395$1bEyPh
                          g$clauses$9396$1bEyPh
                          g$r$9397$1bEyPh
                          g$mr$9398$1bEyPh)
                        (if (null? g$clauses$9396$1bEyPh)
                          (list '(primitive syntax-error) g$x$9394$1bEyPh)
                          ((case-lambda
                             ((g$t$9399$1bEyPh)
                              ((case-lambda
                                 ((g$ls/false$9400$1bEyPh)
                                  (if g$ls/false$9400$1bEyPh
                                    (apply
                                      (case-lambda
                                        ((g$pat$9401$1bEyPh g$expr$9402$1bEyPh)
                                         (if (if (g$id?$7361$1bEyPh
                                                   g$pat$9401$1bEyPh)
                                               (if (not (g$bound-id-member?$7368$1bEyPh
                                                          g$pat$9401$1bEyPh
                                                          g$keys$9395$1bEyPh))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7640$1bEyPh
                                                          g$pat$9401$1bEyPh)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7365$1bEyPh
                                                 g$pat$9401$1bEyPh
                                                 (g$scheme-stx$7582$1bEyPh '_))
                                             (g$chi-expr$7657$1bEyPh
                                               g$expr$9402$1bEyPh
                                               g$r$9397$1bEyPh
                                               g$mr$9398$1bEyPh)
                                             ((case-lambda
                                                ((g$lab$9403$1bEyPh
                                                   g$lex$9404$1bEyPh)
                                                 ((case-lambda
                                                    ((g$body$9405$1bEyPh)
                                                     (list
                                                       (g$build-lambda$7292$1bEyPh
                                                         '#f
                                                         (list
                                                           g$lex$9404$1bEyPh)
                                                         g$body$9405$1bEyPh)
                                                       g$x$9394$1bEyPh)))
                                                  (g$chi-expr$7657$1bEyPh
                                                    (g$add-subst$7351$1bEyPh
                                                      (g$make-full-rib$7329$1bEyPh
                                                        (list g$pat$9401$1bEyPh)
                                                        (list
                                                          g$lab$9403$1bEyPh))
                                                      g$expr$9402$1bEyPh)
                                                    (cons
                                                      (cons
                                                        g$lab$9403$1bEyPh
                                                        (g$make-binding$7377$1bEyPh
                                                          'syntax
                                                          (cons
                                                            g$lex$9404$1bEyPh
                                                            '0)))
                                                      g$r$9397$1bEyPh)
                                                    g$mr$9398$1bEyPh))))
                                              (g$gen-label$7307$1bEyPh
                                                g$pat$9401$1bEyPh)
                                              (g$gen-lexical$7305$1bEyPh
                                                g$pat$9401$1bEyPh)))
                                           (g$gen-clause$9382$1bEyPh
                                             g$x$9394$1bEyPh
                                             g$keys$9395$1bEyPh
                                             (cdr g$clauses$9396$1bEyPh)
                                             g$r$9397$1bEyPh
                                             g$mr$9398$1bEyPh
                                             g$pat$9401$1bEyPh
                                             '#t
                                             g$expr$9402$1bEyPh))))
                                      g$ls/false$9400$1bEyPh)
                                    ((case-lambda
                                       ((g$t$9406$1bEyPh)
                                        ((case-lambda
                                           ((g$ls/false$9407$1bEyPh)
                                            (if g$ls/false$9407$1bEyPh
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9408$1bEyPh
                                                     g$fender$9409$1bEyPh
                                                     g$expr$9410$1bEyPh)
                                                   (g$gen-clause$9382$1bEyPh
                                                     g$x$9394$1bEyPh
                                                     g$keys$9395$1bEyPh
                                                     (cdr g$clauses$9396$1bEyPh)
                                                     g$r$9397$1bEyPh
                                                     g$mr$9398$1bEyPh
                                                     g$pat$9408$1bEyPh
                                                     g$fender$9409$1bEyPh
                                                     g$expr$9410$1bEyPh)))
                                                g$ls/false$9407$1bEyPh)
                                              (g$syntax-violation$7748$1bEyPh
                                                '#f
                                                '"invalid syntax"
                                                g$t$9406$1bEyPh))))
                                         (g$syntax-dispatch$7639$1bEyPh
                                           g$t$9406$1bEyPh
                                           '(any any any)))))
                                     g$t$9399$1bEyPh))))
                               (g$syntax-dispatch$7639$1bEyPh
                                 g$t$9399$1bEyPh
                                 '(any any)))))
                           (car g$clauses$9396$1bEyPh)))))))
           (case-lambda
             ((g$e$9384$1bEyPh g$r$9385$1bEyPh g$mr$9386$1bEyPh)
              ((case-lambda
                 ((g$t$9387$1bEyPh)
                  ((case-lambda
                     ((g$ls/false$9388$1bEyPh)
                      (if g$ls/false$9388$1bEyPh
                        (apply
                          (case-lambda
                            ((g$expr$9389$1bEyPh
                               g$keys$9390$1bEyPh
                               g$clauses$9391$1bEyPh)
                             (begin
                               (g$verify-literals$7642$1bEyPh
                                 g$keys$9390$1bEyPh
                                 g$e$9384$1bEyPh)
                               ((case-lambda
                                  ((g$x$9392$1bEyPh)
                                   ((case-lambda
                                      ((g$body$9393$1bEyPh)
                                       (list
                                         (g$build-lambda$7292$1bEyPh
                                           '#f
                                           (list g$x$9392$1bEyPh)
                                           g$body$9393$1bEyPh)
                                         (g$chi-expr$7657$1bEyPh
                                           g$expr$9389$1bEyPh
                                           g$r$9385$1bEyPh
                                           g$mr$9386$1bEyPh))))
                                    (g$gen-syntax-case$9383$1bEyPh
                                      g$x$9392$1bEyPh
                                      g$keys$9390$1bEyPh
                                      g$clauses$9391$1bEyPh
                                      g$r$9385$1bEyPh
                                      g$mr$9386$1bEyPh))))
                                (g$gen-lexical$7305$1bEyPh 'tmp)))))
                          g$ls/false$9388$1bEyPh)
                        (g$syntax-violation$7748$1bEyPh
                          '#f
                          '"invalid syntax"
                          g$t$9387$1bEyPh))))
                   (g$syntax-dispatch$7639$1bEyPh
                     g$t$9387$1bEyPh
                     '(_ any each-any . each-any)))))
               g$e$9384$1bEyPh))))))))
   (g$ellipsis-map$7644$1bEyPh
     g$ellipsis-map$11083$1bEyPh
     (case-lambda
       ((g$proc$9450$1bEyPh g$ls$9451$1bEyPh . g$ls*$9452$1bEyPh)
        (letrec* ((g$who$9453$1bEyPh '...))
          (begin
            (if (not (list? g$ls$9451$1bEyPh))
              (assertion-violation
                g$who$9453$1bEyPh
                '"not a list"
                g$ls$9451$1bEyPh)
              (void))
            (if (not (null? g$ls*$9452$1bEyPh))
              ((case-lambda
                 ((g$n$9454$1bEyPh)
                  (for-each
                    (case-lambda
                      ((g$x$9455$1bEyPh)
                       (begin
                         (if (not (list? g$x$9455$1bEyPh))
                           (assertion-violation
                             g$who$9453$1bEyPh
                             '"not a list"
                             g$x$9455$1bEyPh)
                           (void))
                         (if (not (= (length g$x$9455$1bEyPh) g$n$9454$1bEyPh))
                           (assertion-violation
                             g$who$9453$1bEyPh
                             '"length mismatch"
                             g$ls$9451$1bEyPh
                             g$x$9455$1bEyPh)
                           (void)))))
                    g$ls*$9452$1bEyPh)))
               (length g$ls$9451$1bEyPh))
              (void))
            (apply
              map
              g$proc$9450$1bEyPh
              g$ls$9451$1bEyPh
              g$ls*$9452$1bEyPh))))))
   (g$syntax-transformer$7645$1bEyPh
     g$syntax-transformer$11084$1bEyPh
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9456$1bEyPh
                     (case-lambda
                       ((g$src$9516$1bEyPh
                          g$e$9517$1bEyPh
                          g$r$9518$1bEyPh
                          g$maps$9519$1bEyPh
                          g$ellipsis?$9520$1bEyPh
                          g$vec?$9521$1bEyPh)
                        ((case-lambda
                           ((g$t$9522$1bEyPh)
                            ((case-lambda
                               ((g$ls/false$9523$1bEyPh)
                                (if (if g$ls/false$9523$1bEyPh
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9524$1bEyPh)
                                             (g$ellipsis?$9520$1bEyPh
                                               g$dots$9524$1bEyPh)))
                                          g$ls/false$9523$1bEyPh))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9525$1bEyPh)
                                       (g$syntax-violation$7748$1bEyPh
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9516$1bEyPh)))
                                    g$ls/false$9523$1bEyPh)
                                  ((case-lambda
                                     ((g$t$9526$1bEyPh)
                                      ((case-lambda
                                         ((g$ls/false$9527$1bEyPh)
                                          (if (if g$ls/false$9527$1bEyPh
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9528$1bEyPh)
                                                       (g$id?$7361$1bEyPh
                                                         g$id$9528$1bEyPh)))
                                                    g$ls/false$9527$1bEyPh))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9529$1bEyPh)
                                                 ((case-lambda
                                                    ((g$label$9530$1bEyPh)
                                                     ((case-lambda
                                                        ((g$b$9531$1bEyPh)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7378$1bEyPh
                                                                        g$b$9531$1bEyPh)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9534$1bEyPh)
                                                                        (g$gen-ref$9457$1bEyPh
                                                                          g$src$9516$1bEyPh
                                                                          (car g$var.lev$9534$1bEyPh)
                                                                          (cdr g$var.lev$9534$1bEyPh)
                                                                          g$maps$9519$1bEyPh)))
                                                                     (g$binding-value$7379$1bEyPh
                                                                       g$b$9531$1bEyPh))))
                                                                 (case-lambda
                                                                   ((g$var$9535$1bEyPh
                                                                      g$maps$9536$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$maps$9537$1bEyPh
                                                                          g$var$9538$1bEyPh)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9538$1bEyPh)
                                                                          g$maps$9537$1bEyPh)))
                                                                     g$maps$9536$1bEyPh
                                                                     g$var$9535$1bEyPh))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9517$1bEyPh)
                                                                 g$maps$9519$1bEyPh)))))))
                                                      (g$label->binding$7376$1bEyPh
                                                        g$label$9530$1bEyPh
                                                        g$r$9518$1bEyPh))))
                                                  (g$id->label$7374$1bEyPh
                                                    g$e$9517$1bEyPh))))
                                              g$ls/false$9527$1bEyPh)
                                            ((case-lambda
                                               ((g$t$9539$1bEyPh)
                                                ((case-lambda
                                                   ((g$ls/false$9540$1bEyPh)
                                                    (if (if g$ls/false$9540$1bEyPh
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9541$1bEyPh
                                                                   g$e$9542$1bEyPh)
                                                                 (g$ellipsis?$9520$1bEyPh
                                                                   g$dots$9541$1bEyPh)))
                                                              g$ls/false$9540$1bEyPh))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9543$1bEyPh
                                                             g$e$9544$1bEyPh)
                                                           (if g$vec?$9521$1bEyPh
                                                             (g$syntax-violation$7748$1bEyPh
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9516$1bEyPh)
                                                             (g$gen-syntax$9456$1bEyPh
                                                               g$src$9516$1bEyPh
                                                               g$e$9544$1bEyPh
                                                               g$r$9518$1bEyPh
                                                               g$maps$9519$1bEyPh
                                                               (case-lambda
                                                                 ((g$x$9545$1bEyPh)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9540$1bEyPh)
                                                      ((case-lambda
                                                         ((g$t$9546$1bEyPh)
                                                          ((case-lambda
                                                             ((g$ls/false$9547$1bEyPh)
                                                              (if (if g$ls/false$9547$1bEyPh
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9548$1bEyPh
                                                                             g$dots$9549$1bEyPh
                                                                             g$y$9550$1bEyPh)
                                                                           (g$ellipsis?$9520$1bEyPh
                                                                             g$dots$9549$1bEyPh)))
                                                                        g$ls/false$9547$1bEyPh))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9551$1bEyPh
                                                                       g$dots$9552$1bEyPh
                                                                       g$y$9553$1bEyPh)
                                                                     ((letrec ((g$f$9554$1bEyPh
                                                                                 (case-lambda
                                                                                   ((g$y$9555$1bEyPh
                                                                                      g$k$9556$1bEyPh)
                                                                                    ((case-lambda
                                                                                       ((g$t$9557$1bEyPh)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9558$1bEyPh)
                                                                                            (if g$ls/false$9558$1bEyPh
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9556$1bEyPh
                                                                                                     g$maps$9519$1bEyPh)))
                                                                                                g$ls/false$9558$1bEyPh)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9559$1bEyPh)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9560$1bEyPh)
                                                                                                      (if (if g$ls/false$9560$1bEyPh
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9561$1bEyPh
                                                                                                                     g$y$9562$1bEyPh)
                                                                                                                   (g$ellipsis?$9520$1bEyPh
                                                                                                                     g$dots$9561$1bEyPh)))
                                                                                                                g$ls/false$9560$1bEyPh))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9563$1bEyPh
                                                                                                               g$y$9564$1bEyPh)
                                                                                                             (g$f$9554$1bEyPh
                                                                                                               g$y$9564$1bEyPh
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9565$1bEyPh)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9556$1bEyPh
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9565$1bEyPh))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9568$1bEyPh
                                                                                                                         g$maps$9569$1bEyPh)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9570$1bEyPh
                                                                                                                             g$x$9571$1bEyPh)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9570$1bEyPh))
                                                                                                                             (g$syntax-violation$7748$1bEyPh
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9516$1bEyPh)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9459$1bEyPh
                                                                                                                                 g$x$9571$1bEyPh
                                                                                                                                 (car g$maps$9570$1bEyPh))
                                                                                                                               (cdr g$maps$9570$1bEyPh)))))
                                                                                                                        g$maps$9569$1bEyPh
                                                                                                                        g$x$9568$1bEyPh)))))))))
                                                                                                          g$ls/false$9560$1bEyPh)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9572$1bEyPh)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9573$1bEyPh)
                                                                                                                (if g$ls/false$9573$1bEyPh
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9456$1bEyPh
                                                                                                                              g$src$9516$1bEyPh
                                                                                                                              g$y$9555$1bEyPh
                                                                                                                              g$r$9518$1bEyPh
                                                                                                                              g$maps$9519$1bEyPh
                                                                                                                              g$ellipsis?$9520$1bEyPh
                                                                                                                              g$vec?$9521$1bEyPh)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9576$1bEyPh
                                                                                                                              g$maps$9577$1bEyPh)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9578$1bEyPh
                                                                                                                                  g$y$9579$1bEyPh)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9556$1bEyPh
                                                                                                                                       g$maps$9578$1bEyPh)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9582$1bEyPh
                                                                                                                                       g$maps$9583$1bEyPh)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9584$1bEyPh
                                                                                                                                           g$x$9585$1bEyPh)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9458$1bEyPh
                                                                                                                                             g$x$9585$1bEyPh
                                                                                                                                             g$y$9579$1bEyPh)
                                                                                                                                           g$maps$9584$1bEyPh)))
                                                                                                                                      g$maps$9583$1bEyPh
                                                                                                                                      g$x$9582$1bEyPh))))))
                                                                                                                             g$maps$9577$1bEyPh
                                                                                                                             g$y$9576$1bEyPh))))))
                                                                                                                    g$ls/false$9573$1bEyPh)
                                                                                                                  (g$syntax-violation$7748$1bEyPh
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9572$1bEyPh))))
                                                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                                                               g$t$9572$1bEyPh
                                                                                                               '_))))
                                                                                                         g$t$9559$1bEyPh))))
                                                                                                   (g$syntax-dispatch$7639$1bEyPh
                                                                                                     g$t$9559$1bEyPh
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9557$1bEyPh))))
                                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                                           g$t$9557$1bEyPh
                                                                                           '()))))
                                                                                     g$y$9555$1bEyPh)))))
                                                                        g$f$9554$1bEyPh)
                                                                      g$y$9553$1bEyPh
                                                                      (case-lambda
                                                                        ((g$maps$9586$1bEyPh)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9456$1bEyPh
                                                                                g$src$9516$1bEyPh
                                                                                g$x$9551$1bEyPh
                                                                                g$r$9518$1bEyPh
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9586$1bEyPh)
                                                                                g$ellipsis?$9520$1bEyPh
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9589$1bEyPh
                                                                                g$maps$9590$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$maps$9591$1bEyPh
                                                                                    g$x$9592$1bEyPh)
                                                                                  (if (null?
                                                                                        (car g$maps$9591$1bEyPh))
                                                                                    (g$syntax-violation$7748$1bEyPh
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9516$1bEyPh)
                                                                                    (values
                                                                                      (g$gen-map$9460$1bEyPh
                                                                                        g$x$9592$1bEyPh
                                                                                        (car g$maps$9591$1bEyPh))
                                                                                      (cdr g$maps$9591$1bEyPh)))))
                                                                               g$maps$9590$1bEyPh
                                                                               g$x$9589$1bEyPh)))))))))
                                                                  g$ls/false$9547$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$t$9593$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9594$1bEyPh)
                                                                        (if g$ls/false$9594$1bEyPh
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9595$1bEyPh
                                                                                 g$y$9596$1bEyPh)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9456$1bEyPh
                                                                                      g$src$9516$1bEyPh
                                                                                      g$x$9595$1bEyPh
                                                                                      g$r$9518$1bEyPh
                                                                                      g$maps$9519$1bEyPh
                                                                                      g$ellipsis?$9520$1bEyPh
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9599$1bEyPh
                                                                                      g$maps$9600$1bEyPh)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9601$1bEyPh
                                                                                          g$xnew$9602$1bEyPh)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9456$1bEyPh
                                                                                               g$src$9516$1bEyPh
                                                                                               g$y$9596$1bEyPh
                                                                                               g$r$9518$1bEyPh
                                                                                               g$maps$9601$1bEyPh
                                                                                               g$ellipsis?$9520$1bEyPh
                                                                                               g$vec?$9521$1bEyPh)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9605$1bEyPh
                                                                                               g$maps$9606$1bEyPh)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9607$1bEyPh
                                                                                                   g$ynew$9608$1bEyPh)
                                                                                                 (values
                                                                                                   (g$gen-cons$9461$1bEyPh
                                                                                                     g$e$9517$1bEyPh
                                                                                                     g$x$9595$1bEyPh
                                                                                                     g$y$9596$1bEyPh
                                                                                                     g$xnew$9602$1bEyPh
                                                                                                     g$ynew$9608$1bEyPh)
                                                                                                   g$maps$9607$1bEyPh)))
                                                                                              g$maps$9606$1bEyPh
                                                                                              g$ynew$9605$1bEyPh))))))
                                                                                     g$maps$9600$1bEyPh
                                                                                     g$xnew$9599$1bEyPh))))))
                                                                            g$ls/false$9594$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$t$9609$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9610$1bEyPh)
                                                                                  (if g$ls/false$9610$1bEyPh
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9611$1bEyPh)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9456$1bEyPh
                                                                                                g$src$9516$1bEyPh
                                                                                                g$ls$9611$1bEyPh
                                                                                                g$r$9518$1bEyPh
                                                                                                g$maps$9519$1bEyPh
                                                                                                g$ellipsis?$9520$1bEyPh
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9614$1bEyPh
                                                                                                g$maps$9615$1bEyPh)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9616$1bEyPh
                                                                                                    g$lsnew$9617$1bEyPh)
                                                                                                  (values
                                                                                                    (g$gen-vector$9462$1bEyPh
                                                                                                      g$e$9517$1bEyPh
                                                                                                      g$ls$9611$1bEyPh
                                                                                                      g$lsnew$9617$1bEyPh)
                                                                                                    g$maps$9616$1bEyPh)))
                                                                                               g$maps$9615$1bEyPh
                                                                                               g$lsnew$9614$1bEyPh))))))
                                                                                      g$ls/false$9610$1bEyPh)
                                                                                    ((case-lambda
                                                                                       ((g$t$9618$1bEyPh)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9619$1bEyPh)
                                                                                            (if g$ls/false$9619$1bEyPh
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9517$1bEyPh)
                                                                                                     g$maps$9519$1bEyPh)))
                                                                                                g$ls/false$9619$1bEyPh)
                                                                                              (g$syntax-violation$7748$1bEyPh
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9618$1bEyPh))))
                                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                                           g$t$9618$1bEyPh
                                                                                           '_))))
                                                                                     g$t$9609$1bEyPh))))
                                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                                 g$t$9609$1bEyPh
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9593$1bEyPh))))
                                                                     (g$syntax-dispatch$7639$1bEyPh
                                                                       g$t$9593$1bEyPh
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9546$1bEyPh))))
                                                           (g$syntax-dispatch$7639$1bEyPh
                                                             g$t$9546$1bEyPh
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9539$1bEyPh))))
                                                 (g$syntax-dispatch$7639$1bEyPh
                                                   g$t$9539$1bEyPh
                                                   '(any any)))))
                                             g$t$9526$1bEyPh))))
                                       (g$syntax-dispatch$7639$1bEyPh
                                         g$t$9526$1bEyPh
                                         'any))))
                                   g$t$9522$1bEyPh))))
                             (g$syntax-dispatch$7639$1bEyPh
                               g$t$9522$1bEyPh
                               'any))))
                         g$e$9517$1bEyPh))))
                   (g$gen-ref$9457$1bEyPh
                     (case-lambda
                       ((g$src$9503$1bEyPh
                          g$var$9504$1bEyPh
                          g$level$9505$1bEyPh
                          g$maps$9506$1bEyPh)
                        (if (= g$level$9505$1bEyPh '0)
                          (values g$var$9504$1bEyPh g$maps$9506$1bEyPh)
                          (if (null? g$maps$9506$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9503$1bEyPh)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9457$1bEyPh
                                   g$src$9503$1bEyPh
                                   g$var$9504$1bEyPh
                                   (- g$level$9505$1bEyPh '1)
                                   (cdr g$maps$9506$1bEyPh))))
                              (case-lambda
                                ((g$outer-var$9509$1bEyPh
                                   g$outer-maps$9510$1bEyPh)
                                 ((case-lambda
                                    ((g$outer-maps$9511$1bEyPh
                                       g$outer-var$9512$1bEyPh)
                                     ((case-lambda
                                        ((g$t$9513$1bEyPh)
                                         (if g$t$9513$1bEyPh
                                           ((case-lambda
                                              ((g$b$9514$1bEyPh)
                                               (values
                                                 (cdr g$b$9514$1bEyPh)
                                                 g$maps$9506$1bEyPh)))
                                            g$t$9513$1bEyPh)
                                           ((case-lambda
                                              ((g$inner-var$9515$1bEyPh)
                                               (values
                                                 g$inner-var$9515$1bEyPh
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9512$1bEyPh
                                                       g$inner-var$9515$1bEyPh)
                                                     (car g$maps$9506$1bEyPh))
                                                   g$outer-maps$9511$1bEyPh))))
                                            (g$gen-lexical$7305$1bEyPh 'tmp)))))
                                      (assq
                                        g$outer-var$9512$1bEyPh
                                        (car g$maps$9506$1bEyPh)))))
                                  g$outer-maps$9510$1bEyPh
                                  g$outer-var$9509$1bEyPh)))))))))
                   (g$gen-append$9458$1bEyPh
                     (case-lambda
                       ((g$x$9501$1bEyPh g$y$9502$1bEyPh)
                        (if (equal? g$y$9502$1bEyPh ''())
                          g$x$9501$1bEyPh
                          (list 'append g$x$9501$1bEyPh g$y$9502$1bEyPh)))))
                   (g$gen-mappend$9459$1bEyPh
                     (case-lambda
                       ((g$e$9499$1bEyPh g$map-env$9500$1bEyPh)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9460$1bEyPh
                            g$e$9499$1bEyPh
                            g$map-env$9500$1bEyPh)))))
                   (g$gen-map$9460$1bEyPh
                     (case-lambda
                       ((g$e$9490$1bEyPh g$map-env$9491$1bEyPh)
                        ((case-lambda
                           ((g$formals$9492$1bEyPh g$actuals$9493$1bEyPh)
                            (if (eq? (car g$e$9490$1bEyPh) 'ref)
                              (car g$actuals$9493$1bEyPh)
                              (if (g$for-all$5491$1bEyPh
                                    (case-lambda
                                      ((g$x$9494$1bEyPh)
                                       (if (eq? (car g$x$9494$1bEyPh) 'ref)
                                         (begin
                                           '#f
                                           (memq
                                             (g$cadr$5010$1bEyPh
                                               g$x$9494$1bEyPh)
                                             g$formals$9492$1bEyPh))
                                         '#f)))
                                    (cdr g$e$9490$1bEyPh))
                                ((case-lambda
                                   ((g$args$9495$1bEyPh)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9490$1bEyPh))
                                        g$args$9495$1bEyPh))))
                                 (map ((case-lambda
                                         ((g$r$9496$1bEyPh)
                                          (case-lambda
                                            ((g$x$9497$1bEyPh)
                                             (cdr (assq
                                                    (g$cadr$5010$1bEyPh
                                                      g$x$9497$1bEyPh)
                                                    g$r$9496$1bEyPh))))))
                                       (map cons
                                            g$formals$9492$1bEyPh
                                            g$actuals$9493$1bEyPh))
                                      (cdr g$e$9490$1bEyPh)))
                                (g$cons*$5493$1bEyPh
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9492$1bEyPh
                                    g$e$9490$1bEyPh)
                                  g$actuals$9493$1bEyPh)))))
                         (map cdr g$map-env$9491$1bEyPh)
                         (map (case-lambda
                                ((g$x$9498$1bEyPh)
                                 (list 'ref (car g$x$9498$1bEyPh))))
                              g$map-env$9491$1bEyPh)))))
                   (g$gen-cons$9461$1bEyPh
                     (case-lambda
                       ((g$e$9482$1bEyPh
                          g$x$9483$1bEyPh
                          g$y$9484$1bEyPh
                          g$xnew$9485$1bEyPh
                          g$ynew$9486$1bEyPh)
                        ((case-lambda
                           ((g$t$9487$1bEyPh)
                            (if (memv g$t$9487$1bEyPh '(quote))
                              (if (eq? (car g$xnew$9485$1bEyPh) 'quote)
                                ((case-lambda
                                   ((g$xnew$9488$1bEyPh g$ynew$9489$1bEyPh)
                                    (if (if (eq? g$xnew$9488$1bEyPh
                                                 g$x$9483$1bEyPh)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9489$1bEyPh
                                                 g$y$9484$1bEyPh))
                                          '#f)
                                      (list 'quote g$e$9482$1bEyPh)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9488$1bEyPh
                                          g$ynew$9489$1bEyPh)))))
                                 (g$cadr$5010$1bEyPh g$xnew$9485$1bEyPh)
                                 (g$cadr$5010$1bEyPh g$ynew$9486$1bEyPh))
                                (if (null?
                                      (g$cadr$5010$1bEyPh g$ynew$9486$1bEyPh))
                                  (list 'list g$xnew$9485$1bEyPh)
                                  (list
                                    'cons
                                    g$xnew$9485$1bEyPh
                                    g$ynew$9486$1bEyPh)))
                              (if (memv g$t$9487$1bEyPh '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9485$1bEyPh
                                    (cdr g$ynew$9486$1bEyPh)))
                                (list
                                  'cons
                                  g$xnew$9485$1bEyPh
                                  g$ynew$9486$1bEyPh)))))
                         (car g$ynew$9486$1bEyPh)))))
                   (g$gen-vector$9462$1bEyPh
                     (case-lambda
                       ((g$e$9479$1bEyPh g$ls$9480$1bEyPh g$lsnew$9481$1bEyPh)
                        (if (eq? (car g$lsnew$9481$1bEyPh) 'quote)
                          (if (eq? (g$cadr$5010$1bEyPh g$lsnew$9481$1bEyPh)
                                   g$ls$9480$1bEyPh)
                            (list 'quote g$e$9479$1bEyPh)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5010$1bEyPh g$lsnew$9481$1bEyPh))))
                          (if (eq? (car g$lsnew$9481$1bEyPh) 'list)
                            (cons 'vector (cdr g$lsnew$9481$1bEyPh))
                            (list 'list->vector g$lsnew$9481$1bEyPh))))))
                   (g$regen$9463$1bEyPh
                     (case-lambda
                       ((g$x$9476$1bEyPh)
                        ((case-lambda
                           ((g$t$9477$1bEyPh)
                            (if (memv g$t$9477$1bEyPh '(ref))
                              (g$cadr$5010$1bEyPh g$x$9476$1bEyPh)
                              (if (memv g$t$9477$1bEyPh '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5010$1bEyPh g$x$9476$1bEyPh))
                                (if (memv g$t$9477$1bEyPh '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5010$1bEyPh g$x$9476$1bEyPh))
                                  (if (memv g$t$9477$1bEyPh '(lambda))
                                    (g$build-lambda$7292$1bEyPh
                                      '#f
                                      (g$cadr$5010$1bEyPh g$x$9476$1bEyPh)
                                      (g$regen$9463$1bEyPh
                                        (g$caddr$5016$1bEyPh g$x$9476$1bEyPh)))
                                    (if (memv g$t$9477$1bEyPh '(map))
                                      ((case-lambda
                                         ((g$ls$9478$1bEyPh)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9478$1bEyPh)))
                                       (map g$regen$9463$1bEyPh
                                            (cdr g$x$9476$1bEyPh)))
                                      (cons
                                        (list 'primitive (car g$x$9476$1bEyPh))
                                        (map g$regen$9463$1bEyPh
                                             (cdr g$x$9476$1bEyPh))))))))))
                         (car g$x$9476$1bEyPh))))))
           (case-lambda
             ((g$e$9464$1bEyPh g$r$9465$1bEyPh g$mr$9466$1bEyPh)
              ((case-lambda
                 ((g$t$9467$1bEyPh)
                  ((case-lambda
                     ((g$ls/false$9468$1bEyPh)
                      (if g$ls/false$9468$1bEyPh
                        (apply
                          (case-lambda
                            ((g$x$9469$1bEyPh)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9456$1bEyPh
                                    g$e$9464$1bEyPh
                                    g$x$9469$1bEyPh
                                    g$r$9465$1bEyPh
                                    '()
                                    g$ellipsis?$7640$1bEyPh
                                    '#f)))
                               (case-lambda
                                 ((g$e$9472$1bEyPh g$maps$9473$1bEyPh)
                                  ((case-lambda
                                     ((g$maps$9474$1bEyPh g$e$9475$1bEyPh)
                                      (g$regen$9463$1bEyPh g$e$9475$1bEyPh)))
                                   g$maps$9473$1bEyPh
                                   g$e$9472$1bEyPh))))))
                          g$ls/false$9468$1bEyPh)
                        (g$syntax-violation$7748$1bEyPh
                          '#f
                          '"invalid syntax"
                          g$t$9467$1bEyPh))))
                   (g$syntax-dispatch$7639$1bEyPh g$t$9467$1bEyPh '(_ any)))))
               g$e$9464$1bEyPh))))))))
   (g$core-macro-transformer$7646$1bEyPh
     g$core-macro-transformer$11085$1bEyPh
     (case-lambda
       ((g$name$9620$1bEyPh)
        ((case-lambda
           ((g$t$9621$1bEyPh)
            (if (memv g$t$9621$1bEyPh '(quote))
              g$quote-transformer$7599$1bEyPh
              (if (memv g$t$9621$1bEyPh '(lambda))
                g$lambda-transformer$7601$1bEyPh
                (if (memv g$t$9621$1bEyPh '(case-lambda))
                  g$case-lambda-transformer$7600$1bEyPh
                  (if (memv g$t$9621$1bEyPh '(letrec))
                    g$letrec-transformer$7589$1bEyPh
                    (if (memv g$t$9621$1bEyPh '(letrec*))
                      g$letrec*-transformer$7590$1bEyPh
                      (if (memv g$t$9621$1bEyPh '(if))
                        g$if-transformer$7597$1bEyPh
                        (if (memv g$t$9621$1bEyPh '(foreign-call))
                          g$foreign-call-transformer$7637$1bEyPh
                          (if (memv g$t$9621$1bEyPh '(syntax-case))
                            g$syntax-case-transformer$7643$1bEyPh
                            (if (memv g$t$9621$1bEyPh '(syntax))
                              g$syntax-transformer$7645$1bEyPh
                              (if (memv g$t$9621$1bEyPh '(type-descriptor))
                                g$type-descriptor-transformer$7592$1bEyPh
                                (if (memv
                                      g$t$9621$1bEyPh
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7593$1bEyPh
                                  (if (memv
                                        g$t$9621$1bEyPh
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7594$1bEyPh
                                    (if (memv
                                          g$t$9621$1bEyPh
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7591$1bEyPh
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9620$1bEyPh))))))))))))))))
         g$name$9620$1bEyPh))))
   (g$file-options-macro$7647$1bEyPh
     g$file-options-macro$11086$1bEyPh
     (case-lambda
       ((g$x$9622$1bEyPh)
        (letrec* ((g$valid-option?$9623$1bEyPh
                    (case-lambda
                      ((g$x$9628$1bEyPh)
                       (if (g$id?$7361$1bEyPh g$x$9628$1bEyPh)
                         (begin
                           '#f
                           (memq
                             (g$id->sym$7362$1bEyPh g$x$9628$1bEyPh)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9624$1bEyPh)
              ((case-lambda
                 ((g$ls/false$9625$1bEyPh)
                  (if (if g$ls/false$9625$1bEyPh
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9626$1bEyPh)
                               (if (g$for-all$5491$1bEyPh
                                     g$valid-option?$9623$1bEyPh
                                     g$opt*$9626$1bEyPh)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6630$1bEyPh
                                     (map g$id->sym$7362$1bEyPh
                                          g$opt*$9626$1bEyPh)))
                                 '#f)))
                            g$ls/false$9625$1bEyPh))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9627$1bEyPh)
                         (g$bless$7602$1bEyPh
                           (list
                             'quote
                             (g$file-options-spec$6630$1bEyPh
                               (map g$id->sym$7362$1bEyPh
                                    g$opt*$9627$1bEyPh))))))
                      g$ls/false$9625$1bEyPh)
                    (g$syntax-violation$7748$1bEyPh
                      '#f
                      '"invalid syntax"
                      g$t$9624$1bEyPh))))
               (g$syntax-dispatch$7639$1bEyPh
                 g$t$9624$1bEyPh
                 '(_ . each-any)))))
           g$x$9622$1bEyPh)))))
   (g$symbol-macro$7648$1bEyPh
     g$symbol-macro$11087$1bEyPh
     (case-lambda
       ((g$x$9629$1bEyPh g$set$9630$1bEyPh)
        ((case-lambda
           ((g$t$9631$1bEyPh)
            ((case-lambda
               ((g$ls/false$9632$1bEyPh)
                (if (if g$ls/false$9632$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9633$1bEyPh)
                             (if (g$id?$7361$1bEyPh g$name$9633$1bEyPh)
                               (begin
                                 '#f
                                 (memq
                                   (g$id->sym$7362$1bEyPh g$name$9633$1bEyPh)
                                   g$set$9630$1bEyPh))
                               '#f)))
                          g$ls/false$9632$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9634$1bEyPh)
                       (g$bless$7602$1bEyPh (list 'quote g$name$9634$1bEyPh))))
                    g$ls/false$9632$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$9631$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$9631$1bEyPh '(_ any)))))
         g$x$9629$1bEyPh))))
   (g$macro-transformer$7649$1bEyPh
     g$macro-transformer$11088$1bEyPh
     (case-lambda
       ((g$x$9635$1bEyPh)
        (if (procedure? g$x$9635$1bEyPh)
          g$x$9635$1bEyPh
          (if (symbol? g$x$9635$1bEyPh)
            ((case-lambda
               ((g$t$9636$1bEyPh)
                (if (memv g$t$9636$1bEyPh '(define-record-type))
                  g$define-record-type-macro$7633$1bEyPh
                  (if (memv g$t$9636$1bEyPh '(define-struct))
                    g$define-struct-macro$7632$1bEyPh
                    (if (memv g$t$9636$1bEyPh '(include))
                      g$include-macro$7627$1bEyPh
                      (if (memv g$t$9636$1bEyPh '(cond))
                        g$cond-macro$7625$1bEyPh
                        (if (memv g$t$9636$1bEyPh '(let))
                          g$let-macro$7605$1bEyPh
                          (if (memv g$t$9636$1bEyPh '(do))
                            g$do-macro$7621$1bEyPh
                            (if (memv g$t$9636$1bEyPh '(or))
                              g$or-macro$7623$1bEyPh
                              (if (memv g$t$9636$1bEyPh '(and))
                                g$and-macro$7624$1bEyPh
                                (if (memv g$t$9636$1bEyPh '(let*))
                                  g$let*-macro$7622$1bEyPh
                                  (if (memv g$t$9636$1bEyPh '(let-values))
                                    g$let-values-macro$7606$1bEyPh
                                    (if (memv g$t$9636$1bEyPh '(let*-values))
                                      g$let*-values-macro$7607$1bEyPh
                                      (if (memv g$t$9636$1bEyPh '(syntax-rules))
                                        g$syntax-rules-macro$7629$1bEyPh
                                        (if (memv g$t$9636$1bEyPh '(quasiquote))
                                          g$quasiquote-macro$7630$1bEyPh
                                          (if (memv
                                                g$t$9636$1bEyPh
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7631$1bEyPh
                                            (if (memv
                                                  g$t$9636$1bEyPh
                                                  '(with-syntax))
                                              g$with-syntax-macro$7603$1bEyPh
                                              (if (memv g$t$9636$1bEyPh '(when))
                                                g$when-macro$7595$1bEyPh
                                                (if (memv
                                                      g$t$9636$1bEyPh
                                                      '(unless))
                                                  g$unless-macro$7596$1bEyPh
                                                  (if (memv
                                                        g$t$9636$1bEyPh
                                                        '(case))
                                                    g$case-macro$7598$1bEyPh
                                                    (if (memv
                                                          g$t$9636$1bEyPh
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7620$1bEyPh
                                                      (if (memv
                                                            g$t$9636$1bEyPh
                                                            '(time))
                                                        g$time-macro$7616$1bEyPh
                                                        (if (memv
                                                              g$t$9636$1bEyPh
                                                              '(delay))
                                                          g$delay-macro$7617$1bEyPh
                                                          (if (memv
                                                                g$t$9636$1bEyPh
                                                                '(assert))
                                                            g$assert-macro$7618$1bEyPh
                                                            (if (memv
                                                                  g$t$9636$1bEyPh
                                                                  '(endianness))
                                                              g$endianness-macro$7619$1bEyPh
                                                              (if (memv
                                                                    g$t$9636$1bEyPh
                                                                    '(guard))
                                                                g$guard-macro$7614$1bEyPh
                                                                (if (memv
                                                                      g$t$9636$1bEyPh
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7615$1bEyPh
                                                                  (if (memv
                                                                        g$t$9636$1bEyPh
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7608$1bEyPh
                                                                    (if (memv
                                                                          g$t$9636$1bEyPh
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7609$1bEyPh
                                                                      (if (memv
                                                                            g$t$9636$1bEyPh
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7610$1bEyPh
                                                                        (if (memv
                                                                              g$t$9636$1bEyPh
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7612$1bEyPh
                                                                          (if (memv
                                                                                g$t$9636$1bEyPh
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7613$1bEyPh
                                                                            (if (memv
                                                                                  g$t$9636$1bEyPh
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7634$1bEyPh
                                                                              (if (memv
                                                                                    g$t$9636$1bEyPh
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7636$1bEyPh
                                                                                (if (memv
                                                                                      g$t$9636$1bEyPh
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7628$1bEyPh
                                                                                  (if (memv
                                                                                        g$t$9636$1bEyPh
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9637$1bEyPh)
                                                                                       (g$symbol-macro$7648$1bEyPh
                                                                                         g$x$9637$1bEyPh
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (memv
                                                                                          g$t$9636$1bEyPh
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9638$1bEyPh)
                                                                                         (g$symbol-macro$7648$1bEyPh
                                                                                           g$x$9638$1bEyPh
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (memv
                                                                                            g$t$9636$1bEyPh
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9639$1bEyPh)
                                                                                           (g$symbol-macro$7648$1bEyPh
                                                                                             g$x$9639$1bEyPh
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (memv
                                                                                              g$t$9636$1bEyPh
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7647$1bEyPh
                                                                                          (if (memv
                                                                                                g$t$9636$1bEyPh
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7635$1bEyPh
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9635$1bEyPh)))))))))))))))))))))))))))))))))))))))))
             g$x$9635$1bEyPh)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9635$1bEyPh))))))
   (g$local-macro-transformer$7650$1bEyPh
     g$local-macro-transformer$11089$1bEyPh
     (case-lambda ((g$x$9640$1bEyPh) (car g$x$9640$1bEyPh))))
   (g$do-macro-call$7651$1bEyPh
     g$do-macro-call$11090$1bEyPh
     (case-lambda
       ((g$transformer$9641$1bEyPh g$expr$9642$1bEyPh)
        ((case-lambda
           ((g$out$9643$1bEyPh)
            (begin
              ((letrec ((g$f$9644$1bEyPh
                          (case-lambda
                            ((g$x$9645$1bEyPh)
                             (if (not (g$stx?$7333$1bEyPh g$x$9645$1bEyPh))
                               (if (pair? g$x$9645$1bEyPh)
                                 (begin
                                   (g$f$9644$1bEyPh (car g$x$9645$1bEyPh))
                                   (g$f$9644$1bEyPh (cdr g$x$9645$1bEyPh)))
                                 (if (vector? g$x$9645$1bEyPh)
                                   (vector-for-each
                                     g$f$9644$1bEyPh
                                     g$x$9645$1bEyPh)
                                   (if (symbol? g$x$9645$1bEyPh)
                                     (g$syntax-violation$7748$1bEyPh
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9642$1bEyPh
                                       g$x$9645$1bEyPh)
                                     (void))))
                               (void))))))
                 g$f$9644$1bEyPh)
               g$out$9643$1bEyPh)
              (g$add-mark$7350$1bEyPh
                (g$gen-mark$7345$1bEyPh)
                g$out$9643$1bEyPh
                g$expr$9642$1bEyPh))))
         (g$transformer$9641$1bEyPh
           (g$add-mark$7350$1bEyPh
             g$anti-mark$7346$1bEyPh
             g$expr$9642$1bEyPh
             '#f))))))
   (g$chi-macro$7652$1bEyPh
     g$chi-macro$11091$1bEyPh
     (case-lambda
       ((g$p$9646$1bEyPh g$e$9647$1bEyPh)
        (g$do-macro-call$7651$1bEyPh
          (g$macro-transformer$7649$1bEyPh g$p$9646$1bEyPh)
          g$e$9647$1bEyPh))))
   (g$chi-local-macro$7653$1bEyPh
     g$chi-local-macro$11092$1bEyPh
     (case-lambda
       ((g$p$9648$1bEyPh g$e$9649$1bEyPh)
        (g$do-macro-call$7651$1bEyPh
          (g$local-macro-transformer$7650$1bEyPh g$p$9648$1bEyPh)
          g$e$9649$1bEyPh))))
   (g$chi-global-macro$7654$1bEyPh
     g$chi-global-macro$11093$1bEyPh
     (case-lambda
       ((g$p$9650$1bEyPh g$e$9651$1bEyPh)
        ((case-lambda
           ((g$lib$9652$1bEyPh g$loc$9653$1bEyPh)
            (begin
              (g$visit-library$7177$1bEyPh g$lib$9652$1bEyPh)
              ((case-lambda
                 ((g$x$9654$1bEyPh)
                  ((case-lambda
                     ((g$transformer$9655$1bEyPh)
                      (g$do-macro-call$7651$1bEyPh
                        g$transformer$9655$1bEyPh
                        g$e$9651$1bEyPh)))
                   (if (procedure? g$x$9654$1bEyPh)
                     g$x$9654$1bEyPh
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9654$1bEyPh)))))
               (symbol-value g$loc$9653$1bEyPh)))))
         (car g$p$9650$1bEyPh)
         (cdr g$p$9650$1bEyPh)))))
   (g$chi-expr*$7655$1bEyPh
     g$chi-expr*$11094$1bEyPh
     (case-lambda
       ((g$e*$9656$1bEyPh g$r$9657$1bEyPh g$mr$9658$1bEyPh)
        (if (null? g$e*$9656$1bEyPh)
          '()
          ((case-lambda
             ((g$e$9659$1bEyPh)
              (cons
                g$e$9659$1bEyPh
                (g$chi-expr*$7655$1bEyPh
                  (cdr g$e*$9656$1bEyPh)
                  g$r$9657$1bEyPh
                  g$mr$9658$1bEyPh))))
           (g$chi-expr$7657$1bEyPh
             (car g$e*$9656$1bEyPh)
             g$r$9657$1bEyPh
             g$mr$9658$1bEyPh))))))
   (g$chi-application$7656$1bEyPh
     g$chi-application$11095$1bEyPh
     (case-lambda
       ((g$e$9660$1bEyPh g$r$9661$1bEyPh g$mr$9662$1bEyPh)
        ((case-lambda
           ((g$t$9663$1bEyPh)
            ((case-lambda
               ((g$ls/false$9664$1bEyPh)
                (if g$ls/false$9664$1bEyPh
                  (apply
                    (case-lambda
                      ((g$rator$9665$1bEyPh g$rands$9666$1bEyPh)
                       ((case-lambda
                          ((g$rator$9667$1bEyPh)
                           (cons
                             g$rator$9667$1bEyPh
                             (g$chi-expr*$7655$1bEyPh
                               g$rands$9666$1bEyPh
                               g$r$9661$1bEyPh
                               g$mr$9662$1bEyPh))))
                        (g$chi-expr$7657$1bEyPh
                          g$rator$9665$1bEyPh
                          g$r$9661$1bEyPh
                          g$mr$9662$1bEyPh))))
                    g$ls/false$9664$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$9663$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$9663$1bEyPh
               '(any . each-any)))))
         g$e$9660$1bEyPh))))
   (g$chi-expr$7657$1bEyPh
     g$chi-expr$11096$1bEyPh
     (case-lambda
       ((g$e$9668$1bEyPh g$r$9669$1bEyPh g$mr$9670$1bEyPh)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7381$1bEyPh g$e$9668$1bEyPh g$r$9669$1bEyPh)))
          (case-lambda
            ((g$type$9674$1bEyPh g$value$9675$1bEyPh g$kwd$9676$1bEyPh)
             ((case-lambda
                ((g$kwd$9677$1bEyPh g$value$9678$1bEyPh g$type$9679$1bEyPh)
                 ((case-lambda
                    ((g$t$9680$1bEyPh)
                     (if (memv g$t$9680$1bEyPh '(core-macro))
                       ((case-lambda
                          ((g$transformer$9681$1bEyPh)
                           (g$transformer$9681$1bEyPh
                             g$e$9668$1bEyPh
                             g$r$9669$1bEyPh
                             g$mr$9670$1bEyPh)))
                        (g$core-macro-transformer$7646$1bEyPh
                          g$value$9678$1bEyPh))
                       (if (memv g$t$9680$1bEyPh '(global))
                         ((case-lambda
                            ((g$lib$9682$1bEyPh)
                             ((case-lambda
                                ((g$loc$9683$1bEyPh)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7691$1bEyPh)
                                        g$lib$9682$1bEyPh)
                                       g$loc$9683$1bEyPh))))))
                              (cdr g$value$9678$1bEyPh))))
                          (car g$value$9678$1bEyPh))
                         (if (memv g$t$9680$1bEyPh '(core-prim))
                           ((case-lambda
                              ((g$name$9684$1bEyPh)
                               (list 'primitive g$name$9684$1bEyPh)))
                            g$value$9678$1bEyPh)
                           (if (memv g$t$9680$1bEyPh '(call))
                             (g$chi-application$7656$1bEyPh
                               g$e$9668$1bEyPh
                               g$r$9669$1bEyPh
                               g$mr$9670$1bEyPh)
                             (if (memv g$t$9680$1bEyPh '(lexical))
                               ((case-lambda
                                  ((g$lex$9685$1bEyPh) g$lex$9685$1bEyPh))
                                (g$lexical-var$7583$1bEyPh g$value$9678$1bEyPh))
                               (if (memv
                                     g$t$9680$1bEyPh
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7657$1bEyPh
                                   (g$chi-global-macro$7654$1bEyPh
                                     g$value$9678$1bEyPh
                                     g$e$9668$1bEyPh)
                                   g$r$9669$1bEyPh
                                   g$mr$9670$1bEyPh)
                                 (if (memv
                                       g$t$9680$1bEyPh
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7657$1bEyPh
                                     (g$chi-local-macro$7653$1bEyPh
                                       g$value$9678$1bEyPh
                                       g$e$9668$1bEyPh)
                                     g$r$9669$1bEyPh
                                     g$mr$9670$1bEyPh)
                                   (if (memv g$t$9680$1bEyPh '(macro macro!))
                                     (g$chi-expr$7657$1bEyPh
                                       (g$chi-macro$7652$1bEyPh
                                         g$value$9678$1bEyPh
                                         g$e$9668$1bEyPh)
                                       g$r$9669$1bEyPh
                                       g$mr$9670$1bEyPh)
                                     (if (memv g$t$9680$1bEyPh '(constant))
                                       ((case-lambda
                                          ((g$datum$9686$1bEyPh)
                                           (list 'quote g$datum$9686$1bEyPh)))
                                        g$value$9678$1bEyPh)
                                       (if (memv g$t$9680$1bEyPh '(set!))
                                         (g$chi-set!$7658$1bEyPh
                                           g$e$9668$1bEyPh
                                           g$r$9669$1bEyPh
                                           g$mr$9670$1bEyPh)
                                         (if (memv g$t$9680$1bEyPh '(begin))
                                           ((case-lambda
                                              ((g$t$9687$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$9688$1bEyPh)
                                                   (if g$ls/false$9688$1bEyPh
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9689$1bEyPh
                                                            g$x*$9690$1bEyPh)
                                                          (g$build-sequence$7295$1bEyPh
                                                            '#f
                                                            (g$chi-expr*$7655$1bEyPh
                                                              (cons
                                                                g$x$9689$1bEyPh
                                                                g$x*$9690$1bEyPh)
                                                              g$r$9669$1bEyPh
                                                              g$mr$9670$1bEyPh))))
                                                       g$ls/false$9688$1bEyPh)
                                                     (g$syntax-violation$7748$1bEyPh
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9687$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$9687$1bEyPh
                                                  '(_ any . each-any)))))
                                            g$e$9668$1bEyPh)
                                           (if (memv
                                                 g$t$9680$1bEyPh
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9691$1bEyPh)
                                                 ((case-lambda
                                                    ((g$ls/false$9692$1bEyPh)
                                                     (if (if g$ls/false$9692$1bEyPh
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9693$1bEyPh
                                                                    g$xrhs*$9694$1bEyPh
                                                                    g$xbody$9695$1bEyPh
                                                                    g$xbody*$9696$1bEyPh)
                                                                  (if (not (g$valid-bound-ids?$7366$1bEyPh
                                                                             g$xlhs*$9693$1bEyPh))
                                                                    (g$syntax-violation$7748$1bEyPh
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9668$1bEyPh)
                                                                    (void))))
                                                               g$ls/false$9692$1bEyPh))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9697$1bEyPh
                                                              g$xrhs*$9698$1bEyPh
                                                              g$xbody$9699$1bEyPh
                                                              g$xbody*$9700$1bEyPh)
                                                            ((case-lambda
                                                               ((g$xlab*$9701$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$xrib$9702$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$xb*$9703$1bEyPh)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7295$1bEyPh
                                                                              '#f
                                                                              (g$chi-expr*$7655$1bEyPh
                                                                                (map (case-lambda
                                                                                       ((g$x$9704$1bEyPh)
                                                                                        (g$add-subst$7351$1bEyPh
                                                                                          g$xrib$9702$1bEyPh
                                                                                          g$x$9704$1bEyPh)))
                                                                                     (cons
                                                                                       g$xbody$9699$1bEyPh
                                                                                       g$xbody*$9700$1bEyPh))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9701$1bEyPh
                                                                                       g$xb*$9703$1bEyPh)
                                                                                  g$r$9669$1bEyPh)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9701$1bEyPh
                                                                                       g$xb*$9703$1bEyPh)
                                                                                  g$mr$9670$1bEyPh))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9705$1bEyPh)
                                                                             (g$make-eval-transformer$7393$1bEyPh
                                                                               (g$expand-transformer$7684$1bEyPh
                                                                                 (if (eq? g$type$9679$1bEyPh
                                                                                          'let-syntax)
                                                                                   g$x$9705$1bEyPh
                                                                                   (g$add-subst$7351$1bEyPh
                                                                                     g$xrib$9702$1bEyPh
                                                                                     g$x$9705$1bEyPh))
                                                                                 g$mr$9670$1bEyPh))))
                                                                          g$xrhs*$9698$1bEyPh))))
                                                                 (g$make-full-rib$7329$1bEyPh
                                                                   g$xlhs*$9697$1bEyPh
                                                                   g$xlab*$9701$1bEyPh))))
                                                             (map g$gen-label$7307$1bEyPh
                                                                  g$xlhs*$9697$1bEyPh))))
                                                         g$ls/false$9692$1bEyPh)
                                                       (g$syntax-violation$7748$1bEyPh
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9691$1bEyPh))))
                                                  (g$syntax-dispatch$7639$1bEyPh
                                                    g$t$9691$1bEyPh
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9668$1bEyPh)
                                             (if (memv
                                                   g$t$9680$1bEyPh
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7748$1bEyPh
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9668$1bEyPh)
                                               (if (memv
                                                     g$t$9680$1bEyPh
                                                     '(syntax))
                                                 (g$syntax-violation$7748$1bEyPh
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9668$1bEyPh)
                                                 (if (memv
                                                       g$t$9680$1bEyPh
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7748$1bEyPh
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9706$1bEyPh)
                                                           (if (memv
                                                                 g$t$9706$1bEyPh
                                                                 '(define))
                                                             '"a definition"
                                                             (if (memv
                                                                   g$t$9706$1bEyPh
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (memv
                                                                     g$t$9706$1bEyPh
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (memv
                                                                       g$t$9706$1bEyPh
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (memv
                                                                         g$t$9706$1bEyPh
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     '"a non-expression")))))))
                                                        g$type$9679$1bEyPh)
                                                       '" was found where an expression was expected")
                                                     g$e$9668$1bEyPh)
                                                   (if (memv
                                                         g$t$9680$1bEyPh
                                                         '(mutable))
                                                     (g$syntax-violation$7748$1bEyPh
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9668$1bEyPh)
                                                     (g$syntax-violation$7748$1bEyPh
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9668$1bEyPh)))))))))))))))))))
                  g$type$9679$1bEyPh)))
              g$kwd$9676$1bEyPh
              g$value$9675$1bEyPh
              g$type$9674$1bEyPh)))))))
   (g$chi-set!$7658$1bEyPh
     g$chi-set!$11097$1bEyPh
     (case-lambda
       ((g$e$9707$1bEyPh g$r$9708$1bEyPh g$mr$9709$1bEyPh)
        ((case-lambda
           ((g$t$9710$1bEyPh)
            ((case-lambda
               ((g$ls/false$9711$1bEyPh)
                (if (if g$ls/false$9711$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9712$1bEyPh g$v$9713$1bEyPh)
                             (g$id?$7361$1bEyPh g$x$9712$1bEyPh)))
                          g$ls/false$9711$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9714$1bEyPh g$v$9715$1bEyPh)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7381$1bEyPh
                              g$x$9714$1bEyPh
                              g$r$9708$1bEyPh)))
                         (case-lambda
                           ((g$type$9719$1bEyPh
                              g$value$9720$1bEyPh
                              g$kwd$9721$1bEyPh)
                            ((case-lambda
                               ((g$kwd$9722$1bEyPh
                                  g$value$9723$1bEyPh
                                  g$type$9724$1bEyPh)
                                ((case-lambda
                                   ((g$t$9725$1bEyPh)
                                    (if (memv g$t$9725$1bEyPh '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7585$1bEyPh
                                          g$value$9723$1bEyPh
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7583$1bEyPh
                                            g$value$9723$1bEyPh)
                                          (g$chi-expr$7657$1bEyPh
                                            g$v$9715$1bEyPh
                                            g$r$9708$1bEyPh
                                            g$mr$9709$1bEyPh)))
                                      (if (memv g$t$9725$1bEyPh '(core-prim))
                                        (g$syntax-violation$7748$1bEyPh
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9707$1bEyPh)
                                        (if (memv g$t$9725$1bEyPh '(global))
                                          (g$syntax-violation$7748$1bEyPh
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9707$1bEyPh)
                                          (if (memv
                                                g$t$9725$1bEyPh
                                                '(global-macro!))
                                            (g$chi-expr$7657$1bEyPh
                                              (g$chi-global-macro$7654$1bEyPh
                                                g$value$9723$1bEyPh
                                                g$e$9707$1bEyPh)
                                              g$r$9708$1bEyPh
                                              g$mr$9709$1bEyPh)
                                            (if (memv
                                                  g$t$9725$1bEyPh
                                                  '(local-macro!))
                                              (g$chi-expr$7657$1bEyPh
                                                (g$chi-local-macro$7653$1bEyPh
                                                  g$value$9723$1bEyPh
                                                  g$e$9707$1bEyPh)
                                                g$r$9708$1bEyPh
                                                g$mr$9709$1bEyPh)
                                              (if (memv
                                                    g$t$9725$1bEyPh
                                                    '(mutable))
                                                (g$syntax-violation$7748$1bEyPh
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9707$1bEyPh)
                                                (g$syntax-violation$7748$1bEyPh
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9707$1bEyPh)))))))))
                                 g$type$9724$1bEyPh)))
                             g$kwd$9721$1bEyPh
                             g$value$9720$1bEyPh
                             g$type$9719$1bEyPh))))))
                    g$ls/false$9711$1bEyPh)
                  (g$syntax-violation$7748$1bEyPh
                    '#f
                    '"invalid syntax"
                    g$t$9710$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$9710$1bEyPh '(_ any any)))))
         g$e$9707$1bEyPh))))
   (g$verify-formals$7659$1bEyPh
     g$verify-formals$11098$1bEyPh
     (case-lambda
       ((g$fmls$9726$1bEyPh g$stx$9727$1bEyPh)
        ((case-lambda
           ((g$t$9728$1bEyPh)
            ((case-lambda
               ((g$ls/false$9729$1bEyPh)
                (if g$ls/false$9729$1bEyPh
                  (apply
                    (case-lambda
                      ((g$x*$9730$1bEyPh)
                       (if (not (g$valid-bound-ids?$7366$1bEyPh
                                  g$x*$9730$1bEyPh))
                         (g$invalid-fmls-error$7604$1bEyPh
                           g$stx$9727$1bEyPh
                           g$fmls$9726$1bEyPh)
                         (void))))
                    g$ls/false$9729$1bEyPh)
                  ((case-lambda
                     ((g$t$9731$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$9732$1bEyPh)
                          (if g$ls/false$9732$1bEyPh
                            (apply
                              (case-lambda
                                ((g$x*$9733$1bEyPh g$x$9734$1bEyPh)
                                 (if (not (g$valid-bound-ids?$7366$1bEyPh
                                            (cons
                                              g$x$9734$1bEyPh
                                              g$x*$9733$1bEyPh)))
                                   (g$invalid-fmls-error$7604$1bEyPh
                                     g$stx$9727$1bEyPh
                                     g$fmls$9726$1bEyPh)
                                   (void))))
                              g$ls/false$9732$1bEyPh)
                            ((case-lambda
                               ((g$t$9735$1bEyPh)
                                ((case-lambda
                                   ((g$ls/false$9736$1bEyPh)
                                    (if g$ls/false$9736$1bEyPh
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9727$1bEyPh)))
                                        g$ls/false$9736$1bEyPh)
                                      (g$syntax-violation$7748$1bEyPh
                                        '#f
                                        '"invalid syntax"
                                        g$t$9735$1bEyPh))))
                                 (g$syntax-dispatch$7639$1bEyPh
                                   g$t$9735$1bEyPh
                                   '_))))
                             g$t$9731$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$9731$1bEyPh
                         '#(each+ any () any)))))
                   g$t$9728$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$9728$1bEyPh 'each-any))))
         g$fmls$9726$1bEyPh))))
   (g$chi-lambda-clause$7660$1bEyPh
     g$chi-lambda-clause$11099$1bEyPh
     (case-lambda
       ((g$stx$9737$1bEyPh
          g$fmls$9738$1bEyPh
          g$body*$9739$1bEyPh
          g$r$9740$1bEyPh
          g$mr$9741$1bEyPh)
        ((case-lambda
           ((g$t$9742$1bEyPh)
            ((case-lambda
               ((g$ls/false$9743$1bEyPh)
                (if g$ls/false$9743$1bEyPh
                  (apply
                    (case-lambda
                      ((g$x*$9744$1bEyPh)
                       (begin
                         (g$verify-formals$7659$1bEyPh
                           g$fmls$9738$1bEyPh
                           g$stx$9737$1bEyPh)
                         ((case-lambda
                            ((g$lex*$9745$1bEyPh g$lab*$9746$1bEyPh)
                             (values
                               g$lex*$9745$1bEyPh
                               (g$chi-internal$7668$1bEyPh
                                 (g$add-subst$7351$1bEyPh
                                   (g$make-full-rib$7329$1bEyPh
                                     g$x*$9744$1bEyPh
                                     g$lab*$9746$1bEyPh)
                                   g$body*$9739$1bEyPh)
                                 (g$add-lexicals$7587$1bEyPh
                                   g$lab*$9746$1bEyPh
                                   g$lex*$9745$1bEyPh
                                   g$r$9740$1bEyPh)
                                 g$mr$9741$1bEyPh))))
                          (map g$gen-lexical$7305$1bEyPh g$x*$9744$1bEyPh)
                          (map g$gen-label$7307$1bEyPh g$x*$9744$1bEyPh)))))
                    g$ls/false$9743$1bEyPh)
                  ((case-lambda
                     ((g$t$9747$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$9748$1bEyPh)
                          (if g$ls/false$9748$1bEyPh
                            (apply
                              (case-lambda
                                ((g$x*$9749$1bEyPh g$x$9750$1bEyPh)
                                 (begin
                                   (g$verify-formals$7659$1bEyPh
                                     g$fmls$9738$1bEyPh
                                     g$stx$9737$1bEyPh)
                                   ((case-lambda
                                      ((g$lex*$9751$1bEyPh
                                         g$lab*$9752$1bEyPh
                                         g$lex$9753$1bEyPh
                                         g$lab$9754$1bEyPh)
                                       (values
                                         (append
                                           g$lex*$9751$1bEyPh
                                           g$lex$9753$1bEyPh)
                                         (g$chi-internal$7668$1bEyPh
                                           (g$add-subst$7351$1bEyPh
                                             (g$make-full-rib$7329$1bEyPh
                                               (cons
                                                 g$x$9750$1bEyPh
                                                 g$x*$9749$1bEyPh)
                                               (cons
                                                 g$lab$9754$1bEyPh
                                                 g$lab*$9752$1bEyPh))
                                             g$body*$9739$1bEyPh)
                                           (g$add-lexicals$7587$1bEyPh
                                             (cons
                                               g$lab$9754$1bEyPh
                                               g$lab*$9752$1bEyPh)
                                             (cons
                                               g$lex$9753$1bEyPh
                                               g$lex*$9751$1bEyPh)
                                             g$r$9740$1bEyPh)
                                           g$mr$9741$1bEyPh))))
                                    (map g$gen-lexical$7305$1bEyPh
                                         g$x*$9749$1bEyPh)
                                    (map g$gen-label$7307$1bEyPh
                                         g$x*$9749$1bEyPh)
                                    (g$gen-lexical$7305$1bEyPh g$x$9750$1bEyPh)
                                    (g$gen-label$7307$1bEyPh
                                      g$x$9750$1bEyPh)))))
                              g$ls/false$9748$1bEyPh)
                            ((case-lambda
                               ((g$t$9755$1bEyPh)
                                ((case-lambda
                                   ((g$ls/false$9756$1bEyPh)
                                    (if g$ls/false$9756$1bEyPh
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7748$1bEyPh
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9738$1bEyPh)))
                                        g$ls/false$9756$1bEyPh)
                                      (g$syntax-violation$7748$1bEyPh
                                        '#f
                                        '"invalid syntax"
                                        g$t$9755$1bEyPh))))
                                 (g$syntax-dispatch$7639$1bEyPh
                                   g$t$9755$1bEyPh
                                   '_))))
                             g$t$9747$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$9747$1bEyPh
                         '#(each+ any () any)))))
                   g$t$9742$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$9742$1bEyPh 'each-any))))
         g$fmls$9738$1bEyPh))))
   (g$chi-lambda-clause*$7661$1bEyPh
     g$chi-lambda-clause*$11100$1bEyPh
     (case-lambda
       ((g$stx$9757$1bEyPh
          g$fmls*$9758$1bEyPh
          g$body**$9759$1bEyPh
          g$r$9760$1bEyPh
          g$mr$9761$1bEyPh)
        (if (null? g$fmls*$9758$1bEyPh)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7660$1bEyPh
                 g$stx$9757$1bEyPh
                 (car g$fmls*$9758$1bEyPh)
                 (car g$body**$9759$1bEyPh)
                 g$r$9760$1bEyPh
                 g$mr$9761$1bEyPh)))
            (case-lambda
              ((g$a$9764$1bEyPh g$b$9765$1bEyPh)
               ((case-lambda
                  ((g$b$9766$1bEyPh g$a$9767$1bEyPh)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7661$1bEyPh
                          g$stx$9757$1bEyPh
                          (cdr g$fmls*$9758$1bEyPh)
                          (cdr g$body**$9759$1bEyPh)
                          g$r$9760$1bEyPh
                          g$mr$9761$1bEyPh)))
                     (case-lambda
                       ((g$a*$9770$1bEyPh g$b*$9771$1bEyPh)
                        ((case-lambda
                           ((g$b*$9772$1bEyPh g$a*$9773$1bEyPh)
                            (values
                              (cons g$a$9767$1bEyPh g$a*$9773$1bEyPh)
                              (cons g$b$9766$1bEyPh g$b*$9772$1bEyPh))))
                         g$b*$9771$1bEyPh
                         g$a*$9770$1bEyPh))))))
                g$b$9765$1bEyPh
                g$a$9764$1bEyPh))))))))
   (g$chi-defun$7662$1bEyPh
     g$chi-defun$11101$1bEyPh
     (case-lambda
       ((g$x$9774$1bEyPh g$r$9775$1bEyPh g$mr$9776$1bEyPh)
        ((case-lambda
           ((g$fmls$9777$1bEyPh g$body*$9778$1bEyPh)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7660$1bEyPh
                   g$fmls$9777$1bEyPh
                   g$fmls$9777$1bEyPh
                   g$body*$9778$1bEyPh
                   g$r$9775$1bEyPh
                   g$mr$9776$1bEyPh)))
              (case-lambda
                ((g$fmls$9781$1bEyPh g$body$9782$1bEyPh)
                 ((case-lambda
                    ((g$body$9783$1bEyPh g$fmls$9784$1bEyPh)
                     (g$build-lambda$7292$1bEyPh
                       '#f
                       g$fmls$9784$1bEyPh
                       g$body$9783$1bEyPh)))
                  g$body$9782$1bEyPh
                  g$fmls$9781$1bEyPh))))))
         (car g$x$9774$1bEyPh)
         (cdr g$x$9774$1bEyPh)))))
   (g$chi-rhs$7663$1bEyPh
     g$chi-rhs$11102$1bEyPh
     (case-lambda
       ((g$rhs$9785$1bEyPh g$r$9786$1bEyPh g$mr$9787$1bEyPh)
        ((case-lambda
           ((g$t$9788$1bEyPh)
            (if (memv g$t$9788$1bEyPh '(defun))
              (g$chi-defun$7662$1bEyPh
                (cdr g$rhs$9785$1bEyPh)
                g$r$9786$1bEyPh
                g$mr$9787$1bEyPh)
              (if (memv g$t$9788$1bEyPh '(expr))
                ((case-lambda
                   ((g$expr$9789$1bEyPh)
                    (g$chi-expr$7657$1bEyPh
                      g$expr$9789$1bEyPh
                      g$r$9786$1bEyPh
                      g$mr$9787$1bEyPh)))
                 (cdr g$rhs$9785$1bEyPh))
                (if (memv g$t$9788$1bEyPh '(top-expr))
                  ((case-lambda
                     ((g$expr$9790$1bEyPh)
                      (g$build-sequence$7295$1bEyPh
                        '#f
                        (list
                          (g$chi-expr$7657$1bEyPh
                            g$expr$9790$1bEyPh
                            g$r$9786$1bEyPh
                            g$mr$9787$1bEyPh)
                          (g$build-void$7296$1bEyPh)))))
                   (cdr g$rhs$9785$1bEyPh))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9785$1bEyPh))))))
         (car g$rhs$9785$1bEyPh)))))
   (g$expand-interaction-rhs*/init*$7664$1bEyPh
     g$expand-interaction-rhs*/init*$11103$1bEyPh
     (case-lambda
       ((g$lhs*$9791$1bEyPh
          g$rhs*$9792$1bEyPh
          g$init*$9793$1bEyPh
          g$r$9794$1bEyPh
          g$mr$9795$1bEyPh)
        ((letrec ((g$f$9796$1bEyPh
                    (case-lambda
                      ((g$lhs*$9797$1bEyPh g$rhs*$9798$1bEyPh)
                       (if (null? g$lhs*$9797$1bEyPh)
                         (map (case-lambda
                                ((g$x$9799$1bEyPh)
                                 (g$chi-expr$7657$1bEyPh
                                   g$x$9799$1bEyPh
                                   g$r$9794$1bEyPh
                                   g$mr$9795$1bEyPh)))
                              g$init*$9793$1bEyPh)
                         ((case-lambda
                            ((g$lhs$9800$1bEyPh g$rhs$9801$1bEyPh)
                             ((case-lambda
                                ((g$t$9802$1bEyPh)
                                 (if (memv g$t$9802$1bEyPh '(defun))
                                   ((case-lambda
                                      ((g$rhs$9803$1bEyPh)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9800$1bEyPh
                                           g$rhs$9803$1bEyPh)
                                         (g$f$9796$1bEyPh
                                           (cdr g$lhs*$9797$1bEyPh)
                                           (cdr g$rhs*$9798$1bEyPh)))))
                                    (g$chi-defun$7662$1bEyPh
                                      (cdr g$rhs$9801$1bEyPh)
                                      g$r$9794$1bEyPh
                                      g$mr$9795$1bEyPh))
                                   (if (memv g$t$9802$1bEyPh '(expr))
                                     ((case-lambda
                                        ((g$rhs$9804$1bEyPh)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9800$1bEyPh
                                             g$rhs$9804$1bEyPh)
                                           (g$f$9796$1bEyPh
                                             (cdr g$lhs*$9797$1bEyPh)
                                             (cdr g$rhs*$9798$1bEyPh)))))
                                      (g$chi-expr$7657$1bEyPh
                                        (cdr g$rhs$9801$1bEyPh)
                                        g$r$9794$1bEyPh
                                        g$mr$9795$1bEyPh))
                                     (if (memv g$t$9802$1bEyPh '(top-expr))
                                       ((case-lambda
                                          ((g$e$9805$1bEyPh)
                                           (cons
                                             g$e$9805$1bEyPh
                                             (g$f$9796$1bEyPh
                                               (cdr g$lhs*$9797$1bEyPh)
                                               (cdr g$rhs*$9798$1bEyPh)))))
                                        (g$chi-expr$7657$1bEyPh
                                          (cdr g$rhs$9801$1bEyPh)
                                          g$r$9794$1bEyPh
                                          g$mr$9795$1bEyPh))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9801$1bEyPh))))))
                              (car g$rhs$9801$1bEyPh))))
                          (car g$lhs*$9797$1bEyPh)
                          (car g$rhs*$9798$1bEyPh)))))))
           g$f$9796$1bEyPh)
         g$lhs*$9791$1bEyPh
         g$rhs*$9792$1bEyPh))))
   (g$chi-rhs*$7665$1bEyPh
     g$chi-rhs*$11104$1bEyPh
     (case-lambda
       ((g$rhs*$9806$1bEyPh g$r$9807$1bEyPh g$mr$9808$1bEyPh)
        ((letrec ((g$f$9809$1bEyPh
                    (case-lambda
                      ((g$ls$9810$1bEyPh)
                       (if (null? g$ls$9810$1bEyPh)
                         '()
                         ((case-lambda
                            ((g$a$9811$1bEyPh)
                             (cons
                               g$a$9811$1bEyPh
                               (g$f$9809$1bEyPh (cdr g$ls$9810$1bEyPh)))))
                          (g$chi-rhs$7663$1bEyPh
                            (car g$ls$9810$1bEyPh)
                            g$r$9807$1bEyPh
                            g$mr$9808$1bEyPh)))))))
           g$f$9809$1bEyPh)
         g$rhs*$9806$1bEyPh))))
   (g$find-bound=?$7666$1bEyPh
     g$find-bound=?$11105$1bEyPh
     (case-lambda
       ((g$x$9812$1bEyPh g$lhs*$9813$1bEyPh g$rhs*$9814$1bEyPh)
        (if (null? g$lhs*$9813$1bEyPh)
          '#f
          (if (g$bound-id=?$7364$1bEyPh
                g$x$9812$1bEyPh
                (car g$lhs*$9813$1bEyPh))
            (car g$rhs*$9814$1bEyPh)
            (g$find-bound=?$7666$1bEyPh
              g$x$9812$1bEyPh
              (cdr g$lhs*$9813$1bEyPh)
              (cdr g$rhs*$9814$1bEyPh)))))))
   (g$find-dups$7667$1bEyPh
     g$find-dups$11106$1bEyPh
     (case-lambda
       ((g$ls$9815$1bEyPh)
        ((letrec ((g$f$9816$1bEyPh
                    (case-lambda
                      ((g$ls$9817$1bEyPh g$dups$9818$1bEyPh)
                       (if (null? g$ls$9817$1bEyPh)
                         g$dups$9818$1bEyPh
                         ((case-lambda
                            ((g$t$9819$1bEyPh)
                             (if g$t$9819$1bEyPh
                               ((case-lambda
                                  ((g$x$9820$1bEyPh)
                                   (g$f$9816$1bEyPh
                                     (cdr g$ls$9817$1bEyPh)
                                     (cons
                                       (list
                                         (car g$ls$9817$1bEyPh)
                                         g$x$9820$1bEyPh)
                                       g$dups$9818$1bEyPh))))
                                g$t$9819$1bEyPh)
                               (g$f$9816$1bEyPh
                                 (cdr g$ls$9817$1bEyPh)
                                 g$dups$9818$1bEyPh))))
                          (g$find-bound=?$7666$1bEyPh
                            (car g$ls$9817$1bEyPh)
                            (cdr g$ls$9817$1bEyPh)
                            (cdr g$ls$9817$1bEyPh))))))))
           g$f$9816$1bEyPh)
         g$ls$9815$1bEyPh
         '()))))
   (g$chi-internal$7668$1bEyPh
     g$chi-internal$11107$1bEyPh
     (case-lambda
       ((g$e*$9821$1bEyPh g$r$9822$1bEyPh g$mr$9823$1bEyPh)
        ((case-lambda
           ((g$rib$9824$1bEyPh)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7683$1bEyPh
                   (map (case-lambda
                          ((g$x$9832$1bEyPh)
                           (g$add-subst$7351$1bEyPh
                             g$rib$9824$1bEyPh
                             g$x$9832$1bEyPh)))
                        (g$syntax->list$7360$1bEyPh g$e*$9821$1bEyPh))
                   g$r$9822$1bEyPh
                   g$mr$9823$1bEyPh
                   '()
                   '()
                   '()
                   '()
                   g$rib$9824$1bEyPh
                   '#f)))
              (case-lambda
                ((g$e*$9833$1bEyPh
                   g$r$9834$1bEyPh
                   g$mr$9835$1bEyPh
                   g$lex*$9836$1bEyPh
                   g$rhs*$9837$1bEyPh
                   g$mod**$9838$1bEyPh
                   g$kwd*$9839$1bEyPh)
                 ((case-lambda
                    ((g$kwd*$9840$1bEyPh
                       g$mod**$9841$1bEyPh
                       g$rhs*$9842$1bEyPh
                       g$lex*$9843$1bEyPh
                       g$mr$9844$1bEyPh
                       g$r$9845$1bEyPh
                       g$e*$9846$1bEyPh)
                     (begin
                       (if (null? g$e*$9846$1bEyPh)
                         (g$syntax-violation$7748$1bEyPh
                           '#f
                           '"no expression in body"
                           g$e*$9846$1bEyPh)
                         (void))
                       ((case-lambda
                          ((g$init*$9847$1bEyPh)
                           ((case-lambda
                              ((g$rhs*$9848$1bEyPh)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7298$1bEyPh
                                     '#f
                                     (reverse g$lex*$9843$1bEyPh)
                                     (reverse g$rhs*$9848$1bEyPh)
                                     (g$build-sequence$7295$1bEyPh
                                       '#f
                                       g$init*$9847$1bEyPh)))))))
                            (g$chi-rhs*$7665$1bEyPh
                              g$rhs*$9842$1bEyPh
                              g$r$9845$1bEyPh
                              g$mr$9844$1bEyPh))))
                        (g$chi-expr*$7655$1bEyPh
                          (append
                            (apply append (reverse g$mod**$9841$1bEyPh))
                            g$e*$9846$1bEyPh)
                          g$r$9845$1bEyPh
                          g$mr$9844$1bEyPh)))))
                  g$kwd*$9839$1bEyPh
                  g$mod**$9838$1bEyPh
                  g$rhs*$9837$1bEyPh
                  g$lex*$9836$1bEyPh
                  g$mr$9835$1bEyPh
                  g$r$9834$1bEyPh
                  g$e*$9833$1bEyPh))))))
         (g$make-empty-rib$7324$1bEyPh)))))
   (g$parse-module$7669$1bEyPh
     g$parse-module$11108$1bEyPh
     (case-lambda
       ((g$e$9849$1bEyPh)
        ((case-lambda
           ((g$t$9850$1bEyPh)
            ((case-lambda
               ((g$ls/false$9851$1bEyPh)
                (if g$ls/false$9851$1bEyPh
                  (apply
                    (case-lambda
                      ((g$export*$9852$1bEyPh g$b*$9853$1bEyPh)
                       (begin
                         (if (not (g$for-all$5491$1bEyPh
                                    g$id?$7361$1bEyPh
                                    g$export*$9852$1bEyPh))
                           (g$syntax-violation$7748$1bEyPh
                             '#f
                             '"module exports must be identifiers"
                             g$e$9849$1bEyPh)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9852$1bEyPh)
                           g$b*$9853$1bEyPh))))
                    g$ls/false$9851$1bEyPh)
                  ((case-lambda
                     ((g$t$9854$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$9855$1bEyPh)
                          (if g$ls/false$9855$1bEyPh
                            (apply
                              (case-lambda
                                ((g$name$9856$1bEyPh
                                   g$export*$9857$1bEyPh
                                   g$b*$9858$1bEyPh)
                                 (begin
                                   (if (not (g$id?$7361$1bEyPh
                                              g$name$9856$1bEyPh))
                                     (g$syntax-violation$7748$1bEyPh
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9849$1bEyPh)
                                     (void))
                                   (if (not (g$for-all$5491$1bEyPh
                                              g$id?$7361$1bEyPh
                                              g$export*$9857$1bEyPh))
                                     (g$syntax-violation$7748$1bEyPh
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9849$1bEyPh)
                                     (void))
                                   (values
                                     g$name$9856$1bEyPh
                                     (list->vector g$export*$9857$1bEyPh)
                                     g$b*$9858$1bEyPh))))
                              g$ls/false$9855$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$9854$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$9854$1bEyPh
                         '(_ any each-any . each-any)))))
                   g$t$9850$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$9850$1bEyPh
               '(_ each-any . each-any)))))
         g$e$9849$1bEyPh))))
   (g$8842$7670$1bEyPh
     g$8842$11109$1bEyPh
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8845$1bEyPh
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8844$7671$1bEyPh g$8844$11110$1bEyPh '#f)
   (g$8843$7672$1bEyPh
     g$8843$11111$1bEyPh
     (make-record-constructor-descriptor
       g$8842$7670$1bEyPh
       '#f
       g$8844$7671$1bEyPh))
   (g$module-interface?$7673$1bEyPh
     g$module-interface?$11112$1bEyPh
     (record-predicate g$8842$7670$1bEyPh))
   (g$make-module-interface$7674$1bEyPh
     g$make-module-interface$11113$1bEyPh
     (record-constructor g$8843$7672$1bEyPh))
   (g$module-interface-first-mark$7675$1bEyPh
     g$module-interface-first-mark$11114$1bEyPh
     (record-accessor g$8842$7670$1bEyPh '0))
   (g$module-interface-exp-id-vec$7676$1bEyPh
     g$module-interface-exp-id-vec$11115$1bEyPh
     (record-accessor g$8842$7670$1bEyPh '1))
   (g$module-interface-exp-lab-vec$7677$1bEyPh
     g$module-interface-exp-lab-vec$11116$1bEyPh
     (record-accessor g$8842$7670$1bEyPh '2))
   (g$set-module-interface-first-mark!$7678$1bEyPh
     g$set-module-interface-first-mark!$11117$1bEyPh
     (record-mutator g$8842$7670$1bEyPh '0))
   (g$set-module-interface-exp-id-vec!$7679$1bEyPh
     g$set-module-interface-exp-id-vec!$11118$1bEyPh
     (record-mutator g$8842$7670$1bEyPh '1))
   (g$set-module-interface-exp-lab-vec!$7680$1bEyPh
     g$set-module-interface-exp-lab-vec!$11119$1bEyPh
     (record-mutator g$8842$7670$1bEyPh '2))
   (g$module-interface-exp-id*$7681$1bEyPh
     g$module-interface-exp-id*$11120$1bEyPh
     (case-lambda
       ((g$iface$9859$1bEyPh g$id$9860$1bEyPh)
        (letrec* ((g$diff-marks$9861$1bEyPh
                    (case-lambda
                      ((g$ls$9865$1bEyPh g$x$9866$1bEyPh)
                       (begin
                         (if (null? g$ls$9865$1bEyPh)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9867$1bEyPh)
                             (if (eq? g$a$9867$1bEyPh g$x$9866$1bEyPh)
                               '()
                               (cons
                                 g$a$9867$1bEyPh
                                 (g$diff-marks$9861$1bEyPh
                                   (cdr g$ls$9865$1bEyPh)
                                   g$x$9866$1bEyPh)))))
                          (car g$ls$9865$1bEyPh)))))))
          ((case-lambda
             ((g$diff$9862$1bEyPh g$id-vec$9863$1bEyPh)
              (if (null? g$diff$9862$1bEyPh)
                g$id-vec$9863$1bEyPh
                (vector-map
                  (case-lambda
                    ((g$x$9864$1bEyPh)
                     (g$make-stx$7334$1bEyPh
                       (g$stx-expr$7335$1bEyPh g$x$9864$1bEyPh)
                       (append
                         g$diff$9862$1bEyPh
                         (g$stx-mark*$7336$1bEyPh g$x$9864$1bEyPh))
                       '()
                       '())))
                  g$id-vec$9863$1bEyPh))))
           (g$diff-marks$9861$1bEyPh
             (g$stx-mark*$7336$1bEyPh g$id$9860$1bEyPh)
             (g$module-interface-first-mark$7675$1bEyPh g$iface$9859$1bEyPh))
           (g$module-interface-exp-id-vec$7676$1bEyPh g$iface$9859$1bEyPh))))))
   (g$chi-internal-module$7682$1bEyPh
     g$chi-internal-module$11121$1bEyPh
     (case-lambda
       ((g$e$9868$1bEyPh
          g$r$9869$1bEyPh
          g$mr$9870$1bEyPh
          g$lex*$9871$1bEyPh
          g$rhs*$9872$1bEyPh
          g$mod**$9873$1bEyPh
          g$kwd*$9874$1bEyPh)
        (call-with-values
          (case-lambda (() (g$parse-module$7669$1bEyPh g$e$9868$1bEyPh)))
          (case-lambda
            ((g$name$9878$1bEyPh g$exp-id*$9879$1bEyPh g$e*$9880$1bEyPh)
             ((case-lambda
                ((g$e*$9881$1bEyPh g$exp-id*$9882$1bEyPh g$name$9883$1bEyPh)
                 ((case-lambda
                    ((g$rib$9884$1bEyPh)
                     ((case-lambda
                        ((g$e*$9885$1bEyPh)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7683$1bEyPh
                                    g$e*$9885$1bEyPh
                                    g$r$9869$1bEyPh
                                    g$mr$9870$1bEyPh
                                    g$lex*$9871$1bEyPh
                                    g$rhs*$9872$1bEyPh
                                    g$mod**$9873$1bEyPh
                                    g$kwd*$9874$1bEyPh
                                    g$rib$9884$1bEyPh
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9893$1bEyPh
                                    g$r$9894$1bEyPh
                                    g$mr$9895$1bEyPh
                                    g$lex*$9896$1bEyPh
                                    g$rhs*$9897$1bEyPh
                                    g$mod**$9898$1bEyPh
                                    g$kwd*$9899$1bEyPh)
                                  ((case-lambda
                                     ((g$kwd*$9900$1bEyPh
                                        g$mod**$9901$1bEyPh
                                        g$rhs*$9902$1bEyPh
                                        g$lex*$9903$1bEyPh
                                        g$mr$9904$1bEyPh
                                        g$r$9905$1bEyPh
                                        g$e*$9906$1bEyPh)
                                      ((case-lambda
                                         ((g$exp-lab*$9907$1bEyPh
                                            g$mod**$9908$1bEyPh)
                                          (if (not g$name$9883$1bEyPh)
                                            (values
                                              g$lex*$9903$1bEyPh
                                              g$rhs*$9902$1bEyPh
                                              g$exp-id*$9882$1bEyPh
                                              g$exp-lab*$9907$1bEyPh
                                              g$r$9905$1bEyPh
                                              g$mr$9904$1bEyPh
                                              g$mod**$9908$1bEyPh
                                              g$kwd*$9900$1bEyPh)
                                            ((case-lambda
                                               ((g$lab$9909$1bEyPh
                                                  g$iface$9910$1bEyPh)
                                                (values
                                                  g$lex*$9903$1bEyPh
                                                  g$rhs*$9902$1bEyPh
                                                  (vector g$name$9883$1bEyPh)
                                                  (vector g$lab$9909$1bEyPh)
                                                  (cons
                                                    (cons
                                                      g$lab$9909$1bEyPh
                                                      (cons
                                                        '$module
                                                        g$iface$9910$1bEyPh))
                                                    g$r$9905$1bEyPh)
                                                  (cons
                                                    (cons
                                                      g$lab$9909$1bEyPh
                                                      (cons
                                                        '$module
                                                        g$iface$9910$1bEyPh))
                                                    g$mr$9904$1bEyPh)
                                                  g$mod**$9908$1bEyPh
                                                  g$kwd*$9900$1bEyPh)))
                                             (g$gen-label$7307$1bEyPh 'module)
                                             (g$make-module-interface$7674$1bEyPh
                                               (car (g$stx-mark*$7336$1bEyPh
                                                      g$name$9883$1bEyPh))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9911$1bEyPh)
                                                    (g$make-stx$7334$1bEyPh
                                                      (g$stx-expr$7335$1bEyPh
                                                        g$x$9911$1bEyPh)
                                                      (g$stx-mark*$7336$1bEyPh
                                                        g$x$9911$1bEyPh)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9882$1bEyPh)
                                               g$exp-lab*$9907$1bEyPh)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9912$1bEyPh)
                                            ((case-lambda
                                               ((g$t$9913$1bEyPh)
                                                (if g$t$9913$1bEyPh
                                                  g$t$9913$1bEyPh
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7748$1bEyPh
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9912$1bEyPh)))))
                                             (g$id->label$7374$1bEyPh
                                               (g$make-stx$7334$1bEyPh
                                                 (g$id->sym$7362$1bEyPh
                                                   g$x$9912$1bEyPh)
                                                 (g$stx-mark*$7336$1bEyPh
                                                   g$x$9912$1bEyPh)
                                                 (list g$rib$9884$1bEyPh)
                                                 '())))))
                                         g$exp-id*$9882$1bEyPh)
                                       (cons
                                         g$e*$9906$1bEyPh
                                         g$mod**$9901$1bEyPh))))
                                   g$kwd*$9899$1bEyPh
                                   g$mod**$9898$1bEyPh
                                   g$rhs*$9897$1bEyPh
                                   g$lex*$9896$1bEyPh
                                   g$mr$9895$1bEyPh
                                   g$r$9894$1bEyPh
                                   g$e*$9893$1bEyPh)))))))))
                      (map (case-lambda
                             ((g$x$9914$1bEyPh)
                              (g$add-subst$7351$1bEyPh
                                g$rib$9884$1bEyPh
                                g$x$9914$1bEyPh)))
                           (g$syntax->list$7360$1bEyPh g$e*$9881$1bEyPh)))))
                  (g$make-empty-rib$7324$1bEyPh))))
              g$e*$9880$1bEyPh
              g$exp-id*$9879$1bEyPh
              g$name$9878$1bEyPh)))))))
   (g$chi-body*$7683$1bEyPh
     g$chi-body*$11122$1bEyPh
     (case-lambda
       ((g$e*$9915$1bEyPh
          g$r$9916$1bEyPh
          g$mr$9917$1bEyPh
          g$lex*$9918$1bEyPh
          g$rhs*$9919$1bEyPh
          g$mod**$9920$1bEyPh
          g$kwd*$9921$1bEyPh
          g$rib$9922$1bEyPh
          g$top?$9923$1bEyPh)
        (if (null? g$e*$9915$1bEyPh)
          (values
            g$e*$9915$1bEyPh
            g$r$9916$1bEyPh
            g$mr$9917$1bEyPh
            g$lex*$9918$1bEyPh
            g$rhs*$9919$1bEyPh
            g$mod**$9920$1bEyPh
            g$kwd*$9921$1bEyPh)
          ((case-lambda
             ((g$e$9924$1bEyPh)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7381$1bEyPh g$e$9924$1bEyPh g$r$9916$1bEyPh)))
                (case-lambda
                  ((g$type$9928$1bEyPh g$value$9929$1bEyPh g$kwd$9930$1bEyPh)
                   ((case-lambda
                      ((g$kwd$9931$1bEyPh
                         g$value$9932$1bEyPh
                         g$type$9933$1bEyPh)
                       ((case-lambda
                          ((g$kwd*$9934$1bEyPh)
                           ((case-lambda
                              ((g$t$9935$1bEyPh)
                               (if (memv g$t$9935$1bEyPh '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7579$1bEyPh
                                        g$e$9924$1bEyPh)))
                                   (case-lambda
                                     ((g$id$9938$1bEyPh g$rhs$9939$1bEyPh)
                                      ((case-lambda
                                         ((g$rhs$9940$1bEyPh g$id$9941$1bEyPh)
                                          (begin
                                            (if (g$bound-id-member?$7368$1bEyPh
                                                  g$id$9941$1bEyPh
                                                  g$kwd*$9934$1bEyPh)
                                              (g$syntax-violation$7748$1bEyPh
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9924$1bEyPh)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7309$1bEyPh
                                                   g$id$9941$1bEyPh
                                                   g$rib$9922$1bEyPh)))
                                              (case-lambda
                                                ((g$lab$9944$1bEyPh
                                                   g$lex$9945$1bEyPh)
                                                 ((case-lambda
                                                    ((g$lex$9946$1bEyPh
                                                       g$lab$9947$1bEyPh)
                                                     (begin
                                                       (g$extend-rib!$7325$1bEyPh
                                                         g$rib$9922$1bEyPh
                                                         g$id$9941$1bEyPh
                                                         g$lab$9947$1bEyPh)
                                                       (g$chi-body*$7683$1bEyPh
                                                         (cdr g$e*$9915$1bEyPh)
                                                         (g$add-lexical$7586$1bEyPh
                                                           g$lab$9947$1bEyPh
                                                           g$lex$9946$1bEyPh
                                                           g$r$9916$1bEyPh)
                                                         g$mr$9917$1bEyPh
                                                         (cons
                                                           g$lex$9946$1bEyPh
                                                           g$lex*$9918$1bEyPh)
                                                         (cons
                                                           g$rhs$9940$1bEyPh
                                                           g$rhs*$9919$1bEyPh)
                                                         g$mod**$9920$1bEyPh
                                                         g$kwd*$9934$1bEyPh
                                                         g$rib$9922$1bEyPh
                                                         g$top?$9923$1bEyPh))))
                                                  g$lex$9945$1bEyPh
                                                  g$lab$9944$1bEyPh)))))))
                                       g$rhs$9939$1bEyPh
                                       g$id$9938$1bEyPh))))
                                 (if (memv g$t$9935$1bEyPh '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7580$1bEyPh
                                          g$e$9924$1bEyPh)))
                                     (case-lambda
                                       ((g$id$9950$1bEyPh g$rhs$9951$1bEyPh)
                                        ((case-lambda
                                           ((g$rhs$9952$1bEyPh g$id$9953$1bEyPh)
                                            (begin
                                              (if (g$bound-id-member?$7368$1bEyPh
                                                    g$id$9953$1bEyPh
                                                    g$kwd*$9934$1bEyPh)
                                                (g$syntax-violation$7748$1bEyPh
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9924$1bEyPh)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9954$1bEyPh
                                                    g$expanded-rhs$9955$1bEyPh)
                                                  (begin
                                                    (g$extend-rib!$7325$1bEyPh
                                                      g$rib$9922$1bEyPh
                                                      g$id$9953$1bEyPh
                                                      g$lab$9954$1bEyPh)
                                                    ((case-lambda
                                                       ((g$b$9956$1bEyPh)
                                                        (g$chi-body*$7683$1bEyPh
                                                          (cdr g$e*$9915$1bEyPh)
                                                          (cons
                                                            (cons
                                                              g$lab$9954$1bEyPh
                                                              g$b$9956$1bEyPh)
                                                            g$r$9916$1bEyPh)
                                                          (cons
                                                            (cons
                                                              g$lab$9954$1bEyPh
                                                              g$b$9956$1bEyPh)
                                                            g$mr$9917$1bEyPh)
                                                          g$lex*$9918$1bEyPh
                                                          g$rhs*$9919$1bEyPh
                                                          g$mod**$9920$1bEyPh
                                                          g$kwd*$9934$1bEyPh
                                                          g$rib$9922$1bEyPh
                                                          g$top?$9923$1bEyPh)))
                                                     (g$make-eval-transformer$7393$1bEyPh
                                                       g$expanded-rhs$9955$1bEyPh)))))
                                               (g$gen-define-label$7310$1bEyPh
                                                 g$id$9953$1bEyPh
                                                 g$rib$9922$1bEyPh)
                                               (g$expand-transformer$7684$1bEyPh
                                                 g$rhs$9952$1bEyPh
                                                 g$mr$9917$1bEyPh)))))
                                         g$rhs$9951$1bEyPh
                                         g$id$9950$1bEyPh))))
                                   (if (memv
                                         g$t$9935$1bEyPh
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9957$1bEyPh)
                                         ((case-lambda
                                            ((g$ls/false$9958$1bEyPh)
                                             (if (if g$ls/false$9958$1bEyPh
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9959$1bEyPh
                                                            g$xrhs*$9960$1bEyPh
                                                            g$xbody*$9961$1bEyPh)
                                                          (if (not (g$valid-bound-ids?$7366$1bEyPh
                                                                     g$xlhs*$9959$1bEyPh))
                                                            (g$syntax-violation$7748$1bEyPh
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9924$1bEyPh)
                                                            (void))))
                                                       g$ls/false$9958$1bEyPh))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9962$1bEyPh
                                                      g$xrhs*$9963$1bEyPh
                                                      g$xbody*$9964$1bEyPh)
                                                    ((case-lambda
                                                       ((g$xlab*$9965$1bEyPh)
                                                        ((case-lambda
                                                           ((g$xrib$9966$1bEyPh)
                                                            ((case-lambda
                                                               ((g$xb*$9967$1bEyPh)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7683$1bEyPh
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9968$1bEyPh)
                                                                                (g$add-subst$7351$1bEyPh
                                                                                  g$xrib$9966$1bEyPh
                                                                                  g$x$9968$1bEyPh)))
                                                                             g$xbody*$9964$1bEyPh)
                                                                        (cdr g$e*$9915$1bEyPh))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9965$1bEyPh
                                                                             g$xb*$9967$1bEyPh)
                                                                        g$r$9916$1bEyPh)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9965$1bEyPh
                                                                             g$xb*$9967$1bEyPh)
                                                                        g$mr$9917$1bEyPh)
                                                                      g$lex*$9918$1bEyPh
                                                                      g$rhs*$9919$1bEyPh
                                                                      g$mod**$9920$1bEyPh
                                                                      g$kwd*$9934$1bEyPh
                                                                      g$rib$9922$1bEyPh
                                                                      g$top?$9923$1bEyPh))))))
                                                             (map (case-lambda
                                                                    ((g$x$9969$1bEyPh)
                                                                     (g$make-eval-transformer$7393$1bEyPh
                                                                       (g$expand-transformer$7684$1bEyPh
                                                                         (if (eq? g$type$9933$1bEyPh
                                                                                  'let-syntax)
                                                                           g$x$9969$1bEyPh
                                                                           (g$add-subst$7351$1bEyPh
                                                                             g$xrib$9966$1bEyPh
                                                                             g$x$9969$1bEyPh))
                                                                         g$mr$9917$1bEyPh))))
                                                                  g$xrhs*$9963$1bEyPh))))
                                                         (g$make-full-rib$7329$1bEyPh
                                                           g$xlhs*$9962$1bEyPh
                                                           g$xlab*$9965$1bEyPh))))
                                                     (map g$gen-label$7307$1bEyPh
                                                          g$xlhs*$9962$1bEyPh))))
                                                 g$ls/false$9958$1bEyPh)
                                               (g$syntax-violation$7748$1bEyPh
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9957$1bEyPh))))
                                          (g$syntax-dispatch$7639$1bEyPh
                                            g$t$9957$1bEyPh
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9924$1bEyPh)
                                     (if (memv g$t$9935$1bEyPh '(begin))
                                       ((case-lambda
                                          ((g$t$9970$1bEyPh)
                                           ((case-lambda
                                              ((g$ls/false$9971$1bEyPh)
                                               (if g$ls/false$9971$1bEyPh
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9972$1bEyPh)
                                                      (g$chi-body*$7683$1bEyPh
                                                        (append
                                                          g$x*$9972$1bEyPh
                                                          (cdr g$e*$9915$1bEyPh))
                                                        g$r$9916$1bEyPh
                                                        g$mr$9917$1bEyPh
                                                        g$lex*$9918$1bEyPh
                                                        g$rhs*$9919$1bEyPh
                                                        g$mod**$9920$1bEyPh
                                                        g$kwd*$9934$1bEyPh
                                                        g$rib$9922$1bEyPh
                                                        g$top?$9923$1bEyPh)))
                                                   g$ls/false$9971$1bEyPh)
                                                 (g$syntax-violation$7748$1bEyPh
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9970$1bEyPh))))
                                            (g$syntax-dispatch$7639$1bEyPh
                                              g$t$9970$1bEyPh
                                              '(_ . each-any)))))
                                        g$e$9924$1bEyPh)
                                       (if (memv
                                             g$t$9935$1bEyPh
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7683$1bEyPh
                                           (cons
                                             (g$add-subst$7351$1bEyPh
                                               g$rib$9922$1bEyPh
                                               (g$chi-global-macro$7654$1bEyPh
                                                 g$value$9932$1bEyPh
                                                 g$e$9924$1bEyPh))
                                             (cdr g$e*$9915$1bEyPh))
                                           g$r$9916$1bEyPh
                                           g$mr$9917$1bEyPh
                                           g$lex*$9918$1bEyPh
                                           g$rhs*$9919$1bEyPh
                                           g$mod**$9920$1bEyPh
                                           g$kwd*$9934$1bEyPh
                                           g$rib$9922$1bEyPh
                                           g$top?$9923$1bEyPh)
                                         (if (memv
                                               g$t$9935$1bEyPh
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7683$1bEyPh
                                             (cons
                                               (g$add-subst$7351$1bEyPh
                                                 g$rib$9922$1bEyPh
                                                 (g$chi-local-macro$7653$1bEyPh
                                                   g$value$9932$1bEyPh
                                                   g$e$9924$1bEyPh))
                                               (cdr g$e*$9915$1bEyPh))
                                             g$r$9916$1bEyPh
                                             g$mr$9917$1bEyPh
                                             g$lex*$9918$1bEyPh
                                             g$rhs*$9919$1bEyPh
                                             g$mod**$9920$1bEyPh
                                             g$kwd*$9934$1bEyPh
                                             g$rib$9922$1bEyPh
                                             g$top?$9923$1bEyPh)
                                           (if (memv
                                                 g$t$9935$1bEyPh
                                                 '(macro macro!))
                                             (g$chi-body*$7683$1bEyPh
                                               (cons
                                                 (g$add-subst$7351$1bEyPh
                                                   g$rib$9922$1bEyPh
                                                   (g$chi-macro$7652$1bEyPh
                                                     g$value$9932$1bEyPh
                                                     g$e$9924$1bEyPh))
                                                 (cdr g$e*$9915$1bEyPh))
                                               g$r$9916$1bEyPh
                                               g$mr$9917$1bEyPh
                                               g$lex*$9918$1bEyPh
                                               g$rhs*$9919$1bEyPh
                                               g$mod**$9920$1bEyPh
                                               g$kwd*$9934$1bEyPh
                                               g$rib$9922$1bEyPh
                                               g$top?$9923$1bEyPh)
                                             (if (memv
                                                   g$t$9935$1bEyPh
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7682$1bEyPh
                                                      g$e$9924$1bEyPh
                                                      g$r$9916$1bEyPh
                                                      g$mr$9917$1bEyPh
                                                      g$lex*$9918$1bEyPh
                                                      g$rhs*$9919$1bEyPh
                                                      g$mod**$9920$1bEyPh
                                                      g$kwd*$9934$1bEyPh)))
                                                 (case-lambda
                                                   ((g$lex*$9981$1bEyPh
                                                      g$rhs*$9982$1bEyPh
                                                      g$m-exp-id*$9983$1bEyPh
                                                      g$m-exp-lab*$9984$1bEyPh
                                                      g$r$9985$1bEyPh
                                                      g$mr$9986$1bEyPh
                                                      g$mod**$9987$1bEyPh
                                                      g$kwd*$9988$1bEyPh)
                                                    ((case-lambda
                                                       ((g$kwd*$9989$1bEyPh
                                                          g$mod**$9990$1bEyPh
                                                          g$mr$9991$1bEyPh
                                                          g$r$9992$1bEyPh
                                                          g$m-exp-lab*$9993$1bEyPh
                                                          g$m-exp-id*$9994$1bEyPh
                                                          g$rhs*$9995$1bEyPh
                                                          g$lex*$9996$1bEyPh)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9997$1bEyPh
                                                                 g$lab$9998$1bEyPh)
                                                               (g$extend-rib!$7325$1bEyPh
                                                                 g$rib$9922$1bEyPh
                                                                 g$id$9997$1bEyPh
                                                                 g$lab$9998$1bEyPh)))
                                                            g$m-exp-id*$9994$1bEyPh
                                                            g$m-exp-lab*$9993$1bEyPh)
                                                          (g$chi-body*$7683$1bEyPh
                                                            (cdr g$e*$9915$1bEyPh)
                                                            g$r$9992$1bEyPh
                                                            g$mr$9991$1bEyPh
                                                            g$lex*$9996$1bEyPh
                                                            g$rhs*$9995$1bEyPh
                                                            g$mod**$9990$1bEyPh
                                                            g$kwd*$9989$1bEyPh
                                                            g$rib$9922$1bEyPh
                                                            g$top?$9923$1bEyPh))))
                                                     g$kwd*$9988$1bEyPh
                                                     g$mod**$9987$1bEyPh
                                                     g$mr$9986$1bEyPh
                                                     g$r$9985$1bEyPh
                                                     g$m-exp-lab*$9984$1bEyPh
                                                     g$m-exp-id*$9983$1bEyPh
                                                     g$rhs*$9982$1bEyPh
                                                     g$lex*$9981$1bEyPh))))
                                               (if (memv
                                                     g$t$9935$1bEyPh
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7732$1bEyPh
                                                     (g$stx->datum$7372$1bEyPh
                                                       g$e$9924$1bEyPh))
                                                   (g$chi-body*$7683$1bEyPh
                                                     (cdr g$e*$9915$1bEyPh)
                                                     g$r$9916$1bEyPh
                                                     g$mr$9917$1bEyPh
                                                     g$lex*$9918$1bEyPh
                                                     g$rhs*$9919$1bEyPh
                                                     g$mod**$9920$1bEyPh
                                                     g$kwd*$9934$1bEyPh
                                                     g$rib$9922$1bEyPh
                                                     g$top?$9923$1bEyPh))
                                                 (if (memv
                                                       g$t$9935$1bEyPh
                                                       '(import))
                                                   (begin
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$9999$1bEyPh
                                                                     (case-lambda
                                                                       ((g$e$10041$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$t$10042$1bEyPh)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10043$1bEyPh)
                                                                                (if (if g$ls/false$10043$1bEyPh
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10044$1bEyPh)
                                                                                             (g$id?$7361$1bEyPh
                                                                                               g$id$10044$1bEyPh)))
                                                                                          g$ls/false$10043$1bEyPh))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10045$1bEyPh)
                                                                                       '#t))
                                                                                    g$ls/false$10043$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$t$10046$1bEyPh)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10047$1bEyPh)
                                                                                          (if g$ls/false$10047$1bEyPh
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10048$1bEyPh)
                                                                                                 '#f))
                                                                                              g$ls/false$10047$1bEyPh)
                                                                                            ((case-lambda
                                                                                               ((g$t$10049$1bEyPh)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10050$1bEyPh)
                                                                                                    (if g$ls/false$10050$1bEyPh
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$7748$1bEyPh
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10041$1bEyPh)))
                                                                                                        g$ls/false$10050$1bEyPh)
                                                                                                      (g$syntax-violation$7748$1bEyPh
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10049$1bEyPh))))
                                                                                                 (g$syntax-dispatch$7639$1bEyPh
                                                                                                   g$t$10049$1bEyPh
                                                                                                   '_))))
                                                                                             g$t$10046$1bEyPh))))
                                                                                       (g$syntax-dispatch$7639$1bEyPh
                                                                                         g$t$10046$1bEyPh
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10042$1bEyPh))))
                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                               g$t$10042$1bEyPh
                                                                               '(_ any)))))
                                                                         g$e$10041$1bEyPh))))
                                                                   (g$module-import$10000$1bEyPh
                                                                     (case-lambda
                                                                       ((g$e$10024$1bEyPh
                                                                          g$r$10025$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$t$10026$1bEyPh)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10027$1bEyPh)
                                                                                (if (if g$ls/false$10027$1bEyPh
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10028$1bEyPh)
                                                                                             (g$id?$7361$1bEyPh
                                                                                               g$id$10028$1bEyPh)))
                                                                                          g$ls/false$10027$1bEyPh))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10029$1bEyPh)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$7381$1bEyPh
                                                                                              g$id$10029$1bEyPh
                                                                                              g$r$10025$1bEyPh)))
                                                                                         (case-lambda
                                                                                           ((g$type$10033$1bEyPh
                                                                                              g$value$10034$1bEyPh
                                                                                              g$kwd$10035$1bEyPh)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10036$1bEyPh
                                                                                                  g$value$10037$1bEyPh
                                                                                                  g$type$10038$1bEyPh)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10039$1bEyPh)
                                                                                                    (if (memv
                                                                                                          g$t$10039$1bEyPh
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10040$1bEyPh)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$7681$1bEyPh
                                                                                                              g$iface$10040$1bEyPh
                                                                                                              g$id$10029$1bEyPh)
                                                                                                            (g$module-interface-exp-lab-vec$7677$1bEyPh
                                                                                                              g$iface$10040$1bEyPh))))
                                                                                                       g$value$10037$1bEyPh)
                                                                                                      (g$syntax-violation$7748$1bEyPh
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10024$1bEyPh))))
                                                                                                 g$type$10038$1bEyPh)))
                                                                                             g$kwd$10035$1bEyPh
                                                                                             g$value$10034$1bEyPh
                                                                                             g$type$10033$1bEyPh))))))
                                                                                    g$ls/false$10027$1bEyPh)
                                                                                  (g$syntax-violation$7748$1bEyPh
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10026$1bEyPh))))
                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                               g$t$10026$1bEyPh
                                                                               '(_ any)))))
                                                                         g$e$10024$1bEyPh))))
                                                                   (g$library-import$10001$1bEyPh
                                                                     (case-lambda
                                                                       ((g$e$10010$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$t$10011$1bEyPh)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10012$1bEyPh)
                                                                                (if g$ls/false$10012$1bEyPh
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10013$1bEyPh
                                                                                         g$imp*$10014$1bEyPh)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$7688$1bEyPh
                                                                                              (g$syntax->datum$7751$1bEyPh
                                                                                                g$imp*$10014$1bEyPh))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10017$1bEyPh
                                                                                              g$subst-labels$10018$1bEyPh)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10019$1bEyPh
                                                                                                  g$subst-names$10020$1bEyPh)
                                                                                                (values
                                                                                                  (vector-map
                                                                                                    (case-lambda
                                                                                                      ((g$name$10021$1bEyPh)
                                                                                                       (g$datum->stx$7344$1bEyPh
                                                                                                         g$ctxt$10013$1bEyPh
                                                                                                         g$name$10021$1bEyPh)))
                                                                                                    g$subst-names$10020$1bEyPh)
                                                                                                  g$subst-labels$10019$1bEyPh)))
                                                                                             g$subst-labels$10018$1bEyPh
                                                                                             g$subst-names$10017$1bEyPh))))))
                                                                                    g$ls/false$10012$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$t$10022$1bEyPh)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10023$1bEyPh)
                                                                                          (if g$ls/false$10023$1bEyPh
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7748$1bEyPh
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10010$1bEyPh)))
                                                                                              g$ls/false$10023$1bEyPh)
                                                                                            (g$syntax-violation$7748$1bEyPh
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10022$1bEyPh))))
                                                                                       (g$syntax-dispatch$7639$1bEyPh
                                                                                         g$t$10022$1bEyPh
                                                                                         '_))))
                                                                                   g$t$10011$1bEyPh))))
                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                               g$t$10011$1bEyPh
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10010$1bEyPh)))))
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (if (g$module-import?$9999$1bEyPh
                                                                      g$e$9924$1bEyPh)
                                                                  (g$module-import$10000$1bEyPh
                                                                    g$e$9924$1bEyPh
                                                                    g$r$9916$1bEyPh)
                                                                  (g$library-import$10001$1bEyPh
                                                                    g$e$9924$1bEyPh))))
                                                             (case-lambda
                                                               ((g$id*$10004$1bEyPh
                                                                  g$lab*$10005$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$lab*$10006$1bEyPh
                                                                      g$id*$10007$1bEyPh)
                                                                    (vector-for-each
                                                                      (case-lambda
                                                                        ((g$id$10008$1bEyPh
                                                                           g$lab$10009$1bEyPh)
                                                                         (g$extend-rib!$7325$1bEyPh
                                                                           g$rib$9922$1bEyPh
                                                                           g$id$10008$1bEyPh
                                                                           g$lab$10009$1bEyPh)))
                                                                      g$id*$10007$1bEyPh
                                                                      g$lab*$10006$1bEyPh)))
                                                                 g$lab*$10005$1bEyPh
                                                                 g$id*$10004$1bEyPh))))))))
                                                     (g$chi-body*$7683$1bEyPh
                                                       (cdr g$e*$9915$1bEyPh)
                                                       g$r$9916$1bEyPh
                                                       g$mr$9917$1bEyPh
                                                       g$lex*$9918$1bEyPh
                                                       g$rhs*$9919$1bEyPh
                                                       g$mod**$9920$1bEyPh
                                                       g$kwd*$9934$1bEyPh
                                                       g$rib$9922$1bEyPh
                                                       g$top?$9923$1bEyPh))
                                                   (if g$top?$9923$1bEyPh
                                                     (g$chi-body*$7683$1bEyPh
                                                       (cdr g$e*$9915$1bEyPh)
                                                       g$r$9916$1bEyPh
                                                       g$mr$9917$1bEyPh
                                                       (cons
                                                         (g$gen-lexical$7305$1bEyPh
                                                           'dummy)
                                                         g$lex*$9918$1bEyPh)
                                                       (cons
                                                         (cons
                                                           'top-expr
                                                           g$e$9924$1bEyPh)
                                                         g$rhs*$9919$1bEyPh)
                                                       g$mod**$9920$1bEyPh
                                                       g$kwd*$9934$1bEyPh
                                                       g$rib$9922$1bEyPh
                                                       g$top?$9923$1bEyPh)
                                                     (values
                                                       g$e*$9915$1bEyPh
                                                       g$r$9916$1bEyPh
                                                       g$mr$9917$1bEyPh
                                                       g$lex*$9918$1bEyPh
                                                       g$rhs*$9919$1bEyPh
                                                       g$mod**$9920$1bEyPh
                                                       g$kwd*$9934$1bEyPh))))))))))))))
                            g$type$9933$1bEyPh)))
                        (if (g$id?$7361$1bEyPh g$kwd$9931$1bEyPh)
                          (cons g$kwd$9931$1bEyPh g$kwd*$9921$1bEyPh)
                          g$kwd*$9921$1bEyPh))))
                    g$kwd$9930$1bEyPh
                    g$value$9929$1bEyPh
                    g$type$9928$1bEyPh))))))
           (car g$e*$9915$1bEyPh))))))
   (g$expand-transformer$7684$1bEyPh
     g$expand-transformer$11123$1bEyPh
     (case-lambda
       ((g$expr$10051$1bEyPh g$r$10052$1bEyPh)
        ((case-lambda
           ((g$rtc$10053$1bEyPh)
            ((case-lambda
               ((g$expanded-rhs$10054$1bEyPh)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$10055$1bEyPh)
                        (case-lambda
                          ((g$x$10056$1bEyPh)
                           (begin
                             (g$invoke-library$7176$1bEyPh g$x$10056$1bEyPh)
                             (g$mark-visit$10055$1bEyPh g$x$10056$1bEyPh))))))
                     (g$vis-collector$7692$1bEyPh))
                    (g$rtc$10053$1bEyPh))
                  g$expanded-rhs$10054$1bEyPh)))
             ((case-lambda
                ((g$inv-collector$10061$1bEyPh
                   g$vis-collector$10062$1bEyPh
                   g$inv-collector$10063$1bEyPh
                   g$vis-collector$10064$1bEyPh)
                 ((case-lambda
                    ((g$swap$10065$1bEyPh)
                     (dynamic-wind
                       g$swap$10065$1bEyPh
                       (case-lambda
                         (()
                          (g$chi-expr$7657$1bEyPh
                            g$expr$10051$1bEyPh
                            g$r$10052$1bEyPh
                            g$r$10052$1bEyPh)))
                       g$swap$10065$1bEyPh)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10066$1bEyPh)
                           (begin
                             (g$inv-collector$10061$1bEyPh
                               g$inv-collector$10063$1bEyPh)
                             (set! g$inv-collector$10063$1bEyPh
                               g$t$10066$1bEyPh))))
                        (g$inv-collector$10061$1bEyPh))
                       ((case-lambda
                          ((g$t$10067$1bEyPh)
                           (begin
                             (g$vis-collector$10062$1bEyPh
                               g$vis-collector$10064$1bEyPh)
                             (set! g$vis-collector$10064$1bEyPh
                               g$t$10067$1bEyPh))))
                        (g$vis-collector$10062$1bEyPh))))))))
              g$inv-collector$7691$1bEyPh
              g$vis-collector$7692$1bEyPh
              g$rtc$10053$1bEyPh
              (case-lambda ((g$x$10068$1bEyPh) (values)))))))
         (g$make-collector$7690$1bEyPh)))))
   (g$parse-exports$7685$1bEyPh
     g$parse-exports$11124$1bEyPh
     (case-lambda
       ((g$exp*$10069$1bEyPh)
        (letrec* ((g$idsyn?$10070$1bEyPh
                    (case-lambda
                      ((g$x$10085$1bEyPh)
                       (symbol?
                         (g$syntax->datum$7751$1bEyPh g$x$10085$1bEyPh))))))
          ((letrec ((g$f$10071$1bEyPh
                      (case-lambda
                        ((g$exp*$10072$1bEyPh
                           g$int*$10073$1bEyPh
                           g$ext*$10074$1bEyPh)
                         (if (null? g$exp*$10072$1bEyPh)
                           (begin
                             ((case-lambda
                                ((g$id*$10075$1bEyPh)
                                 (if (not (g$valid-bound-ids?$7366$1bEyPh
                                            g$id*$10075$1bEyPh))
                                   (g$syntax-violation$7748$1bEyPh
                                     'export
                                     '"invalid exports"
                                     (g$find-dups$7667$1bEyPh
                                       g$id*$10075$1bEyPh))
                                   (void))))
                              (map (case-lambda
                                     ((g$x$10076$1bEyPh)
                                      (g$make-stx$7334$1bEyPh
                                        g$x$10076$1bEyPh
                                        g$top-mark*$7303$1bEyPh
                                        '()
                                        '())))
                                   g$ext*$10074$1bEyPh))
                             (values
                               (map g$syntax->datum$7751$1bEyPh
                                    g$int*$10073$1bEyPh)
                               (map g$syntax->datum$7751$1bEyPh
                                    g$ext*$10074$1bEyPh)))
                           ((case-lambda
                              ((g$t$10077$1bEyPh)
                               ((case-lambda
                                  ((g$ls/false$10078$1bEyPh)
                                   (if g$ls/false$10078$1bEyPh
                                     (apply
                                       (case-lambda
                                         ((g$rename$10079$1bEyPh
                                            g$i*$10080$1bEyPh
                                            g$e*$10081$1bEyPh)
                                          (begin
                                            (if (not (if (eq? (g$syntax->datum$7751$1bEyPh
                                                                g$rename$10079$1bEyPh)
                                                              'rename)
                                                       (if (g$for-all$5491$1bEyPh
                                                             g$idsyn?$10070$1bEyPh
                                                             g$i*$10080$1bEyPh)
                                                         (begin
                                                           '#f
                                                           (g$for-all$5491$1bEyPh
                                                             g$idsyn?$10070$1bEyPh
                                                             g$e*$10081$1bEyPh))
                                                         '#f)
                                                       '#f))
                                              (g$syntax-violation$7748$1bEyPh
                                                'export
                                                '"invalid export specifier"
                                                (car g$exp*$10072$1bEyPh))
                                              (void))
                                            (g$f$10071$1bEyPh
                                              (cdr g$exp*$10072$1bEyPh)
                                              (append
                                                g$i*$10080$1bEyPh
                                                g$int*$10073$1bEyPh)
                                              (append
                                                g$e*$10081$1bEyPh
                                                g$ext*$10074$1bEyPh)))))
                                       g$ls/false$10078$1bEyPh)
                                     ((case-lambda
                                        ((g$t$10082$1bEyPh)
                                         ((case-lambda
                                            ((g$ls/false$10083$1bEyPh)
                                             (if g$ls/false$10083$1bEyPh
                                               (apply
                                                 (case-lambda
                                                   ((g$ie$10084$1bEyPh)
                                                    (begin
                                                      (if (not (g$idsyn?$10070$1bEyPh
                                                                 g$ie$10084$1bEyPh))
                                                        (g$syntax-violation$7748$1bEyPh
                                                          'export
                                                          '"invalid export"
                                                          g$ie$10084$1bEyPh)
                                                        (void))
                                                      (g$f$10071$1bEyPh
                                                        (cdr g$exp*$10072$1bEyPh)
                                                        (cons
                                                          g$ie$10084$1bEyPh
                                                          g$int*$10073$1bEyPh)
                                                        (cons
                                                          g$ie$10084$1bEyPh
                                                          g$ext*$10074$1bEyPh)))))
                                                 g$ls/false$10083$1bEyPh)
                                               (g$syntax-violation$7748$1bEyPh
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10082$1bEyPh))))
                                          (g$syntax-dispatch$7639$1bEyPh
                                            g$t$10082$1bEyPh
                                            'any))))
                                      g$t$10077$1bEyPh))))
                                (g$syntax-dispatch$7639$1bEyPh
                                  g$t$10077$1bEyPh
                                  '(any . #(each (any any)))))))
                            (car g$exp*$10072$1bEyPh)))))))
             g$f$10071$1bEyPh)
           g$exp*$10069$1bEyPh
           '()
           '())))))
   (g$parse-library-name$7686$1bEyPh
     g$parse-library-name$11125$1bEyPh
     (case-lambda
       ((g$spec$10086$1bEyPh)
        (letrec* ((g$parse$10087$1bEyPh
                    (case-lambda
                      ((g$x$10094$1bEyPh)
                       ((case-lambda
                          ((g$t$10095$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$10096$1bEyPh)
                               (if (if g$ls/false$10096$1bEyPh
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10097$1bEyPh)
                                            (g$for-all$5491$1bEyPh
                                              (case-lambda
                                                ((g$x$10098$1bEyPh)
                                                 ((case-lambda
                                                    ((g$x$10099$1bEyPh)
                                                     (if (integer?
                                                           g$x$10099$1bEyPh)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10099$1bEyPh))
                                                       '#f)))
                                                  (g$syntax->datum$7751$1bEyPh
                                                    g$x$10098$1bEyPh))))
                                              g$v*$10097$1bEyPh)))
                                         g$ls/false$10096$1bEyPh))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10100$1bEyPh)
                                      (values
                                        '()
                                        (map g$syntax->datum$7751$1bEyPh
                                             g$v*$10100$1bEyPh))))
                                   g$ls/false$10096$1bEyPh)
                                 ((case-lambda
                                    ((g$t$10101$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$10102$1bEyPh)
                                         (if (if g$ls/false$10102$1bEyPh
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10103$1bEyPh
                                                        g$rest$10104$1bEyPh)
                                                      (symbol?
                                                        (g$syntax->datum$7751$1bEyPh
                                                          g$x$10103$1bEyPh))))
                                                   g$ls/false$10102$1bEyPh))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10105$1bEyPh
                                                  g$rest$10106$1bEyPh)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10087$1bEyPh
                                                       g$rest$10106$1bEyPh)))
                                                  (case-lambda
                                                    ((g$x*$10109$1bEyPh
                                                       g$v*$10110$1bEyPh)
                                                     ((case-lambda
                                                        ((g$v*$10111$1bEyPh
                                                           g$x*$10112$1bEyPh)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7751$1bEyPh
                                                               g$x$10105$1bEyPh)
                                                             g$x*$10112$1bEyPh)
                                                           g$v*$10111$1bEyPh)))
                                                      g$v*$10110$1bEyPh
                                                      g$x*$10109$1bEyPh))))))
                                             g$ls/false$10102$1bEyPh)
                                           ((case-lambda
                                              ((g$t$10113$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$10114$1bEyPh)
                                                   (if g$ls/false$10114$1bEyPh
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10114$1bEyPh)
                                                     ((case-lambda
                                                        ((g$t$10115$1bEyPh)
                                                         ((case-lambda
                                                            ((g$ls/false$10116$1bEyPh)
                                                             (if g$ls/false$10116$1bEyPh
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7748$1bEyPh
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10086$1bEyPh)))
                                                                 g$ls/false$10116$1bEyPh)
                                                               (g$syntax-violation$7748$1bEyPh
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10115$1bEyPh))))
                                                          (g$syntax-dispatch$7639$1bEyPh
                                                            g$t$10115$1bEyPh
                                                            '_))))
                                                      g$t$10113$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$10113$1bEyPh
                                                  '()))))
                                            g$t$10101$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$10101$1bEyPh
                                        '(any . any)))))
                                  g$t$10095$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$10095$1bEyPh
                              '(each-any)))))
                        g$x$10094$1bEyPh)))))
          (call-with-values
            (case-lambda (() (g$parse$10087$1bEyPh g$spec$10086$1bEyPh)))
            (case-lambda
              ((g$name*$10090$1bEyPh g$ver*$10091$1bEyPh)
               ((case-lambda
                  ((g$ver*$10092$1bEyPh g$name*$10093$1bEyPh)
                   (begin
                     (if (null? g$name*$10093$1bEyPh)
                       (g$syntax-violation$7748$1bEyPh
                         '#f
                         '"empty library name"
                         g$spec$10086$1bEyPh)
                       (void))
                     (values g$name*$10093$1bEyPh g$ver*$10092$1bEyPh))))
                g$ver*$10091$1bEyPh
                g$name*$10090$1bEyPh))))))))
   (g$parse-library$7687$1bEyPh
     g$parse-library$11126$1bEyPh
     (case-lambda
       ((g$e$10117$1bEyPh)
        ((case-lambda
           ((g$t$10118$1bEyPh)
            ((case-lambda
               ((g$ls/false$10119$1bEyPh)
                (if (if g$ls/false$10119$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10120$1bEyPh
                               g$name*$10121$1bEyPh
                               g$export$10122$1bEyPh
                               g$exp*$10123$1bEyPh
                               g$import$10124$1bEyPh
                               g$imp*$10125$1bEyPh
                               g$b*$10126$1bEyPh)
                             (if (eq? (g$syntax->datum$7751$1bEyPh
                                        g$export$10122$1bEyPh)
                                      'export)
                               (if (eq? (g$syntax->datum$7751$1bEyPh
                                          g$import$10124$1bEyPh)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7751$1bEyPh
                                          g$library$10120$1bEyPh)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10119$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10127$1bEyPh
                         g$name*$10128$1bEyPh
                         g$export$10129$1bEyPh
                         g$exp*$10130$1bEyPh
                         g$import$10131$1bEyPh
                         g$imp*$10132$1bEyPh
                         g$b*$10133$1bEyPh)
                       (values
                         g$name*$10128$1bEyPh
                         g$exp*$10130$1bEyPh
                         g$imp*$10132$1bEyPh
                         g$b*$10133$1bEyPh)))
                    g$ls/false$10119$1bEyPh)
                  ((case-lambda
                     ((g$t$10134$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$10135$1bEyPh)
                          (if g$ls/false$10135$1bEyPh
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7748$1bEyPh
                                   '#f
                                   '"malformed library"
                                   g$e$10117$1bEyPh)))
                              g$ls/false$10135$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$10134$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh g$t$10134$1bEyPh '_))))
                   g$t$10118$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$10118$1bEyPh
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10117$1bEyPh))))
   (g$parse-import-spec*$7688$1bEyPh
     g$parse-import-spec*$11127$1bEyPh
     (case-lambda
       ((g$imp*$10136$1bEyPh)
        (letrec* ((g$idsyn?$10137$1bEyPh
                    (case-lambda
                      ((g$x$10397$1bEyPh)
                       (symbol?
                         (g$syntax->datum$7751$1bEyPh g$x$10397$1bEyPh)))))
                  (g$dup-error$10138$1bEyPh
                    (case-lambda
                      ((g$name$10396$1bEyPh)
                       (g$syntax-violation$7748$1bEyPh
                         'import
                         '"two imports with different bindings"
                         g$name$10396$1bEyPh))))
                  (g$merge-substs$10139$1bEyPh
                    (case-lambda
                      ((g$s$10387$1bEyPh g$subst$10388$1bEyPh)
                       (letrec* ((g$insert-to-subst$10389$1bEyPh
                                   (case-lambda
                                     ((g$a$10390$1bEyPh g$subst$10391$1bEyPh)
                                      ((case-lambda
                                         ((g$name$10392$1bEyPh
                                            g$label$10393$1bEyPh)
                                          ((case-lambda
                                             ((g$t$10394$1bEyPh)
                                              (if g$t$10394$1bEyPh
                                                ((case-lambda
                                                   ((g$x$10395$1bEyPh)
                                                    (if (eq? (cdr g$x$10395$1bEyPh)
                                                             g$label$10393$1bEyPh)
                                                      g$subst$10391$1bEyPh
                                                      (g$dup-error$10138$1bEyPh
                                                        g$name$10392$1bEyPh))))
                                                 g$t$10394$1bEyPh)
                                                (cons
                                                  g$a$10390$1bEyPh
                                                  g$subst$10391$1bEyPh))))
                                           (assq
                                             g$name$10392$1bEyPh
                                             g$subst$10391$1bEyPh))))
                                       (car g$a$10390$1bEyPh)
                                       (cdr g$a$10390$1bEyPh))))))
                         (if (null? g$s$10387$1bEyPh)
                           g$subst$10388$1bEyPh
                           (g$insert-to-subst$10389$1bEyPh
                             (car g$s$10387$1bEyPh)
                             (g$merge-substs$10139$1bEyPh
                               (cdr g$s$10387$1bEyPh)
                               g$subst$10388$1bEyPh)))))))
                  (g$exclude*$10140$1bEyPh
                    (case-lambda
                      ((g$sym*$10363$1bEyPh g$subst$10364$1bEyPh)
                       (letrec* ((g$exclude$10365$1bEyPh
                                   (case-lambda
                                     ((g$sym$10378$1bEyPh g$subst$10379$1bEyPh)
                                      (if (null? g$subst$10379$1bEyPh)
                                        (g$syntax-violation$7748$1bEyPh
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10378$1bEyPh)
                                        (if (eq? g$sym$10378$1bEyPh
                                                 (g$caar$5009$1bEyPh
                                                   g$subst$10379$1bEyPh))
                                          (values
                                            (g$cdar$5011$1bEyPh
                                              g$subst$10379$1bEyPh)
                                            (cdr g$subst$10379$1bEyPh))
                                          ((case-lambda
                                             ((g$a$10380$1bEyPh)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10365$1bEyPh
                                                     g$sym$10378$1bEyPh
                                                     (cdr g$subst$10379$1bEyPh))))
                                                (case-lambda
                                                  ((g$old$10383$1bEyPh
                                                     g$subst$10384$1bEyPh)
                                                   ((case-lambda
                                                      ((g$subst$10385$1bEyPh
                                                         g$old$10386$1bEyPh)
                                                       (values
                                                         g$old$10386$1bEyPh
                                                         (cons
                                                           g$a$10380$1bEyPh
                                                           g$subst$10385$1bEyPh))))
                                                    g$subst$10384$1bEyPh
                                                    g$old$10383$1bEyPh))))))
                                           (car g$subst$10379$1bEyPh))))))))
                         (if (null? g$sym*$10363$1bEyPh)
                           (values '() g$subst$10364$1bEyPh)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10365$1bEyPh
                                  (car g$sym*$10363$1bEyPh)
                                  g$subst$10364$1bEyPh)))
                             (case-lambda
                               ((g$old$10368$1bEyPh g$subst$10369$1bEyPh)
                                ((case-lambda
                                   ((g$subst$10370$1bEyPh g$old$10371$1bEyPh)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10140$1bEyPh
                                           (cdr g$sym*$10363$1bEyPh)
                                           g$subst$10370$1bEyPh)))
                                      (case-lambda
                                        ((g$old*$10374$1bEyPh
                                           g$subst$10375$1bEyPh)
                                         ((case-lambda
                                            ((g$subst$10376$1bEyPh
                                               g$old*$10377$1bEyPh)
                                             (values
                                               (cons
                                                 g$old$10371$1bEyPh
                                                 g$old*$10377$1bEyPh)
                                               g$subst$10376$1bEyPh)))
                                          g$subst$10375$1bEyPh
                                          g$old*$10374$1bEyPh))))))
                                 g$subst$10369$1bEyPh
                                 g$old$10368$1bEyPh)))))))))
                  (g$find*$10141$1bEyPh
                    (case-lambda
                      ((g$sym*$10359$1bEyPh g$subst$10360$1bEyPh)
                       (map (case-lambda
                              ((g$x$10361$1bEyPh)
                               ((case-lambda
                                  ((g$t$10362$1bEyPh)
                                   (if g$t$10362$1bEyPh
                                     (cdr g$t$10362$1bEyPh)
                                     (g$syntax-violation$7748$1bEyPh
                                       'import
                                       '"cannot find identifier"
                                       g$x$10361$1bEyPh))))
                                (assq g$x$10361$1bEyPh g$subst$10360$1bEyPh))))
                            g$sym*$10359$1bEyPh))))
                  (g$rem*$10142$1bEyPh
                    (case-lambda
                      ((g$sym*$10355$1bEyPh g$subst$10356$1bEyPh)
                       ((letrec ((g$f$10357$1bEyPh
                                   (case-lambda
                                     ((g$subst$10358$1bEyPh)
                                      (if (null? g$subst$10358$1bEyPh)
                                        '()
                                        (if (memq
                                              (g$caar$5009$1bEyPh
                                                g$subst$10358$1bEyPh)
                                              g$sym*$10355$1bEyPh)
                                          (g$f$10357$1bEyPh
                                            (cdr g$subst$10358$1bEyPh))
                                          (cons
                                            (car g$subst$10358$1bEyPh)
                                            (g$f$10357$1bEyPh
                                              (cdr g$subst$10358$1bEyPh)))))))))
                          g$f$10357$1bEyPh)
                        g$subst$10356$1bEyPh))))
                  (g$remove-dups$10143$1bEyPh
                    (case-lambda
                      ((g$ls$10354$1bEyPh)
                       (if (null? g$ls$10354$1bEyPh)
                         '()
                         (if (memq
                               (car g$ls$10354$1bEyPh)
                               (cdr g$ls$10354$1bEyPh))
                           (g$remove-dups$10143$1bEyPh (cdr g$ls$10354$1bEyPh))
                           (cons
                             (car g$ls$10354$1bEyPh)
                             (g$remove-dups$10143$1bEyPh
                               (cdr g$ls$10354$1bEyPh))))))))
                  (g$parse-library-name$10144$1bEyPh
                    (case-lambda
                      ((g$spec$10238$1bEyPh)
                       (letrec* ((g$subversion?$10239$1bEyPh
                                   (case-lambda
                                     ((g$x$10352$1bEyPh)
                                      ((case-lambda
                                         ((g$x$10353$1bEyPh)
                                          (if (integer? g$x$10353$1bEyPh)
                                            (if (exact? g$x$10353$1bEyPh)
                                              (begin
                                                '#f
                                                (>= g$x$10353$1bEyPh '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7751$1bEyPh
                                         g$x$10352$1bEyPh)))))
                                 (g$subversion-pred$10240$1bEyPh
                                   (case-lambda
                                     ((g$x*$10304$1bEyPh)
                                      ((case-lambda
                                         ((g$t$10305$1bEyPh)
                                          ((case-lambda
                                             ((g$ls/false$10306$1bEyPh)
                                              (if (if g$ls/false$10306$1bEyPh
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10307$1bEyPh)
                                                           (g$subversion?$10239$1bEyPh
                                                             g$n$10307$1bEyPh)))
                                                        g$ls/false$10306$1bEyPh))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10308$1bEyPh)
                                                     (case-lambda
                                                       ((g$x$10309$1bEyPh)
                                                        (= g$x$10309$1bEyPh
                                                           (g$syntax->datum$7751$1bEyPh
                                                             g$n$10308$1bEyPh))))))
                                                  g$ls/false$10306$1bEyPh)
                                                ((case-lambda
                                                   ((g$t$10310$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$10311$1bEyPh)
                                                        (if (if g$ls/false$10311$1bEyPh
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10312$1bEyPh
                                                                       g$sub*$10313$1bEyPh)
                                                                     (eq? (g$syntax->datum$7751$1bEyPh
                                                                            g$p?$10312$1bEyPh)
                                                                          'and)))
                                                                  g$ls/false$10311$1bEyPh))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10314$1bEyPh
                                                                 g$sub*$10315$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$p*$10316$1bEyPh)
                                                                   (case-lambda
                                                                     ((g$x$10317$1bEyPh)
                                                                      (g$for-all$5491$1bEyPh
                                                                        (case-lambda
                                                                          ((g$p$10318$1bEyPh)
                                                                           (g$p$10318$1bEyPh
                                                                             g$x$10317$1bEyPh)))
                                                                        g$p*$10316$1bEyPh)))))
                                                                (map g$subversion-pred$10240$1bEyPh
                                                                     g$sub*$10315$1bEyPh))))
                                                            g$ls/false$10311$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$10319$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$10320$1bEyPh)
                                                                  (if (if g$ls/false$10320$1bEyPh
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10321$1bEyPh
                                                                                 g$sub*$10322$1bEyPh)
                                                                               (eq? (g$syntax->datum$7751$1bEyPh
                                                                                      g$p?$10321$1bEyPh)
                                                                                    'or)))
                                                                            g$ls/false$10320$1bEyPh))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10323$1bEyPh
                                                                           g$sub*$10324$1bEyPh)
                                                                         ((case-lambda
                                                                            ((g$p*$10325$1bEyPh)
                                                                             (case-lambda
                                                                               ((g$x$10326$1bEyPh)
                                                                                (g$exists$5492$1bEyPh
                                                                                  (case-lambda
                                                                                    ((g$p$10327$1bEyPh)
                                                                                     (g$p$10327$1bEyPh
                                                                                       g$x$10326$1bEyPh)))
                                                                                  g$p*$10325$1bEyPh)))))
                                                                          (map g$subversion-pred$10240$1bEyPh
                                                                               g$sub*$10324$1bEyPh))))
                                                                      g$ls/false$10320$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$t$10328$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10329$1bEyPh)
                                                                            (if (if g$ls/false$10329$1bEyPh
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10330$1bEyPh
                                                                                           g$sub$10331$1bEyPh)
                                                                                         (eq? (g$syntax->datum$7751$1bEyPh
                                                                                                g$p?$10330$1bEyPh)
                                                                                              'not)))
                                                                                      g$ls/false$10329$1bEyPh))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10332$1bEyPh
                                                                                     g$sub$10333$1bEyPh)
                                                                                   ((case-lambda
                                                                                      ((g$p$10334$1bEyPh)
                                                                                       (case-lambda
                                                                                         ((g$x$10335$1bEyPh)
                                                                                          (not (g$p$10334$1bEyPh
                                                                                                 g$x$10335$1bEyPh))))))
                                                                                    (g$subversion-pred$10240$1bEyPh
                                                                                      g$sub$10333$1bEyPh))))
                                                                                g$ls/false$10329$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$t$10336$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10337$1bEyPh)
                                                                                      (if (if g$ls/false$10337$1bEyPh
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10338$1bEyPh
                                                                                                     g$n$10339$1bEyPh)
                                                                                                   (if (eq? (g$syntax->datum$7751$1bEyPh
                                                                                                              g$p?$10338$1bEyPh)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10239$1bEyPh
                                                                                                         g$n$10339$1bEyPh))
                                                                                                     '#f)))
                                                                                                g$ls/false$10337$1bEyPh))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10340$1bEyPh
                                                                                               g$n$10341$1bEyPh)
                                                                                             (case-lambda
                                                                                               ((g$x$10342$1bEyPh)
                                                                                                (<= g$x$10342$1bEyPh
                                                                                                    (g$syntax->datum$7751$1bEyPh
                                                                                                      g$n$10341$1bEyPh))))))
                                                                                          g$ls/false$10337$1bEyPh)
                                                                                        ((case-lambda
                                                                                           ((g$t$10343$1bEyPh)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10344$1bEyPh)
                                                                                                (if (if g$ls/false$10344$1bEyPh
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10345$1bEyPh
                                                                                                               g$n$10346$1bEyPh)
                                                                                                             (if (eq? (g$syntax->datum$7751$1bEyPh
                                                                                                                        g$p?$10345$1bEyPh)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10239$1bEyPh
                                                                                                                   g$n$10346$1bEyPh))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10344$1bEyPh))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10347$1bEyPh
                                                                                                         g$n$10348$1bEyPh)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10349$1bEyPh)
                                                                                                          (>= g$x$10349$1bEyPh
                                                                                                              (g$syntax->datum$7751$1bEyPh
                                                                                                                g$n$10348$1bEyPh))))))
                                                                                                    g$ls/false$10344$1bEyPh)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10350$1bEyPh)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10351$1bEyPh)
                                                                                                          (if g$ls/false$10351$1bEyPh
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7748$1bEyPh
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10238$1bEyPh
                                                                                                                   g$x*$10304$1bEyPh)))
                                                                                                              g$ls/false$10351$1bEyPh)
                                                                                                            (g$syntax-violation$7748$1bEyPh
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10350$1bEyPh))))
                                                                                                       (g$syntax-dispatch$7639$1bEyPh
                                                                                                         g$t$10350$1bEyPh
                                                                                                         '_))))
                                                                                                   g$t$10343$1bEyPh))))
                                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                                               g$t$10343$1bEyPh
                                                                                               '(any any)))))
                                                                                         g$t$10336$1bEyPh))))
                                                                                   (g$syntax-dispatch$7639$1bEyPh
                                                                                     g$t$10336$1bEyPh
                                                                                     '(any any)))))
                                                                               g$t$10328$1bEyPh))))
                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                           g$t$10328$1bEyPh
                                                                           '(any any)))))
                                                                     g$t$10319$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$10319$1bEyPh
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10310$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$10310$1bEyPh
                                                       '(any . each-any)))))
                                                 g$t$10305$1bEyPh))))
                                           (g$syntax-dispatch$7639$1bEyPh
                                             g$t$10305$1bEyPh
                                             'any))))
                                       g$x*$10304$1bEyPh))))
                                 (g$version-pred$10241$1bEyPh
                                   (case-lambda
                                     ((g$x*$10264$1bEyPh)
                                      ((case-lambda
                                         ((g$t$10265$1bEyPh)
                                          ((case-lambda
                                             ((g$ls/false$10266$1bEyPh)
                                              (if g$ls/false$10266$1bEyPh
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10267$1bEyPh)
                                                        '#t))))
                                                  g$ls/false$10266$1bEyPh)
                                                ((case-lambda
                                                   ((g$t$10268$1bEyPh)
                                                    ((case-lambda
                                                       ((g$ls/false$10269$1bEyPh)
                                                        (if (if g$ls/false$10269$1bEyPh
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10270$1bEyPh
                                                                       g$ver*$10271$1bEyPh)
                                                                     (eq? (g$syntax->datum$7751$1bEyPh
                                                                            g$c$10270$1bEyPh)
                                                                          'and)))
                                                                  g$ls/false$10269$1bEyPh))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10272$1bEyPh
                                                                 g$ver*$10273$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$p*$10274$1bEyPh)
                                                                   (case-lambda
                                                                     ((g$x$10275$1bEyPh)
                                                                      (g$for-all$5491$1bEyPh
                                                                        (case-lambda
                                                                          ((g$p$10276$1bEyPh)
                                                                           (g$p$10276$1bEyPh
                                                                             g$x$10275$1bEyPh)))
                                                                        g$p*$10274$1bEyPh)))))
                                                                (map g$version-pred$10241$1bEyPh
                                                                     g$ver*$10273$1bEyPh))))
                                                            g$ls/false$10269$1bEyPh)
                                                          ((case-lambda
                                                             ((g$t$10277$1bEyPh)
                                                              ((case-lambda
                                                                 ((g$ls/false$10278$1bEyPh)
                                                                  (if (if g$ls/false$10278$1bEyPh
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10279$1bEyPh
                                                                                 g$ver*$10280$1bEyPh)
                                                                               (eq? (g$syntax->datum$7751$1bEyPh
                                                                                      g$c$10279$1bEyPh)
                                                                                    'or)))
                                                                            g$ls/false$10278$1bEyPh))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10281$1bEyPh
                                                                           g$ver*$10282$1bEyPh)
                                                                         ((case-lambda
                                                                            ((g$p*$10283$1bEyPh)
                                                                             (case-lambda
                                                                               ((g$x$10284$1bEyPh)
                                                                                (g$exists$5492$1bEyPh
                                                                                  (case-lambda
                                                                                    ((g$p$10285$1bEyPh)
                                                                                     (g$p$10285$1bEyPh
                                                                                       g$x$10284$1bEyPh)))
                                                                                  g$p*$10283$1bEyPh)))))
                                                                          (map g$version-pred$10241$1bEyPh
                                                                               g$ver*$10282$1bEyPh))))
                                                                      g$ls/false$10278$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$t$10286$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10287$1bEyPh)
                                                                            (if (if g$ls/false$10287$1bEyPh
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10288$1bEyPh
                                                                                           g$ver$10289$1bEyPh)
                                                                                         (eq? (g$syntax->datum$7751$1bEyPh
                                                                                                g$c$10288$1bEyPh)
                                                                                              'not)))
                                                                                      g$ls/false$10287$1bEyPh))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10290$1bEyPh
                                                                                     g$ver$10291$1bEyPh)
                                                                                   ((case-lambda
                                                                                      ((g$p$10292$1bEyPh)
                                                                                       (case-lambda
                                                                                         ((g$x$10293$1bEyPh)
                                                                                          (not (g$p$10292$1bEyPh
                                                                                                 g$x$10293$1bEyPh))))))
                                                                                    (g$version-pred$10241$1bEyPh
                                                                                      g$ver$10291$1bEyPh))))
                                                                                g$ls/false$10287$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$t$10294$1bEyPh)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10295$1bEyPh)
                                                                                      (if g$ls/false$10295$1bEyPh
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10296$1bEyPh)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10297$1bEyPh)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10298$1bEyPh)
                                                                                                    ((letrec ((g$f$10299$1bEyPh
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10300$1bEyPh
                                                                                                                     g$x$10301$1bEyPh)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10300$1bEyPh)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10301$1bEyPh)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10300$1bEyPh)
                                                                                                                            (car g$x$10301$1bEyPh))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10299$1bEyPh
                                                                                                                             (cdr g$p*$10300$1bEyPh)
                                                                                                                             (cdr g$x$10301$1bEyPh)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10299$1bEyPh)
                                                                                                     g$p*$10297$1bEyPh
                                                                                                     g$x$10298$1bEyPh)))))
                                                                                              (map g$subversion-pred$10240$1bEyPh
                                                                                                   g$sub*$10296$1bEyPh))))
                                                                                          g$ls/false$10295$1bEyPh)
                                                                                        ((case-lambda
                                                                                           ((g$t$10302$1bEyPh)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10303$1bEyPh)
                                                                                                (if g$ls/false$10303$1bEyPh
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7748$1bEyPh
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10238$1bEyPh
                                                                                                         g$x*$10264$1bEyPh)))
                                                                                                    g$ls/false$10303$1bEyPh)
                                                                                                  (g$syntax-violation$7748$1bEyPh
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10302$1bEyPh))))
                                                                                             (g$syntax-dispatch$7639$1bEyPh
                                                                                               g$t$10302$1bEyPh
                                                                                               '_))))
                                                                                         g$t$10294$1bEyPh))))
                                                                                   (g$syntax-dispatch$7639$1bEyPh
                                                                                     g$t$10294$1bEyPh
                                                                                     'each-any))))
                                                                               g$t$10286$1bEyPh))))
                                                                         (g$syntax-dispatch$7639$1bEyPh
                                                                           g$t$10286$1bEyPh
                                                                           '(any any)))))
                                                                     g$t$10277$1bEyPh))))
                                                               (g$syntax-dispatch$7639$1bEyPh
                                                                 g$t$10277$1bEyPh
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10268$1bEyPh))))
                                                     (g$syntax-dispatch$7639$1bEyPh
                                                       g$t$10268$1bEyPh
                                                       '(any . each-any)))))
                                                 g$t$10265$1bEyPh))))
                                           (g$syntax-dispatch$7639$1bEyPh
                                             g$t$10265$1bEyPh
                                             '()))))
                                       g$x*$10264$1bEyPh)))))
                         ((letrec ((g$f$10242$1bEyPh
                                     (case-lambda
                                       ((g$x$10243$1bEyPh)
                                        ((case-lambda
                                           ((g$t$10244$1bEyPh)
                                            ((case-lambda
                                               ((g$ls/false$10245$1bEyPh)
                                                (if g$ls/false$10245$1bEyPh
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10246$1bEyPh)
                                                       (values
                                                         '()
                                                         (g$version-pred$10241$1bEyPh
                                                           g$version-spec*$10246$1bEyPh))))
                                                    g$ls/false$10245$1bEyPh)
                                                  ((case-lambda
                                                     ((g$t$10247$1bEyPh)
                                                      ((case-lambda
                                                         ((g$ls/false$10248$1bEyPh)
                                                          (if (if g$ls/false$10248$1bEyPh
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10249$1bEyPh
                                                                         g$x*$10250$1bEyPh)
                                                                       (g$idsyn?$10137$1bEyPh
                                                                         g$x$10249$1bEyPh)))
                                                                    g$ls/false$10248$1bEyPh))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10251$1bEyPh
                                                                   g$x*$10252$1bEyPh)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10242$1bEyPh
                                                                        g$x*$10252$1bEyPh)))
                                                                   (case-lambda
                                                                     ((g$name$10255$1bEyPh
                                                                        g$pred$10256$1bEyPh)
                                                                      ((case-lambda
                                                                         ((g$pred$10257$1bEyPh
                                                                            g$name$10258$1bEyPh)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7751$1bEyPh
                                                                                g$x$10251$1bEyPh)
                                                                              g$name$10258$1bEyPh)
                                                                            g$pred$10257$1bEyPh)))
                                                                       g$pred$10256$1bEyPh
                                                                       g$name$10255$1bEyPh))))))
                                                              g$ls/false$10248$1bEyPh)
                                                            ((case-lambda
                                                               ((g$t$10259$1bEyPh)
                                                                ((case-lambda
                                                                   ((g$ls/false$10260$1bEyPh)
                                                                    (if g$ls/false$10260$1bEyPh
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10261$1bEyPh)
                                                                                '#t)))))
                                                                        g$ls/false$10260$1bEyPh)
                                                                      ((case-lambda
                                                                         ((g$t$10262$1bEyPh)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10263$1bEyPh)
                                                                              (if g$ls/false$10263$1bEyPh
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7748$1bEyPh
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10238$1bEyPh)))
                                                                                  g$ls/false$10263$1bEyPh)
                                                                                (g$syntax-violation$7748$1bEyPh
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10262$1bEyPh))))
                                                                           (g$syntax-dispatch$7639$1bEyPh
                                                                             g$t$10262$1bEyPh
                                                                             '_))))
                                                                       g$t$10259$1bEyPh))))
                                                                 (g$syntax-dispatch$7639$1bEyPh
                                                                   g$t$10259$1bEyPh
                                                                   '()))))
                                                             g$t$10247$1bEyPh))))
                                                       (g$syntax-dispatch$7639$1bEyPh
                                                         g$t$10247$1bEyPh
                                                         '(any . any)))))
                                                   g$t$10244$1bEyPh))))
                                             (g$syntax-dispatch$7639$1bEyPh
                                               g$t$10244$1bEyPh
                                               '(each-any)))))
                                         g$x$10243$1bEyPh)))))
                            g$f$10242$1bEyPh)
                          g$spec$10238$1bEyPh)))))
                  (g$import-library$10145$1bEyPh
                    (case-lambda
                      ((g$spec*$10230$1bEyPh)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10144$1bEyPh
                              g$spec*$10230$1bEyPh)))
                         (case-lambda
                           ((g$name$10233$1bEyPh g$pred$10234$1bEyPh)
                            ((case-lambda
                               ((g$pred$10235$1bEyPh g$name$10236$1bEyPh)
                                (begin
                                  (if (null? g$name$10236$1bEyPh)
                                    (g$syntax-violation$7748$1bEyPh
                                      'import
                                      '"empty library name"
                                      g$spec*$10230$1bEyPh)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10237$1bEyPh)
                                      (begin
                                        (if (not g$lib$10237$1bEyPh)
                                          (g$syntax-violation$7748$1bEyPh
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10236$1bEyPh)
                                          (void))
                                        (if (not (g$pred$10235$1bEyPh
                                                   (g$library-version$7129$1bEyPh
                                                     g$lib$10237$1bEyPh)))
                                          (g$syntax-violation$7748$1bEyPh
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10230$1bEyPh
                                            g$lib$10237$1bEyPh)
                                          (void))
                                        ((g$imp-collector$7693$1bEyPh)
                                         g$lib$10237$1bEyPh)
                                        (g$library-subst$7133$1bEyPh
                                          g$lib$10237$1bEyPh))))
                                   (g$find-library-by-name$7169$1bEyPh
                                     g$name$10236$1bEyPh)))))
                             g$pred$10234$1bEyPh
                             g$name$10233$1bEyPh)))))))
                  (g$get-import$10146$1bEyPh
                    (case-lambda
                      ((g$spec$10159$1bEyPh)
                       ((case-lambda
                          ((g$t$10160$1bEyPh)
                           ((case-lambda
                              ((g$ls/false$10161$1bEyPh)
                               (if (if g$ls/false$10161$1bEyPh
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10162$1bEyPh g$x*$10163$1bEyPh)
                                            (not (memq
                                                   (g$syntax->datum$7751$1bEyPh
                                                     g$x$10162$1bEyPh)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10161$1bEyPh))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10164$1bEyPh g$x*$10165$1bEyPh)
                                      (g$import-library$10145$1bEyPh
                                        (cons
                                          g$x$10164$1bEyPh
                                          g$x*$10165$1bEyPh))))
                                   g$ls/false$10161$1bEyPh)
                                 ((case-lambda
                                    ((g$t$10166$1bEyPh)
                                     ((case-lambda
                                        ((g$ls/false$10167$1bEyPh)
                                         (if (if g$ls/false$10167$1bEyPh
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10168$1bEyPh
                                                        g$isp$10169$1bEyPh
                                                        g$old*$10170$1bEyPh
                                                        g$new*$10171$1bEyPh)
                                                      (if (eq? (g$syntax->datum$7751$1bEyPh
                                                                 g$rename$10168$1bEyPh)
                                                               'rename)
                                                        (if (g$for-all$5491$1bEyPh
                                                              g$idsyn?$10137$1bEyPh
                                                              g$old*$10170$1bEyPh)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5491$1bEyPh
                                                              g$idsyn?$10137$1bEyPh
                                                              g$new*$10171$1bEyPh))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10167$1bEyPh))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10172$1bEyPh
                                                  g$isp$10173$1bEyPh
                                                  g$old*$10174$1bEyPh
                                                  g$new*$10175$1bEyPh)
                                                ((case-lambda
                                                   ((g$subst$10176$1bEyPh
                                                      g$old*$10177$1bEyPh
                                                      g$new*$10178$1bEyPh)
                                                    ((case-lambda
                                                       ((g$old-label*$10179$1bEyPh)
                                                        ((case-lambda
                                                           ((g$subst$10180$1bEyPh)
                                                            (g$merge-substs$10139$1bEyPh
                                                              (map cons
                                                                   g$new*$10178$1bEyPh
                                                                   g$old-label*$10179$1bEyPh)
                                                              g$subst$10180$1bEyPh)))
                                                         (g$rem*$10142$1bEyPh
                                                           g$old*$10177$1bEyPh
                                                           g$subst$10176$1bEyPh))))
                                                     (g$find*$10141$1bEyPh
                                                       g$old*$10177$1bEyPh
                                                       g$subst$10176$1bEyPh))))
                                                 (g$get-import$10146$1bEyPh
                                                   g$isp$10173$1bEyPh)
                                                 (map g$syntax->datum$7751$1bEyPh
                                                      g$old*$10174$1bEyPh)
                                                 (map g$syntax->datum$7751$1bEyPh
                                                      g$new*$10175$1bEyPh))))
                                             g$ls/false$10167$1bEyPh)
                                           ((case-lambda
                                              ((g$t$10181$1bEyPh)
                                               ((case-lambda
                                                  ((g$ls/false$10182$1bEyPh)
                                                   (if (if g$ls/false$10182$1bEyPh
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10183$1bEyPh
                                                                  g$isp$10184$1bEyPh
                                                                  g$sym*$10185$1bEyPh)
                                                                (if (eq? (g$syntax->datum$7751$1bEyPh
                                                                           g$except$10183$1bEyPh)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5491$1bEyPh
                                                                      g$idsyn?$10137$1bEyPh
                                                                      g$sym*$10185$1bEyPh))
                                                                  '#f)))
                                                             g$ls/false$10182$1bEyPh))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10186$1bEyPh
                                                            g$isp$10187$1bEyPh
                                                            g$sym*$10188$1bEyPh)
                                                          ((case-lambda
                                                             ((g$subst$10189$1bEyPh)
                                                              (g$rem*$10142$1bEyPh
                                                                (map g$syntax->datum$7751$1bEyPh
                                                                     g$sym*$10188$1bEyPh)
                                                                g$subst$10189$1bEyPh)))
                                                           (g$get-import$10146$1bEyPh
                                                             g$isp$10187$1bEyPh))))
                                                       g$ls/false$10182$1bEyPh)
                                                     ((case-lambda
                                                        ((g$t$10190$1bEyPh)
                                                         ((case-lambda
                                                            ((g$ls/false$10191$1bEyPh)
                                                             (if (if g$ls/false$10191$1bEyPh
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10192$1bEyPh
                                                                            g$isp$10193$1bEyPh
                                                                            g$sym*$10194$1bEyPh)
                                                                          (if (eq? (g$syntax->datum$7751$1bEyPh
                                                                                     g$only$10192$1bEyPh)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5491$1bEyPh
                                                                                g$idsyn?$10137$1bEyPh
                                                                                g$sym*$10194$1bEyPh))
                                                                            '#f)))
                                                                       g$ls/false$10191$1bEyPh))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10195$1bEyPh
                                                                      g$isp$10196$1bEyPh
                                                                      g$sym*$10197$1bEyPh)
                                                                    ((case-lambda
                                                                       ((g$subst$10198$1bEyPh
                                                                          g$sym*$10199$1bEyPh)
                                                                        ((case-lambda
                                                                           ((g$sym*$10200$1bEyPh)
                                                                            ((case-lambda
                                                                               ((g$lab*$10201$1bEyPh)
                                                                                (map cons
                                                                                     g$sym*$10200$1bEyPh
                                                                                     g$lab*$10201$1bEyPh)))
                                                                             (g$find*$10141$1bEyPh
                                                                               g$sym*$10200$1bEyPh
                                                                               g$subst$10198$1bEyPh))))
                                                                         (g$remove-dups$10143$1bEyPh
                                                                           g$sym*$10199$1bEyPh))))
                                                                     (g$get-import$10146$1bEyPh
                                                                       g$isp$10196$1bEyPh)
                                                                     (map g$syntax->datum$7751$1bEyPh
                                                                          g$sym*$10197$1bEyPh))))
                                                                 g$ls/false$10191$1bEyPh)
                                                               ((case-lambda
                                                                  ((g$t$10202$1bEyPh)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10203$1bEyPh)
                                                                       (if (if g$ls/false$10203$1bEyPh
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10204$1bEyPh
                                                                                      g$isp$10205$1bEyPh
                                                                                      g$p$10206$1bEyPh)
                                                                                    (if (eq? (g$syntax->datum$7751$1bEyPh
                                                                                               g$prefix$10204$1bEyPh)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10137$1bEyPh
                                                                                          g$p$10206$1bEyPh))
                                                                                      '#f)))
                                                                                 g$ls/false$10203$1bEyPh))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10207$1bEyPh
                                                                                g$isp$10208$1bEyPh
                                                                                g$p$10209$1bEyPh)
                                                                              ((case-lambda
                                                                                 ((g$subst$10210$1bEyPh
                                                                                    g$prefix$10211$1bEyPh)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10212$1bEyPh)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10211$1bEyPh
                                                                                                (symbol->string
                                                                                                  (car g$x$10212$1bEyPh))))
                                                                                            (cdr g$x$10212$1bEyPh))))
                                                                                       g$subst$10210$1bEyPh)))
                                                                               (g$get-import$10146$1bEyPh
                                                                                 g$isp$10208$1bEyPh)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7751$1bEyPh
                                                                                   g$p$10209$1bEyPh)))))
                                                                           g$ls/false$10203$1bEyPh)
                                                                         ((case-lambda
                                                                            ((g$t$10213$1bEyPh)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10214$1bEyPh)
                                                                                 (if (if g$ls/false$10214$1bEyPh
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10215$1bEyPh
                                                                                                g$spec*$10216$1bEyPh)
                                                                                              (eq? (g$syntax->datum$7751$1bEyPh
                                                                                                     g$library$10215$1bEyPh)
                                                                                                   'library)))
                                                                                           g$ls/false$10214$1bEyPh))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10217$1bEyPh
                                                                                          g$spec*$10218$1bEyPh)
                                                                                        (g$import-library$10145$1bEyPh
                                                                                          g$spec*$10218$1bEyPh)))
                                                                                     g$ls/false$10214$1bEyPh)
                                                                                   ((case-lambda
                                                                                      ((g$t$10219$1bEyPh)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10220$1bEyPh)
                                                                                           (if (if g$ls/false$10220$1bEyPh
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10221$1bEyPh
                                                                                                          g$isp$10222$1bEyPh
                                                                                                          g$rest$10223$1bEyPh)
                                                                                                        (eq? (g$syntax->datum$7751$1bEyPh
                                                                                                               g$for$10221$1bEyPh)
                                                                                                             'for)))
                                                                                                     g$ls/false$10220$1bEyPh))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10224$1bEyPh
                                                                                                    g$isp$10225$1bEyPh
                                                                                                    g$rest$10226$1bEyPh)
                                                                                                  (g$get-import$10146$1bEyPh
                                                                                                    g$isp$10225$1bEyPh)))
                                                                                               g$ls/false$10220$1bEyPh)
                                                                                             ((case-lambda
                                                                                                ((g$t$10227$1bEyPh)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10228$1bEyPh)
                                                                                                     (if g$ls/false$10228$1bEyPh
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10229$1bEyPh)
                                                                                                            (g$syntax-violation$7748$1bEyPh
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10229$1bEyPh)))
                                                                                                         g$ls/false$10228$1bEyPh)
                                                                                                       (g$syntax-violation$7748$1bEyPh
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10227$1bEyPh))))
                                                                                                  (g$syntax-dispatch$7639$1bEyPh
                                                                                                    g$t$10227$1bEyPh
                                                                                                    'any))))
                                                                                              g$t$10219$1bEyPh))))
                                                                                        (g$syntax-dispatch$7639$1bEyPh
                                                                                          g$t$10219$1bEyPh
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10213$1bEyPh))))
                                                                              (g$syntax-dispatch$7639$1bEyPh
                                                                                g$t$10213$1bEyPh
                                                                                '(any each-any)))))
                                                                          g$t$10202$1bEyPh))))
                                                                    (g$syntax-dispatch$7639$1bEyPh
                                                                      g$t$10202$1bEyPh
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10190$1bEyPh))))
                                                          (g$syntax-dispatch$7639$1bEyPh
                                                            g$t$10190$1bEyPh
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10181$1bEyPh))))
                                                (g$syntax-dispatch$7639$1bEyPh
                                                  g$t$10181$1bEyPh
                                                  '(any any . each-any)))))
                                            g$t$10166$1bEyPh))))
                                      (g$syntax-dispatch$7639$1bEyPh
                                        g$t$10166$1bEyPh
                                        '(any any . #(each (any any)))))))
                                  g$t$10160$1bEyPh))))
                            (g$syntax-dispatch$7639$1bEyPh
                              g$t$10160$1bEyPh
                              '(any . each-any)))))
                        g$spec$10159$1bEyPh))))
                  (g$add-imports!$10147$1bEyPh
                    (case-lambda
                      ((g$imp$10151$1bEyPh g$h$10152$1bEyPh)
                       ((case-lambda
                          ((g$subst$10153$1bEyPh)
                           (for-each
                             (case-lambda
                               ((g$x$10154$1bEyPh)
                                ((case-lambda
                                   ((g$name$10155$1bEyPh g$label$10156$1bEyPh)
                                    ((case-lambda
                                       ((g$t$10157$1bEyPh)
                                        (if g$t$10157$1bEyPh
                                          ((case-lambda
                                             ((g$l$10158$1bEyPh)
                                              (if (not (eq? g$l$10158$1bEyPh
                                                            g$label$10156$1bEyPh))
                                                (g$dup-error$10138$1bEyPh
                                                  g$name$10155$1bEyPh)
                                                (void))))
                                           g$t$10157$1bEyPh)
                                          (g$hashtable-set!$5288$1bEyPh
                                            g$h$10152$1bEyPh
                                            g$name$10155$1bEyPh
                                            g$label$10156$1bEyPh))))
                                     (g$hashtable-ref$5287$1bEyPh
                                       g$h$10152$1bEyPh
                                       g$name$10155$1bEyPh
                                       '#f))))
                                 (car g$x$10154$1bEyPh)
                                 (cdr g$x$10154$1bEyPh))))
                             g$subst$10153$1bEyPh)))
                        (g$get-import$10146$1bEyPh g$imp$10151$1bEyPh))))))
          ((letrec ((g$f$10148$1bEyPh
                      (case-lambda
                        ((g$imp*$10149$1bEyPh g$h$10150$1bEyPh)
                         (if (null? g$imp*$10149$1bEyPh)
                           (hashtable-entries g$h$10150$1bEyPh)
                           (begin
                             (g$add-imports!$10147$1bEyPh
                               (car g$imp*$10149$1bEyPh)
                               g$h$10150$1bEyPh)
                             (g$f$10148$1bEyPh
                               (cdr g$imp*$10149$1bEyPh)
                               g$h$10150$1bEyPh)))))))
             g$f$10148$1bEyPh)
           g$imp*$10136$1bEyPh
           (g$make-eq-hashtable$5284$1bEyPh))))))
   (g$make-top-rib$7689$1bEyPh
     g$make-top-rib$11128$1bEyPh
     (case-lambda
       ((g$names$10398$1bEyPh g$labels$10399$1bEyPh)
        ((case-lambda
           ((g$rib$10400$1bEyPh)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10401$1bEyPh g$label$10402$1bEyPh)
                   (begin
                     (if (not (symbol? g$name$10401$1bEyPh))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10401$1bEyPh)
                       (void))
                     (g$extend-rib!$7325$1bEyPh
                       g$rib$10400$1bEyPh
                       (g$make-stx$7334$1bEyPh
                         g$name$10401$1bEyPh
                         g$top-mark*$7303$1bEyPh
                         '()
                         '())
                       g$label$10402$1bEyPh))))
                g$names$10398$1bEyPh
                g$labels$10399$1bEyPh)
              g$rib$10400$1bEyPh)))
         (g$make-empty-rib$7324$1bEyPh)))))
   (g$make-collector$7690$1bEyPh
     g$make-collector$11129$1bEyPh
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10403$1bEyPh)
            (case-lambda
              (() g$ls$10403$1bEyPh)
              ((g$x$10404$1bEyPh)
               (set! g$ls$10403$1bEyPh
                 (g$set-cons$7300$1bEyPh
                   g$x$10404$1bEyPh
                   g$ls$10403$1bEyPh))))))
         '()))))
   (g$inv-collector$7691$1bEyPh
     g$inv-collector$11130$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda
         (g$args$10405$1bEyPh
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10406$1bEyPh)
          (begin
            (if (not (procedure? g$x$10406$1bEyPh))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10406$1bEyPh)
              (void))
            g$x$10406$1bEyPh)))))
   (g$vis-collector$7692$1bEyPh
     g$vis-collector$11131$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda
         (g$args$10407$1bEyPh
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10408$1bEyPh)
          (begin
            (if (not (procedure? g$x$10408$1bEyPh))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10408$1bEyPh)
              (void))
            g$x$10408$1bEyPh)))))
   (g$imp-collector$7693$1bEyPh
     g$imp-collector$11132$1bEyPh
     (g$make-parameter$6628$1bEyPh
       (case-lambda
         (g$args$10409$1bEyPh
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10410$1bEyPh)
          (begin
            (if (not (procedure? g$x$10410$1bEyPh))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10410$1bEyPh)
              (void))
            g$x$10410$1bEyPh)))))
   (g$chi-library-internal$7694$1bEyPh
     g$chi-library-internal$11133$1bEyPh
     (case-lambda
       ((g$e*$10411$1bEyPh g$rib$10412$1bEyPh g$top?$10413$1bEyPh)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7683$1bEyPh
               g$e*$10411$1bEyPh
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10412$1bEyPh
               g$top?$10413$1bEyPh)))
          (case-lambda
            ((g$e*$10421$1bEyPh
               g$r$10422$1bEyPh
               g$mr$10423$1bEyPh
               g$lex*$10424$1bEyPh
               g$rhs*$10425$1bEyPh
               g$mod**$10426$1bEyPh
               g$_kwd*$10427$1bEyPh)
             ((case-lambda
                ((g$_kwd*$10428$1bEyPh
                   g$mod**$10429$1bEyPh
                   g$rhs*$10430$1bEyPh
                   g$lex*$10431$1bEyPh
                   g$mr$10432$1bEyPh
                   g$r$10433$1bEyPh
                   g$e*$10434$1bEyPh)
                 (values
                   (append
                     (apply append (reverse g$mod**$10429$1bEyPh))
                     g$e*$10434$1bEyPh)
                   g$r$10433$1bEyPh
                   g$mr$10432$1bEyPh
                   (reverse g$lex*$10431$1bEyPh)
                   (reverse g$rhs*$10430$1bEyPh))))
              g$_kwd*$10427$1bEyPh
              g$mod**$10426$1bEyPh
              g$rhs*$10425$1bEyPh
              g$lex*$10424$1bEyPh
              g$mr$10423$1bEyPh
              g$r$10422$1bEyPh
              g$e*$10421$1bEyPh)))))))
   (g$chi-interaction-expr$7695$1bEyPh
     g$chi-interaction-expr$11134$1bEyPh
     (case-lambda
       ((g$e$10435$1bEyPh g$rib$10436$1bEyPh g$r$10437$1bEyPh)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7683$1bEyPh
               (list g$e$10435$1bEyPh)
               g$r$10437$1bEyPh
               g$r$10437$1bEyPh
               '()
               '()
               '()
               '()
               g$rib$10436$1bEyPh
               '#t)))
          (case-lambda
            ((g$e*$10445$1bEyPh
               g$r$10446$1bEyPh
               g$mr$10447$1bEyPh
               g$lex*$10448$1bEyPh
               g$rhs*$10449$1bEyPh
               g$mod**$10450$1bEyPh
               g$_kwd*$10451$1bEyPh)
             ((case-lambda
                ((g$_kwd*$10452$1bEyPh
                   g$mod**$10453$1bEyPh
                   g$rhs*$10454$1bEyPh
                   g$lex*$10455$1bEyPh
                   g$mr$10456$1bEyPh
                   g$r$10457$1bEyPh
                   g$e*$10458$1bEyPh)
                 ((case-lambda
                    ((g$e*$10459$1bEyPh)
                     ((case-lambda
                        ((g$e$10460$1bEyPh)
                         (values g$e$10460$1bEyPh g$r$10457$1bEyPh)))
                      (if (null? g$e*$10459$1bEyPh)
                        (g$build-void$7296$1bEyPh)
                        (if (null? (cdr g$e*$10459$1bEyPh))
                          (car g$e*$10459$1bEyPh)
                          (g$build-sequence$7295$1bEyPh
                            '#f
                            g$e*$10459$1bEyPh))))))
                  (g$expand-interaction-rhs*/init*$7664$1bEyPh
                    (reverse g$lex*$10455$1bEyPh)
                    (reverse g$rhs*$10454$1bEyPh)
                    (append
                      (apply append (reverse g$mod**$10453$1bEyPh))
                      g$e*$10458$1bEyPh)
                    g$r$10457$1bEyPh
                    g$mr$10456$1bEyPh))))
              g$_kwd*$10451$1bEyPh
              g$mod**$10450$1bEyPh
              g$rhs*$10449$1bEyPh
              g$lex*$10448$1bEyPh
              g$mr$10447$1bEyPh
              g$r$10446$1bEyPh
              g$e*$10445$1bEyPh)))))))
   (g$library-body-expander$7696$1bEyPh
     g$library-body-expander$11135$1bEyPh
     (case-lambda
       ((g$name$10461$1bEyPh
          g$exp*$10462$1bEyPh
          g$imp*$10463$1bEyPh
          g$b*$10464$1bEyPh
          g$top?$10465$1bEyPh)
        (letrec* ((g$itc$10466$1bEyPh (g$make-collector$7690$1bEyPh)))
          ((case-lambda
             ((g$imp-collector$10471$1bEyPh
                g$top-level-context$10472$1bEyPh
                g$imp-collector$10473$1bEyPh
                g$top-level-context$10474$1bEyPh)
              ((case-lambda
                 ((g$swap$10475$1bEyPh)
                  (dynamic-wind
                    g$swap$10475$1bEyPh
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-exports$7685$1bEyPh g$exp*$10462$1bEyPh)))
                         (case-lambda
                           ((g$exp-int*$10478$1bEyPh g$exp-ext*$10479$1bEyPh)
                            ((case-lambda
                               ((g$exp-ext*$10480$1bEyPh
                                  g$exp-int*$10481$1bEyPh)
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$parse-import-spec*$7688$1bEyPh
                                       g$imp*$10463$1bEyPh)))
                                  (case-lambda
                                    ((g$subst-names$10484$1bEyPh
                                       g$subst-labels$10485$1bEyPh)
                                     ((case-lambda
                                        ((g$subst-labels$10486$1bEyPh
                                           g$subst-names$10487$1bEyPh)
                                         ((case-lambda
                                            ((g$rib$10488$1bEyPh)
                                             ((case-lambda
                                                ((g$b*$10489$1bEyPh
                                                   g$rtc$10490$1bEyPh
                                                   g$vtc$10491$1bEyPh)
                                                 ((case-lambda
                                                    ((g$inv-collector$10496$1bEyPh
                                                       g$vis-collector$10497$1bEyPh
                                                       g$inv-collector$10498$1bEyPh
                                                       g$vis-collector$10499$1bEyPh)
                                                     ((case-lambda
                                                        ((g$swap$10500$1bEyPh)
                                                         (dynamic-wind
                                                           g$swap$10500$1bEyPh
                                                           (case-lambda
                                                             (()
                                                              (call-with-values
                                                                (case-lambda
                                                                  (()
                                                                   (g$chi-library-internal$7694$1bEyPh
                                                                     g$b*$10489$1bEyPh
                                                                     g$rib$10488$1bEyPh
                                                                     g$top?$10465$1bEyPh)))
                                                                (case-lambda
                                                                  ((g$init*$10506$1bEyPh
                                                                     g$r$10507$1bEyPh
                                                                     g$mr$10508$1bEyPh
                                                                     g$lex*$10509$1bEyPh
                                                                     g$rhs*$10510$1bEyPh)
                                                                   ((case-lambda
                                                                      ((g$rhs*$10511$1bEyPh
                                                                         g$lex*$10512$1bEyPh
                                                                         g$mr$10513$1bEyPh
                                                                         g$r$10514$1bEyPh
                                                                         g$init*$10515$1bEyPh)
                                                                       (begin
                                                                         (g$seal-rib!$7327$1bEyPh
                                                                           g$rib$10488$1bEyPh)
                                                                         ((case-lambda
                                                                            ((g$init*$10516$1bEyPh)
                                                                             ((case-lambda
                                                                                ((g$rhs*$10517$1bEyPh)
                                                                                 ((case-lambda
                                                                                    (()
                                                                                     (begin
                                                                                       (g$unseal-rib!$7328$1bEyPh
                                                                                         g$rib$10488$1bEyPh)
                                                                                       ((case-lambda
                                                                                          ((g$loc*$10518$1bEyPh
                                                                                             g$export-subst$10519$1bEyPh)
                                                                                           (letrec* ((g$errstr$10520$1bEyPh
                                                                                                       '"attempt to export mutated variable"))
                                                                                             (call-with-values
                                                                                               (case-lambda
                                                                                                 (()
                                                                                                  (g$make-export-env/macros$7737$1bEyPh
                                                                                                    g$lex*$10512$1bEyPh
                                                                                                    g$loc*$10518$1bEyPh
                                                                                                    g$r$10514$1bEyPh)))
                                                                                               (case-lambda
                                                                                                 ((g$export-env$10524$1bEyPh
                                                                                                    g$global*$10525$1bEyPh
                                                                                                    g$macro*$10526$1bEyPh)
                                                                                                  ((case-lambda
                                                                                                     ((g$macro*$10527$1bEyPh
                                                                                                        g$global*$10528$1bEyPh
                                                                                                        g$export-env$10529$1bEyPh)
                                                                                                      (begin
                                                                                                        (for-each
                                                                                                          (case-lambda
                                                                                                            ((g$s$10530$1bEyPh)
                                                                                                             ((case-lambda
                                                                                                                ((g$name$10531$1bEyPh
                                                                                                                   g$label$10532$1bEyPh)
                                                                                                                 ((case-lambda
                                                                                                                    ((g$p$10533$1bEyPh)
                                                                                                                     (if g$p$10533$1bEyPh
                                                                                                                       ((case-lambda
                                                                                                                          ((g$b$10534$1bEyPh)
                                                                                                                           ((case-lambda
                                                                                                                              ((g$type$10535$1bEyPh)
                                                                                                                               (if (eq? g$type$10535$1bEyPh
                                                                                                                                        'mutable)
                                                                                                                                 (g$syntax-violation$7748$1bEyPh
                                                                                                                                   'export
                                                                                                                                   g$errstr$10520$1bEyPh
                                                                                                                                   g$name$10531$1bEyPh)
                                                                                                                                 (void))))
                                                                                                                            (car g$b$10534$1bEyPh))))
                                                                                                                        (cdr g$p$10533$1bEyPh))
                                                                                                                       (void))))
                                                                                                                  (assq
                                                                                                                    g$label$10532$1bEyPh
                                                                                                                    g$export-env$10529$1bEyPh))))
                                                                                                              (car g$s$10530$1bEyPh)
                                                                                                              (cdr g$s$10530$1bEyPh))))
                                                                                                          g$export-subst$10519$1bEyPh)
                                                                                                        ((case-lambda
                                                                                                           ((g$invoke-body$10536$1bEyPh
                                                                                                              g$invoke-definitions$10537$1bEyPh)
                                                                                                            (values
                                                                                                              (g$itc$10466$1bEyPh)
                                                                                                              (g$rtc$10490$1bEyPh)
                                                                                                              (g$vtc$10491$1bEyPh)
                                                                                                              (g$build-sequence$7295$1bEyPh
                                                                                                                '#f
                                                                                                                (append
                                                                                                                  g$invoke-definitions$10537$1bEyPh
                                                                                                                  (list
                                                                                                                    g$invoke-body$10536$1bEyPh)))
                                                                                                              g$macro*$10527$1bEyPh
                                                                                                              g$export-subst$10519$1bEyPh
                                                                                                              g$export-env$10529$1bEyPh)))
                                                                                                         (g$build-library-letrec*$7299$1bEyPh
                                                                                                           '#f
                                                                                                           g$name$10461$1bEyPh
                                                                                                           g$lex*$10512$1bEyPh
                                                                                                           g$loc*$10518$1bEyPh
                                                                                                           g$rhs*$10517$1bEyPh
                                                                                                           (if (null?
                                                                                                                 g$init*$10516$1bEyPh)
                                                                                                             (g$build-void$7296$1bEyPh)
                                                                                                             (g$build-sequence$7295$1bEyPh
                                                                                                               '#f
                                                                                                               g$init*$10516$1bEyPh)))
                                                                                                         (map g$build-global-define$7291$1bEyPh
                                                                                                              (map cdr
                                                                                                                   g$global*$10528$1bEyPh))))))
                                                                                                   g$macro*$10526$1bEyPh
                                                                                                   g$global*$10525$1bEyPh
                                                                                                   g$export-env$10524$1bEyPh)))))))
                                                                                        (map g$gen-global$7306$1bEyPh
                                                                                             g$lex*$10512$1bEyPh)
                                                                                        (g$make-export-subst$7736$1bEyPh
                                                                                          g$exp-int*$10481$1bEyPh
                                                                                          g$exp-ext*$10480$1bEyPh
                                                                                          g$rib$10488$1bEyPh))))))))
                                                                              (g$chi-rhs*$7665$1bEyPh
                                                                                g$rhs*$10511$1bEyPh
                                                                                g$r$10514$1bEyPh
                                                                                g$mr$10513$1bEyPh))))
                                                                          (g$chi-expr*$7655$1bEyPh
                                                                            g$init*$10515$1bEyPh
                                                                            g$r$10514$1bEyPh
                                                                            g$mr$10513$1bEyPh)))))
                                                                    g$rhs*$10510$1bEyPh
                                                                    g$lex*$10509$1bEyPh
                                                                    g$mr$10508$1bEyPh
                                                                    g$r$10507$1bEyPh
                                                                    g$init*$10506$1bEyPh))))))
                                                           g$swap$10500$1bEyPh)))
                                                      (case-lambda
                                                        (()
                                                         (begin
                                                           ((case-lambda
                                                              ((g$t$10538$1bEyPh)
                                                               (begin
                                                                 (g$inv-collector$10496$1bEyPh
                                                                   g$inv-collector$10498$1bEyPh)
                                                                 (set! g$inv-collector$10498$1bEyPh
                                                                   g$t$10538$1bEyPh))))
                                                            (g$inv-collector$10496$1bEyPh))
                                                           ((case-lambda
                                                              ((g$t$10539$1bEyPh)
                                                               (begin
                                                                 (g$vis-collector$10497$1bEyPh
                                                                   g$vis-collector$10499$1bEyPh)
                                                                 (set! g$vis-collector$10499$1bEyPh
                                                                   g$t$10539$1bEyPh))))
                                                            (g$vis-collector$10497$1bEyPh))))))))
                                                  g$inv-collector$7691$1bEyPh
                                                  g$vis-collector$7692$1bEyPh
                                                  g$rtc$10490$1bEyPh
                                                  g$vtc$10491$1bEyPh)))
                                              (map (case-lambda
                                                     ((g$x$10540$1bEyPh)
                                                      (g$make-stx$7334$1bEyPh
                                                        g$x$10540$1bEyPh
                                                        g$top-mark*$7303$1bEyPh
                                                        (list
                                                          g$rib$10488$1bEyPh)
                                                        '())))
                                                   g$b*$10464$1bEyPh)
                                              (g$make-collector$7690$1bEyPh)
                                              (g$make-collector$7690$1bEyPh))))
                                          (g$make-top-rib$7689$1bEyPh
                                            g$subst-names$10487$1bEyPh
                                            g$subst-labels$10486$1bEyPh))))
                                      g$subst-labels$10485$1bEyPh
                                      g$subst-names$10484$1bEyPh))))))
                             g$exp-ext*$10479$1bEyPh
                             g$exp-int*$10478$1bEyPh))))))
                    g$swap$10475$1bEyPh)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10541$1bEyPh)
                        (begin
                          (g$imp-collector$10471$1bEyPh
                            g$imp-collector$10473$1bEyPh)
                          (set! g$imp-collector$10473$1bEyPh
                            g$t$10541$1bEyPh))))
                     (g$imp-collector$10471$1bEyPh))
                    ((case-lambda
                       ((g$t$10542$1bEyPh)
                        (begin
                          (g$top-level-context$10472$1bEyPh
                            g$top-level-context$10474$1bEyPh)
                          (set! g$top-level-context$10474$1bEyPh
                            g$t$10542$1bEyPh))))
                     (g$top-level-context$10472$1bEyPh))))))))
           g$imp-collector$7693$1bEyPh
           g$top-level-context$7755$1bEyPh
           g$itc$10466$1bEyPh
           '#f)))))
   (g$core-library-expander$7697$1bEyPh
     g$core-library-expander$11136$1bEyPh
     (case-lambda
       ((g$e$10543$1bEyPh g$verify-name$10544$1bEyPh)
        (call-with-values
          (case-lambda (() (g$parse-library$7687$1bEyPh g$e$10543$1bEyPh)))
          (case-lambda
            ((g$name*$10549$1bEyPh
               g$exp*$10550$1bEyPh
               g$imp*$10551$1bEyPh
               g$b*$10552$1bEyPh)
             ((case-lambda
                ((g$b*$10553$1bEyPh
                   g$imp*$10554$1bEyPh
                   g$exp*$10555$1bEyPh
                   g$name*$10556$1bEyPh)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7686$1bEyPh g$name*$10556$1bEyPh)))
                   (case-lambda
                     ((g$name$10559$1bEyPh g$ver$10560$1bEyPh)
                      ((case-lambda
                         ((g$ver$10561$1bEyPh g$name$10562$1bEyPh)
                          (begin
                            (g$verify-name$10544$1bEyPh g$name$10562$1bEyPh)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7696$1bEyPh
                                   g$name$10562$1bEyPh
                                   g$exp*$10555$1bEyPh
                                   g$imp*$10554$1bEyPh
                                   g$b*$10553$1bEyPh
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10570$1bEyPh
                                   g$invoke-req*$10571$1bEyPh
                                   g$visit-req*$10572$1bEyPh
                                   g$invoke-code$10573$1bEyPh
                                   g$visit-code$10574$1bEyPh
                                   g$export-subst$10575$1bEyPh
                                   g$export-env$10576$1bEyPh)
                                 ((case-lambda
                                    ((g$export-env$10577$1bEyPh
                                       g$export-subst$10578$1bEyPh
                                       g$visit-code$10579$1bEyPh
                                       g$invoke-code$10580$1bEyPh
                                       g$visit-req*$10581$1bEyPh
                                       g$invoke-req*$10582$1bEyPh
                                       g$imp*$10583$1bEyPh)
                                     (values
                                       g$name$10562$1bEyPh
                                       g$ver$10561$1bEyPh
                                       g$imp*$10583$1bEyPh
                                       g$invoke-req*$10582$1bEyPh
                                       g$visit-req*$10581$1bEyPh
                                       g$invoke-code$10580$1bEyPh
                                       g$visit-code$10579$1bEyPh
                                       g$export-subst$10578$1bEyPh
                                       g$export-env$10577$1bEyPh)))
                                  g$export-env$10576$1bEyPh
                                  g$export-subst$10575$1bEyPh
                                  g$visit-code$10574$1bEyPh
                                  g$invoke-code$10573$1bEyPh
                                  g$visit-req*$10572$1bEyPh
                                  g$invoke-req*$10571$1bEyPh
                                  g$imp*$10570$1bEyPh)))))))
                       g$ver$10560$1bEyPh
                       g$name$10559$1bEyPh))))))
              g$b*$10552$1bEyPh
              g$imp*$10551$1bEyPh
              g$exp*$10550$1bEyPh
              g$name*$10549$1bEyPh)))))))
   (g$parse-top-level-program$7698$1bEyPh
     g$parse-top-level-program$11137$1bEyPh
     (case-lambda
       ((g$e*$10584$1bEyPh)
        ((case-lambda
           ((g$t$10585$1bEyPh)
            ((case-lambda
               ((g$ls/false$10586$1bEyPh)
                (if (if g$ls/false$10586$1bEyPh
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10587$1bEyPh
                               g$imp*$10588$1bEyPh
                               g$b*$10589$1bEyPh)
                             (eq? (g$syntax->datum$7751$1bEyPh
                                    g$import$10587$1bEyPh)
                                  'import)))
                          g$ls/false$10586$1bEyPh))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10590$1bEyPh
                         g$imp*$10591$1bEyPh
                         g$b*$10592$1bEyPh)
                       (values g$imp*$10591$1bEyPh g$b*$10592$1bEyPh)))
                    g$ls/false$10586$1bEyPh)
                  ((case-lambda
                     ((g$t$10593$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$10594$1bEyPh)
                          (if (if g$ls/false$10594$1bEyPh
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10595$1bEyPh
                                         g$x$10596$1bEyPh
                                         g$y$10597$1bEyPh)
                                       (eq? (g$syntax->datum$7751$1bEyPh
                                              g$import$10595$1bEyPh)
                                            'import)))
                                    g$ls/false$10594$1bEyPh))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10598$1bEyPh
                                   g$x$10599$1bEyPh
                                   g$y$10600$1bEyPh)
                                 (g$syntax-violation$7748$1bEyPh
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7358$1bEyPh
                                     g$e*$10584$1bEyPh))))
                              g$ls/false$10594$1bEyPh)
                            ((case-lambda
                               ((g$t$10601$1bEyPh)
                                ((case-lambda
                                   ((g$ls/false$10602$1bEyPh)
                                    (if g$ls/false$10602$1bEyPh
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10602$1bEyPh)
                                      (g$syntax-violation$7748$1bEyPh
                                        '#f
                                        '"invalid syntax"
                                        g$t$10601$1bEyPh))))
                                 (g$syntax-dispatch$7639$1bEyPh
                                   g$t$10601$1bEyPh
                                   '_))))
                             g$t$10593$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh
                         g$t$10593$1bEyPh
                         '((any . any) . any)))))
                   g$t$10585$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh
               g$t$10585$1bEyPh
               '((any . each-any) . each-any)))))
         g$e*$10584$1bEyPh))))
   (g$top-level-expander$7699$1bEyPh
     g$top-level-expander$11138$1bEyPh
     (case-lambda
       ((g$e*$10603$1bEyPh)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7698$1bEyPh g$e*$10603$1bEyPh)))
          (case-lambda
            ((g$imp*$10606$1bEyPh g$b*$10607$1bEyPh)
             ((case-lambda
                ((g$b*$10608$1bEyPh g$imp*$10609$1bEyPh)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7696$1bEyPh
                        '()
                        '()
                        g$imp*$10609$1bEyPh
                        g$b*$10608$1bEyPh
                        '#t)))
                   (case-lambda
                     ((g$imp*$10617$1bEyPh
                        g$invoke-req*$10618$1bEyPh
                        g$visit-req*$10619$1bEyPh
                        g$invoke-code$10620$1bEyPh
                        g$visit-code$10621$1bEyPh
                        g$export-subst$10622$1bEyPh
                        g$export-env$10623$1bEyPh)
                      ((case-lambda
                         ((g$export-env$10624$1bEyPh
                            g$export-subst$10625$1bEyPh
                            g$visit-code$10626$1bEyPh
                            g$invoke-code$10627$1bEyPh
                            g$visit-req*$10628$1bEyPh
                            g$invoke-req*$10629$1bEyPh
                            g$imp*$10630$1bEyPh)
                          (values
                            g$invoke-req*$10629$1bEyPh
                            g$invoke-code$10627$1bEyPh)))
                       g$export-env$10623$1bEyPh
                       g$export-subst$10622$1bEyPh
                       g$visit-code$10621$1bEyPh
                       g$invoke-code$10620$1bEyPh
                       g$visit-req*$10619$1bEyPh
                       g$invoke-req*$10618$1bEyPh
                       g$imp*$10617$1bEyPh))))))
              g$b*$10607$1bEyPh
              g$imp*$10606$1bEyPh)))))))
   (g$8879$7700$1bEyPh
     g$8879$11139$1bEyPh
     (make-record-type-descriptor
       'env
       '#f
       'g$8882$1bEyPh
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8881$7701$1bEyPh g$8881$11140$1bEyPh '#f)
   (g$8880$7702$1bEyPh
     g$8880$11141$1bEyPh
     (make-record-constructor-descriptor
       g$8879$7700$1bEyPh
       '#f
       g$8881$7701$1bEyPh))
   (g$env?$7703$1bEyPh
     g$env?$11142$1bEyPh
     (record-predicate g$8879$7700$1bEyPh))
   (g$make-env$7704$1bEyPh
     g$make-env$11143$1bEyPh
     (record-constructor g$8880$7702$1bEyPh))
   (g$env-names$7705$1bEyPh
     g$env-names$11144$1bEyPh
     (record-accessor g$8879$7700$1bEyPh '0))
   (g$env-labels$7706$1bEyPh
     g$env-labels$11145$1bEyPh
     (record-accessor g$8879$7700$1bEyPh '1))
   (g$env-itc$7707$1bEyPh
     g$env-itc$11146$1bEyPh
     (record-accessor g$8879$7700$1bEyPh '2))
   (g$set-env-names!$7708$1bEyPh
     g$set-env-names!$11147$1bEyPh
     (record-mutator g$8879$7700$1bEyPh '0))
   (g$set-env-labels!$7709$1bEyPh
     g$set-env-labels!$11148$1bEyPh
     (record-mutator g$8879$7700$1bEyPh '1))
   (g$set-env-itc!$7710$1bEyPh
     g$set-env-itc!$11149$1bEyPh
     (record-mutator g$8879$7700$1bEyPh '2))
   (g$rp$7711$1bEyPh
     g$rp$11150$1bEyPh
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10631$1bEyPh g$p$10632$1bEyPh)
          (display '"#<environment>" g$p$10632$1bEyPh)))))
   (g$8898$7712$1bEyPh
     g$8898$11151$1bEyPh
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8901$1bEyPh
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8900$7713$1bEyPh g$8900$11152$1bEyPh '#f)
   (g$8899$7714$1bEyPh
     g$8899$11153$1bEyPh
     (make-record-constructor-descriptor
       g$8898$7712$1bEyPh
       '#f
       g$8900$7713$1bEyPh))
   (g$interaction-env?$7715$1bEyPh
     g$interaction-env?$11154$1bEyPh
     (record-predicate g$8898$7712$1bEyPh))
   (g$make-interaction-env$7716$1bEyPh
     g$make-interaction-env$11155$1bEyPh
     (record-constructor g$8899$7714$1bEyPh))
   (g$interaction-env-rib$7717$1bEyPh
     g$interaction-env-rib$11156$1bEyPh
     (record-accessor g$8898$7712$1bEyPh '0))
   (g$interaction-env-r$7718$1bEyPh
     g$interaction-env-r$11157$1bEyPh
     (record-accessor g$8898$7712$1bEyPh '1))
   (g$interaction-env-locs$7719$1bEyPh
     g$interaction-env-locs$11158$1bEyPh
     (record-accessor g$8898$7712$1bEyPh '2))
   (g$set-interaction-env-rib!$7720$1bEyPh
     g$set-interaction-env-rib!$11159$1bEyPh
     (record-mutator g$8898$7712$1bEyPh '0))
   (g$set-interaction-env-r!$7721$1bEyPh
     g$set-interaction-env-r!$11160$1bEyPh
     (record-mutator g$8898$7712$1bEyPh '1))
   (g$set-interaction-env-locs!$7722$1bEyPh
     g$set-interaction-env-locs!$11161$1bEyPh
     (record-mutator g$8898$7712$1bEyPh '2))
   (g$rp$7723$1bEyPh
     g$rp$11162$1bEyPh
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10633$1bEyPh g$p$10634$1bEyPh)
          (display '"#<environment>" g$p$10634$1bEyPh)))))
   (g$interaction-environment-symbols$7724$1bEyPh
     g$interaction-environment-symbols$11163$1bEyPh
     (case-lambda
       (()
        (map (case-lambda ((g$x$10635$1bEyPh) g$x$10635$1bEyPh))
             (g$rib-sym*$7316$1bEyPh
               (g$interaction-env-rib$7717$1bEyPh
                 (g$interaction-environment$7754$1bEyPh)))))))
   (g$environment-symbols$7725$1bEyPh
     g$environment-symbols$11164$1bEyPh
     (case-lambda
       ((g$e$10636$1bEyPh)
        (vector->list (g$env-names$7705$1bEyPh g$e$10636$1bEyPh)))))
   (g$environment?$7726$1bEyPh
     g$environment?$11165$1bEyPh
     (case-lambda
       ((g$x$10637$1bEyPh)
        ((case-lambda
           ((g$t$10638$1bEyPh)
            (if g$t$10638$1bEyPh
              g$t$10638$1bEyPh
              (begin '#f (g$interaction-env?$7715$1bEyPh g$x$10637$1bEyPh)))))
         (g$env?$7703$1bEyPh g$x$10637$1bEyPh)))))
   (g$environment$7727$1bEyPh
     g$environment$11166$1bEyPh
     (case-lambda
       (g$imp*$10639$1bEyPh
        ((case-lambda
           ((g$itc$10640$1bEyPh)
            ((case-lambda
               ((g$imp-collector$10643$1bEyPh g$imp-collector$10644$1bEyPh)
                ((case-lambda
                   ((g$swap$10645$1bEyPh)
                    (dynamic-wind
                      g$swap$10645$1bEyPh
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7688$1bEyPh
                                g$imp*$10639$1bEyPh)))
                           (case-lambda
                             ((g$subst-names$10648$1bEyPh
                                g$subst-labels$10649$1bEyPh)
                              ((case-lambda
                                 ((g$subst-labels$10650$1bEyPh
                                    g$subst-names$10651$1bEyPh)
                                  (g$make-env$7704$1bEyPh
                                    g$subst-names$10651$1bEyPh
                                    g$subst-labels$10650$1bEyPh
                                    g$itc$10640$1bEyPh)))
                               g$subst-labels$10649$1bEyPh
                               g$subst-names$10648$1bEyPh))))))
                      g$swap$10645$1bEyPh)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10652$1bEyPh)
                        (begin
                          (g$imp-collector$10643$1bEyPh
                            g$imp-collector$10644$1bEyPh)
                          (set! g$imp-collector$10644$1bEyPh
                            g$t$10652$1bEyPh))))
                     (g$imp-collector$10643$1bEyPh)))))))
             g$imp-collector$7693$1bEyPh
             g$itc$10640$1bEyPh)))
         (g$make-collector$7690$1bEyPh)))))
   (g$null-environment$7728$1bEyPh
     g$null-environment$11167$1bEyPh
     (case-lambda
       ((g$n$10653$1bEyPh)
        (begin
          (if (not (eqv? g$n$10653$1bEyPh '5))
            (assertion-violation 'null-environment '"not 5" g$n$10653$1bEyPh)
            (void))
          (g$environment$7727$1bEyPh '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7729$1bEyPh
     g$scheme-report-environment$11168$1bEyPh
     (case-lambda
       ((g$n$10654$1bEyPh)
        (begin
          (if (not (eqv? g$n$10654$1bEyPh '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10654$1bEyPh)
            (void))
          (g$environment$7727$1bEyPh '(psyntax scheme-report-environment-5))))))
   (g$expand$7730$1bEyPh
     g$expand$11169$1bEyPh
     (case-lambda
       ((g$x$10655$1bEyPh g$env$10656$1bEyPh)
        (if (g$env?$7703$1bEyPh g$env$10656$1bEyPh)
          ((case-lambda
             ((g$rib$10657$1bEyPh)
              ((case-lambda
                 ((g$x$10658$1bEyPh
                    g$itc$10659$1bEyPh
                    g$rtc$10660$1bEyPh
                    g$vtc$10661$1bEyPh)
                  ((case-lambda
                     ((g$x$10662$1bEyPh)
                      (begin
                        (g$seal-rib!$7327$1bEyPh g$rib$10657$1bEyPh)
                        (values g$x$10662$1bEyPh (g$rtc$10660$1bEyPh)))))
                   ((case-lambda
                      ((g$inv-collector$10669$1bEyPh
                         g$vis-collector$10670$1bEyPh
                         g$imp-collector$10671$1bEyPh
                         g$inv-collector$10672$1bEyPh
                         g$vis-collector$10673$1bEyPh
                         g$imp-collector$10674$1bEyPh)
                       ((case-lambda
                          ((g$swap$10675$1bEyPh)
                           (dynamic-wind
                             g$swap$10675$1bEyPh
                             (case-lambda
                               (()
                                (g$chi-expr$7657$1bEyPh
                                  g$x$10658$1bEyPh
                                  '()
                                  '())))
                             g$swap$10675$1bEyPh)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10676$1bEyPh)
                                 (begin
                                   (g$inv-collector$10669$1bEyPh
                                     g$inv-collector$10672$1bEyPh)
                                   (set! g$inv-collector$10672$1bEyPh
                                     g$t$10676$1bEyPh))))
                              (g$inv-collector$10669$1bEyPh))
                             ((case-lambda
                                ((g$t$10677$1bEyPh)
                                 (begin
                                   (g$vis-collector$10670$1bEyPh
                                     g$vis-collector$10673$1bEyPh)
                                   (set! g$vis-collector$10673$1bEyPh
                                     g$t$10677$1bEyPh))))
                              (g$vis-collector$10670$1bEyPh))
                             ((case-lambda
                                ((g$t$10678$1bEyPh)
                                 (begin
                                   (g$imp-collector$10671$1bEyPh
                                     g$imp-collector$10674$1bEyPh)
                                   (set! g$imp-collector$10674$1bEyPh
                                     g$t$10678$1bEyPh))))
                              (g$imp-collector$10671$1bEyPh))))))))
                    g$inv-collector$7691$1bEyPh
                    g$vis-collector$7692$1bEyPh
                    g$imp-collector$7693$1bEyPh
                    g$rtc$10660$1bEyPh
                    g$vtc$10661$1bEyPh
                    g$itc$10659$1bEyPh))))
               (g$make-stx$7334$1bEyPh
                 g$x$10655$1bEyPh
                 g$top-mark*$7303$1bEyPh
                 (list g$rib$10657$1bEyPh)
                 '())
               (g$env-itc$7707$1bEyPh g$env$10656$1bEyPh)
               (g$make-collector$7690$1bEyPh)
               (g$make-collector$7690$1bEyPh))))
           (g$make-top-rib$7689$1bEyPh
             (g$env-names$7705$1bEyPh g$env$10656$1bEyPh)
             (g$env-labels$7706$1bEyPh g$env$10656$1bEyPh)))
          (if (g$interaction-env?$7715$1bEyPh g$env$10656$1bEyPh)
            ((case-lambda
               ((g$rib$10679$1bEyPh g$r$10680$1bEyPh g$rtc$10681$1bEyPh)
                ((case-lambda
                   ((g$x$10682$1bEyPh)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10693$1bEyPh
                               g$inv-collector$10694$1bEyPh
                               g$vis-collector$10695$1bEyPh
                               g$imp-collector$10696$1bEyPh
                               g$top-level-context$10697$1bEyPh
                               g$inv-collector$10698$1bEyPh
                               g$vis-collector$10699$1bEyPh
                               g$imp-collector$10700$1bEyPh)
                             ((case-lambda
                                ((g$swap$10701$1bEyPh)
                                 (dynamic-wind
                                   g$swap$10701$1bEyPh
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7695$1bEyPh
                                        g$x$10682$1bEyPh
                                        g$rib$10679$1bEyPh
                                        g$r$10680$1bEyPh)))
                                   g$swap$10701$1bEyPh)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10702$1bEyPh)
                                       (begin
                                         (g$top-level-context$10693$1bEyPh
                                           g$top-level-context$10697$1bEyPh)
                                         (set! g$top-level-context$10697$1bEyPh
                                           g$t$10702$1bEyPh))))
                                    (g$top-level-context$10693$1bEyPh))
                                   ((case-lambda
                                      ((g$t$10703$1bEyPh)
                                       (begin
                                         (g$inv-collector$10694$1bEyPh
                                           g$inv-collector$10698$1bEyPh)
                                         (set! g$inv-collector$10698$1bEyPh
                                           g$t$10703$1bEyPh))))
                                    (g$inv-collector$10694$1bEyPh))
                                   ((case-lambda
                                      ((g$t$10704$1bEyPh)
                                       (begin
                                         (g$vis-collector$10695$1bEyPh
                                           g$vis-collector$10699$1bEyPh)
                                         (set! g$vis-collector$10699$1bEyPh
                                           g$t$10704$1bEyPh))))
                                    (g$vis-collector$10695$1bEyPh))
                                   ((case-lambda
                                      ((g$t$10705$1bEyPh)
                                       (begin
                                         (g$imp-collector$10696$1bEyPh
                                           g$imp-collector$10700$1bEyPh)
                                         (set! g$imp-collector$10700$1bEyPh
                                           g$t$10705$1bEyPh))))
                                    (g$imp-collector$10696$1bEyPh))))))))
                          g$top-level-context$7755$1bEyPh
                          g$inv-collector$7691$1bEyPh
                          g$vis-collector$7692$1bEyPh
                          g$imp-collector$7693$1bEyPh
                          g$env$10656$1bEyPh
                          g$rtc$10681$1bEyPh
                          (g$make-collector$7690$1bEyPh)
                          (g$make-collector$7690$1bEyPh))))
                      (case-lambda
                        ((g$e$10706$1bEyPh g$r^$10707$1bEyPh)
                         ((case-lambda
                            ((g$r^$10708$1bEyPh g$e$10709$1bEyPh)
                             (begin
                               (g$set-interaction-env-r!$7721$1bEyPh
                                 g$env$10656$1bEyPh
                                 g$r^$10708$1bEyPh)
                               (values g$e$10709$1bEyPh (g$rtc$10681$1bEyPh)))))
                          g$r^$10707$1bEyPh
                          g$e$10706$1bEyPh))))))
                 (g$make-stx$7334$1bEyPh
                   g$x$10655$1bEyPh
                   g$top-mark*$7303$1bEyPh
                   (list g$rib$10679$1bEyPh)
                   '()))))
             (g$interaction-env-rib$7717$1bEyPh g$env$10656$1bEyPh)
             (g$interaction-env-r$7718$1bEyPh g$env$10656$1bEyPh)
             (g$make-collector$7690$1bEyPh))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10656$1bEyPh))))))
   (g$eval$7731$1bEyPh
     g$eval$11170$1bEyPh
     (case-lambda
       ((g$x$10710$1bEyPh g$env$10711$1bEyPh)
        (begin
          (if (not (g$environment?$7726$1bEyPh g$env$10711$1bEyPh))
            (error 'eval '"not an environment" g$env$10711$1bEyPh)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7730$1bEyPh g$x$10710$1bEyPh g$env$10711$1bEyPh)))
            (case-lambda
              ((g$x$10714$1bEyPh g$invoke-req*$10715$1bEyPh)
               ((case-lambda
                  ((g$invoke-req*$10716$1bEyPh g$x$10717$1bEyPh)
                   (begin
                     (for-each
                       g$invoke-library$7176$1bEyPh
                       g$invoke-req*$10716$1bEyPh)
                     (eval-core
                       (g$expanded->core$6875$1bEyPh g$x$10717$1bEyPh)))))
                g$invoke-req*$10715$1bEyPh
                g$x$10714$1bEyPh))))))))
   (g$library-expander$7732$1bEyPh
     g$library-expander$11171$1bEyPh
     (case-lambda
       ((g$x$10718$1bEyPh g$filename$10719$1bEyPh g$verify-name$10720$1bEyPh)
        (letrec* ((g$build-visit-code$10721$1bEyPh
                    (case-lambda
                      ((g$macro*$10764$1bEyPh)
                       (if (null? g$macro*$10764$1bEyPh)
                         (g$build-void$7296$1bEyPh)
                         (g$build-sequence$7295$1bEyPh
                           '#f
                           (map (case-lambda
                                  ((g$x$10765$1bEyPh)
                                   ((case-lambda
                                      ((g$loc$10766$1bEyPh g$src$10767$1bEyPh)
                                       (list
                                         'set!
                                         g$loc$10766$1bEyPh
                                         g$src$10767$1bEyPh)))
                                    (car g$x$10765$1bEyPh)
                                    (g$cddr$5012$1bEyPh g$x$10765$1bEyPh))))
                                g$macro*$10764$1bEyPh))))))
                  (g$visit!$10722$1bEyPh
                    (case-lambda
                      ((g$macro*$10760$1bEyPh)
                       (for-each
                         (case-lambda
                           ((g$x$10761$1bEyPh)
                            ((case-lambda
                               ((g$loc$10762$1bEyPh g$proc$10763$1bEyPh)
                                (set-symbol-value!
                                  g$loc$10762$1bEyPh
                                  g$proc$10763$1bEyPh)))
                             (car g$x$10761$1bEyPh)
                             (g$cadr$5010$1bEyPh g$x$10761$1bEyPh))))
                         g$macro*$10760$1bEyPh)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7697$1bEyPh
                 g$x$10718$1bEyPh
                 g$verify-name$10720$1bEyPh)))
            (case-lambda
              ((g$name$10732$1bEyPh
                 g$ver$10733$1bEyPh
                 g$imp*$10734$1bEyPh
                 g$inv*$10735$1bEyPh
                 g$vis*$10736$1bEyPh
                 g$invoke-code$10737$1bEyPh
                 g$macro*$10738$1bEyPh
                 g$export-subst$10739$1bEyPh
                 g$export-env$10740$1bEyPh)
               ((case-lambda
                  ((g$export-env$10741$1bEyPh
                     g$export-subst$10742$1bEyPh
                     g$macro*$10743$1bEyPh
                     g$invoke-code$10744$1bEyPh
                     g$vis*$10745$1bEyPh
                     g$inv*$10746$1bEyPh
                     g$imp*$10747$1bEyPh
                     g$ver$10748$1bEyPh
                     g$name$10749$1bEyPh)
                   ((case-lambda
                      ((g$id$10750$1bEyPh
                         g$name$10751$1bEyPh
                         g$ver$10752$1bEyPh
                         g$imp*$10753$1bEyPh
                         g$vis*$10754$1bEyPh
                         g$inv*$10755$1bEyPh
                         g$visit-proc$10756$1bEyPh
                         g$invoke-proc$10757$1bEyPh
                         g$visit-code$10758$1bEyPh
                         g$invoke-code$10759$1bEyPh)
                       (begin
                         (g$install-library$7174$1bEyPh
                           g$id$10750$1bEyPh
                           g$name$10751$1bEyPh
                           g$ver$10752$1bEyPh
                           g$imp*$10753$1bEyPh
                           g$vis*$10754$1bEyPh
                           g$inv*$10755$1bEyPh
                           g$export-subst$10742$1bEyPh
                           g$export-env$10741$1bEyPh
                           g$visit-proc$10756$1bEyPh
                           g$invoke-proc$10757$1bEyPh
                           g$visit-code$10758$1bEyPh
                           g$invoke-code$10759$1bEyPh
                           '#t
                           g$filename$10719$1bEyPh)
                         (values
                           g$id$10750$1bEyPh
                           g$name$10751$1bEyPh
                           g$ver$10752$1bEyPh
                           g$imp*$10753$1bEyPh
                           g$vis*$10754$1bEyPh
                           g$inv*$10755$1bEyPh
                           g$invoke-code$10759$1bEyPh
                           g$visit-code$10758$1bEyPh
                           g$export-subst$10742$1bEyPh
                           g$export-env$10741$1bEyPh))))
                    (gensym)
                    g$name$10749$1bEyPh
                    g$ver$10748$1bEyPh
                    (map g$library-spec$7180$1bEyPh g$imp*$10747$1bEyPh)
                    (map g$library-spec$7180$1bEyPh g$vis*$10745$1bEyPh)
                    (map g$library-spec$7180$1bEyPh g$inv*$10746$1bEyPh)
                    (case-lambda
                      (() (g$visit!$10722$1bEyPh g$macro*$10743$1bEyPh)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6875$1bEyPh
                           g$invoke-code$10744$1bEyPh))))
                    (g$build-visit-code$10721$1bEyPh g$macro*$10743$1bEyPh)
                    g$invoke-code$10744$1bEyPh)))
                g$export-env$10740$1bEyPh
                g$export-subst$10739$1bEyPh
                g$macro*$10738$1bEyPh
                g$invoke-code$10737$1bEyPh
                g$vis*$10736$1bEyPh
                g$inv*$10735$1bEyPh
                g$imp*$10734$1bEyPh
                g$ver$10733$1bEyPh
                g$name$10732$1bEyPh))))))
       ((g$x$10768$1bEyPh g$filename$10769$1bEyPh)
        (g$library-expander$7732$1bEyPh
          g$x$10768$1bEyPh
          g$filename$10769$1bEyPh
          (case-lambda ((g$x$10770$1bEyPh) (values)))))
       ((g$x$10771$1bEyPh)
        (g$library-expander$7732$1bEyPh
          g$x$10771$1bEyPh
          '#f
          (case-lambda ((g$x$10772$1bEyPh) (values)))))))
   (g$boot-library-expand$7733$1bEyPh
     g$boot-library-expand$11172$1bEyPh
     (case-lambda
       ((g$x$10773$1bEyPh)
        (call-with-values
          (case-lambda (() (g$library-expander$7732$1bEyPh g$x$10773$1bEyPh)))
          (case-lambda
            ((g$id$10784$1bEyPh
               g$name$10785$1bEyPh
               g$ver$10786$1bEyPh
               g$imp*$10787$1bEyPh
               g$vis*$10788$1bEyPh
               g$inv*$10789$1bEyPh
               g$invoke-code$10790$1bEyPh
               g$visit-code$10791$1bEyPh
               g$export-subst$10792$1bEyPh
               g$export-env$10793$1bEyPh)
             ((case-lambda
                ((g$export-env$10794$1bEyPh
                   g$export-subst$10795$1bEyPh
                   g$visit-code$10796$1bEyPh
                   g$invoke-code$10797$1bEyPh
                   g$inv*$10798$1bEyPh
                   g$vis*$10799$1bEyPh
                   g$imp*$10800$1bEyPh
                   g$ver$10801$1bEyPh
                   g$name$10802$1bEyPh
                   g$id$10803$1bEyPh)
                 (values
                   g$name$10802$1bEyPh
                   g$invoke-code$10797$1bEyPh
                   g$export-subst$10795$1bEyPh
                   g$export-env$10794$1bEyPh)))
              g$export-env$10793$1bEyPh
              g$export-subst$10792$1bEyPh
              g$visit-code$10791$1bEyPh
              g$invoke-code$10790$1bEyPh
              g$inv*$10789$1bEyPh
              g$vis*$10788$1bEyPh
              g$imp*$10787$1bEyPh
              g$ver$10786$1bEyPh
              g$name$10785$1bEyPh
              g$id$10784$1bEyPh)))))))
   (g$rev-map-append$7734$1bEyPh
     g$rev-map-append$11173$1bEyPh
     (case-lambda
       ((g$f$10804$1bEyPh g$ls$10805$1bEyPh g$ac$10806$1bEyPh)
        (if (null? g$ls$10805$1bEyPh)
          g$ac$10806$1bEyPh
          (g$rev-map-append$7734$1bEyPh
            g$f$10804$1bEyPh
            (cdr g$ls$10805$1bEyPh)
            (cons
              (g$f$10804$1bEyPh (car g$ls$10805$1bEyPh))
              g$ac$10806$1bEyPh))))))
   (g$build-exports$7735$1bEyPh
     g$build-exports$11174$1bEyPh
     (case-lambda
       ((g$lex*+loc*$10807$1bEyPh g$init*$10808$1bEyPh)
        (g$build-sequence$7295$1bEyPh
          '#f
          (cons
            (g$build-void$7296$1bEyPh)
            (g$rev-map-append$7734$1bEyPh
              (case-lambda
                ((g$x$10809$1bEyPh)
                 (list 'set! (cdr g$x$10809$1bEyPh) (car g$x$10809$1bEyPh))))
              g$lex*+loc*$10807$1bEyPh
              g$init*$10808$1bEyPh))))))
   (g$make-export-subst$7736$1bEyPh
     g$make-export-subst$11175$1bEyPh
     (case-lambda
       ((g$int*$10810$1bEyPh g$ext*$10811$1bEyPh g$rib$10812$1bEyPh)
        (map (case-lambda
               ((g$int$10813$1bEyPh g$ext$10814$1bEyPh)
                ((case-lambda
                   ((g$id$10815$1bEyPh)
                    ((case-lambda
                       ((g$label$10816$1bEyPh)
                        ((case-lambda
                           (()
                            (begin
                              (if (not g$label$10816$1bEyPh)
                                (g$syntax-violation$7748$1bEyPh
                                  '#f
                                  '"cannot export unbound identifier"
                                  g$id$10815$1bEyPh)
                                (void))
                              (cons
                                g$ext$10814$1bEyPh
                                g$label$10816$1bEyPh)))))))
                     (g$id->label$7374$1bEyPh g$id$10815$1bEyPh))))
                 (g$make-stx$7334$1bEyPh
                   g$int$10813$1bEyPh
                   g$top-mark*$7303$1bEyPh
                   (list g$rib$10812$1bEyPh)
                   '()))))
             g$int*$10810$1bEyPh
             g$ext*$10811$1bEyPh))))
   (g$make-export-env/macros$7737$1bEyPh
     g$make-export-env/macros$11176$1bEyPh
     (case-lambda
       ((g$lex*$10817$1bEyPh g$loc*$10818$1bEyPh g$r$10819$1bEyPh)
        (letrec* ((g$lookup$10820$1bEyPh
                    (case-lambda
                      ((g$x$10835$1bEyPh)
                       ((letrec ((g$f$10836$1bEyPh
                                   (case-lambda
                                     ((g$x$10837$1bEyPh
                                        g$lex*$10838$1bEyPh
                                        g$loc*$10839$1bEyPh)
                                      (if (pair? g$lex*$10838$1bEyPh)
                                        (if (eq? g$x$10837$1bEyPh
                                                 (car g$lex*$10838$1bEyPh))
                                          (car g$loc*$10839$1bEyPh)
                                          (g$f$10836$1bEyPh
                                            g$x$10837$1bEyPh
                                            (cdr g$lex*$10838$1bEyPh)
                                            (cdr g$loc*$10839$1bEyPh)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10836$1bEyPh)
                        g$x$10835$1bEyPh
                        g$lex*$10817$1bEyPh
                        g$loc*$10818$1bEyPh)))))
          ((letrec ((g$f$10821$1bEyPh
                      (case-lambda
                        ((g$r$10822$1bEyPh
                           g$env$10823$1bEyPh
                           g$global*$10824$1bEyPh
                           g$macro*$10825$1bEyPh)
                         (if (null? g$r$10822$1bEyPh)
                           (values
                             g$env$10823$1bEyPh
                             g$global*$10824$1bEyPh
                             g$macro*$10825$1bEyPh)
                           ((case-lambda
                              ((g$x$10826$1bEyPh)
                               ((case-lambda
                                  ((g$label$10827$1bEyPh g$b$10828$1bEyPh)
                                   ((case-lambda
                                      ((g$t$10829$1bEyPh)
                                       (if (memv g$t$10829$1bEyPh '(lexical))
                                         ((case-lambda
                                            ((g$v$10830$1bEyPh)
                                             ((case-lambda
                                                ((g$loc$10831$1bEyPh
                                                   g$type$10832$1bEyPh)
                                                 (g$f$10821$1bEyPh
                                                   (cdr g$r$10822$1bEyPh)
                                                   (cons
                                                     (g$cons*$5493$1bEyPh
                                                       g$label$10827$1bEyPh
                                                       g$type$10832$1bEyPh
                                                       g$loc$10831$1bEyPh)
                                                     g$env$10823$1bEyPh)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7583$1bEyPh
                                                         g$v$10830$1bEyPh)
                                                       g$loc$10831$1bEyPh)
                                                     g$global*$10824$1bEyPh)
                                                   g$macro*$10825$1bEyPh)))
                                              (g$lookup$10820$1bEyPh
                                                (g$lexical-var$7583$1bEyPh
                                                  g$v$10830$1bEyPh))
                                              (if (g$lexical-mutable?$7584$1bEyPh
                                                    g$v$10830$1bEyPh)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7379$1bEyPh
                                            g$b$10828$1bEyPh))
                                         (if (memv
                                               g$t$10829$1bEyPh
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10833$1bEyPh)
                                               (g$f$10821$1bEyPh
                                                 (cdr g$r$10822$1bEyPh)
                                                 (cons
                                                   (g$cons*$5493$1bEyPh
                                                     g$label$10827$1bEyPh
                                                     'global-macro
                                                     g$loc$10833$1bEyPh)
                                                   g$env$10823$1bEyPh)
                                                 g$global*$10824$1bEyPh
                                                 (cons
                                                   (cons
                                                     g$loc$10833$1bEyPh
                                                     (g$binding-value$7379$1bEyPh
                                                       g$b$10828$1bEyPh))
                                                   g$macro*$10825$1bEyPh))))
                                            (gensym))
                                           (if (memv
                                                 g$t$10829$1bEyPh
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10834$1bEyPh)
                                                 (g$f$10821$1bEyPh
                                                   (cdr g$r$10822$1bEyPh)
                                                   (cons
                                                     (g$cons*$5493$1bEyPh
                                                       g$label$10827$1bEyPh
                                                       'global-macro!
                                                       g$loc$10834$1bEyPh)
                                                     g$env$10823$1bEyPh)
                                                   g$global*$10824$1bEyPh
                                                   (cons
                                                     (cons
                                                       g$loc$10834$1bEyPh
                                                       (g$binding-value$7379$1bEyPh
                                                         g$b$10828$1bEyPh))
                                                     g$macro*$10825$1bEyPh))))
                                              (gensym))
                                             (if (memv
                                                   g$t$10829$1bEyPh
                                                   '($rtd $module))
                                               (g$f$10821$1bEyPh
                                                 (cdr g$r$10822$1bEyPh)
                                                 (cons
                                                   g$x$10826$1bEyPh
                                                   g$env$10823$1bEyPh)
                                                 g$global*$10824$1bEyPh
                                                 g$macro*$10825$1bEyPh)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7378$1bEyPh
                                                   g$b$10828$1bEyPh)
                                                 (g$binding-value$7379$1bEyPh
                                                   g$b$10828$1bEyPh))))))))
                                    (g$binding-type$7378$1bEyPh
                                      g$b$10828$1bEyPh))))
                                (car g$x$10826$1bEyPh)
                                (cdr g$x$10826$1bEyPh))))
                            (car g$r$10822$1bEyPh)))))))
             g$f$10821$1bEyPh)
           g$r$10819$1bEyPh
           '()
           '()
           '())))))
   (g$generate-temporaries$7738$1bEyPh
     g$generate-temporaries$11177$1bEyPh
     (case-lambda
       ((g$ls$10840$1bEyPh)
        ((case-lambda
           ((g$t$10841$1bEyPh)
            ((case-lambda
               ((g$ls/false$10842$1bEyPh)
                (if g$ls/false$10842$1bEyPh
                  (apply
                    (case-lambda
                      ((g$ls$10843$1bEyPh)
                       (map (case-lambda
                              ((g$x$10844$1bEyPh)
                               (g$make-stx$7334$1bEyPh
                                 ((case-lambda
                                    ((g$x$10845$1bEyPh)
                                     (if ((case-lambda
                                            ((g$t$10846$1bEyPh)
                                             (if g$t$10846$1bEyPh
                                               g$t$10846$1bEyPh
                                               (begin
                                                 '#f
                                                 (string? g$x$10845$1bEyPh)))))
                                          (symbol? g$x$10845$1bEyPh))
                                       (gensym g$x$10845$1bEyPh)
                                       (gensym 't))))
                                  (g$syntax->datum$7751$1bEyPh
                                    g$x$10844$1bEyPh))
                                 g$top-mark*$7303$1bEyPh
                                 '()
                                 '())))
                            g$ls$10843$1bEyPh)))
                    g$ls/false$10842$1bEyPh)
                  ((case-lambda
                     ((g$t$10847$1bEyPh)
                      ((case-lambda
                         ((g$ls/false$10848$1bEyPh)
                          (if g$ls/false$10848$1bEyPh
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10848$1bEyPh)
                            (g$syntax-violation$7748$1bEyPh
                              '#f
                              '"invalid syntax"
                              g$t$10847$1bEyPh))))
                       (g$syntax-dispatch$7639$1bEyPh g$t$10847$1bEyPh '_))))
                   g$t$10841$1bEyPh))))
             (g$syntax-dispatch$7639$1bEyPh g$t$10841$1bEyPh 'each-any))))
         g$ls$10840$1bEyPh))))
   (g$free-identifier=?$7739$1bEyPh
     g$free-identifier=?$11178$1bEyPh
     (case-lambda
       ((g$x$10849$1bEyPh g$y$10850$1bEyPh)
        (if (g$id?$7361$1bEyPh g$x$10849$1bEyPh)
          (if (g$id?$7361$1bEyPh g$y$10850$1bEyPh)
            (g$free-id=?$7365$1bEyPh g$x$10849$1bEyPh g$y$10850$1bEyPh)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10850$1bEyPh))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10849$1bEyPh)))))
   (g$bound-identifier=?$7740$1bEyPh
     g$bound-identifier=?$11179$1bEyPh
     (case-lambda
       ((g$x$10851$1bEyPh g$y$10852$1bEyPh)
        (if (g$id?$7361$1bEyPh g$x$10851$1bEyPh)
          (if (g$id?$7361$1bEyPh g$y$10852$1bEyPh)
            (g$bound-id=?$7364$1bEyPh g$x$10851$1bEyPh g$y$10852$1bEyPh)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10852$1bEyPh))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10851$1bEyPh)))))
   (g$make-source-condition$7741$1bEyPh
     g$make-source-condition$11180$1bEyPh
     (case-lambda
       ((g$x$10853$1bEyPh)
        (letrec* ((g$11783$10854$1bEyPh
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11786$1bEyPh
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11785$10855$1bEyPh '#f)
                  (g$11784$10856$1bEyPh
                    (make-record-constructor-descriptor
                      g$11783$10854$1bEyPh
                      &condition-rcd
                      g$11785$10855$1bEyPh))
                  (g$11782$10857$1bEyPh (record-predicate g$11783$10854$1bEyPh))
                  (g$make-source-condition$10858$1bEyPh
                    (record-constructor g$11784$10856$1bEyPh))
                  (g$11780$10859$1bEyPh
                    (record-accessor g$11783$10854$1bEyPh '0))
                  (g$11781$10860$1bEyPh
                    (record-accessor g$11783$10854$1bEyPh '1))
                  (g$source-condition?$10861$1bEyPh
                    (condition-predicate g$11783$10854$1bEyPh))
                  (g$source-filename$10862$1bEyPh
                    (condition-accessor
                      g$11783$10854$1bEyPh
                      g$11780$10859$1bEyPh))
                  (g$source-character$10863$1bEyPh
                    (condition-accessor
                      g$11783$10854$1bEyPh
                      g$11781$10860$1bEyPh)))
          (if (pair? g$x$10853$1bEyPh)
            (g$make-source-condition$10858$1bEyPh
              (car g$x$10853$1bEyPh)
              (cdr g$x$10853$1bEyPh))
            (condition))))))
   (g$extract-position-condition$7742$1bEyPh
     g$extract-position-condition$11181$1bEyPh
     (case-lambda
       ((g$x$10864$1bEyPh)
        (g$make-source-condition$7741$1bEyPh
          (g$expression-position$7743$1bEyPh g$x$10864$1bEyPh)))))
   (g$expression-position$7743$1bEyPh
     g$expression-position$11182$1bEyPh
     (case-lambda
       ((g$x$10865$1bEyPh)
        (if (g$stx?$7333$1bEyPh g$x$10865$1bEyPh)
          (begin
            '#f
            ((case-lambda
               ((g$x$10866$1bEyPh)
                (if (annotation? g$x$10866$1bEyPh)
                  (begin '#f (annotation-source g$x$10866$1bEyPh))
                  '#f)))
             (g$stx-expr$7335$1bEyPh g$x$10865$1bEyPh)))
          '#f))))
   (g$assertion-error$7744$1bEyPh
     g$assertion-error$11183$1bEyPh
     (case-lambda
       ((g$expr$10867$1bEyPh g$pos$10868$1bEyPh)
        (raise
          (condition
            (g$make-assertion-violation$5777$1bEyPh)
            (g$make-who-condition$5791$1bEyPh 'assert)
            (g$make-message-condition$5745$1bEyPh '"assertion failed")
            (g$make-irritants-condition$5783$1bEyPh (list g$expr$10867$1bEyPh))
            (g$make-source-condition$7741$1bEyPh g$pos$10868$1bEyPh))))))
   (g$syntax-error$7745$1bEyPh
     g$syntax-error$11184$1bEyPh
     (case-lambda
       ((g$x$10869$1bEyPh . g$args$10870$1bEyPh)
        (begin
          (if (not (g$for-all$5491$1bEyPh string? g$args$10870$1bEyPh))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10870$1bEyPh)
            (void))
          (raise
            (condition
              (g$make-message-condition$5745$1bEyPh
                (if (null? g$args$10870$1bEyPh)
                  '"invalid syntax"
                  (apply string-append g$args$10870$1bEyPh)))
              (g$make-syntax-violation$5817$1bEyPh
                (g$syntax->datum$7751$1bEyPh g$x$10869$1bEyPh)
                '#f)
              (g$extract-position-condition$7742$1bEyPh g$x$10869$1bEyPh)
              (g$extract-trace$7746$1bEyPh g$x$10869$1bEyPh)))))))
   (g$extract-trace$7746$1bEyPh
     g$extract-trace$11185$1bEyPh
     (case-lambda
       ((g$x$10871$1bEyPh)
        (letrec* ((g$11810$10872$1bEyPh
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11813$1bEyPh
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11812$10873$1bEyPh '#f)
                  (g$11811$10874$1bEyPh
                    (make-record-constructor-descriptor
                      g$11810$10872$1bEyPh
                      &condition-rcd
                      g$11812$10873$1bEyPh))
                  (g$11809$10875$1bEyPh (record-predicate g$11810$10872$1bEyPh))
                  (g$make-trace$10876$1bEyPh
                    (record-constructor g$11811$10874$1bEyPh))
                  (g$11808$10877$1bEyPh
                    (record-accessor g$11810$10872$1bEyPh '0))
                  (g$trace?$10878$1bEyPh
                    (condition-predicate g$11810$10872$1bEyPh))
                  (g$trace-form$10879$1bEyPh
                    (condition-accessor
                      g$11810$10872$1bEyPh
                      g$11808$10877$1bEyPh)))
          ((letrec ((g$f$10880$1bEyPh
                      (case-lambda
                        ((g$x$10881$1bEyPh)
                         (if (g$stx?$7333$1bEyPh g$x$10881$1bEyPh)
                           (apply
                             condition
                             (g$make-trace$10876$1bEyPh g$x$10881$1bEyPh)
                             (map g$f$10880$1bEyPh
                                  (g$stx-ae*$7338$1bEyPh g$x$10881$1bEyPh)))
                           (if (annotation? g$x$10881$1bEyPh)
                             (g$make-trace$10876$1bEyPh
                               (g$make-stx$7334$1bEyPh
                                 g$x$10881$1bEyPh
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10880$1bEyPh)
           g$x$10871$1bEyPh)))))
   (g$syntax-violation*$7747$1bEyPh
     g$syntax-violation*$11186$1bEyPh
     (case-lambda
       ((g$who$10882$1bEyPh
          g$msg$10883$1bEyPh
          g$form$10884$1bEyPh
          g$condition-object$10885$1bEyPh)
        (begin
          (if (not (string? g$msg$10883$1bEyPh))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10883$1bEyPh)
            (void))
          ((case-lambda
             ((g$who$10886$1bEyPh)
              (raise
                (condition
                  (if g$who$10886$1bEyPh
                    (g$make-who-condition$5791$1bEyPh g$who$10886$1bEyPh)
                    (condition))
                  (g$make-message-condition$5745$1bEyPh g$msg$10883$1bEyPh)
                  g$condition-object$10885$1bEyPh
                  (g$extract-position-condition$7742$1bEyPh g$form$10884$1bEyPh)
                  (g$extract-trace$7746$1bEyPh g$form$10884$1bEyPh)))))
           (if ((case-lambda
                  ((g$t$10887$1bEyPh)
                   (if g$t$10887$1bEyPh
                     g$t$10887$1bEyPh
                     (begin '#f (symbol? g$who$10882$1bEyPh)))))
                (string? g$who$10882$1bEyPh))
             g$who$10882$1bEyPh
             (if (not g$who$10882$1bEyPh)
               ((case-lambda
                  ((g$t$10888$1bEyPh)
                   ((case-lambda
                      ((g$ls/false$10889$1bEyPh)
                       (if (if g$ls/false$10889$1bEyPh
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10890$1bEyPh)
                                    (g$id?$7361$1bEyPh g$id$10890$1bEyPh)))
                                 g$ls/false$10889$1bEyPh))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10891$1bEyPh)
                              (g$syntax->datum$7751$1bEyPh g$id$10891$1bEyPh)))
                           g$ls/false$10889$1bEyPh)
                         ((case-lambda
                            ((g$t$10892$1bEyPh)
                             ((case-lambda
                                ((g$ls/false$10893$1bEyPh)
                                 (if (if g$ls/false$10893$1bEyPh
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10894$1bEyPh
                                                g$rest$10895$1bEyPh)
                                              (g$id?$7361$1bEyPh
                                                g$id$10894$1bEyPh)))
                                           g$ls/false$10893$1bEyPh))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10896$1bEyPh g$rest$10897$1bEyPh)
                                        (g$syntax->datum$7751$1bEyPh
                                          g$id$10896$1bEyPh)))
                                     g$ls/false$10893$1bEyPh)
                                   ((case-lambda
                                      ((g$t$10898$1bEyPh)
                                       ((case-lambda
                                          ((g$ls/false$10899$1bEyPh)
                                           (if g$ls/false$10899$1bEyPh
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10899$1bEyPh)
                                             (g$syntax-violation$7748$1bEyPh
                                               '#f
                                               '"invalid syntax"
                                               g$t$10898$1bEyPh))))
                                        (g$syntax-dispatch$7639$1bEyPh
                                          g$t$10898$1bEyPh
                                          '_))))
                                    g$t$10892$1bEyPh))))
                              (g$syntax-dispatch$7639$1bEyPh
                                g$t$10892$1bEyPh
                                '(any . any)))))
                          g$t$10888$1bEyPh))))
                    (g$syntax-dispatch$7639$1bEyPh g$t$10888$1bEyPh 'any))))
                g$form$10884$1bEyPh)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10882$1bEyPh))))))))
   (g$syntax-violation$7748$1bEyPh
     g$syntax-violation$11187$1bEyPh
     (case-lambda
       ((g$who$10900$1bEyPh g$msg$10901$1bEyPh g$form$10902$1bEyPh)
        (g$syntax-violation$7748$1bEyPh
          g$who$10900$1bEyPh
          g$msg$10901$1bEyPh
          g$form$10902$1bEyPh
          '#f))
       ((g$who$10903$1bEyPh
          g$msg$10904$1bEyPh
          g$form$10905$1bEyPh
          g$subform$10906$1bEyPh)
        (g$syntax-violation*$7747$1bEyPh
          g$who$10903$1bEyPh
          g$msg$10904$1bEyPh
          g$form$10905$1bEyPh
          (g$make-syntax-violation$5817$1bEyPh
            (g$syntax->datum$7751$1bEyPh g$form$10905$1bEyPh)
            (g$syntax->datum$7751$1bEyPh g$subform$10906$1bEyPh))))))
   (g$identifier?$7749$1bEyPh
     g$identifier?$11188$1bEyPh
     (case-lambda ((g$x$10907$1bEyPh) (g$id?$7361$1bEyPh g$x$10907$1bEyPh))))
   (g$datum->syntax$7750$1bEyPh
     g$datum->syntax$11189$1bEyPh
     (case-lambda
       ((g$id$10908$1bEyPh g$datum$10909$1bEyPh)
        (if (g$id?$7361$1bEyPh g$id$10908$1bEyPh)
          (g$datum->stx$7344$1bEyPh g$id$10908$1bEyPh g$datum$10909$1bEyPh)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10908$1bEyPh)))))
   (g$syntax->datum$7751$1bEyPh
     g$syntax->datum$11190$1bEyPh
     (case-lambda
       ((g$x$10910$1bEyPh) (g$stx->datum$7372$1bEyPh g$x$10910$1bEyPh))))
   (g$compile-r6rs-top-level$7752$1bEyPh
     g$compile-r6rs-top-level$11191$1bEyPh
     (case-lambda
       ((g$x*$10911$1bEyPh)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7699$1bEyPh g$x*$10911$1bEyPh)))
          (case-lambda
            ((g$lib*$10914$1bEyPh g$invoke-code$10915$1bEyPh)
             ((case-lambda
                ((g$invoke-code$10916$1bEyPh g$lib*$10917$1bEyPh)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7176$1bEyPh
                        g$lib*$10917$1bEyPh)
                      (eval-core
                        (g$expanded->core$6875$1bEyPh
                          g$invoke-code$10916$1bEyPh)))))))
              g$invoke-code$10915$1bEyPh
              g$lib*$10914$1bEyPh)))))))
   (g$pre-compile-r6rs-top-level$7753$1bEyPh
     g$pre-compile-r6rs-top-level$11192$1bEyPh
     (case-lambda
       ((g$x*$10918$1bEyPh)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7699$1bEyPh g$x*$10918$1bEyPh)))
          (case-lambda
            ((g$lib*$10921$1bEyPh g$invoke-code$10922$1bEyPh)
             ((case-lambda
                ((g$invoke-code$10923$1bEyPh g$lib*$10924$1bEyPh)
                 (begin
                   (for-each g$invoke-library$7176$1bEyPh g$lib*$10924$1bEyPh)
                   (compile-core
                     (g$expanded->core$6875$1bEyPh
                       g$invoke-code$10923$1bEyPh)))))
              g$invoke-code$10922$1bEyPh
              g$lib*$10921$1bEyPh)))))))
   (g$interaction-environment$7754$1bEyPh
     g$interaction-environment$11193$1bEyPh
     ((case-lambda
        ((g$the-env$10925$1bEyPh)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10926$1bEyPh)
                (if g$t$10926$1bEyPh
                  g$t$10926$1bEyPh
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10927$1bEyPh g$rib$10928$1bEyPh)
                        (begin
                          ((case-lambda
                             ((g$subst$10929$1bEyPh)
                              (begin
                                (g$set-rib-sym*!$7320$1bEyPh
                                  g$rib$10928$1bEyPh
                                  (map car g$subst$10929$1bEyPh))
                                (g$set-rib-mark**!$7321$1bEyPh
                                  g$rib$10928$1bEyPh
                                  (map (case-lambda
                                         ((g$x$10930$1bEyPh)
                                          g$top-mark*$7303$1bEyPh))
                                       g$subst$10929$1bEyPh))
                                (g$set-rib-label*!$7322$1bEyPh
                                  g$rib$10928$1bEyPh
                                  (map cdr g$subst$10929$1bEyPh)))))
                           (g$library-subst$7133$1bEyPh g$lib$10927$1bEyPh))
                          ((case-lambda
                             ((g$env$10931$1bEyPh)
                              (begin
                                (set! g$the-env$10925$1bEyPh g$env$10931$1bEyPh)
                                g$env$10931$1bEyPh)))
                           (g$make-interaction-env$7716$1bEyPh
                             g$rib$10928$1bEyPh
                             '()
                             '())))))
                     (g$find-library-by-name$7169$1bEyPh '(ironscheme))
                     (g$make-empty-rib$7324$1bEyPh))))))
             g$the-env$10925$1bEyPh)))))
      '#f))
   (g$top-level-context$7755$1bEyPh
     g$top-level-context$11194$1bEyPh
     (g$make-parameter$6628$1bEyPh '#f)))
  (g$current-library-expander$7166$1bEyPh g$library-expander$7732$1bEyPh))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6872$1bEyPh
      (case-lambda
        ((g$x$11247$1bEyPh)
         ((case-lambda
            ((g$t$11248$1bEyPh)
             (if g$t$11248$1bEyPh (cdr g$t$11248$1bEyPh) '#f)))
          (assq
            g$x$11247$1bEyPh
            '((ellipsis-map . g$ellipsis-map$11083$1bEyPh)
              (ironscheme-build . g$ironscheme-build$11240$1bEyPh)
              (syntax-error . g$syntax-error$11184$1bEyPh)
              (syntax-dispatch . g$syntax-dispatch$11078$1bEyPh)
              (compile-system-libraries
                .
                g$compile-system-libraries$11242$1bEyPh)
              (compile->closure . g$compile->closure$11244$1bEyPh)
              (compile . g$compile$11243$1bEyPh)
              (load . g$load$11239$1bEyPh)
              (interaction-environment . g$interaction-environment$11193$1bEyPh)
              (string-ci>? . g$string-ci>?$6030$1bEyPh)
              (string-ci>=? . g$string-ci>=?$6032$1bEyPh)
              (string-ci=? . g$string-ci=?$6028$1bEyPh)
              (string-ci<? . g$string-ci<?$6029$1bEyPh)
              (string-ci<=? . g$string-ci<=?$6031$1bEyPh)
              (char-ci>? . g$char-ci>?$6035$1bEyPh)
              (char-ci>=? . g$char-ci>=?$6037$1bEyPh)
              (char-ci=? . g$char-ci=?$6033$1bEyPh)
              (char-ci<? . g$char-ci<?$6034$1bEyPh)
              (char-ci<=? . g$char-ci<=?$6036$1bEyPh)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11016$1bEyPh)
              (variable-transformer? . g$variable-transformer?$11015$1bEyPh)
              (make-variable-transformer
                .
                g$make-variable-transformer$11014$1bEyPh)
              (identifier? . g$identifier?$11188$1bEyPh)
              (generate-temporaries . g$generate-temporaries$11177$1bEyPh)
              (free-identifier=? . g$free-identifier=?$11178$1bEyPh)
              (syntax->datum . g$syntax->datum$11190$1bEyPh)
              (datum->syntax . g$datum->syntax$11189$1bEyPh)
              (bound-identifier=? . g$bound-identifier=?$11179$1bEyPh)
              (delete-file . g$delete-file$5363$1bEyPh)
              (file-exists? . g$file-exists?$5362$1bEyPh)
              (list-sort . g$list-sort$5888$1bEyPh)
              (make-eqv-hashtable . g$make-eqv-hashtable$5285$1bEyPh)
              (make-eq-hashtable . g$make-eq-hashtable$5284$1bEyPh)
              (hashtable-update! . g$hashtable-update!$5291$1bEyPh)
              (hashtable-size . g$hashtable-size$5286$1bEyPh)
              (hashtable-set! . g$hashtable-set!$5288$1bEyPh)
              (hashtable-ref . g$hashtable-ref$5287$1bEyPh)
              (hashtable-delete! . g$hashtable-delete!$5289$1bEyPh)
              (hashtable-contains? . g$hashtable-contains?$5290$1bEyPh)
              (hashtable-clear! . g$hashtable-clear!$5292$1bEyPh)
              (call-with-output-file . g$call-with-output-file$6377$1bEyPh)
              (call-with-input-file . g$call-with-input-file$6376$1bEyPh)
              (with-output-to-file . g$with-output-to-file$6375$1bEyPh)
              (with-input-from-file . g$with-input-from-file$6374$1bEyPh)
              (port? . g$port?$6341$1bEyPh)
              (open-string-output-port . g$open-string-output-port$6340$1bEyPh)
              (make-i/o-write-error . g$make-i/o-write-error$6266$1bEyPh)
              (make-i/o-read-error . g$make-i/o-read-error$6260$1bEyPh)
              (make-i/o-port-error . g$make-i/o-port-error$6312$1bEyPh)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6272$1bEyPh)
              (make-i/o-filename-error . g$make-i/o-filename-error$6280$1bEyPh)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6288$1bEyPh)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6294$1bEyPh)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6306$1bEyPh)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6300$1bEyPh)
              (make-i/o-error . g$make-i/o-error$6254$1bEyPh)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6326$1bEyPh)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6320$1bEyPh)
              (i/o-write-error? . g$i/o-write-error?$6267$1bEyPh)
              (i/o-read-error? . g$i/o-read-error?$6261$1bEyPh)
              (i/o-port-error? . g$i/o-port-error?$6314$1bEyPh)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6274$1bEyPh)
              (i/o-error-position . g$i/o-error-position$6275$1bEyPh)
              (i/o-filename-error? . g$i/o-filename-error?$6282$1bEyPh)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6289$1bEyPh)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6295$1bEyPh)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6307$1bEyPh)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6301$1bEyPh)
              (i/o-error? . g$i/o-error?$6255$1bEyPh)
              (i/o-error-port . g$i/o-error-port$6315$1bEyPh)
              (i/o-error-filename . g$i/o-error-filename$6283$1bEyPh)
              (i/o-encoding-error? . g$i/o-encoding-error?$6328$1bEyPh)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6329$1bEyPh)
              (i/o-decoding-error? . g$i/o-decoding-error?$6321$1bEyPh)
              (scheme-report-environment
                .
                g$scheme-report-environment$11168$1bEyPh)
              (quotient . g$quotient$5855$1bEyPh)
              (null-environment . g$null-environment$11167$1bEyPh)
              (remainder . g$remainder$5856$1bEyPh)
              (modulo . g$modulo$5857$1bEyPh)
              (force . g$force$5859$1bEyPh)
              (command-line . g$command-line$11236$1bEyPh)
              (remove . g$remove$5496$1bEyPh)
              (remv . g$remv$5497$1bEyPh)
              (remp . g$remp$5482$1bEyPh)
              (remq . g$remq$5498$1bEyPh)
              (partition . g$partition$5481$1bEyPh)
              (memp . g$memp$5488$1bEyPh)
              (member . g$member$5487$1bEyPh)
              (exists . g$exists$5492$1bEyPh)
              (for-all . g$for-all$5491$1bEyPh)
              (fold-right . g$fold-right$5495$1bEyPh)
              (fold-left . g$fold-left$5494$1bEyPh)
              (find . g$find$5480$1bEyPh)
              (filter . g$filter$5483$1bEyPh)
              (cons* . g$cons*$5493$1bEyPh)
              (assv . g$assv$5484$1bEyPh)
              (assp . g$assp$5486$1bEyPh)
              (assoc . g$assoc$5485$1bEyPh)
              (eval . g$eval$11170$1bEyPh)
              (environment . g$environment$11166$1bEyPh)
              (make-enumeration . g$make-enumeration$6505$1bEyPh)
              (enum-set=? . g$enum-set=?$6512$1bEyPh)
              (enum-set-universe . g$enum-set-universe$6506$1bEyPh)
              (enum-set-union . g$enum-set-union$6513$1bEyPh)
              (enum-set-subset? . g$enum-set-subset?$6511$1bEyPh)
              (enum-set-projection . g$enum-set-projection$6517$1bEyPh)
              (enum-set-member? . g$enum-set-member?$6510$1bEyPh)
              (enum-set-intersection . g$enum-set-intersection$6514$1bEyPh)
              (enum-set-indexer . g$enum-set-indexer$6507$1bEyPh)
              (enum-set-difference . g$enum-set-difference$6515$1bEyPh)
              (enum-set-constructor . g$enum-set-constructor$6508$1bEyPh)
              (enum-set-complement . g$enum-set-complement$6516$1bEyPh)
              (enum-set->list . g$enum-set->list$6509$1bEyPh)
              (who-condition? . g$who-condition?$5793$1bEyPh)
              (warning? . g$warning?$5754$1bEyPh)
              (violation? . g$violation?$5772$1bEyPh)
              (undefined-violation? . g$undefined-violation?$5828$1bEyPh)
              (syntax-violation? . g$syntax-violation?$5820$1bEyPh)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5822$1bEyPh)
              (syntax-violation-form . g$syntax-violation-form$5821$1bEyPh)
              (syntax-violation . g$syntax-violation$11187$1bEyPh)
              (serious-condition? . g$serious-condition?$5760$1bEyPh)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5800$1bEyPh)
              (message-condition? . g$message-condition?$5747$1bEyPh)
              (make-who-condition . g$make-who-condition$5791$1bEyPh)
              (make-warning . g$make-warning$5753$1bEyPh)
              (make-violation . g$make-violation$5771$1bEyPh)
              (make-undefined-violation
                .
                g$make-undefined-violation$5827$1bEyPh)
              (make-syntax-violation . g$make-syntax-violation$5817$1bEyPh)
              (make-serious-condition . g$make-serious-condition$5759$1bEyPh)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5799$1bEyPh)
              (make-message-condition . g$make-message-condition$5745$1bEyPh)
              (make-lexical-violation . g$make-lexical-violation$5811$1bEyPh)
              (make-irritants-condition
                .
                g$make-irritants-condition$5783$1bEyPh)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5805$1bEyPh)
              (make-error . g$make-error$5765$1bEyPh)
              (make-assertion-violation
                .
                g$make-assertion-violation$5777$1bEyPh)
              (lexical-violation? . g$lexical-violation?$5812$1bEyPh)
              (irritants-condition? . g$irritants-condition?$5785$1bEyPh)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5806$1bEyPh)
              (error? . g$error?$5766$1bEyPh)
              (condition-who . g$condition-who$5794$1bEyPh)
              (condition-message . g$condition-message$5748$1bEyPh)
              (condition-irritants . g$condition-irritants$5786$1bEyPh)
              (assertion-violation? . g$assertion-violation?$5778$1bEyPh)
              (native-endianness . g$native-endianness$5610$1bEyPh)
              (bytevector-u64-set! . g$bytevector-u64-set!$5631$1bEyPh)
              (bytevector-u64-ref . g$bytevector-u64-ref$5627$1bEyPh)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5633$1bEyPh)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5629$1bEyPh)
              (bytevector-u32-set! . g$bytevector-u32-set!$5623$1bEyPh)
              (bytevector-u32-ref . g$bytevector-u32-ref$5619$1bEyPh)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5625$1bEyPh)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5621$1bEyPh)
              (bytevector-u16-set! . g$bytevector-u16-set!$5615$1bEyPh)
              (bytevector-u16-ref . g$bytevector-u16-ref$5611$1bEyPh)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5617$1bEyPh)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5613$1bEyPh)
              (bytevector-s64-set! . g$bytevector-s64-set!$5632$1bEyPh)
              (bytevector-s64-ref . g$bytevector-s64-ref$5628$1bEyPh)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5634$1bEyPh)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5630$1bEyPh)
              (bytevector-s32-set! . g$bytevector-s32-set!$5624$1bEyPh)
              (bytevector-s32-ref . g$bytevector-s32-ref$5620$1bEyPh)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5626$1bEyPh)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5622$1bEyPh)
              (bytevector-s16-set! . g$bytevector-s16-set!$5616$1bEyPh)
              (bytevector-s16-ref . g$bytevector-s16-ref$5612$1bEyPh)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5618$1bEyPh)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5614$1bEyPh)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5637$1bEyPh)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5635$1bEyPh)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5638$1bEyPh)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5636$1bEyPh)
              (no-nans-violation? . g$no-nans-violation?$6169$1bEyPh)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6163$1bEyPh)
              (make-no-nans-violation . g$make-no-nans-violation$6168$1bEyPh)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6162$1bEyPh)
              (fxrotate-bit-field . g$fxrotate-bit-field$6145$1bEyPh)
              (fxif . g$fxif$6139$1bEyPh)
              (fxcopy-bit-field . g$fxcopy-bit-field$6142$1bEyPh)
              (fxcopy-bit . g$fxcopy-bit$6140$1bEyPh)
              (fxbit-field . g$fxbit-field$6141$1bEyPh)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6144$1bEyPh)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6143$1bEyPh)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$6091$1bEyPh)
              (bitwise-if . g$bitwise-if$6085$1bEyPh)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6088$1bEyPh)
              (bitwise-copy-bit . g$bitwise-copy-bit$6086$1bEyPh)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6090$1bEyPh)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6089$1bEyPh)
              (symbol=? . g$symbol=?$5042$1bEyPh)
              (string>? . g$string>?$5039$1bEyPh)
              (string>=? . g$string>=?$5041$1bEyPh)
              (string=? . g$string=?$5037$1bEyPh)
              (string<? . g$string<?$5038$1bEyPh)
              (string<=? . g$string<=?$5040$1bEyPh)
              (rationalize . g$rationalize$5049$1bEyPh)
              (char>? . g$char>?$5046$1bEyPh)
              (char>=? . g$char>=?$5048$1bEyPh)
              (char=? . g$char=?$5044$1bEyPh)
              (char<? . g$char<?$5045$1bEyPh)
              (char<=? . g$char<=?$5047$1bEyPh)
              (cddddr . g$cddddr$5036$1bEyPh)
              (cdddar . g$cdddar$5035$1bEyPh)
              (cddadr . g$cddadr$5034$1bEyPh)
              (cddaar . g$cddaar$5033$1bEyPh)
              (cdaddr . g$cdaddr$5032$1bEyPh)
              (cdadar . g$cdadar$5031$1bEyPh)
              (cdaadr . g$cdaadr$5030$1bEyPh)
              (cdaaar . g$cdaaar$5029$1bEyPh)
              (cadddr . g$cadddr$5028$1bEyPh)
              (caddar . g$caddar$5027$1bEyPh)
              (cadadr . g$cadadr$5026$1bEyPh)
              (cadaar . g$cadaar$5025$1bEyPh)
              (caaddr . g$caaddr$5024$1bEyPh)
              (caadar . g$caadar$5023$1bEyPh)
              (caaadr . g$caaadr$5022$1bEyPh)
              (caaaar . g$caaaar$5021$1bEyPh)
              (cdddr . g$cdddr$5020$1bEyPh)
              (cddar . g$cddar$5019$1bEyPh)
              (cdadr . g$cdadr$5018$1bEyPh)
              (cdaar . g$cdaar$5017$1bEyPh)
              (caddr . g$caddr$5016$1bEyPh)
              (cadar . g$cadar$5015$1bEyPh)
              (caadr . g$caadr$5014$1bEyPh)
              (caaar . g$caaar$5013$1bEyPh)
              (cddr . g$cddr$5012$1bEyPh)
              (cdar . g$cdar$5011$1bEyPh)
              (cadr . g$cadr$5010$1bEyPh)
              (caar . g$caar$5009$1bEyPh)
              (boolean=? . g$boolean=?$5043$1bEyPh)
              (make-promise . g$make-promise$5858$1bEyPh)
              (load/args . g$load/args$11238$1bEyPh)
              (printf . g$printf$6541$1bEyPh)
              (fprintf . g$fprintf$6542$1bEyPh)
              (format . g$format$6543$1bEyPh)
              (trace-printer . g$trace-printer$11235$1bEyPh)
              (make-traced-macro . g$make-traced-macro$6547$1bEyPh)
              (assertion-error . g$assertion-error$11183$1bEyPh)
              (make-parameter . g$make-parameter$6628$1bEyPh)
              (environment-symbols . g$environment-symbols$11164$1bEyPh)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11163$1bEyPh)
              (library-path . g$library-path$7158$1bEyPh)
              (library-extensions . g$library-extensions$7159$1bEyPh)
              (installed-libraries . g$installed-libraries$7179$1bEyPh)
              (expand . g$expand$11169$1bEyPh)))))))
    (g$install-library$7174$1bEyPh
      'g$12533$1bEyPh
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12470$1bEyPh)
        (cosh . g$12469$1bEyPh)
        (sinh . g$12468$1bEyPh)
        (make-guid . g$12467$1bEyPh)
        (unspecified? . g$12466$1bEyPh)
        (make-trace . g$12465$1bEyPh)
        (make-list . g$12464$1bEyPh)
        (last-pair . g$12463$1bEyPh)
        (load-r5rs . g$12462$1bEyPh)
        (license . g$12461$1bEyPh)
        (stacktrace . g$12460$1bEyPh)
        (ironscheme-build . g$11882$1bEyPh)
        (set-symbol-value! . g$12446$1bEyPh)
        (symbol-value . g$12445$1bEyPh)
        (ungensym . g$12444$1bEyPh)
        (gensym . g$12443$1bEyPh)
        (void . g$12442$1bEyPh)
        (compile-system-libraries . g$11884$1bEyPh)
        (compile->closure . g$11886$1bEyPh)
        (compile . g$11885$1bEyPh)
        (load . g$11881$1bEyPh)
        (interaction-environment . g$8947$1bEyPh)
        (string-upcase . g$12438$1bEyPh)
        (string-titlecase . g$12437$1bEyPh)
        (string-normalize-nfkd . g$12436$1bEyPh)
        (string-normalize-nfkc . g$12435$1bEyPh)
        (string-normalize-nfd . g$12434$1bEyPh)
        (string-normalize-nfc . g$12433$1bEyPh)
        (string-foldcase . g$12432$1bEyPh)
        (string-downcase . g$12431$1bEyPh)
        (string-ci>? . g$7017$1bEyPh)
        (string-ci>=? . g$7019$1bEyPh)
        (string-ci=? . g$7015$1bEyPh)
        (string-ci<? . g$7016$1bEyPh)
        (string-ci<=? . g$7018$1bEyPh)
        (char-whitespace? . g$12430$1bEyPh)
        (char-upper-case? . g$12429$1bEyPh)
        (char-title-case? . g$12428$1bEyPh)
        (char-numeric? . g$12427$1bEyPh)
        (char-lower-case? . g$12426$1bEyPh)
        (char-general-category . g$12425$1bEyPh)
        (char-upcase . g$12424$1bEyPh)
        (char-titlecase . g$12423$1bEyPh)
        (char-foldcase . g$12422$1bEyPh)
        (char-downcase . g$12421$1bEyPh)
        (char-ci>? . g$7068$1bEyPh)
        (char-ci>=? . g$7070$1bEyPh)
        (char-ci=? . g$7066$1bEyPh)
        (char-ci<? . g$7067$1bEyPh)
        (char-ci<=? . g$7069$1bEyPh)
        (char-alphabetic? . g$12420$1bEyPh)
        (variable-transformer-procedure . g$8548$1bEyPh)
        (variable-transformer? . g$8547$1bEyPh)
        (make-variable-transformer . g$8546$1bEyPh)
        (identifier? . g$8942$1bEyPh)
        (generate-temporaries . g$8931$1bEyPh)
        (free-identifier=? . g$8932$1bEyPh)
        (syntax->datum . g$8944$1bEyPh)
        (datum->syntax . g$8943$1bEyPh)
        (bound-identifier=? . g$8933$1bEyPh)
        (record-type-descriptor? . g$12419$1bEyPh)
        (record-predicate . g$12418$1bEyPh)
        (record-mutator . g$12417$1bEyPh)
        (record-constructor . g$12416$1bEyPh)
        (record-accessor . g$12415$1bEyPh)
        (make-record-type-descriptor . g$12414$1bEyPh)
        (make-record-constructor-descriptor . g$12413$1bEyPh)
        (record? . g$12412$1bEyPh)
        (record-type-uid . g$12411$1bEyPh)
        (record-type-sealed? . g$12410$1bEyPh)
        (record-type-parent . g$12409$1bEyPh)
        (record-type-opaque? . g$12408$1bEyPh)
        (record-type-name . g$12407$1bEyPh)
        (record-type-generative? . g$12406$1bEyPh)
        (record-type-field-names . g$12405$1bEyPh)
        (record-rtd . g$12404$1bEyPh)
        (record-field-mutable? . g$12403$1bEyPh)
        (delete-file . g$6378$1bEyPh)
        (file-exists? . g$6377$1bEyPh)
        (vector-sort! . g$12402$1bEyPh)
        (vector-sort . g$12401$1bEyPh)
        (list-sort . g$6891$1bEyPh)
        (symbol-hash . g$12400$1bEyPh)
        (string-ci-hash . g$12399$1bEyPh)
        (string-hash . g$12398$1bEyPh)
        (equal-hash . g$12397$1bEyPh)
        (hashtable-equivalence-function . g$12396$1bEyPh)
        (make-hashtable . g$12395$1bEyPh)
        (hashtable-hash-function . g$12394$1bEyPh)
        (make-eqv-hashtable . g$6345$1bEyPh)
        (make-eq-hashtable . g$6344$1bEyPh)
        (hashtable? . g$12393$1bEyPh)
        (hashtable-update! . g$6351$1bEyPh)
        (hashtable-size . g$6346$1bEyPh)
        (hashtable-set! . g$6348$1bEyPh)
        (hashtable-ref . g$6347$1bEyPh)
        (hashtable-mutable? . g$12392$1bEyPh)
        (hashtable-keys . g$12391$1bEyPh)
        (hashtable-entries . g$12390$1bEyPh)
        (hashtable-delete! . g$6349$1bEyPh)
        (hashtable-copy . g$12389$1bEyPh)
        (hashtable-contains? . g$6350$1bEyPh)
        (hashtable-clear! . g$6352$1bEyPh)
        (call-with-output-file . g$7487$1bEyPh)
        (call-with-input-file . g$7486$1bEyPh)
        (write-char . g$12388$1bEyPh)
        (write . g$12387$1bEyPh)
        (with-output-to-file . g$7485$1bEyPh)
        (with-input-from-file . g$7484$1bEyPh)
        (read-char . g$12386$1bEyPh)
        (read . g$12385$1bEyPh)
        (peek-char . g$12384$1bEyPh)
        (open-output-file . g$12383$1bEyPh)
        (open-input-file . g$12382$1bEyPh)
        (newline . g$12381$1bEyPh)
        (display . g$12380$1bEyPh)
        (close-output-port . g$12379$1bEyPh)
        (close-input-port . g$12378$1bEyPh)
        (eof-object? . g$12377$1bEyPh)
        (eof-object . g$12376$1bEyPh)
        (current-error-port . g$12375$1bEyPh)
        (current-output-port . g$12374$1bEyPh)
        (current-input-port . g$12373$1bEyPh)
        (output-port? . g$12372$1bEyPh)
        (input-port? . g$12371$1bEyPh)
        (utf-8-codec . g$12370$1bEyPh)
        (utf-16-codec . g$12369$1bEyPh)
        (transcoder-error-handling-mode . g$12368$1bEyPh)
        (transcoder-eol-style . g$12367$1bEyPh)
        (transcoder-codec . g$12366$1bEyPh)
        (transcoded-port . g$12365$1bEyPh)
        (textual-port? . g$12364$1bEyPh)
        (string->bytevector . g$12363$1bEyPh)
        (standard-output-port . g$12362$1bEyPh)
        (standard-input-port . g$12361$1bEyPh)
        (standard-error-port . g$12360$1bEyPh)
        (set-port-position! . g$12359$1bEyPh)
        (put-u8 . g$12358$1bEyPh)
        (put-string . g$12357$1bEyPh)
        (put-datum . g$12356$1bEyPh)
        (put-char . g$12355$1bEyPh)
        (put-bytevector . g$12354$1bEyPh)
        (port? . g$7463$1bEyPh)
        (port-transcoder . g$12353$1bEyPh)
        (port-position . g$12352$1bEyPh)
        (port-has-set-port-position!? . g$12351$1bEyPh)
        (port-has-port-position? . g$12350$1bEyPh)
        (port-eof? . g$12349$1bEyPh)
        (output-port-buffer-mode . g$12348$1bEyPh)
        (open-string-output-port . g$7462$1bEyPh)
        (open-string-input-port . g$12347$1bEyPh)
        (open-file-output-port . g$12346$1bEyPh)
        (open-file-input/output-port . g$12345$1bEyPh)
        (open-file-input-port . g$12344$1bEyPh)
        (open-bytevector-output-port . g$12343$1bEyPh)
        (open-bytevector-input-port . g$12342$1bEyPh)
        (native-transcoder . g$12341$1bEyPh)
        (native-eol-style . g$12340$1bEyPh)
        (make-transcoder . g$12339$1bEyPh)
        (latin-1-codec . g$12338$1bEyPh)
        (make-i/o-write-error . g$7319$1bEyPh)
        (make-i/o-read-error . g$7305$1bEyPh)
        (make-i/o-port-error . g$7424$1bEyPh)
        (make-i/o-invalid-position-error . g$7334$1bEyPh)
        (make-i/o-filename-error . g$7351$1bEyPh)
        (make-i/o-file-protection-error . g$7367$1bEyPh)
        (make-i/o-file-is-read-only-error . g$7381$1bEyPh)
        (make-i/o-file-does-not-exist-error . g$7409$1bEyPh)
        (make-i/o-file-already-exists-error . g$7395$1bEyPh)
        (make-i/o-error . g$7291$1bEyPh)
        (make-i/o-encoding-error . g$7455$1bEyPh)
        (make-i/o-decoding-error . g$7440$1bEyPh)
        (make-custom-textual-output-port . g$12337$1bEyPh)
        (make-custom-textual-input/output-port . g$12336$1bEyPh)
        (make-custom-textual-input-port . g$12335$1bEyPh)
        (make-custom-binary-output-port . g$12334$1bEyPh)
        (make-custom-binary-input/output-port . g$12333$1bEyPh)
        (make-custom-binary-input-port . g$12332$1bEyPh)
        (make-bytevector . g$12331$1bEyPh)
        (lookahead-u8 . g$12330$1bEyPh)
        (lookahead-char . g$12329$1bEyPh)
        (i/o-write-error? . g$7320$1bEyPh)
        (i/o-read-error? . g$7306$1bEyPh)
        (i/o-port-error? . g$7426$1bEyPh)
        (i/o-invalid-position-error? . g$7336$1bEyPh)
        (i/o-error-position . g$7337$1bEyPh)
        (i/o-filename-error? . g$7353$1bEyPh)
        (i/o-file-protection-error? . g$7368$1bEyPh)
        (i/o-file-is-read-only-error? . g$7382$1bEyPh)
        (i/o-file-does-not-exist-error? . g$7410$1bEyPh)
        (i/o-file-already-exists-error? . g$7396$1bEyPh)
        (i/o-error? . g$7292$1bEyPh)
        (i/o-error-port . g$7427$1bEyPh)
        (i/o-error-filename . g$7354$1bEyPh)
        (i/o-encoding-error? . g$7457$1bEyPh)
        (i/o-encoding-error-char . g$7458$1bEyPh)
        (i/o-decoding-error? . g$7441$1bEyPh)
        (get-u8 . g$12328$1bEyPh)
        (get-string-n! . g$12327$1bEyPh)
        (get-string-n . g$12326$1bEyPh)
        (get-string-all . g$12325$1bEyPh)
        (get-line . g$12324$1bEyPh)
        (get-datum . g$12323$1bEyPh)
        (get-char . g$12322$1bEyPh)
        (get-bytevector-some . g$12321$1bEyPh)
        (get-bytevector-n! . g$12320$1bEyPh)
        (get-bytevector-n . g$12319$1bEyPh)
        (get-bytevector-all . g$12318$1bEyPh)
        (flush-output-port . g$12317$1bEyPh)
        (close-port . g$12316$1bEyPh)
        (call-with-string-output-port . g$12315$1bEyPh)
        (call-with-port . g$12314$1bEyPh)
        (call-with-bytevector-output-port . g$12313$1bEyPh)
        (bytevector->string . g$12312$1bEyPh)
        (buffer-mode? . g$12311$1bEyPh)
        (binary-port? . g$12310$1bEyPh)
        (scheme-report-environment . g$8922$1bEyPh)
        (quotient . g$6871$1bEyPh)
        (null-environment . g$8921$1bEyPh)
        (remainder . g$6872$1bEyPh)
        (modulo . g$6873$1bEyPh)
        (inexact->exact . g$12309$1bEyPh)
        (force . g$6875$1bEyPh)
        (exact->inexact . g$12308$1bEyPh)
        (exit . g$12307$1bEyPh)
        (command-line . g$11878$1bEyPh)
        (string-fill! . g$12306$1bEyPh)
        (string-set! . g$12305$1bEyPh)
        (set-cdr! . g$12304$1bEyPh)
        (set-car! . g$12303$1bEyPh)
        (remove . g$6458$1bEyPh)
        (remv . g$6459$1bEyPh)
        (remp . g$6444$1bEyPh)
        (remq . g$6460$1bEyPh)
        (partition . g$6443$1bEyPh)
        (memv . g$12302$1bEyPh)
        (memq . g$12301$1bEyPh)
        (memp . g$6450$1bEyPh)
        (member . g$6449$1bEyPh)
        (exists . g$6454$1bEyPh)
        (for-all . g$6453$1bEyPh)
        (fold-right . g$6457$1bEyPh)
        (fold-left . g$6456$1bEyPh)
        (find . g$6442$1bEyPh)
        (filter . g$6445$1bEyPh)
        (cons* . g$6455$1bEyPh)
        (assv . g$6446$1bEyPh)
        (assq . g$12300$1bEyPh)
        (assp . g$6448$1bEyPh)
        (assoc . g$6447$1bEyPh)
        (with-exception-handler . g$12299$1bEyPh)
        (raise-continuable . g$12298$1bEyPh)
        (raise . g$12297$1bEyPh)
        (eval . g$8924$1bEyPh)
        (environment . g$8920$1bEyPh)
        (make-enumeration . g$7544$1bEyPh)
        (enum-set=? . g$7551$1bEyPh)
        (enum-set-universe . g$7545$1bEyPh)
        (enum-set-union . g$7552$1bEyPh)
        (enum-set-subset? . g$7550$1bEyPh)
        (enum-set-projection . g$7556$1bEyPh)
        (enum-set-member? . g$7549$1bEyPh)
        (enum-set-intersection . g$7553$1bEyPh)
        (enum-set-indexer . g$7546$1bEyPh)
        (enum-set-difference . g$7554$1bEyPh)
        (enum-set-constructor . g$7547$1bEyPh)
        (enum-set-complement . g$7555$1bEyPh)
        (enum-set->list . g$7548$1bEyPh)
        (who-condition? . g$6782$1bEyPh)
        (warning? . g$6693$1bEyPh)
        (violation? . g$6735$1bEyPh)
        (undefined-violation? . g$6859$1bEyPh)
        (syntax-violation? . g$6843$1bEyPh)
        (syntax-violation-subform . g$6845$1bEyPh)
        (syntax-violation-form . g$6844$1bEyPh)
        (syntax-violation . g$8941$1bEyPh)
        (simple-conditions . g$12296$1bEyPh)
        (serious-condition? . g$6707$1bEyPh)
        (non-continuable-violation? . g$6797$1bEyPh)
        (message-condition? . g$6678$1bEyPh)
        (make-who-condition . g$6780$1bEyPh)
        (make-warning . g$6692$1bEyPh)
        (make-violation . g$6734$1bEyPh)
        (make-undefined-violation . g$6858$1bEyPh)
        (make-syntax-violation . g$6840$1bEyPh)
        (make-serious-condition . g$6706$1bEyPh)
        (make-non-continuable-violation . g$6796$1bEyPh)
        (make-message-condition . g$6676$1bEyPh)
        (make-lexical-violation . g$6824$1bEyPh)
        (make-irritants-condition . g$6763$1bEyPh)
        (make-implementation-restriction-violation . g$6810$1bEyPh)
        (make-error . g$6720$1bEyPh)
        (make-assertion-violation . g$6748$1bEyPh)
        (lexical-violation? . g$6825$1bEyPh)
        (irritants-condition? . g$6765$1bEyPh)
        (implementation-restriction-violation? . g$6811$1bEyPh)
        (error? . g$6721$1bEyPh)
        (condition-who . g$6783$1bEyPh)
        (condition-predicate . g$12295$1bEyPh)
        (condition-message . g$6679$1bEyPh)
        (condition-irritants . g$6766$1bEyPh)
        (condition-accessor . g$12294$1bEyPh)
        (condition . g$12293$1bEyPh)
        (assertion-violation? . g$6749$1bEyPh)
        (condition? . g$12292$1bEyPh)
        (utf32->string . g$12291$1bEyPh)
        (utf16->string . g$12290$1bEyPh)
        (utf8->string . g$12289$1bEyPh)
        (uint-list->bytevector . g$12288$1bEyPh)
        (u8-list->bytevector . g$12287$1bEyPh)
        (string->utf8 . g$12286$1bEyPh)
        (string->utf32 . g$12285$1bEyPh)
        (string->utf16 . g$12284$1bEyPh)
        (sint-list->bytevector . g$12283$1bEyPh)
        (native-endianness . g$6534$1bEyPh)
        (bytevector? . g$12282$1bEyPh)
        (bytevector=? . g$12281$1bEyPh)
        (bytevector-uint-set! . g$12280$1bEyPh)
        (bytevector-uint-ref . g$12279$1bEyPh)
        (bytevector-u8-set! . g$12278$1bEyPh)
        (bytevector-u8-ref . g$12277$1bEyPh)
        (bytevector-u64-set! . g$6555$1bEyPh)
        (bytevector-u64-ref . g$6551$1bEyPh)
        (bytevector-u64-native-set! . g$6557$1bEyPh)
        (bytevector-u64-native-ref . g$6553$1bEyPh)
        (bytevector-u32-set! . g$6547$1bEyPh)
        (bytevector-u32-ref . g$6543$1bEyPh)
        (bytevector-u32-native-set! . g$6549$1bEyPh)
        (bytevector-u32-native-ref . g$6545$1bEyPh)
        (bytevector-u16-set! . g$6539$1bEyPh)
        (bytevector-u16-ref . g$6535$1bEyPh)
        (bytevector-u16-native-set! . g$6541$1bEyPh)
        (bytevector-u16-native-ref . g$6537$1bEyPh)
        (bytevector-sint-set! . g$12276$1bEyPh)
        (bytevector-sint-ref . g$12275$1bEyPh)
        (bytevector-s8-set! . g$12274$1bEyPh)
        (bytevector-s8-ref . g$12273$1bEyPh)
        (bytevector-s64-set! . g$6556$1bEyPh)
        (bytevector-s64-ref . g$6552$1bEyPh)
        (bytevector-s64-native-set! . g$6558$1bEyPh)
        (bytevector-s64-native-ref . g$6554$1bEyPh)
        (bytevector-s32-set! . g$6548$1bEyPh)
        (bytevector-s32-ref . g$6544$1bEyPh)
        (bytevector-s32-native-set! . g$6550$1bEyPh)
        (bytevector-s32-native-ref . g$6546$1bEyPh)
        (bytevector-s16-set! . g$6540$1bEyPh)
        (bytevector-s16-ref . g$6536$1bEyPh)
        (bytevector-s16-native-set! . g$6542$1bEyPh)
        (bytevector-s16-native-ref . g$6538$1bEyPh)
        (bytevector-length . g$12272$1bEyPh)
        (bytevector-ieee-single-set! . g$12271$1bEyPh)
        (bytevector-ieee-single-ref . g$12270$1bEyPh)
        (bytevector-ieee-single-native-set! . g$6561$1bEyPh)
        (bytevector-ieee-single-native-ref . g$6559$1bEyPh)
        (bytevector-ieee-double-set! . g$12269$1bEyPh)
        (bytevector-ieee-double-ref . g$12268$1bEyPh)
        (bytevector-ieee-double-native-set! . g$6562$1bEyPh)
        (bytevector-ieee-double-native-ref . g$6560$1bEyPh)
        (bytevector-fill! . g$12267$1bEyPh)
        (bytevector-copy! . g$12266$1bEyPh)
        (bytevector-copy . g$12265$1bEyPh)
        (bytevector->uint-list . g$12264$1bEyPh)
        (bytevector->u8-list . g$12263$1bEyPh)
        (bytevector->sint-list . g$12262$1bEyPh)
        (no-nans-violation? . g$7277$1bEyPh)
        (no-infinities-violation? . g$7263$1bEyPh)
        (make-no-nans-violation . g$7276$1bEyPh)
        (make-no-infinities-violation . g$7262$1bEyPh)
        (real->flonum . g$12261$1bEyPh)
        (flzero? . g$12260$1bEyPh)
        (fltruncate . g$12259$1bEyPh)
        (fltan . g$12258$1bEyPh)
        (flsqrt . g$12257$1bEyPh)
        (flsin . g$12256$1bEyPh)
        (flround . g$12255$1bEyPh)
        (flpositive? . g$12254$1bEyPh)
        (flonum? . g$12253$1bEyPh)
        (flodd? . g$12252$1bEyPh)
        (flnumerator . g$12251$1bEyPh)
        (flnegative? . g$12250$1bEyPh)
        (flnan? . g$12249$1bEyPh)
        (flmod0 . g$12248$1bEyPh)
        (flmod . g$12247$1bEyPh)
        (flmin . g$12246$1bEyPh)
        (flmax . g$12245$1bEyPh)
        (fllog . g$12244$1bEyPh)
        (flinteger? . g$12243$1bEyPh)
        (flinfinite? . g$12242$1bEyPh)
        (flfloor . g$12241$1bEyPh)
        (flfinite? . g$12240$1bEyPh)
        (flexpt . g$12239$1bEyPh)
        (flexp . g$12238$1bEyPh)
        (fleven? . g$12237$1bEyPh)
        (fldiv0-and-mod0 . g$12236$1bEyPh)
        (fldiv0 . g$12235$1bEyPh)
        (fldiv-and-mod . g$12234$1bEyPh)
        (fldiv . g$12233$1bEyPh)
        (fldenominator . g$12232$1bEyPh)
        (flcos . g$12231$1bEyPh)
        (flceiling . g$12230$1bEyPh)
        (flatan . g$12229$1bEyPh)
        (flasin . g$12228$1bEyPh)
        (flacos . g$12227$1bEyPh)
        (flabs . g$12226$1bEyPh)
        (fl>? . g$12225$1bEyPh)
        (fl>=? . g$12224$1bEyPh)
        (fl=? . g$12223$1bEyPh)
        (fl<? . g$12222$1bEyPh)
        (fl<=? . g$12221$1bEyPh)
        (fl/ . g$12220$1bEyPh)
        (fl- . g$12219$1bEyPh)
        (fl+ . g$12218$1bEyPh)
        (fl* . g$12217$1bEyPh)
        (fixnum->flonum . g$12216$1bEyPh)
        (fxzero? . g$12215$1bEyPh)
        (fxxor . g$12214$1bEyPh)
        (fxrotate-bit-field . g$7208$1bEyPh)
        (fxreverse-bit-field . g$12213$1bEyPh)
        (fxpositive? . g$12212$1bEyPh)
        (fxodd? . g$12211$1bEyPh)
        (fxnot . g$12210$1bEyPh)
        (fxnegative? . g$12209$1bEyPh)
        (fxmod0 . g$12208$1bEyPh)
        (fxmod . g$12207$1bEyPh)
        (fxmin . g$12206$1bEyPh)
        (fxmax . g$12205$1bEyPh)
        (fxlength . g$12204$1bEyPh)
        (fxior . g$12203$1bEyPh)
        (fxif . g$7202$1bEyPh)
        (fxfirst-bit-set . g$12202$1bEyPh)
        (fxeven? . g$12201$1bEyPh)
        (fxdiv0-and-mod0 . g$12200$1bEyPh)
        (fxdiv0 . g$12199$1bEyPh)
        (fxdiv-and-mod . g$12198$1bEyPh)
        (fxdiv . g$12197$1bEyPh)
        (fxcopy-bit-field . g$7205$1bEyPh)
        (fxcopy-bit . g$7203$1bEyPh)
        (fxbit-set? . g$12196$1bEyPh)
        (fxbit-field . g$7204$1bEyPh)
        (fxbit-count . g$12195$1bEyPh)
        (fxarithmetic-shift-right . g$7207$1bEyPh)
        (fxarithmetic-shift-left . g$7206$1bEyPh)
        (fxarithmetic-shift . g$12194$1bEyPh)
        (fxand . g$12193$1bEyPh)
        (fx>? . g$12192$1bEyPh)
        (fx>=? . g$12191$1bEyPh)
        (fx=? . g$12190$1bEyPh)
        (fx<? . g$12189$1bEyPh)
        (fx<=? . g$12188$1bEyPh)
        (fx-/carry . g$12187$1bEyPh)
        (fx- . g$12186$1bEyPh)
        (fx+/carry . g$12185$1bEyPh)
        (fx+ . g$12184$1bEyPh)
        (fx*/carry . g$12183$1bEyPh)
        (fx* . g$12182$1bEyPh)
        (greatest-fixnum . g$12181$1bEyPh)
        (least-fixnum . g$12180$1bEyPh)
        (fixnum-width . g$12179$1bEyPh)
        (fixnum? . g$12178$1bEyPh)
        (bitwise-rotate-bit-field . g$7160$1bEyPh)
        (bitwise-reverse-bit-field . g$12177$1bEyPh)
        (bitwise-length . g$12176$1bEyPh)
        (bitwise-if . g$7154$1bEyPh)
        (bitwise-first-bit-set . g$12175$1bEyPh)
        (bitwise-copy-bit-field . g$7157$1bEyPh)
        (bitwise-copy-bit . g$7155$1bEyPh)
        (bitwise-bit-set? . g$12174$1bEyPh)
        (bitwise-bit-field . g$12173$1bEyPh)
        (bitwise-bit-count . g$12172$1bEyPh)
        (bitwise-xor . g$12171$1bEyPh)
        (bitwise-ior . g$12170$1bEyPh)
        (bitwise-and . g$12169$1bEyPh)
        (bitwise-not . g$12168$1bEyPh)
        (bitwise-arithmetic-shift-right . g$7159$1bEyPh)
        (bitwise-arithmetic-shift-left . g$7158$1bEyPh)
        (bitwise-arithmetic-shift . g$12167$1bEyPh)
        (zero? . g$12166$1bEyPh)
        (vector? . g$12165$1bEyPh)
        (vector-set! . g$12164$1bEyPh)
        (vector-ref . g$12163$1bEyPh)
        (vector-map . g$12162$1bEyPh)
        (vector-length . g$12161$1bEyPh)
        (vector-for-each . g$12160$1bEyPh)
        (vector-fill! . g$12159$1bEyPh)
        (vector->list . g$12158$1bEyPh)
        (vector . g$12157$1bEyPh)
        (values . g$12156$1bEyPh)
        (truncate . g$12155$1bEyPh)
        (tan . g$12154$1bEyPh)
        (symbol? . g$12153$1bEyPh)
        (symbol=? . g$5843$1bEyPh)
        (symbol->string . g$12152$1bEyPh)
        (substring . g$12151$1bEyPh)
        (string? . g$12150$1bEyPh)
        (string>? . g$5840$1bEyPh)
        (string>=? . g$5842$1bEyPh)
        (string=? . g$5838$1bEyPh)
        (string<? . g$5839$1bEyPh)
        (string<=? . g$5841$1bEyPh)
        (string-ref . g$12149$1bEyPh)
        (string-length . g$12148$1bEyPh)
        (string-for-each . g$12147$1bEyPh)
        (string-copy . g$12146$1bEyPh)
        (string-append . g$12145$1bEyPh)
        (string->symbol . g$12144$1bEyPh)
        (string->number . g$12143$1bEyPh)
        (string->list . g$12142$1bEyPh)
        (string . g$12141$1bEyPh)
        (sqrt . g$12140$1bEyPh)
        (sin . g$12139$1bEyPh)
        (round . g$12138$1bEyPh)
        (reverse . g$12137$1bEyPh)
        (real? . g$12136$1bEyPh)
        (real-valued? . g$12135$1bEyPh)
        (real-part . g$12134$1bEyPh)
        (rationalize . g$5896$1bEyPh)
        (rational? . g$12133$1bEyPh)
        (rational-valued? . g$12132$1bEyPh)
        (procedure? . g$12131$1bEyPh)
        (positive? . g$12130$1bEyPh)
        (pair? . g$12129$1bEyPh)
        (odd? . g$12128$1bEyPh)
        (numerator . g$12127$1bEyPh)
        (number? . g$12126$1bEyPh)
        (number->string . g$12125$1bEyPh)
        (null? . g$12124$1bEyPh)
        (not . g$12123$1bEyPh)
        (negative? . g$12122$1bEyPh)
        (nan? . g$12121$1bEyPh)
        (min . g$12120$1bEyPh)
        (max . g$12119$1bEyPh)
        (map . g$12118$1bEyPh)
        (make-vector . g$12117$1bEyPh)
        (make-string . g$12116$1bEyPh)
        (make-rectangular . g$12115$1bEyPh)
        (make-polar . g$12114$1bEyPh)
        (magnitude . g$12113$1bEyPh)
        (log . g$12112$1bEyPh)
        (list? . g$12111$1bEyPh)
        (list-tail . g$12110$1bEyPh)
        (list-ref . g$12109$1bEyPh)
        (list->vector . g$12108$1bEyPh)
        (list->string . g$12107$1bEyPh)
        (list . g$12106$1bEyPh)
        (length . g$12105$1bEyPh)
        (lcm . g$12104$1bEyPh)
        (integer? . g$12103$1bEyPh)
        (integer-valued? . g$12102$1bEyPh)
        (integer->char . g$12101$1bEyPh)
        (infinite? . g$12100$1bEyPh)
        (inexact? . g$12099$1bEyPh)
        (inexact . g$12098$1bEyPh)
        (imag-part . g$12097$1bEyPh)
        (gcd . g$12096$1bEyPh)
        (for-each . g$12095$1bEyPh)
        (floor . g$12094$1bEyPh)
        (finite? . g$12093$1bEyPh)
        (expt . g$12092$1bEyPh)
        (exp . g$12091$1bEyPh)
        (exact? . g$12090$1bEyPh)
        (exact-integer-sqrt . g$12089$1bEyPh)
        (exact . g$12088$1bEyPh)
        (even? . g$12087$1bEyPh)
        (error . g$12086$1bEyPh)
        (eqv? . g$12085$1bEyPh)
        (equal? . g$12084$1bEyPh)
        (eq? . g$12083$1bEyPh)
        (dynamic-wind . g$12082$1bEyPh)
        (div0-and-mod0 . g$12081$1bEyPh)
        (mod0 . g$12080$1bEyPh)
        (div0 . g$12079$1bEyPh)
        (div-and-mod . g$12078$1bEyPh)
        (mod . g$12077$1bEyPh)
        (div . g$12076$1bEyPh)
        (denominator . g$12075$1bEyPh)
        (cos . g$12074$1bEyPh)
        (cons . g$12073$1bEyPh)
        (complex? . g$12072$1bEyPh)
        (char? . g$12071$1bEyPh)
        (char>? . g$5893$1bEyPh)
        (char>=? . g$5895$1bEyPh)
        (char=? . g$5891$1bEyPh)
        (char<? . g$5892$1bEyPh)
        (char<=? . g$5894$1bEyPh)
        (char->integer . g$12070$1bEyPh)
        (ceiling . g$12069$1bEyPh)
        (call-with-values . g$12068$1bEyPh)
        (call/cc . g$12067$1bEyPh)
        (call-with-current-continuation . g$12066$1bEyPh)
        (cddddr . g$5791$1bEyPh)
        (cdddar . g$5790$1bEyPh)
        (cddadr . g$5789$1bEyPh)
        (cddaar . g$5788$1bEyPh)
        (cdaddr . g$5787$1bEyPh)
        (cdadar . g$5786$1bEyPh)
        (cdaadr . g$5785$1bEyPh)
        (cdaaar . g$5784$1bEyPh)
        (cadddr . g$5783$1bEyPh)
        (caddar . g$5782$1bEyPh)
        (cadadr . g$5781$1bEyPh)
        (cadaar . g$5780$1bEyPh)
        (caaddr . g$5779$1bEyPh)
        (caadar . g$5778$1bEyPh)
        (caaadr . g$5777$1bEyPh)
        (caaaar . g$5776$1bEyPh)
        (cdddr . g$5775$1bEyPh)
        (cddar . g$5774$1bEyPh)
        (cdadr . g$5773$1bEyPh)
        (cdaar . g$5772$1bEyPh)
        (caddr . g$5771$1bEyPh)
        (cadar . g$5770$1bEyPh)
        (caadr . g$5769$1bEyPh)
        (caaar . g$5768$1bEyPh)
        (cddr . g$5767$1bEyPh)
        (cdar . g$5766$1bEyPh)
        (cadr . g$5765$1bEyPh)
        (caar . g$5764$1bEyPh)
        (cdr . g$12065$1bEyPh)
        (car . g$12064$1bEyPh)
        (boolean? . g$12063$1bEyPh)
        (boolean=? . g$5844$1bEyPh)
        (atan . g$12062$1bEyPh)
        (assertion-violation . g$12061$1bEyPh)
        (asin . g$12060$1bEyPh)
        (apply . g$12059$1bEyPh)
        (append . g$12058$1bEyPh)
        (angle . g$12057$1bEyPh)
        (acos . g$12056$1bEyPh)
        (abs . g$12055$1bEyPh)
        (/ . g$12054$1bEyPh)
        (* . g$12053$1bEyPh)
        (- . g$12052$1bEyPh)
        (+ . g$12051$1bEyPh)
        (>= . g$12050$1bEyPh)
        (> . g$12049$1bEyPh)
        (= . g$12048$1bEyPh)
        (<= . g$12047$1bEyPh)
        (< . g$12046$1bEyPh)
        (make-promise . g$6874$1bEyPh)
        (load/args . g$11880$1bEyPh)
        (printf . g$7628$1bEyPh)
        (fprintf . g$7629$1bEyPh)
        (format . g$7630$1bEyPh)
        (get-arity . g$12041$1bEyPh)
        (gc-collect . g$12040$1bEyPh)
        (clr-type? . g$12039$1bEyPh)
        (get-clr-type . g$12038$1bEyPh)
        (vector-append . g$12036$1bEyPh)
        (vector-filter . g$12035$1bEyPh)
        (vector-reverse! . g$12034$1bEyPh)
        (vector-contains? . g$12033$1bEyPh)
        (vector-index-of . g$12032$1bEyPh)
        (vector-copy . g$12031$1bEyPh)
        (vector-binary-search . g$12030$1bEyPh)
        (get-output-string . g$12029$1bEyPh)
        (open-output-string . g$12028$1bEyPh)
        (open-input-string . g$12027$1bEyPh)
        (string-ci-compare . g$12026$1bEyPh)
        (string-compare . g$12025$1bEyPh)
        (string-format . g$12024$1bEyPh)
        (trace-printer . g$11877$1bEyPh)
        (make-traced-procedure . g$12023$1bEyPh)
        (make-traced-macro . g$7650$1bEyPh)
        (pmap . g$12022$1bEyPh)
        (time-it . g$12021$1bEyPh)
        (make-parameter . g$7655$1bEyPh)
        (library-locator . g$12020$1bEyPh)
        (get-library-paths . g$12019$1bEyPh)
        (environment-symbols . g$8918$1bEyPh)
        (interaction-environment-symbols . g$8917$1bEyPh)
        (library-path . g$8086$1bEyPh)
        (library-extensions . g$8087$1bEyPh)
        (installed-libraries . g$8107$1bEyPh)
        (expand . g$8923$1bEyPh)
        (&no-nans . g$12018$1bEyPh)
        (&no-infinities . g$12017$1bEyPh)
        (&i/o-encoding . g$12016$1bEyPh)
        (&i/o-decoding . g$12015$1bEyPh)
        (&i/o-port . g$12014$1bEyPh)
        (&i/o-file-does-not-exist . g$12013$1bEyPh)
        (&i/o-file-already-exists . g$12012$1bEyPh)
        (&i/o-file-is-read-only . g$12011$1bEyPh)
        (&i/o-file-protection . g$12010$1bEyPh)
        (&i/o-filename . g$12009$1bEyPh)
        (&i/o-invalid-position . g$12008$1bEyPh)
        (&i/o-write . g$12007$1bEyPh)
        (&i/o-read . g$12006$1bEyPh)
        (&i/o . g$12005$1bEyPh)
        (&non-continuable . g$12004$1bEyPh)
        (&undefined . g$12003$1bEyPh)
        (&syntax . g$12002$1bEyPh)
        (&lexical . g$12001$1bEyPh)
        (&implementation-restriction . g$12000$1bEyPh)
        (&who . g$11998$1bEyPh)
        (&irritants . g$11997$1bEyPh)
        (&assertion . g$11996$1bEyPh)
        (&violation . g$11995$1bEyPh)
        (&error . g$11994$1bEyPh)
        (&serious . g$11993$1bEyPh)
        (&warning . g$11992$1bEyPh)
        (&message . g$11991$1bEyPh)
        (&condition . g$11990$1bEyPh)
        (define-condition-type . g$11989$1bEyPh)
        (define-enumeration . g$11988$1bEyPh)
        (define-record-type . g$11987$1bEyPh)
        (parent-rtd . g$11986$1bEyPh)
        (nongenerative . g$11985$1bEyPh)
        (opaque . g$11984$1bEyPh)
        (sealed . g$11983$1bEyPh)
        (protocol . g$11982$1bEyPh)
        (parent . g$11981$1bEyPh)
        (immutable . g$11980$1bEyPh)
        (mutable . g$11979$1bEyPh)
        (fields . g$11978$1bEyPh)
        (error-handling-mode . g$11977$1bEyPh)
        (file-options . g$11976$1bEyPh)
        (buffer-mode . g$11975$1bEyPh)
        (eol-style . g$11974$1bEyPh)
        (guard . g$11973$1bEyPh)
        (trace-letrec-syntax . g$11972$1bEyPh)
        (trace-let-syntax . g$11971$1bEyPh)
        (trace-define-syntax . g$11970$1bEyPh)
        (trace-define . g$11969$1bEyPh)
        (trace-lambda . g$11968$1bEyPh)
        (unsyntax-splicing . g$11967$1bEyPh)
        (unsyntax . g$11966$1bEyPh)
        (unquote-splicing . g$11965$1bEyPh)
        (unquote . g$11964$1bEyPh)
        (_ . g$11963$1bEyPh)
        (else . g$11962$1bEyPh)
        (=> . g$11961$1bEyPh)
        (... . g$11960$1bEyPh)
        (assert . g$11959$1bEyPh)
        (endianness . g$11958$1bEyPh)
        (delay . g$11957$1bEyPh)
        (time . g$11956$1bEyPh)
        (or . g$11955$1bEyPh)
        (and . g$11954$1bEyPh)
        (do . g$11953$1bEyPh)
        (cond . g$11952$1bEyPh)
        (let* . g$11951$1bEyPh)
        (let . g$11950$1bEyPh)
        (identifier-syntax . g$11949$1bEyPh)
        (with-syntax . g$11948$1bEyPh)
        (quasisyntax . g$11947$1bEyPh)
        (quasiquote . g$11946$1bEyPh)
        (syntax-rules . g$11945$1bEyPh)
        (include-into . g$11944$1bEyPh)
        (include . g$11943$1bEyPh)
        (let-values . g$11941$1bEyPh)
        (let*-values . g$11940$1bEyPh)
        (record-constructor-descriptor . g$11939$1bEyPh)
        (record-type-descriptor . g$11938$1bEyPh)
        (fluid-let-syntax . g$11937$1bEyPh)
        (case . g$11936$1bEyPh)
        (parameterize . g$11935$1bEyPh)
        (unless . g$11934$1bEyPh)
        (when . g$11933$1bEyPh)
        (if . g$11932$1bEyPh)
        (letrec* . g$11931$1bEyPh)
        (letrec . g$11930$1bEyPh)
        (case-lambda . g$11928$1bEyPh)
        (lambda . g$11927$1bEyPh)
        (syntax . g$11926$1bEyPh)
        (syntax-case . g$11925$1bEyPh)
        (quote . g$11924$1bEyPh)
        (letrec-syntax . g$11922$1bEyPh)
        (let-syntax . g$11921$1bEyPh)
        (set! . g$11920$1bEyPh)
        (import . g$11919$1bEyPh)
        (library . g$11918$1bEyPh)
        (begin . g$11917$1bEyPh)
        (module . g$11916$1bEyPh)
        (define-syntax . g$11915$1bEyPh)
        (define . g$11914$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12534$1bEyPh
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12019$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12535$1bEyPh
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12475$1bEyPh)
        (annotation-source . g$12474$1bEyPh)
        (annotation-expression . g$12473$1bEyPh)
        (annotation? . g$12472$1bEyPh)
        (read-annotated . g$12471$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12536$1bEyPh
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12441$1bEyPh)
        (serialize-library . g$12440$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12537$1bEyPh
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8548$1bEyPh)
        (variable-transformer? . g$8547$1bEyPh)
        (eqv-hash . g$12044$1bEyPh)
        (eq-hash . g$12043$1bEyPh)
        (reverse! . g$12042$1bEyPh)
        (format . g$7630$1bEyPh)
        (get-command-line . g$12037$1bEyPh)
        (make-traced-procedure . g$12023$1bEyPh)
        (assertion-error . g$8937$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12538$1bEyPh
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12045$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12539$1bEyPh
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12459$1bEyPh)
        (clr-field-set!-internal . g$12458$1bEyPh)
        (clr-field-get-internal . g$12457$1bEyPh)
        (clr-cast-internal . g$12456$1bEyPh)
        (clr-call-internal . g$12455$1bEyPh)
        (clr-new-internal . g$12454$1bEyPh)
        (clr-new-array-internal . g$12453$1bEyPh)
        (clr-is-internal . g$12452$1bEyPh)
        (clr-reference-internal . g$12451$1bEyPh)
        (clr-using-internal . g$12450$1bEyPh)
        (clr-clear-usings-internal . g$12449$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12540$1bEyPh
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11965$1bEyPh)
        (unquote . g$11964$1bEyPh)
        (else . g$11962$1bEyPh)
        (=> . g$11961$1bEyPh)
        (delay . g$11957$1bEyPh)
        (or . g$11955$1bEyPh)
        (and . g$11954$1bEyPh)
        (do . g$11953$1bEyPh)
        (cond . g$11952$1bEyPh)
        (let* . g$11951$1bEyPh)
        (let . g$11950$1bEyPh)
        (quasiquote . g$11946$1bEyPh)
        (syntax-rules . g$11945$1bEyPh)
        (case . g$11936$1bEyPh)
        (if . g$11932$1bEyPh)
        (letrec . g$11930$1bEyPh)
        (lambda . g$11927$1bEyPh)
        (quote . g$11924$1bEyPh)
        (letrec-syntax . g$11922$1bEyPh)
        (let-syntax . g$11921$1bEyPh)
        (set! . g$11920$1bEyPh)
        (begin . g$11917$1bEyPh)
        (define-syntax . g$11915$1bEyPh)
        (define . g$11914$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12541$1bEyPh
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8947$1bEyPh)
        (char-ready? . g$12439$1bEyPh)
        (string-ci>? . g$7017$1bEyPh)
        (string-ci>=? . g$7019$1bEyPh)
        (string-ci=? . g$7015$1bEyPh)
        (string-ci<? . g$7016$1bEyPh)
        (string-ci<=? . g$7018$1bEyPh)
        (char-whitespace? . g$12430$1bEyPh)
        (char-upper-case? . g$12429$1bEyPh)
        (char-numeric? . g$12427$1bEyPh)
        (char-lower-case? . g$12426$1bEyPh)
        (char-upcase . g$12424$1bEyPh)
        (char-downcase . g$12421$1bEyPh)
        (char-ci>? . g$7068$1bEyPh)
        (char-ci>=? . g$7070$1bEyPh)
        (char-ci=? . g$7066$1bEyPh)
        (char-ci<? . g$7067$1bEyPh)
        (char-ci<=? . g$7069$1bEyPh)
        (char-alphabetic? . g$12420$1bEyPh)
        (call-with-output-file . g$7487$1bEyPh)
        (call-with-input-file . g$7486$1bEyPh)
        (write-char . g$12388$1bEyPh)
        (write . g$12387$1bEyPh)
        (with-output-to-file . g$7485$1bEyPh)
        (with-input-from-file . g$7484$1bEyPh)
        (read-char . g$12386$1bEyPh)
        (read . g$12385$1bEyPh)
        (peek-char . g$12384$1bEyPh)
        (open-output-file . g$12383$1bEyPh)
        (open-input-file . g$12382$1bEyPh)
        (newline . g$12381$1bEyPh)
        (display . g$12380$1bEyPh)
        (close-output-port . g$12379$1bEyPh)
        (close-input-port . g$12378$1bEyPh)
        (eof-object? . g$12377$1bEyPh)
        (eof-object . g$12376$1bEyPh)
        (current-error-port . g$12375$1bEyPh)
        (current-output-port . g$12374$1bEyPh)
        (current-input-port . g$12373$1bEyPh)
        (output-port? . g$12372$1bEyPh)
        (input-port? . g$12371$1bEyPh)
        (scheme-report-environment . g$8922$1bEyPh)
        (quotient . g$6871$1bEyPh)
        (null-environment . g$8921$1bEyPh)
        (remainder . g$6872$1bEyPh)
        (modulo . g$6873$1bEyPh)
        (inexact->exact . g$12309$1bEyPh)
        (force . g$6875$1bEyPh)
        (exact->inexact . g$12308$1bEyPh)
        (string-fill! . g$12306$1bEyPh)
        (string-set! . g$12305$1bEyPh)
        (set-cdr! . g$12304$1bEyPh)
        (set-car! . g$12303$1bEyPh)
        (memv . g$12302$1bEyPh)
        (memq . g$12301$1bEyPh)
        (member . g$6449$1bEyPh)
        (assv . g$6446$1bEyPh)
        (assq . g$12300$1bEyPh)
        (assoc . g$6447$1bEyPh)
        (eval . g$8924$1bEyPh)
        (zero? . g$12166$1bEyPh)
        (vector? . g$12165$1bEyPh)
        (vector-set! . g$12164$1bEyPh)
        (vector-ref . g$12163$1bEyPh)
        (vector-length . g$12161$1bEyPh)
        (vector-fill! . g$12159$1bEyPh)
        (vector->list . g$12158$1bEyPh)
        (vector . g$12157$1bEyPh)
        (values . g$12156$1bEyPh)
        (truncate . g$12155$1bEyPh)
        (tan . g$12154$1bEyPh)
        (symbol? . g$12153$1bEyPh)
        (symbol->string . g$12152$1bEyPh)
        (substring . g$12151$1bEyPh)
        (string? . g$12150$1bEyPh)
        (string>? . g$5840$1bEyPh)
        (string>=? . g$5842$1bEyPh)
        (string=? . g$5838$1bEyPh)
        (string<? . g$5839$1bEyPh)
        (string<=? . g$5841$1bEyPh)
        (string-ref . g$12149$1bEyPh)
        (string-length . g$12148$1bEyPh)
        (string-copy . g$12146$1bEyPh)
        (string-append . g$12145$1bEyPh)
        (string->symbol . g$12144$1bEyPh)
        (string->number . g$12143$1bEyPh)
        (string->list . g$12142$1bEyPh)
        (string . g$12141$1bEyPh)
        (sqrt . g$12140$1bEyPh)
        (sin . g$12139$1bEyPh)
        (round . g$12138$1bEyPh)
        (reverse . g$12137$1bEyPh)
        (real? . g$12136$1bEyPh)
        (real-part . g$12134$1bEyPh)
        (rationalize . g$5896$1bEyPh)
        (rational? . g$12133$1bEyPh)
        (procedure? . g$12131$1bEyPh)
        (positive? . g$12130$1bEyPh)
        (pair? . g$12129$1bEyPh)
        (odd? . g$12128$1bEyPh)
        (numerator . g$12127$1bEyPh)
        (number? . g$12126$1bEyPh)
        (number->string . g$12125$1bEyPh)
        (null? . g$12124$1bEyPh)
        (not . g$12123$1bEyPh)
        (negative? . g$12122$1bEyPh)
        (min . g$12120$1bEyPh)
        (max . g$12119$1bEyPh)
        (map . g$12118$1bEyPh)
        (make-vector . g$12117$1bEyPh)
        (make-string . g$12116$1bEyPh)
        (make-rectangular . g$12115$1bEyPh)
        (make-polar . g$12114$1bEyPh)
        (magnitude . g$12113$1bEyPh)
        (log . g$12112$1bEyPh)
        (list? . g$12111$1bEyPh)
        (list-tail . g$12110$1bEyPh)
        (list-ref . g$12109$1bEyPh)
        (list->vector . g$12108$1bEyPh)
        (list->string . g$12107$1bEyPh)
        (list . g$12106$1bEyPh)
        (length . g$12105$1bEyPh)
        (lcm . g$12104$1bEyPh)
        (integer? . g$12103$1bEyPh)
        (integer->char . g$12101$1bEyPh)
        (inexact? . g$12099$1bEyPh)
        (imag-part . g$12097$1bEyPh)
        (gcd . g$12096$1bEyPh)
        (for-each . g$12095$1bEyPh)
        (floor . g$12094$1bEyPh)
        (expt . g$12092$1bEyPh)
        (exp . g$12091$1bEyPh)
        (exact? . g$12090$1bEyPh)
        (even? . g$12087$1bEyPh)
        (eqv? . g$12085$1bEyPh)
        (equal? . g$12084$1bEyPh)
        (eq? . g$12083$1bEyPh)
        (dynamic-wind . g$12082$1bEyPh)
        (denominator . g$12075$1bEyPh)
        (cos . g$12074$1bEyPh)
        (cons . g$12073$1bEyPh)
        (complex? . g$12072$1bEyPh)
        (char? . g$12071$1bEyPh)
        (char>? . g$5893$1bEyPh)
        (char>=? . g$5895$1bEyPh)
        (char=? . g$5891$1bEyPh)
        (char<? . g$5892$1bEyPh)
        (char<=? . g$5894$1bEyPh)
        (char->integer . g$12070$1bEyPh)
        (ceiling . g$12069$1bEyPh)
        (call-with-values . g$12068$1bEyPh)
        (call-with-current-continuation . g$12066$1bEyPh)
        (cddddr . g$5791$1bEyPh)
        (cdddar . g$5790$1bEyPh)
        (cddadr . g$5789$1bEyPh)
        (cddaar . g$5788$1bEyPh)
        (cdaddr . g$5787$1bEyPh)
        (cdadar . g$5786$1bEyPh)
        (cdaadr . g$5785$1bEyPh)
        (cdaaar . g$5784$1bEyPh)
        (cadddr . g$5783$1bEyPh)
        (caddar . g$5782$1bEyPh)
        (cadadr . g$5781$1bEyPh)
        (cadaar . g$5780$1bEyPh)
        (caaddr . g$5779$1bEyPh)
        (caadar . g$5778$1bEyPh)
        (caaadr . g$5777$1bEyPh)
        (caaaar . g$5776$1bEyPh)
        (cdddr . g$5775$1bEyPh)
        (cddar . g$5774$1bEyPh)
        (cdadr . g$5773$1bEyPh)
        (cdaar . g$5772$1bEyPh)
        (caddr . g$5771$1bEyPh)
        (cadar . g$5770$1bEyPh)
        (caadr . g$5769$1bEyPh)
        (caaar . g$5768$1bEyPh)
        (cddr . g$5767$1bEyPh)
        (cdar . g$5766$1bEyPh)
        (cadr . g$5765$1bEyPh)
        (caar . g$5764$1bEyPh)
        (cdr . g$12065$1bEyPh)
        (car . g$12064$1bEyPh)
        (boolean? . g$12063$1bEyPh)
        (atan . g$12062$1bEyPh)
        (asin . g$12060$1bEyPh)
        (apply . g$12059$1bEyPh)
        (append . g$12058$1bEyPh)
        (angle . g$12057$1bEyPh)
        (acos . g$12056$1bEyPh)
        (abs . g$12055$1bEyPh)
        (/ . g$12054$1bEyPh)
        (* . g$12053$1bEyPh)
        (- . g$12052$1bEyPh)
        (+ . g$12051$1bEyPh)
        (>= . g$12050$1bEyPh)
        (> . g$12049$1bEyPh)
        (= . g$12048$1bEyPh)
        (<= . g$12047$1bEyPh)
        (< . g$12046$1bEyPh)
        (unquote-splicing . g$11965$1bEyPh)
        (unquote . g$11964$1bEyPh)
        (else . g$11962$1bEyPh)
        (=> . g$11961$1bEyPh)
        (... . g$11960$1bEyPh)
        (delay . g$11957$1bEyPh)
        (or . g$11955$1bEyPh)
        (and . g$11954$1bEyPh)
        (do . g$11953$1bEyPh)
        (cond . g$11952$1bEyPh)
        (let* . g$11951$1bEyPh)
        (let . g$11950$1bEyPh)
        (quasiquote . g$11946$1bEyPh)
        (syntax-rules . g$11945$1bEyPh)
        (case . g$11936$1bEyPh)
        (if . g$11932$1bEyPh)
        (letrec . g$11930$1bEyPh)
        (lambda . g$11927$1bEyPh)
        (quote . g$11924$1bEyPh)
        (letrec-syntax . g$11922$1bEyPh)
        (let-syntax . g$11921$1bEyPh)
        (set! . g$11920$1bEyPh)
        (begin . g$11917$1bEyPh)
        (define-syntax . g$11915$1bEyPh)
        (define . g$11914$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12542$1bEyPh
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12438$1bEyPh)
        (string-titlecase . g$12437$1bEyPh)
        (string-normalize-nfkd . g$12436$1bEyPh)
        (string-normalize-nfkc . g$12435$1bEyPh)
        (string-normalize-nfd . g$12434$1bEyPh)
        (string-normalize-nfc . g$12433$1bEyPh)
        (string-foldcase . g$12432$1bEyPh)
        (string-downcase . g$12431$1bEyPh)
        (string-ci>? . g$7017$1bEyPh)
        (string-ci>=? . g$7019$1bEyPh)
        (string-ci=? . g$7015$1bEyPh)
        (string-ci<? . g$7016$1bEyPh)
        (string-ci<=? . g$7018$1bEyPh)
        (char-whitespace? . g$12430$1bEyPh)
        (char-upper-case? . g$12429$1bEyPh)
        (char-title-case? . g$12428$1bEyPh)
        (char-numeric? . g$12427$1bEyPh)
        (char-lower-case? . g$12426$1bEyPh)
        (char-general-category . g$12425$1bEyPh)
        (char-upcase . g$12424$1bEyPh)
        (char-titlecase . g$12423$1bEyPh)
        (char-foldcase . g$12422$1bEyPh)
        (char-downcase . g$12421$1bEyPh)
        (char-ci>? . g$7068$1bEyPh)
        (char-ci>=? . g$7070$1bEyPh)
        (char-ci=? . g$7066$1bEyPh)
        (char-ci<? . g$7067$1bEyPh)
        (char-ci<=? . g$7069$1bEyPh)
        (char-alphabetic? . g$12420$1bEyPh)
        (make-variable-transformer . g$8546$1bEyPh)
        (identifier? . g$8942$1bEyPh)
        (generate-temporaries . g$8931$1bEyPh)
        (free-identifier=? . g$8932$1bEyPh)
        (syntax->datum . g$8944$1bEyPh)
        (datum->syntax . g$8943$1bEyPh)
        (bound-identifier=? . g$8933$1bEyPh)
        (record-type-descriptor? . g$12419$1bEyPh)
        (record-predicate . g$12418$1bEyPh)
        (record-mutator . g$12417$1bEyPh)
        (record-constructor . g$12416$1bEyPh)
        (record-accessor . g$12415$1bEyPh)
        (make-record-type-descriptor . g$12414$1bEyPh)
        (make-record-constructor-descriptor . g$12413$1bEyPh)
        (record? . g$12412$1bEyPh)
        (record-type-uid . g$12411$1bEyPh)
        (record-type-sealed? . g$12410$1bEyPh)
        (record-type-parent . g$12409$1bEyPh)
        (record-type-opaque? . g$12408$1bEyPh)
        (record-type-name . g$12407$1bEyPh)
        (record-type-generative? . g$12406$1bEyPh)
        (record-type-field-names . g$12405$1bEyPh)
        (record-rtd . g$12404$1bEyPh)
        (record-field-mutable? . g$12403$1bEyPh)
        (delete-file . g$6378$1bEyPh)
        (file-exists? . g$6377$1bEyPh)
        (vector-sort! . g$12402$1bEyPh)
        (vector-sort . g$12401$1bEyPh)
        (list-sort . g$6891$1bEyPh)
        (symbol-hash . g$12400$1bEyPh)
        (string-ci-hash . g$12399$1bEyPh)
        (string-hash . g$12398$1bEyPh)
        (equal-hash . g$12397$1bEyPh)
        (hashtable-equivalence-function . g$12396$1bEyPh)
        (make-hashtable . g$12395$1bEyPh)
        (hashtable-hash-function . g$12394$1bEyPh)
        (make-eqv-hashtable . g$6345$1bEyPh)
        (make-eq-hashtable . g$6344$1bEyPh)
        (hashtable? . g$12393$1bEyPh)
        (hashtable-update! . g$6351$1bEyPh)
        (hashtable-size . g$6346$1bEyPh)
        (hashtable-set! . g$6348$1bEyPh)
        (hashtable-ref . g$6347$1bEyPh)
        (hashtable-mutable? . g$12392$1bEyPh)
        (hashtable-keys . g$12391$1bEyPh)
        (hashtable-entries . g$12390$1bEyPh)
        (hashtable-delete! . g$6349$1bEyPh)
        (hashtable-copy . g$12389$1bEyPh)
        (hashtable-contains? . g$6350$1bEyPh)
        (hashtable-clear! . g$6352$1bEyPh)
        (call-with-output-file . g$7487$1bEyPh)
        (call-with-input-file . g$7486$1bEyPh)
        (write-char . g$12388$1bEyPh)
        (write . g$12387$1bEyPh)
        (with-output-to-file . g$7485$1bEyPh)
        (with-input-from-file . g$7484$1bEyPh)
        (read-char . g$12386$1bEyPh)
        (read . g$12385$1bEyPh)
        (peek-char . g$12384$1bEyPh)
        (open-output-file . g$12383$1bEyPh)
        (open-input-file . g$12382$1bEyPh)
        (newline . g$12381$1bEyPh)
        (display . g$12380$1bEyPh)
        (close-output-port . g$12379$1bEyPh)
        (close-input-port . g$12378$1bEyPh)
        (eof-object? . g$12377$1bEyPh)
        (eof-object . g$12376$1bEyPh)
        (current-error-port . g$12375$1bEyPh)
        (current-output-port . g$12374$1bEyPh)
        (current-input-port . g$12373$1bEyPh)
        (output-port? . g$12372$1bEyPh)
        (input-port? . g$12371$1bEyPh)
        (utf-8-codec . g$12370$1bEyPh)
        (utf-16-codec . g$12369$1bEyPh)
        (transcoder-error-handling-mode . g$12368$1bEyPh)
        (transcoder-eol-style . g$12367$1bEyPh)
        (transcoder-codec . g$12366$1bEyPh)
        (transcoded-port . g$12365$1bEyPh)
        (textual-port? . g$12364$1bEyPh)
        (string->bytevector . g$12363$1bEyPh)
        (standard-output-port . g$12362$1bEyPh)
        (standard-input-port . g$12361$1bEyPh)
        (standard-error-port . g$12360$1bEyPh)
        (set-port-position! . g$12359$1bEyPh)
        (put-u8 . g$12358$1bEyPh)
        (put-string . g$12357$1bEyPh)
        (put-datum . g$12356$1bEyPh)
        (put-char . g$12355$1bEyPh)
        (put-bytevector . g$12354$1bEyPh)
        (port? . g$7463$1bEyPh)
        (port-transcoder . g$12353$1bEyPh)
        (port-position . g$12352$1bEyPh)
        (port-has-set-port-position!? . g$12351$1bEyPh)
        (port-has-port-position? . g$12350$1bEyPh)
        (port-eof? . g$12349$1bEyPh)
        (output-port-buffer-mode . g$12348$1bEyPh)
        (open-string-output-port . g$7462$1bEyPh)
        (open-string-input-port . g$12347$1bEyPh)
        (open-file-output-port . g$12346$1bEyPh)
        (open-file-input/output-port . g$12345$1bEyPh)
        (open-file-input-port . g$12344$1bEyPh)
        (open-bytevector-output-port . g$12343$1bEyPh)
        (open-bytevector-input-port . g$12342$1bEyPh)
        (native-transcoder . g$12341$1bEyPh)
        (native-eol-style . g$12340$1bEyPh)
        (make-transcoder . g$12339$1bEyPh)
        (latin-1-codec . g$12338$1bEyPh)
        (make-i/o-write-error . g$7319$1bEyPh)
        (make-i/o-read-error . g$7305$1bEyPh)
        (make-i/o-port-error . g$7424$1bEyPh)
        (make-i/o-invalid-position-error . g$7334$1bEyPh)
        (make-i/o-filename-error . g$7351$1bEyPh)
        (make-i/o-file-protection-error . g$7367$1bEyPh)
        (make-i/o-file-is-read-only-error . g$7381$1bEyPh)
        (make-i/o-file-does-not-exist-error . g$7409$1bEyPh)
        (make-i/o-file-already-exists-error . g$7395$1bEyPh)
        (make-i/o-error . g$7291$1bEyPh)
        (make-i/o-encoding-error . g$7455$1bEyPh)
        (make-i/o-decoding-error . g$7440$1bEyPh)
        (make-custom-textual-output-port . g$12337$1bEyPh)
        (make-custom-textual-input/output-port . g$12336$1bEyPh)
        (make-custom-textual-input-port . g$12335$1bEyPh)
        (make-custom-binary-output-port . g$12334$1bEyPh)
        (make-custom-binary-input/output-port . g$12333$1bEyPh)
        (make-custom-binary-input-port . g$12332$1bEyPh)
        (make-bytevector . g$12331$1bEyPh)
        (lookahead-u8 . g$12330$1bEyPh)
        (lookahead-char . g$12329$1bEyPh)
        (i/o-write-error? . g$7320$1bEyPh)
        (i/o-read-error? . g$7306$1bEyPh)
        (i/o-port-error? . g$7426$1bEyPh)
        (i/o-invalid-position-error? . g$7336$1bEyPh)
        (i/o-error-position . g$7337$1bEyPh)
        (i/o-filename-error? . g$7353$1bEyPh)
        (i/o-file-protection-error? . g$7368$1bEyPh)
        (i/o-file-is-read-only-error? . g$7382$1bEyPh)
        (i/o-file-does-not-exist-error? . g$7410$1bEyPh)
        (i/o-file-already-exists-error? . g$7396$1bEyPh)
        (i/o-error? . g$7292$1bEyPh)
        (i/o-error-port . g$7427$1bEyPh)
        (i/o-error-filename . g$7354$1bEyPh)
        (i/o-encoding-error? . g$7457$1bEyPh)
        (i/o-encoding-error-char . g$7458$1bEyPh)
        (i/o-decoding-error? . g$7441$1bEyPh)
        (get-u8 . g$12328$1bEyPh)
        (get-string-n! . g$12327$1bEyPh)
        (get-string-n . g$12326$1bEyPh)
        (get-string-all . g$12325$1bEyPh)
        (get-line . g$12324$1bEyPh)
        (get-datum . g$12323$1bEyPh)
        (get-char . g$12322$1bEyPh)
        (get-bytevector-some . g$12321$1bEyPh)
        (get-bytevector-n! . g$12320$1bEyPh)
        (get-bytevector-n . g$12319$1bEyPh)
        (get-bytevector-all . g$12318$1bEyPh)
        (flush-output-port . g$12317$1bEyPh)
        (close-port . g$12316$1bEyPh)
        (call-with-string-output-port . g$12315$1bEyPh)
        (call-with-port . g$12314$1bEyPh)
        (call-with-bytevector-output-port . g$12313$1bEyPh)
        (bytevector->string . g$12312$1bEyPh)
        (buffer-mode? . g$12311$1bEyPh)
        (binary-port? . g$12310$1bEyPh)
        (exit . g$12307$1bEyPh)
        (command-line . g$11878$1bEyPh)
        (remove . g$6458$1bEyPh)
        (remv . g$6459$1bEyPh)
        (remp . g$6444$1bEyPh)
        (remq . g$6460$1bEyPh)
        (partition . g$6443$1bEyPh)
        (memv . g$12302$1bEyPh)
        (memq . g$12301$1bEyPh)
        (memp . g$6450$1bEyPh)
        (member . g$6449$1bEyPh)
        (exists . g$6454$1bEyPh)
        (for-all . g$6453$1bEyPh)
        (fold-right . g$6457$1bEyPh)
        (fold-left . g$6456$1bEyPh)
        (find . g$6442$1bEyPh)
        (filter . g$6445$1bEyPh)
        (cons* . g$6455$1bEyPh)
        (assv . g$6446$1bEyPh)
        (assq . g$12300$1bEyPh)
        (assp . g$6448$1bEyPh)
        (assoc . g$6447$1bEyPh)
        (with-exception-handler . g$12299$1bEyPh)
        (raise-continuable . g$12298$1bEyPh)
        (raise . g$12297$1bEyPh)
        (make-enumeration . g$7544$1bEyPh)
        (enum-set=? . g$7551$1bEyPh)
        (enum-set-universe . g$7545$1bEyPh)
        (enum-set-union . g$7552$1bEyPh)
        (enum-set-subset? . g$7550$1bEyPh)
        (enum-set-projection . g$7556$1bEyPh)
        (enum-set-member? . g$7549$1bEyPh)
        (enum-set-intersection . g$7553$1bEyPh)
        (enum-set-indexer . g$7546$1bEyPh)
        (enum-set-difference . g$7554$1bEyPh)
        (enum-set-constructor . g$7547$1bEyPh)
        (enum-set-complement . g$7555$1bEyPh)
        (enum-set->list . g$7548$1bEyPh)
        (who-condition? . g$6782$1bEyPh)
        (warning? . g$6693$1bEyPh)
        (violation? . g$6735$1bEyPh)
        (undefined-violation? . g$6859$1bEyPh)
        (syntax-violation? . g$6843$1bEyPh)
        (syntax-violation-subform . g$6845$1bEyPh)
        (syntax-violation-form . g$6844$1bEyPh)
        (syntax-violation . g$8941$1bEyPh)
        (simple-conditions . g$12296$1bEyPh)
        (serious-condition? . g$6707$1bEyPh)
        (non-continuable-violation? . g$6797$1bEyPh)
        (message-condition? . g$6678$1bEyPh)
        (make-who-condition . g$6780$1bEyPh)
        (make-warning . g$6692$1bEyPh)
        (make-violation . g$6734$1bEyPh)
        (make-undefined-violation . g$6858$1bEyPh)
        (make-syntax-violation . g$6840$1bEyPh)
        (make-serious-condition . g$6706$1bEyPh)
        (make-non-continuable-violation . g$6796$1bEyPh)
        (make-message-condition . g$6676$1bEyPh)
        (make-lexical-violation . g$6824$1bEyPh)
        (make-irritants-condition . g$6763$1bEyPh)
        (make-implementation-restriction-violation . g$6810$1bEyPh)
        (make-error . g$6720$1bEyPh)
        (make-assertion-violation . g$6748$1bEyPh)
        (lexical-violation? . g$6825$1bEyPh)
        (irritants-condition? . g$6765$1bEyPh)
        (implementation-restriction-violation? . g$6811$1bEyPh)
        (error? . g$6721$1bEyPh)
        (condition-who . g$6783$1bEyPh)
        (condition-predicate . g$12295$1bEyPh)
        (condition-message . g$6679$1bEyPh)
        (condition-irritants . g$6766$1bEyPh)
        (condition-accessor . g$12294$1bEyPh)
        (condition . g$12293$1bEyPh)
        (assertion-violation? . g$6749$1bEyPh)
        (condition? . g$12292$1bEyPh)
        (utf32->string . g$12291$1bEyPh)
        (utf16->string . g$12290$1bEyPh)
        (utf8->string . g$12289$1bEyPh)
        (uint-list->bytevector . g$12288$1bEyPh)
        (u8-list->bytevector . g$12287$1bEyPh)
        (string->utf8 . g$12286$1bEyPh)
        (string->utf32 . g$12285$1bEyPh)
        (string->utf16 . g$12284$1bEyPh)
        (sint-list->bytevector . g$12283$1bEyPh)
        (native-endianness . g$6534$1bEyPh)
        (bytevector? . g$12282$1bEyPh)
        (bytevector=? . g$12281$1bEyPh)
        (bytevector-uint-set! . g$12280$1bEyPh)
        (bytevector-uint-ref . g$12279$1bEyPh)
        (bytevector-u8-set! . g$12278$1bEyPh)
        (bytevector-u8-ref . g$12277$1bEyPh)
        (bytevector-u64-set! . g$6555$1bEyPh)
        (bytevector-u64-ref . g$6551$1bEyPh)
        (bytevector-u64-native-set! . g$6557$1bEyPh)
        (bytevector-u64-native-ref . g$6553$1bEyPh)
        (bytevector-u32-set! . g$6547$1bEyPh)
        (bytevector-u32-ref . g$6543$1bEyPh)
        (bytevector-u32-native-set! . g$6549$1bEyPh)
        (bytevector-u32-native-ref . g$6545$1bEyPh)
        (bytevector-u16-set! . g$6539$1bEyPh)
        (bytevector-u16-ref . g$6535$1bEyPh)
        (bytevector-u16-native-set! . g$6541$1bEyPh)
        (bytevector-u16-native-ref . g$6537$1bEyPh)
        (bytevector-sint-set! . g$12276$1bEyPh)
        (bytevector-sint-ref . g$12275$1bEyPh)
        (bytevector-s8-set! . g$12274$1bEyPh)
        (bytevector-s8-ref . g$12273$1bEyPh)
        (bytevector-s64-set! . g$6556$1bEyPh)
        (bytevector-s64-ref . g$6552$1bEyPh)
        (bytevector-s64-native-set! . g$6558$1bEyPh)
        (bytevector-s64-native-ref . g$6554$1bEyPh)
        (bytevector-s32-set! . g$6548$1bEyPh)
        (bytevector-s32-ref . g$6544$1bEyPh)
        (bytevector-s32-native-set! . g$6550$1bEyPh)
        (bytevector-s32-native-ref . g$6546$1bEyPh)
        (bytevector-s16-set! . g$6540$1bEyPh)
        (bytevector-s16-ref . g$6536$1bEyPh)
        (bytevector-s16-native-set! . g$6542$1bEyPh)
        (bytevector-s16-native-ref . g$6538$1bEyPh)
        (bytevector-length . g$12272$1bEyPh)
        (bytevector-ieee-single-set! . g$12271$1bEyPh)
        (bytevector-ieee-single-ref . g$12270$1bEyPh)
        (bytevector-ieee-single-native-set! . g$6561$1bEyPh)
        (bytevector-ieee-single-native-ref . g$6559$1bEyPh)
        (bytevector-ieee-double-set! . g$12269$1bEyPh)
        (bytevector-ieee-double-ref . g$12268$1bEyPh)
        (bytevector-ieee-double-native-set! . g$6562$1bEyPh)
        (bytevector-ieee-double-native-ref . g$6560$1bEyPh)
        (bytevector-fill! . g$12267$1bEyPh)
        (bytevector-copy! . g$12266$1bEyPh)
        (bytevector-copy . g$12265$1bEyPh)
        (bytevector->uint-list . g$12264$1bEyPh)
        (bytevector->u8-list . g$12263$1bEyPh)
        (bytevector->sint-list . g$12262$1bEyPh)
        (no-nans-violation? . g$7277$1bEyPh)
        (no-infinities-violation? . g$7263$1bEyPh)
        (make-no-nans-violation . g$7276$1bEyPh)
        (make-no-infinities-violation . g$7262$1bEyPh)
        (real->flonum . g$12261$1bEyPh)
        (flzero? . g$12260$1bEyPh)
        (fltruncate . g$12259$1bEyPh)
        (fltan . g$12258$1bEyPh)
        (flsqrt . g$12257$1bEyPh)
        (flsin . g$12256$1bEyPh)
        (flround . g$12255$1bEyPh)
        (flpositive? . g$12254$1bEyPh)
        (flonum? . g$12253$1bEyPh)
        (flodd? . g$12252$1bEyPh)
        (flnumerator . g$12251$1bEyPh)
        (flnegative? . g$12250$1bEyPh)
        (flnan? . g$12249$1bEyPh)
        (flmod0 . g$12248$1bEyPh)
        (flmod . g$12247$1bEyPh)
        (flmin . g$12246$1bEyPh)
        (flmax . g$12245$1bEyPh)
        (fllog . g$12244$1bEyPh)
        (flinteger? . g$12243$1bEyPh)
        (flinfinite? . g$12242$1bEyPh)
        (flfloor . g$12241$1bEyPh)
        (flfinite? . g$12240$1bEyPh)
        (flexpt . g$12239$1bEyPh)
        (flexp . g$12238$1bEyPh)
        (fleven? . g$12237$1bEyPh)
        (fldiv0-and-mod0 . g$12236$1bEyPh)
        (fldiv0 . g$12235$1bEyPh)
        (fldiv-and-mod . g$12234$1bEyPh)
        (fldiv . g$12233$1bEyPh)
        (fldenominator . g$12232$1bEyPh)
        (flcos . g$12231$1bEyPh)
        (flceiling . g$12230$1bEyPh)
        (flatan . g$12229$1bEyPh)
        (flasin . g$12228$1bEyPh)
        (flacos . g$12227$1bEyPh)
        (flabs . g$12226$1bEyPh)
        (fl>? . g$12225$1bEyPh)
        (fl>=? . g$12224$1bEyPh)
        (fl=? . g$12223$1bEyPh)
        (fl<? . g$12222$1bEyPh)
        (fl<=? . g$12221$1bEyPh)
        (fl/ . g$12220$1bEyPh)
        (fl- . g$12219$1bEyPh)
        (fl+ . g$12218$1bEyPh)
        (fl* . g$12217$1bEyPh)
        (fixnum->flonum . g$12216$1bEyPh)
        (fxzero? . g$12215$1bEyPh)
        (fxxor . g$12214$1bEyPh)
        (fxrotate-bit-field . g$7208$1bEyPh)
        (fxreverse-bit-field . g$12213$1bEyPh)
        (fxpositive? . g$12212$1bEyPh)
        (fxodd? . g$12211$1bEyPh)
        (fxnot . g$12210$1bEyPh)
        (fxnegative? . g$12209$1bEyPh)
        (fxmod0 . g$12208$1bEyPh)
        (fxmod . g$12207$1bEyPh)
        (fxmin . g$12206$1bEyPh)
        (fxmax . g$12205$1bEyPh)
        (fxlength . g$12204$1bEyPh)
        (fxior . g$12203$1bEyPh)
        (fxif . g$7202$1bEyPh)
        (fxfirst-bit-set . g$12202$1bEyPh)
        (fxeven? . g$12201$1bEyPh)
        (fxdiv0-and-mod0 . g$12200$1bEyPh)
        (fxdiv0 . g$12199$1bEyPh)
        (fxdiv-and-mod . g$12198$1bEyPh)
        (fxdiv . g$12197$1bEyPh)
        (fxcopy-bit-field . g$7205$1bEyPh)
        (fxcopy-bit . g$7203$1bEyPh)
        (fxbit-set? . g$12196$1bEyPh)
        (fxbit-field . g$7204$1bEyPh)
        (fxbit-count . g$12195$1bEyPh)
        (fxarithmetic-shift-right . g$7207$1bEyPh)
        (fxarithmetic-shift-left . g$7206$1bEyPh)
        (fxarithmetic-shift . g$12194$1bEyPh)
        (fxand . g$12193$1bEyPh)
        (fx>? . g$12192$1bEyPh)
        (fx>=? . g$12191$1bEyPh)
        (fx=? . g$12190$1bEyPh)
        (fx<? . g$12189$1bEyPh)
        (fx<=? . g$12188$1bEyPh)
        (fx-/carry . g$12187$1bEyPh)
        (fx- . g$12186$1bEyPh)
        (fx+/carry . g$12185$1bEyPh)
        (fx+ . g$12184$1bEyPh)
        (fx*/carry . g$12183$1bEyPh)
        (fx* . g$12182$1bEyPh)
        (greatest-fixnum . g$12181$1bEyPh)
        (least-fixnum . g$12180$1bEyPh)
        (fixnum-width . g$12179$1bEyPh)
        (fixnum? . g$12178$1bEyPh)
        (bitwise-rotate-bit-field . g$7160$1bEyPh)
        (bitwise-reverse-bit-field . g$12177$1bEyPh)
        (bitwise-length . g$12176$1bEyPh)
        (bitwise-if . g$7154$1bEyPh)
        (bitwise-first-bit-set . g$12175$1bEyPh)
        (bitwise-copy-bit-field . g$7157$1bEyPh)
        (bitwise-copy-bit . g$7155$1bEyPh)
        (bitwise-bit-set? . g$12174$1bEyPh)
        (bitwise-bit-field . g$12173$1bEyPh)
        (bitwise-bit-count . g$12172$1bEyPh)
        (bitwise-xor . g$12171$1bEyPh)
        (bitwise-ior . g$12170$1bEyPh)
        (bitwise-and . g$12169$1bEyPh)
        (bitwise-not . g$12168$1bEyPh)
        (bitwise-arithmetic-shift-right . g$7159$1bEyPh)
        (bitwise-arithmetic-shift-left . g$7158$1bEyPh)
        (bitwise-arithmetic-shift . g$12167$1bEyPh)
        (zero? . g$12166$1bEyPh)
        (vector? . g$12165$1bEyPh)
        (vector-set! . g$12164$1bEyPh)
        (vector-ref . g$12163$1bEyPh)
        (vector-map . g$12162$1bEyPh)
        (vector-length . g$12161$1bEyPh)
        (vector-for-each . g$12160$1bEyPh)
        (vector-fill! . g$12159$1bEyPh)
        (vector->list . g$12158$1bEyPh)
        (vector . g$12157$1bEyPh)
        (values . g$12156$1bEyPh)
        (truncate . g$12155$1bEyPh)
        (tan . g$12154$1bEyPh)
        (symbol? . g$12153$1bEyPh)
        (symbol=? . g$5843$1bEyPh)
        (symbol->string . g$12152$1bEyPh)
        (substring . g$12151$1bEyPh)
        (string? . g$12150$1bEyPh)
        (string>? . g$5840$1bEyPh)
        (string>=? . g$5842$1bEyPh)
        (string=? . g$5838$1bEyPh)
        (string<? . g$5839$1bEyPh)
        (string<=? . g$5841$1bEyPh)
        (string-ref . g$12149$1bEyPh)
        (string-length . g$12148$1bEyPh)
        (string-for-each . g$12147$1bEyPh)
        (string-copy . g$12146$1bEyPh)
        (string-append . g$12145$1bEyPh)
        (string->symbol . g$12144$1bEyPh)
        (string->number . g$12143$1bEyPh)
        (string->list . g$12142$1bEyPh)
        (string . g$12141$1bEyPh)
        (sqrt . g$12140$1bEyPh)
        (sin . g$12139$1bEyPh)
        (round . g$12138$1bEyPh)
        (reverse . g$12137$1bEyPh)
        (real? . g$12136$1bEyPh)
        (real-valued? . g$12135$1bEyPh)
        (real-part . g$12134$1bEyPh)
        (rationalize . g$5896$1bEyPh)
        (rational? . g$12133$1bEyPh)
        (rational-valued? . g$12132$1bEyPh)
        (procedure? . g$12131$1bEyPh)
        (positive? . g$12130$1bEyPh)
        (pair? . g$12129$1bEyPh)
        (odd? . g$12128$1bEyPh)
        (numerator . g$12127$1bEyPh)
        (number? . g$12126$1bEyPh)
        (number->string . g$12125$1bEyPh)
        (null? . g$12124$1bEyPh)
        (not . g$12123$1bEyPh)
        (negative? . g$12122$1bEyPh)
        (nan? . g$12121$1bEyPh)
        (min . g$12120$1bEyPh)
        (max . g$12119$1bEyPh)
        (map . g$12118$1bEyPh)
        (make-vector . g$12117$1bEyPh)
        (make-string . g$12116$1bEyPh)
        (make-rectangular . g$12115$1bEyPh)
        (make-polar . g$12114$1bEyPh)
        (magnitude . g$12113$1bEyPh)
        (log . g$12112$1bEyPh)
        (list? . g$12111$1bEyPh)
        (list-tail . g$12110$1bEyPh)
        (list-ref . g$12109$1bEyPh)
        (list->vector . g$12108$1bEyPh)
        (list->string . g$12107$1bEyPh)
        (list . g$12106$1bEyPh)
        (length . g$12105$1bEyPh)
        (lcm . g$12104$1bEyPh)
        (integer? . g$12103$1bEyPh)
        (integer-valued? . g$12102$1bEyPh)
        (integer->char . g$12101$1bEyPh)
        (infinite? . g$12100$1bEyPh)
        (inexact? . g$12099$1bEyPh)
        (inexact . g$12098$1bEyPh)
        (imag-part . g$12097$1bEyPh)
        (gcd . g$12096$1bEyPh)
        (for-each . g$12095$1bEyPh)
        (floor . g$12094$1bEyPh)
        (finite? . g$12093$1bEyPh)
        (expt . g$12092$1bEyPh)
        (exp . g$12091$1bEyPh)
        (exact? . g$12090$1bEyPh)
        (exact-integer-sqrt . g$12089$1bEyPh)
        (exact . g$12088$1bEyPh)
        (even? . g$12087$1bEyPh)
        (error . g$12086$1bEyPh)
        (eqv? . g$12085$1bEyPh)
        (equal? . g$12084$1bEyPh)
        (eq? . g$12083$1bEyPh)
        (dynamic-wind . g$12082$1bEyPh)
        (div0-and-mod0 . g$12081$1bEyPh)
        (mod0 . g$12080$1bEyPh)
        (div0 . g$12079$1bEyPh)
        (div-and-mod . g$12078$1bEyPh)
        (mod . g$12077$1bEyPh)
        (div . g$12076$1bEyPh)
        (denominator . g$12075$1bEyPh)
        (cos . g$12074$1bEyPh)
        (cons . g$12073$1bEyPh)
        (complex? . g$12072$1bEyPh)
        (char? . g$12071$1bEyPh)
        (char>? . g$5893$1bEyPh)
        (char>=? . g$5895$1bEyPh)
        (char=? . g$5891$1bEyPh)
        (char<? . g$5892$1bEyPh)
        (char<=? . g$5894$1bEyPh)
        (char->integer . g$12070$1bEyPh)
        (ceiling . g$12069$1bEyPh)
        (call-with-values . g$12068$1bEyPh)
        (call/cc . g$12067$1bEyPh)
        (call-with-current-continuation . g$12066$1bEyPh)
        (cddddr . g$5791$1bEyPh)
        (cdddar . g$5790$1bEyPh)
        (cddadr . g$5789$1bEyPh)
        (cddaar . g$5788$1bEyPh)
        (cdaddr . g$5787$1bEyPh)
        (cdadar . g$5786$1bEyPh)
        (cdaadr . g$5785$1bEyPh)
        (cdaaar . g$5784$1bEyPh)
        (cadddr . g$5783$1bEyPh)
        (caddar . g$5782$1bEyPh)
        (cadadr . g$5781$1bEyPh)
        (cadaar . g$5780$1bEyPh)
        (caaddr . g$5779$1bEyPh)
        (caadar . g$5778$1bEyPh)
        (caaadr . g$5777$1bEyPh)
        (caaaar . g$5776$1bEyPh)
        (cdddr . g$5775$1bEyPh)
        (cddar . g$5774$1bEyPh)
        (cdadr . g$5773$1bEyPh)
        (cdaar . g$5772$1bEyPh)
        (caddr . g$5771$1bEyPh)
        (cadar . g$5770$1bEyPh)
        (caadr . g$5769$1bEyPh)
        (caaar . g$5768$1bEyPh)
        (cddr . g$5767$1bEyPh)
        (cdar . g$5766$1bEyPh)
        (cadr . g$5765$1bEyPh)
        (caar . g$5764$1bEyPh)
        (cdr . g$12065$1bEyPh)
        (car . g$12064$1bEyPh)
        (boolean? . g$12063$1bEyPh)
        (boolean=? . g$5844$1bEyPh)
        (atan . g$12062$1bEyPh)
        (assertion-violation . g$12061$1bEyPh)
        (asin . g$12060$1bEyPh)
        (apply . g$12059$1bEyPh)
        (append . g$12058$1bEyPh)
        (angle . g$12057$1bEyPh)
        (acos . g$12056$1bEyPh)
        (abs . g$12055$1bEyPh)
        (/ . g$12054$1bEyPh)
        (* . g$12053$1bEyPh)
        (- . g$12052$1bEyPh)
        (+ . g$12051$1bEyPh)
        (>= . g$12050$1bEyPh)
        (> . g$12049$1bEyPh)
        (= . g$12048$1bEyPh)
        (<= . g$12047$1bEyPh)
        (< . g$12046$1bEyPh)
        (&no-nans . g$12018$1bEyPh)
        (&no-infinities . g$12017$1bEyPh)
        (&i/o-encoding . g$12016$1bEyPh)
        (&i/o-decoding . g$12015$1bEyPh)
        (&i/o-port . g$12014$1bEyPh)
        (&i/o-file-does-not-exist . g$12013$1bEyPh)
        (&i/o-file-already-exists . g$12012$1bEyPh)
        (&i/o-file-is-read-only . g$12011$1bEyPh)
        (&i/o-file-protection . g$12010$1bEyPh)
        (&i/o-filename . g$12009$1bEyPh)
        (&i/o-invalid-position . g$12008$1bEyPh)
        (&i/o-write . g$12007$1bEyPh)
        (&i/o-read . g$12006$1bEyPh)
        (&i/o . g$12005$1bEyPh)
        (&non-continuable . g$12004$1bEyPh)
        (&undefined . g$12003$1bEyPh)
        (&syntax . g$12002$1bEyPh)
        (&lexical . g$12001$1bEyPh)
        (&implementation-restriction . g$12000$1bEyPh)
        (&who . g$11998$1bEyPh)
        (&irritants . g$11997$1bEyPh)
        (&assertion . g$11996$1bEyPh)
        (&violation . g$11995$1bEyPh)
        (&error . g$11994$1bEyPh)
        (&serious . g$11993$1bEyPh)
        (&warning . g$11992$1bEyPh)
        (&message . g$11991$1bEyPh)
        (&condition . g$11990$1bEyPh)
        (define-condition-type . g$11989$1bEyPh)
        (define-enumeration . g$11988$1bEyPh)
        (define-record-type . g$11987$1bEyPh)
        (parent-rtd . g$11986$1bEyPh)
        (nongenerative . g$11985$1bEyPh)
        (opaque . g$11984$1bEyPh)
        (sealed . g$11983$1bEyPh)
        (protocol . g$11982$1bEyPh)
        (parent . g$11981$1bEyPh)
        (immutable . g$11980$1bEyPh)
        (mutable . g$11979$1bEyPh)
        (fields . g$11978$1bEyPh)
        (error-handling-mode . g$11977$1bEyPh)
        (file-options . g$11976$1bEyPh)
        (buffer-mode . g$11975$1bEyPh)
        (eol-style . g$11974$1bEyPh)
        (guard . g$11973$1bEyPh)
        (unsyntax-splicing . g$11967$1bEyPh)
        (unsyntax . g$11966$1bEyPh)
        (unquote-splicing . g$11965$1bEyPh)
        (unquote . g$11964$1bEyPh)
        (_ . g$11963$1bEyPh)
        (else . g$11962$1bEyPh)
        (=> . g$11961$1bEyPh)
        (... . g$11960$1bEyPh)
        (assert . g$11959$1bEyPh)
        (endianness . g$11958$1bEyPh)
        (or . g$11955$1bEyPh)
        (and . g$11954$1bEyPh)
        (do . g$11953$1bEyPh)
        (cond . g$11952$1bEyPh)
        (let* . g$11951$1bEyPh)
        (let . g$11950$1bEyPh)
        (identifier-syntax . g$11949$1bEyPh)
        (with-syntax . g$11948$1bEyPh)
        (quasisyntax . g$11947$1bEyPh)
        (quasiquote . g$11946$1bEyPh)
        (syntax-rules . g$11945$1bEyPh)
        (let-values . g$11941$1bEyPh)
        (let*-values . g$11940$1bEyPh)
        (record-constructor-descriptor . g$11939$1bEyPh)
        (record-type-descriptor . g$11938$1bEyPh)
        (case . g$11936$1bEyPh)
        (unless . g$11934$1bEyPh)
        (when . g$11933$1bEyPh)
        (if . g$11932$1bEyPh)
        (letrec* . g$11931$1bEyPh)
        (letrec . g$11930$1bEyPh)
        (case-lambda . g$11928$1bEyPh)
        (lambda . g$11927$1bEyPh)
        (syntax . g$11926$1bEyPh)
        (syntax-case . g$11925$1bEyPh)
        (quote . g$11924$1bEyPh)
        (letrec-syntax . g$11922$1bEyPh)
        (let-syntax . g$11921$1bEyPh)
        (set! . g$11920$1bEyPh)
        (import . g$11919$1bEyPh)
        (library . g$11918$1bEyPh)
        (begin . g$11917$1bEyPh)
        (define-syntax . g$11915$1bEyPh)
        (define . g$11914$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12543$1bEyPh
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8947$1bEyPh)
        (scheme-report-environment . g$8922$1bEyPh)
        (quotient . g$6871$1bEyPh)
        (null-environment . g$8921$1bEyPh)
        (remainder . g$6872$1bEyPh)
        (modulo . g$6873$1bEyPh)
        (inexact->exact . g$12309$1bEyPh)
        (force . g$6875$1bEyPh)
        (exact->inexact . g$12308$1bEyPh)
        (delay . g$11957$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12544$1bEyPh
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11953$1bEyPh)
        (unless . g$11934$1bEyPh)
        (when . g$11933$1bEyPh)
        (case-lambda . g$11928$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12545$1bEyPh
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8924$1bEyPh) (environment . g$8920$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12546$1bEyPh
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12304$1bEyPh) (set-car! . g$12303$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12547$1bEyPh
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12306$1bEyPh) (string-set! . g$12305$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12548$1bEyPh
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12307$1bEyPh) (command-line . g$11878$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12549$1bEyPh
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8546$1bEyPh)
        (identifier? . g$8942$1bEyPh)
        (generate-temporaries . g$8931$1bEyPh)
        (free-identifier=? . g$8932$1bEyPh)
        (syntax->datum . g$8944$1bEyPh)
        (datum->syntax . g$8943$1bEyPh)
        (bound-identifier=? . g$8933$1bEyPh)
        (syntax-violation . g$8941$1bEyPh)
        (unsyntax-splicing . g$11967$1bEyPh)
        (unsyntax . g$11966$1bEyPh)
        (_ . g$11963$1bEyPh)
        (... . g$11960$1bEyPh)
        (with-syntax . g$11948$1bEyPh)
        (quasisyntax . g$11947$1bEyPh)
        (syntax . g$11926$1bEyPh)
        (syntax-case . g$11925$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12550$1bEyPh
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6378$1bEyPh)
        (file-exists? . g$6377$1bEyPh)
        (make-i/o-write-error . g$7319$1bEyPh)
        (make-i/o-read-error . g$7305$1bEyPh)
        (make-i/o-port-error . g$7424$1bEyPh)
        (make-i/o-invalid-position-error . g$7334$1bEyPh)
        (make-i/o-filename-error . g$7351$1bEyPh)
        (make-i/o-file-protection-error . g$7367$1bEyPh)
        (make-i/o-file-is-read-only-error . g$7381$1bEyPh)
        (make-i/o-file-does-not-exist-error . g$7409$1bEyPh)
        (make-i/o-file-already-exists-error . g$7395$1bEyPh)
        (make-i/o-error . g$7291$1bEyPh)
        (i/o-write-error? . g$7320$1bEyPh)
        (i/o-read-error? . g$7306$1bEyPh)
        (i/o-port-error? . g$7426$1bEyPh)
        (i/o-invalid-position-error? . g$7336$1bEyPh)
        (i/o-error-position . g$7337$1bEyPh)
        (i/o-filename-error? . g$7353$1bEyPh)
        (i/o-file-protection-error? . g$7368$1bEyPh)
        (i/o-file-is-read-only-error? . g$7382$1bEyPh)
        (i/o-file-does-not-exist-error? . g$7410$1bEyPh)
        (i/o-file-already-exists-error? . g$7396$1bEyPh)
        (i/o-error? . g$7292$1bEyPh)
        (i/o-error-port . g$7427$1bEyPh)
        (i/o-error-filename . g$7354$1bEyPh)
        (&i/o-port . g$12014$1bEyPh)
        (&i/o-file-does-not-exist . g$12013$1bEyPh)
        (&i/o-file-already-exists . g$12012$1bEyPh)
        (&i/o-file-is-read-only . g$12011$1bEyPh)
        (&i/o-file-protection . g$12010$1bEyPh)
        (&i/o-filename . g$12009$1bEyPh)
        (&i/o-invalid-position . g$12008$1bEyPh)
        (&i/o-write . g$12007$1bEyPh)
        (&i/o-read . g$12006$1bEyPh)
        (&i/o . g$12005$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12551$1bEyPh
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12402$1bEyPh)
        (vector-sort . g$12401$1bEyPh)
        (list-sort . g$6891$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12552$1bEyPh
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12166$1bEyPh)
        (vector? . g$12165$1bEyPh)
        (vector-set! . g$12164$1bEyPh)
        (vector-ref . g$12163$1bEyPh)
        (vector-map . g$12162$1bEyPh)
        (vector-length . g$12161$1bEyPh)
        (vector-for-each . g$12160$1bEyPh)
        (vector-fill! . g$12159$1bEyPh)
        (vector->list . g$12158$1bEyPh)
        (vector . g$12157$1bEyPh)
        (values . g$12156$1bEyPh)
        (truncate . g$12155$1bEyPh)
        (tan . g$12154$1bEyPh)
        (symbol? . g$12153$1bEyPh)
        (symbol=? . g$5843$1bEyPh)
        (symbol->string . g$12152$1bEyPh)
        (substring . g$12151$1bEyPh)
        (string? . g$12150$1bEyPh)
        (string>? . g$5840$1bEyPh)
        (string>=? . g$5842$1bEyPh)
        (string=? . g$5838$1bEyPh)
        (string<? . g$5839$1bEyPh)
        (string<=? . g$5841$1bEyPh)
        (string-ref . g$12149$1bEyPh)
        (string-length . g$12148$1bEyPh)
        (string-for-each . g$12147$1bEyPh)
        (string-copy . g$12146$1bEyPh)
        (string-append . g$12145$1bEyPh)
        (string->symbol . g$12144$1bEyPh)
        (string->number . g$12143$1bEyPh)
        (string->list . g$12142$1bEyPh)
        (string . g$12141$1bEyPh)
        (sqrt . g$12140$1bEyPh)
        (sin . g$12139$1bEyPh)
        (round . g$12138$1bEyPh)
        (reverse . g$12137$1bEyPh)
        (real? . g$12136$1bEyPh)
        (real-valued? . g$12135$1bEyPh)
        (real-part . g$12134$1bEyPh)
        (rationalize . g$5896$1bEyPh)
        (rational? . g$12133$1bEyPh)
        (rational-valued? . g$12132$1bEyPh)
        (procedure? . g$12131$1bEyPh)
        (positive? . g$12130$1bEyPh)
        (pair? . g$12129$1bEyPh)
        (odd? . g$12128$1bEyPh)
        (numerator . g$12127$1bEyPh)
        (number? . g$12126$1bEyPh)
        (number->string . g$12125$1bEyPh)
        (null? . g$12124$1bEyPh)
        (not . g$12123$1bEyPh)
        (negative? . g$12122$1bEyPh)
        (nan? . g$12121$1bEyPh)
        (min . g$12120$1bEyPh)
        (max . g$12119$1bEyPh)
        (map . g$12118$1bEyPh)
        (make-vector . g$12117$1bEyPh)
        (make-string . g$12116$1bEyPh)
        (make-rectangular . g$12115$1bEyPh)
        (make-polar . g$12114$1bEyPh)
        (magnitude . g$12113$1bEyPh)
        (log . g$12112$1bEyPh)
        (list? . g$12111$1bEyPh)
        (list-tail . g$12110$1bEyPh)
        (list-ref . g$12109$1bEyPh)
        (list->vector . g$12108$1bEyPh)
        (list->string . g$12107$1bEyPh)
        (list . g$12106$1bEyPh)
        (length . g$12105$1bEyPh)
        (lcm . g$12104$1bEyPh)
        (integer? . g$12103$1bEyPh)
        (integer-valued? . g$12102$1bEyPh)
        (integer->char . g$12101$1bEyPh)
        (infinite? . g$12100$1bEyPh)
        (inexact? . g$12099$1bEyPh)
        (inexact . g$12098$1bEyPh)
        (imag-part . g$12097$1bEyPh)
        (gcd . g$12096$1bEyPh)
        (for-each . g$12095$1bEyPh)
        (floor . g$12094$1bEyPh)
        (finite? . g$12093$1bEyPh)
        (expt . g$12092$1bEyPh)
        (exp . g$12091$1bEyPh)
        (exact? . g$12090$1bEyPh)
        (exact-integer-sqrt . g$12089$1bEyPh)
        (exact . g$12088$1bEyPh)
        (even? . g$12087$1bEyPh)
        (error . g$12086$1bEyPh)
        (eqv? . g$12085$1bEyPh)
        (equal? . g$12084$1bEyPh)
        (eq? . g$12083$1bEyPh)
        (dynamic-wind . g$12082$1bEyPh)
        (div0-and-mod0 . g$12081$1bEyPh)
        (mod0 . g$12080$1bEyPh)
        (div0 . g$12079$1bEyPh)
        (div-and-mod . g$12078$1bEyPh)
        (mod . g$12077$1bEyPh)
        (div . g$12076$1bEyPh)
        (denominator . g$12075$1bEyPh)
        (cos . g$12074$1bEyPh)
        (cons . g$12073$1bEyPh)
        (complex? . g$12072$1bEyPh)
        (char? . g$12071$1bEyPh)
        (char>? . g$5893$1bEyPh)
        (char>=? . g$5895$1bEyPh)
        (char=? . g$5891$1bEyPh)
        (char<? . g$5892$1bEyPh)
        (char<=? . g$5894$1bEyPh)
        (char->integer . g$12070$1bEyPh)
        (ceiling . g$12069$1bEyPh)
        (call-with-values . g$12068$1bEyPh)
        (call/cc . g$12067$1bEyPh)
        (call-with-current-continuation . g$12066$1bEyPh)
        (cddddr . g$5791$1bEyPh)
        (cdddar . g$5790$1bEyPh)
        (cddadr . g$5789$1bEyPh)
        (cddaar . g$5788$1bEyPh)
        (cdaddr . g$5787$1bEyPh)
        (cdadar . g$5786$1bEyPh)
        (cdaadr . g$5785$1bEyPh)
        (cdaaar . g$5784$1bEyPh)
        (cadddr . g$5783$1bEyPh)
        (caddar . g$5782$1bEyPh)
        (cadadr . g$5781$1bEyPh)
        (cadaar . g$5780$1bEyPh)
        (caaddr . g$5779$1bEyPh)
        (caadar . g$5778$1bEyPh)
        (caaadr . g$5777$1bEyPh)
        (caaaar . g$5776$1bEyPh)
        (cdddr . g$5775$1bEyPh)
        (cddar . g$5774$1bEyPh)
        (cdadr . g$5773$1bEyPh)
        (cdaar . g$5772$1bEyPh)
        (caddr . g$5771$1bEyPh)
        (cadar . g$5770$1bEyPh)
        (caadr . g$5769$1bEyPh)
        (caaar . g$5768$1bEyPh)
        (cddr . g$5767$1bEyPh)
        (cdar . g$5766$1bEyPh)
        (cadr . g$5765$1bEyPh)
        (caar . g$5764$1bEyPh)
        (cdr . g$12065$1bEyPh)
        (car . g$12064$1bEyPh)
        (boolean? . g$12063$1bEyPh)
        (boolean=? . g$5844$1bEyPh)
        (atan . g$12062$1bEyPh)
        (assertion-violation . g$12061$1bEyPh)
        (asin . g$12060$1bEyPh)
        (apply . g$12059$1bEyPh)
        (append . g$12058$1bEyPh)
        (angle . g$12057$1bEyPh)
        (acos . g$12056$1bEyPh)
        (abs . g$12055$1bEyPh)
        (/ . g$12054$1bEyPh)
        (* . g$12053$1bEyPh)
        (- . g$12052$1bEyPh)
        (+ . g$12051$1bEyPh)
        (>= . g$12050$1bEyPh)
        (> . g$12049$1bEyPh)
        (= . g$12048$1bEyPh)
        (<= . g$12047$1bEyPh)
        (< . g$12046$1bEyPh)
        (unquote-splicing . g$11965$1bEyPh)
        (unquote . g$11964$1bEyPh)
        (_ . g$11963$1bEyPh)
        (else . g$11962$1bEyPh)
        (=> . g$11961$1bEyPh)
        (... . g$11960$1bEyPh)
        (assert . g$11959$1bEyPh)
        (or . g$11955$1bEyPh)
        (and . g$11954$1bEyPh)
        (cond . g$11952$1bEyPh)
        (let* . g$11951$1bEyPh)
        (let . g$11950$1bEyPh)
        (identifier-syntax . g$11949$1bEyPh)
        (quasiquote . g$11946$1bEyPh)
        (syntax-rules . g$11945$1bEyPh)
        (let-values . g$11941$1bEyPh)
        (let*-values . g$11940$1bEyPh)
        (case . g$11936$1bEyPh)
        (if . g$11932$1bEyPh)
        (letrec* . g$11931$1bEyPh)
        (letrec . g$11930$1bEyPh)
        (lambda . g$11927$1bEyPh)
        (quote . g$11924$1bEyPh)
        (letrec-syntax . g$11922$1bEyPh)
        (let-syntax . g$11921$1bEyPh)
        (set! . g$11920$1bEyPh)
        (begin . g$11917$1bEyPh)
        (define-syntax . g$11915$1bEyPh)
        (define . g$11914$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12553$1bEyPh
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$6458$1bEyPh)
        (remv . g$6459$1bEyPh)
        (remp . g$6444$1bEyPh)
        (remq . g$6460$1bEyPh)
        (partition . g$6443$1bEyPh)
        (memv . g$12302$1bEyPh)
        (memq . g$12301$1bEyPh)
        (memp . g$6450$1bEyPh)
        (member . g$6449$1bEyPh)
        (exists . g$6454$1bEyPh)
        (for-all . g$6453$1bEyPh)
        (fold-right . g$6457$1bEyPh)
        (fold-left . g$6456$1bEyPh)
        (find . g$6442$1bEyPh)
        (filter . g$6445$1bEyPh)
        (cons* . g$6455$1bEyPh)
        (assv . g$6446$1bEyPh)
        (assq . g$12300$1bEyPh)
        (assp . g$6448$1bEyPh)
        (assoc . g$6447$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12554$1bEyPh
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7487$1bEyPh)
        (call-with-input-file . g$7486$1bEyPh)
        (write-char . g$12388$1bEyPh)
        (write . g$12387$1bEyPh)
        (with-output-to-file . g$7485$1bEyPh)
        (with-input-from-file . g$7484$1bEyPh)
        (read-char . g$12386$1bEyPh)
        (read . g$12385$1bEyPh)
        (peek-char . g$12384$1bEyPh)
        (open-output-file . g$12383$1bEyPh)
        (open-input-file . g$12382$1bEyPh)
        (newline . g$12381$1bEyPh)
        (display . g$12380$1bEyPh)
        (close-output-port . g$12379$1bEyPh)
        (close-input-port . g$12378$1bEyPh)
        (eof-object? . g$12377$1bEyPh)
        (eof-object . g$12376$1bEyPh)
        (current-error-port . g$12375$1bEyPh)
        (current-output-port . g$12374$1bEyPh)
        (current-input-port . g$12373$1bEyPh)
        (output-port? . g$12372$1bEyPh)
        (input-port? . g$12371$1bEyPh)
        (make-i/o-write-error . g$7319$1bEyPh)
        (make-i/o-read-error . g$7305$1bEyPh)
        (make-i/o-port-error . g$7424$1bEyPh)
        (make-i/o-invalid-position-error . g$7334$1bEyPh)
        (make-i/o-filename-error . g$7351$1bEyPh)
        (make-i/o-file-protection-error . g$7367$1bEyPh)
        (make-i/o-file-is-read-only-error . g$7381$1bEyPh)
        (make-i/o-file-does-not-exist-error . g$7409$1bEyPh)
        (make-i/o-file-already-exists-error . g$7395$1bEyPh)
        (make-i/o-error . g$7291$1bEyPh)
        (i/o-write-error? . g$7320$1bEyPh)
        (i/o-read-error? . g$7306$1bEyPh)
        (i/o-port-error? . g$7426$1bEyPh)
        (i/o-invalid-position-error? . g$7336$1bEyPh)
        (i/o-error-position . g$7337$1bEyPh)
        (i/o-filename-error? . g$7353$1bEyPh)
        (i/o-file-protection-error? . g$7368$1bEyPh)
        (i/o-file-is-read-only-error? . g$7382$1bEyPh)
        (i/o-file-does-not-exist-error? . g$7410$1bEyPh)
        (i/o-file-already-exists-error? . g$7396$1bEyPh)
        (i/o-error? . g$7292$1bEyPh)
        (i/o-error-port . g$7427$1bEyPh)
        (i/o-error-filename . g$7354$1bEyPh)
        (&i/o-port . g$12014$1bEyPh)
        (&i/o-file-does-not-exist . g$12013$1bEyPh)
        (&i/o-file-already-exists . g$12012$1bEyPh)
        (&i/o-file-is-read-only . g$12011$1bEyPh)
        (&i/o-file-protection . g$12010$1bEyPh)
        (&i/o-filename . g$12009$1bEyPh)
        (&i/o-invalid-position . g$12008$1bEyPh)
        (&i/o-write . g$12007$1bEyPh)
        (&i/o-read . g$12006$1bEyPh)
        (&i/o . g$12005$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12555$1bEyPh
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12331$1bEyPh)
        (utf32->string . g$12291$1bEyPh)
        (utf16->string . g$12290$1bEyPh)
        (utf8->string . g$12289$1bEyPh)
        (uint-list->bytevector . g$12288$1bEyPh)
        (u8-list->bytevector . g$12287$1bEyPh)
        (string->utf8 . g$12286$1bEyPh)
        (string->utf32 . g$12285$1bEyPh)
        (string->utf16 . g$12284$1bEyPh)
        (sint-list->bytevector . g$12283$1bEyPh)
        (native-endianness . g$6534$1bEyPh)
        (bytevector? . g$12282$1bEyPh)
        (bytevector=? . g$12281$1bEyPh)
        (bytevector-uint-set! . g$12280$1bEyPh)
        (bytevector-uint-ref . g$12279$1bEyPh)
        (bytevector-u8-set! . g$12278$1bEyPh)
        (bytevector-u8-ref . g$12277$1bEyPh)
        (bytevector-u64-set! . g$6555$1bEyPh)
        (bytevector-u64-ref . g$6551$1bEyPh)
        (bytevector-u64-native-set! . g$6557$1bEyPh)
        (bytevector-u64-native-ref . g$6553$1bEyPh)
        (bytevector-u32-set! . g$6547$1bEyPh)
        (bytevector-u32-ref . g$6543$1bEyPh)
        (bytevector-u32-native-set! . g$6549$1bEyPh)
        (bytevector-u32-native-ref . g$6545$1bEyPh)
        (bytevector-u16-set! . g$6539$1bEyPh)
        (bytevector-u16-ref . g$6535$1bEyPh)
        (bytevector-u16-native-set! . g$6541$1bEyPh)
        (bytevector-u16-native-ref . g$6537$1bEyPh)
        (bytevector-sint-set! . g$12276$1bEyPh)
        (bytevector-sint-ref . g$12275$1bEyPh)
        (bytevector-s8-set! . g$12274$1bEyPh)
        (bytevector-s8-ref . g$12273$1bEyPh)
        (bytevector-s64-set! . g$6556$1bEyPh)
        (bytevector-s64-ref . g$6552$1bEyPh)
        (bytevector-s64-native-set! . g$6558$1bEyPh)
        (bytevector-s64-native-ref . g$6554$1bEyPh)
        (bytevector-s32-set! . g$6548$1bEyPh)
        (bytevector-s32-ref . g$6544$1bEyPh)
        (bytevector-s32-native-set! . g$6550$1bEyPh)
        (bytevector-s32-native-ref . g$6546$1bEyPh)
        (bytevector-s16-set! . g$6540$1bEyPh)
        (bytevector-s16-ref . g$6536$1bEyPh)
        (bytevector-s16-native-set! . g$6542$1bEyPh)
        (bytevector-s16-native-ref . g$6538$1bEyPh)
        (bytevector-length . g$12272$1bEyPh)
        (bytevector-ieee-single-set! . g$12271$1bEyPh)
        (bytevector-ieee-single-ref . g$12270$1bEyPh)
        (bytevector-ieee-single-native-set! . g$6561$1bEyPh)
        (bytevector-ieee-single-native-ref . g$6559$1bEyPh)
        (bytevector-ieee-double-set! . g$12269$1bEyPh)
        (bytevector-ieee-double-ref . g$12268$1bEyPh)
        (bytevector-ieee-double-native-set! . g$6562$1bEyPh)
        (bytevector-ieee-double-native-ref . g$6560$1bEyPh)
        (bytevector-fill! . g$12267$1bEyPh)
        (bytevector-copy! . g$12266$1bEyPh)
        (bytevector-copy . g$12265$1bEyPh)
        (bytevector->uint-list . g$12264$1bEyPh)
        (bytevector->u8-list . g$12263$1bEyPh)
        (bytevector->sint-list . g$12262$1bEyPh)
        (endianness . g$11958$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12556$1bEyPh
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12438$1bEyPh)
        (string-titlecase . g$12437$1bEyPh)
        (string-normalize-nfkd . g$12436$1bEyPh)
        (string-normalize-nfkc . g$12435$1bEyPh)
        (string-normalize-nfd . g$12434$1bEyPh)
        (string-normalize-nfc . g$12433$1bEyPh)
        (string-foldcase . g$12432$1bEyPh)
        (string-downcase . g$12431$1bEyPh)
        (string-ci>? . g$7017$1bEyPh)
        (string-ci>=? . g$7019$1bEyPh)
        (string-ci=? . g$7015$1bEyPh)
        (string-ci<? . g$7016$1bEyPh)
        (string-ci<=? . g$7018$1bEyPh)
        (char-whitespace? . g$12430$1bEyPh)
        (char-upper-case? . g$12429$1bEyPh)
        (char-title-case? . g$12428$1bEyPh)
        (char-numeric? . g$12427$1bEyPh)
        (char-lower-case? . g$12426$1bEyPh)
        (char-general-category . g$12425$1bEyPh)
        (char-upcase . g$12424$1bEyPh)
        (char-titlecase . g$12423$1bEyPh)
        (char-foldcase . g$12422$1bEyPh)
        (char-downcase . g$12421$1bEyPh)
        (char-ci>? . g$7068$1bEyPh)
        (char-ci>=? . g$7070$1bEyPh)
        (char-ci=? . g$7066$1bEyPh)
        (char-ci<? . g$7067$1bEyPh)
        (char-ci<=? . g$7069$1bEyPh)
        (char-alphabetic? . g$12420$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12557$1bEyPh
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12299$1bEyPh)
        (raise-continuable . g$12298$1bEyPh)
        (raise . g$12297$1bEyPh)
        (guard . g$11973$1bEyPh)
        (else . g$11962$1bEyPh)
        (=> . g$11961$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12558$1bEyPh
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7160$1bEyPh)
        (bitwise-reverse-bit-field . g$12177$1bEyPh)
        (bitwise-length . g$12176$1bEyPh)
        (bitwise-if . g$7154$1bEyPh)
        (bitwise-first-bit-set . g$12175$1bEyPh)
        (bitwise-copy-bit-field . g$7157$1bEyPh)
        (bitwise-copy-bit . g$7155$1bEyPh)
        (bitwise-bit-set? . g$12174$1bEyPh)
        (bitwise-bit-field . g$12173$1bEyPh)
        (bitwise-bit-count . g$12172$1bEyPh)
        (bitwise-xor . g$12171$1bEyPh)
        (bitwise-ior . g$12170$1bEyPh)
        (bitwise-and . g$12169$1bEyPh)
        (bitwise-not . g$12168$1bEyPh)
        (bitwise-arithmetic-shift-right . g$7159$1bEyPh)
        (bitwise-arithmetic-shift-left . g$7158$1bEyPh)
        (bitwise-arithmetic-shift . g$12167$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12559$1bEyPh
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12215$1bEyPh)
        (fxxor . g$12214$1bEyPh)
        (fxrotate-bit-field . g$7208$1bEyPh)
        (fxreverse-bit-field . g$12213$1bEyPh)
        (fxpositive? . g$12212$1bEyPh)
        (fxodd? . g$12211$1bEyPh)
        (fxnot . g$12210$1bEyPh)
        (fxnegative? . g$12209$1bEyPh)
        (fxmod0 . g$12208$1bEyPh)
        (fxmod . g$12207$1bEyPh)
        (fxmin . g$12206$1bEyPh)
        (fxmax . g$12205$1bEyPh)
        (fxlength . g$12204$1bEyPh)
        (fxior . g$12203$1bEyPh)
        (fxif . g$7202$1bEyPh)
        (fxfirst-bit-set . g$12202$1bEyPh)
        (fxeven? . g$12201$1bEyPh)
        (fxdiv0-and-mod0 . g$12200$1bEyPh)
        (fxdiv0 . g$12199$1bEyPh)
        (fxdiv-and-mod . g$12198$1bEyPh)
        (fxdiv . g$12197$1bEyPh)
        (fxcopy-bit-field . g$7205$1bEyPh)
        (fxcopy-bit . g$7203$1bEyPh)
        (fxbit-set? . g$12196$1bEyPh)
        (fxbit-field . g$7204$1bEyPh)
        (fxbit-count . g$12195$1bEyPh)
        (fxarithmetic-shift-right . g$7207$1bEyPh)
        (fxarithmetic-shift-left . g$7206$1bEyPh)
        (fxarithmetic-shift . g$12194$1bEyPh)
        (fxand . g$12193$1bEyPh)
        (fx>? . g$12192$1bEyPh)
        (fx>=? . g$12191$1bEyPh)
        (fx=? . g$12190$1bEyPh)
        (fx<? . g$12189$1bEyPh)
        (fx<=? . g$12188$1bEyPh)
        (fx-/carry . g$12187$1bEyPh)
        (fx- . g$12186$1bEyPh)
        (fx+/carry . g$12185$1bEyPh)
        (fx+ . g$12184$1bEyPh)
        (fx*/carry . g$12183$1bEyPh)
        (fx* . g$12182$1bEyPh)
        (greatest-fixnum . g$12181$1bEyPh)
        (least-fixnum . g$12180$1bEyPh)
        (fixnum-width . g$12179$1bEyPh)
        (fixnum? . g$12178$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12560$1bEyPh
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7277$1bEyPh)
        (no-infinities-violation? . g$7263$1bEyPh)
        (make-no-nans-violation . g$7276$1bEyPh)
        (make-no-infinities-violation . g$7262$1bEyPh)
        (real->flonum . g$12261$1bEyPh)
        (flzero? . g$12260$1bEyPh)
        (fltruncate . g$12259$1bEyPh)
        (fltan . g$12258$1bEyPh)
        (flsqrt . g$12257$1bEyPh)
        (flsin . g$12256$1bEyPh)
        (flround . g$12255$1bEyPh)
        (flpositive? . g$12254$1bEyPh)
        (flonum? . g$12253$1bEyPh)
        (flodd? . g$12252$1bEyPh)
        (flnumerator . g$12251$1bEyPh)
        (flnegative? . g$12250$1bEyPh)
        (flnan? . g$12249$1bEyPh)
        (flmod0 . g$12248$1bEyPh)
        (flmod . g$12247$1bEyPh)
        (flmin . g$12246$1bEyPh)
        (flmax . g$12245$1bEyPh)
        (fllog . g$12244$1bEyPh)
        (flinteger? . g$12243$1bEyPh)
        (flinfinite? . g$12242$1bEyPh)
        (flfloor . g$12241$1bEyPh)
        (flfinite? . g$12240$1bEyPh)
        (flexpt . g$12239$1bEyPh)
        (flexp . g$12238$1bEyPh)
        (fleven? . g$12237$1bEyPh)
        (fldiv0-and-mod0 . g$12236$1bEyPh)
        (fldiv0 . g$12235$1bEyPh)
        (fldiv-and-mod . g$12234$1bEyPh)
        (fldiv . g$12233$1bEyPh)
        (fldenominator . g$12232$1bEyPh)
        (flcos . g$12231$1bEyPh)
        (flceiling . g$12230$1bEyPh)
        (flatan . g$12229$1bEyPh)
        (flasin . g$12228$1bEyPh)
        (flacos . g$12227$1bEyPh)
        (flabs . g$12226$1bEyPh)
        (fl>? . g$12225$1bEyPh)
        (fl>=? . g$12224$1bEyPh)
        (fl=? . g$12223$1bEyPh)
        (fl<? . g$12222$1bEyPh)
        (fl<=? . g$12221$1bEyPh)
        (fl/ . g$12220$1bEyPh)
        (fl- . g$12219$1bEyPh)
        (fl+ . g$12218$1bEyPh)
        (fl* . g$12217$1bEyPh)
        (fixnum->flonum . g$12216$1bEyPh)
        (&no-nans . g$12018$1bEyPh)
        (&no-infinities . g$12017$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12561$1bEyPh
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12400$1bEyPh)
        (string-ci-hash . g$12399$1bEyPh)
        (string-hash . g$12398$1bEyPh)
        (equal-hash . g$12397$1bEyPh)
        (hashtable-equivalence-function . g$12396$1bEyPh)
        (make-hashtable . g$12395$1bEyPh)
        (hashtable-hash-function . g$12394$1bEyPh)
        (make-eqv-hashtable . g$6345$1bEyPh)
        (make-eq-hashtable . g$6344$1bEyPh)
        (hashtable? . g$12393$1bEyPh)
        (hashtable-update! . g$6351$1bEyPh)
        (hashtable-size . g$6346$1bEyPh)
        (hashtable-set! . g$6348$1bEyPh)
        (hashtable-ref . g$6347$1bEyPh)
        (hashtable-mutable? . g$12392$1bEyPh)
        (hashtable-keys . g$12391$1bEyPh)
        (hashtable-entries . g$12390$1bEyPh)
        (hashtable-delete! . g$6349$1bEyPh)
        (hashtable-copy . g$12389$1bEyPh)
        (hashtable-contains? . g$6350$1bEyPh)
        (hashtable-clear! . g$6352$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12562$1bEyPh
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12377$1bEyPh)
        (eof-object . g$12376$1bEyPh)
        (current-error-port . g$12375$1bEyPh)
        (current-output-port . g$12374$1bEyPh)
        (current-input-port . g$12373$1bEyPh)
        (output-port? . g$12372$1bEyPh)
        (input-port? . g$12371$1bEyPh)
        (utf-8-codec . g$12370$1bEyPh)
        (utf-16-codec . g$12369$1bEyPh)
        (transcoder-error-handling-mode . g$12368$1bEyPh)
        (transcoder-eol-style . g$12367$1bEyPh)
        (transcoder-codec . g$12366$1bEyPh)
        (transcoded-port . g$12365$1bEyPh)
        (textual-port? . g$12364$1bEyPh)
        (string->bytevector . g$12363$1bEyPh)
        (standard-output-port . g$12362$1bEyPh)
        (standard-input-port . g$12361$1bEyPh)
        (standard-error-port . g$12360$1bEyPh)
        (set-port-position! . g$12359$1bEyPh)
        (put-u8 . g$12358$1bEyPh)
        (put-string . g$12357$1bEyPh)
        (put-datum . g$12356$1bEyPh)
        (put-char . g$12355$1bEyPh)
        (put-bytevector . g$12354$1bEyPh)
        (port? . g$7463$1bEyPh)
        (port-transcoder . g$12353$1bEyPh)
        (port-position . g$12352$1bEyPh)
        (port-has-set-port-position!? . g$12351$1bEyPh)
        (port-has-port-position? . g$12350$1bEyPh)
        (port-eof? . g$12349$1bEyPh)
        (output-port-buffer-mode . g$12348$1bEyPh)
        (open-string-output-port . g$7462$1bEyPh)
        (open-string-input-port . g$12347$1bEyPh)
        (open-file-output-port . g$12346$1bEyPh)
        (open-file-input/output-port . g$12345$1bEyPh)
        (open-file-input-port . g$12344$1bEyPh)
        (open-bytevector-output-port . g$12343$1bEyPh)
        (open-bytevector-input-port . g$12342$1bEyPh)
        (native-transcoder . g$12341$1bEyPh)
        (native-eol-style . g$12340$1bEyPh)
        (make-transcoder . g$12339$1bEyPh)
        (latin-1-codec . g$12338$1bEyPh)
        (make-i/o-write-error . g$7319$1bEyPh)
        (make-i/o-read-error . g$7305$1bEyPh)
        (make-i/o-port-error . g$7424$1bEyPh)
        (make-i/o-invalid-position-error . g$7334$1bEyPh)
        (make-i/o-filename-error . g$7351$1bEyPh)
        (make-i/o-file-protection-error . g$7367$1bEyPh)
        (make-i/o-file-is-read-only-error . g$7381$1bEyPh)
        (make-i/o-file-does-not-exist-error . g$7409$1bEyPh)
        (make-i/o-file-already-exists-error . g$7395$1bEyPh)
        (make-i/o-error . g$7291$1bEyPh)
        (make-i/o-encoding-error . g$7455$1bEyPh)
        (make-i/o-decoding-error . g$7440$1bEyPh)
        (make-custom-textual-output-port . g$12337$1bEyPh)
        (make-custom-textual-input/output-port . g$12336$1bEyPh)
        (make-custom-textual-input-port . g$12335$1bEyPh)
        (make-custom-binary-output-port . g$12334$1bEyPh)
        (make-custom-binary-input/output-port . g$12333$1bEyPh)
        (make-custom-binary-input-port . g$12332$1bEyPh)
        (lookahead-u8 . g$12330$1bEyPh)
        (lookahead-char . g$12329$1bEyPh)
        (i/o-write-error? . g$7320$1bEyPh)
        (i/o-read-error? . g$7306$1bEyPh)
        (i/o-port-error? . g$7426$1bEyPh)
        (i/o-invalid-position-error? . g$7336$1bEyPh)
        (i/o-error-position . g$7337$1bEyPh)
        (i/o-filename-error? . g$7353$1bEyPh)
        (i/o-file-protection-error? . g$7368$1bEyPh)
        (i/o-file-is-read-only-error? . g$7382$1bEyPh)
        (i/o-file-does-not-exist-error? . g$7410$1bEyPh)
        (i/o-file-already-exists-error? . g$7396$1bEyPh)
        (i/o-error? . g$7292$1bEyPh)
        (i/o-error-port . g$7427$1bEyPh)
        (i/o-error-filename . g$7354$1bEyPh)
        (i/o-encoding-error? . g$7457$1bEyPh)
        (i/o-encoding-error-char . g$7458$1bEyPh)
        (i/o-decoding-error? . g$7441$1bEyPh)
        (get-u8 . g$12328$1bEyPh)
        (get-string-n! . g$12327$1bEyPh)
        (get-string-n . g$12326$1bEyPh)
        (get-string-all . g$12325$1bEyPh)
        (get-line . g$12324$1bEyPh)
        (get-datum . g$12323$1bEyPh)
        (get-char . g$12322$1bEyPh)
        (get-bytevector-some . g$12321$1bEyPh)
        (get-bytevector-n! . g$12320$1bEyPh)
        (get-bytevector-n . g$12319$1bEyPh)
        (get-bytevector-all . g$12318$1bEyPh)
        (flush-output-port . g$12317$1bEyPh)
        (close-port . g$12316$1bEyPh)
        (call-with-string-output-port . g$12315$1bEyPh)
        (call-with-port . g$12314$1bEyPh)
        (call-with-bytevector-output-port . g$12313$1bEyPh)
        (bytevector->string . g$12312$1bEyPh)
        (buffer-mode? . g$12311$1bEyPh)
        (binary-port? . g$12310$1bEyPh)
        (&i/o-encoding . g$12016$1bEyPh)
        (&i/o-decoding . g$12015$1bEyPh)
        (&i/o-port . g$12014$1bEyPh)
        (&i/o-file-does-not-exist . g$12013$1bEyPh)
        (&i/o-file-already-exists . g$12012$1bEyPh)
        (&i/o-file-is-read-only . g$12011$1bEyPh)
        (&i/o-file-protection . g$12010$1bEyPh)
        (&i/o-filename . g$12009$1bEyPh)
        (&i/o-invalid-position . g$12008$1bEyPh)
        (&i/o-write . g$12007$1bEyPh)
        (&i/o-read . g$12006$1bEyPh)
        (&i/o . g$12005$1bEyPh)
        (error-handling-mode . g$11977$1bEyPh)
        (file-options . g$11976$1bEyPh)
        (buffer-mode . g$11975$1bEyPh)
        (eol-style . g$11974$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12563$1bEyPh
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7544$1bEyPh)
        (enum-set=? . g$7551$1bEyPh)
        (enum-set-universe . g$7545$1bEyPh)
        (enum-set-union . g$7552$1bEyPh)
        (enum-set-subset? . g$7550$1bEyPh)
        (enum-set-projection . g$7556$1bEyPh)
        (enum-set-member? . g$7549$1bEyPh)
        (enum-set-intersection . g$7553$1bEyPh)
        (enum-set-indexer . g$7546$1bEyPh)
        (enum-set-difference . g$7554$1bEyPh)
        (enum-set-constructor . g$7547$1bEyPh)
        (enum-set-complement . g$7555$1bEyPh)
        (enum-set->list . g$7548$1bEyPh)
        (define-enumeration . g$11988$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12564$1bEyPh
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6782$1bEyPh)
        (warning? . g$6693$1bEyPh)
        (violation? . g$6735$1bEyPh)
        (undefined-violation? . g$6859$1bEyPh)
        (syntax-violation? . g$6843$1bEyPh)
        (syntax-violation-subform . g$6845$1bEyPh)
        (syntax-violation-form . g$6844$1bEyPh)
        (syntax-violation . g$8941$1bEyPh)
        (simple-conditions . g$12296$1bEyPh)
        (serious-condition? . g$6707$1bEyPh)
        (non-continuable-violation? . g$6797$1bEyPh)
        (message-condition? . g$6678$1bEyPh)
        (make-who-condition . g$6780$1bEyPh)
        (make-warning . g$6692$1bEyPh)
        (make-violation . g$6734$1bEyPh)
        (make-undefined-violation . g$6858$1bEyPh)
        (make-syntax-violation . g$6840$1bEyPh)
        (make-serious-condition . g$6706$1bEyPh)
        (make-non-continuable-violation . g$6796$1bEyPh)
        (make-message-condition . g$6676$1bEyPh)
        (make-lexical-violation . g$6824$1bEyPh)
        (make-irritants-condition . g$6763$1bEyPh)
        (make-implementation-restriction-violation . g$6810$1bEyPh)
        (make-error . g$6720$1bEyPh)
        (make-assertion-violation . g$6748$1bEyPh)
        (lexical-violation? . g$6825$1bEyPh)
        (irritants-condition? . g$6765$1bEyPh)
        (implementation-restriction-violation? . g$6811$1bEyPh)
        (error? . g$6721$1bEyPh)
        (condition-who . g$6783$1bEyPh)
        (condition-predicate . g$12295$1bEyPh)
        (condition-message . g$6679$1bEyPh)
        (condition-irritants . g$6766$1bEyPh)
        (condition-accessor . g$12294$1bEyPh)
        (condition . g$12293$1bEyPh)
        (assertion-violation? . g$6749$1bEyPh)
        (condition? . g$12292$1bEyPh)
        (&non-continuable . g$12004$1bEyPh)
        (&undefined . g$12003$1bEyPh)
        (&syntax . g$12002$1bEyPh)
        (&lexical . g$12001$1bEyPh)
        (&implementation-restriction . g$12000$1bEyPh)
        (&who . g$11998$1bEyPh)
        (&irritants . g$11997$1bEyPh)
        (&assertion . g$11996$1bEyPh)
        (&violation . g$11995$1bEyPh)
        (&error . g$11994$1bEyPh)
        (&serious . g$11993$1bEyPh)
        (&warning . g$11992$1bEyPh)
        (&message . g$11991$1bEyPh)
        (&condition . g$11990$1bEyPh)
        (define-condition-type . g$11989$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12565$1bEyPh
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12412$1bEyPh)
        (record-type-uid . g$12411$1bEyPh)
        (record-type-sealed? . g$12410$1bEyPh)
        (record-type-parent . g$12409$1bEyPh)
        (record-type-opaque? . g$12408$1bEyPh)
        (record-type-name . g$12407$1bEyPh)
        (record-type-generative? . g$12406$1bEyPh)
        (record-type-field-names . g$12405$1bEyPh)
        (record-rtd . g$12404$1bEyPh)
        (record-field-mutable? . g$12403$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12566$1bEyPh
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12419$1bEyPh)
        (record-predicate . g$12418$1bEyPh)
        (record-mutator . g$12417$1bEyPh)
        (record-constructor . g$12416$1bEyPh)
        (record-accessor . g$12415$1bEyPh)
        (make-record-type-descriptor . g$12414$1bEyPh)
        (make-record-constructor-descriptor . g$12413$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12567$1bEyPh
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11987$1bEyPh)
        (parent-rtd . g$11986$1bEyPh)
        (nongenerative . g$11985$1bEyPh)
        (opaque . g$11984$1bEyPh)
        (sealed . g$11983$1bEyPh)
        (protocol . g$11982$1bEyPh)
        (parent . g$11981$1bEyPh)
        (immutable . g$11980$1bEyPh)
        (mutable . g$11979$1bEyPh)
        (fields . g$11978$1bEyPh)
        (record-constructor-descriptor . g$11939$1bEyPh)
        (record-type-descriptor . g$11938$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12568$1bEyPh
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8816$1bEyPh)
        (&no-nans-rcd . g$12532$1bEyPh)
        (&no-nans-rtd . g$12531$1bEyPh)
        (&no-infinities-rcd . g$12530$1bEyPh)
        (&no-infinities-rtd . g$12529$1bEyPh)
        (&i/o-encoding-rcd . g$12528$1bEyPh)
        (&i/o-encoding-rtd . g$12527$1bEyPh)
        (&i/o-decoding-rcd . g$12526$1bEyPh)
        (&i/o-decoding-rtd . g$12525$1bEyPh)
        (&i/o-port-rcd . g$12524$1bEyPh)
        (&i/o-port-rtd . g$12523$1bEyPh)
        (&i/o-file-does-not-exist-rcd . g$12522$1bEyPh)
        (&i/o-file-does-not-exist-rtd . g$12521$1bEyPh)
        (&i/o-file-already-exists-rcd . g$12520$1bEyPh)
        (&i/o-file-already-exists-rtd . g$12519$1bEyPh)
        (&i/o-file-is-read-only-rcd . g$12518$1bEyPh)
        (&i/o-file-is-read-only-rtd . g$12517$1bEyPh)
        (&i/o-file-protection-rcd . g$12516$1bEyPh)
        (&i/o-file-protection-rtd . g$12515$1bEyPh)
        (&i/o-filename-rcd . g$12514$1bEyPh)
        (&i/o-filename-rtd . g$12513$1bEyPh)
        (&i/o-invalid-position-rcd . g$12512$1bEyPh)
        (&i/o-invalid-position-rtd . g$12511$1bEyPh)
        (&i/o-write-rcd . g$12510$1bEyPh)
        (&i/o-write-rtd . g$12509$1bEyPh)
        (&i/o-read-rcd . g$12508$1bEyPh)
        (&i/o-read-rtd . g$12507$1bEyPh)
        (&i/o-rcd . g$12506$1bEyPh)
        (&i/o-rtd . g$12505$1bEyPh)
        (&undefined-rcd . g$12504$1bEyPh)
        (&undefined-rtd . g$12503$1bEyPh)
        (&syntax-rcd . g$12502$1bEyPh)
        (&syntax-rtd . g$12501$1bEyPh)
        (&lexical-rcd . g$12500$1bEyPh)
        (&lexical-rtd . g$12499$1bEyPh)
        (&implementation-restriction-rcd . g$12498$1bEyPh)
        (&implementation-restriction-rtd . g$12497$1bEyPh)
        (&non-continuable-rcd . g$12496$1bEyPh)
        (&non-continuable-rtd . g$12495$1bEyPh)
        (&who-rcd . g$12494$1bEyPh)
        (&who-rtd . g$12493$1bEyPh)
        (&irritants-rcd . g$12492$1bEyPh)
        (&irritants-rtd . g$12491$1bEyPh)
        (&assertion-rcd . g$12490$1bEyPh)
        (&assertion-rtd . g$12489$1bEyPh)
        (&violation-rcd . g$12488$1bEyPh)
        (&violation-rtd . g$12487$1bEyPh)
        (&error-rcd . g$12486$1bEyPh)
        (&error-rtd . g$12485$1bEyPh)
        (&serious-rcd . g$12484$1bEyPh)
        (&serious-rtd . g$12483$1bEyPh)
        (&warning-rcd . g$12482$1bEyPh)
        (&warning-rtd . g$12481$1bEyPh)
        (&message-rcd . g$12480$1bEyPh)
        (&message-rtd . g$12479$1bEyPh)
        (&condition-rcd . g$12478$1bEyPh)
        (&condition-rtd . g$12477$1bEyPh)
        (library-letrec* . g$12476$1bEyPh)
        (annotation-stripped . g$12475$1bEyPh)
        (annotation-source . g$12474$1bEyPh)
        (annotation-expression . g$12473$1bEyPh)
        (annotation? . g$12472$1bEyPh)
        (read-annotated . g$12471$1bEyPh)
        (tanh . g$12470$1bEyPh)
        (cosh . g$12469$1bEyPh)
        (sinh . g$12468$1bEyPh)
        (make-guid . g$12467$1bEyPh)
        (unspecified? . g$12466$1bEyPh)
        (make-trace . g$12465$1bEyPh)
        (make-list . g$12464$1bEyPh)
        (last-pair . g$12463$1bEyPh)
        (load-r5rs . g$12462$1bEyPh)
        (license . g$12461$1bEyPh)
        (stacktrace . g$12460$1bEyPh)
        (ironscheme-build . g$11882$1bEyPh)
        (define-clr-class-internal . g$12459$1bEyPh)
        (clr-field-set!-internal . g$12458$1bEyPh)
        (clr-field-get-internal . g$12457$1bEyPh)
        (clr-cast-internal . g$12456$1bEyPh)
        (clr-call-internal . g$12455$1bEyPh)
        (clr-new-internal . g$12454$1bEyPh)
        (clr-new-array-internal . g$12453$1bEyPh)
        (clr-is-internal . g$12452$1bEyPh)
        (clr-reference-internal . g$12451$1bEyPh)
        (clr-using-internal . g$12450$1bEyPh)
        (clr-clear-usings-internal . g$12449$1bEyPh)
        (syntax-error . g$8938$1bEyPh)
        (syntax-dispatch . g$8811$1bEyPh)
        (compile-core . g$12448$1bEyPh)
        (eval-core . g$12447$1bEyPh)
        (set-symbol-value! . g$12446$1bEyPh)
        (symbol-value . g$12445$1bEyPh)
        (ungensym . g$12444$1bEyPh)
        (gensym . g$12443$1bEyPh)
        (void . g$12442$1bEyPh)
        (load-serialized-library . g$12441$1bEyPh)
        (serialize-library . g$12440$1bEyPh)
        (compile-system-libraries . g$11884$1bEyPh)
        (compile->closure . g$11886$1bEyPh)
        (compile . g$11885$1bEyPh)
        (load . g$11881$1bEyPh)
        (interaction-environment . g$8947$1bEyPh)
        (char-ready? . g$12439$1bEyPh)
        (string-upcase . g$12438$1bEyPh)
        (string-titlecase . g$12437$1bEyPh)
        (string-normalize-nfkd . g$12436$1bEyPh)
        (string-normalize-nfkc . g$12435$1bEyPh)
        (string-normalize-nfd . g$12434$1bEyPh)
        (string-normalize-nfc . g$12433$1bEyPh)
        (string-foldcase . g$12432$1bEyPh)
        (string-downcase . g$12431$1bEyPh)
        (string-ci>? . g$7017$1bEyPh)
        (string-ci>=? . g$7019$1bEyPh)
        (string-ci=? . g$7015$1bEyPh)
        (string-ci<? . g$7016$1bEyPh)
        (string-ci<=? . g$7018$1bEyPh)
        (char-whitespace? . g$12430$1bEyPh)
        (char-upper-case? . g$12429$1bEyPh)
        (char-title-case? . g$12428$1bEyPh)
        (char-numeric? . g$12427$1bEyPh)
        (char-lower-case? . g$12426$1bEyPh)
        (char-general-category . g$12425$1bEyPh)
        (char-upcase . g$12424$1bEyPh)
        (char-titlecase . g$12423$1bEyPh)
        (char-foldcase . g$12422$1bEyPh)
        (char-downcase . g$12421$1bEyPh)
        (char-ci>? . g$7068$1bEyPh)
        (char-ci>=? . g$7070$1bEyPh)
        (char-ci=? . g$7066$1bEyPh)
        (char-ci<? . g$7067$1bEyPh)
        (char-ci<=? . g$7069$1bEyPh)
        (char-alphabetic? . g$12420$1bEyPh)
        (variable-transformer-procedure . g$8548$1bEyPh)
        (variable-transformer? . g$8547$1bEyPh)
        (make-variable-transformer . g$8546$1bEyPh)
        (identifier? . g$8942$1bEyPh)
        (generate-temporaries . g$8931$1bEyPh)
        (free-identifier=? . g$8932$1bEyPh)
        (syntax->datum . g$8944$1bEyPh)
        (datum->syntax . g$8943$1bEyPh)
        (bound-identifier=? . g$8933$1bEyPh)
        (record-type-descriptor? . g$12419$1bEyPh)
        (record-predicate . g$12418$1bEyPh)
        (record-mutator . g$12417$1bEyPh)
        (record-constructor . g$12416$1bEyPh)
        (record-accessor . g$12415$1bEyPh)
        (make-record-type-descriptor . g$12414$1bEyPh)
        (make-record-constructor-descriptor . g$12413$1bEyPh)
        (record? . g$12412$1bEyPh)
        (record-type-uid . g$12411$1bEyPh)
        (record-type-sealed? . g$12410$1bEyPh)
        (record-type-parent . g$12409$1bEyPh)
        (record-type-opaque? . g$12408$1bEyPh)
        (record-type-name . g$12407$1bEyPh)
        (record-type-generative? . g$12406$1bEyPh)
        (record-type-field-names . g$12405$1bEyPh)
        (record-rtd . g$12404$1bEyPh)
        (record-field-mutable? . g$12403$1bEyPh)
        (delete-file . g$6378$1bEyPh)
        (file-exists? . g$6377$1bEyPh)
        (vector-sort! . g$12402$1bEyPh)
        (vector-sort . g$12401$1bEyPh)
        (list-sort . g$6891$1bEyPh)
        (symbol-hash . g$12400$1bEyPh)
        (string-ci-hash . g$12399$1bEyPh)
        (string-hash . g$12398$1bEyPh)
        (equal-hash . g$12397$1bEyPh)
        (hashtable-equivalence-function . g$12396$1bEyPh)
        (make-hashtable . g$12395$1bEyPh)
        (hashtable-hash-function . g$12394$1bEyPh)
        (make-eqv-hashtable . g$6345$1bEyPh)
        (make-eq-hashtable . g$6344$1bEyPh)
        (hashtable? . g$12393$1bEyPh)
        (hashtable-update! . g$6351$1bEyPh)
        (hashtable-size . g$6346$1bEyPh)
        (hashtable-set! . g$6348$1bEyPh)
        (hashtable-ref . g$6347$1bEyPh)
        (hashtable-mutable? . g$12392$1bEyPh)
        (hashtable-keys . g$12391$1bEyPh)
        (hashtable-entries . g$12390$1bEyPh)
        (hashtable-delete! . g$6349$1bEyPh)
        (hashtable-copy . g$12389$1bEyPh)
        (hashtable-contains? . g$6350$1bEyPh)
        (hashtable-clear! . g$6352$1bEyPh)
        (call-with-output-file . g$7487$1bEyPh)
        (call-with-input-file . g$7486$1bEyPh)
        (write-char . g$12388$1bEyPh)
        (write . g$12387$1bEyPh)
        (with-output-to-file . g$7485$1bEyPh)
        (with-input-from-file . g$7484$1bEyPh)
        (read-char . g$12386$1bEyPh)
        (read . g$12385$1bEyPh)
        (peek-char . g$12384$1bEyPh)
        (open-output-file . g$12383$1bEyPh)
        (open-input-file . g$12382$1bEyPh)
        (newline . g$12381$1bEyPh)
        (display . g$12380$1bEyPh)
        (close-output-port . g$12379$1bEyPh)
        (close-input-port . g$12378$1bEyPh)
        (eof-object? . g$12377$1bEyPh)
        (eof-object . g$12376$1bEyPh)
        (current-error-port . g$12375$1bEyPh)
        (current-output-port . g$12374$1bEyPh)
        (current-input-port . g$12373$1bEyPh)
        (output-port? . g$12372$1bEyPh)
        (input-port? . g$12371$1bEyPh)
        (utf-8-codec . g$12370$1bEyPh)
        (utf-16-codec . g$12369$1bEyPh)
        (transcoder-error-handling-mode . g$12368$1bEyPh)
        (transcoder-eol-style . g$12367$1bEyPh)
        (transcoder-codec . g$12366$1bEyPh)
        (transcoded-port . g$12365$1bEyPh)
        (textual-port? . g$12364$1bEyPh)
        (string->bytevector . g$12363$1bEyPh)
        (standard-output-port . g$12362$1bEyPh)
        (standard-input-port . g$12361$1bEyPh)
        (standard-error-port . g$12360$1bEyPh)
        (set-port-position! . g$12359$1bEyPh)
        (put-u8 . g$12358$1bEyPh)
        (put-string . g$12357$1bEyPh)
        (put-datum . g$12356$1bEyPh)
        (put-char . g$12355$1bEyPh)
        (put-bytevector . g$12354$1bEyPh)
        (port? . g$7463$1bEyPh)
        (port-transcoder . g$12353$1bEyPh)
        (port-position . g$12352$1bEyPh)
        (port-has-set-port-position!? . g$12351$1bEyPh)
        (port-has-port-position? . g$12350$1bEyPh)
        (port-eof? . g$12349$1bEyPh)
        (output-port-buffer-mode . g$12348$1bEyPh)
        (open-string-output-port . g$7462$1bEyPh)
        (open-string-input-port . g$12347$1bEyPh)
        (open-file-output-port . g$12346$1bEyPh)
        (open-file-input/output-port . g$12345$1bEyPh)
        (open-file-input-port . g$12344$1bEyPh)
        (open-bytevector-output-port . g$12343$1bEyPh)
        (open-bytevector-input-port . g$12342$1bEyPh)
        (native-transcoder . g$12341$1bEyPh)
        (native-eol-style . g$12340$1bEyPh)
        (make-transcoder . g$12339$1bEyPh)
        (latin-1-codec . g$12338$1bEyPh)
        (make-i/o-write-error . g$7319$1bEyPh)
        (make-i/o-read-error . g$7305$1bEyPh)
        (make-i/o-port-error . g$7424$1bEyPh)
        (make-i/o-invalid-position-error . g$7334$1bEyPh)
        (make-i/o-filename-error . g$7351$1bEyPh)
        (make-i/o-file-protection-error . g$7367$1bEyPh)
        (make-i/o-file-is-read-only-error . g$7381$1bEyPh)
        (make-i/o-file-does-not-exist-error . g$7409$1bEyPh)
        (make-i/o-file-already-exists-error . g$7395$1bEyPh)
        (make-i/o-error . g$7291$1bEyPh)
        (make-i/o-encoding-error . g$7455$1bEyPh)
        (make-i/o-decoding-error . g$7440$1bEyPh)
        (make-custom-textual-output-port . g$12337$1bEyPh)
        (make-custom-textual-input/output-port . g$12336$1bEyPh)
        (make-custom-textual-input-port . g$12335$1bEyPh)
        (make-custom-binary-output-port . g$12334$1bEyPh)
        (make-custom-binary-input/output-port . g$12333$1bEyPh)
        (make-custom-binary-input-port . g$12332$1bEyPh)
        (make-bytevector . g$12331$1bEyPh)
        (lookahead-u8 . g$12330$1bEyPh)
        (lookahead-char . g$12329$1bEyPh)
        (i/o-write-error? . g$7320$1bEyPh)
        (i/o-read-error? . g$7306$1bEyPh)
        (i/o-port-error? . g$7426$1bEyPh)
        (i/o-invalid-position-error? . g$7336$1bEyPh)
        (i/o-error-position . g$7337$1bEyPh)
        (i/o-filename-error? . g$7353$1bEyPh)
        (i/o-file-protection-error? . g$7368$1bEyPh)
        (i/o-file-is-read-only-error? . g$7382$1bEyPh)
        (i/o-file-does-not-exist-error? . g$7410$1bEyPh)
        (i/o-file-already-exists-error? . g$7396$1bEyPh)
        (i/o-error? . g$7292$1bEyPh)
        (i/o-error-port . g$7427$1bEyPh)
        (i/o-error-filename . g$7354$1bEyPh)
        (i/o-encoding-error? . g$7457$1bEyPh)
        (i/o-encoding-error-char . g$7458$1bEyPh)
        (i/o-decoding-error? . g$7441$1bEyPh)
        (get-u8 . g$12328$1bEyPh)
        (get-string-n! . g$12327$1bEyPh)
        (get-string-n . g$12326$1bEyPh)
        (get-string-all . g$12325$1bEyPh)
        (get-line . g$12324$1bEyPh)
        (get-datum . g$12323$1bEyPh)
        (get-char . g$12322$1bEyPh)
        (get-bytevector-some . g$12321$1bEyPh)
        (get-bytevector-n! . g$12320$1bEyPh)
        (get-bytevector-n . g$12319$1bEyPh)
        (get-bytevector-all . g$12318$1bEyPh)
        (flush-output-port . g$12317$1bEyPh)
        (close-port . g$12316$1bEyPh)
        (call-with-string-output-port . g$12315$1bEyPh)
        (call-with-port . g$12314$1bEyPh)
        (call-with-bytevector-output-port . g$12313$1bEyPh)
        (bytevector->string . g$12312$1bEyPh)
        (buffer-mode? . g$12311$1bEyPh)
        (binary-port? . g$12310$1bEyPh)
        (scheme-report-environment . g$8922$1bEyPh)
        (quotient . g$6871$1bEyPh)
        (null-environment . g$8921$1bEyPh)
        (remainder . g$6872$1bEyPh)
        (modulo . g$6873$1bEyPh)
        (inexact->exact . g$12309$1bEyPh)
        (force . g$6875$1bEyPh)
        (exact->inexact . g$12308$1bEyPh)
        (exit . g$12307$1bEyPh)
        (command-line . g$11878$1bEyPh)
        (string-fill! . g$12306$1bEyPh)
        (string-set! . g$12305$1bEyPh)
        (set-cdr! . g$12304$1bEyPh)
        (set-car! . g$12303$1bEyPh)
        (remove . g$6458$1bEyPh)
        (remv . g$6459$1bEyPh)
        (remp . g$6444$1bEyPh)
        (remq . g$6460$1bEyPh)
        (partition . g$6443$1bEyPh)
        (memv . g$12302$1bEyPh)
        (memq . g$12301$1bEyPh)
        (memp . g$6450$1bEyPh)
        (member . g$6449$1bEyPh)
        (exists . g$6454$1bEyPh)
        (for-all . g$6453$1bEyPh)
        (fold-right . g$6457$1bEyPh)
        (fold-left . g$6456$1bEyPh)
        (find . g$6442$1bEyPh)
        (filter . g$6445$1bEyPh)
        (cons* . g$6455$1bEyPh)
        (assv . g$6446$1bEyPh)
        (assq . g$12300$1bEyPh)
        (assp . g$6448$1bEyPh)
        (assoc . g$6447$1bEyPh)
        (with-exception-handler . g$12299$1bEyPh)
        (raise-continuable . g$12298$1bEyPh)
        (raise . g$12297$1bEyPh)
        (eval . g$8924$1bEyPh)
        (environment . g$8920$1bEyPh)
        (make-enumeration . g$7544$1bEyPh)
        (enum-set=? . g$7551$1bEyPh)
        (enum-set-universe . g$7545$1bEyPh)
        (enum-set-union . g$7552$1bEyPh)
        (enum-set-subset? . g$7550$1bEyPh)
        (enum-set-projection . g$7556$1bEyPh)
        (enum-set-member? . g$7549$1bEyPh)
        (enum-set-intersection . g$7553$1bEyPh)
        (enum-set-indexer . g$7546$1bEyPh)
        (enum-set-difference . g$7554$1bEyPh)
        (enum-set-constructor . g$7547$1bEyPh)
        (enum-set-complement . g$7555$1bEyPh)
        (enum-set->list . g$7548$1bEyPh)
        (who-condition? . g$6782$1bEyPh)
        (warning? . g$6693$1bEyPh)
        (violation? . g$6735$1bEyPh)
        (undefined-violation? . g$6859$1bEyPh)
        (syntax-violation? . g$6843$1bEyPh)
        (syntax-violation-subform . g$6845$1bEyPh)
        (syntax-violation-form . g$6844$1bEyPh)
        (syntax-violation . g$8941$1bEyPh)
        (simple-conditions . g$12296$1bEyPh)
        (serious-condition? . g$6707$1bEyPh)
        (non-continuable-violation? . g$6797$1bEyPh)
        (message-condition? . g$6678$1bEyPh)
        (make-who-condition . g$6780$1bEyPh)
        (make-warning . g$6692$1bEyPh)
        (make-violation . g$6734$1bEyPh)
        (make-undefined-violation . g$6858$1bEyPh)
        (make-syntax-violation . g$6840$1bEyPh)
        (make-serious-condition . g$6706$1bEyPh)
        (make-non-continuable-violation . g$6796$1bEyPh)
        (make-message-condition . g$6676$1bEyPh)
        (make-lexical-violation . g$6824$1bEyPh)
        (make-irritants-condition . g$6763$1bEyPh)
        (make-implementation-restriction-violation . g$6810$1bEyPh)
        (make-error . g$6720$1bEyPh)
        (make-assertion-violation . g$6748$1bEyPh)
        (lexical-violation? . g$6825$1bEyPh)
        (irritants-condition? . g$6765$1bEyPh)
        (implementation-restriction-violation? . g$6811$1bEyPh)
        (error? . g$6721$1bEyPh)
        (condition-who . g$6783$1bEyPh)
        (condition-predicate . g$12295$1bEyPh)
        (condition-message . g$6679$1bEyPh)
        (condition-irritants . g$6766$1bEyPh)
        (condition-accessor . g$12294$1bEyPh)
        (condition . g$12293$1bEyPh)
        (assertion-violation? . g$6749$1bEyPh)
        (condition? . g$12292$1bEyPh)
        (utf32->string . g$12291$1bEyPh)
        (utf16->string . g$12290$1bEyPh)
        (utf8->string . g$12289$1bEyPh)
        (uint-list->bytevector . g$12288$1bEyPh)
        (u8-list->bytevector . g$12287$1bEyPh)
        (string->utf8 . g$12286$1bEyPh)
        (string->utf32 . g$12285$1bEyPh)
        (string->utf16 . g$12284$1bEyPh)
        (sint-list->bytevector . g$12283$1bEyPh)
        (native-endianness . g$6534$1bEyPh)
        (bytevector? . g$12282$1bEyPh)
        (bytevector=? . g$12281$1bEyPh)
        (bytevector-uint-set! . g$12280$1bEyPh)
        (bytevector-uint-ref . g$12279$1bEyPh)
        (bytevector-u8-set! . g$12278$1bEyPh)
        (bytevector-u8-ref . g$12277$1bEyPh)
        (bytevector-u64-set! . g$6555$1bEyPh)
        (bytevector-u64-ref . g$6551$1bEyPh)
        (bytevector-u64-native-set! . g$6557$1bEyPh)
        (bytevector-u64-native-ref . g$6553$1bEyPh)
        (bytevector-u32-set! . g$6547$1bEyPh)
        (bytevector-u32-ref . g$6543$1bEyPh)
        (bytevector-u32-native-set! . g$6549$1bEyPh)
        (bytevector-u32-native-ref . g$6545$1bEyPh)
        (bytevector-u16-set! . g$6539$1bEyPh)
        (bytevector-u16-ref . g$6535$1bEyPh)
        (bytevector-u16-native-set! . g$6541$1bEyPh)
        (bytevector-u16-native-ref . g$6537$1bEyPh)
        (bytevector-sint-set! . g$12276$1bEyPh)
        (bytevector-sint-ref . g$12275$1bEyPh)
        (bytevector-s8-set! . g$12274$1bEyPh)
        (bytevector-s8-ref . g$12273$1bEyPh)
        (bytevector-s64-set! . g$6556$1bEyPh)
        (bytevector-s64-ref . g$6552$1bEyPh)
        (bytevector-s64-native-set! . g$6558$1bEyPh)
        (bytevector-s64-native-ref . g$6554$1bEyPh)
        (bytevector-s32-set! . g$6548$1bEyPh)
        (bytevector-s32-ref . g$6544$1bEyPh)
        (bytevector-s32-native-set! . g$6550$1bEyPh)
        (bytevector-s32-native-ref . g$6546$1bEyPh)
        (bytevector-s16-set! . g$6540$1bEyPh)
        (bytevector-s16-ref . g$6536$1bEyPh)
        (bytevector-s16-native-set! . g$6542$1bEyPh)
        (bytevector-s16-native-ref . g$6538$1bEyPh)
        (bytevector-length . g$12272$1bEyPh)
        (bytevector-ieee-single-set! . g$12271$1bEyPh)
        (bytevector-ieee-single-ref . g$12270$1bEyPh)
        (bytevector-ieee-single-native-set! . g$6561$1bEyPh)
        (bytevector-ieee-single-native-ref . g$6559$1bEyPh)
        (bytevector-ieee-double-set! . g$12269$1bEyPh)
        (bytevector-ieee-double-ref . g$12268$1bEyPh)
        (bytevector-ieee-double-native-set! . g$6562$1bEyPh)
        (bytevector-ieee-double-native-ref . g$6560$1bEyPh)
        (bytevector-fill! . g$12267$1bEyPh)
        (bytevector-copy! . g$12266$1bEyPh)
        (bytevector-copy . g$12265$1bEyPh)
        (bytevector->uint-list . g$12264$1bEyPh)
        (bytevector->u8-list . g$12263$1bEyPh)
        (bytevector->sint-list . g$12262$1bEyPh)
        (no-nans-violation? . g$7277$1bEyPh)
        (no-infinities-violation? . g$7263$1bEyPh)
        (make-no-nans-violation . g$7276$1bEyPh)
        (make-no-infinities-violation . g$7262$1bEyPh)
        (real->flonum . g$12261$1bEyPh)
        (flzero? . g$12260$1bEyPh)
        (fltruncate . g$12259$1bEyPh)
        (fltan . g$12258$1bEyPh)
        (flsqrt . g$12257$1bEyPh)
        (flsin . g$12256$1bEyPh)
        (flround . g$12255$1bEyPh)
        (flpositive? . g$12254$1bEyPh)
        (flonum? . g$12253$1bEyPh)
        (flodd? . g$12252$1bEyPh)
        (flnumerator . g$12251$1bEyPh)
        (flnegative? . g$12250$1bEyPh)
        (flnan? . g$12249$1bEyPh)
        (flmod0 . g$12248$1bEyPh)
        (flmod . g$12247$1bEyPh)
        (flmin . g$12246$1bEyPh)
        (flmax . g$12245$1bEyPh)
        (fllog . g$12244$1bEyPh)
        (flinteger? . g$12243$1bEyPh)
        (flinfinite? . g$12242$1bEyPh)
        (flfloor . g$12241$1bEyPh)
        (flfinite? . g$12240$1bEyPh)
        (flexpt . g$12239$1bEyPh)
        (flexp . g$12238$1bEyPh)
        (fleven? . g$12237$1bEyPh)
        (fldiv0-and-mod0 . g$12236$1bEyPh)
        (fldiv0 . g$12235$1bEyPh)
        (fldiv-and-mod . g$12234$1bEyPh)
        (fldiv . g$12233$1bEyPh)
        (fldenominator . g$12232$1bEyPh)
        (flcos . g$12231$1bEyPh)
        (flceiling . g$12230$1bEyPh)
        (flatan . g$12229$1bEyPh)
        (flasin . g$12228$1bEyPh)
        (flacos . g$12227$1bEyPh)
        (flabs . g$12226$1bEyPh)
        (fl>? . g$12225$1bEyPh)
        (fl>=? . g$12224$1bEyPh)
        (fl=? . g$12223$1bEyPh)
        (fl<? . g$12222$1bEyPh)
        (fl<=? . g$12221$1bEyPh)
        (fl/ . g$12220$1bEyPh)
        (fl- . g$12219$1bEyPh)
        (fl+ . g$12218$1bEyPh)
        (fl* . g$12217$1bEyPh)
        (fixnum->flonum . g$12216$1bEyPh)
        (fxzero? . g$12215$1bEyPh)
        (fxxor . g$12214$1bEyPh)
        (fxrotate-bit-field . g$7208$1bEyPh)
        (fxreverse-bit-field . g$12213$1bEyPh)
        (fxpositive? . g$12212$1bEyPh)
        (fxodd? . g$12211$1bEyPh)
        (fxnot . g$12210$1bEyPh)
        (fxnegative? . g$12209$1bEyPh)
        (fxmod0 . g$12208$1bEyPh)
        (fxmod . g$12207$1bEyPh)
        (fxmin . g$12206$1bEyPh)
        (fxmax . g$12205$1bEyPh)
        (fxlength . g$12204$1bEyPh)
        (fxior . g$12203$1bEyPh)
        (fxif . g$7202$1bEyPh)
        (fxfirst-bit-set . g$12202$1bEyPh)
        (fxeven? . g$12201$1bEyPh)
        (fxdiv0-and-mod0 . g$12200$1bEyPh)
        (fxdiv0 . g$12199$1bEyPh)
        (fxdiv-and-mod . g$12198$1bEyPh)
        (fxdiv . g$12197$1bEyPh)
        (fxcopy-bit-field . g$7205$1bEyPh)
        (fxcopy-bit . g$7203$1bEyPh)
        (fxbit-set? . g$12196$1bEyPh)
        (fxbit-field . g$7204$1bEyPh)
        (fxbit-count . g$12195$1bEyPh)
        (fxarithmetic-shift-right . g$7207$1bEyPh)
        (fxarithmetic-shift-left . g$7206$1bEyPh)
        (fxarithmetic-shift . g$12194$1bEyPh)
        (fxand . g$12193$1bEyPh)
        (fx>? . g$12192$1bEyPh)
        (fx>=? . g$12191$1bEyPh)
        (fx=? . g$12190$1bEyPh)
        (fx<? . g$12189$1bEyPh)
        (fx<=? . g$12188$1bEyPh)
        (fx-/carry . g$12187$1bEyPh)
        (fx- . g$12186$1bEyPh)
        (fx+/carry . g$12185$1bEyPh)
        (fx+ . g$12184$1bEyPh)
        (fx*/carry . g$12183$1bEyPh)
        (fx* . g$12182$1bEyPh)
        (greatest-fixnum . g$12181$1bEyPh)
        (least-fixnum . g$12180$1bEyPh)
        (fixnum-width . g$12179$1bEyPh)
        (fixnum? . g$12178$1bEyPh)
        (bitwise-rotate-bit-field . g$7160$1bEyPh)
        (bitwise-reverse-bit-field . g$12177$1bEyPh)
        (bitwise-length . g$12176$1bEyPh)
        (bitwise-if . g$7154$1bEyPh)
        (bitwise-first-bit-set . g$12175$1bEyPh)
        (bitwise-copy-bit-field . g$7157$1bEyPh)
        (bitwise-copy-bit . g$7155$1bEyPh)
        (bitwise-bit-set? . g$12174$1bEyPh)
        (bitwise-bit-field . g$12173$1bEyPh)
        (bitwise-bit-count . g$12172$1bEyPh)
        (bitwise-xor . g$12171$1bEyPh)
        (bitwise-ior . g$12170$1bEyPh)
        (bitwise-and . g$12169$1bEyPh)
        (bitwise-not . g$12168$1bEyPh)
        (bitwise-arithmetic-shift-right . g$7159$1bEyPh)
        (bitwise-arithmetic-shift-left . g$7158$1bEyPh)
        (bitwise-arithmetic-shift . g$12167$1bEyPh)
        (zero? . g$12166$1bEyPh)
        (vector? . g$12165$1bEyPh)
        (vector-set! . g$12164$1bEyPh)
        (vector-ref . g$12163$1bEyPh)
        (vector-map . g$12162$1bEyPh)
        (vector-length . g$12161$1bEyPh)
        (vector-for-each . g$12160$1bEyPh)
        (vector-fill! . g$12159$1bEyPh)
        (vector->list . g$12158$1bEyPh)
        (vector . g$12157$1bEyPh)
        (values . g$12156$1bEyPh)
        (truncate . g$12155$1bEyPh)
        (tan . g$12154$1bEyPh)
        (symbol? . g$12153$1bEyPh)
        (symbol=? . g$5843$1bEyPh)
        (symbol->string . g$12152$1bEyPh)
        (substring . g$12151$1bEyPh)
        (string? . g$12150$1bEyPh)
        (string>? . g$5840$1bEyPh)
        (string>=? . g$5842$1bEyPh)
        (string=? . g$5838$1bEyPh)
        (string<? . g$5839$1bEyPh)
        (string<=? . g$5841$1bEyPh)
        (string-ref . g$12149$1bEyPh)
        (string-length . g$12148$1bEyPh)
        (string-for-each . g$12147$1bEyPh)
        (string-copy . g$12146$1bEyPh)
        (string-append . g$12145$1bEyPh)
        (string->symbol . g$12144$1bEyPh)
        (string->number . g$12143$1bEyPh)
        (string->list . g$12142$1bEyPh)
        (string . g$12141$1bEyPh)
        (sqrt . g$12140$1bEyPh)
        (sin . g$12139$1bEyPh)
        (round . g$12138$1bEyPh)
        (reverse . g$12137$1bEyPh)
        (real? . g$12136$1bEyPh)
        (real-valued? . g$12135$1bEyPh)
        (real-part . g$12134$1bEyPh)
        (rationalize . g$5896$1bEyPh)
        (rational? . g$12133$1bEyPh)
        (rational-valued? . g$12132$1bEyPh)
        (procedure? . g$12131$1bEyPh)
        (positive? . g$12130$1bEyPh)
        (pair? . g$12129$1bEyPh)
        (odd? . g$12128$1bEyPh)
        (numerator . g$12127$1bEyPh)
        (number? . g$12126$1bEyPh)
        (number->string . g$12125$1bEyPh)
        (null? . g$12124$1bEyPh)
        (not . g$12123$1bEyPh)
        (negative? . g$12122$1bEyPh)
        (nan? . g$12121$1bEyPh)
        (min . g$12120$1bEyPh)
        (max . g$12119$1bEyPh)
        (map . g$12118$1bEyPh)
        (make-vector . g$12117$1bEyPh)
        (make-string . g$12116$1bEyPh)
        (make-rectangular . g$12115$1bEyPh)
        (make-polar . g$12114$1bEyPh)
        (magnitude . g$12113$1bEyPh)
        (log . g$12112$1bEyPh)
        (list? . g$12111$1bEyPh)
        (list-tail . g$12110$1bEyPh)
        (list-ref . g$12109$1bEyPh)
        (list->vector . g$12108$1bEyPh)
        (list->string . g$12107$1bEyPh)
        (list . g$12106$1bEyPh)
        (length . g$12105$1bEyPh)
        (lcm . g$12104$1bEyPh)
        (integer? . g$12103$1bEyPh)
        (integer-valued? . g$12102$1bEyPh)
        (integer->char . g$12101$1bEyPh)
        (infinite? . g$12100$1bEyPh)
        (inexact? . g$12099$1bEyPh)
        (inexact . g$12098$1bEyPh)
        (imag-part . g$12097$1bEyPh)
        (gcd . g$12096$1bEyPh)
        (for-each . g$12095$1bEyPh)
        (floor . g$12094$1bEyPh)
        (finite? . g$12093$1bEyPh)
        (expt . g$12092$1bEyPh)
        (exp . g$12091$1bEyPh)
        (exact? . g$12090$1bEyPh)
        (exact-integer-sqrt . g$12089$1bEyPh)
        (exact . g$12088$1bEyPh)
        (even? . g$12087$1bEyPh)
        (error . g$12086$1bEyPh)
        (eqv? . g$12085$1bEyPh)
        (equal? . g$12084$1bEyPh)
        (eq? . g$12083$1bEyPh)
        (dynamic-wind . g$12082$1bEyPh)
        (div0-and-mod0 . g$12081$1bEyPh)
        (mod0 . g$12080$1bEyPh)
        (div0 . g$12079$1bEyPh)
        (div-and-mod . g$12078$1bEyPh)
        (mod . g$12077$1bEyPh)
        (div . g$12076$1bEyPh)
        (denominator . g$12075$1bEyPh)
        (cos . g$12074$1bEyPh)
        (cons . g$12073$1bEyPh)
        (complex? . g$12072$1bEyPh)
        (char? . g$12071$1bEyPh)
        (char>? . g$5893$1bEyPh)
        (char>=? . g$5895$1bEyPh)
        (char=? . g$5891$1bEyPh)
        (char<? . g$5892$1bEyPh)
        (char<=? . g$5894$1bEyPh)
        (char->integer . g$12070$1bEyPh)
        (ceiling . g$12069$1bEyPh)
        (call-with-values . g$12068$1bEyPh)
        (call/cc . g$12067$1bEyPh)
        (call-with-current-continuation . g$12066$1bEyPh)
        (cddddr . g$5791$1bEyPh)
        (cdddar . g$5790$1bEyPh)
        (cddadr . g$5789$1bEyPh)
        (cddaar . g$5788$1bEyPh)
        (cdaddr . g$5787$1bEyPh)
        (cdadar . g$5786$1bEyPh)
        (cdaadr . g$5785$1bEyPh)
        (cdaaar . g$5784$1bEyPh)
        (cadddr . g$5783$1bEyPh)
        (caddar . g$5782$1bEyPh)
        (cadadr . g$5781$1bEyPh)
        (cadaar . g$5780$1bEyPh)
        (caaddr . g$5779$1bEyPh)
        (caadar . g$5778$1bEyPh)
        (caaadr . g$5777$1bEyPh)
        (caaaar . g$5776$1bEyPh)
        (cdddr . g$5775$1bEyPh)
        (cddar . g$5774$1bEyPh)
        (cdadr . g$5773$1bEyPh)
        (cdaar . g$5772$1bEyPh)
        (caddr . g$5771$1bEyPh)
        (cadar . g$5770$1bEyPh)
        (caadr . g$5769$1bEyPh)
        (caaar . g$5768$1bEyPh)
        (cddr . g$5767$1bEyPh)
        (cdar . g$5766$1bEyPh)
        (cadr . g$5765$1bEyPh)
        (caar . g$5764$1bEyPh)
        (cdr . g$12065$1bEyPh)
        (car . g$12064$1bEyPh)
        (boolean? . g$12063$1bEyPh)
        (boolean=? . g$5844$1bEyPh)
        (atan . g$12062$1bEyPh)
        (assertion-violation . g$12061$1bEyPh)
        (asin . g$12060$1bEyPh)
        (apply . g$12059$1bEyPh)
        (append . g$12058$1bEyPh)
        (angle . g$12057$1bEyPh)
        (acos . g$12056$1bEyPh)
        (abs . g$12055$1bEyPh)
        (/ . g$12054$1bEyPh)
        (* . g$12053$1bEyPh)
        (- . g$12052$1bEyPh)
        (+ . g$12051$1bEyPh)
        (>= . g$12050$1bEyPh)
        (> . g$12049$1bEyPh)
        (= . g$12048$1bEyPh)
        (<= . g$12047$1bEyPh)
        (< . g$12046$1bEyPh)
        (make-record-printer . g$12045$1bEyPh)
        (eqv-hash . g$12044$1bEyPh)
        (eq-hash . g$12043$1bEyPh)
        (reverse! . g$12042$1bEyPh)
        (make-promise . g$6874$1bEyPh)
        (load/args . g$11880$1bEyPh)
        (printf . g$7628$1bEyPh)
        (fprintf . g$7629$1bEyPh)
        (format . g$7630$1bEyPh)
        (get-arity . g$12041$1bEyPh)
        (gc-collect . g$12040$1bEyPh)
        (clr-type? . g$12039$1bEyPh)
        (get-clr-type . g$12038$1bEyPh)
        (get-command-line . g$12037$1bEyPh)
        (vector-append . g$12036$1bEyPh)
        (vector-filter . g$12035$1bEyPh)
        (vector-reverse! . g$12034$1bEyPh)
        (vector-contains? . g$12033$1bEyPh)
        (vector-index-of . g$12032$1bEyPh)
        (vector-copy . g$12031$1bEyPh)
        (vector-binary-search . g$12030$1bEyPh)
        (get-output-string . g$12029$1bEyPh)
        (open-output-string . g$12028$1bEyPh)
        (open-input-string . g$12027$1bEyPh)
        (string-ci-compare . g$12026$1bEyPh)
        (string-compare . g$12025$1bEyPh)
        (string-format . g$12024$1bEyPh)
        (trace-printer . g$11877$1bEyPh)
        (make-traced-procedure . g$12023$1bEyPh)
        (make-traced-macro . g$7650$1bEyPh)
        (assertion-error . g$8937$1bEyPh)
        (pmap . g$12022$1bEyPh)
        (time-it . g$12021$1bEyPh)
        (make-parameter . g$7655$1bEyPh)
        (library-locator . g$12020$1bEyPh)
        (get-library-paths . g$12019$1bEyPh)
        (environment-symbols . g$8918$1bEyPh)
        (interaction-environment-symbols . g$8917$1bEyPh)
        (library-path . g$8086$1bEyPh)
        (library-extensions . g$8087$1bEyPh)
        (installed-libraries . g$8107$1bEyPh)
        (expand . g$8923$1bEyPh)
        (&no-nans . g$12018$1bEyPh)
        (&no-infinities . g$12017$1bEyPh)
        (&i/o-encoding . g$12016$1bEyPh)
        (&i/o-decoding . g$12015$1bEyPh)
        (&i/o-port . g$12014$1bEyPh)
        (&i/o-file-does-not-exist . g$12013$1bEyPh)
        (&i/o-file-already-exists . g$12012$1bEyPh)
        (&i/o-file-is-read-only . g$12011$1bEyPh)
        (&i/o-file-protection . g$12010$1bEyPh)
        (&i/o-filename . g$12009$1bEyPh)
        (&i/o-invalid-position . g$12008$1bEyPh)
        (&i/o-write . g$12007$1bEyPh)
        (&i/o-read . g$12006$1bEyPh)
        (&i/o . g$12005$1bEyPh)
        (&non-continuable . g$12004$1bEyPh)
        (&undefined . g$12003$1bEyPh)
        (&syntax . g$12002$1bEyPh)
        (&lexical . g$12001$1bEyPh)
        (&implementation-restriction . g$12000$1bEyPh)
        (&non . g$11999$1bEyPh)
        (&who . g$11998$1bEyPh)
        (&irritants . g$11997$1bEyPh)
        (&assertion . g$11996$1bEyPh)
        (&violation . g$11995$1bEyPh)
        (&error . g$11994$1bEyPh)
        (&serious . g$11993$1bEyPh)
        (&warning . g$11992$1bEyPh)
        (&message . g$11991$1bEyPh)
        (&condition . g$11990$1bEyPh)
        (define-condition-type . g$11989$1bEyPh)
        (define-enumeration . g$11988$1bEyPh)
        (define-record-type . g$11987$1bEyPh)
        (parent-rtd . g$11986$1bEyPh)
        (nongenerative . g$11985$1bEyPh)
        (opaque . g$11984$1bEyPh)
        (sealed . g$11983$1bEyPh)
        (protocol . g$11982$1bEyPh)
        (parent . g$11981$1bEyPh)
        (immutable . g$11980$1bEyPh)
        (mutable . g$11979$1bEyPh)
        (fields . g$11978$1bEyPh)
        (error-handling-mode . g$11977$1bEyPh)
        (file-options . g$11976$1bEyPh)
        (buffer-mode . g$11975$1bEyPh)
        (eol-style . g$11974$1bEyPh)
        (guard . g$11973$1bEyPh)
        (trace-letrec-syntax . g$11972$1bEyPh)
        (trace-let-syntax . g$11971$1bEyPh)
        (trace-define-syntax . g$11970$1bEyPh)
        (trace-define . g$11969$1bEyPh)
        (trace-lambda . g$11968$1bEyPh)
        (unsyntax-splicing . g$11967$1bEyPh)
        (unsyntax . g$11966$1bEyPh)
        (unquote-splicing . g$11965$1bEyPh)
        (unquote . g$11964$1bEyPh)
        (_ . g$11963$1bEyPh)
        (else . g$11962$1bEyPh)
        (=> . g$11961$1bEyPh)
        (... . g$11960$1bEyPh)
        (assert . g$11959$1bEyPh)
        (endianness . g$11958$1bEyPh)
        (delay . g$11957$1bEyPh)
        (time . g$11956$1bEyPh)
        (or . g$11955$1bEyPh)
        (and . g$11954$1bEyPh)
        (do . g$11953$1bEyPh)
        (cond . g$11952$1bEyPh)
        (let* . g$11951$1bEyPh)
        (let . g$11950$1bEyPh)
        (identifier-syntax . g$11949$1bEyPh)
        (with-syntax . g$11948$1bEyPh)
        (quasisyntax . g$11947$1bEyPh)
        (quasiquote . g$11946$1bEyPh)
        (syntax-rules . g$11945$1bEyPh)
        (include-into . g$11944$1bEyPh)
        (include . g$11943$1bEyPh)
        (define-struct . g$11942$1bEyPh)
        (let-values . g$11941$1bEyPh)
        (let*-values . g$11940$1bEyPh)
        (record-constructor-descriptor . g$11939$1bEyPh)
        (record-type-descriptor . g$11938$1bEyPh)
        (fluid-let-syntax . g$11937$1bEyPh)
        (case . g$11936$1bEyPh)
        (parameterize . g$11935$1bEyPh)
        (unless . g$11934$1bEyPh)
        (when . g$11933$1bEyPh)
        (if . g$11932$1bEyPh)
        (letrec* . g$11931$1bEyPh)
        (letrec . g$11930$1bEyPh)
        (type-descriptor . g$11929$1bEyPh)
        (case-lambda . g$11928$1bEyPh)
        (lambda . g$11927$1bEyPh)
        (syntax . g$11926$1bEyPh)
        (syntax-case . g$11925$1bEyPh)
        (quote . g$11924$1bEyPh)
        (foreign-call . g$11923$1bEyPh)
        (letrec-syntax . g$11922$1bEyPh)
        (let-syntax . g$11921$1bEyPh)
        (set! . g$11920$1bEyPh)
        (import . g$11919$1bEyPh)
        (library . g$11918$1bEyPh)
        (begin . g$11917$1bEyPh)
        (module . g$11916$1bEyPh)
        (define-syntax . g$11915$1bEyPh)
        (define . g$11914$1bEyPh))
      '((g$8816$1bEyPh core-prim . ellipsis-map)
        (g$12532$1bEyPh core-prim . &no-nans-rcd)
        (g$12531$1bEyPh core-prim . &no-nans-rtd)
        (g$12530$1bEyPh core-prim . &no-infinities-rcd)
        (g$12529$1bEyPh core-prim . &no-infinities-rtd)
        (g$12528$1bEyPh core-prim . &i/o-encoding-rcd)
        (g$12527$1bEyPh core-prim . &i/o-encoding-rtd)
        (g$12526$1bEyPh core-prim . &i/o-decoding-rcd)
        (g$12525$1bEyPh core-prim . &i/o-decoding-rtd)
        (g$12524$1bEyPh core-prim . &i/o-port-rcd)
        (g$12523$1bEyPh core-prim . &i/o-port-rtd)
        (g$12522$1bEyPh core-prim . &i/o-file-does-not-exist-rcd)
        (g$12521$1bEyPh core-prim . &i/o-file-does-not-exist-rtd)
        (g$12520$1bEyPh core-prim . &i/o-file-already-exists-rcd)
        (g$12519$1bEyPh core-prim . &i/o-file-already-exists-rtd)
        (g$12518$1bEyPh core-prim . &i/o-file-is-read-only-rcd)
        (g$12517$1bEyPh core-prim . &i/o-file-is-read-only-rtd)
        (g$12516$1bEyPh core-prim . &i/o-file-protection-rcd)
        (g$12515$1bEyPh core-prim . &i/o-file-protection-rtd)
        (g$12514$1bEyPh core-prim . &i/o-filename-rcd)
        (g$12513$1bEyPh core-prim . &i/o-filename-rtd)
        (g$12512$1bEyPh core-prim . &i/o-invalid-position-rcd)
        (g$12511$1bEyPh core-prim . &i/o-invalid-position-rtd)
        (g$12510$1bEyPh core-prim . &i/o-write-rcd)
        (g$12509$1bEyPh core-prim . &i/o-write-rtd)
        (g$12508$1bEyPh core-prim . &i/o-read-rcd)
        (g$12507$1bEyPh core-prim . &i/o-read-rtd)
        (g$12506$1bEyPh core-prim . &i/o-rcd)
        (g$12505$1bEyPh core-prim . &i/o-rtd)
        (g$12504$1bEyPh core-prim . &undefined-rcd)
        (g$12503$1bEyPh core-prim . &undefined-rtd)
        (g$12502$1bEyPh core-prim . &syntax-rcd)
        (g$12501$1bEyPh core-prim . &syntax-rtd)
        (g$12500$1bEyPh core-prim . &lexical-rcd)
        (g$12499$1bEyPh core-prim . &lexical-rtd)
        (g$12498$1bEyPh core-prim . &implementation-restriction-rcd)
        (g$12497$1bEyPh core-prim . &implementation-restriction-rtd)
        (g$12496$1bEyPh core-prim . &non-continuable-rcd)
        (g$12495$1bEyPh core-prim . &non-continuable-rtd)
        (g$12494$1bEyPh core-prim . &who-rcd)
        (g$12493$1bEyPh core-prim . &who-rtd)
        (g$12492$1bEyPh core-prim . &irritants-rcd)
        (g$12491$1bEyPh core-prim . &irritants-rtd)
        (g$12490$1bEyPh core-prim . &assertion-rcd)
        (g$12489$1bEyPh core-prim . &assertion-rtd)
        (g$12488$1bEyPh core-prim . &violation-rcd)
        (g$12487$1bEyPh core-prim . &violation-rtd)
        (g$12486$1bEyPh core-prim . &error-rcd)
        (g$12485$1bEyPh core-prim . &error-rtd)
        (g$12484$1bEyPh core-prim . &serious-rcd)
        (g$12483$1bEyPh core-prim . &serious-rtd)
        (g$12482$1bEyPh core-prim . &warning-rcd)
        (g$12481$1bEyPh core-prim . &warning-rtd)
        (g$12480$1bEyPh core-prim . &message-rcd)
        (g$12479$1bEyPh core-prim . &message-rtd)
        (g$12478$1bEyPh core-prim . &condition-rcd)
        (g$12477$1bEyPh core-prim . &condition-rtd)
        (g$12476$1bEyPh core-prim . library-letrec*)
        (g$12475$1bEyPh core-prim . annotation-stripped)
        (g$12474$1bEyPh core-prim . annotation-source)
        (g$12473$1bEyPh core-prim . annotation-expression)
        (g$12472$1bEyPh core-prim . annotation?)
        (g$12471$1bEyPh core-prim . read-annotated)
        (g$12470$1bEyPh core-prim . tanh)
        (g$12469$1bEyPh core-prim . cosh)
        (g$12468$1bEyPh core-prim . sinh)
        (g$12467$1bEyPh core-prim . make-guid)
        (g$12466$1bEyPh core-prim . unspecified?)
        (g$12465$1bEyPh core-prim . make-trace)
        (g$12464$1bEyPh core-prim . make-list)
        (g$12463$1bEyPh core-prim . last-pair)
        (g$12462$1bEyPh core-prim . load-r5rs)
        (g$12461$1bEyPh core-prim . license)
        (g$12460$1bEyPh core-prim . stacktrace)
        (g$11882$1bEyPh core-prim . ironscheme-build)
        (g$12459$1bEyPh core-prim . define-clr-class-internal)
        (g$12458$1bEyPh core-prim . clr-field-set!-internal)
        (g$12457$1bEyPh core-prim . clr-field-get-internal)
        (g$12456$1bEyPh core-prim . clr-cast-internal)
        (g$12455$1bEyPh core-prim . clr-call-internal)
        (g$12454$1bEyPh core-prim . clr-new-internal)
        (g$12453$1bEyPh core-prim . clr-new-array-internal)
        (g$12452$1bEyPh core-prim . clr-is-internal)
        (g$12451$1bEyPh core-prim . clr-reference-internal)
        (g$12450$1bEyPh core-prim . clr-using-internal)
        (g$12449$1bEyPh core-prim . clr-clear-usings-internal)
        (g$8938$1bEyPh core-prim . syntax-error)
        (g$8811$1bEyPh core-prim . syntax-dispatch)
        (g$12448$1bEyPh core-prim . compile-core)
        (g$12447$1bEyPh core-prim . eval-core)
        (g$12446$1bEyPh core-prim . set-symbol-value!)
        (g$12445$1bEyPh core-prim . symbol-value)
        (g$12444$1bEyPh core-prim . ungensym)
        (g$12443$1bEyPh core-prim . gensym)
        (g$12442$1bEyPh core-prim . void)
        (g$12441$1bEyPh core-prim . load-serialized-library)
        (g$12440$1bEyPh core-prim . serialize-library)
        (g$11884$1bEyPh core-prim . compile-system-libraries)
        (g$11886$1bEyPh core-prim . compile->closure)
        (g$11885$1bEyPh core-prim . compile)
        (g$11881$1bEyPh core-prim . load)
        (g$8947$1bEyPh core-prim . interaction-environment)
        (g$12439$1bEyPh core-prim . char-ready?)
        (g$12438$1bEyPh core-prim . string-upcase)
        (g$12437$1bEyPh core-prim . string-titlecase)
        (g$12436$1bEyPh core-prim . string-normalize-nfkd)
        (g$12435$1bEyPh core-prim . string-normalize-nfkc)
        (g$12434$1bEyPh core-prim . string-normalize-nfd)
        (g$12433$1bEyPh core-prim . string-normalize-nfc)
        (g$12432$1bEyPh core-prim . string-foldcase)
        (g$12431$1bEyPh core-prim . string-downcase)
        (g$7017$1bEyPh core-prim . string-ci>?)
        (g$7019$1bEyPh core-prim . string-ci>=?)
        (g$7015$1bEyPh core-prim . string-ci=?)
        (g$7016$1bEyPh core-prim . string-ci<?)
        (g$7018$1bEyPh core-prim . string-ci<=?)
        (g$12430$1bEyPh core-prim . char-whitespace?)
        (g$12429$1bEyPh core-prim . char-upper-case?)
        (g$12428$1bEyPh core-prim . char-title-case?)
        (g$12427$1bEyPh core-prim . char-numeric?)
        (g$12426$1bEyPh core-prim . char-lower-case?)
        (g$12425$1bEyPh core-prim . char-general-category)
        (g$12424$1bEyPh core-prim . char-upcase)
        (g$12423$1bEyPh core-prim . char-titlecase)
        (g$12422$1bEyPh core-prim . char-foldcase)
        (g$12421$1bEyPh core-prim . char-downcase)
        (g$7068$1bEyPh core-prim . char-ci>?)
        (g$7070$1bEyPh core-prim . char-ci>=?)
        (g$7066$1bEyPh core-prim . char-ci=?)
        (g$7067$1bEyPh core-prim . char-ci<?)
        (g$7069$1bEyPh core-prim . char-ci<=?)
        (g$12420$1bEyPh core-prim . char-alphabetic?)
        (g$8548$1bEyPh core-prim . variable-transformer-procedure)
        (g$8547$1bEyPh core-prim . variable-transformer?)
        (g$8546$1bEyPh core-prim . make-variable-transformer)
        (g$8942$1bEyPh core-prim . identifier?)
        (g$8931$1bEyPh core-prim . generate-temporaries)
        (g$8932$1bEyPh core-prim . free-identifier=?)
        (g$8944$1bEyPh core-prim . syntax->datum)
        (g$8943$1bEyPh core-prim . datum->syntax)
        (g$8933$1bEyPh core-prim . bound-identifier=?)
        (g$12419$1bEyPh core-prim . record-type-descriptor?)
        (g$12418$1bEyPh core-prim . record-predicate)
        (g$12417$1bEyPh core-prim . record-mutator)
        (g$12416$1bEyPh core-prim . record-constructor)
        (g$12415$1bEyPh core-prim . record-accessor)
        (g$12414$1bEyPh core-prim . make-record-type-descriptor)
        (g$12413$1bEyPh core-prim . make-record-constructor-descriptor)
        (g$12412$1bEyPh core-prim . record?)
        (g$12411$1bEyPh core-prim . record-type-uid)
        (g$12410$1bEyPh core-prim . record-type-sealed?)
        (g$12409$1bEyPh core-prim . record-type-parent)
        (g$12408$1bEyPh core-prim . record-type-opaque?)
        (g$12407$1bEyPh core-prim . record-type-name)
        (g$12406$1bEyPh core-prim . record-type-generative?)
        (g$12405$1bEyPh core-prim . record-type-field-names)
        (g$12404$1bEyPh core-prim . record-rtd)
        (g$12403$1bEyPh core-prim . record-field-mutable?)
        (g$6378$1bEyPh core-prim . delete-file)
        (g$6377$1bEyPh core-prim . file-exists?)
        (g$12402$1bEyPh core-prim . vector-sort!)
        (g$12401$1bEyPh core-prim . vector-sort)
        (g$6891$1bEyPh core-prim . list-sort)
        (g$12400$1bEyPh core-prim . symbol-hash)
        (g$12399$1bEyPh core-prim . string-ci-hash)
        (g$12398$1bEyPh core-prim . string-hash)
        (g$12397$1bEyPh core-prim . equal-hash)
        (g$12396$1bEyPh core-prim . hashtable-equivalence-function)
        (g$12395$1bEyPh core-prim . make-hashtable)
        (g$12394$1bEyPh core-prim . hashtable-hash-function)
        (g$6345$1bEyPh core-prim . make-eqv-hashtable)
        (g$6344$1bEyPh core-prim . make-eq-hashtable)
        (g$12393$1bEyPh core-prim . hashtable?)
        (g$6351$1bEyPh core-prim . hashtable-update!)
        (g$6346$1bEyPh core-prim . hashtable-size)
        (g$6348$1bEyPh core-prim . hashtable-set!)
        (g$6347$1bEyPh core-prim . hashtable-ref)
        (g$12392$1bEyPh core-prim . hashtable-mutable?)
        (g$12391$1bEyPh core-prim . hashtable-keys)
        (g$12390$1bEyPh core-prim . hashtable-entries)
        (g$6349$1bEyPh core-prim . hashtable-delete!)
        (g$12389$1bEyPh core-prim . hashtable-copy)
        (g$6350$1bEyPh core-prim . hashtable-contains?)
        (g$6352$1bEyPh core-prim . hashtable-clear!)
        (g$7487$1bEyPh core-prim . call-with-output-file)
        (g$7486$1bEyPh core-prim . call-with-input-file)
        (g$12388$1bEyPh core-prim . write-char)
        (g$12387$1bEyPh core-prim . write)
        (g$7485$1bEyPh core-prim . with-output-to-file)
        (g$7484$1bEyPh core-prim . with-input-from-file)
        (g$12386$1bEyPh core-prim . read-char)
        (g$12385$1bEyPh core-prim . read)
        (g$12384$1bEyPh core-prim . peek-char)
        (g$12383$1bEyPh core-prim . open-output-file)
        (g$12382$1bEyPh core-prim . open-input-file)
        (g$12381$1bEyPh core-prim . newline)
        (g$12380$1bEyPh core-prim . display)
        (g$12379$1bEyPh core-prim . close-output-port)
        (g$12378$1bEyPh core-prim . close-input-port)
        (g$12377$1bEyPh core-prim . eof-object?)
        (g$12376$1bEyPh core-prim . eof-object)
        (g$12375$1bEyPh core-prim . current-error-port)
        (g$12374$1bEyPh core-prim . current-output-port)
        (g$12373$1bEyPh core-prim . current-input-port)
        (g$12372$1bEyPh core-prim . output-port?)
        (g$12371$1bEyPh core-prim . input-port?)
        (g$12370$1bEyPh core-prim . utf-8-codec)
        (g$12369$1bEyPh core-prim . utf-16-codec)
        (g$12368$1bEyPh core-prim . transcoder-error-handling-mode)
        (g$12367$1bEyPh core-prim . transcoder-eol-style)
        (g$12366$1bEyPh core-prim . transcoder-codec)
        (g$12365$1bEyPh core-prim . transcoded-port)
        (g$12364$1bEyPh core-prim . textual-port?)
        (g$12363$1bEyPh core-prim . string->bytevector)
        (g$12362$1bEyPh core-prim . standard-output-port)
        (g$12361$1bEyPh core-prim . standard-input-port)
        (g$12360$1bEyPh core-prim . standard-error-port)
        (g$12359$1bEyPh core-prim . set-port-position!)
        (g$12358$1bEyPh core-prim . put-u8)
        (g$12357$1bEyPh core-prim . put-string)
        (g$12356$1bEyPh core-prim . put-datum)
        (g$12355$1bEyPh core-prim . put-char)
        (g$12354$1bEyPh core-prim . put-bytevector)
        (g$7463$1bEyPh core-prim . port?)
        (g$12353$1bEyPh core-prim . port-transcoder)
        (g$12352$1bEyPh core-prim . port-position)
        (g$12351$1bEyPh core-prim . port-has-set-port-position!?)
        (g$12350$1bEyPh core-prim . port-has-port-position?)
        (g$12349$1bEyPh core-prim . port-eof?)
        (g$12348$1bEyPh core-prim . output-port-buffer-mode)
        (g$7462$1bEyPh core-prim . open-string-output-port)
        (g$12347$1bEyPh core-prim . open-string-input-port)
        (g$12346$1bEyPh core-prim . open-file-output-port)
        (g$12345$1bEyPh core-prim . open-file-input/output-port)
        (g$12344$1bEyPh core-prim . open-file-input-port)
        (g$12343$1bEyPh core-prim . open-bytevector-output-port)
        (g$12342$1bEyPh core-prim . open-bytevector-input-port)
        (g$12341$1bEyPh core-prim . native-transcoder)
        (g$12340$1bEyPh core-prim . native-eol-style)
        (g$12339$1bEyPh core-prim . make-transcoder)
        (g$12338$1bEyPh core-prim . latin-1-codec)
        (g$7319$1bEyPh core-prim . make-i/o-write-error)
        (g$7305$1bEyPh core-prim . make-i/o-read-error)
        (g$7424$1bEyPh core-prim . make-i/o-port-error)
        (g$7334$1bEyPh core-prim . make-i/o-invalid-position-error)
        (g$7351$1bEyPh core-prim . make-i/o-filename-error)
        (g$7367$1bEyPh core-prim . make-i/o-file-protection-error)
        (g$7381$1bEyPh core-prim . make-i/o-file-is-read-only-error)
        (g$7409$1bEyPh core-prim . make-i/o-file-does-not-exist-error)
        (g$7395$1bEyPh core-prim . make-i/o-file-already-exists-error)
        (g$7291$1bEyPh core-prim . make-i/o-error)
        (g$7455$1bEyPh core-prim . make-i/o-encoding-error)
        (g$7440$1bEyPh core-prim . make-i/o-decoding-error)
        (g$12337$1bEyPh core-prim . make-custom-textual-output-port)
        (g$12336$1bEyPh core-prim . make-custom-textual-input/output-port)
        (g$12335$1bEyPh core-prim . make-custom-textual-input-port)
        (g$12334$1bEyPh core-prim . make-custom-binary-output-port)
        (g$12333$1bEyPh core-prim . make-custom-binary-input/output-port)
        (g$12332$1bEyPh core-prim . make-custom-binary-input-port)
        (g$12331$1bEyPh core-prim . make-bytevector)
        (g$12330$1bEyPh core-prim . lookahead-u8)
        (g$12329$1bEyPh core-prim . lookahead-char)
        (g$7320$1bEyPh core-prim . i/o-write-error?)
        (g$7306$1bEyPh core-prim . i/o-read-error?)
        (g$7426$1bEyPh core-prim . i/o-port-error?)
        (g$7336$1bEyPh core-prim . i/o-invalid-position-error?)
        (g$7337$1bEyPh core-prim . i/o-error-position)
        (g$7353$1bEyPh core-prim . i/o-filename-error?)
        (g$7368$1bEyPh core-prim . i/o-file-protection-error?)
        (g$7382$1bEyPh core-prim . i/o-file-is-read-only-error?)
        (g$7410$1bEyPh core-prim . i/o-file-does-not-exist-error?)
        (g$7396$1bEyPh core-prim . i/o-file-already-exists-error?)
        (g$7292$1bEyPh core-prim . i/o-error?)
        (g$7427$1bEyPh core-prim . i/o-error-port)
        (g$7354$1bEyPh core-prim . i/o-error-filename)
        (g$7457$1bEyPh core-prim . i/o-encoding-error?)
        (g$7458$1bEyPh core-prim . i/o-encoding-error-char)
        (g$7441$1bEyPh core-prim . i/o-decoding-error?)
        (g$12328$1bEyPh core-prim . get-u8)
        (g$12327$1bEyPh core-prim . get-string-n!)
        (g$12326$1bEyPh core-prim . get-string-n)
        (g$12325$1bEyPh core-prim . get-string-all)
        (g$12324$1bEyPh core-prim . get-line)
        (g$12323$1bEyPh core-prim . get-datum)
        (g$12322$1bEyPh core-prim . get-char)
        (g$12321$1bEyPh core-prim . get-bytevector-some)
        (g$12320$1bEyPh core-prim . get-bytevector-n!)
        (g$12319$1bEyPh core-prim . get-bytevector-n)
        (g$12318$1bEyPh core-prim . get-bytevector-all)
        (g$12317$1bEyPh core-prim . flush-output-port)
        (g$12316$1bEyPh core-prim . close-port)
        (g$12315$1bEyPh core-prim . call-with-string-output-port)
        (g$12314$1bEyPh core-prim . call-with-port)
        (g$12313$1bEyPh core-prim . call-with-bytevector-output-port)
        (g$12312$1bEyPh core-prim . bytevector->string)
        (g$12311$1bEyPh core-prim . buffer-mode?)
        (g$12310$1bEyPh core-prim . binary-port?)
        (g$8922$1bEyPh core-prim . scheme-report-environment)
        (g$6871$1bEyPh core-prim . quotient)
        (g$8921$1bEyPh core-prim . null-environment)
        (g$6872$1bEyPh core-prim . remainder)
        (g$6873$1bEyPh core-prim . modulo)
        (g$12309$1bEyPh core-prim . inexact->exact)
        (g$6875$1bEyPh core-prim . force)
        (g$12308$1bEyPh core-prim . exact->inexact)
        (g$12307$1bEyPh core-prim . exit)
        (g$11878$1bEyPh core-prim . command-line)
        (g$12306$1bEyPh core-prim . string-fill!)
        (g$12305$1bEyPh core-prim . string-set!)
        (g$12304$1bEyPh core-prim . set-cdr!)
        (g$12303$1bEyPh core-prim . set-car!)
        (g$6458$1bEyPh core-prim . remove)
        (g$6459$1bEyPh core-prim . remv)
        (g$6444$1bEyPh core-prim . remp)
        (g$6460$1bEyPh core-prim . remq)
        (g$6443$1bEyPh core-prim . partition)
        (g$12302$1bEyPh core-prim . memv)
        (g$12301$1bEyPh core-prim . memq)
        (g$6450$1bEyPh core-prim . memp)
        (g$6449$1bEyPh core-prim . member)
        (g$6454$1bEyPh core-prim . exists)
        (g$6453$1bEyPh core-prim . for-all)
        (g$6457$1bEyPh core-prim . fold-right)
        (g$6456$1bEyPh core-prim . fold-left)
        (g$6442$1bEyPh core-prim . find)
        (g$6445$1bEyPh core-prim . filter)
        (g$6455$1bEyPh core-prim . cons*)
        (g$6446$1bEyPh core-prim . assv)
        (g$12300$1bEyPh core-prim . assq)
        (g$6448$1bEyPh core-prim . assp)
        (g$6447$1bEyPh core-prim . assoc)
        (g$12299$1bEyPh core-prim . with-exception-handler)
        (g$12298$1bEyPh core-prim . raise-continuable)
        (g$12297$1bEyPh core-prim . raise)
        (g$8924$1bEyPh core-prim . eval)
        (g$8920$1bEyPh core-prim . environment)
        (g$7544$1bEyPh core-prim . make-enumeration)
        (g$7551$1bEyPh core-prim . enum-set=?)
        (g$7545$1bEyPh core-prim . enum-set-universe)
        (g$7552$1bEyPh core-prim . enum-set-union)
        (g$7550$1bEyPh core-prim . enum-set-subset?)
        (g$7556$1bEyPh core-prim . enum-set-projection)
        (g$7549$1bEyPh core-prim . enum-set-member?)
        (g$7553$1bEyPh core-prim . enum-set-intersection)
        (g$7546$1bEyPh core-prim . enum-set-indexer)
        (g$7554$1bEyPh core-prim . enum-set-difference)
        (g$7547$1bEyPh core-prim . enum-set-constructor)
        (g$7555$1bEyPh core-prim . enum-set-complement)
        (g$7548$1bEyPh core-prim . enum-set->list)
        (g$6782$1bEyPh core-prim . who-condition?)
        (g$6693$1bEyPh core-prim . warning?)
        (g$6735$1bEyPh core-prim . violation?)
        (g$6859$1bEyPh core-prim . undefined-violation?)
        (g$6843$1bEyPh core-prim . syntax-violation?)
        (g$6845$1bEyPh core-prim . syntax-violation-subform)
        (g$6844$1bEyPh core-prim . syntax-violation-form)
        (g$8941$1bEyPh core-prim . syntax-violation)
        (g$12296$1bEyPh core-prim . simple-conditions)
        (g$6707$1bEyPh core-prim . serious-condition?)
        (g$6797$1bEyPh core-prim . non-continuable-violation?)
        (g$6678$1bEyPh core-prim . message-condition?)
        (g$6780$1bEyPh core-prim . make-who-condition)
        (g$6692$1bEyPh core-prim . make-warning)
        (g$6734$1bEyPh core-prim . make-violation)
        (g$6858$1bEyPh core-prim . make-undefined-violation)
        (g$6840$1bEyPh core-prim . make-syntax-violation)
        (g$6706$1bEyPh core-prim . make-serious-condition)
        (g$6796$1bEyPh core-prim . make-non-continuable-violation)
        (g$6676$1bEyPh core-prim . make-message-condition)
        (g$6824$1bEyPh core-prim . make-lexical-violation)
        (g$6763$1bEyPh core-prim . make-irritants-condition)
        (g$6810$1bEyPh core-prim . make-implementation-restriction-violation)
        (g$6720$1bEyPh core-prim . make-error)
        (g$6748$1bEyPh core-prim . make-assertion-violation)
        (g$6825$1bEyPh core-prim . lexical-violation?)
        (g$6765$1bEyPh core-prim . irritants-condition?)
        (g$6811$1bEyPh core-prim . implementation-restriction-violation?)
        (g$6721$1bEyPh core-prim . error?)
        (g$6783$1bEyPh core-prim . condition-who)
        (g$12295$1bEyPh core-prim . condition-predicate)
        (g$6679$1bEyPh core-prim . condition-message)
        (g$6766$1bEyPh core-prim . condition-irritants)
        (g$12294$1bEyPh core-prim . condition-accessor)
        (g$12293$1bEyPh core-prim . condition)
        (g$6749$1bEyPh core-prim . assertion-violation?)
        (g$12292$1bEyPh core-prim . condition?)
        (g$12291$1bEyPh core-prim . utf32->string)
        (g$12290$1bEyPh core-prim . utf16->string)
        (g$12289$1bEyPh core-prim . utf8->string)
        (g$12288$1bEyPh core-prim . uint-list->bytevector)
        (g$12287$1bEyPh core-prim . u8-list->bytevector)
        (g$12286$1bEyPh core-prim . string->utf8)
        (g$12285$1bEyPh core-prim . string->utf32)
        (g$12284$1bEyPh core-prim . string->utf16)
        (g$12283$1bEyPh core-prim . sint-list->bytevector)
        (g$6534$1bEyPh core-prim . native-endianness)
        (g$12282$1bEyPh core-prim . bytevector?)
        (g$12281$1bEyPh core-prim . bytevector=?)
        (g$12280$1bEyPh core-prim . bytevector-uint-set!)
        (g$12279$1bEyPh core-prim . bytevector-uint-ref)
        (g$12278$1bEyPh core-prim . bytevector-u8-set!)
        (g$12277$1bEyPh core-prim . bytevector-u8-ref)
        (g$6555$1bEyPh core-prim . bytevector-u64-set!)
        (g$6551$1bEyPh core-prim . bytevector-u64-ref)
        (g$6557$1bEyPh core-prim . bytevector-u64-native-set!)
        (g$6553$1bEyPh core-prim . bytevector-u64-native-ref)
        (g$6547$1bEyPh core-prim . bytevector-u32-set!)
        (g$6543$1bEyPh core-prim . bytevector-u32-ref)
        (g$6549$1bEyPh core-prim . bytevector-u32-native-set!)
        (g$6545$1bEyPh core-prim . bytevector-u32-native-ref)
        (g$6539$1bEyPh core-prim . bytevector-u16-set!)
        (g$6535$1bEyPh core-prim . bytevector-u16-ref)
        (g$6541$1bEyPh core-prim . bytevector-u16-native-set!)
        (g$6537$1bEyPh core-prim . bytevector-u16-native-ref)
        (g$12276$1bEyPh core-prim . bytevector-sint-set!)
        (g$12275$1bEyPh core-prim . bytevector-sint-ref)
        (g$12274$1bEyPh core-prim . bytevector-s8-set!)
        (g$12273$1bEyPh core-prim . bytevector-s8-ref)
        (g$6556$1bEyPh core-prim . bytevector-s64-set!)
        (g$6552$1bEyPh core-prim . bytevector-s64-ref)
        (g$6558$1bEyPh core-prim . bytevector-s64-native-set!)
        (g$6554$1bEyPh core-prim . bytevector-s64-native-ref)
        (g$6548$1bEyPh core-prim . bytevector-s32-set!)
        (g$6544$1bEyPh core-prim . bytevector-s32-ref)
        (g$6550$1bEyPh core-prim . bytevector-s32-native-set!)
        (g$6546$1bEyPh core-prim . bytevector-s32-native-ref)
        (g$6540$1bEyPh core-prim . bytevector-s16-set!)
        (g$6536$1bEyPh core-prim . bytevector-s16-ref)
        (g$6542$1bEyPh core-prim . bytevector-s16-native-set!)
        (g$6538$1bEyPh core-prim . bytevector-s16-native-ref)
        (g$12272$1bEyPh core-prim . bytevector-length)
        (g$12271$1bEyPh core-prim . bytevector-ieee-single-set!)
        (g$12270$1bEyPh core-prim . bytevector-ieee-single-ref)
        (g$6561$1bEyPh core-prim . bytevector-ieee-single-native-set!)
        (g$6559$1bEyPh core-prim . bytevector-ieee-single-native-ref)
        (g$12269$1bEyPh core-prim . bytevector-ieee-double-set!)
        (g$12268$1bEyPh core-prim . bytevector-ieee-double-ref)
        (g$6562$1bEyPh core-prim . bytevector-ieee-double-native-set!)
        (g$6560$1bEyPh core-prim . bytevector-ieee-double-native-ref)
        (g$12267$1bEyPh core-prim . bytevector-fill!)
        (g$12266$1bEyPh core-prim . bytevector-copy!)
        (g$12265$1bEyPh core-prim . bytevector-copy)
        (g$12264$1bEyPh core-prim . bytevector->uint-list)
        (g$12263$1bEyPh core-prim . bytevector->u8-list)
        (g$12262$1bEyPh core-prim . bytevector->sint-list)
        (g$7277$1bEyPh core-prim . no-nans-violation?)
        (g$7263$1bEyPh core-prim . no-infinities-violation?)
        (g$7276$1bEyPh core-prim . make-no-nans-violation)
        (g$7262$1bEyPh core-prim . make-no-infinities-violation)
        (g$12261$1bEyPh core-prim . real->flonum)
        (g$12260$1bEyPh core-prim . flzero?)
        (g$12259$1bEyPh core-prim . fltruncate)
        (g$12258$1bEyPh core-prim . fltan)
        (g$12257$1bEyPh core-prim . flsqrt)
        (g$12256$1bEyPh core-prim . flsin)
        (g$12255$1bEyPh core-prim . flround)
        (g$12254$1bEyPh core-prim . flpositive?)
        (g$12253$1bEyPh core-prim . flonum?)
        (g$12252$1bEyPh core-prim . flodd?)
        (g$12251$1bEyPh core-prim . flnumerator)
        (g$12250$1bEyPh core-prim . flnegative?)
        (g$12249$1bEyPh core-prim . flnan?)
        (g$12248$1bEyPh core-prim . flmod0)
        (g$12247$1bEyPh core-prim . flmod)
        (g$12246$1bEyPh core-prim . flmin)
        (g$12245$1bEyPh core-prim . flmax)
        (g$12244$1bEyPh core-prim . fllog)
        (g$12243$1bEyPh core-prim . flinteger?)
        (g$12242$1bEyPh core-prim . flinfinite?)
        (g$12241$1bEyPh core-prim . flfloor)
        (g$12240$1bEyPh core-prim . flfinite?)
        (g$12239$1bEyPh core-prim . flexpt)
        (g$12238$1bEyPh core-prim . flexp)
        (g$12237$1bEyPh core-prim . fleven?)
        (g$12236$1bEyPh core-prim . fldiv0-and-mod0)
        (g$12235$1bEyPh core-prim . fldiv0)
        (g$12234$1bEyPh core-prim . fldiv-and-mod)
        (g$12233$1bEyPh core-prim . fldiv)
        (g$12232$1bEyPh core-prim . fldenominator)
        (g$12231$1bEyPh core-prim . flcos)
        (g$12230$1bEyPh core-prim . flceiling)
        (g$12229$1bEyPh core-prim . flatan)
        (g$12228$1bEyPh core-prim . flasin)
        (g$12227$1bEyPh core-prim . flacos)
        (g$12226$1bEyPh core-prim . flabs)
        (g$12225$1bEyPh core-prim . fl>?)
        (g$12224$1bEyPh core-prim . fl>=?)
        (g$12223$1bEyPh core-prim . fl=?)
        (g$12222$1bEyPh core-prim . fl<?)
        (g$12221$1bEyPh core-prim . fl<=?)
        (g$12220$1bEyPh core-prim . fl/)
        (g$12219$1bEyPh core-prim . fl-)
        (g$12218$1bEyPh core-prim . fl+)
        (g$12217$1bEyPh core-prim . fl*)
        (g$12216$1bEyPh core-prim . fixnum->flonum)
        (g$12215$1bEyPh core-prim . fxzero?)
        (g$12214$1bEyPh core-prim . fxxor)
        (g$7208$1bEyPh core-prim . fxrotate-bit-field)
        (g$12213$1bEyPh core-prim . fxreverse-bit-field)
        (g$12212$1bEyPh core-prim . fxpositive?)
        (g$12211$1bEyPh core-prim . fxodd?)
        (g$12210$1bEyPh core-prim . fxnot)
        (g$12209$1bEyPh core-prim . fxnegative?)
        (g$12208$1bEyPh core-prim . fxmod0)
        (g$12207$1bEyPh core-prim . fxmod)
        (g$12206$1bEyPh core-prim . fxmin)
        (g$12205$1bEyPh core-prim . fxmax)
        (g$12204$1bEyPh core-prim . fxlength)
        (g$12203$1bEyPh core-prim . fxior)
        (g$7202$1bEyPh core-prim . fxif)
        (g$12202$1bEyPh core-prim . fxfirst-bit-set)
        (g$12201$1bEyPh core-prim . fxeven?)
        (g$12200$1bEyPh core-prim . fxdiv0-and-mod0)
        (g$12199$1bEyPh core-prim . fxdiv0)
        (g$12198$1bEyPh core-prim . fxdiv-and-mod)
        (g$12197$1bEyPh core-prim . fxdiv)
        (g$7205$1bEyPh core-prim . fxcopy-bit-field)
        (g$7203$1bEyPh core-prim . fxcopy-bit)
        (g$12196$1bEyPh core-prim . fxbit-set?)
        (g$7204$1bEyPh core-prim . fxbit-field)
        (g$12195$1bEyPh core-prim . fxbit-count)
        (g$7207$1bEyPh core-prim . fxarithmetic-shift-right)
        (g$7206$1bEyPh core-prim . fxarithmetic-shift-left)
        (g$12194$1bEyPh core-prim . fxarithmetic-shift)
        (g$12193$1bEyPh core-prim . fxand)
        (g$12192$1bEyPh core-prim . fx>?)
        (g$12191$1bEyPh core-prim . fx>=?)
        (g$12190$1bEyPh core-prim . fx=?)
        (g$12189$1bEyPh core-prim . fx<?)
        (g$12188$1bEyPh core-prim . fx<=?)
        (g$12187$1bEyPh core-prim . fx-/carry)
        (g$12186$1bEyPh core-prim . fx-)
        (g$12185$1bEyPh core-prim . fx+/carry)
        (g$12184$1bEyPh core-prim . fx+)
        (g$12183$1bEyPh core-prim . fx*/carry)
        (g$12182$1bEyPh core-prim . fx*)
        (g$12181$1bEyPh core-prim . greatest-fixnum)
        (g$12180$1bEyPh core-prim . least-fixnum)
        (g$12179$1bEyPh core-prim . fixnum-width)
        (g$12178$1bEyPh core-prim . fixnum?)
        (g$7160$1bEyPh core-prim . bitwise-rotate-bit-field)
        (g$12177$1bEyPh core-prim . bitwise-reverse-bit-field)
        (g$12176$1bEyPh core-prim . bitwise-length)
        (g$7154$1bEyPh core-prim . bitwise-if)
        (g$12175$1bEyPh core-prim . bitwise-first-bit-set)
        (g$7157$1bEyPh core-prim . bitwise-copy-bit-field)
        (g$7155$1bEyPh core-prim . bitwise-copy-bit)
        (g$12174$1bEyPh core-prim . bitwise-bit-set?)
        (g$12173$1bEyPh core-prim . bitwise-bit-field)
        (g$12172$1bEyPh core-prim . bitwise-bit-count)
        (g$12171$1bEyPh core-prim . bitwise-xor)
        (g$12170$1bEyPh core-prim . bitwise-ior)
        (g$12169$1bEyPh core-prim . bitwise-and)
        (g$12168$1bEyPh core-prim . bitwise-not)
        (g$7159$1bEyPh core-prim . bitwise-arithmetic-shift-right)
        (g$7158$1bEyPh core-prim . bitwise-arithmetic-shift-left)
        (g$12167$1bEyPh core-prim . bitwise-arithmetic-shift)
        (g$12166$1bEyPh core-prim . zero?)
        (g$12165$1bEyPh core-prim . vector?)
        (g$12164$1bEyPh core-prim . vector-set!)
        (g$12163$1bEyPh core-prim . vector-ref)
        (g$12162$1bEyPh core-prim . vector-map)
        (g$12161$1bEyPh core-prim . vector-length)
        (g$12160$1bEyPh core-prim . vector-for-each)
        (g$12159$1bEyPh core-prim . vector-fill!)
        (g$12158$1bEyPh core-prim . vector->list)
        (g$12157$1bEyPh core-prim . vector)
        (g$12156$1bEyPh core-prim . values)
        (g$12155$1bEyPh core-prim . truncate)
        (g$12154$1bEyPh core-prim . tan)
        (g$12153$1bEyPh core-prim . symbol?)
        (g$5843$1bEyPh core-prim . symbol=?)
        (g$12152$1bEyPh core-prim . symbol->string)
        (g$12151$1bEyPh core-prim . substring)
        (g$12150$1bEyPh core-prim . string?)
        (g$5840$1bEyPh core-prim . string>?)
        (g$5842$1bEyPh core-prim . string>=?)
        (g$5838$1bEyPh core-prim . string=?)
        (g$5839$1bEyPh core-prim . string<?)
        (g$5841$1bEyPh core-prim . string<=?)
        (g$12149$1bEyPh core-prim . string-ref)
        (g$12148$1bEyPh core-prim . string-length)
        (g$12147$1bEyPh core-prim . string-for-each)
        (g$12146$1bEyPh core-prim . string-copy)
        (g$12145$1bEyPh core-prim . string-append)
        (g$12144$1bEyPh core-prim . string->symbol)
        (g$12143$1bEyPh core-prim . string->number)
        (g$12142$1bEyPh core-prim . string->list)
        (g$12141$1bEyPh core-prim . string)
        (g$12140$1bEyPh core-prim . sqrt)
        (g$12139$1bEyPh core-prim . sin)
        (g$12138$1bEyPh core-prim . round)
        (g$12137$1bEyPh core-prim . reverse)
        (g$12136$1bEyPh core-prim . real?)
        (g$12135$1bEyPh core-prim . real-valued?)
        (g$12134$1bEyPh core-prim . real-part)
        (g$5896$1bEyPh core-prim . rationalize)
        (g$12133$1bEyPh core-prim . rational?)
        (g$12132$1bEyPh core-prim . rational-valued?)
        (g$12131$1bEyPh core-prim . procedure?)
        (g$12130$1bEyPh core-prim . positive?)
        (g$12129$1bEyPh core-prim . pair?)
        (g$12128$1bEyPh core-prim . odd?)
        (g$12127$1bEyPh core-prim . numerator)
        (g$12126$1bEyPh core-prim . number?)
        (g$12125$1bEyPh core-prim . number->string)
        (g$12124$1bEyPh core-prim . null?)
        (g$12123$1bEyPh core-prim . not)
        (g$12122$1bEyPh core-prim . negative?)
        (g$12121$1bEyPh core-prim . nan?)
        (g$12120$1bEyPh core-prim . min)
        (g$12119$1bEyPh core-prim . max)
        (g$12118$1bEyPh core-prim . map)
        (g$12117$1bEyPh core-prim . make-vector)
        (g$12116$1bEyPh core-prim . make-string)
        (g$12115$1bEyPh core-prim . make-rectangular)
        (g$12114$1bEyPh core-prim . make-polar)
        (g$12113$1bEyPh core-prim . magnitude)
        (g$12112$1bEyPh core-prim . log)
        (g$12111$1bEyPh core-prim . list?)
        (g$12110$1bEyPh core-prim . list-tail)
        (g$12109$1bEyPh core-prim . list-ref)
        (g$12108$1bEyPh core-prim . list->vector)
        (g$12107$1bEyPh core-prim . list->string)
        (g$12106$1bEyPh core-prim . list)
        (g$12105$1bEyPh core-prim . length)
        (g$12104$1bEyPh core-prim . lcm)
        (g$12103$1bEyPh core-prim . integer?)
        (g$12102$1bEyPh core-prim . integer-valued?)
        (g$12101$1bEyPh core-prim . integer->char)
        (g$12100$1bEyPh core-prim . infinite?)
        (g$12099$1bEyPh core-prim . inexact?)
        (g$12098$1bEyPh core-prim . inexact)
        (g$12097$1bEyPh core-prim . imag-part)
        (g$12096$1bEyPh core-prim . gcd)
        (g$12095$1bEyPh core-prim . for-each)
        (g$12094$1bEyPh core-prim . floor)
        (g$12093$1bEyPh core-prim . finite?)
        (g$12092$1bEyPh core-prim . expt)
        (g$12091$1bEyPh core-prim . exp)
        (g$12090$1bEyPh core-prim . exact?)
        (g$12089$1bEyPh core-prim . exact-integer-sqrt)
        (g$12088$1bEyPh core-prim . exact)
        (g$12087$1bEyPh core-prim . even?)
        (g$12086$1bEyPh core-prim . error)
        (g$12085$1bEyPh core-prim . eqv?)
        (g$12084$1bEyPh core-prim . equal?)
        (g$12083$1bEyPh core-prim . eq?)
        (g$12082$1bEyPh core-prim . dynamic-wind)
        (g$12081$1bEyPh core-prim . div0-and-mod0)
        (g$12080$1bEyPh core-prim . mod0)
        (g$12079$1bEyPh core-prim . div0)
        (g$12078$1bEyPh core-prim . div-and-mod)
        (g$12077$1bEyPh core-prim . mod)
        (g$12076$1bEyPh core-prim . div)
        (g$12075$1bEyPh core-prim . denominator)
        (g$12074$1bEyPh core-prim . cos)
        (g$12073$1bEyPh core-prim . cons)
        (g$12072$1bEyPh core-prim . complex?)
        (g$12071$1bEyPh core-prim . char?)
        (g$5893$1bEyPh core-prim . char>?)
        (g$5895$1bEyPh core-prim . char>=?)
        (g$5891$1bEyPh core-prim . char=?)
        (g$5892$1bEyPh core-prim . char<?)
        (g$5894$1bEyPh core-prim . char<=?)
        (g$12070$1bEyPh core-prim . char->integer)
        (g$12069$1bEyPh core-prim . ceiling)
        (g$12068$1bEyPh core-prim . call-with-values)
        (g$12067$1bEyPh core-prim . call/cc)
        (g$12066$1bEyPh core-prim . call-with-current-continuation)
        (g$5791$1bEyPh core-prim . cddddr)
        (g$5790$1bEyPh core-prim . cdddar)
        (g$5789$1bEyPh core-prim . cddadr)
        (g$5788$1bEyPh core-prim . cddaar)
        (g$5787$1bEyPh core-prim . cdaddr)
        (g$5786$1bEyPh core-prim . cdadar)
        (g$5785$1bEyPh core-prim . cdaadr)
        (g$5784$1bEyPh core-prim . cdaaar)
        (g$5783$1bEyPh core-prim . cadddr)
        (g$5782$1bEyPh core-prim . caddar)
        (g$5781$1bEyPh core-prim . cadadr)
        (g$5780$1bEyPh core-prim . cadaar)
        (g$5779$1bEyPh core-prim . caaddr)
        (g$5778$1bEyPh core-prim . caadar)
        (g$5777$1bEyPh core-prim . caaadr)
        (g$5776$1bEyPh core-prim . caaaar)
        (g$5775$1bEyPh core-prim . cdddr)
        (g$5774$1bEyPh core-prim . cddar)
        (g$5773$1bEyPh core-prim . cdadr)
        (g$5772$1bEyPh core-prim . cdaar)
        (g$5771$1bEyPh core-prim . caddr)
        (g$5770$1bEyPh core-prim . cadar)
        (g$5769$1bEyPh core-prim . caadr)
        (g$5768$1bEyPh core-prim . caaar)
        (g$5767$1bEyPh core-prim . cddr)
        (g$5766$1bEyPh core-prim . cdar)
        (g$5765$1bEyPh core-prim . cadr)
        (g$5764$1bEyPh core-prim . caar)
        (g$12065$1bEyPh core-prim . cdr)
        (g$12064$1bEyPh core-prim . car)
        (g$12063$1bEyPh core-prim . boolean?)
        (g$5844$1bEyPh core-prim . boolean=?)
        (g$12062$1bEyPh core-prim . atan)
        (g$12061$1bEyPh core-prim . assertion-violation)
        (g$12060$1bEyPh core-prim . asin)
        (g$12059$1bEyPh core-prim . apply)
        (g$12058$1bEyPh core-prim . append)
        (g$12057$1bEyPh core-prim . angle)
        (g$12056$1bEyPh core-prim . acos)
        (g$12055$1bEyPh core-prim . abs)
        (g$12054$1bEyPh core-prim . /)
        (g$12053$1bEyPh core-prim . *)
        (g$12052$1bEyPh core-prim . -)
        (g$12051$1bEyPh core-prim . +)
        (g$12050$1bEyPh core-prim . >=)
        (g$12049$1bEyPh core-prim . >)
        (g$12048$1bEyPh core-prim . =)
        (g$12047$1bEyPh core-prim . <=)
        (g$12046$1bEyPh core-prim . <)
        (g$12045$1bEyPh core-prim . make-record-printer)
        (g$12044$1bEyPh core-prim . eqv-hash)
        (g$12043$1bEyPh core-prim . eq-hash)
        (g$12042$1bEyPh core-prim . reverse!)
        (g$6874$1bEyPh core-prim . make-promise)
        (g$11880$1bEyPh core-prim . load/args)
        (g$7628$1bEyPh core-prim . printf)
        (g$7629$1bEyPh core-prim . fprintf)
        (g$7630$1bEyPh core-prim . format)
        (g$12041$1bEyPh core-prim . get-arity)
        (g$12040$1bEyPh core-prim . gc-collect)
        (g$12039$1bEyPh core-prim . clr-type?)
        (g$12038$1bEyPh core-prim . get-clr-type)
        (g$12037$1bEyPh core-prim . get-command-line)
        (g$12036$1bEyPh core-prim . vector-append)
        (g$12035$1bEyPh core-prim . vector-filter)
        (g$12034$1bEyPh core-prim . vector-reverse!)
        (g$12033$1bEyPh core-prim . vector-contains?)
        (g$12032$1bEyPh core-prim . vector-index-of)
        (g$12031$1bEyPh core-prim . vector-copy)
        (g$12030$1bEyPh core-prim . vector-binary-search)
        (g$12029$1bEyPh core-prim . get-output-string)
        (g$12028$1bEyPh core-prim . open-output-string)
        (g$12027$1bEyPh core-prim . open-input-string)
        (g$12026$1bEyPh core-prim . string-ci-compare)
        (g$12025$1bEyPh core-prim . string-compare)
        (g$12024$1bEyPh core-prim . string-format)
        (g$11877$1bEyPh core-prim . trace-printer)
        (g$12023$1bEyPh core-prim . make-traced-procedure)
        (g$7650$1bEyPh core-prim . make-traced-macro)
        (g$8937$1bEyPh core-prim . assertion-error)
        (g$12022$1bEyPh core-prim . pmap)
        (g$12021$1bEyPh core-prim . time-it)
        (g$7655$1bEyPh core-prim . make-parameter)
        (g$12020$1bEyPh core-prim . library-locator)
        (g$12019$1bEyPh core-prim . get-library-paths)
        (g$8918$1bEyPh core-prim . environment-symbols)
        (g$8917$1bEyPh core-prim . interaction-environment-symbols)
        (g$8086$1bEyPh core-prim . library-path)
        (g$8087$1bEyPh core-prim . library-extensions)
        (g$8107$1bEyPh core-prim . installed-libraries)
        (g$8923$1bEyPh core-prim . expand)
        (g$12018$1bEyPh $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12017$1bEyPh $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12016$1bEyPh $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12015$1bEyPh $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12014$1bEyPh $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12013$1bEyPh
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12012$1bEyPh
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12011$1bEyPh
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12010$1bEyPh
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12009$1bEyPh $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12008$1bEyPh
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12007$1bEyPh $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12006$1bEyPh $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12005$1bEyPh $core-rtd &i/o-rtd &i/o-rcd)
        (g$12004$1bEyPh $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12003$1bEyPh $core-rtd &undefined-rtd &undefined-rcd)
        (g$12002$1bEyPh $core-rtd &syntax-rtd &syntax-rcd)
        (g$12001$1bEyPh $core-rtd &lexical-rtd &lexical-rcd)
        (g$12000$1bEyPh
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11999$1bEyPh $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11998$1bEyPh $core-rtd &who-rtd &who-rcd)
        (g$11997$1bEyPh $core-rtd &irritants-rtd &irritants-rcd)
        (g$11996$1bEyPh $core-rtd &assertion-rtd &assertion-rcd)
        (g$11995$1bEyPh $core-rtd &violation-rtd &violation-rcd)
        (g$11994$1bEyPh $core-rtd &error-rtd &error-rcd)
        (g$11993$1bEyPh $core-rtd &serious-rtd &serious-rcd)
        (g$11992$1bEyPh $core-rtd &warning-rtd &warning-rcd)
        (g$11991$1bEyPh $core-rtd &message-rtd &message-rcd)
        (g$11990$1bEyPh $core-rtd &condition-rtd &condition-rcd)
        (g$11989$1bEyPh macro . define-condition-type)
        (g$11988$1bEyPh macro . define-enumeration)
        (g$11987$1bEyPh macro . define-record-type)
        (g$11986$1bEyPh macro . parent-rtd)
        (g$11985$1bEyPh macro . nongenerative)
        (g$11984$1bEyPh macro . opaque)
        (g$11983$1bEyPh macro . sealed)
        (g$11982$1bEyPh macro . protocol)
        (g$11981$1bEyPh macro . parent)
        (g$11980$1bEyPh macro . immutable)
        (g$11979$1bEyPh macro . mutable)
        (g$11978$1bEyPh macro . fields)
        (g$11977$1bEyPh macro . error-handling-mode)
        (g$11976$1bEyPh macro . file-options)
        (g$11975$1bEyPh macro . buffer-mode)
        (g$11974$1bEyPh macro . eol-style)
        (g$11973$1bEyPh macro . guard)
        (g$11972$1bEyPh macro . trace-letrec-syntax)
        (g$11971$1bEyPh macro . trace-let-syntax)
        (g$11970$1bEyPh macro . trace-define-syntax)
        (g$11969$1bEyPh macro . trace-define)
        (g$11968$1bEyPh macro . trace-lambda)
        (g$11967$1bEyPh macro . unsyntax-splicing)
        (g$11966$1bEyPh macro . unsyntax)
        (g$11965$1bEyPh macro . unquote-splicing)
        (g$11964$1bEyPh macro . unquote)
        (g$11963$1bEyPh macro . _)
        (g$11962$1bEyPh macro . else)
        (g$11961$1bEyPh macro . =>)
        (g$11960$1bEyPh macro . ...)
        (g$11959$1bEyPh macro . assert)
        (g$11958$1bEyPh macro . endianness)
        (g$11957$1bEyPh macro . delay)
        (g$11956$1bEyPh macro . time)
        (g$11955$1bEyPh macro . or)
        (g$11954$1bEyPh macro . and)
        (g$11953$1bEyPh macro . do)
        (g$11952$1bEyPh macro . cond)
        (g$11951$1bEyPh macro . let*)
        (g$11950$1bEyPh macro . let)
        (g$11949$1bEyPh macro . identifier-syntax)
        (g$11948$1bEyPh macro . with-syntax)
        (g$11947$1bEyPh macro . quasisyntax)
        (g$11946$1bEyPh macro . quasiquote)
        (g$11945$1bEyPh macro . syntax-rules)
        (g$11944$1bEyPh macro . include-into)
        (g$11943$1bEyPh macro . include)
        (g$11942$1bEyPh macro . define-struct)
        (g$11941$1bEyPh macro . let-values)
        (g$11940$1bEyPh macro . let*-values)
        (g$11939$1bEyPh core-macro . record-constructor-descriptor)
        (g$11938$1bEyPh core-macro . record-type-descriptor)
        (g$11937$1bEyPh core-macro . fluid-let-syntax)
        (g$11936$1bEyPh macro . case)
        (g$11935$1bEyPh macro . parameterize)
        (g$11934$1bEyPh macro . unless)
        (g$11933$1bEyPh macro . when)
        (g$11932$1bEyPh core-macro . if)
        (g$11931$1bEyPh core-macro . letrec*)
        (g$11930$1bEyPh core-macro . letrec)
        (g$11929$1bEyPh core-macro . type-descriptor)
        (g$11928$1bEyPh core-macro . case-lambda)
        (g$11927$1bEyPh core-macro . lambda)
        (g$11926$1bEyPh core-macro . syntax)
        (g$11925$1bEyPh core-macro . syntax-case)
        (g$11924$1bEyPh core-macro . quote)
        (g$11923$1bEyPh core-macro . foreign-call)
        (g$11922$1bEyPh letrec-syntax)
        (g$11921$1bEyPh let-syntax)
        (g$11920$1bEyPh set!)
        (g$11919$1bEyPh import)
        (g$11918$1bEyPh library)
        (g$11917$1bEyPh begin)
        (g$11916$1bEyPh module)
        (g$11915$1bEyPh define-syntax)
        (g$11914$1bEyPh define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7174$1bEyPh
      'g$12569$1bEyPh
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12448$1bEyPh)
        (eval-core . g$12447$1bEyPh)
        (set-symbol-value! . g$12446$1bEyPh)
        (symbol-value . g$12445$1bEyPh)
        (gensym . g$12443$1bEyPh)
        (void . g$12442$1bEyPh))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11195$1bEyPh
     g$trace-printer$11235$1bEyPh
     (g$make-parameter$6628$1bEyPh write))
   (g$command-line$11196$1bEyPh
     g$command-line$11236$1bEyPh
     (g$make-parameter$6628$1bEyPh (get-command-line)))
   (g$local-library-path$11197$1bEyPh
     g$local-library-path$11237$1bEyPh
     (case-lambda
       ((g$filename$11208$1bEyPh)
        (cons
          (g$get-directory-name$5377$1bEyPh g$filename$11208$1bEyPh)
          (g$library-path$7158$1bEyPh)))))
   (g$load/args$11198$1bEyPh
     g$load/args$11238$1bEyPh
     (case-lambda
       ((g$filename$11209$1bEyPh . g$args$11210$1bEyPh)
        (begin
          (apply
            g$load-r6rs-top-level$11205$1bEyPh
            g$filename$11209$1bEyPh
            'load
            g$args$11210$1bEyPh)
          (void)))))
   (g$load$11199$1bEyPh
     g$load$11239$1bEyPh
     (case-lambda
       ((g$filename$11211$1bEyPh)
        (begin
          (apply
            g$load-r6rs-top-level$11205$1bEyPh
            g$filename$11211$1bEyPh
            'load
            (cdr (g$command-line$11196$1bEyPh)))
          (void)))))
   (g$ironscheme-build$11200$1bEyPh
     g$ironscheme-build$11240$1bEyPh
     (case-lambda (() (g$load$11199$1bEyPh '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11201$1bEyPh
     g$eval-top-level$11241$1bEyPh
     (case-lambda
       ((g$x$11212$1bEyPh)
        (g$eval$11170$1bEyPh
          g$x$11212$1bEyPh
          (g$interaction-environment$11193$1bEyPh)))))
   (g$compile-system-libraries$11202$1bEyPh
     g$compile-system-libraries$11242$1bEyPh
     (case-lambda
       (()
        (g$eval-top-level$11201$1bEyPh
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11203$1bEyPh
     g$compile$11243$1bEyPh
     (case-lambda
       ((g$filename$11213$1bEyPh)
        (g$load-r6rs-top-level$11205$1bEyPh g$filename$11213$1bEyPh 'compile))))
   (g$compile->closure$11204$1bEyPh
     g$compile->closure$11244$1bEyPh
     (case-lambda
       ((g$filename$11214$1bEyPh)
        (g$load-r6rs-top-level$11205$1bEyPh g$filename$11214$1bEyPh 'closure))))
   (g$load-r6rs-top-level$11205$1bEyPh
     g$load-r6rs-top-level$11245$1bEyPh
     (case-lambda
       ((g$filename$11215$1bEyPh g$how$11216$1bEyPh . g$args$11217$1bEyPh)
        ((case-lambda
           ((g$library-path$11220$1bEyPh g$library-path$11221$1bEyPh)
            ((case-lambda
               ((g$swap$11222$1bEyPh)
                (dynamic-wind
                  g$swap$11222$1bEyPh
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11223$1bEyPh)
                         ((case-lambda
                            ((g$t$11224$1bEyPh)
                             (if (memv g$t$11224$1bEyPh '(closure))
                               (g$pre-compile-r6rs-top-level$11192$1bEyPh
                                 g$x*$11223$1bEyPh)
                               (if (memv g$t$11224$1bEyPh '(load))
                                 ((case-lambda
                                    ((g$command-line$11227$1bEyPh
                                       g$command-line$11228$1bEyPh)
                                     ((case-lambda
                                        ((g$swap$11229$1bEyPh)
                                         (dynamic-wind
                                           g$swap$11229$1bEyPh
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11191$1bEyPh
                                                 g$x*$11223$1bEyPh))))
                                           g$swap$11229$1bEyPh)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11230$1bEyPh)
                                             (begin
                                               (g$command-line$11227$1bEyPh
                                                 g$command-line$11228$1bEyPh)
                                               (set! g$command-line$11228$1bEyPh
                                                 g$t$11230$1bEyPh))))
                                          (g$command-line$11227$1bEyPh)))))))
                                  g$command-line$11196$1bEyPh
                                  (cons
                                    g$filename$11215$1bEyPh
                                    (map (case-lambda
                                           ((g$x$11231$1bEyPh)
                                            (g$format$6543$1bEyPh
                                              '"~a"
                                              g$x$11231$1bEyPh)))
                                         g$args$11217$1bEyPh)))
                                 (if (memv g$t$11224$1bEyPh '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11191$1bEyPh
                                       g$x*$11223$1bEyPh)
                                     (g$serialize-all$7162$1bEyPh
                                       serialize-library
                                       g$compile-core-expr$6876$1bEyPh))
                                   (if '#f '#f (void)))))))
                          g$how$11216$1bEyPh)))
                      (g$with-input-from-file$6374$1bEyPh
                        g$filename$11215$1bEyPh
                        (case-lambda
                          (()
                           ((letrec ((g$f$11232$1bEyPh
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11233$1bEyPh)
                                              (if (eof-object? g$x$11233$1bEyPh)
                                                '()
                                                (cons
                                                  g$x$11233$1bEyPh
                                                  (g$f$11232$1bEyPh)))))
                                           (read-annotated))))))
                              g$f$11232$1bEyPh))))))))
                  g$swap$11222$1bEyPh)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11234$1bEyPh)
                    (begin
                      (g$library-path$11220$1bEyPh g$library-path$11221$1bEyPh)
                      (set! g$library-path$11221$1bEyPh g$t$11234$1bEyPh))))
                 (g$library-path$11220$1bEyPh)))))))
         g$library-path$7158$1bEyPh
         (g$local-library-path$11197$1bEyPh g$filename$11215$1bEyPh)))))
   (g$fo$11206$1bEyPh
     g$fo$11246$1bEyPh
     (g$make-enumeration$6505$1bEyPh '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7163$1bEyPh
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11207$1bEyPh)
         (if (g$serious-condition?$5760$1bEyPh g$ex$11207$1bEyPh)
           (raise g$ex$11207$1bEyPh)
           (begin (display g$ex$11207$1bEyPh) (newline))))))
    (set-symbol-value! 'load g$load$11199$1bEyPh)
    (set-symbol-value! 'compile g$compile$11203$1bEyPh)
    (set-symbol-value! 'compile->closure g$compile->closure$11204$1bEyPh)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11201$1bEyPh)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11163$1bEyPh)
    (set-symbol-value! 'expanded2core g$expanded->core$6875$1bEyPh)
    (set-symbol-value! 'trace-printer g$trace-printer$11195$1bEyPh)
    (g$file-options-constructor$6629$1bEyPh
      (g$enum-set-constructor$6508$1bEyPh g$fo$11206$1bEyPh))
    (g$library-path$7158$1bEyPh (get-library-paths))))

