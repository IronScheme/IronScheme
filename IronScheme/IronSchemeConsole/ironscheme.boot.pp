;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (ironscheme lists)
  ((g$find$4843$1Bug2v
     g$find$4946$1Bug2v
     (case-lambda
       ((g$proc$4865$1Bug2v g$l$4866$1Bug2v)
        (if (null? g$l$4866$1Bug2v)
          '#f
          ((case-lambda
             ((g$e$4867$1Bug2v)
              (if (g$proc$4865$1Bug2v g$e$4867$1Bug2v)
                g$e$4867$1Bug2v
                (g$find$4843$1Bug2v g$proc$4865$1Bug2v (cdr g$l$4866$1Bug2v)))))
           (car g$l$4866$1Bug2v))))))
   (g$partition$4844$1Bug2v
     g$partition$4947$1Bug2v
     (case-lambda
       ((g$proc$4868$1Bug2v g$l$4869$1Bug2v)
        ((letrec ((g$f$4870$1Bug2v
                    (case-lambda
                      ((g$l$4871$1Bug2v g$a$4872$1Bug2v g$b$4873$1Bug2v)
                       (if (null? g$l$4871$1Bug2v)
                         (values
                           (reverse! g$a$4872$1Bug2v)
                           (reverse! g$b$4873$1Bug2v))
                         ((case-lambda
                            ((g$e$4874$1Bug2v)
                             (if (g$proc$4868$1Bug2v g$e$4874$1Bug2v)
                               (g$f$4870$1Bug2v
                                 (cdr g$l$4871$1Bug2v)
                                 (cons g$e$4874$1Bug2v g$a$4872$1Bug2v)
                                 g$b$4873$1Bug2v)
                               (g$f$4870$1Bug2v
                                 (cdr g$l$4871$1Bug2v)
                                 g$a$4872$1Bug2v
                                 (cons g$e$4874$1Bug2v g$b$4873$1Bug2v)))))
                          (car g$l$4871$1Bug2v)))))))
           g$f$4870$1Bug2v)
         g$l$4869$1Bug2v
         '()
         '()))))
   (g$remp$4845$1Bug2v
     g$remp$4948$1Bug2v
     (case-lambda
       ((g$proc$4875$1Bug2v g$l$4876$1Bug2v)
        ((letrec ((g$f$4877$1Bug2v
                    (case-lambda
                      ((g$l$4878$1Bug2v g$a$4879$1Bug2v)
                       (if (null? g$l$4878$1Bug2v)
                         (reverse! g$a$4879$1Bug2v)
                         ((case-lambda
                            ((g$e$4880$1Bug2v)
                             (if (g$proc$4875$1Bug2v g$e$4880$1Bug2v)
                               (g$f$4877$1Bug2v
                                 (cdr g$l$4878$1Bug2v)
                                 g$a$4879$1Bug2v)
                               (g$f$4877$1Bug2v
                                 (cdr g$l$4878$1Bug2v)
                                 (cons g$e$4880$1Bug2v g$a$4879$1Bug2v)))))
                          (car g$l$4878$1Bug2v)))))))
           g$f$4877$1Bug2v)
         g$l$4876$1Bug2v
         '()))))
   (g$filter$4846$1Bug2v
     g$filter$4949$1Bug2v
     (case-lambda
       ((g$proc$4881$1Bug2v g$l$4882$1Bug2v)
        ((letrec ((g$f$4883$1Bug2v
                    (case-lambda
                      ((g$l$4884$1Bug2v g$a$4885$1Bug2v)
                       (if (null? g$l$4884$1Bug2v)
                         (reverse! g$a$4885$1Bug2v)
                         ((case-lambda
                            ((g$e$4886$1Bug2v)
                             (if (g$proc$4881$1Bug2v g$e$4886$1Bug2v)
                               (g$f$4883$1Bug2v
                                 (cdr g$l$4884$1Bug2v)
                                 (cons g$e$4886$1Bug2v g$a$4885$1Bug2v))
                               (g$f$4883$1Bug2v
                                 (cdr g$l$4884$1Bug2v)
                                 g$a$4885$1Bug2v))))
                          (car g$l$4884$1Bug2v)))))))
           g$f$4883$1Bug2v)
         g$l$4882$1Bug2v
         '()))))
   (g$assq$4847$1Bug2v
     g$assq$4950$1Bug2v
     (case-lambda
       ((g$obj$4887$1Bug2v g$lst$4888$1Bug2v)
        (if (null? g$lst$4888$1Bug2v)
          '#f
          ((case-lambda
             ((g$obj$4889$1Bug2v g$t$4890$1Bug2v g$r$4891$1Bug2v)
              (if (eq? g$obj$4889$1Bug2v (car g$t$4890$1Bug2v))
                g$t$4890$1Bug2v
                (g$assq$4847$1Bug2v g$obj$4889$1Bug2v g$r$4891$1Bug2v))))
           g$obj$4887$1Bug2v
           (car g$lst$4888$1Bug2v)
           (cdr g$lst$4888$1Bug2v))))))
   (g$assv$4848$1Bug2v
     g$assv$4951$1Bug2v
     (case-lambda
       ((g$obj$4892$1Bug2v g$lst$4893$1Bug2v)
        (if (null? g$lst$4893$1Bug2v)
          '#f
          ((case-lambda
             ((g$c$4894$1Bug2v)
              (if (eqv? g$obj$4892$1Bug2v (car g$c$4894$1Bug2v))
                g$c$4894$1Bug2v
                (g$assv$4848$1Bug2v
                  g$obj$4892$1Bug2v
                  (cdr g$lst$4893$1Bug2v)))))
           (car g$lst$4893$1Bug2v))))))
   (g$assoc$4849$1Bug2v
     g$assoc$4952$1Bug2v
     (case-lambda
       ((g$obj$4895$1Bug2v g$lst$4896$1Bug2v)
        (if (null? g$lst$4896$1Bug2v)
          '#f
          ((case-lambda
             ((g$c$4897$1Bug2v)
              (if (equal? g$obj$4895$1Bug2v (car g$c$4897$1Bug2v))
                g$c$4897$1Bug2v
                (g$assoc$4849$1Bug2v
                  g$obj$4895$1Bug2v
                  (cdr g$lst$4896$1Bug2v)))))
           (car g$lst$4896$1Bug2v))))))
   (g$assp$4850$1Bug2v
     g$assp$4953$1Bug2v
     (case-lambda
       ((g$p?$4898$1Bug2v g$lst$4899$1Bug2v)
        (if (null? g$lst$4899$1Bug2v)
          '#f
          ((case-lambda
             ((g$c$4900$1Bug2v)
              (if (g$p?$4898$1Bug2v (car g$c$4900$1Bug2v))
                g$c$4900$1Bug2v
                (g$assp$4850$1Bug2v g$p?$4898$1Bug2v (cdr g$lst$4899$1Bug2v)))))
           (car g$lst$4899$1Bug2v))))))
   (g$memq$4851$1Bug2v
     g$memq$4954$1Bug2v
     (case-lambda
       ((g$obj$4901$1Bug2v g$lst$4902$1Bug2v)
        (if (null? g$lst$4902$1Bug2v)
          '#f
          (if (eq? g$obj$4901$1Bug2v (car g$lst$4902$1Bug2v))
            g$lst$4902$1Bug2v
            (g$memq$4851$1Bug2v g$obj$4901$1Bug2v (cdr g$lst$4902$1Bug2v)))))))
   (g$memv$4852$1Bug2v
     g$memv$4955$1Bug2v
     (case-lambda
       ((g$obj$4903$1Bug2v g$lst$4904$1Bug2v)
        (if (null? g$lst$4904$1Bug2v)
          '#f
          (if (eqv? g$obj$4903$1Bug2v (car g$lst$4904$1Bug2v))
            g$lst$4904$1Bug2v
            (g$memv$4852$1Bug2v g$obj$4903$1Bug2v (cdr g$lst$4904$1Bug2v)))))))
   (g$member$4853$1Bug2v
     g$member$4956$1Bug2v
     (case-lambda
       ((g$obj$4905$1Bug2v g$lst$4906$1Bug2v)
        (if (null? g$lst$4906$1Bug2v)
          '#f
          (if (equal? g$obj$4905$1Bug2v (car g$lst$4906$1Bug2v))
            g$lst$4906$1Bug2v
            (g$member$4853$1Bug2v
              g$obj$4905$1Bug2v
              (cdr g$lst$4906$1Bug2v)))))))
   (g$memp$4854$1Bug2v
     g$memp$4957$1Bug2v
     (case-lambda
       ((g$p?$4907$1Bug2v g$lst$4908$1Bug2v)
        (if (null? g$lst$4908$1Bug2v)
          '#f
          (if (g$p?$4907$1Bug2v (car g$lst$4908$1Bug2v))
            g$lst$4908$1Bug2v
            (g$memp$4854$1Bug2v g$p?$4907$1Bug2v (cdr g$lst$4908$1Bug2v)))))))
   (g$all-empty?$4855$1Bug2v
     g$all-empty?$4958$1Bug2v
     (case-lambda
       ((g$ls$4909$1Bug2v)
        ((case-lambda
           ((g$t$4910$1Bug2v)
            (if g$t$4910$1Bug2v
              g$t$4910$1Bug2v
              (begin
                '#f
                (if (null? (car g$ls$4909$1Bug2v))
                  (begin '#f (g$all-empty?$4855$1Bug2v (cdr g$ls$4909$1Bug2v)))
                  '#f)))))
         (null? g$ls$4909$1Bug2v)))))
   (g$split$4856$1Bug2v
     g$split$4959$1Bug2v
     (case-lambda
       ((g$ls$4911$1Bug2v)
        (if (null? g$ls$4911$1Bug2v)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$4856$1Bug2v (cdr g$ls$4911$1Bug2v))))
            (case-lambda
              ((g$cars$4912$1Bug2v g$cdrs$4913$1Bug2v)
               ((case-lambda
                  ((g$a$4914$1Bug2v)
                   (values
                     (cons (car g$a$4914$1Bug2v) g$cars$4912$1Bug2v)
                     (cons (cdr g$a$4914$1Bug2v) g$cdrs$4913$1Bug2v))))
                (car g$ls$4911$1Bug2v)))))))))
   (g$for-all$4857$1Bug2v
     g$for-all$4960$1Bug2v
     (case-lambda
       ((g$f$4915$1Bug2v . g$args$4916$1Bug2v)
        (if (g$all-empty?$4855$1Bug2v g$args$4916$1Bug2v)
          '#t
          (call-with-values
            (case-lambda (() (g$split$4856$1Bug2v g$args$4916$1Bug2v)))
            (case-lambda
              ((g$cars$4917$1Bug2v g$cdrs$4918$1Bug2v)
               (if (g$all-empty?$4855$1Bug2v g$cdrs$4918$1Bug2v)
                 (apply g$f$4915$1Bug2v g$cars$4917$1Bug2v)
                 (if (apply g$f$4915$1Bug2v g$cars$4917$1Bug2v)
                   (begin
                     '#f
                     (apply
                       g$for-all$4857$1Bug2v
                       g$f$4915$1Bug2v
                       g$cdrs$4918$1Bug2v))
                   '#f)))))))))
   (g$exists$4858$1Bug2v
     g$exists$4961$1Bug2v
     (case-lambda
       ((g$f$4919$1Bug2v . g$args$4920$1Bug2v)
        (if (g$all-empty?$4855$1Bug2v g$args$4920$1Bug2v)
          '#f
          (call-with-values
            (case-lambda (() (g$split$4856$1Bug2v g$args$4920$1Bug2v)))
            (case-lambda
              ((g$cars$4921$1Bug2v g$cdrs$4922$1Bug2v)
               ((case-lambda
                  ((g$t$4923$1Bug2v)
                   (if g$t$4923$1Bug2v
                     g$t$4923$1Bug2v
                     (begin
                       '#f
                       (apply
                         g$exists$4858$1Bug2v
                         g$f$4919$1Bug2v
                         g$cdrs$4922$1Bug2v)))))
                (apply g$f$4919$1Bug2v g$cars$4921$1Bug2v)))))))))
   (g$cons*$4859$1Bug2v
     g$cons*$4962$1Bug2v
     (case-lambda
       ((g$a$4924$1Bug2v . g$rest$4925$1Bug2v)
        ((letrec ((g$f$4926$1Bug2v
                    (case-lambda
                      ((g$a$4927$1Bug2v g$rest$4928$1Bug2v)
                       (if (null? g$rest$4928$1Bug2v)
                         g$a$4927$1Bug2v
                         (cons
                           g$a$4927$1Bug2v
                           (g$f$4926$1Bug2v
                             (car g$rest$4928$1Bug2v)
                             (cdr g$rest$4928$1Bug2v))))))))
           g$f$4926$1Bug2v)
         g$a$4924$1Bug2v
         g$rest$4925$1Bug2v))))
   (g$fold-left$4860$1Bug2v
     g$fold-left$4963$1Bug2v
     (case-lambda
       ((g$combine$4929$1Bug2v
          g$nil$4930$1Bug2v
          g$list1$4931$1Bug2v
          .
          g$lists$4932$1Bug2v)
        (if (null? g$list1$4931$1Bug2v)
          g$nil$4930$1Bug2v
          (apply
            g$fold-left$4860$1Bug2v
            (g$cons*$4859$1Bug2v
              g$combine$4929$1Bug2v
              (apply
                g$combine$4929$1Bug2v
                (g$cons*$4859$1Bug2v
                  g$nil$4930$1Bug2v
                  (car g$list1$4931$1Bug2v)
                  (map car g$lists$4932$1Bug2v)))
              (cdr g$list1$4931$1Bug2v)
              (map cdr g$lists$4932$1Bug2v)))))))
   (g$fold-right$4861$1Bug2v
     g$fold-right$4964$1Bug2v
     (case-lambda
       ((g$combine$4933$1Bug2v
          g$nil$4934$1Bug2v
          g$list1$4935$1Bug2v
          .
          g$lists$4936$1Bug2v)
        (if (null? g$list1$4935$1Bug2v)
          g$nil$4934$1Bug2v
          (apply
            g$combine$4933$1Bug2v
            (append
              (list (car g$list1$4935$1Bug2v))
              (map car g$lists$4936$1Bug2v)
              (list
                (apply
                  g$fold-right$4861$1Bug2v
                  (g$cons*$4859$1Bug2v
                    g$combine$4933$1Bug2v
                    g$nil$4934$1Bug2v
                    (cdr g$list1$4935$1Bug2v)
                    (map cdr g$lists$4936$1Bug2v))))))))))
   (g$remove$4862$1Bug2v
     g$remove$4965$1Bug2v
     (case-lambda
       ((g$obj$4937$1Bug2v g$list$4938$1Bug2v)
        (g$remp$4845$1Bug2v
          (case-lambda
            ((g$x$4939$1Bug2v) (equal? g$obj$4937$1Bug2v g$x$4939$1Bug2v)))
          g$list$4938$1Bug2v))))
   (g$remv$4863$1Bug2v
     g$remv$4966$1Bug2v
     (case-lambda
       ((g$obj$4940$1Bug2v g$list$4941$1Bug2v)
        (g$remp$4845$1Bug2v
          (case-lambda
            ((g$x$4942$1Bug2v) (eqv? g$obj$4940$1Bug2v g$x$4942$1Bug2v)))
          g$list$4941$1Bug2v))))
   (g$remq$4864$1Bug2v
     g$remq$4967$1Bug2v
     (case-lambda
       ((g$obj$4943$1Bug2v g$list$4944$1Bug2v)
        (g$remp$4845$1Bug2v
          (case-lambda
            ((g$x$4945$1Bug2v) (eq? g$obj$4943$1Bug2v g$x$4945$1Bug2v)))
          g$list$4944$1Bug2v)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$caar$4968$1Bug2v
     g$caar$5123$1Bug2v
     (case-lambda ((g$x$5023$1Bug2v) (car (car g$x$5023$1Bug2v)))))
   (g$cadr$4969$1Bug2v
     g$cadr$5124$1Bug2v
     (case-lambda ((g$x$5024$1Bug2v) (car (cdr g$x$5024$1Bug2v)))))
   (g$cdar$4970$1Bug2v
     g$cdar$5125$1Bug2v
     (case-lambda ((g$x$5025$1Bug2v) (cdr (car g$x$5025$1Bug2v)))))
   (g$cddr$4971$1Bug2v
     g$cddr$5126$1Bug2v
     (case-lambda ((g$x$5026$1Bug2v) (cdr (cdr g$x$5026$1Bug2v)))))
   (g$caaar$4972$1Bug2v
     g$caaar$5127$1Bug2v
     (case-lambda
       ((g$x$5027$1Bug2v) (g$caar$4968$1Bug2v (car g$x$5027$1Bug2v)))))
   (g$caadr$4973$1Bug2v
     g$caadr$5128$1Bug2v
     (case-lambda
       ((g$x$5028$1Bug2v) (g$caar$4968$1Bug2v (cdr g$x$5028$1Bug2v)))))
   (g$cadar$4974$1Bug2v
     g$cadar$5129$1Bug2v
     (case-lambda
       ((g$x$5029$1Bug2v) (g$cadr$4969$1Bug2v (car g$x$5029$1Bug2v)))))
   (g$caddr$4975$1Bug2v
     g$caddr$5130$1Bug2v
     (case-lambda
       ((g$x$5030$1Bug2v) (g$cadr$4969$1Bug2v (cdr g$x$5030$1Bug2v)))))
   (g$cdaar$4976$1Bug2v
     g$cdaar$5131$1Bug2v
     (case-lambda
       ((g$x$5031$1Bug2v) (g$cdar$4970$1Bug2v (car g$x$5031$1Bug2v)))))
   (g$cdadr$4977$1Bug2v
     g$cdadr$5132$1Bug2v
     (case-lambda
       ((g$x$5032$1Bug2v) (g$cdar$4970$1Bug2v (cdr g$x$5032$1Bug2v)))))
   (g$cddar$4978$1Bug2v
     g$cddar$5133$1Bug2v
     (case-lambda
       ((g$x$5033$1Bug2v) (g$cddr$4971$1Bug2v (car g$x$5033$1Bug2v)))))
   (g$cdddr$4979$1Bug2v
     g$cdddr$5134$1Bug2v
     (case-lambda
       ((g$x$5034$1Bug2v) (g$cddr$4971$1Bug2v (cdr g$x$5034$1Bug2v)))))
   (g$caaaar$4980$1Bug2v
     g$caaaar$5135$1Bug2v
     (case-lambda
       ((g$x$5035$1Bug2v) (g$caaar$4972$1Bug2v (car g$x$5035$1Bug2v)))))
   (g$caaadr$4981$1Bug2v
     g$caaadr$5136$1Bug2v
     (case-lambda
       ((g$x$5036$1Bug2v) (g$caaar$4972$1Bug2v (cdr g$x$5036$1Bug2v)))))
   (g$caadar$4982$1Bug2v
     g$caadar$5137$1Bug2v
     (case-lambda
       ((g$x$5037$1Bug2v) (g$caadr$4973$1Bug2v (car g$x$5037$1Bug2v)))))
   (g$caaddr$4983$1Bug2v
     g$caaddr$5138$1Bug2v
     (case-lambda
       ((g$x$5038$1Bug2v) (g$caadr$4973$1Bug2v (cdr g$x$5038$1Bug2v)))))
   (g$cadaar$4984$1Bug2v
     g$cadaar$5139$1Bug2v
     (case-lambda
       ((g$x$5039$1Bug2v) (g$cadar$4974$1Bug2v (car g$x$5039$1Bug2v)))))
   (g$cadadr$4985$1Bug2v
     g$cadadr$5140$1Bug2v
     (case-lambda
       ((g$x$5040$1Bug2v) (g$cadar$4974$1Bug2v (cdr g$x$5040$1Bug2v)))))
   (g$caddar$4986$1Bug2v
     g$caddar$5141$1Bug2v
     (case-lambda
       ((g$x$5041$1Bug2v) (g$caddr$4975$1Bug2v (car g$x$5041$1Bug2v)))))
   (g$cadddr$4987$1Bug2v
     g$cadddr$5142$1Bug2v
     (case-lambda
       ((g$x$5042$1Bug2v) (g$caddr$4975$1Bug2v (cdr g$x$5042$1Bug2v)))))
   (g$cdaaar$4988$1Bug2v
     g$cdaaar$5143$1Bug2v
     (case-lambda
       ((g$x$5043$1Bug2v) (g$cdaar$4976$1Bug2v (car g$x$5043$1Bug2v)))))
   (g$cdaadr$4989$1Bug2v
     g$cdaadr$5144$1Bug2v
     (case-lambda
       ((g$x$5044$1Bug2v) (g$cdaar$4976$1Bug2v (cdr g$x$5044$1Bug2v)))))
   (g$cdadar$4990$1Bug2v
     g$cdadar$5145$1Bug2v
     (case-lambda
       ((g$x$5045$1Bug2v) (g$cdadr$4977$1Bug2v (car g$x$5045$1Bug2v)))))
   (g$cdaddr$4991$1Bug2v
     g$cdaddr$5146$1Bug2v
     (case-lambda
       ((g$x$5046$1Bug2v) (g$cdadr$4977$1Bug2v (cdr g$x$5046$1Bug2v)))))
   (g$cddaar$4992$1Bug2v
     g$cddaar$5147$1Bug2v
     (case-lambda
       ((g$x$5047$1Bug2v) (g$cddar$4978$1Bug2v (car g$x$5047$1Bug2v)))))
   (g$cddadr$4993$1Bug2v
     g$cddadr$5148$1Bug2v
     (case-lambda
       ((g$x$5048$1Bug2v) (g$cddar$4978$1Bug2v (cdr g$x$5048$1Bug2v)))))
   (g$cdddar$4994$1Bug2v
     g$cdddar$5149$1Bug2v
     (case-lambda
       ((g$x$5049$1Bug2v) (g$cdddr$4979$1Bug2v (car g$x$5049$1Bug2v)))))
   (g$cddddr$4995$1Bug2v
     g$cddddr$5150$1Bug2v
     (case-lambda
       ((g$x$5050$1Bug2v) (g$cdddr$4979$1Bug2v (cdr g$x$5050$1Bug2v)))))
   (g$string=?$5002$1Bug2v
     g$string=?$5151$1Bug2v
     (case-lambda
       ((g$a$5051$1Bug2v g$b$5052$1Bug2v . g$rest$5053$1Bug2v)
        (begin
          (if (not (string? g$a$5051$1Bug2v))
            (assertion-violation 'string=? '"not a string" g$a$5051$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5054$1Bug2v)
               (begin
                 (if (not (string? g$x$5054$1Bug2v))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5054$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5055$1Bug2v)
                     (begin
                       (set! g$a$5051$1Bug2v g$x$5054$1Bug2v)
                       g$r$5055$1Bug2v)))
                  (= (string-compare g$a$5051$1Bug2v g$x$5054$1Bug2v) '0)))))
            (cons g$b$5052$1Bug2v g$rest$5053$1Bug2v))))))
   (g$string<?$5003$1Bug2v
     g$string<?$5152$1Bug2v
     (case-lambda
       ((g$a$5056$1Bug2v g$b$5057$1Bug2v . g$rest$5058$1Bug2v)
        (begin
          (if (not (string? g$a$5056$1Bug2v))
            (assertion-violation 'string<? '"not a string" g$a$5056$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5059$1Bug2v)
               (begin
                 (if (not (string? g$x$5059$1Bug2v))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5059$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5060$1Bug2v)
                     (begin
                       (set! g$a$5056$1Bug2v g$x$5059$1Bug2v)
                       g$r$5060$1Bug2v)))
                  (< (string-compare g$a$5056$1Bug2v g$x$5059$1Bug2v) '0)))))
            (cons g$b$5057$1Bug2v g$rest$5058$1Bug2v))))))
   (g$string>?$5004$1Bug2v
     g$string>?$5153$1Bug2v
     (case-lambda
       ((g$a$5061$1Bug2v g$b$5062$1Bug2v . g$rest$5063$1Bug2v)
        (begin
          (if (not (string? g$a$5061$1Bug2v))
            (assertion-violation 'string>? '"not a string" g$a$5061$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5064$1Bug2v)
               (begin
                 (if (not (string? g$x$5064$1Bug2v))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5064$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5065$1Bug2v)
                     (begin
                       (set! g$a$5061$1Bug2v g$x$5064$1Bug2v)
                       g$r$5065$1Bug2v)))
                  (> (string-compare g$a$5061$1Bug2v g$x$5064$1Bug2v) '0)))))
            (cons g$b$5062$1Bug2v g$rest$5063$1Bug2v))))))
   (g$string<=?$5005$1Bug2v
     g$string<=?$5154$1Bug2v
     (case-lambda
       ((g$a$5066$1Bug2v g$b$5067$1Bug2v . g$rest$5068$1Bug2v)
        (begin
          (if (not (string? g$a$5066$1Bug2v))
            (assertion-violation 'string<=? '"not a string" g$a$5066$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5069$1Bug2v)
               (begin
                 (if (not (string? g$x$5069$1Bug2v))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5069$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5070$1Bug2v)
                     (begin
                       (set! g$a$5066$1Bug2v g$x$5069$1Bug2v)
                       g$r$5070$1Bug2v)))
                  (<= (string-compare g$a$5066$1Bug2v g$x$5069$1Bug2v) '0)))))
            (cons g$b$5067$1Bug2v g$rest$5068$1Bug2v))))))
   (g$string>=?$5006$1Bug2v
     g$string>=?$5155$1Bug2v
     (case-lambda
       ((g$a$5071$1Bug2v g$b$5072$1Bug2v . g$rest$5073$1Bug2v)
        (begin
          (if (not (string? g$a$5071$1Bug2v))
            (assertion-violation 'string>=? '"not a string" g$a$5071$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5074$1Bug2v)
               (begin
                 (if (not (string? g$x$5074$1Bug2v))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5074$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5075$1Bug2v)
                     (begin
                       (set! g$a$5071$1Bug2v g$x$5074$1Bug2v)
                       g$r$5075$1Bug2v)))
                  (>= (string-compare g$a$5071$1Bug2v g$x$5074$1Bug2v) '0)))))
            (cons g$b$5072$1Bug2v g$rest$5073$1Bug2v))))))
   (g$symbol=?$5007$1Bug2v
     g$symbol=?$5156$1Bug2v
     (case-lambda
       ((g$a$5076$1Bug2v g$b$5077$1Bug2v . g$rest$5078$1Bug2v)
        (begin
          (if (not (symbol? g$a$5076$1Bug2v))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5076$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5079$1Bug2v)
               (begin
                 (if (not (symbol? g$x$5079$1Bug2v))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5079$1Bug2v)
                   (void))
                 (eq? g$a$5076$1Bug2v g$x$5079$1Bug2v))))
            (cons g$b$5077$1Bug2v g$rest$5078$1Bug2v))))))
   (g$boolean=?$5008$1Bug2v
     g$boolean=?$5157$1Bug2v
     (case-lambda
       ((g$a$5080$1Bug2v g$b$5081$1Bug2v . g$rest$5082$1Bug2v)
        (begin
          (if (not (boolean? g$a$5080$1Bug2v))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5080$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5083$1Bug2v)
               (begin
                 (if (not (boolean? g$x$5083$1Bug2v))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5083$1Bug2v)
                   (void))
                 (eq? g$a$5080$1Bug2v g$x$5083$1Bug2v))))
            (cons g$b$5081$1Bug2v g$rest$5082$1Bug2v))))))
   (g$char=?$5015$1Bug2v
     g$char=?$5158$1Bug2v
     (case-lambda
       ((g$a$5084$1Bug2v g$b$5085$1Bug2v . g$rest$5086$1Bug2v)
        (begin
          (if (not (char? g$a$5084$1Bug2v))
            (assertion-violation 'char=? '"not a char" g$a$5084$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5087$1Bug2v)
               (begin
                 (if (not (char? g$x$5087$1Bug2v))
                   (assertion-violation 'char=? '"not a char" g$x$5087$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5088$1Bug2v)
                     (begin
                       (set! g$a$5084$1Bug2v g$x$5087$1Bug2v)
                       g$r$5088$1Bug2v)))
                  (= (char->integer g$a$5084$1Bug2v)
                     (char->integer g$x$5087$1Bug2v))))))
            (cons g$b$5085$1Bug2v g$rest$5086$1Bug2v))))))
   (g$char<?$5016$1Bug2v
     g$char<?$5159$1Bug2v
     (case-lambda
       ((g$a$5089$1Bug2v g$b$5090$1Bug2v . g$rest$5091$1Bug2v)
        (begin
          (if (not (char? g$a$5089$1Bug2v))
            (assertion-violation 'char<? '"not a char" g$a$5089$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5092$1Bug2v)
               (begin
                 (if (not (char? g$x$5092$1Bug2v))
                   (assertion-violation 'char<? '"not a char" g$x$5092$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5093$1Bug2v)
                     (begin
                       (set! g$a$5089$1Bug2v g$x$5092$1Bug2v)
                       g$r$5093$1Bug2v)))
                  (< (char->integer g$a$5089$1Bug2v)
                     (char->integer g$x$5092$1Bug2v))))))
            (cons g$b$5090$1Bug2v g$rest$5091$1Bug2v))))))
   (g$char>?$5017$1Bug2v
     g$char>?$5160$1Bug2v
     (case-lambda
       ((g$a$5094$1Bug2v g$b$5095$1Bug2v . g$rest$5096$1Bug2v)
        (begin
          (if (not (char? g$a$5094$1Bug2v))
            (assertion-violation 'char>? '"not a char" g$a$5094$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5097$1Bug2v)
               (begin
                 (if (not (char? g$x$5097$1Bug2v))
                   (assertion-violation 'char>? '"not a char" g$x$5097$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5098$1Bug2v)
                     (begin
                       (set! g$a$5094$1Bug2v g$x$5097$1Bug2v)
                       g$r$5098$1Bug2v)))
                  (> (char->integer g$a$5094$1Bug2v)
                     (char->integer g$x$5097$1Bug2v))))))
            (cons g$b$5095$1Bug2v g$rest$5096$1Bug2v))))))
   (g$char<=?$5018$1Bug2v
     g$char<=?$5161$1Bug2v
     (case-lambda
       ((g$a$5099$1Bug2v g$b$5100$1Bug2v . g$rest$5101$1Bug2v)
        (begin
          (if (not (char? g$a$5099$1Bug2v))
            (assertion-violation 'char<=? '"not a char" g$a$5099$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5102$1Bug2v)
               (begin
                 (if (not (char? g$x$5102$1Bug2v))
                   (assertion-violation 'char<=? '"not a char" g$x$5102$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5103$1Bug2v)
                     (begin
                       (set! g$a$5099$1Bug2v g$x$5102$1Bug2v)
                       g$r$5103$1Bug2v)))
                  (<= (char->integer g$a$5099$1Bug2v)
                      (char->integer g$x$5102$1Bug2v))))))
            (cons g$b$5100$1Bug2v g$rest$5101$1Bug2v))))))
   (g$char>=?$5019$1Bug2v
     g$char>=?$5162$1Bug2v
     (case-lambda
       ((g$a$5104$1Bug2v g$b$5105$1Bug2v . g$rest$5106$1Bug2v)
        (begin
          (if (not (char? g$a$5104$1Bug2v))
            (assertion-violation 'char>=? '"not a char" g$a$5104$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5107$1Bug2v)
               (begin
                 (if (not (char? g$x$5107$1Bug2v))
                   (assertion-violation 'char>=? '"not a char" g$x$5107$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5108$1Bug2v)
                     (begin
                       (set! g$a$5104$1Bug2v g$x$5107$1Bug2v)
                       g$r$5108$1Bug2v)))
                  (>= (char->integer g$a$5104$1Bug2v)
                      (char->integer g$x$5107$1Bug2v))))))
            (cons g$b$5105$1Bug2v g$rest$5106$1Bug2v))))))
   (g$rationalize$5020$1Bug2v
     g$rationalize$5163$1Bug2v
     (case-lambda
       ((g$x$5109$1Bug2v g$e$5110$1Bug2v)
        (if (if (infinite? g$x$5109$1Bug2v)
              (begin '#f (infinite? g$e$5110$1Bug2v))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5111$1Bug2v)
              (if (if (exact? g$x$5109$1Bug2v)
                    (begin '#f (exact? g$e$5110$1Bug2v))
                    '#f)
                g$r$5111$1Bug2v
                (inexact g$r$5111$1Bug2v))))
           (apply
             /
             (g$find-ratio$5021$1Bug2v g$x$5109$1Bug2v g$e$5110$1Bug2v)))))))
   (g$find-ratio$5021$1Bug2v
     g$find-ratio$5164$1Bug2v
     (case-lambda
       ((g$x$5112$1Bug2v g$e$5113$1Bug2v)
        (g$find-ratio-between$5022$1Bug2v
          (- g$x$5112$1Bug2v g$e$5113$1Bug2v)
          (+ g$x$5112$1Bug2v g$e$5113$1Bug2v)))))
   (g$find-ratio-between$5022$1Bug2v
     g$find-ratio-between$5165$1Bug2v
     (case-lambda
       ((g$x$5114$1Bug2v g$y$5115$1Bug2v)
        (letrec* ((g$sr$5116$1Bug2v
                    (case-lambda
                      ((g$x$5118$1Bug2v g$y$5119$1Bug2v)
                       ((case-lambda
                          ((g$fx$5120$1Bug2v g$fy$5121$1Bug2v)
                           (if (>= g$fx$5120$1Bug2v g$x$5118$1Bug2v)
                             (list g$fx$5120$1Bug2v '1)
                             (if (= g$fx$5120$1Bug2v g$fy$5121$1Bug2v)
                               ((case-lambda
                                  ((g$rat$5122$1Bug2v)
                                   (list
                                     (+ (g$cadr$4969$1Bug2v g$rat$5122$1Bug2v)
                                        (* g$fx$5120$1Bug2v
                                           (car g$rat$5122$1Bug2v)))
                                     (car g$rat$5122$1Bug2v))))
                                (g$sr$5116$1Bug2v
                                  (/ (- g$y$5119$1Bug2v g$fy$5121$1Bug2v))
                                  (/ (- g$x$5118$1Bug2v g$fx$5120$1Bug2v))))
                               (list (+ '1 g$fx$5120$1Bug2v) '1)))))
                        (exact (floor g$x$5118$1Bug2v))
                        (exact (floor g$y$5119$1Bug2v)))))))
          (if (< g$y$5115$1Bug2v g$x$5114$1Bug2v)
            (g$find-ratio-between$5022$1Bug2v g$y$5115$1Bug2v g$x$5114$1Bug2v)
            (if (>= g$x$5114$1Bug2v g$y$5115$1Bug2v)
              (list g$x$5114$1Bug2v '1)
              (if (positive? g$x$5114$1Bug2v)
                (g$sr$5116$1Bug2v g$x$5114$1Bug2v g$y$5115$1Bug2v)
                (if (negative? g$y$5115$1Bug2v)
                  ((case-lambda
                     ((g$rat$5117$1Bug2v)
                      (list
                        (- (car g$rat$5117$1Bug2v))
                        (g$cadr$4969$1Bug2v g$rat$5117$1Bug2v))))
                   (g$sr$5116$1Bug2v (- g$y$5115$1Bug2v) (- g$x$5114$1Bug2v)))
                  '(0 1))))))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5361$1Bug2v g$using$5396$1Bug2v (clr-using-internal 'system))
   (g$using$5363$1Bug2v
     g$using$5397$1Bug2v
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5364$1Bug2v
     g$make-eq-hashtable$5398$1Bug2v
     (case-lambda
       (() (clr-new-internal 'hashtable))
       ((g$k$5375$1Bug2v)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5375$1Bug2v)))))
   (g$make-eqv-hashtable$5365$1Bug2v
     g$make-eqv-hashtable$5399$1Bug2v
     (case-lambda
       (() (make-hashtable eqv-hash eqv?))
       ((g$k$5376$1Bug2v) (make-hashtable eqv-hash eqv? g$k$5376$1Bug2v))))
   (g$hashtable-size$5366$1Bug2v
     g$hashtable-size$5400$1Bug2v
     (case-lambda
       ((g$ht$5377$1Bug2v)
        (clr-call-internal 'hashtable 'get_count g$ht$5377$1Bug2v))))
   (g$hashtable-ref$5367$1Bug2v
     g$hashtable-ref$5401$1Bug2v
     (case-lambda
       ((g$ht$5378$1Bug2v g$key$5379$1Bug2v g$default$5380$1Bug2v)
        (letrec* ((g$r$5381$1Bug2v
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5378$1Bug2v
                      g$key$5379$1Bug2v)))
          (if (not (null? g$r$5381$1Bug2v))
            g$r$5381$1Bug2v
            g$default$5380$1Bug2v)))))
   (g$hashtable-set!$5368$1Bug2v
     g$hashtable-set!$5402$1Bug2v
     (case-lambda
       ((g$ht$5382$1Bug2v g$key$5383$1Bug2v g$obj$5384$1Bug2v)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5382$1Bug2v
          g$key$5383$1Bug2v
          g$obj$5384$1Bug2v))))
   (g$hashtable-delete!$5369$1Bug2v
     g$hashtable-delete!$5403$1Bug2v
     (case-lambda
       ((g$ht$5385$1Bug2v g$key$5386$1Bug2v)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5385$1Bug2v
          g$key$5386$1Bug2v))))
   (g$hashtable-contains?$5370$1Bug2v
     g$hashtable-contains?$5404$1Bug2v
     (case-lambda
       ((g$ht$5387$1Bug2v g$key$5388$1Bug2v)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5387$1Bug2v
          g$key$5388$1Bug2v))))
   (g$hashtable-update!$5371$1Bug2v
     g$hashtable-update!$5405$1Bug2v
     (case-lambda
       ((g$ht$5389$1Bug2v
          g$key$5390$1Bug2v
          g$proc$5391$1Bug2v
          g$default$5392$1Bug2v)
        (g$hashtable-set!$5368$1Bug2v
          g$ht$5389$1Bug2v
          g$key$5390$1Bug2v
          (g$proc$5391$1Bug2v
            (g$hashtable-ref$5367$1Bug2v
              g$ht$5389$1Bug2v
              g$key$5390$1Bug2v
              g$default$5392$1Bug2v))))))
   (g$hashtable-clear!$5372$1Bug2v
     g$hashtable-clear!$5406$1Bug2v
     (case-lambda
       ((g$ht$5393$1Bug2v)
        (clr-call-internal 'hashtable 'clear g$ht$5393$1Bug2v))
       ((g$ht$5394$1Bug2v g$k$5395$1Bug2v)
        (clr-call-internal 'hashtable 'clear g$ht$5394$1Bug2v))))
   (g$clear-usings$5374$1Bug2v
     g$clear-usings$5407$1Bug2v
     (clr-clear-usings-internal)))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5409$1Bug2v
     g$using$5416$1Bug2v
     (clr-using-internal 'system.io))
   (g$file-exists?$5410$1Bug2v
     g$file-exists?$5417$1Bug2v
     (case-lambda
       ((g$fn$5413$1Bug2v)
        (clr-call-internal 'file 'exists '() g$fn$5413$1Bug2v))))
   (g$delete-file$5411$1Bug2v
     g$delete-file$5418$1Bug2v
     (case-lambda
       ((g$fn$5414$1Bug2v)
        (clr-call-internal 'file 'delete '() g$fn$5414$1Bug2v))))
   (g$get-directory-name$5412$1Bug2v
     g$get-directory-name$5419$1Bug2v
     (case-lambda
       ((g$path$5415$1Bug2v)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5415$1Bug2v)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5420$1Bug2v
     g$native-endianness$5531$1Bug2v
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5421$1Bug2v
     g$bytevector-u16-ref$5532$1Bug2v
     (case-lambda
       ((g$bytevector$5449$1Bug2v g$k$5450$1Bug2v g$endianness$5451$1Bug2v)
        (bytevector-uint-ref
          g$bytevector$5449$1Bug2v
          g$k$5450$1Bug2v
          g$endianness$5451$1Bug2v
          '2))))
   (g$bytevector-s16-ref$5422$1Bug2v
     g$bytevector-s16-ref$5533$1Bug2v
     (case-lambda
       ((g$bytevector$5452$1Bug2v g$k$5453$1Bug2v g$endianness$5454$1Bug2v)
        (bytevector-sint-ref
          g$bytevector$5452$1Bug2v
          g$k$5453$1Bug2v
          g$endianness$5454$1Bug2v
          '2))))
   (g$bytevector-u16-native-ref$5423$1Bug2v
     g$bytevector-u16-native-ref$5534$1Bug2v
     (case-lambda
       ((g$bytevector$5455$1Bug2v g$k$5456$1Bug2v)
        (bytevector-uint-ref
          g$bytevector$5455$1Bug2v
          g$k$5456$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '2))))
   (g$bytevector-s16-native-ref$5424$1Bug2v
     g$bytevector-s16-native-ref$5535$1Bug2v
     (case-lambda
       ((g$bytevector$5457$1Bug2v g$k$5458$1Bug2v)
        (bytevector-sint-ref
          g$bytevector$5457$1Bug2v
          g$k$5458$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '2))))
   (g$bytevector-u16-set!$5425$1Bug2v
     g$bytevector-u16-set!$5536$1Bug2v
     (case-lambda
       ((g$bytevector$5459$1Bug2v
          g$k$5460$1Bug2v
          g$n$5461$1Bug2v
          g$endianness$5462$1Bug2v)
        (bytevector-uint-set!
          g$bytevector$5459$1Bug2v
          g$k$5460$1Bug2v
          g$n$5461$1Bug2v
          g$endianness$5462$1Bug2v
          '2))))
   (g$bytevector-s16-set!$5426$1Bug2v
     g$bytevector-s16-set!$5537$1Bug2v
     (case-lambda
       ((g$bytevector$5463$1Bug2v
          g$k$5464$1Bug2v
          g$n$5465$1Bug2v
          g$endianness$5466$1Bug2v)
        (bytevector-sint-set!
          g$bytevector$5463$1Bug2v
          g$k$5464$1Bug2v
          g$n$5465$1Bug2v
          g$endianness$5466$1Bug2v
          '2))))
   (g$bytevector-u16-native-set!$5427$1Bug2v
     g$bytevector-u16-native-set!$5538$1Bug2v
     (case-lambda
       ((g$bytevector$5467$1Bug2v g$k$5468$1Bug2v g$n$5469$1Bug2v)
        (bytevector-uint-set!
          g$bytevector$5467$1Bug2v
          g$k$5468$1Bug2v
          g$n$5469$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '2))))
   (g$bytevector-s16-native-set!$5428$1Bug2v
     g$bytevector-s16-native-set!$5539$1Bug2v
     (case-lambda
       ((g$bytevector$5470$1Bug2v g$k$5471$1Bug2v g$n$5472$1Bug2v)
        (bytevector-sint-set!
          g$bytevector$5470$1Bug2v
          g$k$5471$1Bug2v
          g$n$5472$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '2))))
   (g$bytevector-u32-ref$5429$1Bug2v
     g$bytevector-u32-ref$5540$1Bug2v
     (case-lambda
       ((g$bytevector$5473$1Bug2v g$k$5474$1Bug2v g$endianness$5475$1Bug2v)
        (bytevector-uint-ref
          g$bytevector$5473$1Bug2v
          g$k$5474$1Bug2v
          g$endianness$5475$1Bug2v
          '4))))
   (g$bytevector-s32-ref$5430$1Bug2v
     g$bytevector-s32-ref$5541$1Bug2v
     (case-lambda
       ((g$bytevector$5476$1Bug2v g$k$5477$1Bug2v g$endianness$5478$1Bug2v)
        (bytevector-sint-ref
          g$bytevector$5476$1Bug2v
          g$k$5477$1Bug2v
          g$endianness$5478$1Bug2v
          '4))))
   (g$bytevector-u32-native-ref$5431$1Bug2v
     g$bytevector-u32-native-ref$5542$1Bug2v
     (case-lambda
       ((g$bytevector$5479$1Bug2v g$k$5480$1Bug2v)
        (bytevector-uint-ref
          g$bytevector$5479$1Bug2v
          g$k$5480$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '4))))
   (g$bytevector-s32-native-ref$5432$1Bug2v
     g$bytevector-s32-native-ref$5543$1Bug2v
     (case-lambda
       ((g$bytevector$5481$1Bug2v g$k$5482$1Bug2v)
        (bytevector-sint-ref
          g$bytevector$5481$1Bug2v
          g$k$5482$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '4))))
   (g$bytevector-u32-set!$5433$1Bug2v
     g$bytevector-u32-set!$5544$1Bug2v
     (case-lambda
       ((g$bytevector$5483$1Bug2v
          g$k$5484$1Bug2v
          g$n$5485$1Bug2v
          g$endianness$5486$1Bug2v)
        (bytevector-uint-set!
          g$bytevector$5483$1Bug2v
          g$k$5484$1Bug2v
          g$n$5485$1Bug2v
          g$endianness$5486$1Bug2v
          '4))))
   (g$bytevector-s32-set!$5434$1Bug2v
     g$bytevector-s32-set!$5545$1Bug2v
     (case-lambda
       ((g$bytevector$5487$1Bug2v
          g$k$5488$1Bug2v
          g$n$5489$1Bug2v
          g$endianness$5490$1Bug2v)
        (bytevector-sint-set!
          g$bytevector$5487$1Bug2v
          g$k$5488$1Bug2v
          g$n$5489$1Bug2v
          g$endianness$5490$1Bug2v
          '4))))
   (g$bytevector-u32-native-set!$5435$1Bug2v
     g$bytevector-u32-native-set!$5546$1Bug2v
     (case-lambda
       ((g$bytevector$5491$1Bug2v g$k$5492$1Bug2v g$n$5493$1Bug2v)
        (bytevector-uint-set!
          g$bytevector$5491$1Bug2v
          g$k$5492$1Bug2v
          g$n$5493$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '4))))
   (g$bytevector-s32-native-set!$5436$1Bug2v
     g$bytevector-s32-native-set!$5547$1Bug2v
     (case-lambda
       ((g$bytevector$5494$1Bug2v g$k$5495$1Bug2v g$n$5496$1Bug2v)
        (bytevector-sint-set!
          g$bytevector$5494$1Bug2v
          g$k$5495$1Bug2v
          g$n$5496$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '4))))
   (g$bytevector-u64-ref$5437$1Bug2v
     g$bytevector-u64-ref$5548$1Bug2v
     (case-lambda
       ((g$bytevector$5497$1Bug2v g$k$5498$1Bug2v g$endianness$5499$1Bug2v)
        (bytevector-uint-ref
          g$bytevector$5497$1Bug2v
          g$k$5498$1Bug2v
          g$endianness$5499$1Bug2v
          '8))))
   (g$bytevector-s64-ref$5438$1Bug2v
     g$bytevector-s64-ref$5549$1Bug2v
     (case-lambda
       ((g$bytevector$5500$1Bug2v g$k$5501$1Bug2v g$endianness$5502$1Bug2v)
        (bytevector-sint-ref
          g$bytevector$5500$1Bug2v
          g$k$5501$1Bug2v
          g$endianness$5502$1Bug2v
          '8))))
   (g$bytevector-u64-native-ref$5439$1Bug2v
     g$bytevector-u64-native-ref$5550$1Bug2v
     (case-lambda
       ((g$bytevector$5503$1Bug2v g$k$5504$1Bug2v)
        (bytevector-uint-ref
          g$bytevector$5503$1Bug2v
          g$k$5504$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '8))))
   (g$bytevector-s64-native-ref$5440$1Bug2v
     g$bytevector-s64-native-ref$5551$1Bug2v
     (case-lambda
       ((g$bytevector$5505$1Bug2v g$k$5506$1Bug2v)
        (bytevector-sint-ref
          g$bytevector$5505$1Bug2v
          g$k$5506$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '8))))
   (g$bytevector-u64-set!$5441$1Bug2v
     g$bytevector-u64-set!$5552$1Bug2v
     (case-lambda
       ((g$bytevector$5507$1Bug2v
          g$k$5508$1Bug2v
          g$n$5509$1Bug2v
          g$endianness$5510$1Bug2v)
        (bytevector-uint-set!
          g$bytevector$5507$1Bug2v
          g$k$5508$1Bug2v
          g$n$5509$1Bug2v
          g$endianness$5510$1Bug2v
          '8))))
   (g$bytevector-s64-set!$5442$1Bug2v
     g$bytevector-s64-set!$5553$1Bug2v
     (case-lambda
       ((g$bytevector$5511$1Bug2v
          g$k$5512$1Bug2v
          g$n$5513$1Bug2v
          g$endianness$5514$1Bug2v)
        (bytevector-sint-set!
          g$bytevector$5511$1Bug2v
          g$k$5512$1Bug2v
          g$n$5513$1Bug2v
          g$endianness$5514$1Bug2v
          '8))))
   (g$bytevector-u64-native-set!$5443$1Bug2v
     g$bytevector-u64-native-set!$5554$1Bug2v
     (case-lambda
       ((g$bytevector$5515$1Bug2v g$k$5516$1Bug2v g$n$5517$1Bug2v)
        (bytevector-uint-set!
          g$bytevector$5515$1Bug2v
          g$k$5516$1Bug2v
          g$n$5517$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '8))))
   (g$bytevector-s64-native-set!$5444$1Bug2v
     g$bytevector-s64-native-set!$5555$1Bug2v
     (case-lambda
       ((g$bytevector$5518$1Bug2v g$k$5519$1Bug2v g$n$5520$1Bug2v)
        (bytevector-sint-set!
          g$bytevector$5518$1Bug2v
          g$k$5519$1Bug2v
          g$n$5520$1Bug2v
          (g$native-endianness$5420$1Bug2v)
          '8))))
   (g$bytevector-ieee-single-native-ref$5445$1Bug2v
     g$bytevector-ieee-single-native-ref$5556$1Bug2v
     (case-lambda
       ((g$bytevector$5521$1Bug2v g$k$5522$1Bug2v)
        (if (not (zero? (mod g$k$5522$1Bug2v '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5522$1Bug2v)
          (bytevector-ieee-single-ref
            g$bytevector$5521$1Bug2v
            g$k$5522$1Bug2v
            (g$native-endianness$5420$1Bug2v))))))
   (g$bytevector-ieee-double-native-ref$5446$1Bug2v
     g$bytevector-ieee-double-native-ref$5557$1Bug2v
     (case-lambda
       ((g$bytevector$5523$1Bug2v g$k$5524$1Bug2v)
        (if (not (zero? (mod g$k$5524$1Bug2v '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5524$1Bug2v)
          (bytevector-ieee-double-ref
            g$bytevector$5523$1Bug2v
            g$k$5524$1Bug2v
            (g$native-endianness$5420$1Bug2v))))))
   (g$bytevector-ieee-single-native-set!$5447$1Bug2v
     g$bytevector-ieee-single-native-set!$5558$1Bug2v
     (case-lambda
       ((g$bytevector$5525$1Bug2v g$k$5526$1Bug2v g$x$5527$1Bug2v)
        (if (not (zero? (mod g$k$5526$1Bug2v '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5526$1Bug2v)
          (bytevector-ieee-single-set!
            g$bytevector$5525$1Bug2v
            g$k$5526$1Bug2v
            g$x$5527$1Bug2v
            (g$native-endianness$5420$1Bug2v))))))
   (g$bytevector-ieee-double-native-set!$5448$1Bug2v
     g$bytevector-ieee-double-native-set!$5559$1Bug2v
     (case-lambda
       ((g$bytevector$5528$1Bug2v g$k$5529$1Bug2v g$x$5530$1Bug2v)
        (if (not (zero? (mod g$k$5529$1Bug2v '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5529$1Bug2v)
          (bytevector-ieee-double-set!
            g$bytevector$5528$1Bug2v
            g$k$5529$1Bug2v
            g$x$5530$1Bug2v
            (g$native-endianness$5420$1Bug2v)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6582$5560$1Bug2v
     g$6582$5655$1Bug2v
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6585$1Bug2v
       '#f
       '#f
       '#()))
   (g$6584$5561$1Bug2v g$6584$5656$1Bug2v '#f)
   (g$6583$5562$1Bug2v
     g$6583$5657$1Bug2v
     (make-record-constructor-descriptor
       g$6582$5560$1Bug2v
       '#f
       g$6584$5561$1Bug2v))
   (g$&condition?$5563$1Bug2v
     g$&condition?$5658$1Bug2v
     (record-predicate g$6582$5560$1Bug2v))
   (g$make-&condition$5564$1Bug2v
     g$make-&condition$5659$1Bug2v
     (record-constructor g$6583$5562$1Bug2v))
   (g$&condition-rtd$5565$1Bug2v
     g$&condition-rtd$5660$1Bug2v
     g$6582$5560$1Bug2v)
   (g$&condition-rcd$5566$1Bug2v
     g$&condition-rcd$5661$1Bug2v
     g$6583$5562$1Bug2v)
   (g$6598$5567$1Bug2v
     g$6598$5662$1Bug2v
     (make-record-type-descriptor
       '&message
       g$6582$5560$1Bug2v
       'g$6601$1Bug2v
       '#f
       '#f
       '#((immutable message))))
   (g$6600$5568$1Bug2v g$6600$5663$1Bug2v '#f)
   (g$6599$5569$1Bug2v
     g$6599$5664$1Bug2v
     (make-record-constructor-descriptor
       g$6598$5567$1Bug2v
       g$6583$5562$1Bug2v
       g$6600$5568$1Bug2v))
   (g$6597$5570$1Bug2v
     g$6597$5665$1Bug2v
     (record-predicate g$6598$5567$1Bug2v))
   (g$make-message-condition$5571$1Bug2v
     g$make-message-condition$5666$1Bug2v
     (record-constructor g$6599$5569$1Bug2v))
   (g$6596$5572$1Bug2v
     g$6596$5667$1Bug2v
     (record-accessor g$6598$5567$1Bug2v '0))
   (g$message-condition?$5573$1Bug2v
     g$message-condition?$5668$1Bug2v
     (condition-predicate g$6598$5567$1Bug2v))
   (g$condition-message$5574$1Bug2v
     g$condition-message$5669$1Bug2v
     (condition-accessor g$6598$5567$1Bug2v g$6596$5572$1Bug2v))
   (g$6614$5575$1Bug2v
     g$6614$5670$1Bug2v
     (make-record-type-descriptor
       '&warning
       g$6582$5560$1Bug2v
       'g$6617$1Bug2v
       '#f
       '#f
       '#()))
   (g$6616$5576$1Bug2v g$6616$5671$1Bug2v '#f)
   (g$6615$5577$1Bug2v
     g$6615$5672$1Bug2v
     (make-record-constructor-descriptor
       g$6614$5575$1Bug2v
       g$6583$5562$1Bug2v
       g$6616$5576$1Bug2v))
   (g$6613$5578$1Bug2v
     g$6613$5673$1Bug2v
     (record-predicate g$6614$5575$1Bug2v))
   (g$make-warning$5579$1Bug2v
     g$make-warning$5674$1Bug2v
     (record-constructor g$6615$5577$1Bug2v))
   (g$warning?$5580$1Bug2v
     g$warning?$5675$1Bug2v
     (condition-predicate g$6614$5575$1Bug2v))
   (g$6628$5581$1Bug2v
     g$6628$5676$1Bug2v
     (make-record-type-descriptor
       '&serious
       g$6582$5560$1Bug2v
       'g$6631$1Bug2v
       '#f
       '#f
       '#()))
   (g$6630$5582$1Bug2v g$6630$5677$1Bug2v '#f)
   (g$6629$5583$1Bug2v
     g$6629$5678$1Bug2v
     (make-record-constructor-descriptor
       g$6628$5581$1Bug2v
       g$6583$5562$1Bug2v
       g$6630$5582$1Bug2v))
   (g$6627$5584$1Bug2v
     g$6627$5679$1Bug2v
     (record-predicate g$6628$5581$1Bug2v))
   (g$make-serious-condition$5585$1Bug2v
     g$make-serious-condition$5680$1Bug2v
     (record-constructor g$6629$5583$1Bug2v))
   (g$serious-condition?$5586$1Bug2v
     g$serious-condition?$5681$1Bug2v
     (condition-predicate g$6628$5581$1Bug2v))
   (g$6642$5587$1Bug2v
     g$6642$5682$1Bug2v
     (make-record-type-descriptor
       '&error
       g$6628$5581$1Bug2v
       'g$6645$1Bug2v
       '#f
       '#f
       '#()))
   (g$6644$5588$1Bug2v g$6644$5683$1Bug2v '#f)
   (g$6643$5589$1Bug2v
     g$6643$5684$1Bug2v
     (make-record-constructor-descriptor
       g$6642$5587$1Bug2v
       g$6629$5583$1Bug2v
       g$6644$5588$1Bug2v))
   (g$6641$5590$1Bug2v
     g$6641$5685$1Bug2v
     (record-predicate g$6642$5587$1Bug2v))
   (g$make-error$5591$1Bug2v
     g$make-error$5686$1Bug2v
     (record-constructor g$6643$5589$1Bug2v))
   (g$error?$5592$1Bug2v
     g$error?$5687$1Bug2v
     (condition-predicate g$6642$5587$1Bug2v))
   (g$6656$5593$1Bug2v
     g$6656$5688$1Bug2v
     (make-record-type-descriptor
       '&violation
       g$6628$5581$1Bug2v
       'g$6659$1Bug2v
       '#f
       '#f
       '#()))
   (g$6658$5594$1Bug2v g$6658$5689$1Bug2v '#f)
   (g$6657$5595$1Bug2v
     g$6657$5690$1Bug2v
     (make-record-constructor-descriptor
       g$6656$5593$1Bug2v
       g$6629$5583$1Bug2v
       g$6658$5594$1Bug2v))
   (g$6655$5596$1Bug2v
     g$6655$5691$1Bug2v
     (record-predicate g$6656$5593$1Bug2v))
   (g$make-violation$5597$1Bug2v
     g$make-violation$5692$1Bug2v
     (record-constructor g$6657$5595$1Bug2v))
   (g$violation?$5598$1Bug2v
     g$violation?$5693$1Bug2v
     (condition-predicate g$6656$5593$1Bug2v))
   (g$6670$5599$1Bug2v
     g$6670$5694$1Bug2v
     (make-record-type-descriptor
       '&assertion
       g$6656$5593$1Bug2v
       'g$6673$1Bug2v
       '#f
       '#f
       '#()))
   (g$6672$5600$1Bug2v g$6672$5695$1Bug2v '#f)
   (g$6671$5601$1Bug2v
     g$6671$5696$1Bug2v
     (make-record-constructor-descriptor
       g$6670$5599$1Bug2v
       g$6657$5595$1Bug2v
       g$6672$5600$1Bug2v))
   (g$6669$5602$1Bug2v
     g$6669$5697$1Bug2v
     (record-predicate g$6670$5599$1Bug2v))
   (g$make-assertion-violation$5603$1Bug2v
     g$make-assertion-violation$5698$1Bug2v
     (record-constructor g$6671$5601$1Bug2v))
   (g$assertion-violation?$5604$1Bug2v
     g$assertion-violation?$5699$1Bug2v
     (condition-predicate g$6670$5599$1Bug2v))
   (g$6685$5605$1Bug2v
     g$6685$5700$1Bug2v
     (make-record-type-descriptor
       '&irritants
       g$6582$5560$1Bug2v
       'g$6688$1Bug2v
       '#f
       '#f
       '#((immutable irritants))))
   (g$6687$5606$1Bug2v g$6687$5701$1Bug2v '#f)
   (g$6686$5607$1Bug2v
     g$6686$5702$1Bug2v
     (make-record-constructor-descriptor
       g$6685$5605$1Bug2v
       g$6583$5562$1Bug2v
       g$6687$5606$1Bug2v))
   (g$6684$5608$1Bug2v
     g$6684$5703$1Bug2v
     (record-predicate g$6685$5605$1Bug2v))
   (g$make-irritants-condition$5609$1Bug2v
     g$make-irritants-condition$5704$1Bug2v
     (record-constructor g$6686$5607$1Bug2v))
   (g$6683$5610$1Bug2v
     g$6683$5705$1Bug2v
     (record-accessor g$6685$5605$1Bug2v '0))
   (g$irritants-condition?$5611$1Bug2v
     g$irritants-condition?$5706$1Bug2v
     (condition-predicate g$6685$5605$1Bug2v))
   (g$condition-irritants$5612$1Bug2v
     g$condition-irritants$5707$1Bug2v
     (condition-accessor g$6685$5605$1Bug2v g$6683$5610$1Bug2v))
   (g$6702$5613$1Bug2v
     g$6702$5708$1Bug2v
     (make-record-type-descriptor
       '&who
       g$6582$5560$1Bug2v
       'g$6705$1Bug2v
       '#f
       '#f
       '#((immutable who))))
   (g$6704$5614$1Bug2v g$6704$5709$1Bug2v '#f)
   (g$6703$5615$1Bug2v
     g$6703$5710$1Bug2v
     (make-record-constructor-descriptor
       g$6702$5613$1Bug2v
       g$6583$5562$1Bug2v
       g$6704$5614$1Bug2v))
   (g$6701$5616$1Bug2v
     g$6701$5711$1Bug2v
     (record-predicate g$6702$5613$1Bug2v))
   (g$make-who-condition$5617$1Bug2v
     g$make-who-condition$5712$1Bug2v
     (record-constructor g$6703$5615$1Bug2v))
   (g$6700$5618$1Bug2v
     g$6700$5713$1Bug2v
     (record-accessor g$6702$5613$1Bug2v '0))
   (g$who-condition?$5619$1Bug2v
     g$who-condition?$5714$1Bug2v
     (condition-predicate g$6702$5613$1Bug2v))
   (g$condition-who$5620$1Bug2v
     g$condition-who$5715$1Bug2v
     (condition-accessor g$6702$5613$1Bug2v g$6700$5618$1Bug2v))
   (g$6718$5621$1Bug2v
     g$6718$5716$1Bug2v
     (make-record-type-descriptor
       '&non-continuable
       g$6656$5593$1Bug2v
       'g$6721$1Bug2v
       '#f
       '#f
       '#()))
   (g$6720$5622$1Bug2v g$6720$5717$1Bug2v '#f)
   (g$6719$5623$1Bug2v
     g$6719$5718$1Bug2v
     (make-record-constructor-descriptor
       g$6718$5621$1Bug2v
       g$6657$5595$1Bug2v
       g$6720$5622$1Bug2v))
   (g$6717$5624$1Bug2v
     g$6717$5719$1Bug2v
     (record-predicate g$6718$5621$1Bug2v))
   (g$make-non-continuable-violation$5625$1Bug2v
     g$make-non-continuable-violation$5720$1Bug2v
     (record-constructor g$6719$5623$1Bug2v))
   (g$non-continuable-violation?$5626$1Bug2v
     g$non-continuable-violation?$5721$1Bug2v
     (condition-predicate g$6718$5621$1Bug2v))
   (g$6732$5627$1Bug2v
     g$6732$5722$1Bug2v
     (make-record-type-descriptor
       '&implementation-restriction
       g$6656$5593$1Bug2v
       'g$6735$1Bug2v
       '#f
       '#f
       '#()))
   (g$6734$5628$1Bug2v g$6734$5723$1Bug2v '#f)
   (g$6733$5629$1Bug2v
     g$6733$5724$1Bug2v
     (make-record-constructor-descriptor
       g$6732$5627$1Bug2v
       g$6657$5595$1Bug2v
       g$6734$5628$1Bug2v))
   (g$6731$5630$1Bug2v
     g$6731$5725$1Bug2v
     (record-predicate g$6732$5627$1Bug2v))
   (g$make-implementation-restriction-violation$5631$1Bug2v
     g$make-implementation-restriction-violation$5726$1Bug2v
     (record-constructor g$6733$5629$1Bug2v))
   (g$implementation-restriction-violation?$5632$1Bug2v
     g$implementation-restriction-violation?$5727$1Bug2v
     (condition-predicate g$6732$5627$1Bug2v))
   (g$6746$5633$1Bug2v
     g$6746$5728$1Bug2v
     (make-record-type-descriptor
       '&lexical
       g$6656$5593$1Bug2v
       'g$6749$1Bug2v
       '#f
       '#f
       '#()))
   (g$6748$5634$1Bug2v g$6748$5729$1Bug2v '#f)
   (g$6747$5635$1Bug2v
     g$6747$5730$1Bug2v
     (make-record-constructor-descriptor
       g$6746$5633$1Bug2v
       g$6657$5595$1Bug2v
       g$6748$5634$1Bug2v))
   (g$6745$5636$1Bug2v
     g$6745$5731$1Bug2v
     (record-predicate g$6746$5633$1Bug2v))
   (g$make-lexical-violation$5637$1Bug2v
     g$make-lexical-violation$5732$1Bug2v
     (record-constructor g$6747$5635$1Bug2v))
   (g$lexical-violation?$5638$1Bug2v
     g$lexical-violation?$5733$1Bug2v
     (condition-predicate g$6746$5633$1Bug2v))
   (g$6762$5639$1Bug2v
     g$6762$5734$1Bug2v
     (make-record-type-descriptor
       '&syntax
       g$6656$5593$1Bug2v
       'g$6765$1Bug2v
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$6764$5640$1Bug2v g$6764$5735$1Bug2v '#f)
   (g$6763$5641$1Bug2v
     g$6763$5736$1Bug2v
     (make-record-constructor-descriptor
       g$6762$5639$1Bug2v
       g$6657$5595$1Bug2v
       g$6764$5640$1Bug2v))
   (g$6761$5642$1Bug2v
     g$6761$5737$1Bug2v
     (record-predicate g$6762$5639$1Bug2v))
   (g$make-syntax-violation$5643$1Bug2v
     g$make-syntax-violation$5738$1Bug2v
     (record-constructor g$6763$5641$1Bug2v))
   (g$6759$5644$1Bug2v
     g$6759$5739$1Bug2v
     (record-accessor g$6762$5639$1Bug2v '0))
   (g$6760$5645$1Bug2v
     g$6760$5740$1Bug2v
     (record-accessor g$6762$5639$1Bug2v '1))
   (g$syntax-violation?$5646$1Bug2v
     g$syntax-violation?$5741$1Bug2v
     (condition-predicate g$6762$5639$1Bug2v))
   (g$syntax-violation-form$5647$1Bug2v
     g$syntax-violation-form$5742$1Bug2v
     (condition-accessor g$6762$5639$1Bug2v g$6759$5644$1Bug2v))
   (g$syntax-violation-subform$5648$1Bug2v
     g$syntax-violation-subform$5743$1Bug2v
     (condition-accessor g$6762$5639$1Bug2v g$6760$5645$1Bug2v))
   (g$6780$5649$1Bug2v
     g$6780$5744$1Bug2v
     (make-record-type-descriptor
       '&undefined
       g$6656$5593$1Bug2v
       'g$6783$1Bug2v
       '#f
       '#f
       '#()))
   (g$6782$5650$1Bug2v g$6782$5745$1Bug2v '#f)
   (g$6781$5651$1Bug2v
     g$6781$5746$1Bug2v
     (make-record-constructor-descriptor
       g$6780$5649$1Bug2v
       g$6657$5595$1Bug2v
       g$6782$5650$1Bug2v))
   (g$6779$5652$1Bug2v
     g$6779$5747$1Bug2v
     (record-predicate g$6780$5649$1Bug2v))
   (g$make-undefined-violation$5653$1Bug2v
     g$make-undefined-violation$5748$1Bug2v
     (record-constructor g$6781$5651$1Bug2v))
   (g$undefined-violation?$5654$1Bug2v
     g$undefined-violation?$5749$1Bug2v
     (condition-predicate g$6780$5649$1Bug2v)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$5750$1Bug2v
     g$append!$5756$1Bug2v
     (case-lambda
       ((g$a$5751$1Bug2v . g$b$5752$1Bug2v)
        (if (null? g$a$5751$1Bug2v)
          g$b$5752$1Bug2v
          (if (null? g$b$5752$1Bug2v)
            g$a$5751$1Bug2v
            (begin
              ((letrec ((g$f$5753$1Bug2v
                          (case-lambda
                            ((g$a$5754$1Bug2v)
                             ((case-lambda
                                ((g$n$5755$1Bug2v)
                                 (if (null? g$n$5755$1Bug2v)
                                   (set-cdr! g$a$5754$1Bug2v g$b$5752$1Bug2v)
                                   (g$f$5753$1Bug2v g$n$5755$1Bug2v))))
                              (cdr g$a$5754$1Bug2v))))))
                 g$f$5753$1Bug2v)
               g$a$5751$1Bug2v)
              g$a$5751$1Bug2v)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$sign$5757$1Bug2v
     g$sign$5775$1Bug2v
     (case-lambda
       ((g$n$5763$1Bug2v)
        (if (> g$n$5763$1Bug2v '0) '1 (if (< g$n$5763$1Bug2v '0) '-1 '0)))))
   (g$quotient$5758$1Bug2v
     g$quotient$5776$1Bug2v
     (case-lambda
       ((g$n1$5764$1Bug2v g$n2$5765$1Bug2v)
        (begin
          (if (not (integer-valued? g$n1$5764$1Bug2v))
            (assertion-violation 'quotient '"not an integer" g$n1$5764$1Bug2v)
            (void))
          (if (not (integer-valued? g$n2$5765$1Bug2v))
            (assertion-violation 'quotient '"not an integer" g$n2$5765$1Bug2v)
            (void))
          (* (g$sign$5757$1Bug2v g$n1$5764$1Bug2v)
             (g$sign$5757$1Bug2v g$n2$5765$1Bug2v)
             (div (abs g$n1$5764$1Bug2v) (abs g$n2$5765$1Bug2v)))))))
   (g$remainder$5759$1Bug2v
     g$remainder$5777$1Bug2v
     (case-lambda
       ((g$n1$5766$1Bug2v g$n2$5767$1Bug2v)
        (begin
          (if (not (integer-valued? g$n1$5766$1Bug2v))
            (assertion-violation 'remainder '"not an integer" g$n1$5766$1Bug2v)
            (void))
          (if (not (integer-valued? g$n2$5767$1Bug2v))
            (assertion-violation 'remainder '"not an integer" g$n2$5767$1Bug2v)
            (void))
          (* (g$sign$5757$1Bug2v g$n1$5766$1Bug2v)
             (mod (abs g$n1$5766$1Bug2v) (abs g$n2$5767$1Bug2v)))))))
   (g$modulo$5760$1Bug2v
     g$modulo$5778$1Bug2v
     (case-lambda
       ((g$n1$5768$1Bug2v g$n2$5769$1Bug2v)
        (begin
          (if (not (integer-valued? g$n1$5768$1Bug2v))
            (assertion-violation 'modulo '"not an integer" g$n1$5768$1Bug2v)
            (void))
          (if (not (integer-valued? g$n2$5769$1Bug2v))
            (assertion-violation 'modulo '"not an integer" g$n2$5769$1Bug2v)
            (void))
          (* (g$sign$5757$1Bug2v g$n2$5769$1Bug2v)
             (mod (* (g$sign$5757$1Bug2v g$n2$5769$1Bug2v) g$n1$5768$1Bug2v)
                  (abs g$n2$5769$1Bug2v)))))))
   (g$make-promise$5761$1Bug2v
     g$make-promise$5779$1Bug2v
     (case-lambda
       ((g$proc$5770$1Bug2v)
        ((case-lambda
           ((g$result-ready?$5771$1Bug2v g$result$5772$1Bug2v)
            (case-lambda
              (()
               (if g$result-ready?$5771$1Bug2v
                 g$result$5772$1Bug2v
                 ((case-lambda
                    ((g$x$5773$1Bug2v)
                     (if g$result-ready?$5771$1Bug2v
                       g$result$5772$1Bug2v
                       (begin
                         (set! g$result-ready?$5771$1Bug2v '#t)
                         (set! g$result$5772$1Bug2v g$x$5773$1Bug2v)
                         g$result$5772$1Bug2v))))
                  (g$proc$5770$1Bug2v)))))))
         '#f
         '#f))))
   (g$force$5762$1Bug2v
     g$force$5780$1Bug2v
     (case-lambda ((g$object$5774$1Bug2v) (g$object$5774$1Bug2v)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$5781$1Bug2v
     g$split$5807$1Bug2v
     (case-lambda
       ((g$ls$5784$1Bug2v)
        ((letrec ((g$loop$5785$1Bug2v
                    (case-lambda
                      ((g$rest$5786$1Bug2v
                         g$left$5787$1Bug2v
                         g$right$5788$1Bug2v)
                       (if (null? g$rest$5786$1Bug2v)
                         (cons g$left$5787$1Bug2v g$right$5788$1Bug2v)
                         (if (null? (cdr g$rest$5786$1Bug2v))
                           (cons
                             (cons (car g$rest$5786$1Bug2v) g$left$5787$1Bug2v)
                             g$right$5788$1Bug2v)
                           (g$loop$5785$1Bug2v
                             (g$cddr$5126$1Bug2v g$rest$5786$1Bug2v)
                             (cons (car g$rest$5786$1Bug2v) g$left$5787$1Bug2v)
                             (cons
                               (g$cadr$5124$1Bug2v g$rest$5786$1Bug2v)
                               g$right$5788$1Bug2v))))))))
           g$loop$5785$1Bug2v)
         g$ls$5784$1Bug2v
         '()
         '()))))
   (g$reverse-it$5782$1Bug2v
     g$reverse-it$5808$1Bug2v
     (case-lambda
       ((g$head$5789$1Bug2v g$tail$5790$1Bug2v)
        (if (null? g$head$5789$1Bug2v)
          g$tail$5790$1Bug2v
          ((case-lambda
             ((g$hd$5791$1Bug2v g$tl$5792$1Bug2v)
              (g$reverse-it$5782$1Bug2v
                g$tl$5792$1Bug2v
                (cons g$hd$5791$1Bug2v g$tail$5790$1Bug2v))))
           (car g$head$5789$1Bug2v)
           (cdr g$head$5789$1Bug2v))))))
   (g$list-sort$5783$1Bug2v
     g$list-sort$5809$1Bug2v
     (case-lambda
       ((g$precedes?$5793$1Bug2v g$ls$5794$1Bug2v)
        ((case-lambda
           ((g$merge$5795$1Bug2v)
            ((case-lambda
               (()
                (if (null? g$ls$5794$1Bug2v)
                  '()
                  ((letrec ((g$helper$5796$1Bug2v
                              (case-lambda
                                ((g$piece$5797$1Bug2v)
                                 (if (null? (cdr g$piece$5797$1Bug2v))
                                   g$piece$5797$1Bug2v
                                   ((case-lambda
                                      ((g$parts$5798$1Bug2v)
                                       (g$merge$5795$1Bug2v
                                         (g$helper$5796$1Bug2v
                                           (car g$parts$5798$1Bug2v))
                                         (g$helper$5796$1Bug2v
                                           (cdr g$parts$5798$1Bug2v)))))
                                    (g$split$5781$1Bug2v
                                      g$piece$5797$1Bug2v)))))))
                     g$helper$5796$1Bug2v)
                   g$ls$5794$1Bug2v)))))))
         (case-lambda
           ((g$list-1$5799$1Bug2v g$list-2$5800$1Bug2v)
            ((letrec ((g$loop$5801$1Bug2v
                        (case-lambda
                          ((g$source-1$5802$1Bug2v
                             g$source-2$5803$1Bug2v
                             g$so-far$5804$1Bug2v)
                           (if (null? g$source-1$5802$1Bug2v)
                             (g$reverse-it$5782$1Bug2v
                               g$so-far$5804$1Bug2v
                               g$source-2$5803$1Bug2v)
                             (if (null? g$source-2$5803$1Bug2v)
                               (g$reverse-it$5782$1Bug2v
                                 g$so-far$5804$1Bug2v
                                 g$source-1$5802$1Bug2v)
                               ((case-lambda
                                  ((g$car-1$5805$1Bug2v g$car-2$5806$1Bug2v)
                                   (if (g$precedes?$5793$1Bug2v
                                         g$car-2$5806$1Bug2v
                                         g$car-1$5805$1Bug2v)
                                     (g$loop$5801$1Bug2v
                                       g$source-1$5802$1Bug2v
                                       (cdr g$source-2$5803$1Bug2v)
                                       (cons
                                         g$car-2$5806$1Bug2v
                                         g$so-far$5804$1Bug2v))
                                     (g$loop$5801$1Bug2v
                                       g$source-2$5803$1Bug2v
                                       (cdr g$source-1$5802$1Bug2v)
                                       (cons
                                         g$car-1$5805$1Bug2v
                                         g$so-far$5804$1Bug2v)))))
                                (car g$source-1$5802$1Bug2v)
                                (car g$source-2$5803$1Bug2v))))))))
               g$loop$5801$1Bug2v)
             g$list-1$5799$1Bug2v
             g$list-2$5800$1Bug2v
             '()))))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$5853$1Bug2v
     g$string-ci=?$5919$1Bug2v
     (case-lambda
       ((g$a$5869$1Bug2v g$b$5870$1Bug2v . g$rest$5871$1Bug2v)
        (begin
          (if (not (string? g$a$5869$1Bug2v))
            (assertion-violation 'string-ci=? '"not a string" g$a$5869$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5872$1Bug2v)
               (begin
                 (if (not (string? g$x$5872$1Bug2v))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$5872$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5873$1Bug2v)
                     (begin
                       (set! g$a$5869$1Bug2v g$x$5872$1Bug2v)
                       g$r$5873$1Bug2v)))
                  (= (string-ci-compare g$a$5869$1Bug2v g$x$5872$1Bug2v) '0)))))
            (cons g$b$5870$1Bug2v g$rest$5871$1Bug2v))))))
   (g$string-ci<?$5854$1Bug2v
     g$string-ci<?$5920$1Bug2v
     (case-lambda
       ((g$a$5874$1Bug2v g$b$5875$1Bug2v . g$rest$5876$1Bug2v)
        (begin
          (if (not (string? g$a$5874$1Bug2v))
            (assertion-violation 'string-ci<? '"not a string" g$a$5874$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5877$1Bug2v)
               (begin
                 (if (not (string? g$x$5877$1Bug2v))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$5877$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5878$1Bug2v)
                     (begin
                       (set! g$a$5874$1Bug2v g$x$5877$1Bug2v)
                       g$r$5878$1Bug2v)))
                  (< (string-ci-compare g$a$5874$1Bug2v g$x$5877$1Bug2v) '0)))))
            (cons g$b$5875$1Bug2v g$rest$5876$1Bug2v))))))
   (g$string-ci>?$5855$1Bug2v
     g$string-ci>?$5921$1Bug2v
     (case-lambda
       ((g$a$5879$1Bug2v g$b$5880$1Bug2v . g$rest$5881$1Bug2v)
        (begin
          (if (not (string? g$a$5879$1Bug2v))
            (assertion-violation 'string-ci>? '"not a string" g$a$5879$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5882$1Bug2v)
               (begin
                 (if (not (string? g$x$5882$1Bug2v))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$5882$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5883$1Bug2v)
                     (begin
                       (set! g$a$5879$1Bug2v g$x$5882$1Bug2v)
                       g$r$5883$1Bug2v)))
                  (> (string-ci-compare g$a$5879$1Bug2v g$x$5882$1Bug2v) '0)))))
            (cons g$b$5880$1Bug2v g$rest$5881$1Bug2v))))))
   (g$string-ci<=?$5856$1Bug2v
     g$string-ci<=?$5922$1Bug2v
     (case-lambda
       ((g$a$5884$1Bug2v g$b$5885$1Bug2v . g$rest$5886$1Bug2v)
        (begin
          (if (not (string? g$a$5884$1Bug2v))
            (assertion-violation 'string-ci<=? '"not a string" g$a$5884$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5887$1Bug2v)
               (begin
                 (if (not (string? g$x$5887$1Bug2v))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$5887$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5888$1Bug2v)
                     (begin
                       (set! g$a$5884$1Bug2v g$x$5887$1Bug2v)
                       g$r$5888$1Bug2v)))
                  (<= (string-ci-compare g$a$5884$1Bug2v g$x$5887$1Bug2v)
                      '0)))))
            (cons g$b$5885$1Bug2v g$rest$5886$1Bug2v))))))
   (g$string-ci>=?$5857$1Bug2v
     g$string-ci>=?$5923$1Bug2v
     (case-lambda
       ((g$a$5889$1Bug2v g$b$5890$1Bug2v . g$rest$5891$1Bug2v)
        (begin
          (if (not (string? g$a$5889$1Bug2v))
            (assertion-violation 'string-ci>=? '"not a string" g$a$5889$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5892$1Bug2v)
               (begin
                 (if (not (string? g$x$5892$1Bug2v))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$5892$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5893$1Bug2v)
                     (begin
                       (set! g$a$5889$1Bug2v g$x$5892$1Bug2v)
                       g$r$5893$1Bug2v)))
                  (>= (string-ci-compare g$a$5889$1Bug2v g$x$5892$1Bug2v)
                      '0)))))
            (cons g$b$5890$1Bug2v g$rest$5891$1Bug2v))))))
   (g$char-ci=?$5864$1Bug2v
     g$char-ci=?$5924$1Bug2v
     (case-lambda
       ((g$a$5894$1Bug2v g$b$5895$1Bug2v . g$rest$5896$1Bug2v)
        (begin
          (if (not (char? g$a$5894$1Bug2v))
            (assertion-violation 'char-ci=? '"not a char" g$a$5894$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5897$1Bug2v)
               (begin
                 (if (not (char? g$x$5897$1Bug2v))
                   (assertion-violation
                     'char-ci=?
                     '"not a char"
                     g$x$5897$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5898$1Bug2v)
                     (begin
                       (set! g$a$5894$1Bug2v g$x$5897$1Bug2v)
                       g$r$5898$1Bug2v)))
                  (= (char->integer (char-upcase g$a$5894$1Bug2v))
                     (char->integer (char-upcase g$x$5897$1Bug2v)))))))
            (cons g$b$5895$1Bug2v g$rest$5896$1Bug2v))))))
   (g$char-ci<?$5865$1Bug2v
     g$char-ci<?$5925$1Bug2v
     (case-lambda
       ((g$a$5899$1Bug2v g$b$5900$1Bug2v . g$rest$5901$1Bug2v)
        (begin
          (if (not (char? g$a$5899$1Bug2v))
            (assertion-violation 'char-ci<? '"not a char" g$a$5899$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5902$1Bug2v)
               (begin
                 (if (not (char? g$x$5902$1Bug2v))
                   (assertion-violation
                     'char-ci<?
                     '"not a char"
                     g$x$5902$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5903$1Bug2v)
                     (begin
                       (set! g$a$5899$1Bug2v g$x$5902$1Bug2v)
                       g$r$5903$1Bug2v)))
                  (< (char->integer (char-upcase g$a$5899$1Bug2v))
                     (char->integer (char-upcase g$x$5902$1Bug2v)))))))
            (cons g$b$5900$1Bug2v g$rest$5901$1Bug2v))))))
   (g$char-ci>?$5866$1Bug2v
     g$char-ci>?$5926$1Bug2v
     (case-lambda
       ((g$a$5904$1Bug2v g$b$5905$1Bug2v . g$rest$5906$1Bug2v)
        (begin
          (if (not (char? g$a$5904$1Bug2v))
            (assertion-violation 'char-ci>? '"not a char" g$a$5904$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5907$1Bug2v)
               (begin
                 (if (not (char? g$x$5907$1Bug2v))
                   (assertion-violation
                     'char-ci>?
                     '"not a char"
                     g$x$5907$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5908$1Bug2v)
                     (begin
                       (set! g$a$5904$1Bug2v g$x$5907$1Bug2v)
                       g$r$5908$1Bug2v)))
                  (> (char->integer (char-upcase g$a$5904$1Bug2v))
                     (char->integer (char-upcase g$x$5907$1Bug2v)))))))
            (cons g$b$5905$1Bug2v g$rest$5906$1Bug2v))))))
   (g$char-ci<=?$5867$1Bug2v
     g$char-ci<=?$5927$1Bug2v
     (case-lambda
       ((g$a$5909$1Bug2v g$b$5910$1Bug2v . g$rest$5911$1Bug2v)
        (begin
          (if (not (char? g$a$5909$1Bug2v))
            (assertion-violation 'char-ci<=? '"not a char" g$a$5909$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5912$1Bug2v)
               (begin
                 (if (not (char? g$x$5912$1Bug2v))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$5912$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5913$1Bug2v)
                     (begin
                       (set! g$a$5909$1Bug2v g$x$5912$1Bug2v)
                       g$r$5913$1Bug2v)))
                  (<= (char->integer (char-upcase g$a$5909$1Bug2v))
                      (char->integer (char-upcase g$x$5912$1Bug2v)))))))
            (cons g$b$5910$1Bug2v g$rest$5911$1Bug2v))))))
   (g$char-ci>=?$5868$1Bug2v
     g$char-ci>=?$5928$1Bug2v
     (case-lambda
       ((g$a$5914$1Bug2v g$b$5915$1Bug2v . g$rest$5916$1Bug2v)
        (begin
          (if (not (char? g$a$5914$1Bug2v))
            (assertion-violation 'char-ci>=? '"not a char" g$a$5914$1Bug2v)
            (void))
          (g$for-all$4960$1Bug2v
            (case-lambda
              ((g$x$5917$1Bug2v)
               (begin
                 (if (not (char? g$x$5917$1Bug2v))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$5917$1Bug2v)
                   (void))
                 ((case-lambda
                    ((g$r$5918$1Bug2v)
                     (begin
                       (set! g$a$5914$1Bug2v g$x$5917$1Bug2v)
                       g$r$5918$1Bug2v)))
                  (>= (char->integer (char-upcase g$a$5914$1Bug2v))
                      (char->integer (char-upcase g$x$5917$1Bug2v)))))))
            (cons g$b$5915$1Bug2v g$rest$5916$1Bug2v)))))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$5929$1Bug2v
     g$bitwise-if$5976$1Bug2v
     (case-lambda
       ((g$ei1$5936$1Bug2v g$ei2$5937$1Bug2v g$ei3$5938$1Bug2v)
        (bitwise-ior
          (bitwise-and g$ei1$5936$1Bug2v g$ei2$5937$1Bug2v)
          (bitwise-and (bitwise-not g$ei1$5936$1Bug2v) g$ei3$5938$1Bug2v)))))
   (g$bitwise-copy-bit$5930$1Bug2v
     g$bitwise-copy-bit$5977$1Bug2v
     (case-lambda
       ((g$ei1$5939$1Bug2v g$ei2$5940$1Bug2v g$ei3$5941$1Bug2v)
        ((case-lambda
           ((g$mask$5942$1Bug2v)
            ((case-lambda
               (()
                (g$bitwise-if$5929$1Bug2v
                  g$mask$5942$1Bug2v
                  (g$bitwise-arithmetic-shift-left$5933$1Bug2v
                    g$ei3$5941$1Bug2v
                    g$ei2$5940$1Bug2v)
                  g$ei1$5939$1Bug2v))))))
         (g$bitwise-arithmetic-shift-left$5933$1Bug2v '1 g$ei2$5940$1Bug2v)))))
   (g$bitwise-bit-field$5931$1Bug2v
     g$bitwise-bit-field$5978$1Bug2v
     (case-lambda
       ((g$ei1$5943$1Bug2v g$ei2$5944$1Bug2v g$ei3$5945$1Bug2v)
        ((case-lambda
           ((g$mask$5946$1Bug2v)
            (g$bitwise-arithmetic-shift-right$5934$1Bug2v
              (bitwise-and g$ei1$5943$1Bug2v g$mask$5946$1Bug2v)
              g$ei2$5944$1Bug2v)))
         (bitwise-not
           (g$bitwise-arithmetic-shift-left$5933$1Bug2v
             '-1
             g$ei3$5945$1Bug2v))))))
   (g$bitwise-copy-bit-field$5932$1Bug2v
     g$bitwise-copy-bit-field$5979$1Bug2v
     (case-lambda
       ((g$ei1$5947$1Bug2v
          g$ei2$5948$1Bug2v
          g$ei3$5949$1Bug2v
          g$ei4$5950$1Bug2v)
        ((case-lambda
           ((g$to$5951$1Bug2v)
            ((case-lambda
               ((g$start$5952$1Bug2v)
                ((case-lambda
                   ((g$end$5953$1Bug2v)
                    ((case-lambda
                       ((g$from$5954$1Bug2v)
                        ((case-lambda
                           ((g$mask1$5955$1Bug2v)
                            ((case-lambda
                               ((g$mask2$5956$1Bug2v)
                                ((case-lambda
                                   ((g$mask$5957$1Bug2v)
                                    ((case-lambda
                                       (()
                                        (g$bitwise-if$5929$1Bug2v
                                          g$mask$5957$1Bug2v
                                          (g$bitwise-arithmetic-shift-left$5933$1Bug2v
                                            g$from$5954$1Bug2v
                                            g$start$5952$1Bug2v)
                                          g$to$5951$1Bug2v))))))
                                 (bitwise-and
                                   g$mask1$5955$1Bug2v
                                   g$mask2$5956$1Bug2v))))
                             (bitwise-not
                               (g$bitwise-arithmetic-shift-left$5933$1Bug2v
                                 '-1
                                 g$end$5953$1Bug2v)))))
                         (g$bitwise-arithmetic-shift-left$5933$1Bug2v
                           '-1
                           g$start$5952$1Bug2v))))
                     g$ei4$5950$1Bug2v)))
                 g$ei3$5949$1Bug2v)))
             g$ei2$5948$1Bug2v)))
         g$ei1$5947$1Bug2v))))
   (g$bitwise-arithmetic-shift-left$5933$1Bug2v
     g$bitwise-arithmetic-shift-left$5980$1Bug2v
     (case-lambda
       ((g$ei1$5958$1Bug2v g$ei2$5959$1Bug2v)
        (bitwise-arithmetic-shift g$ei1$5958$1Bug2v g$ei2$5959$1Bug2v))))
   (g$bitwise-arithmetic-shift-right$5934$1Bug2v
     g$bitwise-arithmetic-shift-right$5981$1Bug2v
     (case-lambda
       ((g$ei1$5960$1Bug2v g$ei2$5961$1Bug2v)
        (bitwise-arithmetic-shift g$ei1$5960$1Bug2v (- g$ei2$5961$1Bug2v)))))
   (g$bitwise-rotate-bit-field$5935$1Bug2v
     g$bitwise-rotate-bit-field$5982$1Bug2v
     (case-lambda
       ((g$ei1$5962$1Bug2v
          g$ei2$5963$1Bug2v
          g$ei3$5964$1Bug2v
          g$ei4$5965$1Bug2v)
        ((case-lambda
           ((g$n$5966$1Bug2v)
            ((case-lambda
               ((g$start$5967$1Bug2v)
                ((case-lambda
                   ((g$end$5968$1Bug2v)
                    ((case-lambda
                       ((g$count$5969$1Bug2v)
                        ((case-lambda
                           ((g$width$5970$1Bug2v)
                            ((case-lambda
                               (()
                                (if (positive? g$width$5970$1Bug2v)
                                  ((case-lambda
                                     ((g$count$5971$1Bug2v)
                                      ((case-lambda
                                         ((g$field0$5972$1Bug2v)
                                          ((case-lambda
                                             ((g$field1$5973$1Bug2v)
                                              ((case-lambda
                                                 ((g$field2$5974$1Bug2v)
                                                  ((case-lambda
                                                     ((g$field$5975$1Bug2v)
                                                      ((case-lambda
                                                         (()
                                                          (g$bitwise-copy-bit-field$5932$1Bug2v
                                                            g$n$5966$1Bug2v
                                                            g$start$5967$1Bug2v
                                                            g$end$5968$1Bug2v
                                                            g$field$5975$1Bug2v))))))
                                                   (bitwise-ior
                                                     g$field1$5973$1Bug2v
                                                     g$field2$5974$1Bug2v))))
                                               (g$bitwise-arithmetic-shift-right$5934$1Bug2v
                                                 g$field0$5972$1Bug2v
                                                 (- g$width$5970$1Bug2v
                                                    g$count$5971$1Bug2v)))))
                                           (g$bitwise-arithmetic-shift-left$5933$1Bug2v
                                             g$field0$5972$1Bug2v
                                             g$count$5971$1Bug2v))))
                                       (g$bitwise-bit-field$5931$1Bug2v
                                         g$n$5966$1Bug2v
                                         g$start$5967$1Bug2v
                                         g$end$5968$1Bug2v))))
                                   (mod g$count$5969$1Bug2v
                                        g$width$5970$1Bug2v))
                                  g$n$5966$1Bug2v))))))
                         (- g$end$5968$1Bug2v g$start$5967$1Bug2v))))
                     g$ei4$5965$1Bug2v)))
                 g$ei3$5964$1Bug2v)))
             g$ei2$5963$1Bug2v)))
         g$ei1$5962$1Bug2v)))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxif$5983$1Bug2v
     g$fxif$6030$1Bug2v
     (case-lambda
       ((g$fx1$5990$1Bug2v g$fx2$5991$1Bug2v g$fx3$5992$1Bug2v)
        (fxior
          (fxand g$fx1$5990$1Bug2v g$fx2$5991$1Bug2v)
          (fxand (fxnot g$fx1$5990$1Bug2v) g$fx3$5992$1Bug2v)))))
   (g$fxcopy-bit$5984$1Bug2v
     g$fxcopy-bit$6031$1Bug2v
     (case-lambda
       ((g$fx1$5993$1Bug2v g$fx2$5994$1Bug2v g$fx3$5995$1Bug2v)
        ((case-lambda
           ((g$mask$5996$1Bug2v)
            ((case-lambda
               (()
                (g$fxif$5983$1Bug2v
                  g$mask$5996$1Bug2v
                  (g$fxarithmetic-shift-left$5987$1Bug2v
                    g$fx3$5995$1Bug2v
                    g$fx2$5994$1Bug2v)
                  g$fx1$5993$1Bug2v))))))
         (g$fxarithmetic-shift-left$5987$1Bug2v '1 g$fx2$5994$1Bug2v)))))
   (g$fxbit-field$5985$1Bug2v
     g$fxbit-field$6032$1Bug2v
     (case-lambda
       ((g$fx1$5997$1Bug2v g$fx2$5998$1Bug2v g$fx3$5999$1Bug2v)
        ((case-lambda
           ((g$mask$6000$1Bug2v)
            ((case-lambda
               (()
                (g$fxarithmetic-shift-right$5988$1Bug2v
                  (fxand g$fx1$5997$1Bug2v g$mask$6000$1Bug2v)
                  g$fx2$5998$1Bug2v))))))
         (fxnot
           (g$fxarithmetic-shift-left$5987$1Bug2v '-1 g$fx3$5999$1Bug2v))))))
   (g$fxcopy-bit-field$5986$1Bug2v
     g$fxcopy-bit-field$6033$1Bug2v
     (case-lambda
       ((g$fx1$6001$1Bug2v
          g$fx2$6002$1Bug2v
          g$fx3$6003$1Bug2v
          g$fx4$6004$1Bug2v)
        ((case-lambda
           ((g$to$6005$1Bug2v)
            ((case-lambda
               ((g$start$6006$1Bug2v)
                ((case-lambda
                   ((g$end$6007$1Bug2v)
                    ((case-lambda
                       ((g$from$6008$1Bug2v)
                        ((case-lambda
                           ((g$mask1$6009$1Bug2v)
                            ((case-lambda
                               ((g$mask2$6010$1Bug2v)
                                ((case-lambda
                                   ((g$mask$6011$1Bug2v)
                                    ((case-lambda
                                       (()
                                        (g$fxif$5983$1Bug2v
                                          g$mask$6011$1Bug2v
                                          (g$fxarithmetic-shift-left$5987$1Bug2v
                                            g$from$6008$1Bug2v
                                            g$start$6006$1Bug2v)
                                          g$to$6005$1Bug2v))))))
                                 (fxand
                                   g$mask1$6009$1Bug2v
                                   g$mask2$6010$1Bug2v))))
                             (fxnot
                               (g$fxarithmetic-shift-left$5987$1Bug2v
                                 '-1
                                 g$end$6007$1Bug2v)))))
                         (g$fxarithmetic-shift-left$5987$1Bug2v
                           '-1
                           g$start$6006$1Bug2v))))
                     g$fx4$6004$1Bug2v)))
                 g$fx3$6003$1Bug2v)))
             g$fx2$6002$1Bug2v)))
         g$fx1$6001$1Bug2v))))
   (g$fxarithmetic-shift-left$5987$1Bug2v
     g$fxarithmetic-shift-left$6034$1Bug2v
     (case-lambda
       ((g$fx1$6012$1Bug2v g$fx2$6013$1Bug2v)
        (fxarithmetic-shift g$fx1$6012$1Bug2v g$fx2$6013$1Bug2v))))
   (g$fxarithmetic-shift-right$5988$1Bug2v
     g$fxarithmetic-shift-right$6035$1Bug2v
     (case-lambda
       ((g$fx1$6014$1Bug2v g$fx2$6015$1Bug2v)
        (fxarithmetic-shift g$fx1$6014$1Bug2v (- g$fx2$6015$1Bug2v)))))
   (g$fxrotate-bit-field$5989$1Bug2v
     g$fxrotate-bit-field$6036$1Bug2v
     (case-lambda
       ((g$fx1$6016$1Bug2v
          g$fx2$6017$1Bug2v
          g$fx3$6018$1Bug2v
          g$fx4$6019$1Bug2v)
        ((case-lambda
           ((g$n$6020$1Bug2v)
            ((case-lambda
               ((g$start$6021$1Bug2v)
                ((case-lambda
                   ((g$end$6022$1Bug2v)
                    ((case-lambda
                       ((g$count$6023$1Bug2v)
                        ((case-lambda
                           ((g$width$6024$1Bug2v)
                            ((case-lambda
                               (()
                                (if (positive? g$width$6024$1Bug2v)
                                  ((case-lambda
                                     ((g$count$6025$1Bug2v)
                                      ((case-lambda
                                         ((g$field0$6026$1Bug2v)
                                          ((case-lambda
                                             ((g$field1$6027$1Bug2v)
                                              ((case-lambda
                                                 ((g$field2$6028$1Bug2v)
                                                  ((case-lambda
                                                     ((g$field$6029$1Bug2v)
                                                      ((case-lambda
                                                         (()
                                                          (g$fxcopy-bit-field$5986$1Bug2v
                                                            g$n$6020$1Bug2v
                                                            g$start$6021$1Bug2v
                                                            g$end$6022$1Bug2v
                                                            g$field$6029$1Bug2v))))))
                                                   (fxior
                                                     g$field1$6027$1Bug2v
                                                     g$field2$6028$1Bug2v))))
                                               (g$fxarithmetic-shift-right$5988$1Bug2v
                                                 g$field0$6026$1Bug2v
                                                 (- g$width$6024$1Bug2v
                                                    g$count$6025$1Bug2v)))))
                                           (g$fxarithmetic-shift-left$5987$1Bug2v
                                             g$field0$6026$1Bug2v
                                             g$count$6025$1Bug2v))))
                                       (g$fxbit-field$5985$1Bug2v
                                         g$n$6020$1Bug2v
                                         g$start$6021$1Bug2v
                                         g$end$6022$1Bug2v))))
                                   (mod g$count$6023$1Bug2v
                                        g$width$6024$1Bug2v))
                                  g$n$6020$1Bug2v))))))
                         (- g$end$6022$1Bug2v g$start$6021$1Bug2v))))
                     g$fx4$6019$1Bug2v)))
                 g$fx3$6018$1Bug2v)))
             g$fx2$6017$1Bug2v)))
         g$fx1$6016$1Bug2v)))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$7130$6037$1Bug2v
     g$7130$6049$1Bug2v
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7133$1Bug2v
       '#f
       '#f
       '#()))
   (g$7132$6038$1Bug2v g$7132$6050$1Bug2v '#f)
   (g$7131$6039$1Bug2v
     g$7131$6051$1Bug2v
     (make-record-constructor-descriptor
       g$7130$6037$1Bug2v
       &implementation-restriction-rcd
       g$7132$6038$1Bug2v))
   (g$7129$6040$1Bug2v
     g$7129$6052$1Bug2v
     (record-predicate g$7130$6037$1Bug2v))
   (g$make-no-infinities-violation$6041$1Bug2v
     g$make-no-infinities-violation$6053$1Bug2v
     (record-constructor g$7131$6039$1Bug2v))
   (g$no-infinities-violation?$6042$1Bug2v
     g$no-infinities-violation?$6054$1Bug2v
     (condition-predicate g$7130$6037$1Bug2v))
   (g$7144$6043$1Bug2v
     g$7144$6055$1Bug2v
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7147$1Bug2v
       '#f
       '#f
       '#()))
   (g$7146$6044$1Bug2v g$7146$6056$1Bug2v '#f)
   (g$7145$6045$1Bug2v
     g$7145$6057$1Bug2v
     (make-record-constructor-descriptor
       g$7144$6043$1Bug2v
       &implementation-restriction-rcd
       g$7146$6044$1Bug2v))
   (g$7143$6046$1Bug2v
     g$7143$6058$1Bug2v
     (record-predicate g$7144$6043$1Bug2v))
   (g$make-no-nans-violation$6047$1Bug2v
     g$make-no-nans-violation$6059$1Bug2v
     (record-constructor g$7145$6045$1Bug2v))
   (g$no-nans-violation?$6048$1Bug2v
     g$no-nans-violation?$6060$1Bug2v
     (condition-predicate g$7144$6043$1Bug2v)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7159$6061$1Bug2v
     g$7159$6141$1Bug2v
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7162$1Bug2v
       '#f
       '#f
       '#()))
   (g$7161$6062$1Bug2v g$7161$6142$1Bug2v '#f)
   (g$7160$6063$1Bug2v
     g$7160$6143$1Bug2v
     (make-record-constructor-descriptor
       g$7159$6061$1Bug2v
       &error-rcd
       g$7161$6062$1Bug2v))
   (g$7158$6064$1Bug2v
     g$7158$6144$1Bug2v
     (record-predicate g$7159$6061$1Bug2v))
   (g$make-i/o-error$6065$1Bug2v
     g$make-i/o-error$6145$1Bug2v
     (record-constructor g$7160$6063$1Bug2v))
   (g$i/o-error?$6066$1Bug2v
     g$i/o-error?$6146$1Bug2v
     (condition-predicate g$7159$6061$1Bug2v))
   (g$7173$6067$1Bug2v
     g$7173$6147$1Bug2v
     (make-record-type-descriptor
       '&i/o-read
       g$7159$6061$1Bug2v
       'g$7176$1Bug2v
       '#f
       '#f
       '#()))
   (g$7175$6068$1Bug2v g$7175$6148$1Bug2v '#f)
   (g$7174$6069$1Bug2v
     g$7174$6149$1Bug2v
     (make-record-constructor-descriptor
       g$7173$6067$1Bug2v
       g$7160$6063$1Bug2v
       g$7175$6068$1Bug2v))
   (g$7172$6070$1Bug2v
     g$7172$6150$1Bug2v
     (record-predicate g$7173$6067$1Bug2v))
   (g$make-i/o-read-error$6071$1Bug2v
     g$make-i/o-read-error$6151$1Bug2v
     (record-constructor g$7174$6069$1Bug2v))
   (g$i/o-read-error?$6072$1Bug2v
     g$i/o-read-error?$6152$1Bug2v
     (condition-predicate g$7173$6067$1Bug2v))
   (g$7187$6073$1Bug2v
     g$7187$6153$1Bug2v
     (make-record-type-descriptor
       '&i/o-write
       g$7159$6061$1Bug2v
       'g$7190$1Bug2v
       '#f
       '#f
       '#()))
   (g$7189$6074$1Bug2v g$7189$6154$1Bug2v '#f)
   (g$7188$6075$1Bug2v
     g$7188$6155$1Bug2v
     (make-record-constructor-descriptor
       g$7187$6073$1Bug2v
       g$7160$6063$1Bug2v
       g$7189$6074$1Bug2v))
   (g$7186$6076$1Bug2v
     g$7186$6156$1Bug2v
     (record-predicate g$7187$6073$1Bug2v))
   (g$make-i/o-write-error$6077$1Bug2v
     g$make-i/o-write-error$6157$1Bug2v
     (record-constructor g$7188$6075$1Bug2v))
   (g$i/o-write-error?$6078$1Bug2v
     g$i/o-write-error?$6158$1Bug2v
     (condition-predicate g$7187$6073$1Bug2v))
   (g$7202$6079$1Bug2v
     g$7202$6159$1Bug2v
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7159$6061$1Bug2v
       'g$7205$1Bug2v
       '#f
       '#f
       '#((immutable position))))
   (g$7204$6080$1Bug2v g$7204$6160$1Bug2v '#f)
   (g$7203$6081$1Bug2v
     g$7203$6161$1Bug2v
     (make-record-constructor-descriptor
       g$7202$6079$1Bug2v
       g$7160$6063$1Bug2v
       g$7204$6080$1Bug2v))
   (g$7201$6082$1Bug2v
     g$7201$6162$1Bug2v
     (record-predicate g$7202$6079$1Bug2v))
   (g$make-i/o-invalid-position-error$6083$1Bug2v
     g$make-i/o-invalid-position-error$6163$1Bug2v
     (record-constructor g$7203$6081$1Bug2v))
   (g$7200$6084$1Bug2v
     g$7200$6164$1Bug2v
     (record-accessor g$7202$6079$1Bug2v '0))
   (g$i/o-invalid-position-error?$6085$1Bug2v
     g$i/o-invalid-position-error?$6165$1Bug2v
     (condition-predicate g$7202$6079$1Bug2v))
   (g$i/o-error-position$6086$1Bug2v
     g$i/o-error-position$6166$1Bug2v
     (condition-accessor g$7202$6079$1Bug2v g$7200$6084$1Bug2v))
   (g$7219$6087$1Bug2v
     g$7219$6167$1Bug2v
     (make-record-type-descriptor
       '&i/o-filename
       g$7159$6061$1Bug2v
       'g$7222$1Bug2v
       '#f
       '#f
       '#((immutable filename))))
   (g$7221$6088$1Bug2v g$7221$6168$1Bug2v '#f)
   (g$7220$6089$1Bug2v
     g$7220$6169$1Bug2v
     (make-record-constructor-descriptor
       g$7219$6087$1Bug2v
       g$7160$6063$1Bug2v
       g$7221$6088$1Bug2v))
   (g$7218$6090$1Bug2v
     g$7218$6170$1Bug2v
     (record-predicate g$7219$6087$1Bug2v))
   (g$make-i/o-filename-error$6091$1Bug2v
     g$make-i/o-filename-error$6171$1Bug2v
     (record-constructor g$7220$6089$1Bug2v))
   (g$7217$6092$1Bug2v
     g$7217$6172$1Bug2v
     (record-accessor g$7219$6087$1Bug2v '0))
   (g$i/o-filename-error?$6093$1Bug2v
     g$i/o-filename-error?$6173$1Bug2v
     (condition-predicate g$7219$6087$1Bug2v))
   (g$i/o-error-filename$6094$1Bug2v
     g$i/o-error-filename$6174$1Bug2v
     (condition-accessor g$7219$6087$1Bug2v g$7217$6092$1Bug2v))
   (g$7235$6095$1Bug2v
     g$7235$6175$1Bug2v
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7219$6087$1Bug2v
       'g$7238$1Bug2v
       '#f
       '#f
       '#()))
   (g$7237$6096$1Bug2v g$7237$6176$1Bug2v '#f)
   (g$7236$6097$1Bug2v
     g$7236$6177$1Bug2v
     (make-record-constructor-descriptor
       g$7235$6095$1Bug2v
       g$7220$6089$1Bug2v
       g$7237$6096$1Bug2v))
   (g$7234$6098$1Bug2v
     g$7234$6178$1Bug2v
     (record-predicate g$7235$6095$1Bug2v))
   (g$make-i/o-file-protection-error$6099$1Bug2v
     g$make-i/o-file-protection-error$6179$1Bug2v
     (record-constructor g$7236$6097$1Bug2v))
   (g$i/o-file-protection-error?$6100$1Bug2v
     g$i/o-file-protection-error?$6180$1Bug2v
     (condition-predicate g$7235$6095$1Bug2v))
   (g$7249$6101$1Bug2v
     g$7249$6181$1Bug2v
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7235$6095$1Bug2v
       'g$7252$1Bug2v
       '#f
       '#f
       '#()))
   (g$7251$6102$1Bug2v g$7251$6182$1Bug2v '#f)
   (g$7250$6103$1Bug2v
     g$7250$6183$1Bug2v
     (make-record-constructor-descriptor
       g$7249$6101$1Bug2v
       g$7236$6097$1Bug2v
       g$7251$6102$1Bug2v))
   (g$7248$6104$1Bug2v
     g$7248$6184$1Bug2v
     (record-predicate g$7249$6101$1Bug2v))
   (g$make-i/o-file-is-read-only-error$6105$1Bug2v
     g$make-i/o-file-is-read-only-error$6185$1Bug2v
     (record-constructor g$7250$6103$1Bug2v))
   (g$i/o-file-is-read-only-error?$6106$1Bug2v
     g$i/o-file-is-read-only-error?$6186$1Bug2v
     (condition-predicate g$7249$6101$1Bug2v))
   (g$7263$6107$1Bug2v
     g$7263$6187$1Bug2v
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7219$6087$1Bug2v
       'g$7266$1Bug2v
       '#f
       '#f
       '#()))
   (g$7265$6108$1Bug2v g$7265$6188$1Bug2v '#f)
   (g$7264$6109$1Bug2v
     g$7264$6189$1Bug2v
     (make-record-constructor-descriptor
       g$7263$6107$1Bug2v
       g$7220$6089$1Bug2v
       g$7265$6108$1Bug2v))
   (g$7262$6110$1Bug2v
     g$7262$6190$1Bug2v
     (record-predicate g$7263$6107$1Bug2v))
   (g$make-i/o-file-already-exists-error$6111$1Bug2v
     g$make-i/o-file-already-exists-error$6191$1Bug2v
     (record-constructor g$7264$6109$1Bug2v))
   (g$i/o-file-already-exists-error?$6112$1Bug2v
     g$i/o-file-already-exists-error?$6192$1Bug2v
     (condition-predicate g$7263$6107$1Bug2v))
   (g$7277$6113$1Bug2v
     g$7277$6193$1Bug2v
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7219$6087$1Bug2v
       'g$7280$1Bug2v
       '#f
       '#f
       '#()))
   (g$7279$6114$1Bug2v g$7279$6194$1Bug2v '#f)
   (g$7278$6115$1Bug2v
     g$7278$6195$1Bug2v
     (make-record-constructor-descriptor
       g$7277$6113$1Bug2v
       g$7220$6089$1Bug2v
       g$7279$6114$1Bug2v))
   (g$7276$6116$1Bug2v
     g$7276$6196$1Bug2v
     (record-predicate g$7277$6113$1Bug2v))
   (g$make-i/o-file-does-not-exist-error$6117$1Bug2v
     g$make-i/o-file-does-not-exist-error$6197$1Bug2v
     (record-constructor g$7278$6115$1Bug2v))
   (g$i/o-file-does-not-exist-error?$6118$1Bug2v
     g$i/o-file-does-not-exist-error?$6198$1Bug2v
     (condition-predicate g$7277$6113$1Bug2v))
   (g$7292$6119$1Bug2v
     g$7292$6199$1Bug2v
     (make-record-type-descriptor
       '&i/o-port
       g$7159$6061$1Bug2v
       'g$7295$1Bug2v
       '#f
       '#f
       '#((immutable port))))
   (g$7294$6120$1Bug2v g$7294$6200$1Bug2v '#f)
   (g$7293$6121$1Bug2v
     g$7293$6201$1Bug2v
     (make-record-constructor-descriptor
       g$7292$6119$1Bug2v
       g$7160$6063$1Bug2v
       g$7294$6120$1Bug2v))
   (g$7291$6122$1Bug2v
     g$7291$6202$1Bug2v
     (record-predicate g$7292$6119$1Bug2v))
   (g$make-i/o-port-error$6123$1Bug2v
     g$make-i/o-port-error$6203$1Bug2v
     (record-constructor g$7293$6121$1Bug2v))
   (g$7290$6124$1Bug2v
     g$7290$6204$1Bug2v
     (record-accessor g$7292$6119$1Bug2v '0))
   (g$i/o-port-error?$6125$1Bug2v
     g$i/o-port-error?$6205$1Bug2v
     (condition-predicate g$7292$6119$1Bug2v))
   (g$i/o-error-port$6126$1Bug2v
     g$i/o-error-port$6206$1Bug2v
     (condition-accessor g$7292$6119$1Bug2v g$7290$6124$1Bug2v))
   (g$7308$6127$1Bug2v
     g$7308$6207$1Bug2v
     (make-record-type-descriptor
       '&i/o-decoding
       g$7292$6119$1Bug2v
       'g$7311$1Bug2v
       '#f
       '#f
       '#()))
   (g$7310$6128$1Bug2v g$7310$6208$1Bug2v '#f)
   (g$7309$6129$1Bug2v
     g$7309$6209$1Bug2v
     (make-record-constructor-descriptor
       g$7308$6127$1Bug2v
       g$7293$6121$1Bug2v
       g$7310$6128$1Bug2v))
   (g$7307$6130$1Bug2v
     g$7307$6210$1Bug2v
     (record-predicate g$7308$6127$1Bug2v))
   (g$make-i/o-decoding-error$6131$1Bug2v
     g$make-i/o-decoding-error$6211$1Bug2v
     (record-constructor g$7309$6129$1Bug2v))
   (g$i/o-decoding-error?$6132$1Bug2v
     g$i/o-decoding-error?$6212$1Bug2v
     (condition-predicate g$7308$6127$1Bug2v))
   (g$7323$6133$1Bug2v
     g$7323$6213$1Bug2v
     (make-record-type-descriptor
       '&i/o-encoding
       g$7292$6119$1Bug2v
       'g$7326$1Bug2v
       '#f
       '#f
       '#((immutable char))))
   (g$7325$6134$1Bug2v g$7325$6214$1Bug2v '#f)
   (g$7324$6135$1Bug2v
     g$7324$6215$1Bug2v
     (make-record-constructor-descriptor
       g$7323$6133$1Bug2v
       g$7293$6121$1Bug2v
       g$7325$6134$1Bug2v))
   (g$7322$6136$1Bug2v
     g$7322$6216$1Bug2v
     (record-predicate g$7323$6133$1Bug2v))
   (g$make-i/o-encoding-error$6137$1Bug2v
     g$make-i/o-encoding-error$6217$1Bug2v
     (record-constructor g$7324$6135$1Bug2v))
   (g$7321$6138$1Bug2v
     g$7321$6218$1Bug2v
     (record-accessor g$7323$6133$1Bug2v '0))
   (g$i/o-encoding-error?$6139$1Bug2v
     g$i/o-encoding-error?$6219$1Bug2v
     (condition-predicate g$7323$6133$1Bug2v))
   (g$i/o-encoding-error-char$6140$1Bug2v
     g$i/o-encoding-error-char$6220$1Bug2v
     (condition-accessor g$7323$6133$1Bug2v g$7321$6138$1Bug2v)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$get-output-string$6221$1Bug2v
     g$get-output-string$6229$1Bug2v
     (case-lambda
       ((g$port$6225$1Bug2v)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6225$1Bug2v))))
   (g$open-output-string$6222$1Bug2v
     g$open-output-string$6230$1Bug2v
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6223$1Bug2v
     g$open-string-output-port$6231$1Bug2v
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6226$1Bug2v)
            (values
              g$p$6226$1Bug2v
              (case-lambda
                (() (g$get-output-string$6221$1Bug2v g$p$6226$1Bug2v))))))
         (g$open-output-string$6222$1Bug2v)))))
   (g$port?$6224$1Bug2v
     g$port?$6232$1Bug2v
     (case-lambda
       ((g$obj$6227$1Bug2v)
        ((case-lambda
           ((g$t$6228$1Bug2v)
            (if g$t$6228$1Bug2v
              g$t$6228$1Bug2v
              (begin '#f (binary-port? g$obj$6227$1Bug2v)))))
         (textual-port? g$obj$6227$1Bug2v))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$with-input-from-file$6239$1Bug2v
     g$with-input-from-file$6265$1Bug2v
     (case-lambda
       ((g$filename$6243$1Bug2v g$thunk$6244$1Bug2v)
        ((case-lambda
           ((g$current-input-port$6247$1Bug2v g$t$6248$1Bug2v)
            ((case-lambda
               ((g$swap$6249$1Bug2v)
                (dynamic-wind
                  g$swap$6249$1Bug2v
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6244$1Bug2v)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6249$1Bug2v)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6250$1Bug2v)
                    (begin
                      (g$current-input-port$6247$1Bug2v g$t$6248$1Bug2v)
                      (set! g$t$6248$1Bug2v g$t$6250$1Bug2v))))
                 (g$current-input-port$6247$1Bug2v)))))))
         current-input-port
         (open-input-file g$filename$6243$1Bug2v)))))
   (g$with-output-to-file$6240$1Bug2v
     g$with-output-to-file$6266$1Bug2v
     (case-lambda
       ((g$filename$6251$1Bug2v g$thunk$6252$1Bug2v)
        ((case-lambda
           ((g$current-output-port$6255$1Bug2v g$t$6256$1Bug2v)
            ((case-lambda
               ((g$swap$6257$1Bug2v)
                (dynamic-wind
                  g$swap$6257$1Bug2v
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6252$1Bug2v)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6257$1Bug2v)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6258$1Bug2v)
                    (begin
                      (g$current-output-port$6255$1Bug2v g$t$6256$1Bug2v)
                      (set! g$t$6256$1Bug2v g$t$6258$1Bug2v))))
                 (g$current-output-port$6255$1Bug2v)))))))
         current-output-port
         (open-output-file g$filename$6251$1Bug2v)))))
   (g$call-with-input-file$6241$1Bug2v
     g$call-with-input-file$6267$1Bug2v
     (case-lambda
       ((g$filename$6259$1Bug2v g$proc$6260$1Bug2v)
        ((case-lambda
           ((g$p$6261$1Bug2v)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6260$1Bug2v g$p$6261$1Bug2v)))
              (case-lambda (() (close-input-port g$p$6261$1Bug2v))))))
         (open-input-file g$filename$6259$1Bug2v)))))
   (g$call-with-output-file$6242$1Bug2v
     g$call-with-output-file$6268$1Bug2v
     (case-lambda
       ((g$filename$6262$1Bug2v g$proc$6263$1Bug2v)
        ((case-lambda
           ((g$p$6264$1Bug2v)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6263$1Bug2v g$p$6264$1Bug2v)))
              (case-lambda (() (close-output-port g$p$6264$1Bug2v))))))
         (open-output-file g$filename$6262$1Bug2v))))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7390$6269$1Bug2v
     g$7390$6377$1Bug2v
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7392$6270$1Bug2v g$7392$6378$1Bug2v '#f)
   (g$7391$6271$1Bug2v
     g$7391$6379$1Bug2v
     (make-record-constructor-descriptor
       g$7390$6269$1Bug2v
       '#f
       g$7392$6270$1Bug2v))
   (g$enum?$6272$1Bug2v
     g$enum?$6380$1Bug2v
     (record-predicate g$7390$6269$1Bug2v))
   (g$make-enum$6273$1Bug2v
     g$make-enum$6381$1Bug2v
     (record-constructor g$7391$6271$1Bug2v))
   (g$enum-value$6274$1Bug2v
     g$enum-value$6382$1Bug2v
     (record-accessor g$7390$6269$1Bug2v '0))
   (g$enum-info$6275$1Bug2v
     g$enum-info$6383$1Bug2v
     (record-accessor g$7390$6269$1Bug2v '1))
   (g$7403$6276$1Bug2v
     g$7403$6384$1Bug2v
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7405$6277$1Bug2v g$7405$6385$1Bug2v '#f)
   (g$7404$6278$1Bug2v
     g$7404$6386$1Bug2v
     (make-record-constructor-descriptor
       g$7403$6276$1Bug2v
       '#f
       g$7405$6277$1Bug2v))
   (g$enum-universe?$6279$1Bug2v
     g$enum-universe?$6387$1Bug2v
     (record-predicate g$7403$6276$1Bug2v))
   (g$make-enum-universe$6280$1Bug2v
     g$make-enum-universe$6388$1Bug2v
     (record-constructor g$7404$6278$1Bug2v))
   (g$enum-universe-id$6281$1Bug2v
     g$enum-universe-id$6389$1Bug2v
     (record-accessor g$7403$6276$1Bug2v '0))
   (g$enum-universe-symbols$6282$1Bug2v
     g$enum-universe-symbols$6390$1Bug2v
     (record-accessor g$7403$6276$1Bug2v '1))
   (g$enum-universe-mapping$6283$1Bug2v
     g$enum-universe-mapping$6391$1Bug2v
     (record-accessor g$7403$6276$1Bug2v '2))
   (g$enum-universe-value$6284$1Bug2v
     g$enum-universe-value$6392$1Bug2v
     (record-accessor g$7403$6276$1Bug2v '3))
   (g$enum-type=?$6285$1Bug2v
     g$enum-type=?$6393$1Bug2v
     (case-lambda
       ((g$enumset1$6306$1Bug2v g$enumset2$6307$1Bug2v)
        (eq? (g$enum-universe-id$6281$1Bug2v
               (g$enum-info$6275$1Bug2v g$enumset1$6306$1Bug2v))
             (g$enum-universe-id$6281$1Bug2v
               (g$enum-info$6275$1Bug2v g$enumset2$6307$1Bug2v))))))
   (g$get-symbols$6286$1Bug2v
     g$get-symbols$6394$1Bug2v
     (case-lambda
       ((g$enumset$6308$1Bug2v)
        (g$enum-universe-symbols$6282$1Bug2v
          (g$enum-info$6275$1Bug2v g$enumset$6308$1Bug2v)))))
   (g$get-value$6287$1Bug2v
     g$get-value$6395$1Bug2v
     (case-lambda
       ((g$enumset$6309$1Bug2v g$s$6310$1Bug2v)
        (g$hashtable-ref$5401$1Bug2v
          (g$enum-universe-mapping$6283$1Bug2v
            (g$enum-info$6275$1Bug2v g$enumset$6309$1Bug2v))
          g$s$6310$1Bug2v
          '#f))))
   (g$assert-enum$6288$1Bug2v
     g$assert-enum$6396$1Bug2v
     (case-lambda
       ((g$who$6311$1Bug2v g$enumset$6312$1Bug2v)
        (if (not (g$enum?$6272$1Bug2v g$enumset$6312$1Bug2v))
          (assertion-violation
            g$who$6311$1Bug2v
            '"not an enumeration"
            g$enumset$6312$1Bug2v)
          (void)))))
   (g$make-info$6289$1Bug2v
     g$make-info$6397$1Bug2v
     (case-lambda
       ((g$symbols$6313$1Bug2v)
        ((case-lambda
           ((g$ht$6314$1Bug2v)
            ((letrec ((g$f$6315$1Bug2v
                        (case-lambda
                          ((g$s$6316$1Bug2v g$a$6317$1Bug2v g$mask$6318$1Bug2v)
                           (if (null? g$s$6316$1Bug2v)
                             (values
                               (reverse! g$a$6317$1Bug2v)
                               g$ht$6314$1Bug2v
                               (- g$mask$6318$1Bug2v '1))
                             ((case-lambda
                                ((g$n$6319$1Bug2v)
                                 (if (symbol? g$n$6319$1Bug2v)
                                   (if (g$hashtable-contains?$5404$1Bug2v
                                         g$ht$6314$1Bug2v
                                         g$n$6319$1Bug2v)
                                     (g$f$6315$1Bug2v
                                       (cdr g$s$6316$1Bug2v)
                                       g$a$6317$1Bug2v
                                       g$mask$6318$1Bug2v)
                                     (begin
                                       (g$hashtable-set!$5402$1Bug2v
                                         g$ht$6314$1Bug2v
                                         g$n$6319$1Bug2v
                                         g$mask$6318$1Bug2v)
                                       (g$f$6315$1Bug2v
                                         (cdr g$s$6316$1Bug2v)
                                         (cons g$n$6319$1Bug2v g$a$6317$1Bug2v)
                                         (g$bitwise-arithmetic-shift-left$5980$1Bug2v
                                           g$mask$6318$1Bug2v
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6319$1Bug2v))))
                              (car g$s$6316$1Bug2v)))))))
               g$f$6315$1Bug2v)
             g$symbols$6313$1Bug2v
             '()
             '1)))
         (g$make-eq-hashtable$5398$1Bug2v)))))
   (g$make-name$6290$1Bug2v
     g$make-name$6398$1Bug2v
     (case-lambda
       ((g$symbols$6320$1Bug2v)
        (string->symbol (g$format$6437$1Bug2v '"~a" g$symbols$6320$1Bug2v)))))
   (g$make-enumeration$6291$1Bug2v
     g$make-enumeration$6399$1Bug2v
     (case-lambda
       ((g$symbols$6321$1Bug2v)
        (call-with-values
          (case-lambda (() (g$make-info$6289$1Bug2v g$symbols$6321$1Bug2v)))
          (case-lambda
            ((g$s$6325$1Bug2v g$mapping$6326$1Bug2v g$mask$6327$1Bug2v)
             ((case-lambda
                ((g$mask$6328$1Bug2v g$mapping$6329$1Bug2v g$s$6330$1Bug2v)
                 (g$make-enum$6273$1Bug2v
                   g$mask$6328$1Bug2v
                   (g$make-enum-universe$6280$1Bug2v
                     (g$make-name$6290$1Bug2v g$s$6330$1Bug2v)
                     g$s$6330$1Bug2v
                     g$mapping$6329$1Bug2v
                     g$mask$6328$1Bug2v))))
              g$mask$6327$1Bug2v
              g$mapping$6326$1Bug2v
              g$s$6325$1Bug2v)))))))
   (g$enum-set-universe$6292$1Bug2v
     g$enum-set-universe$6400$1Bug2v
     (case-lambda
       ((g$enumset$6331$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v 'enum-set-universe g$enumset$6331$1Bug2v)
          ((case-lambda
             ((g$ei$6332$1Bug2v)
              (g$make-enum$6273$1Bug2v
                (g$enum-universe-value$6284$1Bug2v g$ei$6332$1Bug2v)
                g$ei$6332$1Bug2v)))
           (g$enum-info$6275$1Bug2v g$enumset$6331$1Bug2v))))))
   (g$enum-set-indexer$6293$1Bug2v
     g$enum-set-indexer$6401$1Bug2v
     (case-lambda
       ((g$enumset$6333$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v 'enum-set-indexer g$enumset$6333$1Bug2v)
          (case-lambda
            ((g$symbol$6334$1Bug2v)
             (begin
               (if (not (symbol? g$symbol$6334$1Bug2v))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6334$1Bug2v)
                 (void))
               ((case-lambda
                  ((g$v$6335$1Bug2v)
                   (if g$v$6335$1Bug2v
                     (- (bitwise-length g$v$6335$1Bug2v) '1)
                     '#f)))
                (g$get-value$6287$1Bug2v
                  g$enumset$6333$1Bug2v
                  g$symbol$6334$1Bug2v)))))))))
   (g$enum-set-constructor$6294$1Bug2v
     g$enum-set-constructor$6402$1Bug2v
     (case-lambda
       ((g$enumset$6336$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v
            'enum-set-constructor
            g$enumset$6336$1Bug2v)
          (case-lambda
            ((g$symbols$6337$1Bug2v)
             ((letrec ((g$f$6338$1Bug2v
                         (case-lambda
                           ((g$v$6339$1Bug2v g$s$6340$1Bug2v)
                            (if (null? g$s$6340$1Bug2v)
                              (g$make-enum$6273$1Bug2v
                                g$v$6339$1Bug2v
                                (g$enum-info$6275$1Bug2v g$enumset$6336$1Bug2v))
                              ((case-lambda
                                 ((g$n$6341$1Bug2v)
                                  (if (symbol? g$n$6341$1Bug2v)
                                    ((case-lambda
                                       ((g$v*$6342$1Bug2v)
                                        (if g$v*$6342$1Bug2v
                                          (g$f$6338$1Bug2v
                                            (bitwise-ior
                                              g$v$6339$1Bug2v
                                              g$v*$6342$1Bug2v)
                                            (cdr g$s$6340$1Bug2v))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6341$1Bug2v))))
                                     (g$get-value$6287$1Bug2v
                                       g$enumset$6336$1Bug2v
                                       g$n$6341$1Bug2v))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6341$1Bug2v))))
                               (car g$s$6340$1Bug2v)))))))
                g$f$6338$1Bug2v)
              '0
              g$symbols$6337$1Bug2v)))))))
   (g$enum-set->list$6295$1Bug2v
     g$enum-set->list$6403$1Bug2v
     (case-lambda
       ((g$enumset$6343$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v 'enum-set->list g$enumset$6343$1Bug2v)
          ((case-lambda
             ((g$value$6344$1Bug2v)
              ((letrec ((g$f$6345$1Bug2v
                          (case-lambda
                            ((g$s$6346$1Bug2v g$l$6347$1Bug2v)
                             (if (null? g$s$6346$1Bug2v)
                               (reverse! g$l$6347$1Bug2v)
                               (if (zero?
                                     (bitwise-and
                                       (g$get-value$6287$1Bug2v
                                         g$enumset$6343$1Bug2v
                                         (car g$s$6346$1Bug2v))
                                       g$value$6344$1Bug2v))
                                 (g$f$6345$1Bug2v
                                   (cdr g$s$6346$1Bug2v)
                                   g$l$6347$1Bug2v)
                                 (g$f$6345$1Bug2v
                                   (cdr g$s$6346$1Bug2v)
                                   (cons
                                     (car g$s$6346$1Bug2v)
                                     g$l$6347$1Bug2v))))))))
                 g$f$6345$1Bug2v)
               (g$get-symbols$6286$1Bug2v g$enumset$6343$1Bug2v)
               '())))
           (g$enum-value$6274$1Bug2v g$enumset$6343$1Bug2v))))))
   (g$enum-set-member?$6296$1Bug2v
     g$enum-set-member?$6404$1Bug2v
     (case-lambda
       ((g$symbol$6348$1Bug2v g$enumset$6349$1Bug2v)
        (begin
          (if (not (symbol? g$symbol$6348$1Bug2v))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6348$1Bug2v)
            (void))
          (g$assert-enum$6288$1Bug2v 'enum-set-member? g$enumset$6349$1Bug2v)
          ((case-lambda
             ((g$v$6350$1Bug2v)
              (if g$v$6350$1Bug2v
                (not (zero?
                       (bitwise-and
                         g$v$6350$1Bug2v
                         (g$enum-value$6274$1Bug2v g$enumset$6349$1Bug2v))))
                '#f)))
           (g$get-value$6287$1Bug2v
             g$enumset$6349$1Bug2v
             g$symbol$6348$1Bug2v))))))
   (g$enum-set-subset?$6297$1Bug2v
     g$enum-set-subset?$6405$1Bug2v
     (case-lambda
       ((g$enumset1$6351$1Bug2v g$enumset2$6352$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v 'enum-set-subset? g$enumset1$6351$1Bug2v)
          (g$assert-enum$6288$1Bug2v 'enum-set-subset? g$enumset2$6352$1Bug2v)
          ((case-lambda
             ((g$v1$6353$1Bug2v g$v2$6354$1Bug2v)
              (if (g$enum-type=?$6285$1Bug2v
                    g$enumset1$6351$1Bug2v
                    g$enumset2$6352$1Bug2v)
                (= (bitwise-and g$v1$6353$1Bug2v g$v2$6354$1Bug2v)
                   g$v1$6353$1Bug2v)
                ((letrec ((g$f$6355$1Bug2v
                            (case-lambda
                              ((g$s$6356$1Bug2v)
                               (if (null? g$s$6356$1Bug2v)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6357$1Bug2v g$v2*$6358$1Bug2v)
                                     (if g$v2*$6358$1Bug2v
                                       ((case-lambda
                                          ((g$has1$6359$1Bug2v
                                             g$has2$6360$1Bug2v)
                                           (if (if g$has1$6359$1Bug2v
                                                 (begin
                                                   '#f
                                                   (not g$has2$6360$1Bug2v))
                                                 '#f)
                                             '#f
                                             (g$f$6355$1Bug2v
                                               (cdr g$s$6356$1Bug2v)))))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v1$6353$1Bug2v
                                                 g$v1*$6357$1Bug2v)))
                                        (not (zero?
                                               (bitwise-and
                                                 g$v2$6354$1Bug2v
                                                 g$v2*$6358$1Bug2v))))
                                       '#f)))
                                  (g$get-value$6287$1Bug2v
                                    g$enumset1$6351$1Bug2v
                                    (car g$s$6356$1Bug2v))
                                  (g$get-value$6287$1Bug2v
                                    g$enumset2$6352$1Bug2v
                                    (car g$s$6356$1Bug2v))))))))
                   g$f$6355$1Bug2v)
                 (g$get-symbols$6286$1Bug2v g$enumset1$6351$1Bug2v)))))
           (g$enum-value$6274$1Bug2v g$enumset1$6351$1Bug2v)
           (g$enum-value$6274$1Bug2v g$enumset2$6352$1Bug2v))))))
   (g$enum-set=?$6298$1Bug2v
     g$enum-set=?$6406$1Bug2v
     (case-lambda
       ((g$enumset1$6361$1Bug2v g$enumset2$6362$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v 'enum-set=? g$enumset1$6361$1Bug2v)
          (g$assert-enum$6288$1Bug2v 'enum-set=? g$enumset2$6362$1Bug2v)
          (if (g$enum-set-subset?$6297$1Bug2v
                g$enumset1$6361$1Bug2v
                g$enumset2$6362$1Bug2v)
            (begin
              '#f
              (g$enum-set-subset?$6297$1Bug2v
                g$enumset2$6362$1Bug2v
                g$enumset1$6361$1Bug2v))
            '#f)))))
   (g$enum-set-union$6299$1Bug2v
     g$enum-set-union$6407$1Bug2v
     (case-lambda
       ((g$enumset1$6363$1Bug2v g$enumset2$6364$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v 'enum-set-union g$enumset1$6363$1Bug2v)
          (g$assert-enum$6288$1Bug2v 'enum-set-union g$enumset2$6364$1Bug2v)
          (if (g$enum-type=?$6285$1Bug2v
                g$enumset1$6363$1Bug2v
                g$enumset2$6364$1Bug2v)
            (g$make-enum$6273$1Bug2v
              (bitwise-ior
                (g$enum-value$6274$1Bug2v g$enumset1$6363$1Bug2v)
                (g$enum-value$6274$1Bug2v g$enumset2$6364$1Bug2v))
              (g$enum-info$6275$1Bug2v g$enumset1$6363$1Bug2v))
            '#f)))))
   (g$enum-set-intersection$6300$1Bug2v
     g$enum-set-intersection$6408$1Bug2v
     (case-lambda
       ((g$enumset1$6365$1Bug2v g$enumset2$6366$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v
            'enum-set-intersection
            g$enumset1$6365$1Bug2v)
          (g$assert-enum$6288$1Bug2v
            'enum-set-intersection
            g$enumset2$6366$1Bug2v)
          (if (g$enum-type=?$6285$1Bug2v
                g$enumset1$6365$1Bug2v
                g$enumset2$6366$1Bug2v)
            (g$make-enum$6273$1Bug2v
              (bitwise-and
                (g$enum-value$6274$1Bug2v g$enumset1$6365$1Bug2v)
                (g$enum-value$6274$1Bug2v g$enumset2$6366$1Bug2v))
              (g$enum-info$6275$1Bug2v g$enumset1$6365$1Bug2v))
            '#f)))))
   (g$enum-set-difference$6301$1Bug2v
     g$enum-set-difference$6409$1Bug2v
     (case-lambda
       ((g$enumset1$6367$1Bug2v g$enumset2$6368$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v
            'enum-set-difference
            g$enumset1$6367$1Bug2v)
          (g$assert-enum$6288$1Bug2v
            'enum-set-difference
            g$enumset2$6368$1Bug2v)
          (if (g$enum-type=?$6285$1Bug2v
                g$enumset1$6367$1Bug2v
                g$enumset2$6368$1Bug2v)
            (g$make-enum$6273$1Bug2v
              (bitwise-and
                (g$enum-value$6274$1Bug2v g$enumset1$6367$1Bug2v)
                (bitwise-not (g$enum-value$6274$1Bug2v g$enumset2$6368$1Bug2v)))
              (g$enum-info$6275$1Bug2v g$enumset1$6367$1Bug2v))
            '#f)))))
   (g$enum-set-complement$6302$1Bug2v
     g$enum-set-complement$6410$1Bug2v
     (case-lambda
       ((g$enumset$6369$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v 'enum-set-complement g$enumset$6369$1Bug2v)
          (g$make-enum$6273$1Bug2v
            (bitwise-not (g$enum-value$6274$1Bug2v g$enumset$6369$1Bug2v))
            (g$enum-info$6275$1Bug2v g$enumset$6369$1Bug2v))))))
   (g$enum-set-projection$6303$1Bug2v
     g$enum-set-projection$6411$1Bug2v
     (case-lambda
       ((g$enumset1$6370$1Bug2v g$enumset2$6371$1Bug2v)
        (begin
          (g$assert-enum$6288$1Bug2v
            'enum-set-projection
            g$enumset1$6370$1Bug2v)
          (g$assert-enum$6288$1Bug2v
            'enum-set-projection
            g$enumset2$6371$1Bug2v)
          ((case-lambda
             ((g$v1$6372$1Bug2v)
              ((letrec ((g$f$6373$1Bug2v
                          (case-lambda
                            ((g$s$6374$1Bug2v g$v$6375$1Bug2v)
                             (if (null? g$s$6374$1Bug2v)
                               (g$make-enum$6273$1Bug2v
                                 g$v$6375$1Bug2v
                                 (g$enum-info$6275$1Bug2v
                                   g$enumset2$6371$1Bug2v))
                               (if (zero?
                                     (bitwise-and
                                       g$v1$6372$1Bug2v
                                       (g$get-value$6287$1Bug2v
                                         g$enumset1$6370$1Bug2v
                                         (car g$s$6374$1Bug2v))))
                                 (g$f$6373$1Bug2v
                                   (cdr g$s$6374$1Bug2v)
                                   g$v$6375$1Bug2v)
                                 ((case-lambda
                                    ((g$v2$6376$1Bug2v)
                                     (if g$v2$6376$1Bug2v
                                       (g$f$6373$1Bug2v
                                         (cdr g$s$6374$1Bug2v)
                                         (bitwise-ior
                                           g$v$6375$1Bug2v
                                           g$v2$6376$1Bug2v))
                                       (g$f$6373$1Bug2v
                                         (cdr g$s$6374$1Bug2v)
                                         g$v$6375$1Bug2v))))
                                  (g$get-value$6287$1Bug2v
                                    g$enumset2$6371$1Bug2v
                                    (car g$s$6374$1Bug2v)))))))))
                 g$f$6373$1Bug2v)
               (g$get-symbols$6286$1Bug2v g$enumset1$6370$1Bug2v)
               '0)))
           (g$enum-value$6274$1Bug2v g$enumset1$6370$1Bug2v)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6304$1Bug2v g$p$6305$1Bug2v)
       (g$fprintf$6436$1Bug2v
         g$p$6305$1Bug2v
         '"#[enum-set ~a]"
         (g$enum-set->list$6295$1Bug2v g$x$6304$1Bug2v))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6412$1Bug2v
     g$dofmt$6434$1Bug2v
     (case-lambda
       ((g$p$6416$1Bug2v g$cntl$6417$1Bug2v g$args$6418$1Bug2v)
        ((case-lambda
           ((g$nmax$6419$1Bug2v)
            ((letrec ((g$loop$6420$1Bug2v
                        (case-lambda
                          ((g$n$6421$1Bug2v g$a$6422$1Bug2v)
                           (if (fx<=? g$n$6421$1Bug2v g$nmax$6419$1Bug2v)
                             ((case-lambda
                                ((g$c$6423$1Bug2v)
                                 (if (if (g$char=?$5158$1Bug2v
                                           g$c$6423$1Bug2v
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6421$1Bug2v
                                           g$nmax$6419$1Bug2v))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6424$1Bug2v)
                                       (if (g$memv$4955$1Bug2v
                                             g$t$6424$1Bug2v
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6422$1Bug2v)
                                             g$p$6416$1Bug2v)
                                           (g$loop$6420$1Bug2v
                                             (fx+ g$n$6421$1Bug2v '2)
                                             (cdr g$a$6422$1Bug2v)))
                                         (if (g$memv$4955$1Bug2v
                                               g$t$6424$1Bug2v
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6422$1Bug2v)
                                               g$p$6416$1Bug2v)
                                             (g$loop$6420$1Bug2v
                                               (fx+ g$n$6421$1Bug2v '2)
                                               (cdr g$a$6422$1Bug2v)))
                                           (if (g$memv$4955$1Bug2v
                                                 g$t$6424$1Bug2v
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6422$1Bug2v)
                                                   '2)
                                                 g$p$6416$1Bug2v)
                                               (g$loop$6420$1Bug2v
                                                 (fx+ g$n$6421$1Bug2v '2)
                                                 (cdr g$a$6422$1Bug2v)))
                                             (if (g$memv$4955$1Bug2v
                                                   g$t$6424$1Bug2v
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6422$1Bug2v)
                                                     '8)
                                                   g$p$6416$1Bug2v)
                                                 (g$loop$6420$1Bug2v
                                                   (fx+ g$n$6421$1Bug2v '2)
                                                   (cdr g$a$6422$1Bug2v)))
                                               (if (g$memv$4955$1Bug2v
                                                     g$t$6424$1Bug2v
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6422$1Bug2v)
                                                       '16)
                                                     g$p$6416$1Bug2v)
                                                   (g$loop$6420$1Bug2v
                                                     (fx+ g$n$6421$1Bug2v '2)
                                                     (cdr g$a$6422$1Bug2v)))
                                                 (if (g$memv$4955$1Bug2v
                                                       g$t$6424$1Bug2v
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6422$1Bug2v)
                                                         '10)
                                                       g$p$6416$1Bug2v)
                                                     (g$loop$6420$1Bug2v
                                                       (fx+ g$n$6421$1Bug2v '2)
                                                       (cdr g$a$6422$1Bug2v)))
                                                   (if (g$memv$4955$1Bug2v
                                                         g$t$6424$1Bug2v
                                                         '(#\~))
                                                     (begin
                                                       (write-char
                                                         '#\~
                                                         g$p$6416$1Bug2v)
                                                       (g$loop$6420$1Bug2v
                                                         (fx+ g$n$6421$1Bug2v
                                                              '2)
                                                         g$a$6422$1Bug2v))
                                                     (begin
                                                       (write-char
                                                         g$c$6423$1Bug2v
                                                         g$p$6416$1Bug2v)
                                                       (g$loop$6420$1Bug2v
                                                         (fx+ g$n$6421$1Bug2v
                                                              '1)
                                                         g$a$6422$1Bug2v)))))))))))
                                    (string-ref
                                      g$cntl$6417$1Bug2v
                                      (fx+ g$n$6421$1Bug2v '1)))
                                   (begin
                                     (write-char
                                       g$c$6423$1Bug2v
                                       g$p$6416$1Bug2v)
                                     (g$loop$6420$1Bug2v
                                       (fx+ g$n$6421$1Bug2v '1)
                                       g$a$6422$1Bug2v)))))
                              (string-ref g$cntl$6417$1Bug2v g$n$6421$1Bug2v))
                             (void))))))
               g$loop$6420$1Bug2v)
             '0
             g$args$6418$1Bug2v)))
         (fx- (string-length g$cntl$6417$1Bug2v) '1)))))
   (g$printf$6413$1Bug2v
     g$printf$6435$1Bug2v
     (case-lambda
       ((g$control$6425$1Bug2v . g$args$6426$1Bug2v)
        (g$dofmt$6412$1Bug2v
          (current-output-port)
          g$control$6425$1Bug2v
          g$args$6426$1Bug2v))))
   (g$fprintf$6414$1Bug2v
     g$fprintf$6436$1Bug2v
     (case-lambda
       ((g$p$6427$1Bug2v g$control$6428$1Bug2v . g$args$6429$1Bug2v)
        (g$dofmt$6412$1Bug2v
          g$p$6427$1Bug2v
          g$control$6428$1Bug2v
          g$args$6429$1Bug2v))))
   (g$format$6415$1Bug2v
     g$format$6437$1Bug2v
     (case-lambda
       ((g$control$6430$1Bug2v . g$args$6431$1Bug2v)
        (call-with-values
          g$open-string-output-port$6231$1Bug2v
          (case-lambda
            ((g$p$6432$1Bug2v g$c$6433$1Bug2v)
             (begin
               (g$dofmt$6412$1Bug2v
                 g$p$6432$1Bug2v
                 g$control$6430$1Bug2v
                 g$args$6431$1Bug2v)
               (g$c$6433$1Bug2v)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$6438$1Bug2v
     g$make-traced-macro$6441$1Bug2v
     (case-lambda
       ((g$name$6439$1Bug2v g$x$6440$1Bug2v)
        (if (procedure? g$x$6440$1Bug2v)
          (make-traced-procedure
            g$name$6439$1Bug2v
            g$x$6440$1Bug2v
            g$syntax->datum$11106$1Bug2v)
          (if (g$variable-transformer?$10929$1Bug2v g$x$6440$1Bug2v)
            (g$make-variable-transformer$10928$1Bug2v
              (make-traced-procedure
                g$name$6439$1Bug2v
                (g$variable-transformer-procedure$10930$1Bug2v g$x$6440$1Bug2v)
                g$syntax->datum$11106$1Bug2v))
            g$x$6440$1Bug2v))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$read-library-source-file$6442$1Bug2v
     g$read-library-source-file$6521$1Bug2v
     (case-lambda
       ((g$file-name$6513$1Bug2v)
        (g$with-input-from-file$6265$1Bug2v
          g$file-name$6513$1Bug2v
          read-annotated))))
   (g$make-parameter$6443$1Bug2v
     g$make-parameter$6522$1Bug2v
     (case-lambda
       ((g$x$6514$1Bug2v)
        (g$make-parameter$6443$1Bug2v
          g$x$6514$1Bug2v
          (case-lambda ((g$x$6515$1Bug2v) g$x$6515$1Bug2v))))
       ((g$x$6516$1Bug2v g$fender$6517$1Bug2v)
        (begin
          (if (not (procedure? g$fender$6517$1Bug2v))
            (g$assertion-error$11099$1Bug2v
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(51,8) - (51,36)"))
            (void))
          ((case-lambda
             ((g$x$6518$1Bug2v)
              (case-lambda
                (() g$x$6518$1Bug2v)
                ((g$v$6519$1Bug2v)
                 (set! g$x$6518$1Bug2v
                   (g$fender$6517$1Bug2v g$v$6519$1Bug2v))))))
           (g$fender$6517$1Bug2v g$x$6516$1Bug2v))))))
   (g$file-options-constructor$6511$1Bug2v
     g$file-options-constructor$6523$1Bug2v
     (g$make-parameter$6443$1Bug2v '#f))
   (g$file-options-spec$6512$1Bug2v
     g$file-options-spec$6524$1Bug2v
     (case-lambda
       ((g$x$6520$1Bug2v)
        ((g$file-options-constructor$6511$1Bug2v) g$x$6520$1Bug2v)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$6720$1Bug2v
     g$current-primitive-locations$6765$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda ((g$x$6726$1Bug2v) '#f))
       (case-lambda
         ((g$p$6727$1Bug2v)
          (begin
            (if (not (procedure? g$p$6727$1Bug2v))
              (g$assertion-error$11099$1Bug2v
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$6727$1Bug2v)))))
   (g$mutable?$6721$1Bug2v
     g$mutable?$6766$1Bug2v
     (case-lambda
       ((g$x$6728$1Bug2v)
        (letrec* ((g$simple?$6729$1Bug2v
                    (case-lambda
                      ((g$x$6730$1Bug2v)
                       ((case-lambda
                          ((g$t$6731$1Bug2v)
                           (if g$t$6731$1Bug2v
                             g$t$6731$1Bug2v
                             ((case-lambda
                                ((g$t$6732$1Bug2v)
                                 (if g$t$6732$1Bug2v
                                   g$t$6732$1Bug2v
                                   ((case-lambda
                                      ((g$t$6733$1Bug2v)
                                       (if g$t$6733$1Bug2v
                                         g$t$6733$1Bug2v
                                         ((case-lambda
                                            ((g$t$6734$1Bug2v)
                                             (if g$t$6734$1Bug2v
                                               g$t$6734$1Bug2v
                                               ((case-lambda
                                                  ((g$t$6735$1Bug2v)
                                                   (if g$t$6735$1Bug2v
                                                     g$t$6735$1Bug2v
                                                     ((case-lambda
                                                        ((g$t$6736$1Bug2v)
                                                         (if g$t$6736$1Bug2v
                                                           g$t$6736$1Bug2v
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$6730$1Bug2v)))))
                                                      (bytevector?
                                                        g$x$6730$1Bug2v)))))
                                                (string? g$x$6730$1Bug2v)))))
                                          (boolean? g$x$6730$1Bug2v)))))
                                    (symbol? g$x$6730$1Bug2v)))))
                              (char? g$x$6730$1Bug2v)))))
                        (null? g$x$6730$1Bug2v))))))
          (not (g$simple?$6729$1Bug2v g$x$6728$1Bug2v))))))
   (g$rewriter$6722$1Bug2v
     g$rewriter$6767$1Bug2v
     (case-lambda
       ((g$quote-hack?$6737$1Bug2v)
        (letrec* ((g$f$6738$1Bug2v
                    (case-lambda
                      ((g$x$6739$1Bug2v)
                       (if (pair? g$x$6739$1Bug2v)
                         ((case-lambda
                            ((g$t$6740$1Bug2v)
                             (if (g$memv$4955$1Bug2v g$t$6740$1Bug2v '(quote))
                               (if (if g$quote-hack?$6737$1Bug2v
                                     (begin
                                       '#f
                                       (g$mutable?$6721$1Bug2v
                                         (g$cadr$5124$1Bug2v g$x$6739$1Bug2v)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$6741$1Bug2v)
                                     (begin
                                       (set-symbol-value!
                                         g$g$6741$1Bug2v
                                         (g$cadr$5124$1Bug2v g$x$6739$1Bug2v))
                                       g$g$6741$1Bug2v)))
                                  (gensym))
                                 g$x$6739$1Bug2v)
                               (if (g$memv$4955$1Bug2v
                                     g$t$6740$1Bug2v
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (map (case-lambda
                                          ((g$x$6742$1Bug2v)
                                           (cons
                                             (car g$x$6742$1Bug2v)
                                             (map g$f$6738$1Bug2v
                                                  (cdr g$x$6742$1Bug2v)))))
                                        (cdr g$x$6739$1Bug2v)))
                                 (if (g$memv$4955$1Bug2v
                                       g$t$6740$1Bug2v
                                       '(lambda))
                                   (g$cons*$4962$1Bug2v
                                     'lambda
                                     (g$cadr$5124$1Bug2v g$x$6739$1Bug2v)
                                     (map g$f$6738$1Bug2v
                                          (g$cddr$5126$1Bug2v g$x$6739$1Bug2v)))
                                   (if (g$memv$4955$1Bug2v
                                         g$t$6740$1Bug2v
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$6743$1Bug2v
                                           g$body*$6744$1Bug2v)
                                         ((case-lambda
                                            ((g$lhs*$6745$1Bug2v
                                               g$rhs*$6746$1Bug2v)
                                             (g$cons*$4962$1Bug2v
                                               'letrec
                                               (map list
                                                    g$lhs*$6745$1Bug2v
                                                    (map g$f$6738$1Bug2v
                                                         g$rhs*$6746$1Bug2v))
                                               (map g$f$6738$1Bug2v
                                                    g$body*$6744$1Bug2v))))
                                          (map car g$bindings$6743$1Bug2v)
                                          (map g$cadr$5124$1Bug2v
                                               g$bindings$6743$1Bug2v))))
                                      (g$cadr$5124$1Bug2v g$x$6739$1Bug2v)
                                      (g$cddr$5126$1Bug2v g$x$6739$1Bug2v))
                                     (if (g$memv$4955$1Bug2v
                                           g$t$6740$1Bug2v
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$6747$1Bug2v
                                             g$body*$6748$1Bug2v)
                                           ((case-lambda
                                              ((g$lhs*$6749$1Bug2v
                                                 g$rhs*$6750$1Bug2v)
                                               (g$cons*$4962$1Bug2v
                                                 'letrec*
                                                 (map list
                                                      g$lhs*$6749$1Bug2v
                                                      (map g$f$6738$1Bug2v
                                                           g$rhs*$6750$1Bug2v))
                                                 (map g$f$6738$1Bug2v
                                                      g$body*$6748$1Bug2v))))
                                            (map car g$bindings$6747$1Bug2v)
                                            (map g$cadr$5124$1Bug2v
                                                 g$bindings$6747$1Bug2v))))
                                        (g$cadr$5124$1Bug2v g$x$6739$1Bug2v)
                                        (g$cddr$5126$1Bug2v g$x$6739$1Bug2v))
                                       (if (g$memv$4955$1Bug2v
                                             g$t$6740$1Bug2v
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$6751$1Bug2v
                                               g$x$6752$1Bug2v)
                                             ((case-lambda
                                                ((g$bindings$6753$1Bug2v
                                                   g$body*$6754$1Bug2v)
                                                 ((case-lambda
                                                    ((g$lhs*$6755$1Bug2v
                                                       g$lhs**$6756$1Bug2v
                                                       g$rhs*$6757$1Bug2v)
                                                     (g$cons*$4962$1Bug2v
                                                       'library-letrec*
                                                       g$name$6751$1Bug2v
                                                       (map list
                                                            g$lhs*$6755$1Bug2v
                                                            g$lhs**$6756$1Bug2v
                                                            (map g$f$6738$1Bug2v
                                                                 g$rhs*$6757$1Bug2v))
                                                       (map g$f$6738$1Bug2v
                                                            g$body*$6754$1Bug2v))))
                                                  (map car
                                                       g$bindings$6753$1Bug2v)
                                                  (map g$cadr$5124$1Bug2v
                                                       g$bindings$6753$1Bug2v)
                                                  (map g$caddr$5130$1Bug2v
                                                       g$bindings$6753$1Bug2v))))
                                              (g$cadr$5124$1Bug2v
                                                g$x$6752$1Bug2v)
                                              (g$cddr$5126$1Bug2v
                                                g$x$6752$1Bug2v))))
                                          (g$cadr$5124$1Bug2v g$x$6739$1Bug2v)
                                          (cdr g$x$6739$1Bug2v))
                                         (if (g$memv$4955$1Bug2v
                                               g$t$6740$1Bug2v
                                               '(begin))
                                           (cons
                                             'begin
                                             (map g$f$6738$1Bug2v
                                                  (cdr g$x$6739$1Bug2v)))
                                           (if (g$memv$4955$1Bug2v
                                                 g$t$6740$1Bug2v
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5124$1Bug2v
                                                 g$x$6739$1Bug2v)
                                               (g$f$6738$1Bug2v
                                                 (g$caddr$5130$1Bug2v
                                                   g$x$6739$1Bug2v)))
                                             (if (g$memv$4955$1Bug2v
                                                   g$t$6740$1Bug2v
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$6758$1Bug2v)
                                                   ((case-lambda
                                                      ((g$t$6759$1Bug2v)
                                                       (if g$t$6759$1Bug2v
                                                         ((case-lambda
                                                            ((g$loc$6760$1Bug2v)
                                                             g$loc$6760$1Bug2v))
                                                          g$t$6759$1Bug2v)
                                                         g$op$6758$1Bug2v)))
                                                    ((g$current-primitive-locations$6720$1Bug2v)
                                                     g$op$6758$1Bug2v))))
                                                (g$cadr$5124$1Bug2v
                                                  g$x$6739$1Bug2v))
                                               (if (g$memv$4955$1Bug2v
                                                     g$t$6740$1Bug2v
                                                     '(define))
                                                 g$x$6739$1Bug2v
                                                 (if (list? g$x$6739$1Bug2v)
                                                   (map g$f$6738$1Bug2v
                                                        g$x$6739$1Bug2v)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$6739$1Bug2v
                                                     (list?
                                                       g$x$6739$1Bug2v)))))))))))))))
                          (car g$x$6739$1Bug2v))
                         g$x$6739$1Bug2v)))))
          g$f$6738$1Bug2v))))
   (g$expanded->core$6723$1Bug2v
     g$expanded->core$6768$1Bug2v
     (case-lambda
       ((g$x$6761$1Bug2v) ((g$rewriter$6722$1Bug2v '#t) g$x$6761$1Bug2v))))
   (g$compile-core-expr$6724$1Bug2v
     g$compile-core-expr$6769$1Bug2v
     (case-lambda
       ((g$x$6762$1Bug2v) ((g$rewriter$6722$1Bug2v '#f) g$x$6762$1Bug2v))))
   (g$compile-core-expr-to-port$6725$1Bug2v
     g$compile-core-expr-to-port$6770$1Bug2v
     (case-lambda
       ((g$x$6763$1Bug2v g$p$6764$1Bug2v)
        (g$pretty-print$6719$1Bug2v
          ((g$rewriter$6722$1Bug2v '#f) g$x$6763$1Bug2v)
          g$p$6764$1Bug2v)))))
  (void))

(library-letrec* (psyntax config) () (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$6809$1Bug2v
     g$make-collection$7013$1Bug2v
     (case-lambda
       (()
        ((case-lambda
           ((g$set$6870$1Bug2v)
            (letrec* ((g$set-cons$6871$1Bug2v
                        (case-lambda
                          ((g$x$6873$1Bug2v g$ls$6874$1Bug2v)
                           (if (g$memq$4954$1Bug2v
                                 g$x$6873$1Bug2v
                                 g$ls$6874$1Bug2v)
                             g$ls$6874$1Bug2v
                             (cons g$x$6873$1Bug2v g$ls$6874$1Bug2v))))))
              (case-lambda
                (() g$set$6870$1Bug2v)
                ((g$x$6872$1Bug2v)
                 (set! g$set$6870$1Bug2v
                   (g$set-cons$6871$1Bug2v
                     g$x$6872$1Bug2v
                     g$set$6870$1Bug2v)))))))
         '()))))
   (g$current-library-collection$6810$1Bug2v
     g$current-library-collection$7014$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (g$make-collection$6809$1Bug2v)
       (case-lambda
         ((g$x$6875$1Bug2v)
          (begin
            (if (not (procedure? g$x$6875$1Bug2v))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$6875$1Bug2v)
              (void))
            g$x$6875$1Bug2v)))))
   (g$7923$6811$1Bug2v
     g$7923$7015$1Bug2v
     (make-record-type-descriptor
       'library
       '#f
       'g$7926$1Bug2v
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$7925$6812$1Bug2v g$7925$7016$1Bug2v '#f)
   (g$7924$6813$1Bug2v
     g$7924$7017$1Bug2v
     (make-record-constructor-descriptor
       g$7923$6811$1Bug2v
       '#f
       g$7925$6812$1Bug2v))
   (g$library?$6814$1Bug2v
     g$library?$7018$1Bug2v
     (record-predicate g$7923$6811$1Bug2v))
   (g$make-library$6815$1Bug2v
     g$make-library$7019$1Bug2v
     (record-constructor g$7924$6813$1Bug2v))
   (g$library-id$6816$1Bug2v
     g$library-id$7020$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '0))
   (g$library-name$6817$1Bug2v
     g$library-name$7021$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '1))
   (g$library-version$6818$1Bug2v
     g$library-version$7022$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '2))
   (g$library-imp*$6819$1Bug2v
     g$library-imp*$7023$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '3))
   (g$library-vis*$6820$1Bug2v
     g$library-vis*$7024$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '4))
   (g$library-inv*$6821$1Bug2v
     g$library-inv*$7025$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '5))
   (g$library-subst$6822$1Bug2v
     g$library-subst$7026$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '6))
   (g$library-env$6823$1Bug2v
     g$library-env$7027$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '7))
   (g$library-visit-state$6824$1Bug2v
     g$library-visit-state$7028$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '8))
   (g$library-invoke-state$6825$1Bug2v
     g$library-invoke-state$7029$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '9))
   (g$library-visit-code$6826$1Bug2v
     g$library-visit-code$7030$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '10))
   (g$library-invoke-code$6827$1Bug2v
     g$library-invoke-code$7031$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '11))
   (g$library-visible?$6828$1Bug2v
     g$library-visible?$7032$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '12))
   (g$library-source-file-name$6829$1Bug2v
     g$library-source-file-name$7033$1Bug2v
     (record-accessor g$7923$6811$1Bug2v '13))
   (g$set-library-id!$6830$1Bug2v
     g$set-library-id!$7034$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '0))
   (g$set-library-name!$6831$1Bug2v
     g$set-library-name!$7035$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '1))
   (g$set-library-version!$6832$1Bug2v
     g$set-library-version!$7036$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '2))
   (g$set-library-imp*!$6833$1Bug2v
     g$set-library-imp*!$7037$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '3))
   (g$set-library-vis*!$6834$1Bug2v
     g$set-library-vis*!$7038$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '4))
   (g$set-library-inv*!$6835$1Bug2v
     g$set-library-inv*!$7039$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '5))
   (g$set-library-subst!$6836$1Bug2v
     g$set-library-subst!$7040$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '6))
   (g$set-library-env!$6837$1Bug2v
     g$set-library-env!$7041$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '7))
   (g$set-library-visit-state!$6838$1Bug2v
     g$set-library-visit-state!$7042$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '8))
   (g$set-library-invoke-state!$6839$1Bug2v
     g$set-library-invoke-state!$7043$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '9))
   (g$set-library-visit-code!$6840$1Bug2v
     g$set-library-visit-code!$7044$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '10))
   (g$set-library-invoke-code!$6841$1Bug2v
     g$set-library-invoke-code!$7045$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '11))
   (g$set-library-visible?!$6842$1Bug2v
     g$set-library-visible?!$7046$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '12))
   (g$set-library-source-file-name!$6843$1Bug2v
     g$set-library-source-file-name!$7047$1Bug2v
     (record-mutator g$7923$6811$1Bug2v '13))
   (g$rp$6844$1Bug2v
     g$rp$7048$1Bug2v
     (make-record-printer
       'library
       (case-lambda
         ((g$x$6876$1Bug2v g$p$6877$1Bug2v)
          (begin
            (if (not (g$library?$6814$1Bug2v g$x$6876$1Bug2v))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6437$1Bug2v
                '"#<library ~s>"
                (if (null? (g$library-version$6818$1Bug2v g$x$6876$1Bug2v))
                  (g$library-name$6817$1Bug2v g$x$6876$1Bug2v)
                  (append
                    (g$library-name$6817$1Bug2v g$x$6876$1Bug2v)
                    (list (g$library-version$6818$1Bug2v g$x$6876$1Bug2v)))))
              g$p$6877$1Bug2v))))))
   (g$find-dependencies$6845$1Bug2v
     g$find-dependencies$7049$1Bug2v
     (case-lambda
       ((g$ls$6878$1Bug2v)
        (if (null? g$ls$6878$1Bug2v)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$6846$1Bug2v
     g$find-library-by$7050$1Bug2v
     (case-lambda
       ((g$pred$6879$1Bug2v)
        ((letrec ((g$f$6880$1Bug2v
                    (case-lambda
                      ((g$ls$6881$1Bug2v)
                       (if (null? g$ls$6881$1Bug2v)
                         '#f
                         (if (g$pred$6879$1Bug2v (car g$ls$6881$1Bug2v))
                           (car g$ls$6881$1Bug2v)
                           (g$f$6880$1Bug2v (cdr g$ls$6881$1Bug2v))))))))
           g$f$6880$1Bug2v)
         ((g$current-library-collection$6810$1Bug2v))))))
   (g$library-path$6847$1Bug2v
     g$library-path$7051$1Bug2v
     (g$make-parameter$6522$1Bug2v
       '(".")
       (case-lambda
         ((g$x$6882$1Bug2v)
          (if (if (list? g$x$6882$1Bug2v)
                (begin '#f (g$for-all$4960$1Bug2v string? g$x$6882$1Bug2v))
                '#f)
            (map (case-lambda ((g$x$6883$1Bug2v) g$x$6883$1Bug2v))
                 g$x$6882$1Bug2v)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$6882$1Bug2v))))))
   (g$library-extensions$6848$1Bug2v
     g$library-extensions$7052$1Bug2v
     (g$make-parameter$6522$1Bug2v
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$6884$1Bug2v)
          (if (if (list? g$x$6884$1Bug2v)
                (begin '#f (g$for-all$4960$1Bug2v string? g$x$6884$1Bug2v))
                '#f)
            (map (case-lambda ((g$x$6885$1Bug2v) g$x$6885$1Bug2v))
                 g$x$6884$1Bug2v)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$6884$1Bug2v))))))
   (g$library-name->file-name$6849$1Bug2v
     g$library-name->file-name$7053$1Bug2v
     (case-lambda
       ((g$x$6886$1Bug2v)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6231$1Bug2v)))
          (case-lambda
            ((g$p$6889$1Bug2v g$extract$6890$1Bug2v)
             ((case-lambda
                ((g$extract$6891$1Bug2v g$p$6892$1Bug2v)
                 (letrec* ((g$display-hex$6893$1Bug2v
                             (case-lambda
                               ((g$n$6901$1Bug2v)
                                (if (<= '0 g$n$6901$1Bug2v '9)
                                  (display g$n$6901$1Bug2v g$p$6892$1Bug2v)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$6901$1Bug2v '10)))
                                    g$p$6892$1Bug2v))))))
                   (begin
                     ((letrec ((g$f$6894$1Bug2v
                                 (case-lambda
                                   ((g$ls$6895$1Bug2v)
                                    (if (not (null? g$ls$6895$1Bug2v))
                                      (begin
                                        (display '"/" g$p$6892$1Bug2v)
                                        (for-each
                                          (case-lambda
                                            ((g$c$6896$1Bug2v)
                                             (if ((case-lambda
                                                    ((g$t$6897$1Bug2v)
                                                     (if g$t$6897$1Bug2v
                                                       g$t$6897$1Bug2v
                                                       ((case-lambda
                                                          ((g$t$6898$1Bug2v)
                                                           (if g$t$6898$1Bug2v
                                                             g$t$6898$1Bug2v
                                                             ((case-lambda
                                                                ((g$t$6899$1Bug2v)
                                                                 (if g$t$6899$1Bug2v
                                                                   g$t$6899$1Bug2v
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$4955$1Bug2v
                                                                       g$c$6896$1Bug2v
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5161$1Bug2v
                                                                '#\0
                                                                g$c$6896$1Bug2v
                                                                '#\9)))))
                                                        (g$char<=?$5161$1Bug2v
                                                          '#\A
                                                          g$c$6896$1Bug2v
                                                          '#\Z)))))
                                                  (g$char<=?$5161$1Bug2v
                                                    '#\a
                                                    g$c$6896$1Bug2v
                                                    '#\z))
                                               (display
                                                 g$c$6896$1Bug2v
                                                 g$p$6892$1Bug2v)
                                               (begin
                                                 (display '"%" g$p$6892$1Bug2v)
                                                 ((case-lambda
                                                    ((g$n$6900$1Bug2v)
                                                     (begin
                                                       (g$display-hex$6893$1Bug2v
                                                         (g$quotient$5776$1Bug2v
                                                           g$n$6900$1Bug2v
                                                           '16))
                                                       (g$display-hex$6893$1Bug2v
                                                         (g$remainder$5777$1Bug2v
                                                           g$n$6900$1Bug2v
                                                           '16)))))
                                                  (char->integer
                                                    g$c$6896$1Bug2v))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$6895$1Bug2v))))
                                        (g$f$6894$1Bug2v
                                          (cdr g$ls$6895$1Bug2v)))
                                      (void))))))
                        g$f$6894$1Bug2v)
                      g$x$6886$1Bug2v)
                     (g$extract$6891$1Bug2v)))))
              g$extract$6890$1Bug2v
              g$p$6889$1Bug2v)))))))
   (g$file-locator$6850$1Bug2v
     g$file-locator$7054$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda
         ((g$x$6902$1Bug2v)
          ((case-lambda
             ((g$str$6903$1Bug2v)
              ((letrec ((g$f$6904$1Bug2v
                          (case-lambda
                            ((g$ls$6905$1Bug2v
                               g$exts$6906$1Bug2v
                               g$failed-list$6907$1Bug2v)
                             (if (null? g$ls$6905$1Bug2v)
                               ((case-lambda
                                  (()
                                   (letrec* ((g$8028$6908$1Bug2v
                                               (make-record-type-descriptor
                                                 '&library-resolution
                                                 &condition-rtd
                                                 'g$8031$1Bug2v
                                                 '#f
                                                 '#f
                                                 '#((immutable library)
                                                    (immutable files))))
                                             (g$8030$6909$1Bug2v '#f)
                                             (g$8029$6910$1Bug2v
                                               (make-record-constructor-descriptor
                                                 g$8028$6908$1Bug2v
                                                 &condition-rcd
                                                 g$8030$6909$1Bug2v))
                                             (g$8027$6911$1Bug2v
                                               (record-predicate
                                                 g$8028$6908$1Bug2v))
                                             (g$make-library-resolution-condition$6912$1Bug2v
                                               (record-constructor
                                                 g$8029$6910$1Bug2v))
                                             (g$8025$6913$1Bug2v
                                               (record-accessor
                                                 g$8028$6908$1Bug2v
                                                 '0))
                                             (g$8026$6914$1Bug2v
                                               (record-accessor
                                                 g$8028$6908$1Bug2v
                                                 '1))
                                             (g$library-resolution-condition?$6915$1Bug2v
                                               (condition-predicate
                                                 g$8028$6908$1Bug2v))
                                             (g$condition-library$6916$1Bug2v
                                               (condition-accessor
                                                 g$8028$6908$1Bug2v
                                                 g$8025$6913$1Bug2v))
                                             (g$condition-files$6917$1Bug2v
                                               (condition-accessor
                                                 g$8028$6908$1Bug2v
                                                 g$8026$6914$1Bug2v)))
                                     (raise
                                       (condition
                                         (g$make-error$5686$1Bug2v)
                                         (g$make-who-condition$5712$1Bug2v
                                           'expander)
                                         (g$make-message-condition$5666$1Bug2v
                                           '"cannot locate library in library-path")
                                         (g$make-library-resolution-condition$6912$1Bug2v
                                           g$x$6902$1Bug2v
                                           (reverse
                                             g$failed-list$6907$1Bug2v))))))))
                               (if (null? g$exts$6906$1Bug2v)
                                 (g$f$6904$1Bug2v
                                   (cdr g$ls$6905$1Bug2v)
                                   (g$library-extensions$6848$1Bug2v)
                                   g$failed-list$6907$1Bug2v)
                                 ((case-lambda
                                    ((g$name$6918$1Bug2v)
                                     (if (g$file-exists?$5417$1Bug2v
                                           g$name$6918$1Bug2v)
                                       g$name$6918$1Bug2v
                                       (g$f$6904$1Bug2v
                                         g$ls$6905$1Bug2v
                                         (cdr g$exts$6906$1Bug2v)
                                         (cons
                                           g$name$6918$1Bug2v
                                           g$failed-list$6907$1Bug2v)))))
                                  (string-append
                                    (car g$ls$6905$1Bug2v)
                                    g$str$6903$1Bug2v
                                    (car g$exts$6906$1Bug2v)))))))))
                 g$f$6904$1Bug2v)
               (g$library-path$6847$1Bug2v)
               (g$library-extensions$6848$1Bug2v)
               '())))
           (g$library-name->file-name$6849$1Bug2v g$x$6902$1Bug2v))))
       (case-lambda
         ((g$f$6919$1Bug2v)
          (if (procedure? g$f$6919$1Bug2v)
            g$f$6919$1Bug2v
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$6919$1Bug2v))))))
   (g$serialize-all$6851$1Bug2v
     g$serialize-all$7055$1Bug2v
     (case-lambda
       ((g$serialize$6920$1Bug2v g$compile$6921$1Bug2v)
        (letrec* ((g$library-desc$6922$1Bug2v
                    (case-lambda
                      ((g$x$6924$1Bug2v)
                       (list
                         (g$library-id$6816$1Bug2v g$x$6924$1Bug2v)
                         (g$library-name$6817$1Bug2v g$x$6924$1Bug2v))))))
          (for-each
            (case-lambda
              ((g$x$6923$1Bug2v)
               (if (g$library-source-file-name$6829$1Bug2v g$x$6923$1Bug2v)
                 (g$serialize$6920$1Bug2v
                   (g$library-source-file-name$6829$1Bug2v g$x$6923$1Bug2v)
                   (list
                     (g$library-id$6816$1Bug2v g$x$6923$1Bug2v)
                     (g$library-name$6817$1Bug2v g$x$6923$1Bug2v)
                     (g$library-version$6818$1Bug2v g$x$6923$1Bug2v)
                     (map g$library-desc$6922$1Bug2v
                          (g$library-imp*$6819$1Bug2v g$x$6923$1Bug2v))
                     (map g$library-desc$6922$1Bug2v
                          (g$library-vis*$6820$1Bug2v g$x$6923$1Bug2v))
                     (map g$library-desc$6922$1Bug2v
                          (g$library-inv*$6821$1Bug2v g$x$6923$1Bug2v))
                     (g$library-subst$6822$1Bug2v g$x$6923$1Bug2v)
                     (g$library-env$6823$1Bug2v g$x$6923$1Bug2v)
                     (g$compile$6921$1Bug2v
                       (g$library-visit-code$6826$1Bug2v g$x$6923$1Bug2v))
                     (g$compile$6921$1Bug2v
                       (g$library-invoke-code$6827$1Bug2v g$x$6923$1Bug2v))
                     (g$library-visible?$6828$1Bug2v g$x$6923$1Bug2v)))
                 (void))))
            ((g$current-library-collection$6810$1Bug2v)))))))
   (g$current-precompiled-library-loader$6852$1Bug2v
     g$current-precompiled-library-loader$7056$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda ((g$filename$6925$1Bug2v g$sk$6926$1Bug2v) '#f))))
   (g$try-load-from-file$6853$1Bug2v
     g$try-load-from-file$7057$1Bug2v
     (case-lambda
       ((g$filename$6927$1Bug2v)
        ((g$current-precompiled-library-loader$6852$1Bug2v)
         g$filename$6927$1Bug2v
         (case-lambda
           ((g$id$6928$1Bug2v
              g$name$6929$1Bug2v
              g$ver$6930$1Bug2v
              g$imp*$6931$1Bug2v
              g$vis*$6932$1Bug2v
              g$inv*$6933$1Bug2v
              g$exp-subst$6934$1Bug2v
              g$exp-env$6935$1Bug2v
              g$visit-proc$6936$1Bug2v
              g$invoke-proc$6937$1Bug2v
              g$visible?$6938$1Bug2v)
            ((letrec ((g$f$6939$1Bug2v
                        (case-lambda
                          ((g$deps$6940$1Bug2v)
                           (if (null? g$deps$6940$1Bug2v)
                             (begin
                               (g$install-library$6863$1Bug2v
                                 g$id$6928$1Bug2v
                                 g$name$6929$1Bug2v
                                 g$ver$6930$1Bug2v
                                 g$imp*$6931$1Bug2v
                                 g$vis*$6932$1Bug2v
                                 g$inv*$6933$1Bug2v
                                 g$exp-subst$6934$1Bug2v
                                 g$exp-env$6935$1Bug2v
                                 g$visit-proc$6936$1Bug2v
                                 g$invoke-proc$6937$1Bug2v
                                 '#f
                                 '#f
                                 g$visible?$6938$1Bug2v
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$6941$1Bug2v)
                                 ((case-lambda
                                    ((g$label$6942$1Bug2v g$dname$6943$1Bug2v)
                                     ((case-lambda
                                        ((g$l$6944$1Bug2v)
                                         (if (if (g$library?$6814$1Bug2v
                                                   g$l$6944$1Bug2v)
                                               (begin
                                                 '#f
                                                 (eq? g$label$6942$1Bug2v
                                                      (g$library-id$6816$1Bug2v
                                                        g$l$6944$1Bug2v)))
                                               '#f)
                                           (g$f$6939$1Bug2v
                                             (cdr g$deps$6940$1Bug2v))
                                           (begin
                                             (g$fprintf$6436$1Bug2v
                                               (current-error-port)
                                               '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
                                               g$name$6929$1Bug2v
                                               g$dname$6943$1Bug2v
                                               g$filename$6927$1Bug2v)
                                             '#f))))
                                      (g$find-library-by-name$6858$1Bug2v
                                        g$dname$6943$1Bug2v))))
                                  (car g$d$6941$1Bug2v)
                                  (g$cadr$5124$1Bug2v g$d$6941$1Bug2v))))
                              (car g$deps$6940$1Bug2v)))))))
               g$f$6939$1Bug2v)
             (append g$imp*$6931$1Bug2v g$vis*$6932$1Bug2v g$inv*$6933$1Bug2v)))
           (g$others$6945$1Bug2v '#f))))))
   (g$library-loader$6854$1Bug2v
     g$library-loader$7058$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda
         ((g$x$6946$1Bug2v)
          ((case-lambda
             ((g$file-name$6947$1Bug2v)
              (if (not g$file-name$6947$1Bug2v)
                (assertion-violation '#f '"cannot file library" g$x$6946$1Bug2v)
                ((case-lambda
                   ((g$t$6948$1Bug2v)
                    (if g$t$6948$1Bug2v
                      g$t$6948$1Bug2v
                      (begin
                        '#f
                        ((g$current-library-expander$6855$1Bug2v)
                         (g$read-library-source-file$6521$1Bug2v
                           g$file-name$6947$1Bug2v)
                         g$file-name$6947$1Bug2v
                         (case-lambda
                           ((g$name$6949$1Bug2v)
                            (if (not (equal?
                                       g$name$6949$1Bug2v
                                       g$x$6946$1Bug2v))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (()
                                     (g$open-string-output-port$6231$1Bug2v)))
                                  (case-lambda
                                    ((g$p$6952$1Bug2v g$e$6953$1Bug2v)
                                     ((case-lambda
                                        ((g$e$6954$1Bug2v g$p$6955$1Bug2v)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$6955$1Bug2v)
                                           (write
                                             g$x$6946$1Bug2v
                                             g$p$6955$1Bug2v)
                                           (display
                                             '" in file "
                                             g$p$6955$1Bug2v)
                                           (display
                                             g$file-name$6947$1Bug2v
                                             g$p$6955$1Bug2v)
                                           (display '", found " g$p$6955$1Bug2v)
                                           (write
                                             g$name$6949$1Bug2v
                                             g$p$6955$1Bug2v)
                                           (display '" instead" g$p$6955$1Bug2v)
                                           (g$e$6954$1Bug2v))))
                                      g$e$6953$1Bug2v
                                      g$p$6952$1Bug2v)))))
                              (void)))))))))
                 (g$try-load-from-file$6853$1Bug2v g$file-name$6947$1Bug2v)))))
           ((g$file-locator$6850$1Bug2v) g$x$6946$1Bug2v))))
       (case-lambda
         ((g$f$6956$1Bug2v)
          (if (procedure? g$f$6956$1Bug2v)
            g$f$6956$1Bug2v
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$6956$1Bug2v))))))
   (g$current-library-expander$6855$1Bug2v
     g$current-library-expander$7059$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda
         ((g$x$6957$1Bug2v)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$6958$1Bug2v)
          (if (procedure? g$f$6958$1Bug2v)
            g$f$6958$1Bug2v
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$6958$1Bug2v))))))
   (g$external-pending-libraries$6856$1Bug2v
     g$external-pending-libraries$7060$1Bug2v
     (g$make-parameter$6522$1Bug2v '()))
   (g$find-external-library$6857$1Bug2v
     g$find-external-library$7061$1Bug2v
     (case-lambda
       ((g$name$6959$1Bug2v)
        (begin
          (if (g$member$4956$1Bug2v
                g$name$6959$1Bug2v
                (g$external-pending-libraries$6856$1Bug2v))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$6959$1Bug2v)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$6962$1Bug2v
                g$external-pending-libraries$6963$1Bug2v)
              ((case-lambda
                 ((g$swap$6964$1Bug2v)
                  (dynamic-wind
                    g$swap$6964$1Bug2v
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$6854$1Bug2v) g$name$6959$1Bug2v)
                         ((case-lambda
                            ((g$t$6965$1Bug2v)
                             (if g$t$6965$1Bug2v
                               g$t$6965$1Bug2v
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$6959$1Bug2v)))))
                          (g$find-library-by$6846$1Bug2v
                            (case-lambda
                              ((g$x$6966$1Bug2v)
                               (equal?
                                 (g$library-name$6817$1Bug2v g$x$6966$1Bug2v)
                                 g$name$6959$1Bug2v))))))))
                    g$swap$6964$1Bug2v)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$6967$1Bug2v)
                      (begin
                        (g$external-pending-libraries$6962$1Bug2v
                          g$external-pending-libraries$6963$1Bug2v)
                        (set! g$external-pending-libraries$6963$1Bug2v
                          g$t$6967$1Bug2v))))
                   (g$external-pending-libraries$6962$1Bug2v)))))))
           g$external-pending-libraries$6856$1Bug2v
           (cons
             g$name$6959$1Bug2v
             (g$external-pending-libraries$6856$1Bug2v)))))))
   (g$find-library-by-name$6858$1Bug2v
     g$find-library-by-name$7062$1Bug2v
     (case-lambda
       ((g$name$6968$1Bug2v)
        ((case-lambda
           ((g$t$6969$1Bug2v)
            (if g$t$6969$1Bug2v
              g$t$6969$1Bug2v
              (begin
                '#f
                (g$find-external-library$6857$1Bug2v g$name$6968$1Bug2v)))))
         (g$find-library-by$6846$1Bug2v
           (case-lambda
             ((g$x$6970$1Bug2v)
              (equal?
                (g$library-name$6817$1Bug2v g$x$6970$1Bug2v)
                g$name$6968$1Bug2v))))))))
   (g$library-exists?$6859$1Bug2v
     g$library-exists?$7063$1Bug2v
     (case-lambda
       ((g$name$6971$1Bug2v)
        (if (g$find-library-by$6846$1Bug2v
              (case-lambda
                ((g$x$6972$1Bug2v)
                 (equal?
                   (g$library-name$6817$1Bug2v g$x$6972$1Bug2v)
                   g$name$6971$1Bug2v))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$6860$1Bug2v
     g$find-library-by-spec/die$7064$1Bug2v
     (case-lambda
       ((g$spec$6973$1Bug2v)
        ((case-lambda
           ((g$id$6974$1Bug2v)
            ((case-lambda
               ((g$t$6975$1Bug2v)
                (if g$t$6975$1Bug2v
                  g$t$6975$1Bug2v
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$6973$1Bug2v)))))
             (g$find-library-by$6846$1Bug2v
               (case-lambda
                 ((g$x$6976$1Bug2v)
                  (eq? g$id$6974$1Bug2v
                       (g$library-id$6816$1Bug2v g$x$6976$1Bug2v))))))))
         (car g$spec$6973$1Bug2v)))))
   (g$label->binding-table$6861$1Bug2v
     g$label->binding-table$7065$1Bug2v
     (g$make-eq-hashtable$5398$1Bug2v))
   (g$install-library-record$6862$1Bug2v
     g$install-library-record$7066$1Bug2v
     (case-lambda
       ((g$lib$6977$1Bug2v)
        (begin
          ((case-lambda
             ((g$exp-env$6978$1Bug2v)
              (for-each
                (case-lambda
                  ((g$x$6979$1Bug2v)
                   ((case-lambda
                      ((g$label$6980$1Bug2v g$binding$6981$1Bug2v)
                       ((case-lambda
                          ((g$binding$6982$1Bug2v)
                           (g$hashtable-set!$5402$1Bug2v
                             g$label->binding-table$6861$1Bug2v
                             g$label$6980$1Bug2v
                             g$binding$6982$1Bug2v)))
                        ((case-lambda
                           ((g$t$6983$1Bug2v)
                            (if (g$memv$4955$1Bug2v g$t$6983$1Bug2v '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$6977$1Bug2v
                                  (cdr g$binding$6981$1Bug2v)))
                              (if (g$memv$4955$1Bug2v
                                    g$t$6983$1Bug2v
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$6977$1Bug2v
                                    (cdr g$binding$6981$1Bug2v)))
                                (if (g$memv$4955$1Bug2v
                                      g$t$6983$1Bug2v
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$6977$1Bug2v
                                      (cdr g$binding$6981$1Bug2v)))
                                  g$binding$6981$1Bug2v)))))
                         (car g$binding$6981$1Bug2v)))))
                    (car g$x$6979$1Bug2v)
                    (cdr g$x$6979$1Bug2v))))
                g$exp-env$6978$1Bug2v)))
           (g$library-env$6823$1Bug2v g$lib$6977$1Bug2v))
          ((g$current-library-collection$6810$1Bug2v) g$lib$6977$1Bug2v)))))
   (g$install-library$6863$1Bug2v
     g$install-library$7067$1Bug2v
     (case-lambda
       ((g$id$6984$1Bug2v
          g$name$6985$1Bug2v
          g$ver$6986$1Bug2v
          g$imp*$6987$1Bug2v
          g$vis*$6988$1Bug2v
          g$inv*$6989$1Bug2v
          g$exp-subst$6990$1Bug2v
          g$exp-env$6991$1Bug2v
          g$visit-proc$6992$1Bug2v
          g$invoke-proc$6993$1Bug2v
          g$visit-code$6994$1Bug2v
          g$invoke-code$6995$1Bug2v
          g$visible?$6996$1Bug2v
          g$source-file-name$6997$1Bug2v)
        ((case-lambda
           ((g$imp-lib*$6998$1Bug2v
              g$vis-lib*$6999$1Bug2v
              g$inv-lib*$7000$1Bug2v)
            (begin
              (if (not (if (symbol? g$id$6984$1Bug2v)
                         (if (list? g$name$6985$1Bug2v)
                           (begin '#f (list? g$ver$6986$1Bug2v))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$6984$1Bug2v
                  g$name$6985$1Bug2v
                  g$ver$6986$1Bug2v)
                (void))
              (if (g$library-exists?$6859$1Bug2v g$name$6985$1Bug2v)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$6985$1Bug2v)
                (void))
              ((case-lambda
                 ((g$lib$7001$1Bug2v)
                  (g$install-library-record$6862$1Bug2v g$lib$7001$1Bug2v)))
               (g$make-library$6815$1Bug2v
                 g$id$6984$1Bug2v
                 g$name$6985$1Bug2v
                 g$ver$6986$1Bug2v
                 g$imp-lib*$6998$1Bug2v
                 g$vis-lib*$6999$1Bug2v
                 g$inv-lib*$7000$1Bug2v
                 g$exp-subst$6990$1Bug2v
                 g$exp-env$6991$1Bug2v
                 g$visit-proc$6992$1Bug2v
                 g$invoke-proc$6993$1Bug2v
                 g$visit-code$6994$1Bug2v
                 g$invoke-code$6995$1Bug2v
                 g$visible?$6996$1Bug2v
                 g$source-file-name$6997$1Bug2v)))))
         (map g$find-library-by-spec/die$6860$1Bug2v g$imp*$6987$1Bug2v)
         (map g$find-library-by-spec/die$6860$1Bug2v g$vis*$6988$1Bug2v)
         (map g$find-library-by-spec/die$6860$1Bug2v g$inv*$6989$1Bug2v)))))
   (g$imported-label->binding$6864$1Bug2v
     g$imported-label->binding$7068$1Bug2v
     (case-lambda
       ((g$lab$7002$1Bug2v)
        (g$hashtable-ref$5401$1Bug2v
          g$label->binding-table$6861$1Bug2v
          g$lab$7002$1Bug2v
          '#f))))
   (g$invoke-library$6865$1Bug2v
     g$invoke-library$7069$1Bug2v
     (case-lambda
       ((g$lib$7003$1Bug2v)
        ((case-lambda
           ((g$invoke$7004$1Bug2v)
            (if (procedure? g$invoke$7004$1Bug2v)
              (begin
                (g$set-library-invoke-state!$6839$1Bug2v
                  g$lib$7003$1Bug2v
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7003$1Bug2v))))
                (for-each
                  g$invoke-library$6865$1Bug2v
                  (g$library-inv*$6821$1Bug2v g$lib$7003$1Bug2v))
                (g$set-library-invoke-state!$6839$1Bug2v
                  g$lib$7003$1Bug2v
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7003$1Bug2v))))
                (g$invoke$7004$1Bug2v)
                (g$set-library-invoke-state!$6839$1Bug2v g$lib$7003$1Bug2v '#t))
              (void))))
         (g$library-invoke-state$6825$1Bug2v g$lib$7003$1Bug2v)))))
   (g$visit-library$6866$1Bug2v
     g$visit-library$7070$1Bug2v
     (case-lambda
       ((g$lib$7005$1Bug2v)
        ((case-lambda
           ((g$visit$7006$1Bug2v)
            (if (procedure? g$visit$7006$1Bug2v)
              (begin
                (g$set-library-visit-state!$6838$1Bug2v
                  g$lib$7005$1Bug2v
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7005$1Bug2v))))
                (for-each
                  g$invoke-library$6865$1Bug2v
                  (g$library-vis*$6820$1Bug2v g$lib$7005$1Bug2v))
                (g$set-library-visit-state!$6838$1Bug2v
                  g$lib$7005$1Bug2v
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7005$1Bug2v))))
                (g$visit$7006$1Bug2v)
                (g$set-library-visit-state!$6838$1Bug2v g$lib$7005$1Bug2v '#t))
              (void))))
         (g$library-visit-state$6824$1Bug2v g$lib$7005$1Bug2v)))))
   (g$invoke-library-by-spec$6867$1Bug2v
     g$invoke-library-by-spec$7071$1Bug2v
     (case-lambda
       ((g$spec$7007$1Bug2v)
        (g$invoke-library$6865$1Bug2v
          (g$find-library-by-spec/die$6860$1Bug2v g$spec$7007$1Bug2v)))))
   (g$installed-libraries$6868$1Bug2v
     g$installed-libraries$7072$1Bug2v
     (case-lambda
       ((g$all?$7008$1Bug2v)
        ((letrec ((g$f$7009$1Bug2v
                    (case-lambda
                      ((g$ls$7010$1Bug2v)
                       (if (null? g$ls$7010$1Bug2v)
                         '()
                         (if ((case-lambda
                                ((g$t$7011$1Bug2v)
                                 (if g$t$7011$1Bug2v
                                   g$t$7011$1Bug2v
                                   (begin
                                     '#f
                                     (g$library-visible?$6828$1Bug2v
                                       (car g$ls$7010$1Bug2v))))))
                              g$all?$7008$1Bug2v)
                           (cons
                             (car g$ls$7010$1Bug2v)
                             (g$f$7009$1Bug2v (cdr g$ls$7010$1Bug2v)))
                           (g$f$7009$1Bug2v (cdr g$ls$7010$1Bug2v))))))))
           g$f$7009$1Bug2v)
         ((g$current-library-collection$6810$1Bug2v))))
       (() (g$installed-libraries$6868$1Bug2v '#f))))
   (g$library-spec$6869$1Bug2v
     g$library-spec$7073$1Bug2v
     (case-lambda
       ((g$x$7012$1Bug2v)
        (begin
          (if (not (g$library?$6814$1Bug2v g$x$7012$1Bug2v))
            (assertion-violation 'library-spec '"not a library" g$x$7012$1Bug2v)
            (void))
          (list
            (g$library-id$6816$1Bug2v g$x$7012$1Bug2v)
            (g$library-name$6817$1Bug2v g$x$7012$1Bug2v)
            (g$library-version$6818$1Bug2v g$x$7012$1Bug2v)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7074$1Bug2v
     g$build-global-define$7184$1Bug2v
     (case-lambda ((g$x$7155$1Bug2v) (g$build-void$7151$1Bug2v))))
   (g$build-lambda$7123$1Bug2v
     g$build-lambda$7185$1Bug2v
     (case-lambda
       ((g$ae$7156$1Bug2v g$vars$7157$1Bug2v g$exp$7158$1Bug2v)
        (list 'case-lambda (list g$vars$7157$1Bug2v g$exp$7158$1Bug2v)))))
   (g$build-case-lambda$7124$1Bug2v
     g$build-case-lambda$7186$1Bug2v
     (case-lambda
       ((g$ae$7159$1Bug2v g$vars*$7160$1Bug2v g$exp*$7161$1Bug2v)
        (cons 'case-lambda (map list g$vars*$7160$1Bug2v g$exp*$7161$1Bug2v)))))
   (g$build-let$7125$1Bug2v
     g$build-let$7187$1Bug2v
     (case-lambda
       ((g$ae$7162$1Bug2v
          g$lhs*$7163$1Bug2v
          g$rhs*$7164$1Bug2v
          g$body$7165$1Bug2v)
        (cons
          (g$build-lambda$7123$1Bug2v
            g$ae$7162$1Bug2v
            g$lhs*$7163$1Bug2v
            g$body$7165$1Bug2v)
          g$rhs*$7164$1Bug2v))))
   (g$build-sequence$7150$1Bug2v
     g$build-sequence$7188$1Bug2v
     (case-lambda
       ((g$ae$7166$1Bug2v g$exps$7167$1Bug2v)
        ((letrec ((g$loop$7168$1Bug2v
                    (case-lambda
                      ((g$exps$7169$1Bug2v)
                       (if (null? (cdr g$exps$7169$1Bug2v))
                         (car g$exps$7169$1Bug2v)
                         (if (equal?
                               (car g$exps$7169$1Bug2v)
                               (g$build-void$7151$1Bug2v))
                           (g$loop$7168$1Bug2v (cdr g$exps$7169$1Bug2v))
                           (cons 'begin g$exps$7169$1Bug2v)))))))
           g$loop$7168$1Bug2v)
         g$exps$7167$1Bug2v))))
   (g$build-void$7151$1Bug2v
     g$build-void$7189$1Bug2v
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$7152$1Bug2v
     g$build-letrec$7190$1Bug2v
     (case-lambda
       ((g$ae$7170$1Bug2v
          g$vars$7171$1Bug2v
          g$val-exps$7172$1Bug2v
          g$body-exp$7173$1Bug2v)
        (if (null? g$vars$7171$1Bug2v)
          g$body-exp$7173$1Bug2v
          (list
            'letrec
            (map list g$vars$7171$1Bug2v g$val-exps$7172$1Bug2v)
            g$body-exp$7173$1Bug2v)))))
   (g$build-letrec*$7153$1Bug2v
     g$build-letrec*$7191$1Bug2v
     (case-lambda
       ((g$ae$7174$1Bug2v
          g$vars$7175$1Bug2v
          g$val-exps$7176$1Bug2v
          g$body-exp$7177$1Bug2v)
        (if (null? g$vars$7175$1Bug2v)
          g$body-exp$7177$1Bug2v
          (list
            'letrec*
            (map list g$vars$7175$1Bug2v g$val-exps$7176$1Bug2v)
            g$body-exp$7177$1Bug2v)))))
   (g$build-library-letrec*$7154$1Bug2v
     g$build-library-letrec*$7192$1Bug2v
     (case-lambda
       ((g$ae$7178$1Bug2v
          g$name$7179$1Bug2v
          g$vars$7180$1Bug2v
          g$locs$7181$1Bug2v
          g$val-exps$7182$1Bug2v
          g$body-exp$7183$1Bug2v)
        (list
          'library-letrec*
          g$name$7179$1Bug2v
          (map list
               g$vars$7180$1Bug2v
               g$locs$7181$1Bug2v
               g$val-exps$7182$1Bug2v)
          g$body-exp$7183$1Bug2v)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$7193$1Bug2v
     g$set-cons$10846$1Bug2v
     (case-lambda
       ((g$x$7651$1Bug2v g$ls$7652$1Bug2v)
        (if (g$memq$4954$1Bug2v g$x$7651$1Bug2v g$ls$7652$1Bug2v)
          g$ls$7652$1Bug2v
          (cons g$x$7651$1Bug2v g$ls$7652$1Bug2v)))))
   (g$set-union$7194$1Bug2v
     g$set-union$10847$1Bug2v
     (case-lambda
       ((g$ls1$7653$1Bug2v g$ls2$7654$1Bug2v)
        (if (null? g$ls1$7653$1Bug2v)
          g$ls2$7654$1Bug2v
          (if (g$memq$4954$1Bug2v (car g$ls1$7653$1Bug2v) g$ls2$7654$1Bug2v)
            (g$set-union$7194$1Bug2v (cdr g$ls1$7653$1Bug2v) g$ls2$7654$1Bug2v)
            (cons
              (car g$ls1$7653$1Bug2v)
              (g$set-union$7194$1Bug2v
                (cdr g$ls1$7653$1Bug2v)
                g$ls2$7654$1Bug2v)))))))
   (g$top-mark*$7196$1Bug2v g$top-mark*$10848$1Bug2v '(top))
   (g$top-marked?$7197$1Bug2v
     g$top-marked?$10849$1Bug2v
     (case-lambda
       ((g$m*$7655$1Bug2v) (g$memq$4954$1Bug2v 'top g$m*$7655$1Bug2v))))
   (g$gen-lexical$7198$1Bug2v
     g$gen-lexical$10850$1Bug2v
     (case-lambda
       ((g$sym$7656$1Bug2v)
        (if (symbol? g$sym$7656$1Bug2v)
          (gensym g$sym$7656$1Bug2v)
          (if (g$stx?$7226$1Bug2v g$sym$7656$1Bug2v)
            (g$gen-lexical$7198$1Bug2v
              (g$id->sym$7255$1Bug2v g$sym$7656$1Bug2v))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$7656$1Bug2v))))))
   (g$gen-global$7199$1Bug2v
     g$gen-global$10851$1Bug2v
     (case-lambda
       ((g$x$7657$1Bug2v) (g$gen-lexical$7198$1Bug2v g$x$7657$1Bug2v))))
   (g$gen-label$7200$1Bug2v
     g$gen-label$10852$1Bug2v
     (case-lambda ((g$_$7658$1Bug2v) (gensym))))
   (g$gen-top-level-label$7201$1Bug2v
     g$gen-top-level-label$10853$1Bug2v
     (case-lambda
       ((g$id$7659$1Bug2v g$rib$7660$1Bug2v)
        (letrec* ((g$find$7661$1Bug2v
                    (case-lambda
                      ((g$sym$7667$1Bug2v
                         g$mark*$7668$1Bug2v
                         g$sym*$7669$1Bug2v
                         g$mark**$7670$1Bug2v
                         g$label*$7671$1Bug2v)
                       (if (pair? g$sym*$7669$1Bug2v)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7667$1Bug2v
                                        (car g$sym*$7669$1Bug2v))
                                 (begin
                                   '#f
                                   (g$same-marks?$7256$1Bug2v
                                     g$mark*$7668$1Bug2v
                                     (car g$mark**$7670$1Bug2v)))
                                 '#f)
                             (car g$label*$7671$1Bug2v)
                             (g$find$7661$1Bug2v
                               g$sym$7667$1Bug2v
                               g$mark*$7668$1Bug2v
                               (cdr g$sym*$7669$1Bug2v)
                               (cdr g$mark**$7670$1Bug2v)
                               (cdr g$label*$7671$1Bug2v))))
                         '#f)))))
          ((case-lambda
             ((g$sym$7662$1Bug2v g$mark*$7663$1Bug2v)
              ((case-lambda
                 ((g$sym*$7664$1Bug2v)
                  ((case-lambda
                     ((g$t$7665$1Bug2v)
                      (if g$t$7665$1Bug2v
                        ((case-lambda
                           ((g$label$7666$1Bug2v)
                            (if (g$imported-label->binding$7068$1Bug2v
                                  g$label$7666$1Bug2v)
                              (gensym)
                              g$label$7666$1Bug2v)))
                         g$t$7665$1Bug2v)
                        (gensym))))
                   (if (g$memq$4954$1Bug2v
                         g$sym$7662$1Bug2v
                         (g$rib-sym*$7209$1Bug2v g$rib$7660$1Bug2v))
                     (begin
                       '#f
                       (g$find$7661$1Bug2v
                         g$sym$7662$1Bug2v
                         g$mark*$7663$1Bug2v
                         g$sym*$7664$1Bug2v
                         (g$rib-mark**$7210$1Bug2v g$rib$7660$1Bug2v)
                         (g$rib-label*$7211$1Bug2v g$rib$7660$1Bug2v)))
                     '#f))))
               (g$rib-sym*$7209$1Bug2v g$rib$7660$1Bug2v))))
           (g$id->sym$7255$1Bug2v g$id$7659$1Bug2v)
           (g$stx-mark*$7229$1Bug2v g$id$7659$1Bug2v))))))
   (g$gen-define-label+loc$7202$1Bug2v
     g$gen-define-label+loc$10854$1Bug2v
     (case-lambda
       ((g$id$7672$1Bug2v g$rib$7673$1Bug2v)
        ((case-lambda
           ((g$t$7674$1Bug2v)
            (if g$t$7674$1Bug2v
              ((case-lambda
                 ((g$env$7675$1Bug2v)
                  ((case-lambda
                     ((g$label$7676$1Bug2v g$locs$7677$1Bug2v)
                      (values
                        g$label$7676$1Bug2v
                        ((case-lambda
                           ((g$t$7678$1Bug2v)
                            (if g$t$7678$1Bug2v
                              (cdr g$t$7678$1Bug2v)
                              ((case-lambda
                                 ((g$loc$7679$1Bug2v)
                                  (begin
                                    (g$set-interaction-env-locs!$7615$1Bug2v
                                      g$env$7675$1Bug2v
                                      (cons
                                        (cons
                                          g$label$7676$1Bug2v
                                          g$loc$7679$1Bug2v)
                                        g$locs$7677$1Bug2v))
                                    g$loc$7679$1Bug2v)))
                               (g$gen-lexical$7198$1Bug2v g$id$7672$1Bug2v)))))
                         (g$assq$4950$1Bug2v
                           g$label$7676$1Bug2v
                           g$locs$7677$1Bug2v)))))
                   (g$gen-top-level-label$7201$1Bug2v
                     g$id$7672$1Bug2v
                     g$rib$7673$1Bug2v)
                   (g$interaction-env-locs$7612$1Bug2v g$env$7675$1Bug2v))))
               g$t$7674$1Bug2v)
              (values (gensym) (g$gen-lexical$7198$1Bug2v g$id$7672$1Bug2v)))))
         (g$top-level-context$7650$1Bug2v)))))
   (g$gen-define-label$7203$1Bug2v
     g$gen-define-label$10855$1Bug2v
     (case-lambda
       ((g$id$7680$1Bug2v g$rib$7681$1Bug2v)
        (if (g$top-level-context$7650$1Bug2v)
          (g$gen-top-level-label$7201$1Bug2v g$id$7680$1Bug2v g$rib$7681$1Bug2v)
          (gensym)))))
   (g$8326$7204$1Bug2v
     g$8326$10856$1Bug2v
     (make-record-type-descriptor
       'rib
       '#f
       'g$8329$1Bug2v
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq))))
   (g$8328$7205$1Bug2v g$8328$10857$1Bug2v '#f)
   (g$8327$7206$1Bug2v
     g$8327$10858$1Bug2v
     (make-record-constructor-descriptor
       g$8326$7204$1Bug2v
       '#f
       g$8328$7205$1Bug2v))
   (g$rib?$7207$1Bug2v
     g$rib?$10859$1Bug2v
     (record-predicate g$8326$7204$1Bug2v))
   (g$make-rib$7208$1Bug2v
     g$make-rib$10860$1Bug2v
     (record-constructor g$8327$7206$1Bug2v))
   (g$rib-sym*$7209$1Bug2v
     g$rib-sym*$10861$1Bug2v
     (record-accessor g$8326$7204$1Bug2v '0))
   (g$rib-mark**$7210$1Bug2v
     g$rib-mark**$10862$1Bug2v
     (record-accessor g$8326$7204$1Bug2v '1))
   (g$rib-label*$7211$1Bug2v
     g$rib-label*$10863$1Bug2v
     (record-accessor g$8326$7204$1Bug2v '2))
   (g$rib-sealed/freq$7212$1Bug2v
     g$rib-sealed/freq$10864$1Bug2v
     (record-accessor g$8326$7204$1Bug2v '3))
   (g$set-rib-sym*!$7213$1Bug2v
     g$set-rib-sym*!$10865$1Bug2v
     (record-mutator g$8326$7204$1Bug2v '0))
   (g$set-rib-mark**!$7214$1Bug2v
     g$set-rib-mark**!$10866$1Bug2v
     (record-mutator g$8326$7204$1Bug2v '1))
   (g$set-rib-label*!$7215$1Bug2v
     g$set-rib-label*!$10867$1Bug2v
     (record-mutator g$8326$7204$1Bug2v '2))
   (g$set-rib-sealed/freq!$7216$1Bug2v
     g$set-rib-sealed/freq!$10868$1Bug2v
     (record-mutator g$8326$7204$1Bug2v '3))
   (g$make-empty-rib$7217$1Bug2v
     g$make-empty-rib$10869$1Bug2v
     (case-lambda (() (g$make-rib$7208$1Bug2v '() '() '() '#f))))
   (g$extend-rib!$7218$1Bug2v
     g$extend-rib!$10870$1Bug2v
     (case-lambda
       ((g$rib$7682$1Bug2v g$id$7683$1Bug2v g$label$7684$1Bug2v)
        (letrec* ((g$find$7685$1Bug2v
                    (case-lambda
                      ((g$sym$7691$1Bug2v
                         g$mark*$7692$1Bug2v
                         g$sym*$7693$1Bug2v
                         g$mark**$7694$1Bug2v
                         g$label*$7695$1Bug2v)
                       (if (pair? g$sym*$7693$1Bug2v)
                         (begin
                           '#f
                           (if (if (eq? g$sym$7691$1Bug2v
                                        (car g$sym*$7693$1Bug2v))
                                 (begin
                                   '#f
                                   (g$same-marks?$7256$1Bug2v
                                     g$mark*$7692$1Bug2v
                                     (car g$mark**$7694$1Bug2v)))
                                 '#f)
                             g$label*$7695$1Bug2v
                             (g$find$7685$1Bug2v
                               g$sym$7691$1Bug2v
                               g$mark*$7692$1Bug2v
                               (cdr g$sym*$7693$1Bug2v)
                               (cdr g$mark**$7694$1Bug2v)
                               (cdr g$label*$7695$1Bug2v))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$7212$1Bug2v g$rib$7682$1Bug2v)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$7682$1Bug2v)
              (void))
            ((case-lambda
               ((g$sym$7686$1Bug2v g$mark*$7687$1Bug2v)
                ((case-lambda
                   ((g$sym*$7688$1Bug2v)
                    ((case-lambda
                       ((g$t$7689$1Bug2v)
                        (if g$t$7689$1Bug2v
                          ((case-lambda
                             ((g$p$7690$1Bug2v)
                              (if (not (eq? g$label$7684$1Bug2v
                                            (car g$p$7690$1Bug2v)))
                                (if (g$top-level-context$7650$1Bug2v)
                                  (set-car! g$p$7690$1Bug2v g$label$7684$1Bug2v)
                                  (g$syntax-violation$7643$1Bug2v
                                    '#f
                                    '"cannot redefine"
                                    g$id$7683$1Bug2v))
                                (void))))
                           g$t$7689$1Bug2v)
                          (begin
                            (g$set-rib-sym*!$7213$1Bug2v
                              g$rib$7682$1Bug2v
                              (cons g$sym$7686$1Bug2v g$sym*$7688$1Bug2v))
                            (g$set-rib-mark**!$7214$1Bug2v
                              g$rib$7682$1Bug2v
                              (cons
                                g$mark*$7687$1Bug2v
                                (g$rib-mark**$7210$1Bug2v g$rib$7682$1Bug2v)))
                            (g$set-rib-label*!$7215$1Bug2v
                              g$rib$7682$1Bug2v
                              (cons
                                g$label$7684$1Bug2v
                                (g$rib-label*$7211$1Bug2v
                                  g$rib$7682$1Bug2v)))))))
                     (if (g$memq$4954$1Bug2v
                           g$sym$7686$1Bug2v
                           (g$rib-sym*$7209$1Bug2v g$rib$7682$1Bug2v))
                       (begin
                         '#f
                         (g$find$7685$1Bug2v
                           g$sym$7686$1Bug2v
                           g$mark*$7687$1Bug2v
                           g$sym*$7688$1Bug2v
                           (g$rib-mark**$7210$1Bug2v g$rib$7682$1Bug2v)
                           (g$rib-label*$7211$1Bug2v g$rib$7682$1Bug2v)))
                       '#f))))
                 (g$rib-sym*$7209$1Bug2v g$rib$7682$1Bug2v))))
             (g$id->sym$7255$1Bug2v g$id$7683$1Bug2v)
             (g$stx-mark*$7229$1Bug2v g$id$7683$1Bug2v)))))))
   (g$make-rib-map$7219$1Bug2v
     g$make-rib-map$10871$1Bug2v
     (case-lambda
       ((g$sym*$7696$1Bug2v)
        ((case-lambda
           ((g$ht$7697$1Bug2v)
            ((letrec ((g$f$7698$1Bug2v
                        (case-lambda
                          ((g$i$7699$1Bug2v g$sym*$7700$1Bug2v)
                           (if (null? g$sym*$7700$1Bug2v)
                             g$ht$7697$1Bug2v
                             (begin
                               (g$hashtable-update!$5405$1Bug2v
                                 g$ht$7697$1Bug2v
                                 (car g$sym*$7700$1Bug2v)
                                 (case-lambda
                                   ((g$x$7701$1Bug2v)
                                    (cons g$i$7699$1Bug2v g$x$7701$1Bug2v)))
                                 '())
                               (g$f$7698$1Bug2v
                                 (+ g$i$7699$1Bug2v '1)
                                 (cdr g$sym*$7700$1Bug2v))))))))
               g$f$7698$1Bug2v)
             '0
             g$sym*$7696$1Bug2v)))
         (g$make-eq-hashtable$5398$1Bug2v)))))
   (g$seal-rib!$7220$1Bug2v
     g$seal-rib!$10872$1Bug2v
     (case-lambda
       ((g$rib$7702$1Bug2v)
        ((case-lambda
           ((g$sym*$7703$1Bug2v)
            (if (not (null? g$sym*$7703$1Bug2v))
              (begin
                (g$set-rib-sym*!$7213$1Bug2v
                  g$rib$7702$1Bug2v
                  (list->vector g$sym*$7703$1Bug2v))
                (g$set-rib-mark**!$7214$1Bug2v
                  g$rib$7702$1Bug2v
                  (list->vector (g$rib-mark**$7210$1Bug2v g$rib$7702$1Bug2v)))
                (g$set-rib-label*!$7215$1Bug2v
                  g$rib$7702$1Bug2v
                  (list->vector (g$rib-label*$7211$1Bug2v g$rib$7702$1Bug2v)))
                (g$set-rib-sealed/freq!$7216$1Bug2v
                  g$rib$7702$1Bug2v
                  (g$make-rib-map$7219$1Bug2v g$sym*$7703$1Bug2v)))
              (void))))
         (g$rib-sym*$7209$1Bug2v g$rib$7702$1Bug2v)))))
   (g$unseal-rib!$7221$1Bug2v
     g$unseal-rib!$10873$1Bug2v
     (case-lambda
       ((g$rib$7704$1Bug2v)
        (if (g$rib-sealed/freq$7212$1Bug2v g$rib$7704$1Bug2v)
          (begin
            (g$set-rib-sealed/freq!$7216$1Bug2v g$rib$7704$1Bug2v '#f)
            (g$set-rib-sym*!$7213$1Bug2v
              g$rib$7704$1Bug2v
              (vector->list (g$rib-sym*$7209$1Bug2v g$rib$7704$1Bug2v)))
            (g$set-rib-mark**!$7214$1Bug2v
              g$rib$7704$1Bug2v
              (vector->list (g$rib-mark**$7210$1Bug2v g$rib$7704$1Bug2v)))
            (g$set-rib-label*!$7215$1Bug2v
              g$rib$7704$1Bug2v
              (vector->list (g$rib-label*$7211$1Bug2v g$rib$7704$1Bug2v))))
          (void)))))
   (g$make-full-rib$7222$1Bug2v
     g$make-full-rib$10874$1Bug2v
     (case-lambda
       ((g$id*$7705$1Bug2v g$label*$7706$1Bug2v)
        ((case-lambda
           ((g$r$7707$1Bug2v)
            (begin (g$seal-rib!$7220$1Bug2v g$r$7707$1Bug2v) g$r$7707$1Bug2v)))
         (g$make-rib$7208$1Bug2v
           (map g$id->sym$7255$1Bug2v g$id*$7705$1Bug2v)
           (map g$stx-mark*$7229$1Bug2v g$id*$7705$1Bug2v)
           g$label*$7706$1Bug2v
           '#f)))))
   (g$8352$7223$1Bug2v
     g$8352$10875$1Bug2v
     (make-record-type-descriptor
       'stx
       '#f
       'g$8355$1Bug2v
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$8354$7224$1Bug2v g$8354$10876$1Bug2v '#f)
   (g$8353$7225$1Bug2v
     g$8353$10877$1Bug2v
     (make-record-constructor-descriptor
       g$8352$7223$1Bug2v
       '#f
       g$8354$7224$1Bug2v))
   (g$stx?$7226$1Bug2v
     g$stx?$10878$1Bug2v
     (record-predicate g$8352$7223$1Bug2v))
   (g$make-stx$7227$1Bug2v
     g$make-stx$10879$1Bug2v
     (record-constructor g$8353$7225$1Bug2v))
   (g$stx-expr$7228$1Bug2v
     g$stx-expr$10880$1Bug2v
     (record-accessor g$8352$7223$1Bug2v '0))
   (g$stx-mark*$7229$1Bug2v
     g$stx-mark*$10881$1Bug2v
     (record-accessor g$8352$7223$1Bug2v '1))
   (g$stx-subst*$7230$1Bug2v
     g$stx-subst*$10882$1Bug2v
     (record-accessor g$8352$7223$1Bug2v '2))
   (g$stx-ae*$7231$1Bug2v
     g$stx-ae*$10883$1Bug2v
     (record-accessor g$8352$7223$1Bug2v '3))
   (g$set-stx-expr!$7232$1Bug2v
     g$set-stx-expr!$10884$1Bug2v
     (record-mutator g$8352$7223$1Bug2v '0))
   (g$set-stx-mark*!$7233$1Bug2v
     g$set-stx-mark*!$10885$1Bug2v
     (record-mutator g$8352$7223$1Bug2v '1))
   (g$set-stx-subst*!$7234$1Bug2v
     g$set-stx-subst*!$10886$1Bug2v
     (record-mutator g$8352$7223$1Bug2v '2))
   (g$set-stx-ae*!$7235$1Bug2v
     g$set-stx-ae*!$10887$1Bug2v
     (record-mutator g$8352$7223$1Bug2v '3))
   (g$rp$7236$1Bug2v
     g$rp$10888$1Bug2v
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$7708$1Bug2v g$p$7709$1Bug2v)
          (begin
            (display '"#<syntax " g$p$7709$1Bug2v)
            (write (g$stx->datum$7265$1Bug2v g$x$7708$1Bug2v) g$p$7709$1Bug2v)
            ((case-lambda
               ((g$expr$7710$1Bug2v)
                (if (annotation? g$expr$7710$1Bug2v)
                  ((case-lambda
                     ((g$src$7711$1Bug2v)
                      (if (pair? g$src$7711$1Bug2v)
                        (begin
                          (display '" [" g$p$7709$1Bug2v)
                          (display (cdr g$src$7711$1Bug2v) g$p$7709$1Bug2v)
                          (display '" of " g$p$7709$1Bug2v)
                          (display (car g$src$7711$1Bug2v) g$p$7709$1Bug2v)
                          (display '"]" g$p$7709$1Bug2v))
                        (void))))
                   (annotation-source g$expr$7710$1Bug2v))
                  (void))))
             (g$stx-expr$7228$1Bug2v g$x$7708$1Bug2v))
            (display '">" g$p$7709$1Bug2v))))))
   (g$datum->stx$7237$1Bug2v
     g$datum->stx$10889$1Bug2v
     (case-lambda
       ((g$id$7712$1Bug2v g$datum$7713$1Bug2v)
        (g$make-stx$7227$1Bug2v
          g$datum$7713$1Bug2v
          (g$stx-mark*$7229$1Bug2v g$id$7712$1Bug2v)
          (g$stx-subst*$7230$1Bug2v g$id$7712$1Bug2v)
          (g$stx-ae*$7231$1Bug2v g$id$7712$1Bug2v)))))
   (g$gen-mark$7238$1Bug2v
     g$gen-mark$10890$1Bug2v
     (case-lambda (() (string '#\m))))
   (g$anti-mark$7239$1Bug2v g$anti-mark$10891$1Bug2v '#f)
   (g$anti-mark?$7240$1Bug2v g$anti-mark?$10892$1Bug2v not)
   (g$join-wraps$7241$1Bug2v
     g$join-wraps$10893$1Bug2v
     (case-lambda
       ((g$m1*$7714$1Bug2v
          g$s1*$7715$1Bug2v
          g$ae1*$7716$1Bug2v
          g$e$7717$1Bug2v)
        (letrec* ((g$cancel$7718$1Bug2v
                    (case-lambda
                      ((g$ls1$7722$1Bug2v g$ls2$7723$1Bug2v)
                       ((letrec ((g$f$7724$1Bug2v
                                   (case-lambda
                                     ((g$x$7725$1Bug2v g$ls1$7726$1Bug2v)
                                      (if (null? g$ls1$7726$1Bug2v)
                                        (cdr g$ls2$7723$1Bug2v)
                                        (cons
                                          g$x$7725$1Bug2v
                                          (g$f$7724$1Bug2v
                                            (car g$ls1$7726$1Bug2v)
                                            (cdr g$ls1$7726$1Bug2v))))))))
                          g$f$7724$1Bug2v)
                        (car g$ls1$7722$1Bug2v)
                        (cdr g$ls1$7722$1Bug2v))))))
          ((case-lambda
             ((g$m2*$7719$1Bug2v g$s2*$7720$1Bug2v g$ae2*$7721$1Bug2v)
              (if (if (not (null? g$m1*$7714$1Bug2v))
                    (if (not (null? g$m2*$7719$1Bug2v))
                      (begin
                        '#f
                        (g$anti-mark?$7240$1Bug2v (car g$m2*$7719$1Bug2v)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$7718$1Bug2v g$m1*$7714$1Bug2v g$m2*$7719$1Bug2v)
                  (g$cancel$7718$1Bug2v g$s1*$7715$1Bug2v g$s2*$7720$1Bug2v)
                  (g$cancel$7718$1Bug2v g$ae1*$7716$1Bug2v g$ae2*$7721$1Bug2v))
                (values
                  (append g$m1*$7714$1Bug2v g$m2*$7719$1Bug2v)
                  (append g$s1*$7715$1Bug2v g$s2*$7720$1Bug2v)
                  (append g$ae1*$7716$1Bug2v g$ae2*$7721$1Bug2v)))))
           (g$stx-mark*$7229$1Bug2v g$e$7717$1Bug2v)
           (g$stx-subst*$7230$1Bug2v g$e$7717$1Bug2v)
           (g$stx-ae*$7231$1Bug2v g$e$7717$1Bug2v))))))
   (g$mkstx$7242$1Bug2v
     g$mkstx$10894$1Bug2v
     (case-lambda
       ((g$e$7727$1Bug2v g$m*$7728$1Bug2v g$s*$7729$1Bug2v g$ae*$7730$1Bug2v)
        (if (if (g$stx?$7226$1Bug2v g$e$7727$1Bug2v)
              (begin '#f (not (g$top-marked?$7197$1Bug2v g$m*$7728$1Bug2v)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$7241$1Bug2v
                 g$m*$7728$1Bug2v
                 g$s*$7729$1Bug2v
                 g$ae*$7730$1Bug2v
                 g$e$7727$1Bug2v)))
            (case-lambda
              ((g$m*$7734$1Bug2v g$s*$7735$1Bug2v g$ae*$7736$1Bug2v)
               ((case-lambda
                  ((g$ae*$7737$1Bug2v g$s*$7738$1Bug2v g$m*$7739$1Bug2v)
                   (g$make-stx$7227$1Bug2v
                     (g$stx-expr$7228$1Bug2v g$e$7727$1Bug2v)
                     g$m*$7739$1Bug2v
                     g$s*$7738$1Bug2v
                     g$ae*$7737$1Bug2v)))
                g$ae*$7736$1Bug2v
                g$s*$7735$1Bug2v
                g$m*$7734$1Bug2v))))
          (g$make-stx$7227$1Bug2v
            g$e$7727$1Bug2v
            g$m*$7728$1Bug2v
            g$s*$7729$1Bug2v
            g$ae*$7730$1Bug2v)))))
   (g$add-mark$7243$1Bug2v
     g$add-mark$10895$1Bug2v
     (case-lambda
       ((g$m$7740$1Bug2v g$e$7741$1Bug2v g$ae$7742$1Bug2v)
        (g$mkstx$7242$1Bug2v
          g$e$7741$1Bug2v
          (list g$m$7740$1Bug2v)
          '(shift)
          (list g$ae$7742$1Bug2v)))))
   (g$add-subst$7244$1Bug2v
     g$add-subst$10896$1Bug2v
     (case-lambda
       ((g$subst$7743$1Bug2v g$e$7744$1Bug2v)
        (g$mkstx$7242$1Bug2v
          g$e$7744$1Bug2v
          '()
          (list g$subst$7743$1Bug2v)
          '()))))
   (g$syntax-kind?$7245$1Bug2v
     g$syntax-kind?$10897$1Bug2v
     (case-lambda
       ((g$x$7745$1Bug2v g$p?$7746$1Bug2v)
        (if (g$stx?$7226$1Bug2v g$x$7745$1Bug2v)
          (g$syntax-kind?$7245$1Bug2v
            (g$stx-expr$7228$1Bug2v g$x$7745$1Bug2v)
            g$p?$7746$1Bug2v)
          (if (annotation? g$x$7745$1Bug2v)
            (g$syntax-kind?$7245$1Bug2v
              (annotation-expression g$x$7745$1Bug2v)
              g$p?$7746$1Bug2v)
            (g$p?$7746$1Bug2v g$x$7745$1Bug2v))))))
   (g$syntax-vector->list$7246$1Bug2v
     g$syntax-vector->list$10898$1Bug2v
     (case-lambda
       ((g$x$7747$1Bug2v)
        (if (g$stx?$7226$1Bug2v g$x$7747$1Bug2v)
          ((case-lambda
             ((g$ls$7748$1Bug2v
                g$m*$7749$1Bug2v
                g$s*$7750$1Bug2v
                g$ae*$7751$1Bug2v)
              (map (case-lambda
                     ((g$x$7752$1Bug2v)
                      (g$mkstx$7242$1Bug2v
                        g$x$7752$1Bug2v
                        g$m*$7749$1Bug2v
                        g$s*$7750$1Bug2v
                        g$ae*$7751$1Bug2v)))
                   g$ls$7748$1Bug2v)))
           (g$syntax-vector->list$7246$1Bug2v
             (g$stx-expr$7228$1Bug2v g$x$7747$1Bug2v))
           (g$stx-mark*$7229$1Bug2v g$x$7747$1Bug2v)
           (g$stx-subst*$7230$1Bug2v g$x$7747$1Bug2v)
           (g$stx-ae*$7231$1Bug2v g$x$7747$1Bug2v))
          (if (annotation? g$x$7747$1Bug2v)
            (g$syntax-vector->list$7246$1Bug2v
              (annotation-expression g$x$7747$1Bug2v))
            (if (vector? g$x$7747$1Bug2v)
              (vector->list g$x$7747$1Bug2v)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$7747$1Bug2v)))))))
   (g$syntax-pair?$7247$1Bug2v
     g$syntax-pair?$10899$1Bug2v
     (case-lambda
       ((g$x$7753$1Bug2v) (g$syntax-kind?$7245$1Bug2v g$x$7753$1Bug2v pair?))))
   (g$syntax-vector?$7248$1Bug2v
     g$syntax-vector?$10900$1Bug2v
     (case-lambda
       ((g$x$7754$1Bug2v)
        (g$syntax-kind?$7245$1Bug2v g$x$7754$1Bug2v vector?))))
   (g$syntax-null?$7249$1Bug2v
     g$syntax-null?$10901$1Bug2v
     (case-lambda
       ((g$x$7755$1Bug2v) (g$syntax-kind?$7245$1Bug2v g$x$7755$1Bug2v null?))))
   (g$syntax-list?$7250$1Bug2v
     g$syntax-list?$10902$1Bug2v
     (case-lambda
       ((g$x$7756$1Bug2v)
        ((case-lambda
           ((g$t$7757$1Bug2v)
            (if g$t$7757$1Bug2v
              g$t$7757$1Bug2v
              (begin
                '#f
                (if (g$syntax-pair?$7247$1Bug2v g$x$7756$1Bug2v)
                  (begin
                    '#f
                    (g$syntax-list?$7250$1Bug2v
                      (g$syntax-cdr$7252$1Bug2v g$x$7756$1Bug2v)))
                  '#f)))))
         (g$syntax-null?$7249$1Bug2v g$x$7756$1Bug2v)))))
   (g$syntax-car$7251$1Bug2v
     g$syntax-car$10903$1Bug2v
     (case-lambda
       ((g$x$7758$1Bug2v)
        (if (g$stx?$7226$1Bug2v g$x$7758$1Bug2v)
          (g$mkstx$7242$1Bug2v
            (g$syntax-car$7251$1Bug2v (g$stx-expr$7228$1Bug2v g$x$7758$1Bug2v))
            (g$stx-mark*$7229$1Bug2v g$x$7758$1Bug2v)
            (g$stx-subst*$7230$1Bug2v g$x$7758$1Bug2v)
            (g$stx-ae*$7231$1Bug2v g$x$7758$1Bug2v))
          (if (annotation? g$x$7758$1Bug2v)
            (g$syntax-car$7251$1Bug2v (annotation-expression g$x$7758$1Bug2v))
            (if (pair? g$x$7758$1Bug2v)
              (car g$x$7758$1Bug2v)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$7758$1Bug2v)))))))
   (g$syntax-cdr$7252$1Bug2v
     g$syntax-cdr$10904$1Bug2v
     (case-lambda
       ((g$x$7759$1Bug2v)
        (if (g$stx?$7226$1Bug2v g$x$7759$1Bug2v)
          (g$mkstx$7242$1Bug2v
            (g$syntax-cdr$7252$1Bug2v (g$stx-expr$7228$1Bug2v g$x$7759$1Bug2v))
            (g$stx-mark*$7229$1Bug2v g$x$7759$1Bug2v)
            (g$stx-subst*$7230$1Bug2v g$x$7759$1Bug2v)
            (g$stx-ae*$7231$1Bug2v g$x$7759$1Bug2v))
          (if (annotation? g$x$7759$1Bug2v)
            (g$syntax-cdr$7252$1Bug2v (annotation-expression g$x$7759$1Bug2v))
            (if (pair? g$x$7759$1Bug2v)
              (cdr g$x$7759$1Bug2v)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$7759$1Bug2v)))))))
   (g$syntax->list$7253$1Bug2v
     g$syntax->list$10905$1Bug2v
     (case-lambda
       ((g$x$7760$1Bug2v)
        (if (g$syntax-pair?$7247$1Bug2v g$x$7760$1Bug2v)
          (cons
            (g$syntax-car$7251$1Bug2v g$x$7760$1Bug2v)
            (g$syntax->list$7253$1Bug2v
              (g$syntax-cdr$7252$1Bug2v g$x$7760$1Bug2v)))
          (if (g$syntax-null?$7249$1Bug2v g$x$7760$1Bug2v)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$7760$1Bug2v))))))
   (g$id?$7254$1Bug2v
     g$id?$10906$1Bug2v
     (case-lambda
       ((g$x$7761$1Bug2v)
        (if (g$stx?$7226$1Bug2v g$x$7761$1Bug2v)
          (begin
            '#f
            ((case-lambda
               ((g$expr$7762$1Bug2v)
                (symbol?
                  (if (annotation? g$expr$7762$1Bug2v)
                    (annotation-stripped g$expr$7762$1Bug2v)
                    g$expr$7762$1Bug2v))))
             (g$stx-expr$7228$1Bug2v g$x$7761$1Bug2v)))
          '#f))))
   (g$id->sym$7255$1Bug2v
     g$id->sym$10907$1Bug2v
     (case-lambda
       ((g$x$7763$1Bug2v)
        (begin
          (if (not (g$stx?$7226$1Bug2v g$x$7763$1Bug2v))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$7763$1Bug2v)
            (void))
          ((case-lambda
             ((g$expr$7764$1Bug2v)
              ((case-lambda
                 ((g$sym$7765$1Bug2v)
                  (if (symbol? g$sym$7765$1Bug2v)
                    g$sym$7765$1Bug2v
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$7763$1Bug2v))))
               (if (annotation? g$expr$7764$1Bug2v)
                 (annotation-stripped g$expr$7764$1Bug2v)
                 g$expr$7764$1Bug2v))))
           (g$stx-expr$7228$1Bug2v g$x$7763$1Bug2v))))))
   (g$same-marks?$7256$1Bug2v
     g$same-marks?$10908$1Bug2v
     (case-lambda
       ((g$x$7766$1Bug2v g$y$7767$1Bug2v)
        ((case-lambda
           ((g$t$7768$1Bug2v)
            (if g$t$7768$1Bug2v
              g$t$7768$1Bug2v
              (begin
                '#f
                (if (pair? g$x$7766$1Bug2v)
                  (if (pair? g$y$7767$1Bug2v)
                    (if (eq? (car g$x$7766$1Bug2v) (car g$y$7767$1Bug2v))
                      (begin
                        '#f
                        (g$same-marks?$7256$1Bug2v
                          (cdr g$x$7766$1Bug2v)
                          (cdr g$y$7767$1Bug2v)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$7766$1Bug2v)
           (begin '#f (null? g$y$7767$1Bug2v))
           '#f)))))
   (g$bound-id=?$7257$1Bug2v
     g$bound-id=?$10909$1Bug2v
     (case-lambda
       ((g$x$7769$1Bug2v g$y$7770$1Bug2v)
        (if (eq? (g$id->sym$7255$1Bug2v g$x$7769$1Bug2v)
                 (g$id->sym$7255$1Bug2v g$y$7770$1Bug2v))
          (begin
            '#f
            (g$same-marks?$7256$1Bug2v
              (g$stx-mark*$7229$1Bug2v g$x$7769$1Bug2v)
              (g$stx-mark*$7229$1Bug2v g$y$7770$1Bug2v)))
          '#f))))
   (g$free-id=?$7258$1Bug2v
     g$free-id=?$10910$1Bug2v
     (case-lambda
       ((g$i$7771$1Bug2v g$j$7772$1Bug2v)
        ((case-lambda
           ((g$t0$7773$1Bug2v g$t1$7774$1Bug2v)
            (if ((case-lambda
                   ((g$t$7775$1Bug2v)
                    (if g$t$7775$1Bug2v
                      g$t$7775$1Bug2v
                      (begin '#f g$t1$7774$1Bug2v))))
                 g$t0$7773$1Bug2v)
              (eq? g$t0$7773$1Bug2v g$t1$7774$1Bug2v)
              (eq? (g$id->sym$7255$1Bug2v g$i$7771$1Bug2v)
                   (g$id->sym$7255$1Bug2v g$j$7772$1Bug2v)))))
         (g$id->real-label$7268$1Bug2v g$i$7771$1Bug2v)
         (g$id->real-label$7268$1Bug2v g$j$7772$1Bug2v)))))
   (g$valid-bound-ids?$7259$1Bug2v
     g$valid-bound-ids?$10911$1Bug2v
     (case-lambda
       ((g$id*$7776$1Bug2v)
        (if (g$for-all$4960$1Bug2v g$id?$7254$1Bug2v g$id*$7776$1Bug2v)
          (begin '#f (g$distinct-bound-ids?$7260$1Bug2v g$id*$7776$1Bug2v))
          '#f))))
   (g$distinct-bound-ids?$7260$1Bug2v
     g$distinct-bound-ids?$10912$1Bug2v
     (case-lambda
       ((g$id*$7777$1Bug2v)
        ((case-lambda
           ((g$t$7778$1Bug2v)
            (if g$t$7778$1Bug2v
              g$t$7778$1Bug2v
              (begin
                '#f
                (if (not (g$bound-id-member?$7261$1Bug2v
                           (car g$id*$7777$1Bug2v)
                           (cdr g$id*$7777$1Bug2v)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$7260$1Bug2v (cdr g$id*$7777$1Bug2v)))
                  '#f)))))
         (null? g$id*$7777$1Bug2v)))))
   (g$bound-id-member?$7261$1Bug2v
     g$bound-id-member?$10913$1Bug2v
     (case-lambda
       ((g$id$7779$1Bug2v g$id*$7780$1Bug2v)
        (if (pair? g$id*$7780$1Bug2v)
          (begin
            '#f
            ((case-lambda
               ((g$t$7781$1Bug2v)
                (if g$t$7781$1Bug2v
                  g$t$7781$1Bug2v
                  (begin
                    '#f
                    (g$bound-id-member?$7261$1Bug2v
                      g$id$7779$1Bug2v
                      (cdr g$id*$7780$1Bug2v))))))
             (g$bound-id=?$7257$1Bug2v
               g$id$7779$1Bug2v
               (car g$id*$7780$1Bug2v))))
          '#f))))
   (g$self-evaluating?$7262$1Bug2v
     g$self-evaluating?$10914$1Bug2v
     (case-lambda
       ((g$x$7782$1Bug2v)
        ((case-lambda
           ((g$t$7783$1Bug2v)
            (if g$t$7783$1Bug2v
              g$t$7783$1Bug2v
              ((case-lambda
                 ((g$t$7784$1Bug2v)
                  (if g$t$7784$1Bug2v
                    g$t$7784$1Bug2v
                    ((case-lambda
                       ((g$t$7785$1Bug2v)
                        (if g$t$7785$1Bug2v
                          g$t$7785$1Bug2v
                          ((case-lambda
                             ((g$t$7786$1Bug2v)
                              (if g$t$7786$1Bug2v
                                g$t$7786$1Bug2v
                                (begin '#f (bytevector? g$x$7782$1Bug2v)))))
                           (boolean? g$x$7782$1Bug2v)))))
                     (char? g$x$7782$1Bug2v)))))
               (string? g$x$7782$1Bug2v)))))
         (number? g$x$7782$1Bug2v)))))
   (g$strip-annotations$7263$1Bug2v
     g$strip-annotations$10915$1Bug2v
     (case-lambda
       ((g$x$7787$1Bug2v)
        (if (pair? g$x$7787$1Bug2v)
          (cons
            (g$strip-annotations$7263$1Bug2v (car g$x$7787$1Bug2v))
            (g$strip-annotations$7263$1Bug2v (cdr g$x$7787$1Bug2v)))
          (if (vector? g$x$7787$1Bug2v)
            (vector-map g$strip-annotations$7263$1Bug2v g$x$7787$1Bug2v)
            (if (annotation? g$x$7787$1Bug2v)
              (annotation-stripped g$x$7787$1Bug2v)
              g$x$7787$1Bug2v))))))
   (g$strip$7264$1Bug2v
     g$strip$10916$1Bug2v
     (case-lambda
       ((g$x$7788$1Bug2v g$m*$7789$1Bug2v)
        (if (g$top-marked?$7197$1Bug2v g$m*$7789$1Bug2v)
          (if ((case-lambda
                 ((g$t$7790$1Bug2v)
                  (if g$t$7790$1Bug2v
                    g$t$7790$1Bug2v
                    ((case-lambda
                       ((g$t$7791$1Bug2v)
                        (if g$t$7791$1Bug2v
                          g$t$7791$1Bug2v
                          (begin
                            '#f
                            (if (vector? g$x$7788$1Bug2v)
                              (if (> (vector-length g$x$7788$1Bug2v) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$7788$1Bug2v '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$7788$1Bug2v)
                       (begin '#f (annotation? (car g$x$7788$1Bug2v)))
                       '#f)))))
               (annotation? g$x$7788$1Bug2v))
            (g$strip-annotations$7263$1Bug2v g$x$7788$1Bug2v)
            g$x$7788$1Bug2v)
          ((letrec ((g$f$7792$1Bug2v
                      (case-lambda
                        ((g$x$7793$1Bug2v)
                         (if (g$stx?$7226$1Bug2v g$x$7793$1Bug2v)
                           (g$strip$7264$1Bug2v
                             (g$stx-expr$7228$1Bug2v g$x$7793$1Bug2v)
                             (g$stx-mark*$7229$1Bug2v g$x$7793$1Bug2v))
                           (if (annotation? g$x$7793$1Bug2v)
                             (annotation-stripped g$x$7793$1Bug2v)
                             (if (pair? g$x$7793$1Bug2v)
                               ((case-lambda
                                  ((g$a$7794$1Bug2v g$d$7795$1Bug2v)
                                   (if (if (eq? g$a$7794$1Bug2v
                                                (car g$x$7793$1Bug2v))
                                         (begin
                                           '#f
                                           (eq? g$d$7795$1Bug2v
                                                (cdr g$x$7793$1Bug2v)))
                                         '#f)
                                     g$x$7793$1Bug2v
                                     (cons g$a$7794$1Bug2v g$d$7795$1Bug2v))))
                                (g$f$7792$1Bug2v (car g$x$7793$1Bug2v))
                                (g$f$7792$1Bug2v (cdr g$x$7793$1Bug2v)))
                               (if (vector? g$x$7793$1Bug2v)
                                 ((case-lambda
                                    ((g$old$7796$1Bug2v)
                                     ((case-lambda
                                        ((g$new$7797$1Bug2v)
                                         (if (g$for-all$4960$1Bug2v
                                               eq?
                                               g$old$7796$1Bug2v
                                               g$new$7797$1Bug2v)
                                           g$x$7793$1Bug2v
                                           (list->vector g$new$7797$1Bug2v))))
                                      (map g$f$7792$1Bug2v g$old$7796$1Bug2v))))
                                  (vector->list g$x$7793$1Bug2v))
                                 g$x$7793$1Bug2v))))))))
             g$f$7792$1Bug2v)
           g$x$7788$1Bug2v)))))
   (g$stx->datum$7265$1Bug2v
     g$stx->datum$10917$1Bug2v
     (case-lambda
       ((g$x$7798$1Bug2v) (g$strip$7264$1Bug2v g$x$7798$1Bug2v '()))))
   (g$same-marks*?$7266$1Bug2v
     g$same-marks*?$10918$1Bug2v
     (case-lambda
       ((g$mark*$7799$1Bug2v g$mark**$7800$1Bug2v g$si$7801$1Bug2v)
        (if (null? g$si$7801$1Bug2v)
          '#f
          (if (g$same-marks?$7256$1Bug2v
                g$mark*$7799$1Bug2v
                (vector-ref g$mark**$7800$1Bug2v (car g$si$7801$1Bug2v)))
            (car g$si$7801$1Bug2v)
            (g$same-marks*?$7266$1Bug2v
              g$mark*$7799$1Bug2v
              g$mark**$7800$1Bug2v
              (cdr g$si$7801$1Bug2v)))))))
   (g$id->label$7267$1Bug2v
     g$id->label$10919$1Bug2v
     (case-lambda
       ((g$id$7802$1Bug2v)
        ((case-lambda
           ((g$t$7803$1Bug2v)
            (if g$t$7803$1Bug2v
              g$t$7803$1Bug2v
              (begin
                '#f
                ((case-lambda
                   ((g$t$7804$1Bug2v)
                    (if g$t$7804$1Bug2v
                      ((case-lambda
                         ((g$env$7805$1Bug2v)
                          ((case-lambda
                             ((g$rib$7806$1Bug2v)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$7202$1Bug2v
                                     g$id$7802$1Bug2v
                                     g$rib$7806$1Bug2v)))
                                (case-lambda
                                  ((g$lab$7809$1Bug2v g$loc_$7810$1Bug2v)
                                   ((case-lambda
                                      ((g$loc_$7811$1Bug2v g$lab$7812$1Bug2v)
                                       (begin
                                         (g$extend-rib!$7218$1Bug2v
                                           g$rib$7806$1Bug2v
                                           g$id$7802$1Bug2v
                                           g$lab$7812$1Bug2v)
                                         g$lab$7812$1Bug2v)))
                                    g$loc_$7810$1Bug2v
                                    g$lab$7809$1Bug2v))))))
                           (g$interaction-env-rib$7610$1Bug2v
                             g$env$7805$1Bug2v))))
                       g$t$7804$1Bug2v)
                      '#f)))
                 (g$top-level-context$7650$1Bug2v))))))
         (g$id->real-label$7268$1Bug2v g$id$7802$1Bug2v)))))
   (g$id->real-label$7268$1Bug2v
     g$id->real-label$10920$1Bug2v
     (case-lambda
       ((g$id$7813$1Bug2v)
        ((case-lambda
           ((g$sym$7814$1Bug2v)
            ((letrec ((g$search$7815$1Bug2v
                        (case-lambda
                          ((g$subst*$7816$1Bug2v g$mark*$7817$1Bug2v)
                           (if (null? g$subst*$7816$1Bug2v)
                             '#f
                             (if (eq? (car g$subst*$7816$1Bug2v) 'shift)
                               (g$search$7815$1Bug2v
                                 (cdr g$subst*$7816$1Bug2v)
                                 (cdr g$mark*$7817$1Bug2v))
                               ((case-lambda
                                  ((g$rib$7818$1Bug2v)
                                   ((case-lambda
                                      ((g$t$7819$1Bug2v)
                                       (if g$t$7819$1Bug2v
                                         ((case-lambda
                                            ((g$ht$7820$1Bug2v)
                                             ((case-lambda
                                                ((g$si$7821$1Bug2v)
                                                 ((case-lambda
                                                    ((g$i$7822$1Bug2v)
                                                     (if g$i$7822$1Bug2v
                                                       (vector-ref
                                                         (g$rib-label*$7211$1Bug2v
                                                           g$rib$7818$1Bug2v)
                                                         g$i$7822$1Bug2v)
                                                       (g$search$7815$1Bug2v
                                                         (cdr g$subst*$7816$1Bug2v)
                                                         g$mark*$7817$1Bug2v))))
                                                  (if g$si$7821$1Bug2v
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$7266$1Bug2v
                                                        g$mark*$7817$1Bug2v
                                                        (g$rib-mark**$7210$1Bug2v
                                                          g$rib$7818$1Bug2v)
                                                        (reverse
                                                          g$si$7821$1Bug2v)))
                                                    '#f))))
                                              (g$hashtable-ref$5401$1Bug2v
                                                g$ht$7820$1Bug2v
                                                g$sym$7814$1Bug2v
                                                '#f))))
                                          g$t$7819$1Bug2v)
                                         ((letrec ((g$f$7823$1Bug2v
                                                     (case-lambda
                                                       ((g$sym*$7824$1Bug2v
                                                          g$mark**$7825$1Bug2v
                                                          g$label*$7826$1Bug2v)
                                                        (if (null?
                                                              g$sym*$7824$1Bug2v)
                                                          (g$search$7815$1Bug2v
                                                            (cdr g$subst*$7816$1Bug2v)
                                                            g$mark*$7817$1Bug2v)
                                                          (if (if (eq? (car g$sym*$7824$1Bug2v)
                                                                       g$sym$7814$1Bug2v)
                                                                (begin
                                                                  '#f
                                                                  (g$same-marks?$7256$1Bug2v
                                                                    (car g$mark**$7825$1Bug2v)
                                                                    g$mark*$7817$1Bug2v))
                                                                '#f)
                                                            (car g$label*$7826$1Bug2v)
                                                            (g$f$7823$1Bug2v
                                                              (cdr g$sym*$7824$1Bug2v)
                                                              (cdr g$mark**$7825$1Bug2v)
                                                              (cdr g$label*$7826$1Bug2v))))))))
                                            g$f$7823$1Bug2v)
                                          (g$rib-sym*$7209$1Bug2v
                                            g$rib$7818$1Bug2v)
                                          (g$rib-mark**$7210$1Bug2v
                                            g$rib$7818$1Bug2v)
                                          (g$rib-label*$7211$1Bug2v
                                            g$rib$7818$1Bug2v)))))
                                    (g$rib-sealed/freq$7212$1Bug2v
                                      g$rib$7818$1Bug2v))))
                                (car g$subst*$7816$1Bug2v))))))))
               g$search$7815$1Bug2v)
             (g$stx-subst*$7230$1Bug2v g$id$7813$1Bug2v)
             (g$stx-mark*$7229$1Bug2v g$id$7813$1Bug2v))))
         (g$id->sym$7255$1Bug2v g$id$7813$1Bug2v)))))
   (g$label->binding$7269$1Bug2v
     g$label->binding$10921$1Bug2v
     (case-lambda
       ((g$x$7827$1Bug2v g$r$7828$1Bug2v)
        ((case-lambda
           ((g$t$7829$1Bug2v)
            (if g$t$7829$1Bug2v
              ((case-lambda
                 ((g$b$7830$1Bug2v)
                  (if (if (pair? g$b$7830$1Bug2v)
                        (begin '#f (eq? (car g$b$7830$1Bug2v) '$core-rtd))
                        '#f)
                    (cons '$rtd (map g$bless$7495$1Bug2v (cdr g$b$7830$1Bug2v)))
                    (if (if (pair? g$b$7830$1Bug2v)
                          (begin '#f (eq? (car g$b$7830$1Bug2v) 'global-rtd))
                          '#f)
                      ((case-lambda
                         ((g$lib$7831$1Bug2v g$loc$7832$1Bug2v)
                          (cons '$rtd (symbol-value g$loc$7832$1Bug2v))))
                       (g$cadr$5124$1Bug2v g$b$7830$1Bug2v)
                       (g$cddr$5126$1Bug2v g$b$7830$1Bug2v))
                      g$b$7830$1Bug2v))))
               g$t$7829$1Bug2v)
              ((case-lambda
                 ((g$t$7833$1Bug2v)
                  (if g$t$7833$1Bug2v
                    (cdr g$t$7833$1Bug2v)
                    ((case-lambda
                       ((g$t$7834$1Bug2v)
                        (if g$t$7834$1Bug2v
                          ((case-lambda
                             ((g$env$7835$1Bug2v)
                              ((case-lambda
                                 ((g$t$7836$1Bug2v)
                                  (if g$t$7836$1Bug2v
                                    ((case-lambda
                                       ((g$p$7837$1Bug2v)
                                        (g$cons*$4962$1Bug2v
                                          'lexical
                                          (cdr g$p$7837$1Bug2v)
                                          '#f)))
                                     g$t$7836$1Bug2v)
                                    '(displaced-lexical . #f))))
                               (g$assq$4950$1Bug2v
                                 g$x$7827$1Bug2v
                                 (g$interaction-env-locs$7612$1Bug2v
                                   g$env$7835$1Bug2v)))))
                           g$t$7834$1Bug2v)
                          '(displaced-lexical . #f))))
                     (g$top-level-context$7650$1Bug2v)))))
               (g$assq$4950$1Bug2v g$x$7827$1Bug2v g$r$7828$1Bug2v)))))
         (g$imported-label->binding$7068$1Bug2v g$x$7827$1Bug2v)))))
   (g$make-binding$7270$1Bug2v g$make-binding$10922$1Bug2v cons)
   (g$binding-type$7271$1Bug2v g$binding-type$10923$1Bug2v car)
   (g$binding-value$7272$1Bug2v g$binding-value$10924$1Bug2v cdr)
   (g$raise-unbound-error$7273$1Bug2v
     g$raise-unbound-error$10925$1Bug2v
     (case-lambda
       ((g$id$7838$1Bug2v)
        (g$syntax-violation*$7642$1Bug2v
          '#f
          '"unbound identifier"
          g$id$7838$1Bug2v
          (g$make-undefined-violation$5748$1Bug2v)))))
   (g$syntax-type$7274$1Bug2v
     g$syntax-type$10926$1Bug2v
     (case-lambda
       ((g$e$7839$1Bug2v g$r$7840$1Bug2v)
        (if (g$id?$7254$1Bug2v g$e$7839$1Bug2v)
          ((case-lambda
             ((g$id$7841$1Bug2v)
              ((case-lambda
                 ((g$label$7842$1Bug2v)
                  ((case-lambda
                     ((g$b$7843$1Bug2v)
                      ((case-lambda
                         ((g$type$7844$1Bug2v)
                          ((case-lambda
                             (()
                              (begin
                                (if (not g$label$7842$1Bug2v)
                                  (g$raise-unbound-error$7273$1Bug2v
                                    g$id$7841$1Bug2v)
                                  (void))
                                ((case-lambda
                                   ((g$t$7845$1Bug2v)
                                    (if (g$memv$4955$1Bug2v
                                          g$t$7845$1Bug2v
                                          '(lexical
                                             core-prim
                                             macro
                                             macro!
                                             global
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             displaced-lexical
                                             syntax
                                             import
                                             export
                                             $module
                                             $core-rtd
                                             library
                                             mutable))
                                      (values
                                        g$type$7844$1Bug2v
                                        (g$binding-value$7272$1Bug2v
                                          g$b$7843$1Bug2v)
                                        g$id$7841$1Bug2v)
                                      (values 'other '#f '#f))))
                                 g$type$7844$1Bug2v)))))))
                       (g$binding-type$7271$1Bug2v g$b$7843$1Bug2v))))
                   (g$label->binding$7269$1Bug2v
                     g$label$7842$1Bug2v
                     g$r$7840$1Bug2v))))
               (g$id->label$7267$1Bug2v g$id$7841$1Bug2v))))
           g$e$7839$1Bug2v)
          (if (g$syntax-pair?$7247$1Bug2v g$e$7839$1Bug2v)
            ((case-lambda
               ((g$id$7846$1Bug2v)
                (if (g$id?$7254$1Bug2v g$id$7846$1Bug2v)
                  ((case-lambda
                     ((g$label$7847$1Bug2v)
                      ((case-lambda
                         ((g$b$7848$1Bug2v)
                          ((case-lambda
                             ((g$type$7849$1Bug2v)
                              ((case-lambda
                                 (()
                                  (begin
                                    (if (not g$label$7847$1Bug2v)
                                      (g$raise-unbound-error$7273$1Bug2v
                                        g$id$7846$1Bug2v)
                                      (void))
                                    ((case-lambda
                                       ((g$t$7850$1Bug2v)
                                        (if (g$memv$4955$1Bug2v
                                              g$t$7850$1Bug2v
                                              '(define define-syntax
                                                 core-macro
                                                 begin
                                                 macro
                                                 macro!
                                                 local-macro
                                                 local-macro!
                                                 global-macro
                                                 global-macro!
                                                 module
                                                 library
                                                 set!
                                                 let-syntax
                                                 letrec-syntax
                                                 import
                                                 export
                                                 $core-rtd))
                                          (values
                                            g$type$7849$1Bug2v
                                            (g$binding-value$7272$1Bug2v
                                              g$b$7848$1Bug2v)
                                            g$id$7846$1Bug2v)
                                          (values 'call '#f '#f))))
                                     g$type$7849$1Bug2v)))))))
                           (g$binding-type$7271$1Bug2v g$b$7848$1Bug2v))))
                       (g$label->binding$7269$1Bug2v
                         g$label$7847$1Bug2v
                         g$r$7840$1Bug2v))))
                   (g$id->label$7267$1Bug2v g$id$7846$1Bug2v))
                  (values 'call '#f '#f))))
             (g$syntax-car$7251$1Bug2v g$e$7839$1Bug2v))
            ((case-lambda
               ((g$d$7851$1Bug2v)
                (if (g$self-evaluating?$7262$1Bug2v g$d$7851$1Bug2v)
                  (values 'constant g$d$7851$1Bug2v '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$7265$1Bug2v g$e$7839$1Bug2v)))))))
   (g$sanitize-binding$7282$1Bug2v
     g$sanitize-binding$10927$1Bug2v
     (case-lambda
       ((g$x$7852$1Bug2v g$src$7853$1Bug2v)
        (if (procedure? g$x$7852$1Bug2v)
          (g$cons*$4962$1Bug2v 'local-macro g$x$7852$1Bug2v g$src$7853$1Bug2v)
          (if (if (pair? g$x$7852$1Bug2v)
                (if (eq? (car g$x$7852$1Bug2v) 'macro!)
                  (begin '#f (procedure? (cdr g$x$7852$1Bug2v)))
                  '#f)
                '#f)
            (g$cons*$4962$1Bug2v
              'local-macro!
              (cdr g$x$7852$1Bug2v)
              g$src$7853$1Bug2v)
            (if (if (pair? g$x$7852$1Bug2v)
                  (begin '#f (eq? (car g$x$7852$1Bug2v) '$rtd))
                  '#f)
              g$x$7852$1Bug2v
              (assertion-violation
                'expand
                '"invalid transformer"
                g$x$7852$1Bug2v)))))))
   (g$make-variable-transformer$7283$1Bug2v
     g$make-variable-transformer$10928$1Bug2v
     (case-lambda
       ((g$x$7854$1Bug2v)
        (if (procedure? g$x$7854$1Bug2v)
          (cons 'macro! g$x$7854$1Bug2v)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$7854$1Bug2v)))))
   (g$variable-transformer?$7284$1Bug2v
     g$variable-transformer?$10929$1Bug2v
     (case-lambda
       ((g$x$7855$1Bug2v)
        (if (pair? g$x$7855$1Bug2v)
          (if (eq? (car g$x$7855$1Bug2v) 'macro!)
            (begin '#f (procedure? (cdr g$x$7855$1Bug2v)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$7285$1Bug2v
     g$variable-transformer-procedure$10930$1Bug2v
     (case-lambda
       ((g$x$7856$1Bug2v)
        (if (g$variable-transformer?$7284$1Bug2v g$x$7856$1Bug2v)
          (cdr g$x$7856$1Bug2v)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$7856$1Bug2v)))))
   (g$make-eval-transformer$7286$1Bug2v
     g$make-eval-transformer$10931$1Bug2v
     (case-lambda
       ((g$x$7857$1Bug2v)
        (g$sanitize-binding$7282$1Bug2v
          (eval-core (g$expanded->core$6768$1Bug2v g$x$7857$1Bug2v))
          g$x$7857$1Bug2v))))
   (g$parse-define$7472$1Bug2v
     g$parse-define$10932$1Bug2v
     (case-lambda
       ((g$x$7858$1Bug2v)
        ((case-lambda
           ((g$t$7859$1Bug2v)
            ((case-lambda
               ((g$ls/false$7860$1Bug2v)
                (if (if g$ls/false$7860$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7861$1Bug2v
                               g$fmls$7862$1Bug2v
                               g$b$7863$1Bug2v
                               g$b*$7864$1Bug2v)
                             (g$id?$7254$1Bug2v g$id$7861$1Bug2v)))
                          g$ls/false$7860$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7865$1Bug2v
                         g$fmls$7866$1Bug2v
                         g$b$7867$1Bug2v
                         g$b*$7868$1Bug2v)
                       (begin
                         (g$verify-formals$7552$1Bug2v
                           g$fmls$7866$1Bug2v
                           g$x$7858$1Bug2v)
                         (values
                           g$id$7865$1Bug2v
                           (cons
                             'defun
                             (cons
                               g$fmls$7866$1Bug2v
                               (cons g$b$7867$1Bug2v g$b*$7868$1Bug2v)))))))
                    g$ls/false$7860$1Bug2v)
                  ((case-lambda
                     ((g$t$7869$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$7870$1Bug2v)
                          (if (if g$ls/false$7870$1Bug2v
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$7871$1Bug2v g$val$7872$1Bug2v)
                                       (g$id?$7254$1Bug2v g$id$7871$1Bug2v)))
                                    g$ls/false$7870$1Bug2v))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$7873$1Bug2v g$val$7874$1Bug2v)
                                 (values
                                   g$id$7873$1Bug2v
                                   (cons 'expr g$val$7874$1Bug2v))))
                              g$ls/false$7870$1Bug2v)
                            ((case-lambda
                               ((g$t$7875$1Bug2v)
                                ((case-lambda
                                   ((g$ls/false$7876$1Bug2v)
                                    (if (if g$ls/false$7876$1Bug2v
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$7877$1Bug2v)
                                                 (g$id?$7254$1Bug2v
                                                   g$id$7877$1Bug2v)))
                                              g$ls/false$7876$1Bug2v))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$7878$1Bug2v)
                                           (values
                                             g$id$7878$1Bug2v
                                             (cons
                                               'expr
                                               (g$bless$7495$1Bug2v '(void))))))
                                        g$ls/false$7876$1Bug2v)
                                      (g$syntax-violation$7643$1Bug2v
                                        '#f
                                        '"invalid syntax"
                                        g$t$7875$1Bug2v))))
                                 (g$syntax-dispatch$7532$1Bug2v
                                   g$t$7875$1Bug2v
                                   '(_ any)))))
                             g$t$7869$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$7869$1Bug2v
                         '(_ any any)))))
                   g$t$7859$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$7859$1Bug2v
               '(_ (any . any) any . each-any)))))
         g$x$7858$1Bug2v))))
   (g$parse-define-syntax$7473$1Bug2v
     g$parse-define-syntax$10933$1Bug2v
     (case-lambda
       ((g$x$7879$1Bug2v)
        ((case-lambda
           ((g$t$7880$1Bug2v)
            ((case-lambda
               ((g$ls/false$7881$1Bug2v)
                (if (if g$ls/false$7881$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7882$1Bug2v g$val$7883$1Bug2v)
                             (g$id?$7254$1Bug2v g$id$7882$1Bug2v)))
                          g$ls/false$7881$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7884$1Bug2v g$val$7885$1Bug2v)
                       (values g$id$7884$1Bug2v g$val$7885$1Bug2v)))
                    g$ls/false$7881$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$7880$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$7880$1Bug2v '(_ any any)))))
         g$x$7879$1Bug2v))))
   (g$scheme-stx-hashtable$7474$1Bug2v
     g$scheme-stx-hashtable$10934$1Bug2v
     (g$make-eq-hashtable$5398$1Bug2v))
   (g$scheme-stx$7475$1Bug2v
     g$scheme-stx$10935$1Bug2v
     (case-lambda
       ((g$sym$7886$1Bug2v)
        ((case-lambda
           ((g$t$7887$1Bug2v)
            (if g$t$7887$1Bug2v
              g$t$7887$1Bug2v
              (begin
                '#f
                ((case-lambda
                   ((g$subst$7888$1Bug2v)
                    ((case-lambda
                       ((g$stx$7889$1Bug2v)
                        ((case-lambda
                           ((g$stx$7890$1Bug2v)
                            ((case-lambda
                               (()
                                (begin
                                  (g$hashtable-set!$5402$1Bug2v
                                    g$scheme-stx-hashtable$7474$1Bug2v
                                    g$sym$7886$1Bug2v
                                    g$stx$7890$1Bug2v)
                                  g$stx$7890$1Bug2v))))))
                         ((case-lambda
                            ((g$t$7891$1Bug2v)
                             (if g$t$7891$1Bug2v
                               ((case-lambda
                                  ((g$x$7892$1Bug2v)
                                   ((case-lambda
                                      ((g$name$7893$1Bug2v g$label$7894$1Bug2v)
                                       (g$add-subst$7244$1Bug2v
                                         (g$make-rib$7208$1Bug2v
                                           (list g$name$7893$1Bug2v)
                                           (list g$top-mark*$7196$1Bug2v)
                                           (list g$label$7894$1Bug2v)
                                           '#f)
                                         g$stx$7889$1Bug2v)))
                                    (car g$x$7892$1Bug2v)
                                    (cdr g$x$7892$1Bug2v))))
                                g$t$7891$1Bug2v)
                               g$stx$7889$1Bug2v)))
                          (g$assq$4950$1Bug2v
                            g$sym$7886$1Bug2v
                            g$subst$7888$1Bug2v)))))
                     (g$make-stx$7227$1Bug2v
                       g$sym$7886$1Bug2v
                       g$top-mark*$7196$1Bug2v
                       '()
                       '()))))
                 (g$library-subst$7026$1Bug2v
                   (g$find-library-by-name$7062$1Bug2v
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5401$1Bug2v
           g$scheme-stx-hashtable$7474$1Bug2v
           g$sym$7886$1Bug2v
           '#f)))))
   (g$lexical-var$7476$1Bug2v g$lexical-var$10936$1Bug2v car)
   (g$lexical-mutable?$7477$1Bug2v g$lexical-mutable?$10937$1Bug2v cdr)
   (g$set-lexical-mutable!$7478$1Bug2v
     g$set-lexical-mutable!$10938$1Bug2v
     set-cdr!)
   (g$add-lexical$7479$1Bug2v
     g$add-lexical$10939$1Bug2v
     (case-lambda
       ((g$lab$7895$1Bug2v g$lex$7896$1Bug2v g$r$7897$1Bug2v)
        (cons
          (g$cons*$4962$1Bug2v g$lab$7895$1Bug2v 'lexical g$lex$7896$1Bug2v '#f)
          g$r$7897$1Bug2v))))
   (g$add-lexicals$7480$1Bug2v
     g$add-lexicals$10940$1Bug2v
     (case-lambda
       ((g$lab*$7898$1Bug2v g$lex*$7899$1Bug2v g$r$7900$1Bug2v)
        (if (null? g$lab*$7898$1Bug2v)
          g$r$7900$1Bug2v
          (g$add-lexicals$7480$1Bug2v
            (cdr g$lab*$7898$1Bug2v)
            (cdr g$lex*$7899$1Bug2v)
            (g$add-lexical$7479$1Bug2v
              (car g$lab*$7898$1Bug2v)
              (car g$lex*$7899$1Bug2v)
              g$r$7900$1Bug2v))))))
   (g$letrec-helper$7481$1Bug2v
     g$letrec-helper$10941$1Bug2v
     (case-lambda
       ((g$e$7901$1Bug2v g$r$7902$1Bug2v g$mr$7903$1Bug2v g$build$7904$1Bug2v)
        ((case-lambda
           ((g$t$7905$1Bug2v)
            ((case-lambda
               ((g$ls/false$7906$1Bug2v)
                (if g$ls/false$7906$1Bug2v
                  (apply
                    (case-lambda
                      ((g$lhs*$7907$1Bug2v
                         g$rhs*$7908$1Bug2v
                         g$b$7909$1Bug2v
                         g$b*$7910$1Bug2v)
                       (if (not (g$valid-bound-ids?$7259$1Bug2v
                                  g$lhs*$7907$1Bug2v))
                         (g$invalid-fmls-error$7497$1Bug2v
                           g$e$7901$1Bug2v
                           g$lhs*$7907$1Bug2v)
                         ((case-lambda
                            ((g$lex*$7911$1Bug2v g$lab*$7912$1Bug2v)
                             ((case-lambda
                                ((g$rib$7913$1Bug2v g$r$7914$1Bug2v)
                                 ((case-lambda
                                    ((g$body$7915$1Bug2v g$rhs*$7916$1Bug2v)
                                     (g$build$7904$1Bug2v
                                       '#f
                                       g$lex*$7911$1Bug2v
                                       g$rhs*$7916$1Bug2v
                                       g$body$7915$1Bug2v)))
                                  (g$chi-internal$7561$1Bug2v
                                    (g$add-subst$7244$1Bug2v
                                      g$rib$7913$1Bug2v
                                      (cons g$b$7909$1Bug2v g$b*$7910$1Bug2v))
                                    g$r$7914$1Bug2v
                                    g$mr$7903$1Bug2v)
                                  (g$chi-expr*$7548$1Bug2v
                                    (map (case-lambda
                                           ((g$x$7917$1Bug2v)
                                            (g$add-subst$7244$1Bug2v
                                              g$rib$7913$1Bug2v
                                              g$x$7917$1Bug2v)))
                                         g$rhs*$7908$1Bug2v)
                                    g$r$7914$1Bug2v
                                    g$mr$7903$1Bug2v))))
                              (g$make-full-rib$7222$1Bug2v
                                g$lhs*$7907$1Bug2v
                                g$lab*$7912$1Bug2v)
                              (g$add-lexicals$7480$1Bug2v
                                g$lab*$7912$1Bug2v
                                g$lex*$7911$1Bug2v
                                g$r$7902$1Bug2v))))
                          (map g$gen-lexical$7198$1Bug2v g$lhs*$7907$1Bug2v)
                          (map g$gen-label$7200$1Bug2v g$lhs*$7907$1Bug2v)))))
                    g$ls/false$7906$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$7905$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$7905$1Bug2v
               '(_ #(each (any any)) any . each-any)))))
         g$e$7901$1Bug2v))))
   (g$letrec-transformer$7482$1Bug2v
     g$letrec-transformer$10942$1Bug2v
     (case-lambda
       ((g$e$7918$1Bug2v g$r$7919$1Bug2v g$mr$7920$1Bug2v)
        (g$letrec-helper$7481$1Bug2v
          g$e$7918$1Bug2v
          g$r$7919$1Bug2v
          g$mr$7920$1Bug2v
          g$build-letrec$7190$1Bug2v))))
   (g$letrec*-transformer$7483$1Bug2v
     g$letrec*-transformer$10943$1Bug2v
     (case-lambda
       ((g$e$7921$1Bug2v g$r$7922$1Bug2v g$mr$7923$1Bug2v)
        (g$letrec-helper$7481$1Bug2v
          g$e$7921$1Bug2v
          g$r$7922$1Bug2v
          g$mr$7923$1Bug2v
          g$build-letrec*$7191$1Bug2v))))
   (g$fluid-let-syntax-transformer$7484$1Bug2v
     g$fluid-let-syntax-transformer$10944$1Bug2v
     (case-lambda
       ((g$e$7924$1Bug2v g$r$7925$1Bug2v g$mr$7926$1Bug2v)
        (letrec* ((g$lookup$7927$1Bug2v
                    (case-lambda
                      ((g$x$7937$1Bug2v)
                       ((case-lambda
                          ((g$t$7938$1Bug2v)
                           (if g$t$7938$1Bug2v
                             g$t$7938$1Bug2v
                             (begin
                               '#f
                               (g$syntax-violation$7643$1Bug2v
                                 '#f
                                 '"unbound identifier"
                                 g$e$7924$1Bug2v
                                 g$x$7937$1Bug2v)))))
                        (g$id->label$7267$1Bug2v g$x$7937$1Bug2v))))))
          ((case-lambda
             ((g$t$7928$1Bug2v)
              ((case-lambda
                 ((g$ls/false$7929$1Bug2v)
                  (if g$ls/false$7929$1Bug2v
                    (apply
                      (case-lambda
                        ((g$lhs*$7930$1Bug2v
                           g$rhs*$7931$1Bug2v
                           g$b$7932$1Bug2v
                           g$b*$7933$1Bug2v)
                         (if (not (g$valid-bound-ids?$7259$1Bug2v
                                    g$lhs*$7930$1Bug2v))
                           (g$invalid-fmls-error$7497$1Bug2v
                             g$e$7924$1Bug2v
                             g$lhs*$7930$1Bug2v)
                           ((case-lambda
                              ((g$lab*$7934$1Bug2v g$rhs*$7935$1Bug2v)
                               (g$chi-internal$7561$1Bug2v
                                 (cons g$b$7932$1Bug2v g$b*$7933$1Bug2v)
                                 (append
                                   (map cons
                                        g$lab*$7934$1Bug2v
                                        g$rhs*$7935$1Bug2v)
                                   g$r$7925$1Bug2v)
                                 (append
                                   (map cons
                                        g$lab*$7934$1Bug2v
                                        g$rhs*$7935$1Bug2v)
                                   g$mr$7926$1Bug2v))))
                            (map g$lookup$7927$1Bug2v g$lhs*$7930$1Bug2v)
                            (map (case-lambda
                                   ((g$x$7936$1Bug2v)
                                    (g$make-eval-transformer$7286$1Bug2v
                                      (g$expand-transformer$7577$1Bug2v
                                        g$x$7936$1Bug2v
                                        g$mr$7926$1Bug2v))))
                                 g$rhs*$7931$1Bug2v)))))
                      g$ls/false$7929$1Bug2v)
                    (g$syntax-violation$7643$1Bug2v
                      '#f
                      '"invalid syntax"
                      g$t$7928$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$7928$1Bug2v
                 '(_ #(each (any any)) any . each-any)))))
           g$e$7924$1Bug2v)))))
   (g$type-descriptor-transformer$7485$1Bug2v
     g$type-descriptor-transformer$10945$1Bug2v
     (case-lambda
       ((g$e$7939$1Bug2v g$r$7940$1Bug2v g$mr$7941$1Bug2v)
        ((case-lambda
           ((g$t$7942$1Bug2v)
            ((case-lambda
               ((g$ls/false$7943$1Bug2v)
                (if (if g$ls/false$7943$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7944$1Bug2v)
                             (g$id?$7254$1Bug2v g$id$7944$1Bug2v)))
                          g$ls/false$7943$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7945$1Bug2v)
                       ((case-lambda
                          ((g$lab$7946$1Bug2v)
                           ((case-lambda
                              ((g$b$7947$1Bug2v)
                               ((case-lambda
                                  ((g$type$7948$1Bug2v)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7946$1Bug2v)
                                           (g$raise-unbound-error$7273$1Bug2v
                                             g$id$7945$1Bug2v)
                                           (void))
                                         (if (not (if (eq? g$type$7948$1Bug2v
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (not (list?
                                                             (g$binding-value$7272$1Bug2v
                                                               g$b$7947$1Bug2v))))
                                                    '#f))
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"not a record type"
                                             g$e$7939$1Bug2v)
                                           (void))
                                         (list
                                           'quote
                                           (g$binding-value$7272$1Bug2v
                                             g$b$7947$1Bug2v))))))))
                                (g$binding-type$7271$1Bug2v g$b$7947$1Bug2v))))
                            (g$label->binding$7269$1Bug2v
                              g$lab$7946$1Bug2v
                              g$r$7940$1Bug2v))))
                        (g$id->label$7267$1Bug2v g$id$7945$1Bug2v))))
                    g$ls/false$7943$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$7942$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$7942$1Bug2v '(_ any)))))
         g$e$7939$1Bug2v))))
   (g$record-type-descriptor-transformer$7486$1Bug2v
     g$record-type-descriptor-transformer$10946$1Bug2v
     (case-lambda
       ((g$e$7949$1Bug2v g$r$7950$1Bug2v g$mr$7951$1Bug2v)
        ((case-lambda
           ((g$t$7952$1Bug2v)
            ((case-lambda
               ((g$ls/false$7953$1Bug2v)
                (if (if g$ls/false$7953$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7954$1Bug2v)
                             (g$id?$7254$1Bug2v g$id$7954$1Bug2v)))
                          g$ls/false$7953$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7955$1Bug2v)
                       ((case-lambda
                          ((g$lab$7956$1Bug2v)
                           ((case-lambda
                              ((g$b$7957$1Bug2v)
                               ((case-lambda
                                  ((g$type$7958$1Bug2v)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7956$1Bug2v)
                                           (g$raise-unbound-error$7273$1Bug2v
                                             g$id$7955$1Bug2v)
                                           (void))
                                         (if (not (if (eq? g$type$7958$1Bug2v
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7272$1Bug2v
                                                          g$b$7957$1Bug2v)))
                                                    '#f))
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"not a record type"
                                             g$e$7949$1Bug2v)
                                           (void))
                                         (g$chi-expr$7550$1Bug2v
                                           (car (g$binding-value$7272$1Bug2v
                                                  g$b$7957$1Bug2v))
                                           g$r$7950$1Bug2v
                                           g$mr$7951$1Bug2v)))))))
                                (g$binding-type$7271$1Bug2v g$b$7957$1Bug2v))))
                            (g$label->binding$7269$1Bug2v
                              g$lab$7956$1Bug2v
                              g$r$7950$1Bug2v))))
                        (g$id->label$7267$1Bug2v g$id$7955$1Bug2v))))
                    g$ls/false$7953$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$7952$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$7952$1Bug2v '(_ any)))))
         g$e$7949$1Bug2v))))
   (g$record-constructor-descriptor-transformer$7487$1Bug2v
     g$record-constructor-descriptor-transformer$10947$1Bug2v
     (case-lambda
       ((g$e$7959$1Bug2v g$r$7960$1Bug2v g$mr$7961$1Bug2v)
        ((case-lambda
           ((g$t$7962$1Bug2v)
            ((case-lambda
               ((g$ls/false$7963$1Bug2v)
                (if (if g$ls/false$7963$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$7964$1Bug2v)
                             (g$id?$7254$1Bug2v g$id$7964$1Bug2v)))
                          g$ls/false$7963$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$7965$1Bug2v)
                       ((case-lambda
                          ((g$lab$7966$1Bug2v)
                           ((case-lambda
                              ((g$b$7967$1Bug2v)
                               ((case-lambda
                                  ((g$type$7968$1Bug2v)
                                   ((case-lambda
                                      (()
                                       (begin
                                         (if (not g$lab$7966$1Bug2v)
                                           (g$raise-unbound-error$7273$1Bug2v
                                             g$id$7965$1Bug2v)
                                           (void))
                                         (if (not (if (eq? g$type$7968$1Bug2v
                                                           '$rtd)
                                                    (begin
                                                      '#f
                                                      (list?
                                                        (g$binding-value$7272$1Bug2v
                                                          g$b$7967$1Bug2v)))
                                                    '#f))
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid type"
                                             g$e$7959$1Bug2v)
                                           (void))
                                         (g$chi-expr$7550$1Bug2v
                                           (g$cadr$5124$1Bug2v
                                             (g$binding-value$7272$1Bug2v
                                               g$b$7967$1Bug2v))
                                           g$r$7960$1Bug2v
                                           g$mr$7961$1Bug2v)))))))
                                (g$binding-type$7271$1Bug2v g$b$7967$1Bug2v))))
                            (g$label->binding$7269$1Bug2v
                              g$lab$7966$1Bug2v
                              g$r$7960$1Bug2v))))
                        (g$id->label$7267$1Bug2v g$id$7965$1Bug2v))))
                    g$ls/false$7963$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$7962$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$7962$1Bug2v '(_ any)))))
         g$e$7959$1Bug2v))))
   (g$when-macro$7488$1Bug2v
     g$when-macro$10948$1Bug2v
     (case-lambda
       ((g$e$7969$1Bug2v)
        ((case-lambda
           ((g$t$7970$1Bug2v)
            ((case-lambda
               ((g$ls/false$7971$1Bug2v)
                (if g$ls/false$7971$1Bug2v
                  (apply
                    (case-lambda
                      ((g$test$7972$1Bug2v g$e$7973$1Bug2v g$e*$7974$1Bug2v)
                       (g$bless$7495$1Bug2v
                         (list
                           'if
                           g$test$7972$1Bug2v
                           (cons
                             'begin
                             (cons g$e$7973$1Bug2v g$e*$7974$1Bug2v))))))
                    g$ls/false$7971$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$7970$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$7970$1Bug2v
               '(_ any any . each-any)))))
         g$e$7969$1Bug2v))))
   (g$unless-macro$7489$1Bug2v
     g$unless-macro$10949$1Bug2v
     (case-lambda
       ((g$e$7975$1Bug2v)
        ((case-lambda
           ((g$t$7976$1Bug2v)
            ((case-lambda
               ((g$ls/false$7977$1Bug2v)
                (if g$ls/false$7977$1Bug2v
                  (apply
                    (case-lambda
                      ((g$test$7978$1Bug2v g$e$7979$1Bug2v g$e*$7980$1Bug2v)
                       (g$bless$7495$1Bug2v
                         (list
                           'if
                           (list 'not g$test$7978$1Bug2v)
                           (cons
                             'begin
                             (cons g$e$7979$1Bug2v g$e*$7980$1Bug2v))))))
                    g$ls/false$7977$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$7976$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$7976$1Bug2v
               '(_ any any . each-any)))))
         g$e$7975$1Bug2v))))
   (g$if-transformer$7490$1Bug2v
     g$if-transformer$10950$1Bug2v
     (case-lambda
       ((g$e$7981$1Bug2v g$r$7982$1Bug2v g$mr$7983$1Bug2v)
        ((case-lambda
           ((g$t$7984$1Bug2v)
            ((case-lambda
               ((g$ls/false$7985$1Bug2v)
                (if g$ls/false$7985$1Bug2v
                  (apply
                    (case-lambda
                      ((g$e0$7986$1Bug2v g$e1$7987$1Bug2v g$e2$7988$1Bug2v)
                       (list
                         'if
                         (g$chi-expr$7550$1Bug2v
                           g$e0$7986$1Bug2v
                           g$r$7982$1Bug2v
                           g$mr$7983$1Bug2v)
                         (g$chi-expr$7550$1Bug2v
                           g$e1$7987$1Bug2v
                           g$r$7982$1Bug2v
                           g$mr$7983$1Bug2v)
                         (g$chi-expr$7550$1Bug2v
                           g$e2$7988$1Bug2v
                           g$r$7982$1Bug2v
                           g$mr$7983$1Bug2v))))
                    g$ls/false$7985$1Bug2v)
                  ((case-lambda
                     ((g$t$7989$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$7990$1Bug2v)
                          (if g$ls/false$7990$1Bug2v
                            (apply
                              (case-lambda
                                ((g$e0$7991$1Bug2v g$e1$7992$1Bug2v)
                                 (list
                                   'if
                                   (g$chi-expr$7550$1Bug2v
                                     g$e0$7991$1Bug2v
                                     g$r$7982$1Bug2v
                                     g$mr$7983$1Bug2v)
                                   (g$chi-expr$7550$1Bug2v
                                     g$e1$7992$1Bug2v
                                     g$r$7982$1Bug2v
                                     g$mr$7983$1Bug2v)
                                   (g$build-void$7189$1Bug2v))))
                              g$ls/false$7990$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$7989$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$7989$1Bug2v
                         '(_ any any)))))
                   g$t$7984$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$7984$1Bug2v '(_ any any any)))))
         g$e$7981$1Bug2v))))
   (g$case-macro$7491$1Bug2v
     g$case-macro$10951$1Bug2v
     (case-lambda
       ((g$e$7993$1Bug2v)
        (letrec* ((g$build-last$7994$1Bug2v
                    (case-lambda
                      ((g$cls$8014$1Bug2v)
                       ((case-lambda
                          ((g$t$8015$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8016$1Bug2v)
                               (if g$ls/false$8016$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$e$8017$1Bug2v g$e*$8018$1Bug2v)
                                      (cons
                                        'begin
                                        (cons
                                          g$e$8017$1Bug2v
                                          g$e*$8018$1Bug2v))))
                                   g$ls/false$8016$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8019$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8020$1Bug2v)
                                         (if g$ls/false$8020$1Bug2v
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$7995$1Bug2v
                                                  g$cls$8014$1Bug2v
                                                  '(if #f #f))))
                                             g$ls/false$8020$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$8019$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8019$1Bug2v
                                        '_))))
                                  g$t$8015$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8015$1Bug2v
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8014$1Bug2v))))
                  (g$build-one$7995$1Bug2v
                    (case-lambda
                      ((g$cls$8007$1Bug2v g$k$8008$1Bug2v)
                       ((case-lambda
                          ((g$t$8009$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8010$1Bug2v)
                               (if g$ls/false$8010$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$d*$8011$1Bug2v
                                        g$e$8012$1Bug2v
                                        g$e*$8013$1Bug2v)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8011$1Bug2v))
                                        (cons
                                          'begin
                                          (cons
                                            g$e$8012$1Bug2v
                                            g$e*$8013$1Bug2v))
                                        g$k$8008$1Bug2v)))
                                   g$ls/false$8010$1Bug2v)
                                 (g$syntax-violation$7643$1Bug2v
                                   '#f
                                   '"invalid syntax"
                                   g$t$8009$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8009$1Bug2v
                              '(each-any any . each-any)))))
                        g$cls$8007$1Bug2v)))))
          ((case-lambda
             ((g$t$7996$1Bug2v)
              ((case-lambda
                 ((g$ls/false$7997$1Bug2v)
                  (if g$ls/false$7997$1Bug2v
                    (apply
                      (case-lambda
                        ((g$expr$7998$1Bug2v)
                         (g$bless$7495$1Bug2v
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$7998$1Bug2v))
                               '((if #f #f)))))))
                      g$ls/false$7997$1Bug2v)
                    ((case-lambda
                       ((g$t$7999$1Bug2v)
                        ((case-lambda
                           ((g$ls/false$8000$1Bug2v)
                            (if g$ls/false$8000$1Bug2v
                              (apply
                                (case-lambda
                                  ((g$expr$8001$1Bug2v
                                     g$cls$8002$1Bug2v
                                     g$cls*$8003$1Bug2v)
                                   (g$bless$7495$1Bug2v
                                     (list
                                       'let
                                       (list (list 't g$expr$8001$1Bug2v))
                                       ((letrec ((g$f$8004$1Bug2v
                                                   (case-lambda
                                                     ((g$cls$8005$1Bug2v
                                                        g$cls*$8006$1Bug2v)
                                                      (if (null?
                                                            g$cls*$8006$1Bug2v)
                                                        (g$build-last$7994$1Bug2v
                                                          g$cls$8005$1Bug2v)
                                                        (g$build-one$7995$1Bug2v
                                                          g$cls$8005$1Bug2v
                                                          (g$f$8004$1Bug2v
                                                            (car g$cls*$8006$1Bug2v)
                                                            (cdr g$cls*$8006$1Bug2v))))))))
                                          g$f$8004$1Bug2v)
                                        g$cls$8002$1Bug2v
                                        g$cls*$8003$1Bug2v)))))
                                g$ls/false$8000$1Bug2v)
                              (g$syntax-violation$7643$1Bug2v
                                '#f
                                '"invalid syntax"
                                g$t$7999$1Bug2v))))
                         (g$syntax-dispatch$7532$1Bug2v
                           g$t$7999$1Bug2v
                           '(_ any any . each-any)))))
                     g$t$7996$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v g$t$7996$1Bug2v '(_ any)))))
           g$e$7993$1Bug2v)))))
   (g$quote-transformer$7492$1Bug2v
     g$quote-transformer$10952$1Bug2v
     (case-lambda
       ((g$e$8021$1Bug2v g$r$8022$1Bug2v g$mr$8023$1Bug2v)
        ((case-lambda
           ((g$t$8024$1Bug2v)
            ((case-lambda
               ((g$ls/false$8025$1Bug2v)
                (if g$ls/false$8025$1Bug2v
                  (apply
                    (case-lambda
                      ((g$datum$8026$1Bug2v)
                       (list
                         'quote
                         (g$stx->datum$7265$1Bug2v g$datum$8026$1Bug2v))))
                    g$ls/false$8025$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8024$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8024$1Bug2v '(_ any)))))
         g$e$8021$1Bug2v))))
   (g$case-lambda-transformer$7493$1Bug2v
     g$case-lambda-transformer$10953$1Bug2v
     (case-lambda
       ((g$e$8027$1Bug2v g$r$8028$1Bug2v g$mr$8029$1Bug2v)
        ((case-lambda
           ((g$t$8030$1Bug2v)
            ((case-lambda
               ((g$ls/false$8031$1Bug2v)
                (if g$ls/false$8031$1Bug2v
                  (apply
                    (case-lambda
                      ((g$fmls*$8032$1Bug2v g$b*$8033$1Bug2v g$b**$8034$1Bug2v)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$7554$1Bug2v
                              g$e$8027$1Bug2v
                              g$fmls*$8032$1Bug2v
                              (map cons g$b*$8033$1Bug2v g$b**$8034$1Bug2v)
                              g$r$8028$1Bug2v
                              g$mr$8029$1Bug2v)))
                         (case-lambda
                           ((g$fmls*$8037$1Bug2v g$body*$8038$1Bug2v)
                            ((case-lambda
                               ((g$body*$8039$1Bug2v g$fmls*$8040$1Bug2v)
                                (g$build-case-lambda$7186$1Bug2v
                                  '#f
                                  g$fmls*$8040$1Bug2v
                                  g$body*$8039$1Bug2v)))
                             g$body*$8038$1Bug2v
                             g$fmls*$8037$1Bug2v))))))
                    g$ls/false$8031$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8030$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8030$1Bug2v
               '(_ . #(each (any any . each-any)))))))
         g$e$8027$1Bug2v))))
   (g$lambda-transformer$7494$1Bug2v
     g$lambda-transformer$10954$1Bug2v
     (case-lambda
       ((g$e$8041$1Bug2v g$r$8042$1Bug2v g$mr$8043$1Bug2v)
        ((case-lambda
           ((g$t$8044$1Bug2v)
            ((case-lambda
               ((g$ls/false$8045$1Bug2v)
                (if g$ls/false$8045$1Bug2v
                  (apply
                    (case-lambda
                      ((g$fmls$8046$1Bug2v g$b$8047$1Bug2v g$b*$8048$1Bug2v)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$7553$1Bug2v
                              g$e$8041$1Bug2v
                              g$fmls$8046$1Bug2v
                              (cons g$b$8047$1Bug2v g$b*$8048$1Bug2v)
                              g$r$8042$1Bug2v
                              g$mr$8043$1Bug2v)))
                         (case-lambda
                           ((g$fmls$8051$1Bug2v g$body$8052$1Bug2v)
                            ((case-lambda
                               ((g$body$8053$1Bug2v g$fmls$8054$1Bug2v)
                                (g$build-lambda$7185$1Bug2v
                                  '#f
                                  g$fmls$8054$1Bug2v
                                  g$body$8053$1Bug2v)))
                             g$body$8052$1Bug2v
                             g$fmls$8051$1Bug2v))))))
                    g$ls/false$8045$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8044$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8044$1Bug2v
               '(_ any any . each-any)))))
         g$e$8041$1Bug2v))))
   (g$bless$7495$1Bug2v
     g$bless$10955$1Bug2v
     (case-lambda
       ((g$x$8055$1Bug2v)
        (g$mkstx$7242$1Bug2v
          ((letrec ((g$f$8056$1Bug2v
                      (case-lambda
                        ((g$x$8057$1Bug2v)
                         (if (g$stx?$7226$1Bug2v g$x$8057$1Bug2v)
                           g$x$8057$1Bug2v
                           (if (pair? g$x$8057$1Bug2v)
                             (cons
                               (g$f$8056$1Bug2v (car g$x$8057$1Bug2v))
                               (g$f$8056$1Bug2v (cdr g$x$8057$1Bug2v)))
                             (if (symbol? g$x$8057$1Bug2v)
                               (g$scheme-stx$7475$1Bug2v g$x$8057$1Bug2v)
                               (if (vector? g$x$8057$1Bug2v)
                                 (vector-map g$f$8056$1Bug2v g$x$8057$1Bug2v)
                                 g$x$8057$1Bug2v))))))))
             g$f$8056$1Bug2v)
           g$x$8055$1Bug2v)
          '()
          '()
          '()))))
   (g$with-syntax-macro$7496$1Bug2v
     g$with-syntax-macro$10956$1Bug2v
     (case-lambda
       ((g$e$8058$1Bug2v)
        ((case-lambda
           ((g$t$8059$1Bug2v)
            ((case-lambda
               ((g$ls/false$8060$1Bug2v)
                (if g$ls/false$8060$1Bug2v
                  (apply
                    (case-lambda
                      ((g$pat*$8061$1Bug2v
                         g$expr*$8062$1Bug2v
                         g$b$8063$1Bug2v
                         g$b*$8064$1Bug2v)
                       ((case-lambda
                          ((g$idn*$8065$1Bug2v)
                           (begin
                             (g$verify-formals$7552$1Bug2v
                               (map car g$idn*$8065$1Bug2v)
                               g$e$8058$1Bug2v)
                             ((case-lambda
                                ((g$t*$8066$1Bug2v)
                                 (g$bless$7495$1Bug2v
                                   (list
                                     'let
                                     (map list
                                          g$t*$8066$1Bug2v
                                          g$expr*$8062$1Bug2v)
                                     ((letrec ((g$f$8067$1Bug2v
                                                 (case-lambda
                                                   ((g$pat*$8068$1Bug2v
                                                      g$t*$8069$1Bug2v)
                                                    (if (null?
                                                          g$pat*$8068$1Bug2v)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8063$1Bug2v
                                                            g$b*$8064$1Bug2v)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8069$1Bug2v)
                                                        '()
                                                        (list
                                                          (car g$pat*$8068$1Bug2v)
                                                          (g$f$8067$1Bug2v
                                                            (cdr g$pat*$8068$1Bug2v)
                                                            (cdr g$t*$8069$1Bug2v)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8068$1Bug2v))
                                                            (car g$t*$8069$1Bug2v)))))))))
                                        g$f$8067$1Bug2v)
                                      g$pat*$8061$1Bug2v
                                      g$t*$8066$1Bug2v)))))
                              (g$generate-temporaries$7633$1Bug2v
                                g$expr*$8062$1Bug2v)))))
                        ((letrec ((g$f$8070$1Bug2v
                                    (case-lambda
                                      ((g$pat*$8071$1Bug2v)
                                       (if (null? g$pat*$8071$1Bug2v)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$7531$1Bug2v
                                                (car g$pat*$8071$1Bug2v)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8074$1Bug2v
                                                g$idn*$8075$1Bug2v)
                                              ((case-lambda
                                                 ((g$idn*$8076$1Bug2v
                                                    g$pat$8077$1Bug2v)
                                                  (append
                                                    g$idn*$8076$1Bug2v
                                                    (g$f$8070$1Bug2v
                                                      (cdr g$pat*$8071$1Bug2v)))))
                                               g$idn*$8075$1Bug2v
                                               g$pat$8074$1Bug2v)))))))))
                           g$f$8070$1Bug2v)
                         g$pat*$8061$1Bug2v))))
                    g$ls/false$8060$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8059$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8059$1Bug2v
               '(_ #(each (any any)) any . each-any)))))
         g$e$8058$1Bug2v))))
   (g$invalid-fmls-error$7497$1Bug2v
     g$invalid-fmls-error$10957$1Bug2v
     (case-lambda
       ((g$stx$8078$1Bug2v g$fmls$8079$1Bug2v)
        ((case-lambda
           ((g$t$8080$1Bug2v)
            ((case-lambda
               ((g$ls/false$8081$1Bug2v)
                (if g$ls/false$8081$1Bug2v
                  (apply
                    (case-lambda
                      ((g$id*$8082$1Bug2v g$last$8083$1Bug2v)
                       ((letrec ((g$f$8084$1Bug2v
                                   (case-lambda
                                     ((g$id*$8085$1Bug2v)
                                      (if (null? g$id*$8085$1Bug2v)
                                        (values)
                                        (if (not (g$id?$7254$1Bug2v
                                                   (car g$id*$8085$1Bug2v)))
                                          (g$syntax-violation$7643$1Bug2v
                                            '#f
                                            '"not an identifier"
                                            g$stx$8078$1Bug2v
                                            (car g$id*$8085$1Bug2v))
                                          (begin
                                            (g$f$8084$1Bug2v
                                              (cdr g$id*$8085$1Bug2v))
                                            (if (g$bound-id-member?$7261$1Bug2v
                                                  (car g$id*$8085$1Bug2v)
                                                  (cdr g$id*$8085$1Bug2v))
                                              (g$syntax-violation$7643$1Bug2v
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8078$1Bug2v
                                                (car g$id*$8085$1Bug2v))
                                              (void)))))))))
                          g$f$8084$1Bug2v)
                        (if (g$id?$7254$1Bug2v g$last$8083$1Bug2v)
                          (cons g$last$8083$1Bug2v g$id*$8082$1Bug2v)
                          (if (g$syntax-null?$7249$1Bug2v g$last$8083$1Bug2v)
                            g$id*$8082$1Bug2v
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"not an identifier"
                              g$stx$8078$1Bug2v
                              g$last$8083$1Bug2v))))))
                    g$ls/false$8081$1Bug2v)
                  ((case-lambda
                     ((g$t$8086$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$8087$1Bug2v)
                          (if g$ls/false$8087$1Bug2v
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7643$1Bug2v
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8078$1Bug2v
                                   g$fmls$8079$1Bug2v)))
                              g$ls/false$8087$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$8086$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v g$t$8086$1Bug2v '_))))
                   g$t$8080$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8080$1Bug2v
               '#(each+ any () any)))))
         g$fmls$8079$1Bug2v))))
   (g$let-macro$7498$1Bug2v
     g$let-macro$10958$1Bug2v
     (case-lambda
       ((g$stx$8088$1Bug2v)
        ((case-lambda
           ((g$t$8089$1Bug2v)
            ((case-lambda
               ((g$ls/false$8090$1Bug2v)
                (if g$ls/false$8090$1Bug2v
                  (apply
                    (case-lambda
                      ((g$lhs*$8091$1Bug2v
                         g$rhs*$8092$1Bug2v
                         g$b$8093$1Bug2v
                         g$b*$8094$1Bug2v)
                       (if (g$valid-bound-ids?$7259$1Bug2v g$lhs*$8091$1Bug2v)
                         (g$bless$7495$1Bug2v
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8091$1Bug2v
                                 (cons g$b$8093$1Bug2v g$b*$8094$1Bug2v)))
                             g$rhs*$8092$1Bug2v))
                         (g$invalid-fmls-error$7497$1Bug2v
                           g$stx$8088$1Bug2v
                           g$lhs*$8091$1Bug2v))))
                    g$ls/false$8090$1Bug2v)
                  ((case-lambda
                     ((g$t$8095$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$8096$1Bug2v)
                          (if (if g$ls/false$8096$1Bug2v
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8097$1Bug2v
                                         g$lhs*$8098$1Bug2v
                                         g$rhs*$8099$1Bug2v
                                         g$b$8100$1Bug2v
                                         g$b*$8101$1Bug2v)
                                       (g$id?$7254$1Bug2v g$f$8097$1Bug2v)))
                                    g$ls/false$8096$1Bug2v))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8102$1Bug2v
                                   g$lhs*$8103$1Bug2v
                                   g$rhs*$8104$1Bug2v
                                   g$b$8105$1Bug2v
                                   g$b*$8106$1Bug2v)
                                 (if (g$valid-bound-ids?$7259$1Bug2v
                                       g$lhs*$8103$1Bug2v)
                                   (g$bless$7495$1Bug2v
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8102$1Bug2v
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$8103$1Bug2v
                                                 (cons
                                                   g$b$8105$1Bug2v
                                                   g$b*$8106$1Bug2v)))))
                                         g$f$8102$1Bug2v)
                                       g$rhs*$8104$1Bug2v))
                                   (g$invalid-fmls-error$7497$1Bug2v
                                     g$stx$8088$1Bug2v
                                     g$lhs*$8103$1Bug2v))))
                              g$ls/false$8096$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$8095$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$8095$1Bug2v
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8089$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8089$1Bug2v
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8088$1Bug2v))))
   (g$let-values-macro$7499$1Bug2v
     g$let-values-macro$10959$1Bug2v
     (case-lambda
       ((g$stx$8107$1Bug2v)
        (letrec* ((g$rename$8108$1Bug2v
                    (case-lambda
                      ((g$x$8159$1Bug2v g$old*$8160$1Bug2v g$new*$8161$1Bug2v)
                       (begin
                         (if (not (g$id?$7254$1Bug2v g$x$8159$1Bug2v))
                           (g$syntax-violation$7643$1Bug2v
                             '#f
                             '"not an indentifier"
                             g$stx$8107$1Bug2v
                             g$x$8159$1Bug2v)
                           (void))
                         (if (g$bound-id-member?$7261$1Bug2v
                               g$x$8159$1Bug2v
                               g$old*$8160$1Bug2v)
                           (g$syntax-violation$7643$1Bug2v
                             '#f
                             '"duplicate binding"
                             g$stx$8107$1Bug2v
                             g$x$8159$1Bug2v)
                           (void))
                         ((case-lambda
                            ((g$y$8162$1Bug2v)
                             (values
                               g$y$8162$1Bug2v
                               (cons g$x$8159$1Bug2v g$old*$8160$1Bug2v)
                               (cons g$y$8162$1Bug2v g$new*$8161$1Bug2v))))
                          (gensym
                            (g$syntax->datum$7646$1Bug2v g$x$8159$1Bug2v)))))))
                  (g$rename*$8109$1Bug2v
                    (case-lambda
                      ((g$x*$8150$1Bug2v g$old*$8151$1Bug2v g$new*$8152$1Bug2v)
                       (if (null? g$x*$8150$1Bug2v)
                         (values '() g$old*$8151$1Bug2v g$new*$8152$1Bug2v)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$8108$1Bug2v
                                (car g$x*$8150$1Bug2v)
                                g$old*$8151$1Bug2v
                                g$new*$8152$1Bug2v)))
                           (case-lambda
                             ((g$x$8153$1Bug2v
                                g$old*$8154$1Bug2v
                                g$new*$8155$1Bug2v)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$8109$1Bug2v
                                     (cdr g$x*$8150$1Bug2v)
                                     g$old*$8154$1Bug2v
                                     g$new*$8155$1Bug2v)))
                                (case-lambda
                                  ((g$x*$8156$1Bug2v
                                     g$old*$8157$1Bug2v
                                     g$new*$8158$1Bug2v)
                                   (values
                                     (cons g$x$8153$1Bug2v g$x*$8156$1Bug2v)
                                     g$old*$8157$1Bug2v
                                     g$new*$8158$1Bug2v))))))))))))
          ((case-lambda
             ((g$t$8110$1Bug2v)
              ((case-lambda
                 ((g$ls/false$8111$1Bug2v)
                  (if g$ls/false$8111$1Bug2v
                    (apply
                      (case-lambda
                        ((g$b$8112$1Bug2v g$b*$8113$1Bug2v)
                         (g$cons*$4962$1Bug2v
                           (g$bless$7495$1Bug2v 'let)
                           '()
                           g$b$8112$1Bug2v
                           g$b*$8113$1Bug2v)))
                      g$ls/false$8111$1Bug2v)
                    ((case-lambda
                       ((g$t$8114$1Bug2v)
                        ((case-lambda
                           ((g$ls/false$8115$1Bug2v)
                            (if g$ls/false$8115$1Bug2v
                              (apply
                                (case-lambda
                                  ((g$lhs*$8116$1Bug2v
                                     g$rhs*$8117$1Bug2v
                                     g$b$8118$1Bug2v
                                     g$b*$8119$1Bug2v)
                                   (g$bless$7495$1Bug2v
                                     ((letrec ((g$f$8120$1Bug2v
                                                 (case-lambda
                                                   ((g$lhs*$8121$1Bug2v
                                                      g$rhs*$8122$1Bug2v
                                                      g$old*$8123$1Bug2v
                                                      g$new*$8124$1Bug2v)
                                                    (if (null?
                                                          g$lhs*$8121$1Bug2v)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (map list
                                                               g$old*$8123$1Bug2v
                                                               g$new*$8124$1Bug2v)
                                                          (cons
                                                            g$b$8118$1Bug2v
                                                            g$b*$8119$1Bug2v)))
                                                      ((case-lambda
                                                         ((g$t$8125$1Bug2v)
                                                          ((case-lambda
                                                             ((g$ls/false$8126$1Bug2v)
                                                              (if g$ls/false$8126$1Bug2v
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8127$1Bug2v)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$8109$1Bug2v
                                                                            g$x*$8127$1Bug2v
                                                                            g$old*$8123$1Bug2v
                                                                            g$new*$8124$1Bug2v)))
                                                                       (case-lambda
                                                                         ((g$y*$8131$1Bug2v
                                                                            g$old*$8132$1Bug2v
                                                                            g$new*$8133$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$new*$8134$1Bug2v
                                                                                g$old*$8135$1Bug2v
                                                                                g$y*$8136$1Bug2v)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$8122$1Bug2v))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$8136$1Bug2v
                                                                                  (g$f$8120$1Bug2v
                                                                                    (cdr g$lhs*$8121$1Bug2v)
                                                                                    (cdr g$rhs*$8122$1Bug2v)
                                                                                    g$old*$8135$1Bug2v
                                                                                    g$new*$8134$1Bug2v)))))
                                                                           g$new*$8133$1Bug2v
                                                                           g$old*$8132$1Bug2v
                                                                           g$y*$8131$1Bug2v))))))
                                                                  g$ls/false$8126$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$t$8137$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8138$1Bug2v)
                                                                        (if g$ls/false$8138$1Bug2v
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8139$1Bug2v
                                                                                 g$x$8140$1Bug2v)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$8108$1Bug2v
                                                                                      g$x$8140$1Bug2v
                                                                                      g$old*$8123$1Bug2v
                                                                                      g$new*$8124$1Bug2v)))
                                                                                 (case-lambda
                                                                                   ((g$y$8141$1Bug2v
                                                                                      g$old*$8142$1Bug2v
                                                                                      g$new*$8143$1Bug2v)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$8109$1Bug2v
                                                                                           g$x*$8139$1Bug2v
                                                                                           g$old*$8142$1Bug2v
                                                                                           g$new*$8143$1Bug2v)))
                                                                                      (case-lambda
                                                                                        ((g$y*$8144$1Bug2v
                                                                                           g$old*$8145$1Bug2v
                                                                                           g$new*$8146$1Bug2v)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$8122$1Bug2v))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$8144$1Bug2v
                                                                                               g$y$8141$1Bug2v)
                                                                                             (g$f$8120$1Bug2v
                                                                                               (cdr g$lhs*$8121$1Bug2v)
                                                                                               (cdr g$rhs*$8122$1Bug2v)
                                                                                               g$old*$8145$1Bug2v
                                                                                               g$new*$8146$1Bug2v)))))))))))
                                                                            g$ls/false$8138$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$8147$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8148$1Bug2v)
                                                                                  (if g$ls/false$8148$1Bug2v
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8149$1Bug2v)
                                                                                         (g$syntax-violation$7643$1Bug2v
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8107$1Bug2v
                                                                                           g$others$8149$1Bug2v)))
                                                                                      g$ls/false$8148$1Bug2v)
                                                                                    (g$syntax-violation$7643$1Bug2v
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8147$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$8147$1Bug2v
                                                                                 'any))))
                                                                           g$t$8137$1Bug2v))))
                                                                     (g$syntax-dispatch$7532$1Bug2v
                                                                       g$t$8137$1Bug2v
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8125$1Bug2v))))
                                                           (g$syntax-dispatch$7532$1Bug2v
                                                             g$t$8125$1Bug2v
                                                             'each-any))))
                                                       (car g$lhs*$8121$1Bug2v)))))))
                                        g$f$8120$1Bug2v)
                                      g$lhs*$8116$1Bug2v
                                      g$rhs*$8117$1Bug2v
                                      '()
                                      '()))))
                                g$ls/false$8115$1Bug2v)
                              (g$syntax-violation$7643$1Bug2v
                                '#f
                                '"invalid syntax"
                                g$t$8114$1Bug2v))))
                         (g$syntax-dispatch$7532$1Bug2v
                           g$t$8114$1Bug2v
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8110$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$8110$1Bug2v
                 '(_ () any . each-any)))))
           g$stx$8107$1Bug2v)))))
   (g$let*-values-macro$7500$1Bug2v
     g$let*-values-macro$10960$1Bug2v
     (case-lambda
       ((g$stx$8163$1Bug2v)
        (letrec* ((g$check$8164$1Bug2v
                    (case-lambda
                      ((g$x*$8188$1Bug2v)
                       (if (not (null? g$x*$8188$1Bug2v))
                         ((case-lambda
                            ((g$x$8189$1Bug2v)
                             (begin
                               (if (not (g$id?$7254$1Bug2v g$x$8189$1Bug2v))
                                 (g$syntax-violation$7643$1Bug2v
                                   '#f
                                   '"not an identifier"
                                   g$stx$8163$1Bug2v
                                   g$x$8189$1Bug2v)
                                 (void))
                               (g$check$8164$1Bug2v (cdr g$x*$8188$1Bug2v))
                               (if (g$bound-id-member?$7261$1Bug2v
                                     g$x$8189$1Bug2v
                                     (cdr g$x*$8188$1Bug2v))
                                 (g$syntax-violation$7643$1Bug2v
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$8163$1Bug2v
                                   g$x$8189$1Bug2v)
                                 (void)))))
                          (car g$x*$8188$1Bug2v))
                         (void))))))
          ((case-lambda
             ((g$t$8165$1Bug2v)
              ((case-lambda
                 ((g$ls/false$8166$1Bug2v)
                  (if g$ls/false$8166$1Bug2v
                    (apply
                      (case-lambda
                        ((g$b$8167$1Bug2v g$b*$8168$1Bug2v)
                         (g$cons*$4962$1Bug2v
                           (g$bless$7495$1Bug2v 'let)
                           '()
                           g$b$8167$1Bug2v
                           g$b*$8168$1Bug2v)))
                      g$ls/false$8166$1Bug2v)
                    ((case-lambda
                       ((g$t$8169$1Bug2v)
                        ((case-lambda
                           ((g$ls/false$8170$1Bug2v)
                            (if g$ls/false$8170$1Bug2v
                              (apply
                                (case-lambda
                                  ((g$lhs*$8171$1Bug2v
                                     g$rhs*$8172$1Bug2v
                                     g$b$8173$1Bug2v
                                     g$b*$8174$1Bug2v)
                                   (g$bless$7495$1Bug2v
                                     ((letrec ((g$f$8175$1Bug2v
                                                 (case-lambda
                                                   ((g$lhs*$8176$1Bug2v
                                                      g$rhs*$8177$1Bug2v)
                                                    (if (null?
                                                          g$lhs*$8176$1Bug2v)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$8173$1Bug2v
                                                          g$b*$8174$1Bug2v))
                                                      ((case-lambda
                                                         ((g$t$8178$1Bug2v)
                                                          ((case-lambda
                                                             ((g$ls/false$8179$1Bug2v)
                                                              (if g$ls/false$8179$1Bug2v
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$8180$1Bug2v)
                                                                     (begin
                                                                       (g$check$8164$1Bug2v
                                                                         g$x*$8180$1Bug2v)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$8177$1Bug2v))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$8180$1Bug2v
                                                                           (g$f$8175$1Bug2v
                                                                             (cdr g$lhs*$8176$1Bug2v)
                                                                             (cdr g$rhs*$8177$1Bug2v)))))))
                                                                  g$ls/false$8179$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$t$8181$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8182$1Bug2v)
                                                                        (if g$ls/false$8182$1Bug2v
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$8183$1Bug2v
                                                                                 g$x$8184$1Bug2v)
                                                                               (begin
                                                                                 (g$check$8164$1Bug2v
                                                                                   (cons
                                                                                     g$x$8184$1Bug2v
                                                                                     g$x*$8183$1Bug2v))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$8177$1Bug2v))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$8183$1Bug2v
                                                                                       g$x$8184$1Bug2v)
                                                                                     (g$f$8175$1Bug2v
                                                                                       (cdr g$lhs*$8176$1Bug2v)
                                                                                       (cdr g$rhs*$8177$1Bug2v)))))))
                                                                            g$ls/false$8182$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$8185$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8186$1Bug2v)
                                                                                  (if g$ls/false$8186$1Bug2v
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$8187$1Bug2v)
                                                                                         (g$syntax-violation$7643$1Bug2v
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$8163$1Bug2v
                                                                                           g$others$8187$1Bug2v)))
                                                                                      g$ls/false$8186$1Bug2v)
                                                                                    (g$syntax-violation$7643$1Bug2v
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8185$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$8185$1Bug2v
                                                                                 'any))))
                                                                           g$t$8181$1Bug2v))))
                                                                     (g$syntax-dispatch$7532$1Bug2v
                                                                       g$t$8181$1Bug2v
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$8178$1Bug2v))))
                                                           (g$syntax-dispatch$7532$1Bug2v
                                                             g$t$8178$1Bug2v
                                                             'each-any))))
                                                       (car g$lhs*$8176$1Bug2v)))))))
                                        g$f$8175$1Bug2v)
                                      g$lhs*$8171$1Bug2v
                                      g$rhs*$8172$1Bug2v))))
                                g$ls/false$8170$1Bug2v)
                              (g$syntax-violation$7643$1Bug2v
                                '#f
                                '"invalid syntax"
                                g$t$8169$1Bug2v))))
                         (g$syntax-dispatch$7532$1Bug2v
                           g$t$8169$1Bug2v
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$8165$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$8165$1Bug2v
                 '(_ () any . each-any)))))
           g$stx$8163$1Bug2v)))))
   (g$trace-lambda-macro$7501$1Bug2v
     g$trace-lambda-macro$10961$1Bug2v
     (case-lambda
       ((g$stx$8190$1Bug2v)
        ((case-lambda
           ((g$t$8191$1Bug2v)
            ((case-lambda
               ((g$ls/false$8192$1Bug2v)
                (if g$ls/false$8192$1Bug2v
                  (apply
                    (case-lambda
                      ((g$who$8193$1Bug2v
                         g$fmls$8194$1Bug2v
                         g$b$8195$1Bug2v
                         g$b*$8196$1Bug2v)
                       (if (g$valid-bound-ids?$7259$1Bug2v g$fmls$8194$1Bug2v)
                         (g$bless$7495$1Bug2v
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$8193$1Bug2v)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$8194$1Bug2v
                                 (cons g$b$8195$1Bug2v g$b*$8196$1Bug2v)))))
                         (g$invalid-fmls-error$7497$1Bug2v
                           g$stx$8190$1Bug2v
                           g$fmls$8194$1Bug2v))))
                    g$ls/false$8192$1Bug2v)
                  ((case-lambda
                     ((g$t$8197$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$8198$1Bug2v)
                          (if g$ls/false$8198$1Bug2v
                            (apply
                              (case-lambda
                                ((g$who$8199$1Bug2v
                                   g$fmls$8200$1Bug2v
                                   g$last$8201$1Bug2v
                                   g$b$8202$1Bug2v
                                   g$b*$8203$1Bug2v)
                                 (if (g$valid-bound-ids?$7259$1Bug2v
                                       (cons
                                         g$last$8201$1Bug2v
                                         g$fmls$8200$1Bug2v))
                                   (g$bless$7495$1Bug2v
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$8199$1Bug2v)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$8200$1Bug2v
                                             g$last$8201$1Bug2v)
                                           (cons
                                             g$b$8202$1Bug2v
                                             g$b*$8203$1Bug2v)))))
                                   (g$invalid-fmls-error$7497$1Bug2v
                                     g$stx$8190$1Bug2v
                                     (append
                                       g$fmls$8200$1Bug2v
                                       g$last$8201$1Bug2v)))))
                              g$ls/false$8198$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$8197$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$8197$1Bug2v
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$8191$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8191$1Bug2v
               '(_ any each-any any . each-any)))))
         g$stx$8190$1Bug2v))))
   (g$trace-define-macro$7502$1Bug2v
     g$trace-define-macro$10962$1Bug2v
     (case-lambda
       ((g$stx$8204$1Bug2v)
        ((case-lambda
           ((g$t$8205$1Bug2v)
            ((case-lambda
               ((g$ls/false$8206$1Bug2v)
                (if g$ls/false$8206$1Bug2v
                  (apply
                    (case-lambda
                      ((g$who$8207$1Bug2v
                         g$fmls$8208$1Bug2v
                         g$b$8209$1Bug2v
                         g$b*$8210$1Bug2v)
                       (if (g$valid-bound-ids?$7259$1Bug2v g$fmls$8208$1Bug2v)
                         (g$bless$7495$1Bug2v
                           (list
                             'define
                             g$who$8207$1Bug2v
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$8207$1Bug2v)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$8208$1Bug2v
                                   (cons g$b$8209$1Bug2v g$b*$8210$1Bug2v))))))
                         (g$invalid-fmls-error$7497$1Bug2v
                           g$stx$8204$1Bug2v
                           g$fmls$8208$1Bug2v))))
                    g$ls/false$8206$1Bug2v)
                  ((case-lambda
                     ((g$t$8211$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$8212$1Bug2v)
                          (if g$ls/false$8212$1Bug2v
                            (apply
                              (case-lambda
                                ((g$who$8213$1Bug2v
                                   g$fmls$8214$1Bug2v
                                   g$last$8215$1Bug2v
                                   g$b$8216$1Bug2v
                                   g$b*$8217$1Bug2v)
                                 (if (g$valid-bound-ids?$7259$1Bug2v
                                       (cons
                                         g$last$8215$1Bug2v
                                         g$fmls$8214$1Bug2v))
                                   (g$bless$7495$1Bug2v
                                     (list
                                       'define
                                       g$who$8213$1Bug2v
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$8213$1Bug2v)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$8214$1Bug2v
                                               g$last$8215$1Bug2v)
                                             (cons
                                               g$b$8216$1Bug2v
                                               g$b*$8217$1Bug2v))))))
                                   (g$invalid-fmls-error$7497$1Bug2v
                                     g$stx$8204$1Bug2v
                                     (append
                                       g$fmls$8214$1Bug2v
                                       g$last$8215$1Bug2v)))))
                              g$ls/false$8212$1Bug2v)
                            ((case-lambda
                               ((g$t$8218$1Bug2v)
                                ((case-lambda
                                   ((g$ls/false$8219$1Bug2v)
                                    (if g$ls/false$8219$1Bug2v
                                      (apply
                                        (case-lambda
                                          ((g$who$8220$1Bug2v
                                             g$expr$8221$1Bug2v)
                                           (if (g$id?$7254$1Bug2v
                                                 g$who$8220$1Bug2v)
                                             (g$bless$7495$1Bug2v
                                               (list
                                                 'define
                                                 g$who$8220$1Bug2v
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$8221$1Bug2v))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$8220$1Bug2v)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$7643$1Bug2v
                                               '#f
                                               '"invalid name"
                                               g$stx$8204$1Bug2v))))
                                        g$ls/false$8219$1Bug2v)
                                      (g$syntax-violation$7643$1Bug2v
                                        '#f
                                        '"invalid syntax"
                                        g$t$8218$1Bug2v))))
                                 (g$syntax-dispatch$7532$1Bug2v
                                   g$t$8218$1Bug2v
                                   '(_ any any)))))
                             g$t$8211$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$8211$1Bug2v
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$8205$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8205$1Bug2v
               '(_ (any . each-any) any . each-any)))))
         g$stx$8204$1Bug2v))))
   (g$trace-define-syntax-macro$7503$1Bug2v
     g$trace-define-syntax-macro$10963$1Bug2v
     (case-lambda
       ((g$stx$8222$1Bug2v)
        ((case-lambda
           ((g$t$8223$1Bug2v)
            ((case-lambda
               ((g$ls/false$8224$1Bug2v)
                (if g$ls/false$8224$1Bug2v
                  (apply
                    (case-lambda
                      ((g$who$8225$1Bug2v g$expr$8226$1Bug2v)
                       (if (g$id?$7254$1Bug2v g$who$8225$1Bug2v)
                         (g$bless$7495$1Bug2v
                           (list
                             'define-syntax
                             g$who$8225$1Bug2v
                             (list
                               'make-traced-macro
                               (list 'quote g$who$8225$1Bug2v)
                               g$expr$8226$1Bug2v)))
                         (g$syntax-violation$7643$1Bug2v
                           '#f
                           '"invalid name"
                           g$stx$8222$1Bug2v))))
                    g$ls/false$8224$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8223$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8223$1Bug2v '(_ any any)))))
         g$stx$8222$1Bug2v))))
   (g$trace-let/rec-syntax$7504$1Bug2v
     g$trace-let/rec-syntax$10964$1Bug2v
     (case-lambda
       ((g$who$8227$1Bug2v)
        (case-lambda
          ((g$stx$8228$1Bug2v)
           ((case-lambda
              ((g$t$8229$1Bug2v)
               ((case-lambda
                  ((g$ls/false$8230$1Bug2v)
                   (if g$ls/false$8230$1Bug2v
                     (apply
                       (case-lambda
                         ((g$lhs*$8231$1Bug2v
                            g$rhs*$8232$1Bug2v
                            g$b$8233$1Bug2v
                            g$b*$8234$1Bug2v)
                          (if (g$valid-bound-ids?$7259$1Bug2v
                                g$lhs*$8231$1Bug2v)
                            ((case-lambda
                               ((g$rhs*$8235$1Bug2v)
                                (g$bless$7495$1Bug2v
                                  (cons
                                    g$who$8227$1Bug2v
                                    (cons
                                      (map list
                                           g$lhs*$8231$1Bug2v
                                           g$rhs*$8235$1Bug2v)
                                      (cons
                                        g$b$8233$1Bug2v
                                        g$b*$8234$1Bug2v))))))
                             (map (case-lambda
                                    ((g$lhs$8236$1Bug2v g$rhs$8237$1Bug2v)
                                     (list
                                       'make-traced-macro
                                       (list 'quote g$lhs$8236$1Bug2v)
                                       g$rhs$8237$1Bug2v)))
                                  g$lhs*$8231$1Bug2v
                                  g$rhs*$8232$1Bug2v))
                            (g$invalid-fmls-error$7497$1Bug2v
                              g$stx$8228$1Bug2v
                              g$lhs*$8231$1Bug2v))))
                       g$ls/false$8230$1Bug2v)
                     (g$syntax-violation$7643$1Bug2v
                       '#f
                       '"invalid syntax"
                       g$t$8229$1Bug2v))))
                (g$syntax-dispatch$7532$1Bug2v
                  g$t$8229$1Bug2v
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$8228$1Bug2v))))))
   (g$trace-let-syntax-macro$7505$1Bug2v
     g$trace-let-syntax-macro$10965$1Bug2v
     (g$trace-let/rec-syntax$7504$1Bug2v 'let-syntax))
   (g$trace-letrec-syntax-macro$7506$1Bug2v
     g$trace-letrec-syntax-macro$10966$1Bug2v
     (g$trace-let/rec-syntax$7504$1Bug2v 'letrec-syntax))
   (g$guard-macro$7507$1Bug2v
     g$guard-macro$10967$1Bug2v
     (case-lambda
       ((g$x$8238$1Bug2v)
        (letrec* ((g$gen-clauses$8239$1Bug2v
                    (case-lambda
                      ((g$con$8251$1Bug2v
                         g$outerk$8252$1Bug2v
                         g$clause*$8253$1Bug2v)
                       (letrec* ((g$f$8254$1Bug2v
                                   (case-lambda
                                     ((g$x$8282$1Bug2v g$k$8283$1Bug2v)
                                      ((case-lambda
                                         ((g$t$8284$1Bug2v)
                                          ((case-lambda
                                             ((g$ls/false$8285$1Bug2v)
                                              (if g$ls/false$8285$1Bug2v
                                                (apply
                                                  (case-lambda
                                                    ((g$e$8286$1Bug2v
                                                       g$p$8287$1Bug2v)
                                                     ((case-lambda
                                                        ((g$t$8288$1Bug2v)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$8288$1Bug2v
                                                               g$e$8286$1Bug2v))
                                                           (list
                                                             'if
                                                             g$t$8288$1Bug2v
                                                             (list
                                                               g$p$8287$1Bug2v
                                                               g$t$8288$1Bug2v)
                                                             g$k$8283$1Bug2v))))
                                                      (gensym))))
                                                  g$ls/false$8285$1Bug2v)
                                                ((case-lambda
                                                   ((g$t$8289$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$8290$1Bug2v)
                                                        (if g$ls/false$8290$1Bug2v
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8291$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$t$8292$1Bug2v)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$8292$1Bug2v
                                                                         g$e$8291$1Bug2v))
                                                                     (list
                                                                       'if
                                                                       g$t$8292$1Bug2v
                                                                       g$t$8292$1Bug2v
                                                                       g$k$8283$1Bug2v))))
                                                                (gensym))))
                                                            g$ls/false$8290$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$8293$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$8294$1Bug2v)
                                                                  (if g$ls/false$8294$1Bug2v
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$8295$1Bug2v
                                                                           g$v$8296$1Bug2v
                                                                           g$v*$8297$1Bug2v)
                                                                         (list
                                                                           'if
                                                                           g$e$8295$1Bug2v
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$8296$1Bug2v
                                                                               g$v*$8297$1Bug2v))
                                                                           g$k$8283$1Bug2v)))
                                                                      g$ls/false$8294$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$t$8298$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8299$1Bug2v)
                                                                            (if g$ls/false$8299$1Bug2v
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$7643$1Bug2v
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$8282$1Bug2v)))
                                                                                g$ls/false$8299$1Bug2v)
                                                                              (g$syntax-violation$7643$1Bug2v
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8298$1Bug2v))))
                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                           g$t$8298$1Bug2v
                                                                           '_))))
                                                                     g$t$8293$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$8293$1Bug2v
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$8289$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$8289$1Bug2v
                                                       '(any)))))
                                                 g$t$8284$1Bug2v))))
                                           (g$syntax-dispatch$7532$1Bug2v
                                             g$t$8284$1Bug2v
                                             '(any #(scheme-id =>) any)))))
                                       g$x$8282$1Bug2v))))
                                 (g$f*$8255$1Bug2v
                                   (case-lambda
                                     ((g$x*$8262$1Bug2v)
                                      ((case-lambda
                                         ((g$t$8263$1Bug2v)
                                          ((case-lambda
                                             ((g$ls/false$8264$1Bug2v)
                                              (if g$ls/false$8264$1Bug2v
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$8251$1Bug2v)
                                                       '#t)))
                                                  g$ls/false$8264$1Bug2v)
                                                ((case-lambda
                                                   ((g$t$8265$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$8266$1Bug2v)
                                                        (if g$ls/false$8266$1Bug2v
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$8267$1Bug2v
                                                                 g$e*$8268$1Bug2v)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$8267$1Bug2v
                                                                     g$e*$8268$1Bug2v))
                                                                 '#f)))
                                                            g$ls/false$8266$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$8269$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$8270$1Bug2v)
                                                                  (if g$ls/false$8270$1Bug2v
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$8271$1Bug2v
                                                                           g$cls*$8272$1Bug2v)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$8255$1Bug2v
                                                                                g$cls*$8272$1Bug2v)))
                                                                           (case-lambda
                                                                             ((g$e$8275$1Bug2v
                                                                                g$g$8276$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$g$8277$1Bug2v
                                                                                    g$e$8278$1Bug2v)
                                                                                  (values
                                                                                    (g$f$8254$1Bug2v
                                                                                      g$cls$8271$1Bug2v
                                                                                      g$e$8278$1Bug2v)
                                                                                    g$g$8277$1Bug2v)))
                                                                               g$g$8276$1Bug2v
                                                                               g$e$8275$1Bug2v))))))
                                                                      g$ls/false$8270$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$t$8279$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8280$1Bug2v)
                                                                            (if g$ls/false$8280$1Bug2v
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$8281$1Bug2v)
                                                                                   (g$syntax-violation$7643$1Bug2v
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$8281$1Bug2v)))
                                                                                g$ls/false$8280$1Bug2v)
                                                                              (g$syntax-violation$7643$1Bug2v
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8279$1Bug2v))))
                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                           g$t$8279$1Bug2v
                                                                           'any))))
                                                                     g$t$8269$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$8269$1Bug2v
                                                                 '(any .
                                                                       any)))))
                                                           g$t$8265$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$8265$1Bug2v
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$8263$1Bug2v))))
                                           (g$syntax-dispatch$7532$1Bug2v
                                             g$t$8263$1Bug2v
                                             '()))))
                                       g$x*$8262$1Bug2v)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$8255$1Bug2v g$clause*$8253$1Bug2v)))
                           (case-lambda
                             ((g$code$8258$1Bug2v g$raisek$8259$1Bug2v)
                              ((case-lambda
                                 ((g$raisek$8260$1Bug2v g$code$8261$1Bug2v)
                                  (if g$raisek$8260$1Bug2v
                                    (list
                                      g$outerk$8252$1Bug2v
                                      g$code$8261$1Bug2v)
                                    g$code$8261$1Bug2v)))
                               g$raisek$8259$1Bug2v
                               g$code$8258$1Bug2v)))))))))
          ((case-lambda
             ((g$t$8240$1Bug2v)
              ((case-lambda
                 ((g$ls/false$8241$1Bug2v)
                  (if (if g$ls/false$8241$1Bug2v
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$8242$1Bug2v
                                 g$clause*$8243$1Bug2v
                                 g$b$8244$1Bug2v
                                 g$b*$8245$1Bug2v)
                               (g$id?$7254$1Bug2v g$con$8242$1Bug2v)))
                            g$ls/false$8241$1Bug2v))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$8246$1Bug2v
                           g$clause*$8247$1Bug2v
                           g$b$8248$1Bug2v
                           g$b*$8249$1Bug2v)
                         ((case-lambda
                            ((g$outerk$8250$1Bug2v)
                             (g$bless$7495$1Bug2v
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$8250$1Bug2v)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$8246$1Bug2v)
                                           (g$gen-clauses$8239$1Bug2v
                                             g$con$8246$1Bug2v
                                             g$outerk$8250$1Bug2v
                                             g$clause*$8247$1Bug2v))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$8248$1Bug2v
                                                 g$b*$8249$1Bug2v))))))))))))
                          (gensym))))
                      g$ls/false$8241$1Bug2v)
                    (g$syntax-violation$7643$1Bug2v
                      '#f
                      '"invalid syntax"
                      g$t$8240$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$8240$1Bug2v
                 '(_ (any . each-any) any . each-any)))))
           g$x$8238$1Bug2v)))))
   (g$define-enumeration-macro$7508$1Bug2v
     g$define-enumeration-macro$10968$1Bug2v
     (case-lambda
       ((g$stx$8300$1Bug2v)
        (letrec* ((g$set?$8301$1Bug2v
                    (case-lambda
                      ((g$x$8314$1Bug2v)
                       ((case-lambda
                          ((g$t$8315$1Bug2v)
                           (if g$t$8315$1Bug2v
                             g$t$8315$1Bug2v
                             (begin
                               '#f
                               (if (not (g$memq$4954$1Bug2v
                                          (car g$x$8314$1Bug2v)
                                          (cdr g$x$8314$1Bug2v)))
                                 (begin
                                   '#f
                                   (g$set?$8301$1Bug2v (cdr g$x$8314$1Bug2v)))
                                 '#f)))))
                        (null? g$x$8314$1Bug2v)))))
                  (g$remove-dups$8302$1Bug2v
                    (case-lambda
                      ((g$ls$8313$1Bug2v)
                       (if (null? g$ls$8313$1Bug2v)
                         '()
                         (cons
                           (car g$ls$8313$1Bug2v)
                           (g$remove-dups$8302$1Bug2v
                             (g$remq$4967$1Bug2v
                               (car g$ls$8313$1Bug2v)
                               (cdr g$ls$8313$1Bug2v)))))))))
          ((case-lambda
             ((g$t$8303$1Bug2v)
              ((case-lambda
                 ((g$ls/false$8304$1Bug2v)
                  (if (if g$ls/false$8304$1Bug2v
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$8305$1Bug2v
                                 g$id*$8306$1Bug2v
                                 g$maker$8307$1Bug2v)
                               (if (g$id?$7254$1Bug2v g$name$8305$1Bug2v)
                                 (if (g$id?$7254$1Bug2v g$maker$8307$1Bug2v)
                                   (begin
                                     '#f
                                     (g$for-all$4960$1Bug2v
                                       g$id?$7254$1Bug2v
                                       g$id*$8306$1Bug2v))
                                   '#f)
                                 '#f)))
                            g$ls/false$8304$1Bug2v))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$8308$1Bug2v
                           g$id*$8309$1Bug2v
                           g$maker$8310$1Bug2v)
                         ((case-lambda
                            ((g$name*$8311$1Bug2v g$mk$8312$1Bug2v)
                             (g$bless$7495$1Bug2v
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$8312$1Bug2v
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$8311$1Bug2v))))
                                 (list
                                   'define-syntax
                                   g$name$8308$1Bug2v
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$8311$1Bug2v))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$8308$1Bug2v)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$8310$1Bug2v
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8310$1Bug2v)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$8311$1Bug2v))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$8310$1Bug2v)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$8312$1Bug2v
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$8302$1Bug2v
                            (g$syntax->datum$7646$1Bug2v g$id*$8309$1Bug2v))
                          (gensym))))
                      g$ls/false$8304$1Bug2v)
                    (g$syntax-violation$7643$1Bug2v
                      '#f
                      '"invalid syntax"
                      g$t$8303$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$8303$1Bug2v
                 '(_ any each-any any)))))
           g$stx$8300$1Bug2v)))))
   (g$time-macro$7509$1Bug2v
     g$time-macro$10969$1Bug2v
     (case-lambda
       ((g$stx$8316$1Bug2v)
        ((case-lambda
           ((g$t$8317$1Bug2v)
            ((case-lambda
               ((g$ls/false$8318$1Bug2v)
                (if g$ls/false$8318$1Bug2v
                  (apply
                    (case-lambda
                      ((g$expr$8319$1Bug2v)
                       ((case-lambda
                          ((g$str$8320$1Bug2v)
                           (g$bless$7495$1Bug2v
                             (list
                               'time-it
                               g$str$8320$1Bug2v
                               (list 'lambda '() g$expr$8319$1Bug2v)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6231$1Bug2v)))
                          (case-lambda
                            ((g$p$8323$1Bug2v g$e$8324$1Bug2v)
                             ((case-lambda
                                ((g$e$8325$1Bug2v g$p$8326$1Bug2v)
                                 (begin
                                   (write
                                     (g$syntax->datum$7646$1Bug2v
                                       g$expr$8319$1Bug2v)
                                     g$p$8326$1Bug2v)
                                   (g$e$8325$1Bug2v))))
                              g$e$8324$1Bug2v
                              g$p$8323$1Bug2v)))))))
                    g$ls/false$8318$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8317$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8317$1Bug2v '(_ any)))))
         g$stx$8316$1Bug2v))))
   (g$delay-macro$7510$1Bug2v
     g$delay-macro$10970$1Bug2v
     (case-lambda
       ((g$stx$8327$1Bug2v)
        ((case-lambda
           ((g$t$8328$1Bug2v)
            ((case-lambda
               ((g$ls/false$8329$1Bug2v)
                (if g$ls/false$8329$1Bug2v
                  (apply
                    (case-lambda
                      ((g$expr$8330$1Bug2v)
                       (g$bless$7495$1Bug2v
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$8330$1Bug2v)))))
                    g$ls/false$8329$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8328$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8328$1Bug2v '(_ any)))))
         g$stx$8327$1Bug2v))))
   (g$assert-macro$7511$1Bug2v
     g$assert-macro$10971$1Bug2v
     (case-lambda
       ((g$stx$8331$1Bug2v)
        ((case-lambda
           ((g$t$8332$1Bug2v)
            ((case-lambda
               ((g$ls/false$8333$1Bug2v)
                (if g$ls/false$8333$1Bug2v
                  (apply
                    (case-lambda
                      ((g$expr$8334$1Bug2v)
                       ((case-lambda
                          ((g$pos$8335$1Bug2v)
                           (g$bless$7495$1Bug2v
                             (list
                               'unless
                               g$expr$8334$1Bug2v
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$8334$1Bug2v)
                                 (list 'quote g$pos$8335$1Bug2v))))))
                        ((case-lambda
                           ((g$t$8336$1Bug2v)
                            (if g$t$8336$1Bug2v
                              g$t$8336$1Bug2v
                              (begin
                                '#f
                                (g$expression-position$7638$1Bug2v
                                  g$expr$8334$1Bug2v)))))
                         (g$expression-position$7638$1Bug2v
                           g$stx$8331$1Bug2v)))))
                    g$ls/false$8333$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8332$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8332$1Bug2v '(_ any)))))
         g$stx$8331$1Bug2v))))
   (g$endianness-macro$7512$1Bug2v
     g$endianness-macro$10972$1Bug2v
     (case-lambda
       ((g$stx$8337$1Bug2v)
        ((case-lambda
           ((g$t$8338$1Bug2v)
            ((case-lambda
               ((g$ls/false$8339$1Bug2v)
                (if g$ls/false$8339$1Bug2v
                  (apply
                    (case-lambda
                      ((g$e$8340$1Bug2v)
                       ((case-lambda
                          ((g$t$8341$1Bug2v)
                           (if (g$memv$4955$1Bug2v g$t$8341$1Bug2v '(little))
                             (g$bless$7495$1Bug2v ''little)
                             (if (g$memv$4955$1Bug2v g$t$8341$1Bug2v '(big))
                               (g$bless$7495$1Bug2v ''big)
                               (g$syntax-violation$7643$1Bug2v
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$8337$1Bug2v)))))
                        (g$syntax->datum$7646$1Bug2v g$e$8340$1Bug2v))))
                    g$ls/false$8339$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8338$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8338$1Bug2v '(_ any)))))
         g$stx$8337$1Bug2v))))
   (g$identifier-syntax-macro$7513$1Bug2v
     g$identifier-syntax-macro$10973$1Bug2v
     (case-lambda
       ((g$stx$8342$1Bug2v)
        ((case-lambda
           ((g$t$8343$1Bug2v)
            ((case-lambda
               ((g$ls/false$8344$1Bug2v)
                (if g$ls/false$8344$1Bug2v
                  (apply
                    (case-lambda
                      ((g$expr$8345$1Bug2v)
                       (g$bless$7495$1Bug2v
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$8345$1Bug2v))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$8345$1Bug2v)
                                   '(#'(e* ...))))))))))
                    g$ls/false$8344$1Bug2v)
                  ((case-lambda
                     ((g$t$8346$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$8347$1Bug2v)
                          (if (if g$ls/false$8347$1Bug2v
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$8348$1Bug2v
                                         g$expr1$8349$1Bug2v
                                         g$id2$8350$1Bug2v
                                         g$expr2$8351$1Bug2v
                                         g$expr3$8352$1Bug2v)
                                       (if (g$id?$7254$1Bug2v g$id1$8348$1Bug2v)
                                         (if (g$id?$7254$1Bug2v
                                               g$id2$8350$1Bug2v)
                                           (begin
                                             '#f
                                             (g$id?$7254$1Bug2v
                                               g$expr2$8351$1Bug2v))
                                           '#f)
                                         '#f)))
                                    g$ls/false$8347$1Bug2v))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$8353$1Bug2v
                                   g$expr1$8354$1Bug2v
                                   g$id2$8355$1Bug2v
                                   g$expr2$8356$1Bug2v
                                   g$expr3$8357$1Bug2v)
                                 (g$bless$7495$1Bug2v
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$8354$1Bug2v))
                                         (list
                                           (list 'set! 'id g$expr2$8356$1Bug2v)
                                           (list 'syntax g$expr3$8357$1Bug2v))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$8354$1Bug2v
                                               '(e* ...))))))))))
                              g$ls/false$8347$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$8346$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$8346$1Bug2v
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$8343$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8343$1Bug2v '(_ any)))))
         g$stx$8342$1Bug2v))))
   (g$do-macro$7514$1Bug2v
     g$do-macro$10974$1Bug2v
     (case-lambda
       ((g$stx$8358$1Bug2v)
        (letrec* ((g$bind$8359$1Bug2v
                    (case-lambda
                      ((g$x$8371$1Bug2v)
                       ((case-lambda
                          ((g$t$8372$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8373$1Bug2v)
                               (if g$ls/false$8373$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$x$8374$1Bug2v g$init$8375$1Bug2v)
                                      (list
                                        g$x$8374$1Bug2v
                                        g$init$8375$1Bug2v
                                        g$x$8374$1Bug2v)))
                                   g$ls/false$8373$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8376$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8377$1Bug2v)
                                         (if g$ls/false$8377$1Bug2v
                                           (apply
                                             (case-lambda
                                               ((g$x$8378$1Bug2v
                                                  g$init$8379$1Bug2v
                                                  g$step$8380$1Bug2v)
                                                (list
                                                  g$x$8378$1Bug2v
                                                  g$init$8379$1Bug2v
                                                  g$step$8380$1Bug2v)))
                                             g$ls/false$8377$1Bug2v)
                                           ((case-lambda
                                              ((g$t$8381$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$8382$1Bug2v)
                                                   (if g$ls/false$8382$1Bug2v
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$7643$1Bug2v
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$8358$1Bug2v)))
                                                       g$ls/false$8382$1Bug2v)
                                                     (g$syntax-violation$7643$1Bug2v
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8381$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$8381$1Bug2v
                                                  '_))))
                                            g$t$8376$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8376$1Bug2v
                                        '(any any any)))))
                                  g$t$8372$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8372$1Bug2v
                              '(any any)))))
                        g$x$8371$1Bug2v)))))
          ((case-lambda
             ((g$t$8360$1Bug2v)
              ((case-lambda
                 ((g$ls/false$8361$1Bug2v)
                  (if g$ls/false$8361$1Bug2v
                    (apply
                      (case-lambda
                        ((g$binding*$8362$1Bug2v
                           g$test$8363$1Bug2v
                           g$expr*$8364$1Bug2v
                           g$command*$8365$1Bug2v)
                         ((case-lambda
                            ((g$t$8366$1Bug2v)
                             ((case-lambda
                                ((g$ls/false$8367$1Bug2v)
                                 (if g$ls/false$8367$1Bug2v
                                   (apply
                                     (case-lambda
                                       ((g$x*$8368$1Bug2v
                                          g$init*$8369$1Bug2v
                                          g$step*$8370$1Bug2v)
                                        (if (g$valid-bound-ids?$7259$1Bug2v
                                              g$x*$8368$1Bug2v)
                                          (g$bless$7495$1Bug2v
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$8368$1Bug2v
                                                    (list
                                                      'if
                                                      g$test$8363$1Bug2v
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$8364$1Bug2v))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$8365$1Bug2v
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$8370$1Bug2v))))))))
                                              (cons 'loop g$init*$8369$1Bug2v)))
                                          (g$syntax-violation$7643$1Bug2v
                                            '#f
                                            '"invalid bindings"
                                            g$stx$8358$1Bug2v))))
                                     g$ls/false$8367$1Bug2v)
                                   (g$syntax-violation$7643$1Bug2v
                                     '#f
                                     '"invalid syntax"
                                     g$t$8366$1Bug2v))))
                              (g$syntax-dispatch$7532$1Bug2v
                                g$t$8366$1Bug2v
                                '#(each (any any any))))))
                          (map g$bind$8359$1Bug2v g$binding*$8362$1Bug2v))))
                      g$ls/false$8361$1Bug2v)
                    (g$syntax-violation$7643$1Bug2v
                      '#f
                      '"invalid syntax"
                      g$t$8360$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$8360$1Bug2v
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$8358$1Bug2v)))))
   (g$let*-macro$7515$1Bug2v
     g$let*-macro$10975$1Bug2v
     (case-lambda
       ((g$stx$8383$1Bug2v)
        ((case-lambda
           ((g$t$8384$1Bug2v)
            ((case-lambda
               ((g$ls/false$8385$1Bug2v)
                (if (if g$ls/false$8385$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$8386$1Bug2v
                               g$rhs*$8387$1Bug2v
                               g$b$8388$1Bug2v
                               g$b*$8389$1Bug2v)
                             (g$for-all$4960$1Bug2v
                               g$id?$7254$1Bug2v
                               g$lhs*$8386$1Bug2v)))
                          g$ls/false$8385$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$8390$1Bug2v
                         g$rhs*$8391$1Bug2v
                         g$b$8392$1Bug2v
                         g$b*$8393$1Bug2v)
                       (g$bless$7495$1Bug2v
                         ((letrec ((g$f$8394$1Bug2v
                                     (case-lambda
                                       ((g$x*$8395$1Bug2v)
                                        (if (null? g$x*$8395$1Bug2v)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$8392$1Bug2v
                                                g$b*$8393$1Bug2v)))
                                          (list
                                            'let
                                            (list (car g$x*$8395$1Bug2v))
                                            (g$f$8394$1Bug2v
                                              (cdr g$x*$8395$1Bug2v))))))))
                            g$f$8394$1Bug2v)
                          (map list g$lhs*$8390$1Bug2v g$rhs*$8391$1Bug2v)))))
                    g$ls/false$8385$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8384$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8384$1Bug2v
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8383$1Bug2v))))
   (g$or-macro$7516$1Bug2v
     g$or-macro$10976$1Bug2v
     (case-lambda
       ((g$stx$8396$1Bug2v)
        ((case-lambda
           ((g$t$8397$1Bug2v)
            ((case-lambda
               ((g$ls/false$8398$1Bug2v)
                (if g$ls/false$8398$1Bug2v
                  (apply (case-lambda (() '#f)) g$ls/false$8398$1Bug2v)
                  ((case-lambda
                     ((g$t$8399$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$8400$1Bug2v)
                          (if g$ls/false$8400$1Bug2v
                            (apply
                              (case-lambda
                                ((g$e$8401$1Bug2v g$e*$8402$1Bug2v)
                                 (g$bless$7495$1Bug2v
                                   ((letrec ((g$f$8403$1Bug2v
                                               (case-lambda
                                                 ((g$e$8404$1Bug2v
                                                    g$e*$8405$1Bug2v)
                                                  (if (null? g$e*$8405$1Bug2v)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8404$1Bug2v)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$8404$1Bug2v))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$8403$1Bug2v
                                                          (car g$e*$8405$1Bug2v)
                                                          (cdr g$e*$8405$1Bug2v)))))))))
                                      g$f$8403$1Bug2v)
                                    g$e$8401$1Bug2v
                                    g$e*$8402$1Bug2v))))
                              g$ls/false$8400$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$8399$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$8399$1Bug2v
                         '(_ any . each-any)))))
                   g$t$8397$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8397$1Bug2v '(_)))))
         g$stx$8396$1Bug2v))))
   (g$and-macro$7517$1Bug2v
     g$and-macro$10977$1Bug2v
     (case-lambda
       ((g$stx$8406$1Bug2v)
        ((case-lambda
           ((g$t$8407$1Bug2v)
            ((case-lambda
               ((g$ls/false$8408$1Bug2v)
                (if g$ls/false$8408$1Bug2v
                  (apply (case-lambda (() '#t)) g$ls/false$8408$1Bug2v)
                  ((case-lambda
                     ((g$t$8409$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$8410$1Bug2v)
                          (if g$ls/false$8410$1Bug2v
                            (apply
                              (case-lambda
                                ((g$e$8411$1Bug2v g$e*$8412$1Bug2v)
                                 (g$bless$7495$1Bug2v
                                   ((letrec ((g$f$8413$1Bug2v
                                               (case-lambda
                                                 ((g$e$8414$1Bug2v
                                                    g$e*$8415$1Bug2v)
                                                  (if (null? g$e*$8415$1Bug2v)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$8414$1Bug2v)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$8414$1Bug2v
                                                        (cons
                                                          (g$f$8413$1Bug2v
                                                            (car g$e*$8415$1Bug2v)
                                                            (cdr g$e*$8415$1Bug2v))
                                                          '(#f)))))))))
                                      g$f$8413$1Bug2v)
                                    g$e$8411$1Bug2v
                                    g$e*$8412$1Bug2v))))
                              g$ls/false$8410$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$8409$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$8409$1Bug2v
                         '(_ any . each-any)))))
                   g$t$8407$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8407$1Bug2v '(_)))))
         g$stx$8406$1Bug2v))))
   (g$cond-macro$7518$1Bug2v
     g$cond-macro$10978$1Bug2v
     (case-lambda
       ((g$stx$8416$1Bug2v)
        ((case-lambda
           ((g$t$8417$1Bug2v)
            ((case-lambda
               ((g$ls/false$8418$1Bug2v)
                (if g$ls/false$8418$1Bug2v
                  (apply
                    (case-lambda
                      ((g$cls$8419$1Bug2v g$cls*$8420$1Bug2v)
                       (g$bless$7495$1Bug2v
                         ((letrec ((g$f$8421$1Bug2v
                                     (case-lambda
                                       ((g$cls$8422$1Bug2v g$cls*$8423$1Bug2v)
                                        (if (null? g$cls*$8423$1Bug2v)
                                          ((case-lambda
                                             ((g$t$8424$1Bug2v)
                                              ((case-lambda
                                                 ((g$ls/false$8425$1Bug2v)
                                                  (if g$ls/false$8425$1Bug2v
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8426$1Bug2v
                                                           g$e*$8427$1Bug2v)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$8426$1Bug2v
                                                             g$e*$8427$1Bug2v))))
                                                      g$ls/false$8425$1Bug2v)
                                                    ((case-lambda
                                                       ((g$t$8428$1Bug2v)
                                                        ((case-lambda
                                                           ((g$ls/false$8429$1Bug2v)
                                                            (if g$ls/false$8429$1Bug2v
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8430$1Bug2v
                                                                     g$p$8431$1Bug2v)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8430$1Bug2v))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8431$1Bug2v
                                                                         '(t))))))
                                                                g$ls/false$8429$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$t$8432$1Bug2v)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8433$1Bug2v)
                                                                      (if g$ls/false$8433$1Bug2v
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8434$1Bug2v)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$8434$1Bug2v
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$8433$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$t$8435$1Bug2v)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8436$1Bug2v)
                                                                                (if g$ls/false$8436$1Bug2v
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8437$1Bug2v
                                                                                         g$e*$8438$1Bug2v)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8437$1Bug2v
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8438$1Bug2v))))
                                                                                    g$ls/false$8436$1Bug2v)
                                                                                  ((case-lambda
                                                                                     ((g$t$8439$1Bug2v)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8440$1Bug2v)
                                                                                          (if g$ls/false$8440$1Bug2v
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7643$1Bug2v
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8416$1Bug2v)))
                                                                                              g$ls/false$8440$1Bug2v)
                                                                                            (g$syntax-violation$7643$1Bug2v
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8439$1Bug2v))))
                                                                                       (g$syntax-dispatch$7532$1Bug2v
                                                                                         g$t$8439$1Bug2v
                                                                                         '_))))
                                                                                   g$t$8435$1Bug2v))))
                                                                             (g$syntax-dispatch$7532$1Bug2v
                                                                               g$t$8435$1Bug2v
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8432$1Bug2v))))
                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                     g$t$8432$1Bug2v
                                                                     '(any)))))
                                                               g$t$8428$1Bug2v))))
                                                         (g$syntax-dispatch$7532$1Bug2v
                                                           g$t$8428$1Bug2v
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8424$1Bug2v))))
                                               (g$syntax-dispatch$7532$1Bug2v
                                                 g$t$8424$1Bug2v
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8422$1Bug2v)
                                          ((case-lambda
                                             ((g$t$8441$1Bug2v)
                                              ((case-lambda
                                                 ((g$ls/false$8442$1Bug2v)
                                                  (if g$ls/false$8442$1Bug2v
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$8443$1Bug2v
                                                           g$e*$8444$1Bug2v)
                                                         (g$syntax-violation$7643$1Bug2v
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$8416$1Bug2v)))
                                                      g$ls/false$8442$1Bug2v)
                                                    ((case-lambda
                                                       ((g$t$8445$1Bug2v)
                                                        ((case-lambda
                                                           ((g$ls/false$8446$1Bug2v)
                                                            (if g$ls/false$8446$1Bug2v
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$8447$1Bug2v
                                                                     g$p$8448$1Bug2v)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$8447$1Bug2v))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$8448$1Bug2v
                                                                         '(t))
                                                                       (g$f$8421$1Bug2v
                                                                         (car g$cls*$8423$1Bug2v)
                                                                         (cdr g$cls*$8423$1Bug2v))))))
                                                                g$ls/false$8446$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$t$8449$1Bug2v)
                                                                  ((case-lambda
                                                                     ((g$ls/false$8450$1Bug2v)
                                                                      (if g$ls/false$8450$1Bug2v
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$8451$1Bug2v)
                                                                             (list
                                                                               'or
                                                                               g$e$8451$1Bug2v
                                                                               (g$f$8421$1Bug2v
                                                                                 (car g$cls*$8423$1Bug2v)
                                                                                 (cdr g$cls*$8423$1Bug2v)))))
                                                                          g$ls/false$8450$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$t$8452$1Bug2v)
                                                                            ((case-lambda
                                                                               ((g$ls/false$8453$1Bug2v)
                                                                                (if g$ls/false$8453$1Bug2v
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$8454$1Bug2v
                                                                                         g$e*$8455$1Bug2v)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$8454$1Bug2v
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$8455$1Bug2v)
                                                                                         (g$f$8421$1Bug2v
                                                                                           (car g$cls*$8423$1Bug2v)
                                                                                           (cdr g$cls*$8423$1Bug2v)))))
                                                                                    g$ls/false$8453$1Bug2v)
                                                                                  ((case-lambda
                                                                                     ((g$t$8456$1Bug2v)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$8457$1Bug2v)
                                                                                          (if g$ls/false$8457$1Bug2v
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$7643$1Bug2v
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$8416$1Bug2v)))
                                                                                              g$ls/false$8457$1Bug2v)
                                                                                            (g$syntax-violation$7643$1Bug2v
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$8456$1Bug2v))))
                                                                                       (g$syntax-dispatch$7532$1Bug2v
                                                                                         g$t$8456$1Bug2v
                                                                                         '_))))
                                                                                   g$t$8452$1Bug2v))))
                                                                             (g$syntax-dispatch$7532$1Bug2v
                                                                               g$t$8452$1Bug2v
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$8449$1Bug2v))))
                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                     g$t$8449$1Bug2v
                                                                     '(any)))))
                                                               g$t$8445$1Bug2v))))
                                                         (g$syntax-dispatch$7532$1Bug2v
                                                           g$t$8445$1Bug2v
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$8441$1Bug2v))))
                                               (g$syntax-dispatch$7532$1Bug2v
                                                 g$t$8441$1Bug2v
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$8422$1Bug2v))))))
                            g$f$8421$1Bug2v)
                          g$cls$8419$1Bug2v
                          g$cls*$8420$1Bug2v))))
                    g$ls/false$8418$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8417$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8417$1Bug2v
               '(_ any . each-any)))))
         g$stx$8416$1Bug2v))))
   (g$do-include$7519$1Bug2v
     g$do-include$10979$1Bug2v
     (case-lambda
       ((g$stx$8458$1Bug2v g$id$8459$1Bug2v g$filename$8460$1Bug2v)
        ((case-lambda
           ((g$filename$8461$1Bug2v)
            (begin
              (if (not (if (string? g$filename$8461$1Bug2v)
                         (begin '#f (g$id?$7254$1Bug2v g$id$8459$1Bug2v))
                         '#f))
                (g$syntax-violation$7643$1Bug2v
                  '#f
                  '"invalid syntax"
                  g$stx$8458$1Bug2v)
                (void))
              (cons
                (g$bless$7495$1Bug2v 'begin)
                (g$with-input-from-file$6265$1Bug2v
                  g$filename$8461$1Bug2v
                  (case-lambda
                    (()
                     ((letrec ((g$f$8462$1Bug2v
                                 (case-lambda
                                   ((g$ls$8463$1Bug2v)
                                    ((case-lambda
                                       ((g$x$8464$1Bug2v)
                                        (if (eof-object? g$x$8464$1Bug2v)
                                          (reverse g$ls$8463$1Bug2v)
                                          (g$f$8462$1Bug2v
                                            (cons
                                              (g$datum->stx$7237$1Bug2v
                                                g$id$8459$1Bug2v
                                                g$x$8464$1Bug2v)
                                              g$ls$8463$1Bug2v)))))
                                     (read-annotated))))))
                        g$f$8462$1Bug2v)
                      '()))))))))
         (g$stx->datum$7265$1Bug2v g$filename$8460$1Bug2v)))))
   (g$include-macro$7520$1Bug2v
     g$include-macro$10980$1Bug2v
     (case-lambda
       ((g$e$8465$1Bug2v)
        ((case-lambda
           ((g$t$8466$1Bug2v)
            ((case-lambda
               ((g$ls/false$8467$1Bug2v)
                (if g$ls/false$8467$1Bug2v
                  (apply
                    (case-lambda
                      ((g$id$8468$1Bug2v g$filename$8469$1Bug2v)
                       (g$do-include$7519$1Bug2v
                         g$e$8465$1Bug2v
                         g$id$8468$1Bug2v
                         g$filename$8469$1Bug2v)))
                    g$ls/false$8467$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8466$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8466$1Bug2v '(any any)))))
         g$e$8465$1Bug2v))))
   (g$include-into-macro$7521$1Bug2v
     g$include-into-macro$10981$1Bug2v
     (case-lambda
       ((g$e$8470$1Bug2v)
        ((case-lambda
           ((g$t$8471$1Bug2v)
            ((case-lambda
               ((g$ls/false$8472$1Bug2v)
                (if g$ls/false$8472$1Bug2v
                  (apply
                    (case-lambda
                      ((g$id$8473$1Bug2v g$filename$8474$1Bug2v)
                       (g$do-include$7519$1Bug2v
                         g$e$8470$1Bug2v
                         g$id$8473$1Bug2v
                         g$filename$8474$1Bug2v)))
                    g$ls/false$8472$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8471$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$8471$1Bug2v '(_ any any)))))
         g$e$8470$1Bug2v))))
   (g$syntax-rules-macro$7522$1Bug2v
     g$syntax-rules-macro$10982$1Bug2v
     (case-lambda
       ((g$e$8475$1Bug2v)
        ((case-lambda
           ((g$t$8476$1Bug2v)
            ((case-lambda
               ((g$ls/false$8477$1Bug2v)
                (if g$ls/false$8477$1Bug2v
                  (apply
                    (case-lambda
                      ((g$lits$8478$1Bug2v
                         g$pat*$8479$1Bug2v
                         g$tmp*$8480$1Bug2v)
                       (begin
                         (g$verify-literals$7535$1Bug2v
                           g$lits$8478$1Bug2v
                           g$e$8475$1Bug2v)
                         (g$bless$7495$1Bug2v
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$8478$1Bug2v
                                   (map (case-lambda
                                          ((g$pat$8481$1Bug2v g$tmp$8482$1Bug2v)
                                           ((case-lambda
                                              ((g$t$8483$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$8484$1Bug2v)
                                                   (if g$ls/false$8484$1Bug2v
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8485$1Bug2v)
                                                          (list
                                                            (cons
                                                              'g
                                                              g$rest$8485$1Bug2v)
                                                            (list
                                                              'syntax
                                                              g$tmp$8482$1Bug2v))))
                                                       g$ls/false$8484$1Bug2v)
                                                     ((case-lambda
                                                        ((g$t$8486$1Bug2v)
                                                         ((case-lambda
                                                            ((g$ls/false$8487$1Bug2v)
                                                             (if g$ls/false$8487$1Bug2v
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7643$1Bug2v
                                                                      '#f
                                                                      '"invalid syntax-rules pattern"
                                                                      g$e$8475$1Bug2v
                                                                      g$pat$8481$1Bug2v)))
                                                                 g$ls/false$8487$1Bug2v)
                                                               (g$syntax-violation$7643$1Bug2v
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$8486$1Bug2v))))
                                                          (g$syntax-dispatch$7532$1Bug2v
                                                            g$t$8486$1Bug2v
                                                            '_))))
                                                      g$t$8483$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$8483$1Bug2v
                                                  '(_ . any)))))
                                            g$pat$8481$1Bug2v)))
                                        g$pat*$8479$1Bug2v
                                        g$tmp*$8480$1Bug2v)))))))))
                    g$ls/false$8477$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$8476$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$8476$1Bug2v
               '(_ each-any . #(each (any any)))))))
         g$e$8475$1Bug2v))))
   (g$quasiquote-macro$7523$1Bug2v
     g$quasiquote-macro$10983$1Bug2v
     ((case-lambda
        (()
         (letrec* ((g$datum$8488$1Bug2v
                     (case-lambda
                       ((g$x$8619$1Bug2v)
                        (list
                          (g$scheme-stx$7475$1Bug2v 'quote)
                          (g$mkstx$7242$1Bug2v g$x$8619$1Bug2v '() '() '())))))
                   (g$quasicons*$8504$1Bug2v
                     (case-lambda
                       ((g$x$8615$1Bug2v g$y$8616$1Bug2v)
                        ((letrec ((g$f$8617$1Bug2v
                                    (case-lambda
                                      ((g$x$8618$1Bug2v)
                                       (if (null? g$x$8618$1Bug2v)
                                         g$y$8616$1Bug2v
                                         (g$quasicons$8505$1Bug2v
                                           (car g$x$8618$1Bug2v)
                                           (g$f$8617$1Bug2v
                                             (cdr g$x$8618$1Bug2v))))))))
                           g$f$8617$1Bug2v)
                         g$x$8615$1Bug2v))))
                   (g$quasicons$8505$1Bug2v
                     (case-lambda
                       ((g$x$8596$1Bug2v g$y$8597$1Bug2v)
                        ((case-lambda
                           ((g$t$8598$1Bug2v)
                            ((case-lambda
                               ((g$ls/false$8599$1Bug2v)
                                (if g$ls/false$8599$1Bug2v
                                  (apply
                                    (case-lambda
                                      ((g$dy$8600$1Bug2v)
                                       ((case-lambda
                                          ((g$t$8601$1Bug2v)
                                           ((case-lambda
                                              ((g$ls/false$8602$1Bug2v)
                                               (if g$ls/false$8602$1Bug2v
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$8603$1Bug2v)
                                                      (list
                                                        (g$scheme-stx$7475$1Bug2v
                                                          'quote)
                                                        (cons
                                                          g$dx$8603$1Bug2v
                                                          g$dy$8600$1Bug2v))))
                                                   g$ls/false$8602$1Bug2v)
                                                 ((case-lambda
                                                    ((g$t$8604$1Bug2v)
                                                     ((case-lambda
                                                        ((g$ls/false$8605$1Bug2v)
                                                         (if g$ls/false$8605$1Bug2v
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$8606$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8607$1Bug2v)
                                                                        (if g$ls/false$8607$1Bug2v
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$7475$1Bug2v
                                                                                   'list)
                                                                                 g$x$8596$1Bug2v)))
                                                                            g$ls/false$8607$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$8608$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8609$1Bug2v)
                                                                                  (if g$ls/false$8609$1Bug2v
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$7475$1Bug2v
                                                                                             'cons)
                                                                                           g$x$8596$1Bug2v
                                                                                           g$y$8597$1Bug2v)))
                                                                                      g$ls/false$8609$1Bug2v)
                                                                                    (g$syntax-violation$7643$1Bug2v
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$8608$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$8608$1Bug2v
                                                                                 '_))))
                                                                           g$t$8606$1Bug2v))))
                                                                     (g$syntax-dispatch$7532$1Bug2v
                                                                       g$t$8606$1Bug2v
                                                                       '()))))
                                                                 g$dy$8600$1Bug2v)))
                                                             g$ls/false$8605$1Bug2v)
                                                           (g$syntax-violation$7643$1Bug2v
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$8604$1Bug2v))))
                                                      (g$syntax-dispatch$7532$1Bug2v
                                                        g$t$8604$1Bug2v
                                                        '_))))
                                                  g$t$8601$1Bug2v))))
                                            (g$syntax-dispatch$7532$1Bug2v
                                              g$t$8601$1Bug2v
                                              '(#(scheme-id quote) any)))))
                                        g$x$8596$1Bug2v)))
                                    g$ls/false$8599$1Bug2v)
                                  ((case-lambda
                                     ((g$t$8610$1Bug2v)
                                      ((case-lambda
                                         ((g$ls/false$8611$1Bug2v)
                                          (if g$ls/false$8611$1Bug2v
                                            (apply
                                              (case-lambda
                                                ((g$stuff$8612$1Bug2v)
                                                 (g$cons*$4962$1Bug2v
                                                   (g$scheme-stx$7475$1Bug2v
                                                     'list)
                                                   g$x$8596$1Bug2v
                                                   g$stuff$8612$1Bug2v)))
                                              g$ls/false$8611$1Bug2v)
                                            ((case-lambda
                                               ((g$t$8613$1Bug2v)
                                                ((case-lambda
                                                   ((g$ls/false$8614$1Bug2v)
                                                    (if g$ls/false$8614$1Bug2v
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$7475$1Bug2v
                                                               'cons)
                                                             g$x$8596$1Bug2v
                                                             g$y$8597$1Bug2v)))
                                                        g$ls/false$8614$1Bug2v)
                                                      (g$syntax-violation$7643$1Bug2v
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$8613$1Bug2v))))
                                                 (g$syntax-dispatch$7532$1Bug2v
                                                   g$t$8613$1Bug2v
                                                   '_))))
                                             g$t$8610$1Bug2v))))
                                       (g$syntax-dispatch$7532$1Bug2v
                                         g$t$8610$1Bug2v
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$8598$1Bug2v))))
                             (g$syntax-dispatch$7532$1Bug2v
                               g$t$8598$1Bug2v
                               '(#(scheme-id quote) any)))))
                         g$y$8597$1Bug2v))))
                   (g$quasiappend$8506$1Bug2v
                     (case-lambda
                       ((g$x$8583$1Bug2v g$y$8584$1Bug2v)
                        ((case-lambda
                           ((g$ls$8585$1Bug2v)
                            (if (null? g$ls$8585$1Bug2v)
                              (list (g$scheme-stx$7475$1Bug2v 'quote) '())
                              (if (null? (cdr g$ls$8585$1Bug2v))
                                (car g$ls$8585$1Bug2v)
                                (g$cons*$4962$1Bug2v
                                  (g$scheme-stx$7475$1Bug2v 'append)
                                  g$ls$8585$1Bug2v)))))
                         ((letrec ((g$f$8586$1Bug2v
                                     (case-lambda
                                       ((g$x$8587$1Bug2v)
                                        (if (null? g$x$8587$1Bug2v)
                                          ((case-lambda
                                             ((g$t$8588$1Bug2v)
                                              ((case-lambda
                                                 ((g$ls/false$8589$1Bug2v)
                                                  (if g$ls/false$8589$1Bug2v
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$8589$1Bug2v)
                                                    ((case-lambda
                                                       ((g$t$8590$1Bug2v)
                                                        ((case-lambda
                                                           ((g$ls/false$8591$1Bug2v)
                                                            (if g$ls/false$8591$1Bug2v
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$8584$1Bug2v)))
                                                                g$ls/false$8591$1Bug2v)
                                                              (g$syntax-violation$7643$1Bug2v
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8590$1Bug2v))))
                                                         (g$syntax-dispatch$7532$1Bug2v
                                                           g$t$8590$1Bug2v
                                                           '_))))
                                                     g$t$8588$1Bug2v))))
                                               (g$syntax-dispatch$7532$1Bug2v
                                                 g$t$8588$1Bug2v
                                                 '(#(scheme-id quote) ())))))
                                           g$y$8584$1Bug2v)
                                          ((case-lambda
                                             ((g$t$8592$1Bug2v)
                                              ((case-lambda
                                                 ((g$ls/false$8593$1Bug2v)
                                                  (if g$ls/false$8593$1Bug2v
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$8586$1Bug2v
                                                           (cdr g$x$8587$1Bug2v))))
                                                      g$ls/false$8593$1Bug2v)
                                                    ((case-lambda
                                                       ((g$t$8594$1Bug2v)
                                                        ((case-lambda
                                                           ((g$ls/false$8595$1Bug2v)
                                                            (if g$ls/false$8595$1Bug2v
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$8587$1Bug2v)
                                                                     (g$f$8586$1Bug2v
                                                                       (cdr g$x$8587$1Bug2v)))))
                                                                g$ls/false$8595$1Bug2v)
                                                              (g$syntax-violation$7643$1Bug2v
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8594$1Bug2v))))
                                                         (g$syntax-dispatch$7532$1Bug2v
                                                           g$t$8594$1Bug2v
                                                           '_))))
                                                     g$t$8592$1Bug2v))))
                                               (g$syntax-dispatch$7532$1Bug2v
                                                 g$t$8592$1Bug2v
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$8587$1Bug2v)))))))
                            g$f$8586$1Bug2v)
                          g$x$8583$1Bug2v)))))
                   (g$quasivector$8507$1Bug2v
                     (case-lambda
                       ((g$x$8558$1Bug2v)
                        ((case-lambda
                           ((g$pat-x$8559$1Bug2v)
                            ((case-lambda
                               ((g$t$8560$1Bug2v)
                                ((case-lambda
                                   ((g$ls/false$8561$1Bug2v)
                                    (if g$ls/false$8561$1Bug2v
                                      (apply
                                        (case-lambda
                                          ((g$x*$8562$1Bug2v)
                                           (list
                                             (g$scheme-stx$7475$1Bug2v 'quote)
                                             (list->vector g$x*$8562$1Bug2v))))
                                        g$ls/false$8561$1Bug2v)
                                      ((case-lambda
                                         ((g$t$8563$1Bug2v)
                                          ((case-lambda
                                             ((g$ls/false$8564$1Bug2v)
                                              (if g$ls/false$8564$1Bug2v
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$8565$1Bug2v
                                                                 (case-lambda
                                                                   ((g$x$8566$1Bug2v
                                                                      g$k$8567$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$t$8568$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8569$1Bug2v)
                                                                            (if g$ls/false$8569$1Bug2v
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$8570$1Bug2v)
                                                                                   (g$k$8567$1Bug2v
                                                                                     (map (case-lambda
                                                                                            ((g$x$8571$1Bug2v)
                                                                                             (list
                                                                                               (g$scheme-stx$7475$1Bug2v
                                                                                                 'quote)
                                                                                               g$x$8571$1Bug2v)))
                                                                                          g$x*$8570$1Bug2v))))
                                                                                g$ls/false$8569$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$t$8572$1Bug2v)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$8573$1Bug2v)
                                                                                      (if g$ls/false$8573$1Bug2v
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$8574$1Bug2v)
                                                                                             (g$k$8567$1Bug2v
                                                                                               g$x*$8574$1Bug2v)))
                                                                                          g$ls/false$8573$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$t$8575$1Bug2v)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$8576$1Bug2v)
                                                                                                (if g$ls/false$8576$1Bug2v
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$8577$1Bug2v
                                                                                                         g$y$8578$1Bug2v)
                                                                                                       (g$f$8565$1Bug2v
                                                                                                         g$y$8578$1Bug2v
                                                                                                         (case-lambda
                                                                                                           ((g$ls$8579$1Bug2v)
                                                                                                            (g$k$8567$1Bug2v
                                                                                                              (cons
                                                                                                                g$x$8577$1Bug2v
                                                                                                                g$ls$8579$1Bug2v)))))))
                                                                                                    g$ls/false$8576$1Bug2v)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$8580$1Bug2v)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$8581$1Bug2v)
                                                                                                          (if g$ls/false$8581$1Bug2v
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$7475$1Bug2v
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$8559$1Bug2v)))
                                                                                                              g$ls/false$8581$1Bug2v)
                                                                                                            (g$syntax-violation$7643$1Bug2v
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$8580$1Bug2v))))
                                                                                                       (g$syntax-dispatch$7532$1Bug2v
                                                                                                         g$t$8580$1Bug2v
                                                                                                         '_))))
                                                                                                   g$t$8575$1Bug2v))))
                                                                                             (g$syntax-dispatch$7532$1Bug2v
                                                                                               g$t$8575$1Bug2v
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$8572$1Bug2v))))
                                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                                     g$t$8572$1Bug2v
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$8568$1Bug2v))))
                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                           g$t$8568$1Bug2v
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$8566$1Bug2v)))))
                                                        g$f$8565$1Bug2v)
                                                      g$x$8558$1Bug2v
                                                      (case-lambda
                                                        ((g$ls$8582$1Bug2v)
                                                         (g$cons*$4962$1Bug2v
                                                           (g$scheme-stx$7475$1Bug2v
                                                             'vector)
                                                           g$ls$8582$1Bug2v))))))
                                                  g$ls/false$8564$1Bug2v)
                                                (g$syntax-violation$7643$1Bug2v
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$8563$1Bug2v))))
                                           (g$syntax-dispatch$7532$1Bug2v
                                             g$t$8563$1Bug2v
                                             '_))))
                                       g$t$8560$1Bug2v))))
                                 (g$syntax-dispatch$7532$1Bug2v
                                   g$t$8560$1Bug2v
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$8559$1Bug2v)))
                         g$x$8558$1Bug2v))))
                   (g$vquasi$8508$1Bug2v
                     (case-lambda
                       ((g$p$8541$1Bug2v g$lev$8542$1Bug2v)
                        ((case-lambda
                           ((g$t$8543$1Bug2v)
                            ((case-lambda
                               ((g$ls/false$8544$1Bug2v)
                                (if g$ls/false$8544$1Bug2v
                                  (apply
                                    (case-lambda
                                      ((g$p$8545$1Bug2v g$q$8546$1Bug2v)
                                       ((case-lambda
                                          ((g$t$8547$1Bug2v)
                                           ((case-lambda
                                              ((g$ls/false$8548$1Bug2v)
                                               (if g$ls/false$8548$1Bug2v
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$8549$1Bug2v)
                                                      (if (= g$lev$8542$1Bug2v
                                                             '0)
                                                        (g$quasicons*$8504$1Bug2v
                                                          g$p$8549$1Bug2v
                                                          (g$vquasi$8508$1Bug2v
                                                            g$q$8546$1Bug2v
                                                            g$lev$8542$1Bug2v))
                                                        (g$quasicons$8505$1Bug2v
                                                          (g$quasicons$8505$1Bug2v
                                                            (g$datum$8488$1Bug2v
                                                              'unquote)
                                                            (g$quasi$8509$1Bug2v
                                                              g$p$8549$1Bug2v
                                                              (- g$lev$8542$1Bug2v
                                                                 '1)))
                                                          (g$vquasi$8508$1Bug2v
                                                            g$q$8546$1Bug2v
                                                            g$lev$8542$1Bug2v)))))
                                                   g$ls/false$8548$1Bug2v)
                                                 ((case-lambda
                                                    ((g$t$8550$1Bug2v)
                                                     ((case-lambda
                                                        ((g$ls/false$8551$1Bug2v)
                                                         (if g$ls/false$8551$1Bug2v
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$8552$1Bug2v)
                                                                (if (= g$lev$8542$1Bug2v
                                                                       '0)
                                                                  (g$quasiappend$8506$1Bug2v
                                                                    g$p$8552$1Bug2v
                                                                    (g$vquasi$8508$1Bug2v
                                                                      g$q$8546$1Bug2v
                                                                      g$lev$8542$1Bug2v))
                                                                  (g$quasicons$8505$1Bug2v
                                                                    (g$quasicons$8505$1Bug2v
                                                                      (g$datum$8488$1Bug2v
                                                                        'unquote-splicing)
                                                                      (g$quasi$8509$1Bug2v
                                                                        g$p$8552$1Bug2v
                                                                        (- g$lev$8542$1Bug2v
                                                                           '1)))
                                                                    (g$vquasi$8508$1Bug2v
                                                                      g$q$8546$1Bug2v
                                                                      g$lev$8542$1Bug2v)))))
                                                             g$ls/false$8551$1Bug2v)
                                                           ((case-lambda
                                                              ((g$t$8553$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$ls/false$8554$1Bug2v)
                                                                   (if g$ls/false$8554$1Bug2v
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$8555$1Bug2v)
                                                                          (g$quasicons$8505$1Bug2v
                                                                            (g$quasi$8509$1Bug2v
                                                                              g$p$8555$1Bug2v
                                                                              g$lev$8542$1Bug2v)
                                                                            (g$vquasi$8508$1Bug2v
                                                                              g$q$8546$1Bug2v
                                                                              g$lev$8542$1Bug2v))))
                                                                       g$ls/false$8554$1Bug2v)
                                                                     (g$syntax-violation$7643$1Bug2v
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$8553$1Bug2v))))
                                                                (g$syntax-dispatch$7532$1Bug2v
                                                                  g$t$8553$1Bug2v
                                                                  'any))))
                                                            g$t$8550$1Bug2v))))
                                                      (g$syntax-dispatch$7532$1Bug2v
                                                        g$t$8550$1Bug2v
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$8547$1Bug2v))))
                                            (g$syntax-dispatch$7532$1Bug2v
                                              g$t$8547$1Bug2v
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$8545$1Bug2v)))
                                    g$ls/false$8544$1Bug2v)
                                  ((case-lambda
                                     ((g$t$8556$1Bug2v)
                                      ((case-lambda
                                         ((g$ls/false$8557$1Bug2v)
                                          (if g$ls/false$8557$1Bug2v
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$7475$1Bug2v
                                                     'quote)
                                                   '())))
                                              g$ls/false$8557$1Bug2v)
                                            (g$syntax-violation$7643$1Bug2v
                                              '#f
                                              '"invalid syntax"
                                              g$t$8556$1Bug2v))))
                                       (g$syntax-dispatch$7532$1Bug2v
                                         g$t$8556$1Bug2v
                                         '()))))
                                   g$t$8543$1Bug2v))))
                             (g$syntax-dispatch$7532$1Bug2v
                               g$t$8543$1Bug2v
                               '(any . any)))))
                         g$p$8541$1Bug2v))))
                   (g$quasi$8509$1Bug2v
                     (case-lambda
                       ((g$p$8514$1Bug2v g$lev$8515$1Bug2v)
                        ((case-lambda
                           ((g$t$8516$1Bug2v)
                            ((case-lambda
                               ((g$ls/false$8517$1Bug2v)
                                (if g$ls/false$8517$1Bug2v
                                  (apply
                                    (case-lambda
                                      ((g$p$8518$1Bug2v)
                                       (if (= g$lev$8515$1Bug2v '0)
                                         g$p$8518$1Bug2v
                                         (g$quasicons$8505$1Bug2v
                                           (g$datum$8488$1Bug2v 'unquote)
                                           (g$quasi$8509$1Bug2v
                                             (list g$p$8518$1Bug2v)
                                             (- g$lev$8515$1Bug2v '1))))))
                                    g$ls/false$8517$1Bug2v)
                                  ((case-lambda
                                     ((g$t$8519$1Bug2v)
                                      ((case-lambda
                                         ((g$ls/false$8520$1Bug2v)
                                          (if g$ls/false$8520$1Bug2v
                                            (apply
                                              (case-lambda
                                                ((g$p$8521$1Bug2v
                                                   g$q$8522$1Bug2v)
                                                 (if (= g$lev$8515$1Bug2v '0)
                                                   (g$quasicons*$8504$1Bug2v
                                                     g$p$8521$1Bug2v
                                                     (g$quasi$8509$1Bug2v
                                                       g$q$8522$1Bug2v
                                                       g$lev$8515$1Bug2v))
                                                   (g$quasicons$8505$1Bug2v
                                                     (g$quasicons$8505$1Bug2v
                                                       (g$datum$8488$1Bug2v
                                                         'unquote)
                                                       (g$quasi$8509$1Bug2v
                                                         g$p$8521$1Bug2v
                                                         (- g$lev$8515$1Bug2v
                                                            '1)))
                                                     (g$quasi$8509$1Bug2v
                                                       g$q$8522$1Bug2v
                                                       g$lev$8515$1Bug2v)))))
                                              g$ls/false$8520$1Bug2v)
                                            ((case-lambda
                                               ((g$t$8523$1Bug2v)
                                                ((case-lambda
                                                   ((g$ls/false$8524$1Bug2v)
                                                    (if g$ls/false$8524$1Bug2v
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$8525$1Bug2v
                                                             g$q$8526$1Bug2v)
                                                           (if (= g$lev$8515$1Bug2v
                                                                  '0)
                                                             (g$quasiappend$8506$1Bug2v
                                                               g$p$8525$1Bug2v
                                                               (g$quasi$8509$1Bug2v
                                                                 g$q$8526$1Bug2v
                                                                 g$lev$8515$1Bug2v))
                                                             (g$quasicons$8505$1Bug2v
                                                               (g$quasicons$8505$1Bug2v
                                                                 (g$datum$8488$1Bug2v
                                                                   'unquote-splicing)
                                                                 (g$quasi$8509$1Bug2v
                                                                   g$p$8525$1Bug2v
                                                                   (- g$lev$8515$1Bug2v
                                                                      '1)))
                                                               (g$quasi$8509$1Bug2v
                                                                 g$q$8526$1Bug2v
                                                                 g$lev$8515$1Bug2v)))))
                                                        g$ls/false$8524$1Bug2v)
                                                      ((case-lambda
                                                         ((g$t$8527$1Bug2v)
                                                          ((case-lambda
                                                             ((g$ls/false$8528$1Bug2v)
                                                              (if g$ls/false$8528$1Bug2v
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$8529$1Bug2v)
                                                                     (g$quasicons$8505$1Bug2v
                                                                       (g$datum$8488$1Bug2v
                                                                         'quasiquote)
                                                                       (g$quasi$8509$1Bug2v
                                                                         (list
                                                                           g$p$8529$1Bug2v)
                                                                         (+ g$lev$8515$1Bug2v
                                                                            '1)))))
                                                                  g$ls/false$8528$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$t$8530$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8531$1Bug2v)
                                                                        (if g$ls/false$8531$1Bug2v
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$8532$1Bug2v
                                                                                 g$q$8533$1Bug2v)
                                                                               (g$quasicons$8505$1Bug2v
                                                                                 (g$quasi$8509$1Bug2v
                                                                                   g$p$8532$1Bug2v
                                                                                   g$lev$8515$1Bug2v)
                                                                                 (g$quasi$8509$1Bug2v
                                                                                   g$q$8533$1Bug2v
                                                                                   g$lev$8515$1Bug2v))))
                                                                            g$ls/false$8531$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$8534$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8535$1Bug2v)
                                                                                  (if (if g$ls/false$8535$1Bug2v
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$8536$1Bug2v)
                                                                                               (not (g$stx?$7226$1Bug2v
                                                                                                      g$x$8536$1Bug2v))))
                                                                                            g$ls/false$8535$1Bug2v))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$8537$1Bug2v)
                                                                                         (g$quasivector$8507$1Bug2v
                                                                                           (g$vquasi$8508$1Bug2v
                                                                                             g$x$8537$1Bug2v
                                                                                             g$lev$8515$1Bug2v))))
                                                                                      g$ls/false$8535$1Bug2v)
                                                                                    ((case-lambda
                                                                                       ((g$t$8538$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8539$1Bug2v)
                                                                                            (if g$ls/false$8539$1Bug2v
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8540$1Bug2v)
                                                                                                   (list
                                                                                                     (g$scheme-stx$7475$1Bug2v
                                                                                                       'quote)
                                                                                                     g$p$8540$1Bug2v)))
                                                                                                g$ls/false$8539$1Bug2v)
                                                                                              (g$syntax-violation$7643$1Bug2v
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$8538$1Bug2v))))
                                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                                           g$t$8538$1Bug2v
                                                                                           'any))))
                                                                                     g$t$8534$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$8534$1Bug2v
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$8530$1Bug2v))))
                                                                     (g$syntax-dispatch$7532$1Bug2v
                                                                       g$t$8530$1Bug2v
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$8527$1Bug2v))))
                                                           (g$syntax-dispatch$7532$1Bug2v
                                                             g$t$8527$1Bug2v
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$8523$1Bug2v))))
                                                 (g$syntax-dispatch$7532$1Bug2v
                                                   g$t$8523$1Bug2v
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8519$1Bug2v))))
                                       (g$syntax-dispatch$7532$1Bug2v
                                         g$t$8519$1Bug2v
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$8516$1Bug2v))))
                             (g$syntax-dispatch$7532$1Bug2v
                               g$t$8516$1Bug2v
                               '(#(scheme-id unquote) any)))))
                         g$p$8514$1Bug2v)))))
           (case-lambda
             ((g$x$8510$1Bug2v)
              ((case-lambda
                 ((g$t$8511$1Bug2v)
                  ((case-lambda
                     ((g$ls/false$8512$1Bug2v)
                      (if g$ls/false$8512$1Bug2v
                        (apply
                          (case-lambda
                            ((g$e$8513$1Bug2v)
                             (g$quasi$8509$1Bug2v g$e$8513$1Bug2v '0)))
                          g$ls/false$8512$1Bug2v)
                        (g$syntax-violation$7643$1Bug2v
                          '#f
                          '"invalid syntax"
                          g$t$8511$1Bug2v))))
                   (g$syntax-dispatch$7532$1Bug2v g$t$8511$1Bug2v '(_ any)))))
               g$x$8510$1Bug2v))))))))
   (g$quasisyntax-macro$7524$1Bug2v
     g$quasisyntax-macro$10984$1Bug2v
     ((case-lambda
        (()
         (letrec* ((g$quasi$8620$1Bug2v
                     (case-lambda
                       ((g$p$8634$1Bug2v g$lev$8635$1Bug2v)
                        ((case-lambda
                           ((g$t$8636$1Bug2v)
                            ((case-lambda
                               ((g$ls/false$8637$1Bug2v)
                                (if g$ls/false$8637$1Bug2v
                                  (apply
                                    (case-lambda
                                      ((g$p$8638$1Bug2v)
                                       (if (= g$lev$8635$1Bug2v '0)
                                         ((case-lambda
                                            ((g$g$8639$1Bug2v)
                                             (values
                                               (list g$g$8639$1Bug2v)
                                               (list g$p$8638$1Bug2v)
                                               g$g$8639$1Bug2v)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$8620$1Bug2v
                                                g$p$8638$1Bug2v
                                                (- g$lev$8635$1Bug2v '1))))
                                           (case-lambda
                                             ((g$lhs*$8643$1Bug2v
                                                g$rhs*$8644$1Bug2v
                                                g$p$8645$1Bug2v)
                                              ((case-lambda
                                                 ((g$p$8646$1Bug2v
                                                    g$rhs*$8647$1Bug2v
                                                    g$lhs*$8648$1Bug2v)
                                                  (values
                                                    g$lhs*$8648$1Bug2v
                                                    g$rhs*$8647$1Bug2v
                                                    (list
                                                      'unsyntax
                                                      g$p$8646$1Bug2v))))
                                               g$p$8645$1Bug2v
                                               g$rhs*$8644$1Bug2v
                                               g$lhs*$8643$1Bug2v)))))))
                                    g$ls/false$8637$1Bug2v)
                                  ((case-lambda
                                     ((g$t$8649$1Bug2v)
                                      ((case-lambda
                                         ((g$ls/false$8650$1Bug2v)
                                          (if (if g$ls/false$8650$1Bug2v
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$8635$1Bug2v
                                                          '0)))
                                                    g$ls/false$8650$1Bug2v))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$7643$1Bug2v
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$8634$1Bug2v)))
                                              g$ls/false$8650$1Bug2v)
                                            ((case-lambda
                                               ((g$t$8651$1Bug2v)
                                                ((case-lambda
                                                   ((g$ls/false$8652$1Bug2v)
                                                    (if g$ls/false$8652$1Bug2v
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$8653$1Bug2v
                                                             g$q$8654$1Bug2v)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$8620$1Bug2v
                                                                  g$q$8654$1Bug2v
                                                                  g$lev$8635$1Bug2v)))
                                                             (case-lambda
                                                               ((g$lhs*$8658$1Bug2v
                                                                  g$rhs*$8659$1Bug2v
                                                                  g$q$8660$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$q$8661$1Bug2v
                                                                      g$rhs*$8662$1Bug2v
                                                                      g$lhs*$8663$1Bug2v)
                                                                    (if (= g$lev$8635$1Bug2v
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$8664$1Bug2v)
                                                                          (values
                                                                            (append
                                                                              g$g*$8664$1Bug2v
                                                                              g$lhs*$8663$1Bug2v)
                                                                            (append
                                                                              g$p*$8653$1Bug2v
                                                                              g$rhs*$8662$1Bug2v)
                                                                            (append
                                                                              g$g*$8664$1Bug2v
                                                                              g$q$8661$1Bug2v))))
                                                                       (map (case-lambda
                                                                              ((g$x$8665$1Bug2v)
                                                                               (gensym)))
                                                                            g$p*$8653$1Bug2v))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$8620$1Bug2v
                                                                             g$p*$8653$1Bug2v
                                                                             (- g$lev$8635$1Bug2v
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$8669$1Bug2v
                                                                             g$rhs2*$8670$1Bug2v
                                                                             g$p*$8671$1Bug2v)
                                                                           ((case-lambda
                                                                              ((g$p*$8672$1Bug2v
                                                                                 g$rhs2*$8673$1Bug2v
                                                                                 g$lhs2*$8674$1Bug2v)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$8674$1Bug2v
                                                                                   g$lhs*$8663$1Bug2v)
                                                                                 (append
                                                                                   g$rhs2*$8673$1Bug2v
                                                                                   g$rhs*$8662$1Bug2v)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$8672$1Bug2v)
                                                                                   g$q$8661$1Bug2v))))
                                                                            g$p*$8671$1Bug2v
                                                                            g$rhs2*$8670$1Bug2v
                                                                            g$lhs2*$8669$1Bug2v)))))))
                                                                 g$q$8660$1Bug2v
                                                                 g$rhs*$8659$1Bug2v
                                                                 g$lhs*$8658$1Bug2v))))))
                                                        g$ls/false$8652$1Bug2v)
                                                      ((case-lambda
                                                         ((g$t$8675$1Bug2v)
                                                          ((case-lambda
                                                             ((g$ls/false$8676$1Bug2v)
                                                              (if g$ls/false$8676$1Bug2v
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$8677$1Bug2v
                                                                       g$q$8678$1Bug2v)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$8620$1Bug2v
                                                                            g$q$8678$1Bug2v
                                                                            g$lev$8635$1Bug2v)))
                                                                       (case-lambda
                                                                         ((g$lhs*$8682$1Bug2v
                                                                            g$rhs*$8683$1Bug2v
                                                                            g$q$8684$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$q$8685$1Bug2v
                                                                                g$rhs*$8686$1Bug2v
                                                                                g$lhs*$8687$1Bug2v)
                                                                              (if (= g$lev$8635$1Bug2v
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$8688$1Bug2v)
                                                                                    (values
                                                                                      (append
                                                                                        (map (case-lambda
                                                                                               ((g$g$8689$1Bug2v)
                                                                                                (cons
                                                                                                  g$g$8689$1Bug2v
                                                                                                  '(...))))
                                                                                             g$g*$8688$1Bug2v)
                                                                                        g$lhs*$8687$1Bug2v)
                                                                                      (append
                                                                                        g$p*$8677$1Bug2v
                                                                                        g$rhs*$8686$1Bug2v)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (map (case-lambda
                                                                                                 ((g$g$8690$1Bug2v)
                                                                                                  (cons
                                                                                                    g$g$8690$1Bug2v
                                                                                                    '(...))))
                                                                                               g$g*$8688$1Bug2v))
                                                                                        g$q$8685$1Bug2v))))
                                                                                 (map (case-lambda
                                                                                        ((g$x$8691$1Bug2v)
                                                                                         (gensym)))
                                                                                      g$p*$8677$1Bug2v))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$8620$1Bug2v
                                                                                       g$p*$8677$1Bug2v
                                                                                       (- g$lev$8635$1Bug2v
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$8695$1Bug2v
                                                                                       g$rhs2*$8696$1Bug2v
                                                                                       g$p*$8697$1Bug2v)
                                                                                     ((case-lambda
                                                                                        ((g$p*$8698$1Bug2v
                                                                                           g$rhs2*$8699$1Bug2v
                                                                                           g$lhs2*$8700$1Bug2v)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$8700$1Bug2v
                                                                                             g$lhs*$8687$1Bug2v)
                                                                                           (append
                                                                                             g$rhs2*$8699$1Bug2v
                                                                                             g$rhs*$8686$1Bug2v)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$8698$1Bug2v)
                                                                                             g$q$8685$1Bug2v))))
                                                                                      g$p*$8697$1Bug2v
                                                                                      g$rhs2*$8696$1Bug2v
                                                                                      g$lhs2*$8695$1Bug2v)))))))
                                                                           g$q$8684$1Bug2v
                                                                           g$rhs*$8683$1Bug2v
                                                                           g$lhs*$8682$1Bug2v))))))
                                                                  g$ls/false$8676$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$t$8701$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$ls/false$8702$1Bug2v)
                                                                        (if (if g$ls/false$8702$1Bug2v
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$8635$1Bug2v
                                                                                        '0)))
                                                                                  g$ls/false$8702$1Bug2v))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$7643$1Bug2v
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$8634$1Bug2v)))
                                                                            g$ls/false$8702$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$8703$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$8704$1Bug2v)
                                                                                  (if g$ls/false$8704$1Bug2v
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$8705$1Bug2v)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$8620$1Bug2v
                                                                                                g$p$8705$1Bug2v
                                                                                                (+ g$lev$8635$1Bug2v
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$8709$1Bug2v
                                                                                                g$rhs*$8710$1Bug2v
                                                                                                g$p$8711$1Bug2v)
                                                                                              ((case-lambda
                                                                                                 ((g$p$8712$1Bug2v
                                                                                                    g$rhs*$8713$1Bug2v
                                                                                                    g$lhs*$8714$1Bug2v)
                                                                                                  (values
                                                                                                    g$lhs*$8714$1Bug2v
                                                                                                    g$rhs*$8713$1Bug2v
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$8712$1Bug2v))))
                                                                                               g$p$8711$1Bug2v
                                                                                               g$rhs*$8710$1Bug2v
                                                                                               g$lhs*$8709$1Bug2v))))))
                                                                                      g$ls/false$8704$1Bug2v)
                                                                                    ((case-lambda
                                                                                       ((g$t$8715$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$8716$1Bug2v)
                                                                                            (if g$ls/false$8716$1Bug2v
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$8717$1Bug2v
                                                                                                     g$q$8718$1Bug2v)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$8620$1Bug2v
                                                                                                          g$p$8717$1Bug2v
                                                                                                          g$lev$8635$1Bug2v)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$8725$1Bug2v
                                                                                                          g$rhs*$8726$1Bug2v
                                                                                                          g$p$8727$1Bug2v)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$8620$1Bug2v
                                                                                                               g$q$8718$1Bug2v
                                                                                                               g$lev$8635$1Bug2v)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$8728$1Bug2v
                                                                                                               g$rhs2*$8729$1Bug2v
                                                                                                               g$q$8730$1Bug2v)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$8731$1Bug2v
                                                                                                                   g$rhs2*$8732$1Bug2v
                                                                                                                   g$lhs2*$8733$1Bug2v
                                                                                                                   g$p$8734$1Bug2v
                                                                                                                   g$rhs*$8735$1Bug2v
                                                                                                                   g$lhs*$8736$1Bug2v)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$8733$1Bug2v
                                                                                                                     g$lhs*$8736$1Bug2v)
                                                                                                                   (append
                                                                                                                     g$rhs2*$8732$1Bug2v
                                                                                                                     g$rhs*$8735$1Bug2v)
                                                                                                                   (cons
                                                                                                                     g$p$8734$1Bug2v
                                                                                                                     g$q$8731$1Bug2v))))
                                                                                                              g$q$8730$1Bug2v
                                                                                                              g$rhs2*$8729$1Bug2v
                                                                                                              g$lhs2*$8728$1Bug2v
                                                                                                              g$p$8727$1Bug2v
                                                                                                              g$rhs*$8726$1Bug2v
                                                                                                              g$lhs*$8725$1Bug2v)))))))))
                                                                                                g$ls/false$8716$1Bug2v)
                                                                                              ((case-lambda
                                                                                                 ((g$t$8737$1Bug2v)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$8738$1Bug2v)
                                                                                                      (if g$ls/false$8738$1Bug2v
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$8739$1Bug2v)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$8620$1Bug2v
                                                                                                                    g$x*$8739$1Bug2v
                                                                                                                    g$lev$8635$1Bug2v)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$8743$1Bug2v
                                                                                                                    g$rhs*$8744$1Bug2v
                                                                                                                    g$x*$8745$1Bug2v)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$8746$1Bug2v
                                                                                                                        g$rhs*$8747$1Bug2v
                                                                                                                        g$lhs*$8748$1Bug2v)
                                                                                                                      (values
                                                                                                                        g$lhs*$8748$1Bug2v
                                                                                                                        g$rhs*$8747$1Bug2v
                                                                                                                        (list->vector
                                                                                                                          g$x*$8746$1Bug2v))))
                                                                                                                   g$x*$8745$1Bug2v
                                                                                                                   g$rhs*$8744$1Bug2v
                                                                                                                   g$lhs*$8743$1Bug2v))))))
                                                                                                          g$ls/false$8738$1Bug2v)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$8749$1Bug2v)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$8750$1Bug2v)
                                                                                                                (if g$ls/false$8750$1Bug2v
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$8634$1Bug2v)))
                                                                                                                    g$ls/false$8750$1Bug2v)
                                                                                                                  (g$syntax-violation$7643$1Bug2v
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$8749$1Bug2v))))
                                                                                                             (g$syntax-dispatch$7532$1Bug2v
                                                                                                               g$t$8749$1Bug2v
                                                                                                               '_))))
                                                                                                         g$t$8737$1Bug2v))))
                                                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                                                     g$t$8737$1Bug2v
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$8715$1Bug2v))))
                                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                                           g$t$8715$1Bug2v
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$8703$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$8703$1Bug2v
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$8701$1Bug2v))))
                                                                     (g$syntax-dispatch$7532$1Bug2v
                                                                       g$t$8701$1Bug2v
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$8675$1Bug2v))))
                                                           (g$syntax-dispatch$7532$1Bug2v
                                                             g$t$8675$1Bug2v
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$8651$1Bug2v))))
                                                 (g$syntax-dispatch$7532$1Bug2v
                                                   g$t$8651$1Bug2v
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$8649$1Bug2v))))
                                       (g$syntax-dispatch$7532$1Bug2v
                                         g$t$8649$1Bug2v
                                         '#(scheme-id unsyntax)))))
                                   g$t$8636$1Bug2v))))
                             (g$syntax-dispatch$7532$1Bug2v
                               g$t$8636$1Bug2v
                               '(#(scheme-id unsyntax) any)))))
                         g$p$8634$1Bug2v)))))
           (case-lambda
             ((g$x$8621$1Bug2v)
              ((case-lambda
                 ((g$t$8622$1Bug2v)
                  ((case-lambda
                     ((g$ls/false$8623$1Bug2v)
                      (if g$ls/false$8623$1Bug2v
                        (apply
                          (case-lambda
                            ((g$e$8624$1Bug2v)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$8620$1Bug2v g$e$8624$1Bug2v '0)))
                               (case-lambda
                                 ((g$lhs*$8628$1Bug2v
                                    g$rhs*$8629$1Bug2v
                                    g$v$8630$1Bug2v)
                                  ((case-lambda
                                     ((g$v$8631$1Bug2v
                                        g$rhs*$8632$1Bug2v
                                        g$lhs*$8633$1Bug2v)
                                      (g$bless$7495$1Bug2v
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$8632$1Bug2v)
                                          '()
                                          (list
                                            g$lhs*$8633$1Bug2v
                                            (list 'syntax g$v$8631$1Bug2v))))))
                                   g$v$8630$1Bug2v
                                   g$rhs*$8629$1Bug2v
                                   g$lhs*$8628$1Bug2v))))))
                          g$ls/false$8623$1Bug2v)
                        (g$syntax-violation$7643$1Bug2v
                          '#f
                          '"invalid syntax"
                          g$t$8622$1Bug2v))))
                   (g$syntax-dispatch$7532$1Bug2v g$t$8622$1Bug2v '(_ any)))))
               g$x$8621$1Bug2v))))))))
   (g$define-struct-macro$7525$1Bug2v
     g$define-struct-macro$10985$1Bug2v
     (case-lambda
       ((g$stx$8751$1Bug2v)
        (g$syntax-violation$7643$1Bug2v
          '#f
          '"define-struct not supported"
          g$stx$8751$1Bug2v))))
   (g$define-record-type-macro$7526$1Bug2v
     g$define-record-type-macro$10986$1Bug2v
     (case-lambda
       ((g$x$8752$1Bug2v)
        (letrec* ((g$id$8753$1Bug2v
                    (case-lambda
                      ((g$ctxt$9005$1Bug2v . g$str*$9006$1Bug2v)
                       (g$datum->syntax$7645$1Bug2v
                         g$ctxt$9005$1Bug2v
                         (string->symbol
                           (apply
                             string-append
                             (map (case-lambda
                                    ((g$x$9007$1Bug2v)
                                     (if (symbol? g$x$9007$1Bug2v)
                                       (symbol->string g$x$9007$1Bug2v)
                                       (if (string? g$x$9007$1Bug2v)
                                         g$x$9007$1Bug2v
                                         (assertion-violation
                                           'define-record-type
                                           '"BUG")))))
                                  g$str*$9006$1Bug2v)))))))
                  (g$get-record-name$8754$1Bug2v
                    (case-lambda
                      ((g$spec$8996$1Bug2v)
                       ((case-lambda
                          ((g$t$8997$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8998$1Bug2v)
                               (if g$ls/false$8998$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$foo$8999$1Bug2v
                                        g$make-foo$9000$1Bug2v
                                        g$foo?$9001$1Bug2v)
                                      g$foo$8999$1Bug2v))
                                   g$ls/false$8998$1Bug2v)
                                 ((case-lambda
                                    ((g$t$9002$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$9003$1Bug2v)
                                         (if g$ls/false$9003$1Bug2v
                                           (apply
                                             (case-lambda
                                               ((g$foo$9004$1Bug2v)
                                                g$foo$9004$1Bug2v))
                                             g$ls/false$9003$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$9002$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$9002$1Bug2v
                                        'any))))
                                  g$t$8997$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8997$1Bug2v
                              '(any any any)))))
                        g$spec$8996$1Bug2v))))
                  (g$get-record-constructor-name$8755$1Bug2v
                    (case-lambda
                      ((g$spec$8986$1Bug2v)
                       ((case-lambda
                          ((g$t$8987$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8988$1Bug2v)
                               (if g$ls/false$8988$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$foo$8989$1Bug2v
                                        g$make-foo$8990$1Bug2v
                                        g$foo?$8991$1Bug2v)
                                      g$make-foo$8990$1Bug2v))
                                   g$ls/false$8988$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8992$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8993$1Bug2v)
                                         (if (if g$ls/false$8993$1Bug2v
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8994$1Bug2v)
                                                      (g$id?$7254$1Bug2v
                                                        g$foo$8994$1Bug2v)))
                                                   g$ls/false$8993$1Bug2v))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8995$1Bug2v)
                                                (g$id$8753$1Bug2v
                                                  g$foo$8995$1Bug2v
                                                  '"make-"
                                                  (g$stx->datum$7265$1Bug2v
                                                    g$foo$8995$1Bug2v))))
                                             g$ls/false$8993$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$8992$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8992$1Bug2v
                                        'any))))
                                  g$t$8987$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8987$1Bug2v
                              '(any any any)))))
                        g$spec$8986$1Bug2v))))
                  (g$get-record-predicate-name$8756$1Bug2v
                    (case-lambda
                      ((g$spec$8976$1Bug2v)
                       ((case-lambda
                          ((g$t$8977$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8978$1Bug2v)
                               (if g$ls/false$8978$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$foo$8979$1Bug2v
                                        g$make-foo$8980$1Bug2v
                                        g$foo?$8981$1Bug2v)
                                      g$foo?$8981$1Bug2v))
                                   g$ls/false$8978$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8982$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8983$1Bug2v)
                                         (if (if g$ls/false$8983$1Bug2v
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$8984$1Bug2v)
                                                      (g$id?$7254$1Bug2v
                                                        g$foo$8984$1Bug2v)))
                                                   g$ls/false$8983$1Bug2v))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$8985$1Bug2v)
                                                (g$id$8753$1Bug2v
                                                  g$foo$8985$1Bug2v
                                                  (g$stx->datum$7265$1Bug2v
                                                    g$foo$8985$1Bug2v)
                                                  '"?")))
                                             g$ls/false$8983$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$8982$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8982$1Bug2v
                                        'any))))
                                  g$t$8977$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8977$1Bug2v
                              '(any any any)))))
                        g$spec$8976$1Bug2v))))
                  (g$get-clause$8757$1Bug2v
                    (case-lambda
                      ((g$id$8967$1Bug2v g$ls$8968$1Bug2v)
                       ((case-lambda
                          ((g$t$8969$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8970$1Bug2v)
                               (if g$ls/false$8970$1Bug2v
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$8970$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8971$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8972$1Bug2v)
                                         (if g$ls/false$8972$1Bug2v
                                           (apply
                                             (case-lambda
                                               ((g$x$8973$1Bug2v
                                                  g$rest$8974$1Bug2v
                                                  g$ls$8975$1Bug2v)
                                                (if (g$free-id=?$7258$1Bug2v
                                                      (g$bless$7495$1Bug2v
                                                        g$id$8967$1Bug2v)
                                                      g$x$8973$1Bug2v)
                                                  (cons
                                                    g$x$8973$1Bug2v
                                                    g$rest$8974$1Bug2v)
                                                  (g$get-clause$8757$1Bug2v
                                                    g$id$8967$1Bug2v
                                                    g$ls$8975$1Bug2v))))
                                             g$ls/false$8972$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$8971$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8971$1Bug2v
                                        '((any . any) . any)))))
                                  g$t$8969$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8969$1Bug2v
                              '()))))
                        g$ls$8968$1Bug2v))))
                  (g$foo-rtd-code$8758$1Bug2v
                    (case-lambda
                      ((g$name$8926$1Bug2v
                         g$clause*$8927$1Bug2v
                         g$parent-rtd-code$8928$1Bug2v)
                       (letrec* ((g$convert-field-spec*$8929$1Bug2v
                                   (case-lambda
                                     ((g$ls$8954$1Bug2v)
                                      (list->vector
                                        (map (case-lambda
                                               ((g$x$8955$1Bug2v)
                                                ((case-lambda
                                                   ((g$t$8956$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$8957$1Bug2v)
                                                        (if g$ls/false$8957$1Bug2v
                                                          (apply
                                                            (case-lambda
                                                              ((g$name$8958$1Bug2v
                                                                 g$rest$8959$1Bug2v)
                                                               (list
                                                                 'mutable
                                                                 g$name$8958$1Bug2v)))
                                                            g$ls/false$8957$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$8960$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$8961$1Bug2v)
                                                                  (if g$ls/false$8961$1Bug2v
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$name$8962$1Bug2v
                                                                           g$rest$8963$1Bug2v)
                                                                         (list
                                                                           'immutable
                                                                           g$name$8962$1Bug2v)))
                                                                      g$ls/false$8961$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$t$8964$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$ls/false$8965$1Bug2v)
                                                                            (if g$ls/false$8965$1Bug2v
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$name$8966$1Bug2v)
                                                                                   (list
                                                                                     'immutable
                                                                                     g$name$8966$1Bug2v)))
                                                                                g$ls/false$8965$1Bug2v)
                                                                              (g$syntax-violation$7643$1Bug2v
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$8964$1Bug2v))))
                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                           g$t$8964$1Bug2v
                                                                           'any))))
                                                                     g$t$8960$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$8960$1Bug2v
                                                                 '(#(scheme-id
                                                                     immutable)
                                                                   any
                                                                   .
                                                                   any)))))
                                                           g$t$8956$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$8956$1Bug2v
                                                       '(#(scheme-id mutable)
                                                         any
                                                         .
                                                         any)))))
                                                 g$x$8955$1Bug2v)))
                                             g$ls$8954$1Bug2v))))))
                         ((case-lambda
                            ((g$uid-code$8930$1Bug2v
                               g$sealed?$8931$1Bug2v
                               g$opaque?$8932$1Bug2v
                               g$fields$8933$1Bug2v)
                             (g$bless$7495$1Bug2v
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$8926$1Bug2v)
                                 g$parent-rtd-code$8928$1Bug2v
                                 g$uid-code$8930$1Bug2v
                                 g$sealed?$8931$1Bug2v
                                 g$opaque?$8932$1Bug2v
                                 g$fields$8933$1Bug2v))))
                          ((case-lambda
                             ((g$t$8934$1Bug2v)
                              ((case-lambda
                                 ((g$ls/false$8935$1Bug2v)
                                  (if g$ls/false$8935$1Bug2v
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$8935$1Bug2v)
                                    ((case-lambda
                                       ((g$t$8936$1Bug2v)
                                        ((case-lambda
                                           ((g$ls/false$8937$1Bug2v)
                                            (if g$ls/false$8937$1Bug2v
                                              (apply
                                                (case-lambda
                                                  ((g$uid$8938$1Bug2v)
                                                   (list
                                                     'quote
                                                     g$uid$8938$1Bug2v)))
                                                g$ls/false$8937$1Bug2v)
                                              ((case-lambda
                                                 ((g$t$8939$1Bug2v)
                                                  ((case-lambda
                                                     ((g$ls/false$8940$1Bug2v)
                                                      (if g$ls/false$8940$1Bug2v
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$8940$1Bug2v)
                                                        (g$syntax-violation$7643$1Bug2v
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$8939$1Bug2v))))
                                                   (g$syntax-dispatch$7532$1Bug2v
                                                     g$t$8939$1Bug2v
                                                     '_))))
                                               g$t$8936$1Bug2v))))
                                         (g$syntax-dispatch$7532$1Bug2v
                                           g$t$8936$1Bug2v
                                           '(_ any)))))
                                     g$t$8934$1Bug2v))))
                               (g$syntax-dispatch$7532$1Bug2v
                                 g$t$8934$1Bug2v
                                 '(_)))))
                           (g$get-clause$8757$1Bug2v
                             'nongenerative
                             g$clause*$8927$1Bug2v))
                          ((case-lambda
                             ((g$t$8941$1Bug2v)
                              ((case-lambda
                                 ((g$ls/false$8942$1Bug2v)
                                  (if g$ls/false$8942$1Bug2v
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8942$1Bug2v)
                                    ((case-lambda
                                       ((g$t$8943$1Bug2v)
                                        ((case-lambda
                                           ((g$ls/false$8944$1Bug2v)
                                            (if g$ls/false$8944$1Bug2v
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8944$1Bug2v)
                                              (g$syntax-violation$7643$1Bug2v
                                                '#f
                                                '"invalid syntax"
                                                g$t$8943$1Bug2v))))
                                         (g$syntax-dispatch$7532$1Bug2v
                                           g$t$8943$1Bug2v
                                           '_))))
                                     g$t$8941$1Bug2v))))
                               (g$syntax-dispatch$7532$1Bug2v
                                 g$t$8941$1Bug2v
                                 '(_ #(atom #t))))))
                           (g$get-clause$8757$1Bug2v
                             'sealed
                             g$clause*$8927$1Bug2v))
                          ((case-lambda
                             ((g$t$8945$1Bug2v)
                              ((case-lambda
                                 ((g$ls/false$8946$1Bug2v)
                                  (if g$ls/false$8946$1Bug2v
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$8946$1Bug2v)
                                    ((case-lambda
                                       ((g$t$8947$1Bug2v)
                                        ((case-lambda
                                           ((g$ls/false$8948$1Bug2v)
                                            (if g$ls/false$8948$1Bug2v
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$8948$1Bug2v)
                                              (g$syntax-violation$7643$1Bug2v
                                                '#f
                                                '"invalid syntax"
                                                g$t$8947$1Bug2v))))
                                         (g$syntax-dispatch$7532$1Bug2v
                                           g$t$8947$1Bug2v
                                           '_))))
                                     g$t$8945$1Bug2v))))
                               (g$syntax-dispatch$7532$1Bug2v
                                 g$t$8945$1Bug2v
                                 '(_ #(atom #t))))))
                           (g$get-clause$8757$1Bug2v
                             'opaque
                             g$clause*$8927$1Bug2v))
                          ((case-lambda
                             ((g$t$8949$1Bug2v)
                              ((case-lambda
                                 ((g$ls/false$8950$1Bug2v)
                                  (if g$ls/false$8950$1Bug2v
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$8951$1Bug2v)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$8929$1Bug2v
                                             g$field-spec*$8951$1Bug2v))))
                                      g$ls/false$8950$1Bug2v)
                                    ((case-lambda
                                       ((g$t$8952$1Bug2v)
                                        ((case-lambda
                                           ((g$ls/false$8953$1Bug2v)
                                            (if g$ls/false$8953$1Bug2v
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$8953$1Bug2v)
                                              (g$syntax-violation$7643$1Bug2v
                                                '#f
                                                '"invalid syntax"
                                                g$t$8952$1Bug2v))))
                                         (g$syntax-dispatch$7532$1Bug2v
                                           g$t$8952$1Bug2v
                                           '_))))
                                     g$t$8949$1Bug2v))))
                               (g$syntax-dispatch$7532$1Bug2v
                                 g$t$8949$1Bug2v
                                 '(_ . each-any)))))
                           (g$get-clause$8757$1Bug2v
                             'fields
                             g$clause*$8927$1Bug2v)))))))
                  (g$parent-rtd-code$8759$1Bug2v
                    (case-lambda
                      ((g$clause*$8914$1Bug2v)
                       ((case-lambda
                          ((g$t$8915$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8916$1Bug2v)
                               (if g$ls/false$8916$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$name$8917$1Bug2v)
                                      (list
                                        'record-type-descriptor
                                        g$name$8917$1Bug2v)))
                                   g$ls/false$8916$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8918$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8919$1Bug2v)
                                         (if g$ls/false$8919$1Bug2v
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8920$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$8921$1Bug2v)
                                                        (if g$ls/false$8921$1Bug2v
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8922$1Bug2v
                                                                 g$rcd$8923$1Bug2v)
                                                               g$rtd$8922$1Bug2v))
                                                            g$ls/false$8921$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$8924$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$8925$1Bug2v)
                                                                  (if g$ls/false$8925$1Bug2v
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8925$1Bug2v)
                                                                    (g$syntax-violation$7643$1Bug2v
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8924$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$8924$1Bug2v
                                                                 '#(atom #f)))))
                                                           g$t$8920$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$8920$1Bug2v
                                                       '(_ any any)))))
                                                 (g$get-clause$8757$1Bug2v
                                                   'parent-rtd
                                                   g$clause*$8914$1Bug2v))))
                                             g$ls/false$8919$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$8918$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8918$1Bug2v
                                        '#(atom #f)))))
                                  g$t$8915$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8915$1Bug2v
                              '(_ any)))))
                        (g$get-clause$8757$1Bug2v
                          'parent
                          g$clause*$8914$1Bug2v)))))
                  (g$parent-rcd-code$8760$1Bug2v
                    (case-lambda
                      ((g$clause*$8902$1Bug2v)
                       ((case-lambda
                          ((g$t$8903$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8904$1Bug2v)
                               (if g$ls/false$8904$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$name$8905$1Bug2v)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$8905$1Bug2v)))
                                   g$ls/false$8904$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8906$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8907$1Bug2v)
                                         (if g$ls/false$8907$1Bug2v
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$8908$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$8909$1Bug2v)
                                                        (if g$ls/false$8909$1Bug2v
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$8910$1Bug2v
                                                                 g$rcd$8911$1Bug2v)
                                                               g$rcd$8911$1Bug2v))
                                                            g$ls/false$8909$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$8912$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$8913$1Bug2v)
                                                                  (if g$ls/false$8913$1Bug2v
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$8913$1Bug2v)
                                                                    (g$syntax-violation$7643$1Bug2v
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8912$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$8912$1Bug2v
                                                                 '#(atom #f)))))
                                                           g$t$8908$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$8908$1Bug2v
                                                       '(_ any any)))))
                                                 (g$get-clause$8757$1Bug2v
                                                   'parent-rtd
                                                   g$clause*$8902$1Bug2v))))
                                             g$ls/false$8907$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$8906$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8906$1Bug2v
                                        '#(atom #f)))))
                                  g$t$8903$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8903$1Bug2v
                              '(_ any)))))
                        (g$get-clause$8757$1Bug2v
                          'parent
                          g$clause*$8902$1Bug2v)))))
                  (g$foo-rcd-code$8761$1Bug2v
                    (case-lambda
                      ((g$clause*$8898$1Bug2v
                         g$foo-rtd$8899$1Bug2v
                         g$protocol$8900$1Bug2v
                         g$parent-rcd-code$8901$1Bug2v)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$8899$1Bug2v
                         g$parent-rcd-code$8901$1Bug2v
                         g$protocol$8900$1Bug2v))))
                  (g$get-protocol-code$8762$1Bug2v
                    (case-lambda
                      ((g$clause*$8892$1Bug2v)
                       ((case-lambda
                          ((g$t$8893$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8894$1Bug2v)
                               (if g$ls/false$8894$1Bug2v
                                 (apply
                                   (case-lambda
                                     ((g$expr$8895$1Bug2v) g$expr$8895$1Bug2v))
                                   g$ls/false$8894$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8896$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8897$1Bug2v)
                                         (if g$ls/false$8897$1Bug2v
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$8897$1Bug2v)
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$t$8896$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8896$1Bug2v
                                        '_))))
                                  g$t$8893$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8893$1Bug2v
                              '(_ any)))))
                        (g$get-clause$8757$1Bug2v
                          'protocol
                          g$clause*$8892$1Bug2v)))))
                  (g$get-fields$8763$1Bug2v
                    (case-lambda
                      ((g$clause*$8883$1Bug2v)
                       ((case-lambda
                          ((g$t$8884$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$8885$1Bug2v)
                               (if g$ls/false$8885$1Bug2v
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$8885$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8886$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8887$1Bug2v)
                                         (if g$ls/false$8887$1Bug2v
                                           (apply
                                             (case-lambda
                                               ((g$f*$8888$1Bug2v)
                                                g$f*$8888$1Bug2v))
                                             g$ls/false$8887$1Bug2v)
                                           ((case-lambda
                                              ((g$t$8889$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$8890$1Bug2v)
                                                   (if g$ls/false$8890$1Bug2v
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$8891$1Bug2v)
                                                          (g$get-fields$8763$1Bug2v
                                                            g$rest$8891$1Bug2v)))
                                                       g$ls/false$8890$1Bug2v)
                                                     (g$syntax-violation$7643$1Bug2v
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$8889$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$8889$1Bug2v
                                                  '(_ . any)))))
                                            g$t$8886$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8886$1Bug2v
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$8884$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$8884$1Bug2v
                              '()))))
                        g$clause*$8883$1Bug2v))))
                  (g$get-mutator-indices$8764$1Bug2v
                    (case-lambda
                      ((g$fields$8871$1Bug2v)
                       ((letrec ((g$f$8872$1Bug2v
                                   (case-lambda
                                     ((g$fields$8873$1Bug2v g$i$8874$1Bug2v)
                                      ((case-lambda
                                         ((g$t$8875$1Bug2v)
                                          ((case-lambda
                                             ((g$ls/false$8876$1Bug2v)
                                              (if g$ls/false$8876$1Bug2v
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$8876$1Bug2v)
                                                ((case-lambda
                                                   ((g$t$8877$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$8878$1Bug2v)
                                                        (if g$ls/false$8878$1Bug2v
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$8879$1Bug2v)
                                                               (cons
                                                                 g$i$8874$1Bug2v
                                                                 (g$f$8872$1Bug2v
                                                                   g$rest$8879$1Bug2v
                                                                   (+ g$i$8874$1Bug2v
                                                                      '1)))))
                                                            g$ls/false$8878$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$8880$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$8881$1Bug2v)
                                                                  (if g$ls/false$8881$1Bug2v
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$8882$1Bug2v)
                                                                         (g$f$8872$1Bug2v
                                                                           g$rest$8882$1Bug2v
                                                                           (+ g$i$8874$1Bug2v
                                                                              '1))))
                                                                      g$ls/false$8881$1Bug2v)
                                                                    (g$syntax-violation$7643$1Bug2v
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$8880$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$8880$1Bug2v
                                                                 '(_ . any)))))
                                                           g$t$8877$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$8877$1Bug2v
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$8875$1Bug2v))))
                                           (g$syntax-dispatch$7532$1Bug2v
                                             g$t$8875$1Bug2v
                                             '()))))
                                       g$fields$8873$1Bug2v)))))
                          g$f$8872$1Bug2v)
                        g$fields$8871$1Bug2v
                        '0))))
                  (g$get-mutators$8765$1Bug2v
                    (case-lambda
                      ((g$foo$8850$1Bug2v g$fields$8851$1Bug2v)
                       (letrec* ((g$gen-name$8852$1Bug2v
                                   (case-lambda
                                     ((g$x$8870$1Bug2v)
                                      (g$datum->syntax$7645$1Bug2v
                                        g$foo$8850$1Bug2v
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7646$1Bug2v
                                                g$foo$8850$1Bug2v))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7646$1Bug2v
                                                g$x$8870$1Bug2v))
                                            '"-set!")))))))
                         ((letrec ((g$f$8853$1Bug2v
                                     (case-lambda
                                       ((g$fields$8854$1Bug2v)
                                        ((case-lambda
                                           ((g$t$8855$1Bug2v)
                                            ((case-lambda
                                               ((g$ls/false$8856$1Bug2v)
                                                (if g$ls/false$8856$1Bug2v
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$8856$1Bug2v)
                                                  ((case-lambda
                                                     ((g$t$8857$1Bug2v)
                                                      ((case-lambda
                                                         ((g$ls/false$8858$1Bug2v)
                                                          (if g$ls/false$8858$1Bug2v
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$8859$1Bug2v
                                                                   g$accessor$8860$1Bug2v
                                                                   g$mutator$8861$1Bug2v
                                                                   g$rest$8862$1Bug2v)
                                                                 (cons
                                                                   g$mutator$8861$1Bug2v
                                                                   (g$f$8853$1Bug2v
                                                                     g$rest$8862$1Bug2v))))
                                                              g$ls/false$8858$1Bug2v)
                                                            ((case-lambda
                                                               ((g$t$8863$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$ls/false$8864$1Bug2v)
                                                                    (if g$ls/false$8864$1Bug2v
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$8865$1Bug2v
                                                                             g$rest$8866$1Bug2v)
                                                                           (cons
                                                                             (g$gen-name$8852$1Bug2v
                                                                               g$name$8865$1Bug2v)
                                                                             (g$f$8853$1Bug2v
                                                                               g$rest$8866$1Bug2v))))
                                                                        g$ls/false$8864$1Bug2v)
                                                                      ((case-lambda
                                                                         ((g$t$8867$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$ls/false$8868$1Bug2v)
                                                                              (if g$ls/false$8868$1Bug2v
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$8869$1Bug2v)
                                                                                     (g$f$8853$1Bug2v
                                                                                       g$rest$8869$1Bug2v)))
                                                                                  g$ls/false$8868$1Bug2v)
                                                                                (g$syntax-violation$7643$1Bug2v
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$8867$1Bug2v))))
                                                                           (g$syntax-dispatch$7532$1Bug2v
                                                                             g$t$8867$1Bug2v
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$8863$1Bug2v))))
                                                                 (g$syntax-dispatch$7532$1Bug2v
                                                                   g$t$8863$1Bug2v
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$8857$1Bug2v))))
                                                       (g$syntax-dispatch$7532$1Bug2v
                                                         g$t$8857$1Bug2v
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$8855$1Bug2v))))
                                             (g$syntax-dispatch$7532$1Bug2v
                                               g$t$8855$1Bug2v
                                               '()))))
                                         g$fields$8854$1Bug2v)))))
                            g$f$8853$1Bug2v)
                          g$fields$8851$1Bug2v)))))
                  (g$get-accessors$8766$1Bug2v
                    (case-lambda
                      ((g$foo$8816$1Bug2v g$fields$8817$1Bug2v)
                       (letrec* ((g$gen-name$8818$1Bug2v
                                   (case-lambda
                                     ((g$x$8849$1Bug2v)
                                      (g$datum->syntax$7645$1Bug2v
                                        g$foo$8816$1Bug2v
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$7646$1Bug2v
                                                g$foo$8816$1Bug2v))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$7646$1Bug2v
                                                g$x$8849$1Bug2v)))))))))
                         (map (case-lambda
                                ((g$field$8819$1Bug2v)
                                 ((case-lambda
                                    ((g$t$8820$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$8821$1Bug2v)
                                         (if (if g$ls/false$8821$1Bug2v
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$name$8822$1Bug2v
                                                        g$accessor$8823$1Bug2v
                                                        g$mutator$8824$1Bug2v)
                                                      (g$id?$7254$1Bug2v
                                                        g$accessor$8823$1Bug2v)))
                                                   g$ls/false$8821$1Bug2v))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$name$8825$1Bug2v
                                                  g$accessor$8826$1Bug2v
                                                  g$mutator$8827$1Bug2v)
                                                g$accessor$8826$1Bug2v))
                                             g$ls/false$8821$1Bug2v)
                                           ((case-lambda
                                              ((g$t$8828$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$8829$1Bug2v)
                                                   (if (if g$ls/false$8829$1Bug2v
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$name$8830$1Bug2v
                                                                  g$accessor$8831$1Bug2v)
                                                                (g$id?$7254$1Bug2v
                                                                  g$accessor$8831$1Bug2v)))
                                                             g$ls/false$8829$1Bug2v))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$name$8832$1Bug2v
                                                            g$accessor$8833$1Bug2v)
                                                          g$accessor$8833$1Bug2v))
                                                       g$ls/false$8829$1Bug2v)
                                                     ((case-lambda
                                                        ((g$t$8834$1Bug2v)
                                                         ((case-lambda
                                                            ((g$ls/false$8835$1Bug2v)
                                                             (if (if g$ls/false$8835$1Bug2v
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$name$8836$1Bug2v)
                                                                          (g$id?$7254$1Bug2v
                                                                            g$name$8836$1Bug2v)))
                                                                       g$ls/false$8835$1Bug2v))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$name$8837$1Bug2v)
                                                                    (g$gen-name$8818$1Bug2v
                                                                      g$name$8837$1Bug2v)))
                                                                 g$ls/false$8835$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$t$8838$1Bug2v)
                                                                   ((case-lambda
                                                                      ((g$ls/false$8839$1Bug2v)
                                                                       (if (if g$ls/false$8839$1Bug2v
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$name$8840$1Bug2v)
                                                                                    (g$id?$7254$1Bug2v
                                                                                      g$name$8840$1Bug2v)))
                                                                                 g$ls/false$8839$1Bug2v))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$name$8841$1Bug2v)
                                                                              (g$gen-name$8818$1Bug2v
                                                                                g$name$8841$1Bug2v)))
                                                                           g$ls/false$8839$1Bug2v)
                                                                         ((case-lambda
                                                                            ((g$t$8842$1Bug2v)
                                                                             ((case-lambda
                                                                                ((g$ls/false$8843$1Bug2v)
                                                                                 (if (if g$ls/false$8843$1Bug2v
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$name$8844$1Bug2v)
                                                                                              (g$id?$7254$1Bug2v
                                                                                                g$name$8844$1Bug2v)))
                                                                                           g$ls/false$8843$1Bug2v))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$name$8845$1Bug2v)
                                                                                        (g$gen-name$8818$1Bug2v
                                                                                          g$name$8845$1Bug2v)))
                                                                                     g$ls/false$8843$1Bug2v)
                                                                                   ((case-lambda
                                                                                      ((g$t$8846$1Bug2v)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$8847$1Bug2v)
                                                                                           (if g$ls/false$8847$1Bug2v
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$others$8848$1Bug2v)
                                                                                                  (g$syntax-violation$7643$1Bug2v
                                                                                                    '#f
                                                                                                    '"invalid field spec"
                                                                                                    g$field$8819$1Bug2v)))
                                                                                               g$ls/false$8847$1Bug2v)
                                                                                             (g$syntax-violation$7643$1Bug2v
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$8846$1Bug2v))))
                                                                                        (g$syntax-dispatch$7532$1Bug2v
                                                                                          g$t$8846$1Bug2v
                                                                                          'any))))
                                                                                    g$t$8842$1Bug2v))))
                                                                              (g$syntax-dispatch$7532$1Bug2v
                                                                                g$t$8842$1Bug2v
                                                                                'any))))
                                                                          g$t$8838$1Bug2v))))
                                                                    (g$syntax-dispatch$7532$1Bug2v
                                                                      g$t$8838$1Bug2v
                                                                      '(#(scheme-id
                                                                          immutable)
                                                                        any)))))
                                                                g$t$8834$1Bug2v))))
                                                          (g$syntax-dispatch$7532$1Bug2v
                                                            g$t$8834$1Bug2v
                                                            '(#(scheme-id
                                                                mutable)
                                                              any)))))
                                                      g$t$8828$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$8828$1Bug2v
                                                  '(#(scheme-id immutable)
                                                    any
                                                    any)))))
                                            g$t$8820$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$8820$1Bug2v
                                        '(#(scheme-id mutable) any any any)))))
                                  g$field$8819$1Bug2v)))
                              g$fields$8817$1Bug2v)))))
                  (g$enumerate$8767$1Bug2v
                    (case-lambda
                      ((g$ls$8812$1Bug2v)
                       ((letrec ((g$f$8813$1Bug2v
                                   (case-lambda
                                     ((g$ls$8814$1Bug2v g$i$8815$1Bug2v)
                                      (if (null? g$ls$8814$1Bug2v)
                                        '()
                                        (cons
                                          g$i$8815$1Bug2v
                                          (g$f$8813$1Bug2v
                                            (cdr g$ls$8814$1Bug2v)
                                            (+ g$i$8815$1Bug2v '1))))))))
                          g$f$8813$1Bug2v)
                        g$ls$8812$1Bug2v
                        '0))))
                  (g$do-define-record$8768$1Bug2v
                    (case-lambda
                      ((g$namespec$8792$1Bug2v g$clause*$8793$1Bug2v)
                       ((case-lambda
                          ((g$foo$8794$1Bug2v)
                           ((case-lambda
                              ((g$foo-rtd$8795$1Bug2v)
                               ((case-lambda
                                  ((g$foo-rcd$8796$1Bug2v)
                                   ((case-lambda
                                      ((g$protocol$8797$1Bug2v)
                                       ((case-lambda
                                          ((g$make-foo$8798$1Bug2v)
                                           ((case-lambda
                                              ((g$fields$8799$1Bug2v)
                                               ((case-lambda
                                                  ((g$idx*$8800$1Bug2v)
                                                   ((case-lambda
                                                      ((g$foo-x*$8801$1Bug2v)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$8802$1Bug2v)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$8803$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$foo?$8804$1Bug2v)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$8805$1Bug2v)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$8806$1Bug2v)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$8807$1Bug2v)
                                                                               ((case-lambda
                                                                                  (()
                                                                                   (g$bless$7495$1Bug2v
                                                                                     (cons
                                                                                       'begin
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rtd$8795$1Bug2v
                                                                                           g$foo-rtd-code$8805$1Bug2v)
                                                                                         (cons
                                                                                           (list
                                                                                             'define
                                                                                             g$protocol$8797$1Bug2v
                                                                                             g$protocol-code$8807$1Bug2v)
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo-rcd$8796$1Bug2v
                                                                                               g$foo-rcd-code$8806$1Bug2v)
                                                                                             (cons
                                                                                               (list
                                                                                                 'define-syntax
                                                                                                 g$foo$8794$1Bug2v
                                                                                                 (list
                                                                                                   'list
                                                                                                   ''$rtd
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rtd$8795$1Bug2v)
                                                                                                   (list
                                                                                                     'syntax
                                                                                                     g$foo-rcd$8796$1Bug2v)))
                                                                                               (cons
                                                                                                 (list
                                                                                                   'define
                                                                                                   g$foo?$8804$1Bug2v
                                                                                                   (list
                                                                                                     'record-predicate
                                                                                                     g$foo-rtd$8795$1Bug2v))
                                                                                                 (cons
                                                                                                   (list
                                                                                                     'define
                                                                                                     g$make-foo$8798$1Bug2v
                                                                                                     (list
                                                                                                       'record-constructor
                                                                                                       g$foo-rcd$8796$1Bug2v))
                                                                                                   (append
                                                                                                     (map (case-lambda
                                                                                                            ((g$foo-x$8808$1Bug2v
                                                                                                               g$idx$8809$1Bug2v)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$foo-x$8808$1Bug2v
                                                                                                               (list
                                                                                                                 'record-accessor
                                                                                                                 g$foo-rtd$8795$1Bug2v
                                                                                                                 g$idx$8809$1Bug2v))))
                                                                                                          g$foo-x*$8801$1Bug2v
                                                                                                          g$idx*$8800$1Bug2v)
                                                                                                     (map (case-lambda
                                                                                                            ((g$set-foo-x!$8810$1Bug2v
                                                                                                               g$idx$8811$1Bug2v)
                                                                                                             (list
                                                                                                               'define
                                                                                                               g$set-foo-x!$8810$1Bug2v
                                                                                                               (list
                                                                                                                 'record-mutator
                                                                                                                 g$foo-rtd$8795$1Bug2v
                                                                                                                 g$idx$8811$1Bug2v))))
                                                                                                          g$set-foo-x!*$8802$1Bug2v
                                                                                                          g$set-foo-idx*$8803$1Bug2v)))))))))))))))
                                                                            (g$get-protocol-code$8762$1Bug2v
                                                                              g$clause*$8793$1Bug2v))))
                                                                        (g$foo-rcd-code$8761$1Bug2v
                                                                          g$clause*$8793$1Bug2v
                                                                          g$foo-rtd$8795$1Bug2v
                                                                          g$protocol$8797$1Bug2v
                                                                          (g$parent-rcd-code$8760$1Bug2v
                                                                            g$clause*$8793$1Bug2v)))))
                                                                    (g$foo-rtd-code$8758$1Bug2v
                                                                      g$foo$8794$1Bug2v
                                                                      g$clause*$8793$1Bug2v
                                                                      (g$parent-rtd-code$8759$1Bug2v
                                                                        g$clause*$8793$1Bug2v)))))
                                                                (g$get-record-predicate-name$8756$1Bug2v
                                                                  g$namespec$8792$1Bug2v))))
                                                            (g$get-mutator-indices$8764$1Bug2v
                                                              g$fields$8799$1Bug2v))))
                                                        (g$get-mutators$8765$1Bug2v
                                                          g$foo$8794$1Bug2v
                                                          g$fields$8799$1Bug2v))))
                                                    (g$get-accessors$8766$1Bug2v
                                                      g$foo$8794$1Bug2v
                                                      g$fields$8799$1Bug2v))))
                                                (g$enumerate$8767$1Bug2v
                                                  g$fields$8799$1Bug2v))))
                                            (g$get-fields$8763$1Bug2v
                                              g$clause*$8793$1Bug2v))))
                                        (g$get-record-constructor-name$8755$1Bug2v
                                          g$namespec$8792$1Bug2v))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$8754$1Bug2v
                          g$namespec$8792$1Bug2v)))))
                  (g$verify-clauses$8769$1Bug2v
                    (case-lambda
                      ((g$x$8774$1Bug2v g$cls*$8775$1Bug2v)
                       (letrec* ((g$valid-kwds$8776$1Bug2v
                                   (map g$bless$7495$1Bug2v
                                        '(fields
                                           parent
                                           parent-rtd
                                           protocol
                                           sealed
                                           opaque
                                           nongenerative)))
                                 (g$free-id-member?$8777$1Bug2v
                                   (case-lambda
                                     ((g$x$8789$1Bug2v g$ls$8790$1Bug2v)
                                      (if (pair? g$ls$8790$1Bug2v)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$8791$1Bug2v)
                                              (if g$t$8791$1Bug2v
                                                g$t$8791$1Bug2v
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$8777$1Bug2v
                                                    g$x$8789$1Bug2v
                                                    (cdr g$ls$8790$1Bug2v))))))
                                           (g$free-id=?$7258$1Bug2v
                                             g$x$8789$1Bug2v
                                             (car g$ls$8790$1Bug2v))))
                                        '#f)))))
                         ((letrec ((g$f$8778$1Bug2v
                                     (case-lambda
                                       ((g$cls*$8779$1Bug2v g$seen*$8780$1Bug2v)
                                        (if (not (null? g$cls*$8779$1Bug2v))
                                          ((case-lambda
                                             ((g$t$8781$1Bug2v)
                                              ((case-lambda
                                                 ((g$ls/false$8782$1Bug2v)
                                                  (if g$ls/false$8782$1Bug2v
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$8783$1Bug2v
                                                           g$rest$8784$1Bug2v)
                                                         (if ((case-lambda
                                                                ((g$t$8785$1Bug2v)
                                                                 (if g$t$8785$1Bug2v
                                                                   g$t$8785$1Bug2v
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$8777$1Bug2v
                                                                            g$kwd$8783$1Bug2v
                                                                            g$valid-kwds$8776$1Bug2v))))))
                                                              (not (g$id?$7254$1Bug2v
                                                                     g$kwd$8783$1Bug2v)))
                                                           (g$syntax-violation$7643$1Bug2v
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$8783$1Bug2v)
                                                           (if (g$bound-id-member?$7261$1Bug2v
                                                                 g$kwd$8783$1Bug2v
                                                                 g$seen*$8780$1Bug2v)
                                                             (g$syntax-violation$7643$1Bug2v
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$8774$1Bug2v
                                                               g$kwd$8783$1Bug2v)
                                                             (g$f$8778$1Bug2v
                                                               (cdr g$cls*$8779$1Bug2v)
                                                               (cons
                                                                 g$kwd$8783$1Bug2v
                                                                 g$seen*$8780$1Bug2v))))))
                                                      g$ls/false$8782$1Bug2v)
                                                    ((case-lambda
                                                       ((g$t$8786$1Bug2v)
                                                        ((case-lambda
                                                           ((g$ls/false$8787$1Bug2v)
                                                            (if g$ls/false$8787$1Bug2v
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$8788$1Bug2v)
                                                                   (g$syntax-violation$7643$1Bug2v
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$8788$1Bug2v)))
                                                                g$ls/false$8787$1Bug2v)
                                                              (g$syntax-violation$7643$1Bug2v
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$8786$1Bug2v))))
                                                         (g$syntax-dispatch$7532$1Bug2v
                                                           g$t$8786$1Bug2v
                                                           'any))))
                                                     g$t$8781$1Bug2v))))
                                               (g$syntax-dispatch$7532$1Bug2v
                                                 g$t$8781$1Bug2v
                                                 '(any . any)))))
                                           (car g$cls*$8779$1Bug2v))
                                          (void))))))
                            g$f$8778$1Bug2v)
                          g$cls*$8775$1Bug2v
                          '()))))))
          ((case-lambda
             ((g$t$8770$1Bug2v)
              ((case-lambda
                 ((g$ls/false$8771$1Bug2v)
                  (if g$ls/false$8771$1Bug2v
                    (apply
                      (case-lambda
                        ((g$namespec$8772$1Bug2v g$clause*$8773$1Bug2v)
                         (begin
                           (g$verify-clauses$8769$1Bug2v
                             g$x$8752$1Bug2v
                             g$clause*$8773$1Bug2v)
                           (g$do-define-record$8768$1Bug2v
                             g$namespec$8772$1Bug2v
                             g$clause*$8773$1Bug2v))))
                      g$ls/false$8771$1Bug2v)
                    (g$syntax-violation$7643$1Bug2v
                      '#f
                      '"invalid syntax"
                      g$t$8770$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$8770$1Bug2v
                 '(_ any . each-any)))))
           g$x$8752$1Bug2v)))))
   (g$define-condition-type-macro$7527$1Bug2v
     g$define-condition-type-macro$10987$1Bug2v
     (case-lambda
       ((g$x$9008$1Bug2v)
        (letrec* ((g$mkname$9009$1Bug2v
                    (case-lambda
                      ((g$name$9032$1Bug2v g$suffix$9033$1Bug2v)
                       (g$datum->syntax$7645$1Bug2v
                         g$name$9032$1Bug2v
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$7646$1Bug2v g$name$9032$1Bug2v))
                             g$suffix$9033$1Bug2v)))))))
          ((case-lambda
             ((g$t$9010$1Bug2v)
              ((case-lambda
                 ((g$ls/false$9011$1Bug2v)
                  (if (if g$ls/false$9011$1Bug2v
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9012$1Bug2v
                                 g$name$9013$1Bug2v
                                 g$super$9014$1Bug2v
                                 g$constructor$9015$1Bug2v
                                 g$predicate$9016$1Bug2v
                                 g$field*$9017$1Bug2v
                                 g$accessor*$9018$1Bug2v)
                               (if (g$id?$7254$1Bug2v g$name$9013$1Bug2v)
                                 (if (g$id?$7254$1Bug2v g$super$9014$1Bug2v)
                                   (if (g$id?$7254$1Bug2v
                                         g$constructor$9015$1Bug2v)
                                     (if (g$id?$7254$1Bug2v
                                           g$predicate$9016$1Bug2v)
                                       (if (g$for-all$4960$1Bug2v
                                             g$id?$7254$1Bug2v
                                             g$field*$9017$1Bug2v)
                                         (begin
                                           '#f
                                           (g$for-all$4960$1Bug2v
                                             g$id?$7254$1Bug2v
                                             g$accessor*$9018$1Bug2v))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9011$1Bug2v))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9019$1Bug2v
                           g$name$9020$1Bug2v
                           g$super$9021$1Bug2v
                           g$constructor$9022$1Bug2v
                           g$predicate$9023$1Bug2v
                           g$field*$9024$1Bug2v
                           g$accessor*$9025$1Bug2v)
                         ((case-lambda
                            ((g$aux-accessor*$9026$1Bug2v)
                             (g$bless$7495$1Bug2v
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9020$1Bug2v
                                         g$constructor$9022$1Bug2v
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9021$1Bug2v)
                                         (cons
                                           (cons
                                             'fields
                                             (map (case-lambda
                                                    ((g$field$9027$1Bug2v
                                                       g$aux$9028$1Bug2v)
                                                     (list
                                                       'immutable
                                                       g$field$9027$1Bug2v
                                                       g$aux$9028$1Bug2v)))
                                                  g$field*$9024$1Bug2v
                                                  g$aux-accessor*$9026$1Bug2v))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9023$1Bug2v
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9020$1Bug2v)))
                                     (map (case-lambda
                                            ((g$accessor$9029$1Bug2v
                                               g$aux$9030$1Bug2v)
                                             (list
                                               'define
                                               g$accessor$9029$1Bug2v
                                               (list
                                                 'condition-accessor
                                                 (list
                                                   'record-type-descriptor
                                                   g$name$9020$1Bug2v)
                                                 g$aux$9030$1Bug2v))))
                                          g$accessor*$9025$1Bug2v
                                          g$aux-accessor*$9026$1Bug2v)))))))
                          (map (case-lambda ((g$x$9031$1Bug2v) (gensym)))
                               g$accessor*$9025$1Bug2v))))
                      g$ls/false$9011$1Bug2v)
                    (g$syntax-violation$7643$1Bug2v
                      '#f
                      '"invalid syntax"
                      g$t$9010$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$9010$1Bug2v
                 '(any any any any any . #(each (any any)))))))
           g$x$9008$1Bug2v)))))
   (g$incorrect-usage-macro$7528$1Bug2v
     g$incorrect-usage-macro$10988$1Bug2v
     (case-lambda
       ((g$e$9034$1Bug2v)
        (g$syntax-violation$7643$1Bug2v
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9034$1Bug2v))))
   (g$parameterize-macro$7529$1Bug2v
     g$parameterize-macro$10989$1Bug2v
     (case-lambda
       ((g$e$9035$1Bug2v)
        ((case-lambda
           ((g$t$9036$1Bug2v)
            ((case-lambda
               ((g$ls/false$9037$1Bug2v)
                (if g$ls/false$9037$1Bug2v
                  (apply
                    (case-lambda
                      ((g$b$9038$1Bug2v g$b*$9039$1Bug2v)
                       (g$bless$7495$1Bug2v
                         (cons
                           'let
                           (cons
                             '()
                             (cons g$b$9038$1Bug2v g$b*$9039$1Bug2v))))))
                    g$ls/false$9037$1Bug2v)
                  ((case-lambda
                     ((g$t$9040$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$9041$1Bug2v)
                          (if g$ls/false$9041$1Bug2v
                            (apply
                              (case-lambda
                                ((g$olhs*$9042$1Bug2v
                                   g$orhs*$9043$1Bug2v
                                   g$b$9044$1Bug2v
                                   g$b*$9045$1Bug2v)
                                 ((case-lambda
                                    ((g$lhs*$9046$1Bug2v g$rhs*$9047$1Bug2v)
                                     (g$bless$7495$1Bug2v
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9046$1Bug2v
                                             g$rhs*$9047$1Bug2v)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (map (case-lambda
                                                            ((g$lhs$9048$1Bug2v
                                                               g$rhs$9049$1Bug2v)
                                                             (list
                                                               'let
                                                               (list
                                                                 (list
                                                                   't
                                                                   (list
                                                                     g$lhs$9048$1Bug2v)))
                                                               (list
                                                                 g$lhs$9048$1Bug2v
                                                                 g$rhs$9049$1Bug2v)
                                                               (cons
                                                                 'set!
                                                                 (cons
                                                                   g$rhs$9049$1Bug2v
                                                                   '(t))))))
                                                          g$lhs*$9046$1Bug2v
                                                          g$rhs*$9047$1Bug2v)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9044$1Bug2v
                                                         g$b*$9045$1Bug2v)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9042$1Bug2v
                                           g$orhs*$9043$1Bug2v)))))
                                  (g$generate-temporaries$7633$1Bug2v
                                    g$olhs*$9042$1Bug2v)
                                  (g$generate-temporaries$7633$1Bug2v
                                    g$orhs*$9043$1Bug2v))))
                              g$ls/false$9041$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$9040$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$9040$1Bug2v
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9036$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$9036$1Bug2v
               '(_ () any . each-any)))))
         g$e$9035$1Bug2v))))
   (g$foreign-call-transformer$7530$1Bug2v
     g$foreign-call-transformer$10990$1Bug2v
     (case-lambda
       ((g$e$9050$1Bug2v g$r$9051$1Bug2v g$mr$9052$1Bug2v)
        ((case-lambda
           ((g$t$9053$1Bug2v)
            ((case-lambda
               ((g$ls/false$9054$1Bug2v)
                (if g$ls/false$9054$1Bug2v
                  (apply
                    (case-lambda
                      ((g$name$9055$1Bug2v g$arg*$9056$1Bug2v)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$7550$1Bug2v
                             g$name$9055$1Bug2v
                             g$r$9051$1Bug2v
                             g$mr$9052$1Bug2v)
                           (g$chi-expr*$7548$1Bug2v
                             g$arg*$9056$1Bug2v
                             g$r$9051$1Bug2v
                             g$mr$9052$1Bug2v)))))
                    g$ls/false$9054$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$9053$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$9053$1Bug2v
               '(_ any . each-any)))))
         g$e$9050$1Bug2v))))
   (g$convert-pattern$7531$1Bug2v
     g$convert-pattern$10991$1Bug2v
     (case-lambda
       ((g$pattern$9057$1Bug2v g$keys$9058$1Bug2v)
        (letrec* ((g$cvt*$9059$1Bug2v
                    (case-lambda
                      ((g$p*$9139$1Bug2v g$n$9140$1Bug2v g$ids$9141$1Bug2v)
                       (if (null? g$p*$9139$1Bug2v)
                         (values '() g$ids$9141$1Bug2v)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9059$1Bug2v
                                (cdr g$p*$9139$1Bug2v)
                                g$n$9140$1Bug2v
                                g$ids$9141$1Bug2v)))
                           (case-lambda
                             ((g$y$9144$1Bug2v g$ids$9145$1Bug2v)
                              ((case-lambda
                                 ((g$ids$9146$1Bug2v g$y$9147$1Bug2v)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9060$1Bug2v
                                         (car g$p*$9139$1Bug2v)
                                         g$n$9140$1Bug2v
                                         g$ids$9146$1Bug2v)))
                                    (case-lambda
                                      ((g$x$9150$1Bug2v g$ids$9151$1Bug2v)
                                       ((case-lambda
                                          ((g$ids$9152$1Bug2v g$x$9153$1Bug2v)
                                           (values
                                             (cons
                                               g$x$9153$1Bug2v
                                               g$y$9147$1Bug2v)
                                             g$ids$9152$1Bug2v)))
                                        g$ids$9151$1Bug2v
                                        g$x$9150$1Bug2v))))))
                               g$ids$9145$1Bug2v
                               g$y$9144$1Bug2v))))))))
                  (g$cvt$9060$1Bug2v
                    (case-lambda
                      ((g$p$9061$1Bug2v g$n$9062$1Bug2v g$ids$9063$1Bug2v)
                       ((case-lambda
                          ((g$t$9064$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$9065$1Bug2v)
                               (if (if g$ls/false$9065$1Bug2v
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9066$1Bug2v)
                                            (g$id?$7254$1Bug2v
                                              g$id$9066$1Bug2v)))
                                         g$ls/false$9065$1Bug2v))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9067$1Bug2v)
                                      (if (g$bound-id-member?$7261$1Bug2v
                                            g$p$9061$1Bug2v
                                            g$keys$9058$1Bug2v)
                                        (values
                                          (vector 'free-id g$p$9061$1Bug2v)
                                          g$ids$9063$1Bug2v)
                                        (if (g$free-id=?$7258$1Bug2v
                                              g$p$9061$1Bug2v
                                              (g$scheme-stx$7475$1Bug2v '_))
                                          (values '_ g$ids$9063$1Bug2v)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9061$1Bug2v
                                                g$n$9062$1Bug2v)
                                              g$ids$9063$1Bug2v))))))
                                   g$ls/false$9065$1Bug2v)
                                 ((case-lambda
                                    ((g$t$9068$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$9069$1Bug2v)
                                         (if (if g$ls/false$9069$1Bug2v
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9070$1Bug2v
                                                        g$dots$9071$1Bug2v)
                                                      (g$ellipsis?$7533$1Bug2v
                                                        g$dots$9071$1Bug2v)))
                                                   g$ls/false$9069$1Bug2v))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9072$1Bug2v
                                                  g$dots$9073$1Bug2v)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9060$1Bug2v
                                                       g$p$9072$1Bug2v
                                                       (+ g$n$9062$1Bug2v '1)
                                                       g$ids$9063$1Bug2v)))
                                                  (case-lambda
                                                    ((g$p$9076$1Bug2v
                                                       g$ids$9077$1Bug2v)
                                                     ((case-lambda
                                                        ((g$ids$9078$1Bug2v
                                                           g$p$9079$1Bug2v)
                                                         (values
                                                           (if (eq? g$p$9079$1Bug2v
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9079$1Bug2v))
                                                           g$ids$9078$1Bug2v)))
                                                      g$ids$9077$1Bug2v
                                                      g$p$9076$1Bug2v))))))
                                             g$ls/false$9069$1Bug2v)
                                           ((case-lambda
                                              ((g$t$9080$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$9081$1Bug2v)
                                                   (if (if g$ls/false$9081$1Bug2v
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9082$1Bug2v
                                                                  g$dots$9083$1Bug2v
                                                                  g$ys$9084$1Bug2v
                                                                  g$z$9085$1Bug2v)
                                                                (g$ellipsis?$7533$1Bug2v
                                                                  g$dots$9083$1Bug2v)))
                                                             g$ls/false$9081$1Bug2v))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9086$1Bug2v
                                                            g$dots$9087$1Bug2v
                                                            g$ys$9088$1Bug2v
                                                            g$z$9089$1Bug2v)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9060$1Bug2v
                                                                 g$z$9089$1Bug2v
                                                                 g$n$9062$1Bug2v
                                                                 g$ids$9063$1Bug2v)))
                                                            (case-lambda
                                                              ((g$z$9092$1Bug2v
                                                                 g$ids$9093$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$ids$9094$1Bug2v
                                                                     g$z$9095$1Bug2v)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9059$1Bug2v
                                                                          g$ys$9088$1Bug2v
                                                                          g$n$9062$1Bug2v
                                                                          g$ids$9094$1Bug2v)))
                                                                     (case-lambda
                                                                       ((g$ys$9098$1Bug2v
                                                                          g$ids$9099$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$ids$9100$1Bug2v
                                                                              g$ys$9101$1Bug2v)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9060$1Bug2v
                                                                                   g$x$9086$1Bug2v
                                                                                   (+ g$n$9062$1Bug2v
                                                                                      '1)
                                                                                   g$ids$9100$1Bug2v)))
                                                                              (case-lambda
                                                                                ((g$x$9104$1Bug2v
                                                                                   g$ids$9105$1Bug2v)
                                                                                 ((case-lambda
                                                                                    ((g$ids$9106$1Bug2v
                                                                                       g$x$9107$1Bug2v)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$9107$1Bug2v
                                                                                         (reverse
                                                                                           g$ys$9101$1Bug2v)
                                                                                         g$z$9095$1Bug2v)
                                                                                       g$ids$9106$1Bug2v)))
                                                                                  g$ids$9105$1Bug2v
                                                                                  g$x$9104$1Bug2v))))))
                                                                         g$ids$9099$1Bug2v
                                                                         g$ys$9098$1Bug2v))))))
                                                                g$ids$9093$1Bug2v
                                                                g$z$9092$1Bug2v))))))
                                                       g$ls/false$9081$1Bug2v)
                                                     ((case-lambda
                                                        ((g$t$9108$1Bug2v)
                                                         ((case-lambda
                                                            ((g$ls/false$9109$1Bug2v)
                                                             (if g$ls/false$9109$1Bug2v
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$9110$1Bug2v
                                                                      g$y$9111$1Bug2v)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9060$1Bug2v
                                                                           g$y$9111$1Bug2v
                                                                           g$n$9062$1Bug2v
                                                                           g$ids$9063$1Bug2v)))
                                                                      (case-lambda
                                                                        ((g$y$9114$1Bug2v
                                                                           g$ids$9115$1Bug2v)
                                                                         ((case-lambda
                                                                            ((g$ids$9116$1Bug2v
                                                                               g$y$9117$1Bug2v)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9060$1Bug2v
                                                                                    g$x$9110$1Bug2v
                                                                                    g$n$9062$1Bug2v
                                                                                    g$ids$9116$1Bug2v)))
                                                                               (case-lambda
                                                                                 ((g$x$9120$1Bug2v
                                                                                    g$ids$9121$1Bug2v)
                                                                                  ((case-lambda
                                                                                     ((g$ids$9122$1Bug2v
                                                                                        g$x$9123$1Bug2v)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$9123$1Bug2v
                                                                                          g$y$9117$1Bug2v)
                                                                                        g$ids$9122$1Bug2v)))
                                                                                   g$ids$9121$1Bug2v
                                                                                   g$x$9120$1Bug2v))))))
                                                                          g$ids$9115$1Bug2v
                                                                          g$y$9114$1Bug2v))))))
                                                                 g$ls/false$9109$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$t$9124$1Bug2v)
                                                                   ((case-lambda
                                                                      ((g$ls/false$9125$1Bug2v)
                                                                       (if g$ls/false$9125$1Bug2v
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9063$1Bug2v)))
                                                                           g$ls/false$9125$1Bug2v)
                                                                         ((case-lambda
                                                                            ((g$t$9126$1Bug2v)
                                                                             ((case-lambda
                                                                                ((g$ls/false$9127$1Bug2v)
                                                                                 (if (if g$ls/false$9127$1Bug2v
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$9128$1Bug2v)
                                                                                              (not (g$stx?$7226$1Bug2v
                                                                                                     g$p$9128$1Bug2v))))
                                                                                           g$ls/false$9127$1Bug2v))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$9129$1Bug2v)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9060$1Bug2v
                                                                                               g$p$9129$1Bug2v
                                                                                               g$n$9062$1Bug2v
                                                                                               g$ids$9063$1Bug2v)))
                                                                                          (case-lambda
                                                                                            ((g$p$9132$1Bug2v
                                                                                               g$ids$9133$1Bug2v)
                                                                                             ((case-lambda
                                                                                                ((g$ids$9134$1Bug2v
                                                                                                   g$p$9135$1Bug2v)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$9135$1Bug2v)
                                                                                                   g$ids$9134$1Bug2v)))
                                                                                              g$ids$9133$1Bug2v
                                                                                              g$p$9132$1Bug2v))))))
                                                                                     g$ls/false$9127$1Bug2v)
                                                                                   ((case-lambda
                                                                                      ((g$t$9136$1Bug2v)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$9137$1Bug2v)
                                                                                           (if g$ls/false$9137$1Bug2v
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$9138$1Bug2v)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$7265$1Bug2v
                                                                                                        g$datum$9138$1Bug2v))
                                                                                                    g$ids$9063$1Bug2v)))
                                                                                               g$ls/false$9137$1Bug2v)
                                                                                             (g$syntax-violation$7643$1Bug2v
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$9136$1Bug2v))))
                                                                                        (g$syntax-dispatch$7532$1Bug2v
                                                                                          g$t$9136$1Bug2v
                                                                                          'any))))
                                                                                    g$t$9126$1Bug2v))))
                                                                              (g$syntax-dispatch$7532$1Bug2v
                                                                                g$t$9126$1Bug2v
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$9124$1Bug2v))))
                                                                    (g$syntax-dispatch$7532$1Bug2v
                                                                      g$t$9124$1Bug2v
                                                                      '()))))
                                                                g$t$9108$1Bug2v))))
                                                          (g$syntax-dispatch$7532$1Bug2v
                                                            g$t$9108$1Bug2v
                                                            '(any . any)))))
                                                      g$t$9080$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$9080$1Bug2v
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9068$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$9068$1Bug2v
                                        '(any any)))))
                                  g$t$9064$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$9064$1Bug2v
                              'any))))
                        g$p$9061$1Bug2v)))))
          (g$cvt$9060$1Bug2v g$pattern$9057$1Bug2v '0 '())))))
   (g$syntax-dispatch$7532$1Bug2v
     g$syntax-dispatch$10992$1Bug2v
     (case-lambda
       ((g$e$9154$1Bug2v g$p$9155$1Bug2v)
        (letrec* ((g$stx^$9156$1Bug2v
                    (case-lambda
                      ((g$e$9264$1Bug2v
                         g$m*$9265$1Bug2v
                         g$s*$9266$1Bug2v
                         g$ae*$9267$1Bug2v)
                       (if (if (null? g$m*$9265$1Bug2v)
                             (if (null? g$s*$9266$1Bug2v)
                               (begin '#f (null? g$ae*$9267$1Bug2v))
                               '#f)
                             '#f)
                         g$e$9264$1Bug2v
                         (g$mkstx$7242$1Bug2v
                           g$e$9264$1Bug2v
                           g$m*$9265$1Bug2v
                           g$s*$9266$1Bug2v
                           g$ae*$9267$1Bug2v)))))
                  (g$match-each$9157$1Bug2v
                    (case-lambda
                      ((g$e$9248$1Bug2v
                         g$p$9249$1Bug2v
                         g$m*$9250$1Bug2v
                         g$s*$9251$1Bug2v
                         g$ae*$9252$1Bug2v)
                       (if (pair? g$e$9248$1Bug2v)
                         ((case-lambda
                            ((g$first$9253$1Bug2v)
                             (if g$first$9253$1Bug2v
                               (begin
                                 '#f
                                 ((case-lambda
                                    ((g$rest$9254$1Bug2v)
                                     (if g$rest$9254$1Bug2v
                                       (begin
                                         '#f
                                         (cons
                                           g$first$9253$1Bug2v
                                           g$rest$9254$1Bug2v))
                                       '#f)))
                                  (g$match-each$9157$1Bug2v
                                    (cdr g$e$9248$1Bug2v)
                                    g$p$9249$1Bug2v
                                    g$m*$9250$1Bug2v
                                    g$s*$9251$1Bug2v
                                    g$ae*$9252$1Bug2v)))
                               '#f)))
                          (g$match$9163$1Bug2v
                            (car g$e$9248$1Bug2v)
                            g$p$9249$1Bug2v
                            g$m*$9250$1Bug2v
                            g$s*$9251$1Bug2v
                            g$ae*$9252$1Bug2v
                            '()))
                         (if (null? g$e$9248$1Bug2v)
                           '()
                           (if (g$stx?$7226$1Bug2v g$e$9248$1Bug2v)
                             (if (not (g$top-marked?$7197$1Bug2v
                                        g$m*$9250$1Bug2v))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7241$1Bug2v
                                        g$m*$9250$1Bug2v
                                        g$s*$9251$1Bug2v
                                        g$ae*$9252$1Bug2v
                                        g$e$9248$1Bug2v)))
                                   (case-lambda
                                     ((g$m*$9258$1Bug2v
                                        g$s*$9259$1Bug2v
                                        g$ae*$9260$1Bug2v)
                                      ((case-lambda
                                         ((g$ae*$9261$1Bug2v
                                            g$s*$9262$1Bug2v
                                            g$m*$9263$1Bug2v)
                                          (g$match-each$9157$1Bug2v
                                            (g$stx-expr$7228$1Bug2v
                                              g$e$9248$1Bug2v)
                                            g$p$9249$1Bug2v
                                            g$m*$9263$1Bug2v
                                            g$s*$9262$1Bug2v
                                            g$ae*$9261$1Bug2v)))
                                       g$ae*$9260$1Bug2v
                                       g$s*$9259$1Bug2v
                                       g$m*$9258$1Bug2v)))))
                               '#f)
                             (if (annotation? g$e$9248$1Bug2v)
                               (g$match-each$9157$1Bug2v
                                 (annotation-expression g$e$9248$1Bug2v)
                                 g$p$9249$1Bug2v
                                 g$m*$9250$1Bug2v
                                 g$s*$9251$1Bug2v
                                 g$ae*$9252$1Bug2v)
                               '#f)))))))
                  (g$match-each+$9158$1Bug2v
                    (case-lambda
                      ((g$e$9216$1Bug2v
                         g$x-pat$9217$1Bug2v
                         g$y-pat$9218$1Bug2v
                         g$z-pat$9219$1Bug2v
                         g$m*$9220$1Bug2v
                         g$s*$9221$1Bug2v
                         g$ae*$9222$1Bug2v
                         g$r$9223$1Bug2v)
                       ((letrec ((g$f$9224$1Bug2v
                                   (case-lambda
                                     ((g$e$9225$1Bug2v
                                        g$m*$9226$1Bug2v
                                        g$s*$9227$1Bug2v
                                        g$ae*$9228$1Bug2v)
                                      (if (pair? g$e$9225$1Bug2v)
                                        (call-with-values
                                          (case-lambda
                                            (()
                                             (g$f$9224$1Bug2v
                                               (cdr g$e$9225$1Bug2v)
                                               g$m*$9226$1Bug2v
                                               g$s*$9227$1Bug2v
                                               g$ae*$9228$1Bug2v)))
                                          (case-lambda
                                            ((g$xr*$9232$1Bug2v
                                               g$y-pat$9233$1Bug2v
                                               g$r$9234$1Bug2v)
                                             ((case-lambda
                                                ((g$r$9235$1Bug2v
                                                   g$y-pat$9236$1Bug2v
                                                   g$xr*$9237$1Bug2v)
                                                 (if g$r$9235$1Bug2v
                                                   (if (null?
                                                         g$y-pat$9236$1Bug2v)
                                                     ((case-lambda
                                                        ((g$xr$9238$1Bug2v)
                                                         (if g$xr$9238$1Bug2v
                                                           (values
                                                             (cons
                                                               g$xr$9238$1Bug2v
                                                               g$xr*$9237$1Bug2v)
                                                             g$y-pat$9236$1Bug2v
                                                             g$r$9235$1Bug2v)
                                                           (values
                                                             '#f
                                                             '#f
                                                             '#f))))
                                                      (g$match$9163$1Bug2v
                                                        (car g$e$9225$1Bug2v)
                                                        g$x-pat$9217$1Bug2v
                                                        g$m*$9226$1Bug2v
                                                        g$s*$9227$1Bug2v
                                                        g$ae*$9228$1Bug2v
                                                        '()))
                                                     (values
                                                       '()
                                                       (cdr g$y-pat$9236$1Bug2v)
                                                       (g$match$9163$1Bug2v
                                                         (car g$e$9225$1Bug2v)
                                                         (car g$y-pat$9236$1Bug2v)
                                                         g$m*$9226$1Bug2v
                                                         g$s*$9227$1Bug2v
                                                         g$ae*$9228$1Bug2v
                                                         g$r$9235$1Bug2v)))
                                                   (values '#f '#f '#f))))
                                              g$r$9234$1Bug2v
                                              g$y-pat$9233$1Bug2v
                                              g$xr*$9232$1Bug2v))))
                                        (if (g$stx?$7226$1Bug2v g$e$9225$1Bug2v)
                                          (if (g$top-marked?$7197$1Bug2v
                                                g$m*$9226$1Bug2v)
                                            (values
                                              '()
                                              g$y-pat$9218$1Bug2v
                                              (g$match$9163$1Bug2v
                                                g$e$9225$1Bug2v
                                                g$z-pat$9219$1Bug2v
                                                g$m*$9226$1Bug2v
                                                g$s*$9227$1Bug2v
                                                g$ae*$9228$1Bug2v
                                                g$r$9223$1Bug2v))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$join-wraps$7241$1Bug2v
                                                   g$m*$9226$1Bug2v
                                                   g$s*$9227$1Bug2v
                                                   g$ae*$9228$1Bug2v
                                                   g$e$9225$1Bug2v)))
                                              (case-lambda
                                                ((g$m*$9242$1Bug2v
                                                   g$s*$9243$1Bug2v
                                                   g$ae*$9244$1Bug2v)
                                                 ((case-lambda
                                                    ((g$ae*$9245$1Bug2v
                                                       g$s*$9246$1Bug2v
                                                       g$m*$9247$1Bug2v)
                                                     (g$f$9224$1Bug2v
                                                       (g$stx-expr$7228$1Bug2v
                                                         g$e$9225$1Bug2v)
                                                       g$m*$9247$1Bug2v
                                                       g$s*$9246$1Bug2v
                                                       g$ae*$9245$1Bug2v)))
                                                  g$ae*$9244$1Bug2v
                                                  g$s*$9243$1Bug2v
                                                  g$m*$9242$1Bug2v)))))
                                          (if (annotation? g$e$9225$1Bug2v)
                                            (g$f$9224$1Bug2v
                                              (annotation-expression
                                                g$e$9225$1Bug2v)
                                              g$m*$9226$1Bug2v
                                              g$s*$9227$1Bug2v
                                              g$ae*$9228$1Bug2v)
                                            (values
                                              '()
                                              g$y-pat$9218$1Bug2v
                                              (g$match$9163$1Bug2v
                                                g$e$9225$1Bug2v
                                                g$z-pat$9219$1Bug2v
                                                g$m*$9226$1Bug2v
                                                g$s*$9227$1Bug2v
                                                g$ae*$9228$1Bug2v
                                                g$r$9223$1Bug2v)))))))))
                          g$f$9224$1Bug2v)
                        g$e$9216$1Bug2v
                        g$m*$9220$1Bug2v
                        g$s*$9221$1Bug2v
                        g$ae*$9222$1Bug2v))))
                  (g$match-each-any$9159$1Bug2v
                    (case-lambda
                      ((g$e$9202$1Bug2v
                         g$m*$9203$1Bug2v
                         g$s*$9204$1Bug2v
                         g$ae*$9205$1Bug2v)
                       (if (pair? g$e$9202$1Bug2v)
                         ((case-lambda
                            ((g$l$9206$1Bug2v)
                             (if g$l$9206$1Bug2v
                               (begin
                                 '#f
                                 (cons
                                   (g$stx^$9156$1Bug2v
                                     (car g$e$9202$1Bug2v)
                                     g$m*$9203$1Bug2v
                                     g$s*$9204$1Bug2v
                                     g$ae*$9205$1Bug2v)
                                   g$l$9206$1Bug2v))
                               '#f)))
                          (g$match-each-any$9159$1Bug2v
                            (cdr g$e$9202$1Bug2v)
                            g$m*$9203$1Bug2v
                            g$s*$9204$1Bug2v
                            g$ae*$9205$1Bug2v))
                         (if (null? g$e$9202$1Bug2v)
                           '()
                           (if (g$stx?$7226$1Bug2v g$e$9202$1Bug2v)
                             (if (not (g$top-marked?$7197$1Bug2v
                                        g$m*$9203$1Bug2v))
                               (begin
                                 '#f
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$join-wraps$7241$1Bug2v
                                        g$m*$9203$1Bug2v
                                        g$s*$9204$1Bug2v
                                        g$ae*$9205$1Bug2v
                                        g$e$9202$1Bug2v)))
                                   (case-lambda
                                     ((g$m*$9210$1Bug2v
                                        g$s*$9211$1Bug2v
                                        g$ae*$9212$1Bug2v)
                                      ((case-lambda
                                         ((g$ae*$9213$1Bug2v
                                            g$s*$9214$1Bug2v
                                            g$m*$9215$1Bug2v)
                                          (g$match-each-any$9159$1Bug2v
                                            (g$stx-expr$7228$1Bug2v
                                              g$e$9202$1Bug2v)
                                            g$m*$9215$1Bug2v
                                            g$s*$9214$1Bug2v
                                            g$ae*$9213$1Bug2v)))
                                       g$ae*$9212$1Bug2v
                                       g$s*$9211$1Bug2v
                                       g$m*$9210$1Bug2v)))))
                               '#f)
                             (if (annotation? g$e$9202$1Bug2v)
                               (g$match-each-any$9159$1Bug2v
                                 (annotation-expression g$e$9202$1Bug2v)
                                 g$m*$9203$1Bug2v
                                 g$s*$9204$1Bug2v
                                 g$ae*$9205$1Bug2v)
                               '#f)))))))
                  (g$match-empty$9160$1Bug2v
                    (case-lambda
                      ((g$p$9199$1Bug2v g$r$9200$1Bug2v)
                       (if (null? g$p$9199$1Bug2v)
                         g$r$9200$1Bug2v
                         (if (eq? g$p$9199$1Bug2v '_)
                           g$r$9200$1Bug2v
                           (if (eq? g$p$9199$1Bug2v 'any)
                             (cons '() g$r$9200$1Bug2v)
                             (if (pair? g$p$9199$1Bug2v)
                               (g$match-empty$9160$1Bug2v
                                 (car g$p$9199$1Bug2v)
                                 (g$match-empty$9160$1Bug2v
                                   (cdr g$p$9199$1Bug2v)
                                   g$r$9200$1Bug2v))
                               (if (eq? g$p$9199$1Bug2v 'each-any)
                                 (cons '() g$r$9200$1Bug2v)
                                 ((case-lambda
                                    ((g$t$9201$1Bug2v)
                                     (if (g$memv$4955$1Bug2v
                                           g$t$9201$1Bug2v
                                           '(each))
                                       (g$match-empty$9160$1Bug2v
                                         (vector-ref g$p$9199$1Bug2v '1)
                                         g$r$9200$1Bug2v)
                                       (if (g$memv$4955$1Bug2v
                                             g$t$9201$1Bug2v
                                             '(each+))
                                         (g$match-empty$9160$1Bug2v
                                           (vector-ref g$p$9199$1Bug2v '1)
                                           (g$match-empty$9160$1Bug2v
                                             (reverse
                                               (vector-ref g$p$9199$1Bug2v '2))
                                             (g$match-empty$9160$1Bug2v
                                               (vector-ref g$p$9199$1Bug2v '3)
                                               g$r$9200$1Bug2v)))
                                         (if (g$memv$4955$1Bug2v
                                               g$t$9201$1Bug2v
                                               '(free-id atom))
                                           g$r$9200$1Bug2v
                                           (if (g$memv$4955$1Bug2v
                                                 g$t$9201$1Bug2v
                                                 '(scheme-id atom))
                                             g$r$9200$1Bug2v
                                             (if (g$memv$4955$1Bug2v
                                                   g$t$9201$1Bug2v
                                                   '(vector))
                                               (g$match-empty$9160$1Bug2v
                                                 (vector-ref g$p$9199$1Bug2v '1)
                                                 g$r$9200$1Bug2v)
                                               (assertion-violation
                                                 'syntax-dispatch
                                                 '"invalid pattern"
                                                 g$p$9199$1Bug2v))))))))
                                  (vector-ref g$p$9199$1Bug2v '0))))))))))
                  (g$combine$9161$1Bug2v
                    (case-lambda
                      ((g$r*$9197$1Bug2v g$r$9198$1Bug2v)
                       (if (null? (car g$r*$9197$1Bug2v))
                         g$r$9198$1Bug2v
                         (cons
                           (map car g$r*$9197$1Bug2v)
                           (g$combine$9161$1Bug2v
                             (map cdr g$r*$9197$1Bug2v)
                             g$r$9198$1Bug2v))))))
                  (g$match*$9162$1Bug2v
                    (case-lambda
                      ((g$e$9179$1Bug2v
                         g$p$9180$1Bug2v
                         g$m*$9181$1Bug2v
                         g$s*$9182$1Bug2v
                         g$ae*$9183$1Bug2v
                         g$r$9184$1Bug2v)
                       (if (null? g$p$9180$1Bug2v)
                         (if (null? g$e$9179$1Bug2v)
                           (begin '#f g$r$9184$1Bug2v)
                           '#f)
                         (if (pair? g$p$9180$1Bug2v)
                           (if (pair? g$e$9179$1Bug2v)
                             (begin
                               '#f
                               (g$match$9163$1Bug2v
                                 (car g$e$9179$1Bug2v)
                                 (car g$p$9180$1Bug2v)
                                 g$m*$9181$1Bug2v
                                 g$s*$9182$1Bug2v
                                 g$ae*$9183$1Bug2v
                                 (g$match$9163$1Bug2v
                                   (cdr g$e$9179$1Bug2v)
                                   (cdr g$p$9180$1Bug2v)
                                   g$m*$9181$1Bug2v
                                   g$s*$9182$1Bug2v
                                   g$ae*$9183$1Bug2v
                                   g$r$9184$1Bug2v)))
                             '#f)
                           (if (eq? g$p$9180$1Bug2v 'each-any)
                             ((case-lambda
                                ((g$l$9185$1Bug2v)
                                 (if g$l$9185$1Bug2v
                                   (begin
                                     '#f
                                     (cons g$l$9185$1Bug2v g$r$9184$1Bug2v))
                                   '#f)))
                              (g$match-each-any$9159$1Bug2v
                                g$e$9179$1Bug2v
                                g$m*$9181$1Bug2v
                                g$s*$9182$1Bug2v
                                g$ae*$9183$1Bug2v))
                             ((case-lambda
                                ((g$t$9186$1Bug2v)
                                 (if (g$memv$4955$1Bug2v
                                       g$t$9186$1Bug2v
                                       '(each))
                                   (if (null? g$e$9179$1Bug2v)
                                     (g$match-empty$9160$1Bug2v
                                       (vector-ref g$p$9180$1Bug2v '1)
                                       g$r$9184$1Bug2v)
                                     ((case-lambda
                                        ((g$r*$9187$1Bug2v)
                                         (if g$r*$9187$1Bug2v
                                           (begin
                                             '#f
                                             (g$combine$9161$1Bug2v
                                               g$r*$9187$1Bug2v
                                               g$r$9184$1Bug2v))
                                           '#f)))
                                      (g$match-each$9157$1Bug2v
                                        g$e$9179$1Bug2v
                                        (vector-ref g$p$9180$1Bug2v '1)
                                        g$m*$9181$1Bug2v
                                        g$s*$9182$1Bug2v
                                        g$ae*$9183$1Bug2v)))
                                   (if (g$memv$4955$1Bug2v
                                         g$t$9186$1Bug2v
                                         '(free-id))
                                     (if (symbol? g$e$9179$1Bug2v)
                                       (if (g$top-marked?$7197$1Bug2v
                                             g$m*$9181$1Bug2v)
                                         (if (g$free-id=?$7258$1Bug2v
                                               (g$stx^$9156$1Bug2v
                                                 g$e$9179$1Bug2v
                                                 g$m*$9181$1Bug2v
                                                 g$s*$9182$1Bug2v
                                                 g$ae*$9183$1Bug2v)
                                               (vector-ref g$p$9180$1Bug2v '1))
                                           (begin '#f g$r$9184$1Bug2v)
                                           '#f)
                                         '#f)
                                       '#f)
                                     (if (g$memv$4955$1Bug2v
                                           g$t$9186$1Bug2v
                                           '(scheme-id))
                                       (if (symbol? g$e$9179$1Bug2v)
                                         (if (g$top-marked?$7197$1Bug2v
                                               g$m*$9181$1Bug2v)
                                           (if (g$free-id=?$7258$1Bug2v
                                                 (g$stx^$9156$1Bug2v
                                                   g$e$9179$1Bug2v
                                                   g$m*$9181$1Bug2v
                                                   g$s*$9182$1Bug2v
                                                   g$ae*$9183$1Bug2v)
                                                 (g$scheme-stx$7475$1Bug2v
                                                   (vector-ref
                                                     g$p$9180$1Bug2v
                                                     '1)))
                                             (begin '#f g$r$9184$1Bug2v)
                                             '#f)
                                           '#f)
                                         '#f)
                                       (if (g$memv$4955$1Bug2v
                                             g$t$9186$1Bug2v
                                             '(each+))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$match-each+$9158$1Bug2v
                                                g$e$9179$1Bug2v
                                                (vector-ref g$p$9180$1Bug2v '1)
                                                (vector-ref g$p$9180$1Bug2v '2)
                                                (vector-ref g$p$9180$1Bug2v '3)
                                                g$m*$9181$1Bug2v
                                                g$s*$9182$1Bug2v
                                                g$ae*$9183$1Bug2v
                                                g$r$9184$1Bug2v)))
                                           (case-lambda
                                             ((g$xr*$9191$1Bug2v
                                                g$y-pat$9192$1Bug2v
                                                g$r$9193$1Bug2v)
                                              ((case-lambda
                                                 ((g$r$9194$1Bug2v
                                                    g$y-pat$9195$1Bug2v
                                                    g$xr*$9196$1Bug2v)
                                                  (if g$r$9194$1Bug2v
                                                    (if (null?
                                                          g$y-pat$9195$1Bug2v)
                                                      (begin
                                                        '#f
                                                        (if (null?
                                                              g$xr*$9196$1Bug2v)
                                                          (g$match-empty$9160$1Bug2v
                                                            (vector-ref
                                                              g$p$9180$1Bug2v
                                                              '1)
                                                            g$r$9194$1Bug2v)
                                                          (g$combine$9161$1Bug2v
                                                            g$xr*$9196$1Bug2v
                                                            g$r$9194$1Bug2v)))
                                                      '#f)
                                                    '#f)))
                                               g$r$9193$1Bug2v
                                               g$y-pat$9192$1Bug2v
                                               g$xr*$9191$1Bug2v))))
                                         (if (g$memv$4955$1Bug2v
                                               g$t$9186$1Bug2v
                                               '(atom))
                                           (if (equal?
                                                 (vector-ref g$p$9180$1Bug2v '1)
                                                 (g$strip$7264$1Bug2v
                                                   g$e$9179$1Bug2v
                                                   g$m*$9181$1Bug2v))
                                             (begin '#f g$r$9184$1Bug2v)
                                             '#f)
                                           (if (g$memv$4955$1Bug2v
                                                 g$t$9186$1Bug2v
                                                 '(vector))
                                             (if (vector? g$e$9179$1Bug2v)
                                               (begin
                                                 '#f
                                                 (g$match$9163$1Bug2v
                                                   (vector->list
                                                     g$e$9179$1Bug2v)
                                                   (vector-ref
                                                     g$p$9180$1Bug2v
                                                     '1)
                                                   g$m*$9181$1Bug2v
                                                   g$s*$9182$1Bug2v
                                                   g$ae*$9183$1Bug2v
                                                   g$r$9184$1Bug2v))
                                               '#f)
                                             (assertion-violation
                                               'syntax-dispatch
                                               '"invalid pattern"
                                               g$p$9180$1Bug2v)))))))))
                              (vector-ref g$p$9180$1Bug2v '0))))))))
                  (g$match$9163$1Bug2v
                    (case-lambda
                      ((g$e$9164$1Bug2v
                         g$p$9165$1Bug2v
                         g$m*$9166$1Bug2v
                         g$s*$9167$1Bug2v
                         g$ae*$9168$1Bug2v
                         g$r$9169$1Bug2v)
                       (if (not g$r$9169$1Bug2v)
                         '#f
                         (if (eq? g$p$9165$1Bug2v '_)
                           g$r$9169$1Bug2v
                           (if (eq? g$p$9165$1Bug2v 'any)
                             (cons
                               (g$stx^$9156$1Bug2v
                                 g$e$9164$1Bug2v
                                 g$m*$9166$1Bug2v
                                 g$s*$9167$1Bug2v
                                 g$ae*$9168$1Bug2v)
                               g$r$9169$1Bug2v)
                             (if (g$stx?$7226$1Bug2v g$e$9164$1Bug2v)
                               (if (not (g$top-marked?$7197$1Bug2v
                                          g$m*$9166$1Bug2v))
                                 (begin
                                   '#f
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$join-wraps$7241$1Bug2v
                                          g$m*$9166$1Bug2v
                                          g$s*$9167$1Bug2v
                                          g$ae*$9168$1Bug2v
                                          g$e$9164$1Bug2v)))
                                     (case-lambda
                                       ((g$m*$9173$1Bug2v
                                          g$s*$9174$1Bug2v
                                          g$ae*$9175$1Bug2v)
                                        ((case-lambda
                                           ((g$ae*$9176$1Bug2v
                                              g$s*$9177$1Bug2v
                                              g$m*$9178$1Bug2v)
                                            (g$match$9163$1Bug2v
                                              (g$stx-expr$7228$1Bug2v
                                                g$e$9164$1Bug2v)
                                              g$p$9165$1Bug2v
                                              g$m*$9178$1Bug2v
                                              g$s*$9177$1Bug2v
                                              g$ae*$9176$1Bug2v
                                              g$r$9169$1Bug2v)))
                                         g$ae*$9175$1Bug2v
                                         g$s*$9174$1Bug2v
                                         g$m*$9173$1Bug2v)))))
                                 '#f)
                               (if (annotation? g$e$9164$1Bug2v)
                                 (g$match$9163$1Bug2v
                                   (annotation-expression g$e$9164$1Bug2v)
                                   g$p$9165$1Bug2v
                                   g$m*$9166$1Bug2v
                                   g$s*$9167$1Bug2v
                                   g$ae*$9168$1Bug2v
                                   g$r$9169$1Bug2v)
                                 (g$match*$9162$1Bug2v
                                   g$e$9164$1Bug2v
                                   g$p$9165$1Bug2v
                                   g$m*$9166$1Bug2v
                                   g$s*$9167$1Bug2v
                                   g$ae*$9168$1Bug2v
                                   g$r$9169$1Bug2v))))))))))
          (g$match$9163$1Bug2v
            g$e$9154$1Bug2v
            g$p$9155$1Bug2v
            '()
            '()
            '()
            '())))))
   (g$ellipsis?$7533$1Bug2v
     g$ellipsis?$10993$1Bug2v
     (case-lambda
       ((g$x$9268$1Bug2v)
        (if (g$id?$7254$1Bug2v g$x$9268$1Bug2v)
          (begin
            '#f
            (g$free-id=?$7258$1Bug2v
              g$x$9268$1Bug2v
              (g$scheme-stx$7475$1Bug2v '...)))
          '#f))))
   (g$underscore?$7534$1Bug2v
     g$underscore?$10994$1Bug2v
     (case-lambda
       ((g$x$9269$1Bug2v)
        (if (g$id?$7254$1Bug2v g$x$9269$1Bug2v)
          (begin
            '#f
            (g$free-id=?$7258$1Bug2v
              g$x$9269$1Bug2v
              (g$scheme-stx$7475$1Bug2v '_)))
          '#f))))
   (g$verify-literals$7535$1Bug2v
     g$verify-literals$10995$1Bug2v
     (case-lambda
       ((g$lits$9270$1Bug2v g$expr$9271$1Bug2v)
        (for-each
          (case-lambda
            ((g$x$9272$1Bug2v)
             (if ((case-lambda
                    ((g$t$9273$1Bug2v)
                     (if g$t$9273$1Bug2v
                       g$t$9273$1Bug2v
                       ((case-lambda
                          ((g$t$9274$1Bug2v)
                           (if g$t$9274$1Bug2v
                             g$t$9274$1Bug2v
                             (begin
                               '#f
                               (g$underscore?$7534$1Bug2v g$x$9272$1Bug2v)))))
                        (g$ellipsis?$7533$1Bug2v g$x$9272$1Bug2v)))))
                  (not (g$id?$7254$1Bug2v g$x$9272$1Bug2v)))
               (g$syntax-violation$7643$1Bug2v
                 '#f
                 '"invalid literal"
                 g$expr$9271$1Bug2v
                 g$x$9272$1Bug2v)
               (void))))
          g$lits$9270$1Bug2v))))
   (g$syntax-case-transformer$7536$1Bug2v
     g$syntax-case-transformer$10996$1Bug2v
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$9275$1Bug2v
                     (case-lambda
                       ((g$pvars$9332$1Bug2v
                          g$expr$9333$1Bug2v
                          g$y$9334$1Bug2v
                          g$r$9335$1Bug2v
                          g$mr$9336$1Bug2v)
                        ((case-lambda
                           ((g$ids$9337$1Bug2v g$levels$9338$1Bug2v)
                            ((case-lambda
                               ((g$labels$9339$1Bug2v g$new-vars$9340$1Bug2v)
                                ((case-lambda
                                   ((g$body$9341$1Bug2v)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$7185$1Bug2v
                                        '#f
                                        g$new-vars$9340$1Bug2v
                                        g$body$9341$1Bug2v)
                                      g$y$9334$1Bug2v)))
                                 (g$chi-expr$7550$1Bug2v
                                   (g$add-subst$7244$1Bug2v
                                     (g$make-full-rib$7222$1Bug2v
                                       g$ids$9337$1Bug2v
                                       g$labels$9339$1Bug2v)
                                     g$expr$9333$1Bug2v)
                                   (append
                                     (map (case-lambda
                                            ((g$label$9342$1Bug2v
                                               g$var$9343$1Bug2v
                                               g$level$9344$1Bug2v)
                                             (cons
                                               g$label$9342$1Bug2v
                                               (g$make-binding$7270$1Bug2v
                                                 'syntax
                                                 (cons
                                                   g$var$9343$1Bug2v
                                                   g$level$9344$1Bug2v)))))
                                          g$labels$9339$1Bug2v
                                          g$new-vars$9340$1Bug2v
                                          (map cdr g$pvars$9332$1Bug2v))
                                     g$r$9335$1Bug2v)
                                   g$mr$9336$1Bug2v))))
                             (map g$gen-label$7200$1Bug2v g$ids$9337$1Bug2v)
                             (map g$gen-lexical$7198$1Bug2v
                                  g$ids$9337$1Bug2v))))
                         (map car g$pvars$9332$1Bug2v)
                         (map cdr g$pvars$9332$1Bug2v)))))
                   (g$invalid-ids-error$9276$1Bug2v
                     (case-lambda
                       ((g$id*$9326$1Bug2v g$e$9327$1Bug2v g$class$9328$1Bug2v)
                        ((letrec ((g$find$9329$1Bug2v
                                    (case-lambda
                                      ((g$id*$9330$1Bug2v g$ok*$9331$1Bug2v)
                                       (if (null? g$id*$9330$1Bug2v)
                                         (g$syntax-violation$7643$1Bug2v
                                           '#f
                                           '"invalid syntax"
                                           g$e$9327$1Bug2v)
                                         (if (g$id?$7254$1Bug2v
                                               (car g$id*$9330$1Bug2v))
                                           (if (g$bound-id-member?$7261$1Bug2v
                                                 (car g$id*$9330$1Bug2v)
                                                 g$ok*$9331$1Bug2v)
                                             (g$syntax-error$7640$1Bug2v
                                               (car g$id*$9330$1Bug2v)
                                               '"duplicate "
                                               g$class$9328$1Bug2v)
                                             (g$find$9329$1Bug2v
                                               (cdr g$id*$9330$1Bug2v)
                                               (cons
                                                 (car g$id*$9330$1Bug2v)
                                                 g$ok*$9331$1Bug2v)))
                                           (g$syntax-error$7640$1Bug2v
                                             (car g$id*$9330$1Bug2v)
                                             '"invalid "
                                             g$class$9328$1Bug2v)))))))
                           g$find$9329$1Bug2v)
                         g$id*$9326$1Bug2v
                         '()))))
                   (g$gen-clause$9277$1Bug2v
                     (case-lambda
                       ((g$x$9306$1Bug2v
                          g$keys$9307$1Bug2v
                          g$clauses$9308$1Bug2v
                          g$r$9309$1Bug2v
                          g$mr$9310$1Bug2v
                          g$pat$9311$1Bug2v
                          g$fender$9312$1Bug2v
                          g$expr$9313$1Bug2v)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$7531$1Bug2v
                               g$pat$9311$1Bug2v
                               g$keys$9307$1Bug2v)))
                          (case-lambda
                            ((g$p$9316$1Bug2v g$pvars$9317$1Bug2v)
                             ((case-lambda
                                ((g$pvars$9318$1Bug2v g$p$9319$1Bug2v)
                                 (if (not (g$distinct-bound-ids?$7260$1Bug2v
                                            (map car g$pvars$9318$1Bug2v)))
                                   (g$invalid-ids-error$9276$1Bug2v
                                     (map car g$pvars$9318$1Bug2v)
                                     g$pat$9311$1Bug2v
                                     '"pattern variable")
                                   (if (not (g$for-all$4960$1Bug2v
                                              (case-lambda
                                                ((g$x$9320$1Bug2v)
                                                 (not (g$ellipsis?$7533$1Bug2v
                                                        (car g$x$9320$1Bug2v)))))
                                              g$pvars$9318$1Bug2v))
                                     (g$syntax-violation$7643$1Bug2v
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$9311$1Bug2v)
                                     ((case-lambda
                                        ((g$y$9321$1Bug2v)
                                         ((case-lambda
                                            ((g$test$9322$1Bug2v)
                                             ((case-lambda
                                                ((g$conseq$9323$1Bug2v)
                                                 ((case-lambda
                                                    ((g$altern$9324$1Bug2v)
                                                     (list
                                                       (g$build-lambda$7185$1Bug2v
                                                         '#f
                                                         (list g$y$9321$1Bug2v)
                                                         (list
                                                           'if
                                                           g$test$9322$1Bug2v
                                                           g$conseq$9323$1Bug2v
                                                           g$altern$9324$1Bug2v))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$9306$1Bug2v
                                                         (list
                                                           'quote
                                                           g$p$9319$1Bug2v)))))
                                                  (g$gen-syntax-case$9278$1Bug2v
                                                    g$x$9306$1Bug2v
                                                    g$keys$9307$1Bug2v
                                                    g$clauses$9308$1Bug2v
                                                    g$r$9309$1Bug2v
                                                    g$mr$9310$1Bug2v))))
                                              (g$build-dispatch-call$9275$1Bug2v
                                                g$pvars$9318$1Bug2v
                                                g$expr$9313$1Bug2v
                                                g$y$9321$1Bug2v
                                                g$r$9309$1Bug2v
                                                g$mr$9310$1Bug2v))))
                                          (if (eq? g$fender$9312$1Bug2v '#t)
                                            g$y$9321$1Bug2v
                                            ((case-lambda
                                               ((g$call$9325$1Bug2v)
                                                (list
                                                  'if
                                                  g$y$9321$1Bug2v
                                                  g$call$9325$1Bug2v
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$9275$1Bug2v
                                               g$pvars$9318$1Bug2v
                                               g$fender$9312$1Bug2v
                                               g$y$9321$1Bug2v
                                               g$r$9309$1Bug2v
                                               g$mr$9310$1Bug2v))))))
                                      (g$gen-lexical$7198$1Bug2v 'tmp))))))
                              g$pvars$9317$1Bug2v
                              g$p$9316$1Bug2v)))))))
                   (g$gen-syntax-case$9278$1Bug2v
                     (case-lambda
                       ((g$x$9289$1Bug2v
                          g$keys$9290$1Bug2v
                          g$clauses$9291$1Bug2v
                          g$r$9292$1Bug2v
                          g$mr$9293$1Bug2v)
                        (if (null? g$clauses$9291$1Bug2v)
                          (list '(primitive syntax-error) g$x$9289$1Bug2v)
                          ((case-lambda
                             ((g$t$9294$1Bug2v)
                              ((case-lambda
                                 ((g$ls/false$9295$1Bug2v)
                                  (if g$ls/false$9295$1Bug2v
                                    (apply
                                      (case-lambda
                                        ((g$pat$9296$1Bug2v g$expr$9297$1Bug2v)
                                         (if (if (g$id?$7254$1Bug2v
                                                   g$pat$9296$1Bug2v)
                                               (if (not (g$bound-id-member?$7261$1Bug2v
                                                          g$pat$9296$1Bug2v
                                                          g$keys$9290$1Bug2v))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$7533$1Bug2v
                                                          g$pat$9296$1Bug2v)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$7258$1Bug2v
                                                 g$pat$9296$1Bug2v
                                                 (g$scheme-stx$7475$1Bug2v '_))
                                             (g$chi-expr$7550$1Bug2v
                                               g$expr$9297$1Bug2v
                                               g$r$9292$1Bug2v
                                               g$mr$9293$1Bug2v)
                                             ((case-lambda
                                                ((g$lab$9298$1Bug2v
                                                   g$lex$9299$1Bug2v)
                                                 ((case-lambda
                                                    ((g$body$9300$1Bug2v)
                                                     (list
                                                       (g$build-lambda$7185$1Bug2v
                                                         '#f
                                                         (list
                                                           g$lex$9299$1Bug2v)
                                                         g$body$9300$1Bug2v)
                                                       g$x$9289$1Bug2v)))
                                                  (g$chi-expr$7550$1Bug2v
                                                    (g$add-subst$7244$1Bug2v
                                                      (g$make-full-rib$7222$1Bug2v
                                                        (list g$pat$9296$1Bug2v)
                                                        (list
                                                          g$lab$9298$1Bug2v))
                                                      g$expr$9297$1Bug2v)
                                                    (cons
                                                      (cons
                                                        g$lab$9298$1Bug2v
                                                        (g$make-binding$7270$1Bug2v
                                                          'syntax
                                                          (cons
                                                            g$lex$9299$1Bug2v
                                                            '0)))
                                                      g$r$9292$1Bug2v)
                                                    g$mr$9293$1Bug2v))))
                                              (g$gen-label$7200$1Bug2v
                                                g$pat$9296$1Bug2v)
                                              (g$gen-lexical$7198$1Bug2v
                                                g$pat$9296$1Bug2v)))
                                           (g$gen-clause$9277$1Bug2v
                                             g$x$9289$1Bug2v
                                             g$keys$9290$1Bug2v
                                             (cdr g$clauses$9291$1Bug2v)
                                             g$r$9292$1Bug2v
                                             g$mr$9293$1Bug2v
                                             g$pat$9296$1Bug2v
                                             '#t
                                             g$expr$9297$1Bug2v))))
                                      g$ls/false$9295$1Bug2v)
                                    ((case-lambda
                                       ((g$t$9301$1Bug2v)
                                        ((case-lambda
                                           ((g$ls/false$9302$1Bug2v)
                                            (if g$ls/false$9302$1Bug2v
                                              (apply
                                                (case-lambda
                                                  ((g$pat$9303$1Bug2v
                                                     g$fender$9304$1Bug2v
                                                     g$expr$9305$1Bug2v)
                                                   (g$gen-clause$9277$1Bug2v
                                                     g$x$9289$1Bug2v
                                                     g$keys$9290$1Bug2v
                                                     (cdr g$clauses$9291$1Bug2v)
                                                     g$r$9292$1Bug2v
                                                     g$mr$9293$1Bug2v
                                                     g$pat$9303$1Bug2v
                                                     g$fender$9304$1Bug2v
                                                     g$expr$9305$1Bug2v)))
                                                g$ls/false$9302$1Bug2v)
                                              (g$syntax-violation$7643$1Bug2v
                                                '#f
                                                '"invalid syntax"
                                                g$t$9301$1Bug2v))))
                                         (g$syntax-dispatch$7532$1Bug2v
                                           g$t$9301$1Bug2v
                                           '(any any any)))))
                                     g$t$9294$1Bug2v))))
                               (g$syntax-dispatch$7532$1Bug2v
                                 g$t$9294$1Bug2v
                                 '(any any)))))
                           (car g$clauses$9291$1Bug2v)))))))
           (case-lambda
             ((g$e$9279$1Bug2v g$r$9280$1Bug2v g$mr$9281$1Bug2v)
              ((case-lambda
                 ((g$t$9282$1Bug2v)
                  ((case-lambda
                     ((g$ls/false$9283$1Bug2v)
                      (if g$ls/false$9283$1Bug2v
                        (apply
                          (case-lambda
                            ((g$expr$9284$1Bug2v
                               g$keys$9285$1Bug2v
                               g$clauses$9286$1Bug2v)
                             (begin
                               (g$verify-literals$7535$1Bug2v
                                 g$keys$9285$1Bug2v
                                 g$e$9279$1Bug2v)
                               ((case-lambda
                                  ((g$x$9287$1Bug2v)
                                   ((case-lambda
                                      ((g$body$9288$1Bug2v)
                                       (list
                                         (g$build-lambda$7185$1Bug2v
                                           '#f
                                           (list g$x$9287$1Bug2v)
                                           g$body$9288$1Bug2v)
                                         (g$chi-expr$7550$1Bug2v
                                           g$expr$9284$1Bug2v
                                           g$r$9280$1Bug2v
                                           g$mr$9281$1Bug2v))))
                                    (g$gen-syntax-case$9278$1Bug2v
                                      g$x$9287$1Bug2v
                                      g$keys$9285$1Bug2v
                                      g$clauses$9286$1Bug2v
                                      g$r$9280$1Bug2v
                                      g$mr$9281$1Bug2v))))
                                (g$gen-lexical$7198$1Bug2v 'tmp)))))
                          g$ls/false$9283$1Bug2v)
                        (g$syntax-violation$7643$1Bug2v
                          '#f
                          '"invalid syntax"
                          g$t$9282$1Bug2v))))
                   (g$syntax-dispatch$7532$1Bug2v
                     g$t$9282$1Bug2v
                     '(_ any each-any . each-any)))))
               g$e$9279$1Bug2v))))))))
   (g$ellipsis-map$7537$1Bug2v
     g$ellipsis-map$10997$1Bug2v
     (case-lambda
       ((g$proc$9345$1Bug2v g$ls$9346$1Bug2v . g$ls*$9347$1Bug2v)
        (letrec* ((g$who$9348$1Bug2v '...))
          (begin
            (if (not (list? g$ls$9346$1Bug2v))
              (assertion-violation
                g$who$9348$1Bug2v
                '"not a list"
                g$ls$9346$1Bug2v)
              (void))
            (if (not (null? g$ls*$9347$1Bug2v))
              ((case-lambda
                 ((g$n$9349$1Bug2v)
                  (for-each
                    (case-lambda
                      ((g$x$9350$1Bug2v)
                       (begin
                         (if (not (list? g$x$9350$1Bug2v))
                           (assertion-violation
                             g$who$9348$1Bug2v
                             '"not a list"
                             g$x$9350$1Bug2v)
                           (void))
                         (if (not (= (length g$x$9350$1Bug2v) g$n$9349$1Bug2v))
                           (assertion-violation
                             g$who$9348$1Bug2v
                             '"length mismatch"
                             g$ls$9346$1Bug2v
                             g$x$9350$1Bug2v)
                           (void)))))
                    g$ls*$9347$1Bug2v)))
               (length g$ls$9346$1Bug2v))
              (void))
            (apply
              map
              g$proc$9345$1Bug2v
              g$ls$9346$1Bug2v
              g$ls*$9347$1Bug2v))))))
   (g$syntax-transformer$7538$1Bug2v
     g$syntax-transformer$10998$1Bug2v
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$9351$1Bug2v
                     (case-lambda
                       ((g$src$9411$1Bug2v
                          g$e$9412$1Bug2v
                          g$r$9413$1Bug2v
                          g$maps$9414$1Bug2v
                          g$ellipsis?$9415$1Bug2v
                          g$vec?$9416$1Bug2v)
                        ((case-lambda
                           ((g$t$9417$1Bug2v)
                            ((case-lambda
                               ((g$ls/false$9418$1Bug2v)
                                (if (if g$ls/false$9418$1Bug2v
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$9419$1Bug2v)
                                             (g$ellipsis?$9415$1Bug2v
                                               g$dots$9419$1Bug2v)))
                                          g$ls/false$9418$1Bug2v))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$9420$1Bug2v)
                                       (g$syntax-violation$7643$1Bug2v
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$9411$1Bug2v)))
                                    g$ls/false$9418$1Bug2v)
                                  ((case-lambda
                                     ((g$t$9421$1Bug2v)
                                      ((case-lambda
                                         ((g$ls/false$9422$1Bug2v)
                                          (if (if g$ls/false$9422$1Bug2v
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$9423$1Bug2v)
                                                       (g$id?$7254$1Bug2v
                                                         g$id$9423$1Bug2v)))
                                                    g$ls/false$9422$1Bug2v))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$9424$1Bug2v)
                                                 ((case-lambda
                                                    ((g$label$9425$1Bug2v)
                                                     ((case-lambda
                                                        ((g$b$9426$1Bug2v)
                                                         ((case-lambda
                                                            (()
                                                             (if (eq? (g$binding-type$7271$1Bug2v
                                                                        g$b$9426$1Bug2v)
                                                                      'syntax)
                                                               (call-with-values
                                                                 (case-lambda
                                                                   (()
                                                                    ((case-lambda
                                                                       ((g$var.lev$9429$1Bug2v)
                                                                        (g$gen-ref$9352$1Bug2v
                                                                          g$src$9411$1Bug2v
                                                                          (car g$var.lev$9429$1Bug2v)
                                                                          (cdr g$var.lev$9429$1Bug2v)
                                                                          g$maps$9414$1Bug2v)))
                                                                     (g$binding-value$7272$1Bug2v
                                                                       g$b$9426$1Bug2v))))
                                                                 (case-lambda
                                                                   ((g$var$9430$1Bug2v
                                                                      g$maps$9431$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$maps$9432$1Bug2v
                                                                          g$var$9433$1Bug2v)
                                                                        (values
                                                                          (list
                                                                            'ref
                                                                            g$var$9433$1Bug2v)
                                                                          g$maps$9432$1Bug2v)))
                                                                     g$maps$9431$1Bug2v
                                                                     g$var$9430$1Bug2v))))
                                                               (values
                                                                 (list
                                                                   'quote
                                                                   g$e$9412$1Bug2v)
                                                                 g$maps$9414$1Bug2v)))))))
                                                      (g$label->binding$7269$1Bug2v
                                                        g$label$9425$1Bug2v
                                                        g$r$9413$1Bug2v))))
                                                  (g$id->label$7267$1Bug2v
                                                    g$e$9412$1Bug2v))))
                                              g$ls/false$9422$1Bug2v)
                                            ((case-lambda
                                               ((g$t$9434$1Bug2v)
                                                ((case-lambda
                                                   ((g$ls/false$9435$1Bug2v)
                                                    (if (if g$ls/false$9435$1Bug2v
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$9436$1Bug2v
                                                                   g$e$9437$1Bug2v)
                                                                 (g$ellipsis?$9415$1Bug2v
                                                                   g$dots$9436$1Bug2v)))
                                                              g$ls/false$9435$1Bug2v))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$9438$1Bug2v
                                                             g$e$9439$1Bug2v)
                                                           (if g$vec?$9416$1Bug2v
                                                             (g$syntax-violation$7643$1Bug2v
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$9411$1Bug2v)
                                                             (g$gen-syntax$9351$1Bug2v
                                                               g$src$9411$1Bug2v
                                                               g$e$9439$1Bug2v
                                                               g$r$9413$1Bug2v
                                                               g$maps$9414$1Bug2v
                                                               (case-lambda
                                                                 ((g$x$9440$1Bug2v)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$9435$1Bug2v)
                                                      ((case-lambda
                                                         ((g$t$9441$1Bug2v)
                                                          ((case-lambda
                                                             ((g$ls/false$9442$1Bug2v)
                                                              (if (if g$ls/false$9442$1Bug2v
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$9443$1Bug2v
                                                                             g$dots$9444$1Bug2v
                                                                             g$y$9445$1Bug2v)
                                                                           (g$ellipsis?$9415$1Bug2v
                                                                             g$dots$9444$1Bug2v)))
                                                                        g$ls/false$9442$1Bug2v))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$9446$1Bug2v
                                                                       g$dots$9447$1Bug2v
                                                                       g$y$9448$1Bug2v)
                                                                     ((letrec ((g$f$9449$1Bug2v
                                                                                 (case-lambda
                                                                                   ((g$y$9450$1Bug2v
                                                                                      g$k$9451$1Bug2v)
                                                                                    ((case-lambda
                                                                                       ((g$t$9452$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9453$1Bug2v)
                                                                                            (if g$ls/false$9453$1Bug2v
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$9451$1Bug2v
                                                                                                     g$maps$9414$1Bug2v)))
                                                                                                g$ls/false$9453$1Bug2v)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9454$1Bug2v)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9455$1Bug2v)
                                                                                                      (if (if g$ls/false$9455$1Bug2v
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$9456$1Bug2v
                                                                                                                     g$y$9457$1Bug2v)
                                                                                                                   (g$ellipsis?$9415$1Bug2v
                                                                                                                     g$dots$9456$1Bug2v)))
                                                                                                                g$ls/false$9455$1Bug2v))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$9458$1Bug2v
                                                                                                               g$y$9459$1Bug2v)
                                                                                                             (g$f$9449$1Bug2v
                                                                                                               g$y$9459$1Bug2v
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$9460$1Bug2v)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$9451$1Bug2v
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$9460$1Bug2v))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$9463$1Bug2v
                                                                                                                         g$maps$9464$1Bug2v)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$9465$1Bug2v
                                                                                                                             g$x$9466$1Bug2v)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$9465$1Bug2v))
                                                                                                                             (g$syntax-violation$7643$1Bug2v
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$9411$1Bug2v)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$9354$1Bug2v
                                                                                                                                 g$x$9466$1Bug2v
                                                                                                                                 (car g$maps$9465$1Bug2v))
                                                                                                                               (cdr g$maps$9465$1Bug2v)))))
                                                                                                                        g$maps$9464$1Bug2v
                                                                                                                        g$x$9463$1Bug2v)))))))))
                                                                                                          g$ls/false$9455$1Bug2v)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9467$1Bug2v)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9468$1Bug2v)
                                                                                                                (if g$ls/false$9468$1Bug2v
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$9351$1Bug2v
                                                                                                                              g$src$9411$1Bug2v
                                                                                                                              g$y$9450$1Bug2v
                                                                                                                              g$r$9413$1Bug2v
                                                                                                                              g$maps$9414$1Bug2v
                                                                                                                              g$ellipsis?$9415$1Bug2v
                                                                                                                              g$vec?$9416$1Bug2v)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$9471$1Bug2v
                                                                                                                              g$maps$9472$1Bug2v)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$9473$1Bug2v
                                                                                                                                  g$y$9474$1Bug2v)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$9451$1Bug2v
                                                                                                                                       g$maps$9473$1Bug2v)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$9477$1Bug2v
                                                                                                                                       g$maps$9478$1Bug2v)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$9479$1Bug2v
                                                                                                                                           g$x$9480$1Bug2v)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$9353$1Bug2v
                                                                                                                                             g$x$9480$1Bug2v
                                                                                                                                             g$y$9474$1Bug2v)
                                                                                                                                           g$maps$9479$1Bug2v)))
                                                                                                                                      g$maps$9478$1Bug2v
                                                                                                                                      g$x$9477$1Bug2v))))))
                                                                                                                             g$maps$9472$1Bug2v
                                                                                                                             g$y$9471$1Bug2v))))))
                                                                                                                    g$ls/false$9468$1Bug2v)
                                                                                                                  (g$syntax-violation$7643$1Bug2v
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9467$1Bug2v))))
                                                                                                             (g$syntax-dispatch$7532$1Bug2v
                                                                                                               g$t$9467$1Bug2v
                                                                                                               '_))))
                                                                                                         g$t$9454$1Bug2v))))
                                                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                                                     g$t$9454$1Bug2v
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$9452$1Bug2v))))
                                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                                           g$t$9452$1Bug2v
                                                                                           '()))))
                                                                                     g$y$9450$1Bug2v)))))
                                                                        g$f$9449$1Bug2v)
                                                                      g$y$9448$1Bug2v
                                                                      (case-lambda
                                                                        ((g$maps$9481$1Bug2v)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$9351$1Bug2v
                                                                                g$src$9411$1Bug2v
                                                                                g$x$9446$1Bug2v
                                                                                g$r$9413$1Bug2v
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$9481$1Bug2v)
                                                                                g$ellipsis?$9415$1Bug2v
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$9484$1Bug2v
                                                                                g$maps$9485$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$maps$9486$1Bug2v
                                                                                    g$x$9487$1Bug2v)
                                                                                  (if (null?
                                                                                        (car g$maps$9486$1Bug2v))
                                                                                    (g$syntax-violation$7643$1Bug2v
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$9411$1Bug2v)
                                                                                    (values
                                                                                      (g$gen-map$9355$1Bug2v
                                                                                        g$x$9487$1Bug2v
                                                                                        (car g$maps$9486$1Bug2v))
                                                                                      (cdr g$maps$9486$1Bug2v)))))
                                                                               g$maps$9485$1Bug2v
                                                                               g$x$9484$1Bug2v)))))))))
                                                                  g$ls/false$9442$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$t$9488$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9489$1Bug2v)
                                                                        (if g$ls/false$9489$1Bug2v
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$9490$1Bug2v
                                                                                 g$y$9491$1Bug2v)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$9351$1Bug2v
                                                                                      g$src$9411$1Bug2v
                                                                                      g$x$9490$1Bug2v
                                                                                      g$r$9413$1Bug2v
                                                                                      g$maps$9414$1Bug2v
                                                                                      g$ellipsis?$9415$1Bug2v
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$9494$1Bug2v
                                                                                      g$maps$9495$1Bug2v)
                                                                                    ((case-lambda
                                                                                       ((g$maps$9496$1Bug2v
                                                                                          g$xnew$9497$1Bug2v)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$9351$1Bug2v
                                                                                               g$src$9411$1Bug2v
                                                                                               g$y$9491$1Bug2v
                                                                                               g$r$9413$1Bug2v
                                                                                               g$maps$9496$1Bug2v
                                                                                               g$ellipsis?$9415$1Bug2v
                                                                                               g$vec?$9416$1Bug2v)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$9500$1Bug2v
                                                                                               g$maps$9501$1Bug2v)
                                                                                             ((case-lambda
                                                                                                ((g$maps$9502$1Bug2v
                                                                                                   g$ynew$9503$1Bug2v)
                                                                                                 (values
                                                                                                   (g$gen-cons$9356$1Bug2v
                                                                                                     g$e$9412$1Bug2v
                                                                                                     g$x$9490$1Bug2v
                                                                                                     g$y$9491$1Bug2v
                                                                                                     g$xnew$9497$1Bug2v
                                                                                                     g$ynew$9503$1Bug2v)
                                                                                                   g$maps$9502$1Bug2v)))
                                                                                              g$maps$9501$1Bug2v
                                                                                              g$ynew$9500$1Bug2v))))))
                                                                                     g$maps$9495$1Bug2v
                                                                                     g$xnew$9494$1Bug2v))))))
                                                                            g$ls/false$9489$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$9504$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9505$1Bug2v)
                                                                                  (if g$ls/false$9505$1Bug2v
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$9506$1Bug2v)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$9351$1Bug2v
                                                                                                g$src$9411$1Bug2v
                                                                                                g$ls$9506$1Bug2v
                                                                                                g$r$9413$1Bug2v
                                                                                                g$maps$9414$1Bug2v
                                                                                                g$ellipsis?$9415$1Bug2v
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$9509$1Bug2v
                                                                                                g$maps$9510$1Bug2v)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$9511$1Bug2v
                                                                                                    g$lsnew$9512$1Bug2v)
                                                                                                  (values
                                                                                                    (g$gen-vector$9357$1Bug2v
                                                                                                      g$e$9412$1Bug2v
                                                                                                      g$ls$9506$1Bug2v
                                                                                                      g$lsnew$9512$1Bug2v)
                                                                                                    g$maps$9511$1Bug2v)))
                                                                                               g$maps$9510$1Bug2v
                                                                                               g$lsnew$9509$1Bug2v))))))
                                                                                      g$ls/false$9505$1Bug2v)
                                                                                    ((case-lambda
                                                                                       ((g$t$9513$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9514$1Bug2v)
                                                                                            (if g$ls/false$9514$1Bug2v
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$9412$1Bug2v)
                                                                                                     g$maps$9414$1Bug2v)))
                                                                                                g$ls/false$9514$1Bug2v)
                                                                                              (g$syntax-violation$7643$1Bug2v
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9513$1Bug2v))))
                                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                                           g$t$9513$1Bug2v
                                                                                           '_))))
                                                                                     g$t$9504$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$9504$1Bug2v
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9488$1Bug2v))))
                                                                     (g$syntax-dispatch$7532$1Bug2v
                                                                       g$t$9488$1Bug2v
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9441$1Bug2v))))
                                                           (g$syntax-dispatch$7532$1Bug2v
                                                             g$t$9441$1Bug2v
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$9434$1Bug2v))))
                                                 (g$syntax-dispatch$7532$1Bug2v
                                                   g$t$9434$1Bug2v
                                                   '(any any)))))
                                             g$t$9421$1Bug2v))))
                                       (g$syntax-dispatch$7532$1Bug2v
                                         g$t$9421$1Bug2v
                                         'any))))
                                   g$t$9417$1Bug2v))))
                             (g$syntax-dispatch$7532$1Bug2v
                               g$t$9417$1Bug2v
                               'any))))
                         g$e$9412$1Bug2v))))
                   (g$gen-ref$9352$1Bug2v
                     (case-lambda
                       ((g$src$9398$1Bug2v
                          g$var$9399$1Bug2v
                          g$level$9400$1Bug2v
                          g$maps$9401$1Bug2v)
                        (if (= g$level$9400$1Bug2v '0)
                          (values g$var$9399$1Bug2v g$maps$9401$1Bug2v)
                          (if (null? g$maps$9401$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$9398$1Bug2v)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$9352$1Bug2v
                                   g$src$9398$1Bug2v
                                   g$var$9399$1Bug2v
                                   (- g$level$9400$1Bug2v '1)
                                   (cdr g$maps$9401$1Bug2v))))
                              (case-lambda
                                ((g$outer-var$9404$1Bug2v
                                   g$outer-maps$9405$1Bug2v)
                                 ((case-lambda
                                    ((g$outer-maps$9406$1Bug2v
                                       g$outer-var$9407$1Bug2v)
                                     ((case-lambda
                                        ((g$t$9408$1Bug2v)
                                         (if g$t$9408$1Bug2v
                                           ((case-lambda
                                              ((g$b$9409$1Bug2v)
                                               (values
                                                 (cdr g$b$9409$1Bug2v)
                                                 g$maps$9401$1Bug2v)))
                                            g$t$9408$1Bug2v)
                                           ((case-lambda
                                              ((g$inner-var$9410$1Bug2v)
                                               (values
                                                 g$inner-var$9410$1Bug2v
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$9407$1Bug2v
                                                       g$inner-var$9410$1Bug2v)
                                                     (car g$maps$9401$1Bug2v))
                                                   g$outer-maps$9406$1Bug2v))))
                                            (g$gen-lexical$7198$1Bug2v 'tmp)))))
                                      (g$assq$4950$1Bug2v
                                        g$outer-var$9407$1Bug2v
                                        (car g$maps$9401$1Bug2v)))))
                                  g$outer-maps$9405$1Bug2v
                                  g$outer-var$9404$1Bug2v)))))))))
                   (g$gen-append$9353$1Bug2v
                     (case-lambda
                       ((g$x$9396$1Bug2v g$y$9397$1Bug2v)
                        (if (equal? g$y$9397$1Bug2v ''())
                          g$x$9396$1Bug2v
                          (list 'append g$x$9396$1Bug2v g$y$9397$1Bug2v)))))
                   (g$gen-mappend$9354$1Bug2v
                     (case-lambda
                       ((g$e$9394$1Bug2v g$map-env$9395$1Bug2v)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$9355$1Bug2v
                            g$e$9394$1Bug2v
                            g$map-env$9395$1Bug2v)))))
                   (g$gen-map$9355$1Bug2v
                     (case-lambda
                       ((g$e$9385$1Bug2v g$map-env$9386$1Bug2v)
                        ((case-lambda
                           ((g$formals$9387$1Bug2v g$actuals$9388$1Bug2v)
                            (if (eq? (car g$e$9385$1Bug2v) 'ref)
                              (car g$actuals$9388$1Bug2v)
                              (if (g$for-all$4960$1Bug2v
                                    (case-lambda
                                      ((g$x$9389$1Bug2v)
                                       (if (eq? (car g$x$9389$1Bug2v) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$4954$1Bug2v
                                             (g$cadr$5124$1Bug2v
                                               g$x$9389$1Bug2v)
                                             g$formals$9387$1Bug2v))
                                         '#f)))
                                    (cdr g$e$9385$1Bug2v))
                                ((case-lambda
                                   ((g$args$9390$1Bug2v)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$9385$1Bug2v))
                                        g$args$9390$1Bug2v))))
                                 (map ((case-lambda
                                         ((g$r$9391$1Bug2v)
                                          (case-lambda
                                            ((g$x$9392$1Bug2v)
                                             (cdr (g$assq$4950$1Bug2v
                                                    (g$cadr$5124$1Bug2v
                                                      g$x$9392$1Bug2v)
                                                    g$r$9391$1Bug2v))))))
                                       (map cons
                                            g$formals$9387$1Bug2v
                                            g$actuals$9388$1Bug2v))
                                      (cdr g$e$9385$1Bug2v)))
                                (g$cons*$4962$1Bug2v
                                  'map
                                  (list
                                    'lambda
                                    g$formals$9387$1Bug2v
                                    g$e$9385$1Bug2v)
                                  g$actuals$9388$1Bug2v)))))
                         (map cdr g$map-env$9386$1Bug2v)
                         (map (case-lambda
                                ((g$x$9393$1Bug2v)
                                 (list 'ref (car g$x$9393$1Bug2v))))
                              g$map-env$9386$1Bug2v)))))
                   (g$gen-cons$9356$1Bug2v
                     (case-lambda
                       ((g$e$9377$1Bug2v
                          g$x$9378$1Bug2v
                          g$y$9379$1Bug2v
                          g$xnew$9380$1Bug2v
                          g$ynew$9381$1Bug2v)
                        ((case-lambda
                           ((g$t$9382$1Bug2v)
                            (if (g$memv$4955$1Bug2v g$t$9382$1Bug2v '(quote))
                              (if (eq? (car g$xnew$9380$1Bug2v) 'quote)
                                ((case-lambda
                                   ((g$xnew$9383$1Bug2v g$ynew$9384$1Bug2v)
                                    (if (if (eq? g$xnew$9383$1Bug2v
                                                 g$x$9378$1Bug2v)
                                          (begin
                                            '#f
                                            (eq? g$ynew$9384$1Bug2v
                                                 g$y$9379$1Bug2v))
                                          '#f)
                                      (list 'quote g$e$9377$1Bug2v)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$9383$1Bug2v
                                          g$ynew$9384$1Bug2v)))))
                                 (g$cadr$5124$1Bug2v g$xnew$9380$1Bug2v)
                                 (g$cadr$5124$1Bug2v g$ynew$9381$1Bug2v))
                                (if (null?
                                      (g$cadr$5124$1Bug2v g$ynew$9381$1Bug2v))
                                  (list 'list g$xnew$9380$1Bug2v)
                                  (list
                                    'cons
                                    g$xnew$9380$1Bug2v
                                    g$ynew$9381$1Bug2v)))
                              (if (g$memv$4955$1Bug2v g$t$9382$1Bug2v '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$9380$1Bug2v
                                    (cdr g$ynew$9381$1Bug2v)))
                                (list
                                  'cons
                                  g$xnew$9380$1Bug2v
                                  g$ynew$9381$1Bug2v)))))
                         (car g$ynew$9381$1Bug2v)))))
                   (g$gen-vector$9357$1Bug2v
                     (case-lambda
                       ((g$e$9374$1Bug2v g$ls$9375$1Bug2v g$lsnew$9376$1Bug2v)
                        (if (eq? (car g$lsnew$9376$1Bug2v) 'quote)
                          (if (eq? (g$cadr$5124$1Bug2v g$lsnew$9376$1Bug2v)
                                   g$ls$9375$1Bug2v)
                            (list 'quote g$e$9374$1Bug2v)
                            (list
                              'quote
                              (list->vector
                                (g$cadr$5124$1Bug2v g$lsnew$9376$1Bug2v))))
                          (if (eq? (car g$lsnew$9376$1Bug2v) 'list)
                            (cons 'vector (cdr g$lsnew$9376$1Bug2v))
                            (list 'list->vector g$lsnew$9376$1Bug2v))))))
                   (g$regen$9358$1Bug2v
                     (case-lambda
                       ((g$x$9371$1Bug2v)
                        ((case-lambda
                           ((g$t$9372$1Bug2v)
                            (if (g$memv$4955$1Bug2v g$t$9372$1Bug2v '(ref))
                              (g$cadr$5124$1Bug2v g$x$9371$1Bug2v)
                              (if (g$memv$4955$1Bug2v
                                    g$t$9372$1Bug2v
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5124$1Bug2v g$x$9371$1Bug2v))
                                (if (g$memv$4955$1Bug2v
                                      g$t$9372$1Bug2v
                                      '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5124$1Bug2v g$x$9371$1Bug2v))
                                  (if (g$memv$4955$1Bug2v
                                        g$t$9372$1Bug2v
                                        '(lambda))
                                    (g$build-lambda$7185$1Bug2v
                                      '#f
                                      (g$cadr$5124$1Bug2v g$x$9371$1Bug2v)
                                      (g$regen$9358$1Bug2v
                                        (g$caddr$5130$1Bug2v g$x$9371$1Bug2v)))
                                    (if (g$memv$4955$1Bug2v
                                          g$t$9372$1Bug2v
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$9373$1Bug2v)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$9373$1Bug2v)))
                                       (map g$regen$9358$1Bug2v
                                            (cdr g$x$9371$1Bug2v)))
                                      (cons
                                        (list 'primitive (car g$x$9371$1Bug2v))
                                        (map g$regen$9358$1Bug2v
                                             (cdr g$x$9371$1Bug2v))))))))))
                         (car g$x$9371$1Bug2v))))))
           (case-lambda
             ((g$e$9359$1Bug2v g$r$9360$1Bug2v g$mr$9361$1Bug2v)
              ((case-lambda
                 ((g$t$9362$1Bug2v)
                  ((case-lambda
                     ((g$ls/false$9363$1Bug2v)
                      (if g$ls/false$9363$1Bug2v
                        (apply
                          (case-lambda
                            ((g$x$9364$1Bug2v)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$9351$1Bug2v
                                    g$e$9359$1Bug2v
                                    g$x$9364$1Bug2v
                                    g$r$9360$1Bug2v
                                    '()
                                    g$ellipsis?$7533$1Bug2v
                                    '#f)))
                               (case-lambda
                                 ((g$e$9367$1Bug2v g$maps$9368$1Bug2v)
                                  ((case-lambda
                                     ((g$maps$9369$1Bug2v g$e$9370$1Bug2v)
                                      (g$regen$9358$1Bug2v g$e$9370$1Bug2v)))
                                   g$maps$9368$1Bug2v
                                   g$e$9367$1Bug2v))))))
                          g$ls/false$9363$1Bug2v)
                        (g$syntax-violation$7643$1Bug2v
                          '#f
                          '"invalid syntax"
                          g$t$9362$1Bug2v))))
                   (g$syntax-dispatch$7532$1Bug2v g$t$9362$1Bug2v '(_ any)))))
               g$e$9359$1Bug2v))))))))
   (g$core-macro-transformer$7539$1Bug2v
     g$core-macro-transformer$10999$1Bug2v
     (case-lambda
       ((g$name$9515$1Bug2v)
        ((case-lambda
           ((g$t$9516$1Bug2v)
            (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(quote))
              g$quote-transformer$7492$1Bug2v
              (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(lambda))
                g$lambda-transformer$7494$1Bug2v
                (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(case-lambda))
                  g$case-lambda-transformer$7493$1Bug2v
                  (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(letrec))
                    g$letrec-transformer$7482$1Bug2v
                    (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(letrec*))
                      g$letrec*-transformer$7483$1Bug2v
                      (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(if))
                        g$if-transformer$7490$1Bug2v
                        (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(foreign-call))
                          g$foreign-call-transformer$7530$1Bug2v
                          (if (g$memv$4955$1Bug2v
                                g$t$9516$1Bug2v
                                '(syntax-case))
                            g$syntax-case-transformer$7536$1Bug2v
                            (if (g$memv$4955$1Bug2v g$t$9516$1Bug2v '(syntax))
                              g$syntax-transformer$7538$1Bug2v
                              (if (g$memv$4955$1Bug2v
                                    g$t$9516$1Bug2v
                                    '(type-descriptor))
                                g$type-descriptor-transformer$7485$1Bug2v
                                (if (g$memv$4955$1Bug2v
                                      g$t$9516$1Bug2v
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$7486$1Bug2v
                                  (if (g$memv$4955$1Bug2v
                                        g$t$9516$1Bug2v
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$7487$1Bug2v
                                    (if (g$memv$4955$1Bug2v
                                          g$t$9516$1Bug2v
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$7484$1Bug2v
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$9515$1Bug2v))))))))))))))))
         g$name$9515$1Bug2v))))
   (g$file-options-macro$7540$1Bug2v
     g$file-options-macro$11000$1Bug2v
     (case-lambda
       ((g$x$9517$1Bug2v)
        (letrec* ((g$valid-option?$9518$1Bug2v
                    (case-lambda
                      ((g$x$9523$1Bug2v)
                       (if (g$id?$7254$1Bug2v g$x$9523$1Bug2v)
                         (begin
                           '#f
                           (g$memq$4954$1Bug2v
                             (g$id->sym$7255$1Bug2v g$x$9523$1Bug2v)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$9519$1Bug2v)
              ((case-lambda
                 ((g$ls/false$9520$1Bug2v)
                  (if (if g$ls/false$9520$1Bug2v
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$9521$1Bug2v)
                               (if (g$for-all$4960$1Bug2v
                                     g$valid-option?$9518$1Bug2v
                                     g$opt*$9521$1Bug2v)
                                 (begin
                                   '#f
                                   (g$file-options-spec$6524$1Bug2v
                                     (map g$id->sym$7255$1Bug2v
                                          g$opt*$9521$1Bug2v)))
                                 '#f)))
                            g$ls/false$9520$1Bug2v))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$9522$1Bug2v)
                         (g$bless$7495$1Bug2v
                           (list
                             'quote
                             (g$file-options-spec$6524$1Bug2v
                               (map g$id->sym$7255$1Bug2v
                                    g$opt*$9522$1Bug2v))))))
                      g$ls/false$9520$1Bug2v)
                    (g$syntax-violation$7643$1Bug2v
                      '#f
                      '"invalid syntax"
                      g$t$9519$1Bug2v))))
               (g$syntax-dispatch$7532$1Bug2v
                 g$t$9519$1Bug2v
                 '(_ . each-any)))))
           g$x$9517$1Bug2v)))))
   (g$symbol-macro$7541$1Bug2v
     g$symbol-macro$11001$1Bug2v
     (case-lambda
       ((g$x$9524$1Bug2v g$set$9525$1Bug2v)
        ((case-lambda
           ((g$t$9526$1Bug2v)
            ((case-lambda
               ((g$ls/false$9527$1Bug2v)
                (if (if g$ls/false$9527$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$9528$1Bug2v)
                             (if (g$id?$7254$1Bug2v g$name$9528$1Bug2v)
                               (begin
                                 '#f
                                 (g$memq$4954$1Bug2v
                                   (g$id->sym$7255$1Bug2v g$name$9528$1Bug2v)
                                   g$set$9525$1Bug2v))
                               '#f)))
                          g$ls/false$9527$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$9529$1Bug2v)
                       (g$bless$7495$1Bug2v (list 'quote g$name$9529$1Bug2v))))
                    g$ls/false$9527$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$9526$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$9526$1Bug2v '(_ any)))))
         g$x$9524$1Bug2v))))
   (g$macro-transformer$7542$1Bug2v
     g$macro-transformer$11002$1Bug2v
     (case-lambda
       ((g$x$9530$1Bug2v)
        (if (procedure? g$x$9530$1Bug2v)
          g$x$9530$1Bug2v
          (if (symbol? g$x$9530$1Bug2v)
            ((case-lambda
               ((g$t$9531$1Bug2v)
                (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(define-record-type))
                  g$define-record-type-macro$7526$1Bug2v
                  (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(define-struct))
                    g$define-struct-macro$7525$1Bug2v
                    (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(include))
                      g$include-macro$7520$1Bug2v
                      (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(cond))
                        g$cond-macro$7518$1Bug2v
                        (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(let))
                          g$let-macro$7498$1Bug2v
                          (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(do))
                            g$do-macro$7514$1Bug2v
                            (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(or))
                              g$or-macro$7516$1Bug2v
                              (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(and))
                                g$and-macro$7517$1Bug2v
                                (if (g$memv$4955$1Bug2v g$t$9531$1Bug2v '(let*))
                                  g$let*-macro$7515$1Bug2v
                                  (if (g$memv$4955$1Bug2v
                                        g$t$9531$1Bug2v
                                        '(let-values))
                                    g$let-values-macro$7499$1Bug2v
                                    (if (g$memv$4955$1Bug2v
                                          g$t$9531$1Bug2v
                                          '(let*-values))
                                      g$let*-values-macro$7500$1Bug2v
                                      (if (g$memv$4955$1Bug2v
                                            g$t$9531$1Bug2v
                                            '(syntax-rules))
                                        g$syntax-rules-macro$7522$1Bug2v
                                        (if (g$memv$4955$1Bug2v
                                              g$t$9531$1Bug2v
                                              '(quasiquote))
                                          g$quasiquote-macro$7523$1Bug2v
                                          (if (g$memv$4955$1Bug2v
                                                g$t$9531$1Bug2v
                                                '(quasisyntax))
                                            g$quasisyntax-macro$7524$1Bug2v
                                            (if (g$memv$4955$1Bug2v
                                                  g$t$9531$1Bug2v
                                                  '(with-syntax))
                                              g$with-syntax-macro$7496$1Bug2v
                                              (if (g$memv$4955$1Bug2v
                                                    g$t$9531$1Bug2v
                                                    '(when))
                                                g$when-macro$7488$1Bug2v
                                                (if (g$memv$4955$1Bug2v
                                                      g$t$9531$1Bug2v
                                                      '(unless))
                                                  g$unless-macro$7489$1Bug2v
                                                  (if (g$memv$4955$1Bug2v
                                                        g$t$9531$1Bug2v
                                                        '(case))
                                                    g$case-macro$7491$1Bug2v
                                                    (if (g$memv$4955$1Bug2v
                                                          g$t$9531$1Bug2v
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$7513$1Bug2v
                                                      (if (g$memv$4955$1Bug2v
                                                            g$t$9531$1Bug2v
                                                            '(time))
                                                        g$time-macro$7509$1Bug2v
                                                        (if (g$memv$4955$1Bug2v
                                                              g$t$9531$1Bug2v
                                                              '(delay))
                                                          g$delay-macro$7510$1Bug2v
                                                          (if (g$memv$4955$1Bug2v
                                                                g$t$9531$1Bug2v
                                                                '(assert))
                                                            g$assert-macro$7511$1Bug2v
                                                            (if (g$memv$4955$1Bug2v
                                                                  g$t$9531$1Bug2v
                                                                  '(endianness))
                                                              g$endianness-macro$7512$1Bug2v
                                                              (if (g$memv$4955$1Bug2v
                                                                    g$t$9531$1Bug2v
                                                                    '(guard))
                                                                g$guard-macro$7507$1Bug2v
                                                                (if (g$memv$4955$1Bug2v
                                                                      g$t$9531$1Bug2v
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$7508$1Bug2v
                                                                  (if (g$memv$4955$1Bug2v
                                                                        g$t$9531$1Bug2v
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$7501$1Bug2v
                                                                    (if (g$memv$4955$1Bug2v
                                                                          g$t$9531$1Bug2v
                                                                          '(trace-define))
                                                                      g$trace-define-macro$7502$1Bug2v
                                                                      (if (g$memv$4955$1Bug2v
                                                                            g$t$9531$1Bug2v
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$7503$1Bug2v
                                                                        (if (g$memv$4955$1Bug2v
                                                                              g$t$9531$1Bug2v
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$7505$1Bug2v
                                                                          (if (g$memv$4955$1Bug2v
                                                                                g$t$9531$1Bug2v
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$7506$1Bug2v
                                                                            (if (g$memv$4955$1Bug2v
                                                                                  g$t$9531$1Bug2v
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$7527$1Bug2v
                                                                              (if (g$memv$4955$1Bug2v
                                                                                    g$t$9531$1Bug2v
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$7529$1Bug2v
                                                                                (if (g$memv$4955$1Bug2v
                                                                                      g$t$9531$1Bug2v
                                                                                      '(include-into))
                                                                                  g$include-into-macro$7521$1Bug2v
                                                                                  (if (g$memv$4955$1Bug2v
                                                                                        g$t$9531$1Bug2v
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$9532$1Bug2v)
                                                                                       (g$symbol-macro$7541$1Bug2v
                                                                                         g$x$9532$1Bug2v
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$4955$1Bug2v
                                                                                          g$t$9531$1Bug2v
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$9533$1Bug2v)
                                                                                         (g$symbol-macro$7541$1Bug2v
                                                                                           g$x$9533$1Bug2v
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$4955$1Bug2v
                                                                                            g$t$9531$1Bug2v
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$9534$1Bug2v)
                                                                                           (g$symbol-macro$7541$1Bug2v
                                                                                             g$x$9534$1Bug2v
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$4955$1Bug2v
                                                                                              g$t$9531$1Bug2v
                                                                                              '(file-options))
                                                                                          g$file-options-macro$7540$1Bug2v
                                                                                          (if (g$memv$4955$1Bug2v
                                                                                                g$t$9531$1Bug2v
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$7528$1Bug2v
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$9530$1Bug2v)))))))))))))))))))))))))))))))))))))))))
             g$x$9530$1Bug2v)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$9530$1Bug2v))))))
   (g$local-macro-transformer$7543$1Bug2v
     g$local-macro-transformer$11003$1Bug2v
     (case-lambda ((g$x$9535$1Bug2v) (car g$x$9535$1Bug2v))))
   (g$do-macro-call$7544$1Bug2v
     g$do-macro-call$11004$1Bug2v
     (case-lambda
       ((g$transformer$9536$1Bug2v g$expr$9537$1Bug2v)
        ((case-lambda
           ((g$out$9538$1Bug2v)
            (begin
              ((letrec ((g$f$9539$1Bug2v
                          (case-lambda
                            ((g$x$9540$1Bug2v)
                             (if (not (g$stx?$7226$1Bug2v g$x$9540$1Bug2v))
                               (if (pair? g$x$9540$1Bug2v)
                                 (begin
                                   (g$f$9539$1Bug2v (car g$x$9540$1Bug2v))
                                   (g$f$9539$1Bug2v (cdr g$x$9540$1Bug2v)))
                                 (if (vector? g$x$9540$1Bug2v)
                                   (vector-for-each
                                     g$f$9539$1Bug2v
                                     g$x$9540$1Bug2v)
                                   (if (symbol? g$x$9540$1Bug2v)
                                     (g$syntax-violation$7643$1Bug2v
                                       '#f
                                       '"raw symbol encountered in output of macro"
                                       g$expr$9537$1Bug2v
                                       g$x$9540$1Bug2v)
                                     (void))))
                               (void))))))
                 g$f$9539$1Bug2v)
               g$out$9538$1Bug2v)
              (g$add-mark$7243$1Bug2v
                (g$gen-mark$7238$1Bug2v)
                g$out$9538$1Bug2v
                g$expr$9537$1Bug2v))))
         (g$transformer$9536$1Bug2v
           (g$add-mark$7243$1Bug2v
             g$anti-mark$7239$1Bug2v
             g$expr$9537$1Bug2v
             '#f))))))
   (g$chi-macro$7545$1Bug2v
     g$chi-macro$11005$1Bug2v
     (case-lambda
       ((g$p$9541$1Bug2v g$e$9542$1Bug2v)
        (g$do-macro-call$7544$1Bug2v
          (g$macro-transformer$7542$1Bug2v g$p$9541$1Bug2v)
          g$e$9542$1Bug2v))))
   (g$chi-local-macro$7546$1Bug2v
     g$chi-local-macro$11006$1Bug2v
     (case-lambda
       ((g$p$9543$1Bug2v g$e$9544$1Bug2v)
        (g$do-macro-call$7544$1Bug2v
          (g$local-macro-transformer$7543$1Bug2v g$p$9543$1Bug2v)
          g$e$9544$1Bug2v))))
   (g$chi-global-macro$7547$1Bug2v
     g$chi-global-macro$11007$1Bug2v
     (case-lambda
       ((g$p$9545$1Bug2v g$e$9546$1Bug2v)
        ((case-lambda
           ((g$lib$9547$1Bug2v g$loc$9548$1Bug2v)
            (begin
              (g$visit-library$7070$1Bug2v g$lib$9547$1Bug2v)
              ((case-lambda
                 ((g$x$9549$1Bug2v)
                  ((case-lambda
                     ((g$transformer$9550$1Bug2v)
                      (g$do-macro-call$7544$1Bug2v
                        g$transformer$9550$1Bug2v
                        g$e$9546$1Bug2v)))
                   (if (procedure? g$x$9549$1Bug2v)
                     g$x$9549$1Bug2v
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$9549$1Bug2v)))))
               (symbol-value g$loc$9548$1Bug2v)))))
         (car g$p$9545$1Bug2v)
         (cdr g$p$9545$1Bug2v)))))
   (g$chi-expr*$7548$1Bug2v
     g$chi-expr*$11008$1Bug2v
     (case-lambda
       ((g$e*$9551$1Bug2v g$r$9552$1Bug2v g$mr$9553$1Bug2v)
        (if (null? g$e*$9551$1Bug2v)
          '()
          ((case-lambda
             ((g$e$9554$1Bug2v)
              (cons
                g$e$9554$1Bug2v
                (g$chi-expr*$7548$1Bug2v
                  (cdr g$e*$9551$1Bug2v)
                  g$r$9552$1Bug2v
                  g$mr$9553$1Bug2v))))
           (g$chi-expr$7550$1Bug2v
             (car g$e*$9551$1Bug2v)
             g$r$9552$1Bug2v
             g$mr$9553$1Bug2v))))))
   (g$chi-application$7549$1Bug2v
     g$chi-application$11009$1Bug2v
     (case-lambda
       ((g$e$9555$1Bug2v g$r$9556$1Bug2v g$mr$9557$1Bug2v)
        ((case-lambda
           ((g$t$9558$1Bug2v)
            ((case-lambda
               ((g$ls/false$9559$1Bug2v)
                (if g$ls/false$9559$1Bug2v
                  (apply
                    (case-lambda
                      ((g$rator$9560$1Bug2v g$rands$9561$1Bug2v)
                       ((case-lambda
                          ((g$rator$9562$1Bug2v)
                           (cons
                             g$rator$9562$1Bug2v
                             (g$chi-expr*$7548$1Bug2v
                               g$rands$9561$1Bug2v
                               g$r$9556$1Bug2v
                               g$mr$9557$1Bug2v))))
                        (g$chi-expr$7550$1Bug2v
                          g$rator$9560$1Bug2v
                          g$r$9556$1Bug2v
                          g$mr$9557$1Bug2v))))
                    g$ls/false$9559$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$9558$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$9558$1Bug2v
               '(any . each-any)))))
         g$e$9555$1Bug2v))))
   (g$chi-expr$7550$1Bug2v
     g$chi-expr$11010$1Bug2v
     (case-lambda
       ((g$e$9563$1Bug2v g$r$9564$1Bug2v g$mr$9565$1Bug2v)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$7274$1Bug2v g$e$9563$1Bug2v g$r$9564$1Bug2v)))
          (case-lambda
            ((g$type$9569$1Bug2v g$value$9570$1Bug2v g$kwd$9571$1Bug2v)
             ((case-lambda
                ((g$kwd$9572$1Bug2v g$value$9573$1Bug2v g$type$9574$1Bug2v)
                 ((case-lambda
                    ((g$t$9575$1Bug2v)
                     (if (g$memv$4955$1Bug2v g$t$9575$1Bug2v '(core-macro))
                       ((case-lambda
                          ((g$transformer$9576$1Bug2v)
                           (g$transformer$9576$1Bug2v
                             g$e$9563$1Bug2v
                             g$r$9564$1Bug2v
                             g$mr$9565$1Bug2v)))
                        (g$core-macro-transformer$7539$1Bug2v
                          g$value$9573$1Bug2v))
                       (if (g$memv$4955$1Bug2v g$t$9575$1Bug2v '(global))
                         ((case-lambda
                            ((g$lib$9577$1Bug2v)
                             ((case-lambda
                                ((g$loc$9578$1Bug2v)
                                 ((case-lambda
                                    (()
                                     (begin
                                       ((g$inv-collector$7584$1Bug2v)
                                        g$lib$9577$1Bug2v)
                                       g$loc$9578$1Bug2v))))))
                              (cdr g$value$9573$1Bug2v))))
                          (car g$value$9573$1Bug2v))
                         (if (g$memv$4955$1Bug2v g$t$9575$1Bug2v '(core-prim))
                           ((case-lambda
                              ((g$name$9579$1Bug2v)
                               (list 'primitive g$name$9579$1Bug2v)))
                            g$value$9573$1Bug2v)
                           (if (g$memv$4955$1Bug2v g$t$9575$1Bug2v '(call))
                             (g$chi-application$7549$1Bug2v
                               g$e$9563$1Bug2v
                               g$r$9564$1Bug2v
                               g$mr$9565$1Bug2v)
                             (if (g$memv$4955$1Bug2v g$t$9575$1Bug2v '(lexical))
                               ((case-lambda
                                  ((g$lex$9580$1Bug2v) g$lex$9580$1Bug2v))
                                (g$lexical-var$7476$1Bug2v g$value$9573$1Bug2v))
                               (if (g$memv$4955$1Bug2v
                                     g$t$9575$1Bug2v
                                     '(global-macro global-macro!))
                                 (g$chi-expr$7550$1Bug2v
                                   (g$chi-global-macro$7547$1Bug2v
                                     g$value$9573$1Bug2v
                                     g$e$9563$1Bug2v)
                                   g$r$9564$1Bug2v
                                   g$mr$9565$1Bug2v)
                                 (if (g$memv$4955$1Bug2v
                                       g$t$9575$1Bug2v
                                       '(local-macro local-macro!))
                                   (g$chi-expr$7550$1Bug2v
                                     (g$chi-local-macro$7546$1Bug2v
                                       g$value$9573$1Bug2v
                                       g$e$9563$1Bug2v)
                                     g$r$9564$1Bug2v
                                     g$mr$9565$1Bug2v)
                                   (if (g$memv$4955$1Bug2v
                                         g$t$9575$1Bug2v
                                         '(macro macro!))
                                     (g$chi-expr$7550$1Bug2v
                                       (g$chi-macro$7545$1Bug2v
                                         g$value$9573$1Bug2v
                                         g$e$9563$1Bug2v)
                                       g$r$9564$1Bug2v
                                       g$mr$9565$1Bug2v)
                                     (if (g$memv$4955$1Bug2v
                                           g$t$9575$1Bug2v
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$9581$1Bug2v)
                                           (list 'quote g$datum$9581$1Bug2v)))
                                        g$value$9573$1Bug2v)
                                       (if (g$memv$4955$1Bug2v
                                             g$t$9575$1Bug2v
                                             '(set!))
                                         (g$chi-set!$7551$1Bug2v
                                           g$e$9563$1Bug2v
                                           g$r$9564$1Bug2v
                                           g$mr$9565$1Bug2v)
                                         (if (g$memv$4955$1Bug2v
                                               g$t$9575$1Bug2v
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$9582$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$9583$1Bug2v)
                                                   (if g$ls/false$9583$1Bug2v
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9584$1Bug2v
                                                            g$x*$9585$1Bug2v)
                                                          (g$build-sequence$7188$1Bug2v
                                                            '#f
                                                            (g$chi-expr*$7548$1Bug2v
                                                              (cons
                                                                g$x$9584$1Bug2v
                                                                g$x*$9585$1Bug2v)
                                                              g$r$9564$1Bug2v
                                                              g$mr$9565$1Bug2v))))
                                                       g$ls/false$9583$1Bug2v)
                                                     (g$syntax-violation$7643$1Bug2v
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9582$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$9582$1Bug2v
                                                  '(_ any . each-any)))))
                                            g$e$9563$1Bug2v)
                                           (if (g$memv$4955$1Bug2v
                                                 g$t$9575$1Bug2v
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$9586$1Bug2v)
                                                 ((case-lambda
                                                    ((g$ls/false$9587$1Bug2v)
                                                     (if (if g$ls/false$9587$1Bug2v
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$9588$1Bug2v
                                                                    g$xrhs*$9589$1Bug2v
                                                                    g$xbody$9590$1Bug2v
                                                                    g$xbody*$9591$1Bug2v)
                                                                  (if (not (g$valid-bound-ids?$7259$1Bug2v
                                                                             g$xlhs*$9588$1Bug2v))
                                                                    (g$syntax-violation$7643$1Bug2v
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$9563$1Bug2v)
                                                                    (void))))
                                                               g$ls/false$9587$1Bug2v))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$9592$1Bug2v
                                                              g$xrhs*$9593$1Bug2v
                                                              g$xbody$9594$1Bug2v
                                                              g$xbody*$9595$1Bug2v)
                                                            ((case-lambda
                                                               ((g$xlab*$9596$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$xrib$9597$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$xb*$9598$1Bug2v)
                                                                        ((case-lambda
                                                                           (()
                                                                            (g$build-sequence$7188$1Bug2v
                                                                              '#f
                                                                              (g$chi-expr*$7548$1Bug2v
                                                                                (map (case-lambda
                                                                                       ((g$x$9599$1Bug2v)
                                                                                        (g$add-subst$7244$1Bug2v
                                                                                          g$xrib$9597$1Bug2v
                                                                                          g$x$9599$1Bug2v)))
                                                                                     (cons
                                                                                       g$xbody$9594$1Bug2v
                                                                                       g$xbody*$9595$1Bug2v))
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9596$1Bug2v
                                                                                       g$xb*$9598$1Bug2v)
                                                                                  g$r$9564$1Bug2v)
                                                                                (append
                                                                                  (map cons
                                                                                       g$xlab*$9596$1Bug2v
                                                                                       g$xb*$9598$1Bug2v)
                                                                                  g$mr$9565$1Bug2v))))))))
                                                                     (map (case-lambda
                                                                            ((g$x$9600$1Bug2v)
                                                                             (g$make-eval-transformer$7286$1Bug2v
                                                                               (g$expand-transformer$7577$1Bug2v
                                                                                 (if (eq? g$type$9574$1Bug2v
                                                                                          'let-syntax)
                                                                                   g$x$9600$1Bug2v
                                                                                   (g$add-subst$7244$1Bug2v
                                                                                     g$xrib$9597$1Bug2v
                                                                                     g$x$9600$1Bug2v))
                                                                                 g$mr$9565$1Bug2v))))
                                                                          g$xrhs*$9593$1Bug2v))))
                                                                 (g$make-full-rib$7222$1Bug2v
                                                                   g$xlhs*$9592$1Bug2v
                                                                   g$xlab*$9596$1Bug2v))))
                                                             (map g$gen-label$7200$1Bug2v
                                                                  g$xlhs*$9592$1Bug2v))))
                                                         g$ls/false$9587$1Bug2v)
                                                       (g$syntax-violation$7643$1Bug2v
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$9586$1Bug2v))))
                                                  (g$syntax-dispatch$7532$1Bug2v
                                                    g$t$9586$1Bug2v
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$9563$1Bug2v)
                                             (if (g$memv$4955$1Bug2v
                                                   g$t$9575$1Bug2v
                                                   '(displaced-lexical))
                                               (g$syntax-violation$7643$1Bug2v
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$9563$1Bug2v)
                                               (if (g$memv$4955$1Bug2v
                                                     g$t$9575$1Bug2v
                                                     '(syntax))
                                                 (g$syntax-violation$7643$1Bug2v
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$9563$1Bug2v)
                                                 (if (g$memv$4955$1Bug2v
                                                       g$t$9575$1Bug2v
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$7643$1Bug2v
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$9601$1Bug2v)
                                                           (if (g$memv$4955$1Bug2v
                                                                 g$t$9601$1Bug2v
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$4955$1Bug2v
                                                                   g$t$9601$1Bug2v
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$4955$1Bug2v
                                                                     g$t$9601$1Bug2v
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$4955$1Bug2v
                                                                       g$t$9601$1Bug2v
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$4955$1Bug2v
                                                                         g$t$9601$1Bug2v
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$4955$1Bug2v
                                                                           g$t$9601$1Bug2v
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$9574$1Bug2v)
                                                       '" was found where an expression was expected")
                                                     g$e$9563$1Bug2v)
                                                   (if (g$memv$4955$1Bug2v
                                                         g$t$9575$1Bug2v
                                                         '(mutable))
                                                     (g$syntax-violation$7643$1Bug2v
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$9563$1Bug2v)
                                                     (g$syntax-violation$7643$1Bug2v
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$9563$1Bug2v)))))))))))))))))))
                  g$type$9574$1Bug2v)))
              g$kwd$9571$1Bug2v
              g$value$9570$1Bug2v
              g$type$9569$1Bug2v)))))))
   (g$chi-set!$7551$1Bug2v
     g$chi-set!$11011$1Bug2v
     (case-lambda
       ((g$e$9602$1Bug2v g$r$9603$1Bug2v g$mr$9604$1Bug2v)
        ((case-lambda
           ((g$t$9605$1Bug2v)
            ((case-lambda
               ((g$ls/false$9606$1Bug2v)
                (if (if g$ls/false$9606$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$9607$1Bug2v g$v$9608$1Bug2v)
                             (g$id?$7254$1Bug2v g$x$9607$1Bug2v)))
                          g$ls/false$9606$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$9609$1Bug2v g$v$9610$1Bug2v)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$7274$1Bug2v
                              g$x$9609$1Bug2v
                              g$r$9603$1Bug2v)))
                         (case-lambda
                           ((g$type$9614$1Bug2v
                              g$value$9615$1Bug2v
                              g$kwd$9616$1Bug2v)
                            ((case-lambda
                               ((g$kwd$9617$1Bug2v
                                  g$value$9618$1Bug2v
                                  g$type$9619$1Bug2v)
                                ((case-lambda
                                   ((g$t$9620$1Bug2v)
                                    (if (g$memv$4955$1Bug2v
                                          g$t$9620$1Bug2v
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$7478$1Bug2v
                                          g$value$9618$1Bug2v
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$7476$1Bug2v
                                            g$value$9618$1Bug2v)
                                          (g$chi-expr$7550$1Bug2v
                                            g$v$9610$1Bug2v
                                            g$r$9603$1Bug2v
                                            g$mr$9604$1Bug2v)))
                                      (if (g$memv$4955$1Bug2v
                                            g$t$9620$1Bug2v
                                            '(core-prim))
                                        (g$syntax-violation$7643$1Bug2v
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$9602$1Bug2v)
                                        (if (g$memv$4955$1Bug2v
                                              g$t$9620$1Bug2v
                                              '(global))
                                          (g$syntax-violation$7643$1Bug2v
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$9602$1Bug2v)
                                          (if (g$memv$4955$1Bug2v
                                                g$t$9620$1Bug2v
                                                '(global-macro!))
                                            (g$chi-expr$7550$1Bug2v
                                              (g$chi-global-macro$7547$1Bug2v
                                                g$value$9618$1Bug2v
                                                g$e$9602$1Bug2v)
                                              g$r$9603$1Bug2v
                                              g$mr$9604$1Bug2v)
                                            (if (g$memv$4955$1Bug2v
                                                  g$t$9620$1Bug2v
                                                  '(local-macro!))
                                              (g$chi-expr$7550$1Bug2v
                                                (g$chi-local-macro$7546$1Bug2v
                                                  g$value$9618$1Bug2v
                                                  g$e$9602$1Bug2v)
                                                g$r$9603$1Bug2v
                                                g$mr$9604$1Bug2v)
                                              (if (g$memv$4955$1Bug2v
                                                    g$t$9620$1Bug2v
                                                    '(mutable))
                                                (g$syntax-violation$7643$1Bug2v
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$9602$1Bug2v)
                                                (g$syntax-violation$7643$1Bug2v
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$9602$1Bug2v)))))))))
                                 g$type$9619$1Bug2v)))
                             g$kwd$9616$1Bug2v
                             g$value$9615$1Bug2v
                             g$type$9614$1Bug2v))))))
                    g$ls/false$9606$1Bug2v)
                  (g$syntax-violation$7643$1Bug2v
                    '#f
                    '"invalid syntax"
                    g$t$9605$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$9605$1Bug2v '(_ any any)))))
         g$e$9602$1Bug2v))))
   (g$verify-formals$7552$1Bug2v
     g$verify-formals$11012$1Bug2v
     (case-lambda
       ((g$fmls$9621$1Bug2v g$stx$9622$1Bug2v)
        ((case-lambda
           ((g$t$9623$1Bug2v)
            ((case-lambda
               ((g$ls/false$9624$1Bug2v)
                (if g$ls/false$9624$1Bug2v
                  (apply
                    (case-lambda
                      ((g$x*$9625$1Bug2v)
                       (if (not (g$valid-bound-ids?$7259$1Bug2v
                                  g$x*$9625$1Bug2v))
                         (g$invalid-fmls-error$7497$1Bug2v
                           g$stx$9622$1Bug2v
                           g$fmls$9621$1Bug2v)
                         (void))))
                    g$ls/false$9624$1Bug2v)
                  ((case-lambda
                     ((g$t$9626$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$9627$1Bug2v)
                          (if g$ls/false$9627$1Bug2v
                            (apply
                              (case-lambda
                                ((g$x*$9628$1Bug2v g$x$9629$1Bug2v)
                                 (if (not (g$valid-bound-ids?$7259$1Bug2v
                                            (cons
                                              g$x$9629$1Bug2v
                                              g$x*$9628$1Bug2v)))
                                   (g$invalid-fmls-error$7497$1Bug2v
                                     g$stx$9622$1Bug2v
                                     g$fmls$9621$1Bug2v)
                                   (void))))
                              g$ls/false$9627$1Bug2v)
                            ((case-lambda
                               ((g$t$9630$1Bug2v)
                                ((case-lambda
                                   ((g$ls/false$9631$1Bug2v)
                                    (if g$ls/false$9631$1Bug2v
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$stx$9622$1Bug2v)))
                                        g$ls/false$9631$1Bug2v)
                                      (g$syntax-violation$7643$1Bug2v
                                        '#f
                                        '"invalid syntax"
                                        g$t$9630$1Bug2v))))
                                 (g$syntax-dispatch$7532$1Bug2v
                                   g$t$9630$1Bug2v
                                   '_))))
                             g$t$9626$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$9626$1Bug2v
                         '#(each+ any () any)))))
                   g$t$9623$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$9623$1Bug2v 'each-any))))
         g$fmls$9621$1Bug2v))))
   (g$chi-lambda-clause$7553$1Bug2v
     g$chi-lambda-clause$11013$1Bug2v
     (case-lambda
       ((g$stx$9632$1Bug2v
          g$fmls$9633$1Bug2v
          g$body*$9634$1Bug2v
          g$r$9635$1Bug2v
          g$mr$9636$1Bug2v)
        ((case-lambda
           ((g$t$9637$1Bug2v)
            ((case-lambda
               ((g$ls/false$9638$1Bug2v)
                (if g$ls/false$9638$1Bug2v
                  (apply
                    (case-lambda
                      ((g$x*$9639$1Bug2v)
                       (begin
                         (g$verify-formals$7552$1Bug2v
                           g$fmls$9633$1Bug2v
                           g$stx$9632$1Bug2v)
                         ((case-lambda
                            ((g$lex*$9640$1Bug2v g$lab*$9641$1Bug2v)
                             (values
                               g$lex*$9640$1Bug2v
                               (g$chi-internal$7561$1Bug2v
                                 (g$add-subst$7244$1Bug2v
                                   (g$make-full-rib$7222$1Bug2v
                                     g$x*$9639$1Bug2v
                                     g$lab*$9641$1Bug2v)
                                   g$body*$9634$1Bug2v)
                                 (g$add-lexicals$7480$1Bug2v
                                   g$lab*$9641$1Bug2v
                                   g$lex*$9640$1Bug2v
                                   g$r$9635$1Bug2v)
                                 g$mr$9636$1Bug2v))))
                          (map g$gen-lexical$7198$1Bug2v g$x*$9639$1Bug2v)
                          (map g$gen-label$7200$1Bug2v g$x*$9639$1Bug2v)))))
                    g$ls/false$9638$1Bug2v)
                  ((case-lambda
                     ((g$t$9642$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$9643$1Bug2v)
                          (if g$ls/false$9643$1Bug2v
                            (apply
                              (case-lambda
                                ((g$x*$9644$1Bug2v g$x$9645$1Bug2v)
                                 (begin
                                   (g$verify-formals$7552$1Bug2v
                                     g$fmls$9633$1Bug2v
                                     g$stx$9632$1Bug2v)
                                   ((case-lambda
                                      ((g$lex*$9646$1Bug2v
                                         g$lab*$9647$1Bug2v
                                         g$lex$9648$1Bug2v
                                         g$lab$9649$1Bug2v)
                                       (values
                                         (append
                                           g$lex*$9646$1Bug2v
                                           g$lex$9648$1Bug2v)
                                         (g$chi-internal$7561$1Bug2v
                                           (g$add-subst$7244$1Bug2v
                                             (g$make-full-rib$7222$1Bug2v
                                               (cons
                                                 g$x$9645$1Bug2v
                                                 g$x*$9644$1Bug2v)
                                               (cons
                                                 g$lab$9649$1Bug2v
                                                 g$lab*$9647$1Bug2v))
                                             g$body*$9634$1Bug2v)
                                           (g$add-lexicals$7480$1Bug2v
                                             (cons
                                               g$lab$9649$1Bug2v
                                               g$lab*$9647$1Bug2v)
                                             (cons
                                               g$lex$9648$1Bug2v
                                               g$lex*$9646$1Bug2v)
                                             g$r$9635$1Bug2v)
                                           g$mr$9636$1Bug2v))))
                                    (map g$gen-lexical$7198$1Bug2v
                                         g$x*$9644$1Bug2v)
                                    (map g$gen-label$7200$1Bug2v
                                         g$x*$9644$1Bug2v)
                                    (g$gen-lexical$7198$1Bug2v g$x$9645$1Bug2v)
                                    (g$gen-label$7200$1Bug2v
                                      g$x$9645$1Bug2v)))))
                              g$ls/false$9643$1Bug2v)
                            ((case-lambda
                               ((g$t$9650$1Bug2v)
                                ((case-lambda
                                   ((g$ls/false$9651$1Bug2v)
                                    (if g$ls/false$9651$1Bug2v
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$7643$1Bug2v
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$9633$1Bug2v)))
                                        g$ls/false$9651$1Bug2v)
                                      (g$syntax-violation$7643$1Bug2v
                                        '#f
                                        '"invalid syntax"
                                        g$t$9650$1Bug2v))))
                                 (g$syntax-dispatch$7532$1Bug2v
                                   g$t$9650$1Bug2v
                                   '_))))
                             g$t$9642$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$9642$1Bug2v
                         '#(each+ any () any)))))
                   g$t$9637$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$9637$1Bug2v 'each-any))))
         g$fmls$9633$1Bug2v))))
   (g$chi-lambda-clause*$7554$1Bug2v
     g$chi-lambda-clause*$11014$1Bug2v
     (case-lambda
       ((g$stx$9652$1Bug2v
          g$fmls*$9653$1Bug2v
          g$body**$9654$1Bug2v
          g$r$9655$1Bug2v
          g$mr$9656$1Bug2v)
        (if (null? g$fmls*$9653$1Bug2v)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$7553$1Bug2v
                 g$stx$9652$1Bug2v
                 (car g$fmls*$9653$1Bug2v)
                 (car g$body**$9654$1Bug2v)
                 g$r$9655$1Bug2v
                 g$mr$9656$1Bug2v)))
            (case-lambda
              ((g$a$9659$1Bug2v g$b$9660$1Bug2v)
               ((case-lambda
                  ((g$b$9661$1Bug2v g$a$9662$1Bug2v)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$7554$1Bug2v
                          g$stx$9652$1Bug2v
                          (cdr g$fmls*$9653$1Bug2v)
                          (cdr g$body**$9654$1Bug2v)
                          g$r$9655$1Bug2v
                          g$mr$9656$1Bug2v)))
                     (case-lambda
                       ((g$a*$9665$1Bug2v g$b*$9666$1Bug2v)
                        ((case-lambda
                           ((g$b*$9667$1Bug2v g$a*$9668$1Bug2v)
                            (values
                              (cons g$a$9662$1Bug2v g$a*$9668$1Bug2v)
                              (cons g$b$9661$1Bug2v g$b*$9667$1Bug2v))))
                         g$b*$9666$1Bug2v
                         g$a*$9665$1Bug2v))))))
                g$b$9660$1Bug2v
                g$a$9659$1Bug2v))))))))
   (g$chi-defun$7555$1Bug2v
     g$chi-defun$11015$1Bug2v
     (case-lambda
       ((g$x$9669$1Bug2v g$r$9670$1Bug2v g$mr$9671$1Bug2v)
        ((case-lambda
           ((g$fmls$9672$1Bug2v g$body*$9673$1Bug2v)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$7553$1Bug2v
                   g$fmls$9672$1Bug2v
                   g$fmls$9672$1Bug2v
                   g$body*$9673$1Bug2v
                   g$r$9670$1Bug2v
                   g$mr$9671$1Bug2v)))
              (case-lambda
                ((g$fmls$9676$1Bug2v g$body$9677$1Bug2v)
                 ((case-lambda
                    ((g$body$9678$1Bug2v g$fmls$9679$1Bug2v)
                     (g$build-lambda$7185$1Bug2v
                       '#f
                       g$fmls$9679$1Bug2v
                       g$body$9678$1Bug2v)))
                  g$body$9677$1Bug2v
                  g$fmls$9676$1Bug2v))))))
         (car g$x$9669$1Bug2v)
         (cdr g$x$9669$1Bug2v)))))
   (g$chi-rhs$7556$1Bug2v
     g$chi-rhs$11016$1Bug2v
     (case-lambda
       ((g$rhs$9680$1Bug2v g$r$9681$1Bug2v g$mr$9682$1Bug2v)
        ((case-lambda
           ((g$t$9683$1Bug2v)
            (if (g$memv$4955$1Bug2v g$t$9683$1Bug2v '(defun))
              (g$chi-defun$7555$1Bug2v
                (cdr g$rhs$9680$1Bug2v)
                g$r$9681$1Bug2v
                g$mr$9682$1Bug2v)
              (if (g$memv$4955$1Bug2v g$t$9683$1Bug2v '(expr))
                ((case-lambda
                   ((g$expr$9684$1Bug2v)
                    (g$chi-expr$7550$1Bug2v
                      g$expr$9684$1Bug2v
                      g$r$9681$1Bug2v
                      g$mr$9682$1Bug2v)))
                 (cdr g$rhs$9680$1Bug2v))
                (if (g$memv$4955$1Bug2v g$t$9683$1Bug2v '(top-expr))
                  ((case-lambda
                     ((g$expr$9685$1Bug2v)
                      (g$build-sequence$7188$1Bug2v
                        '#f
                        (list
                          (g$chi-expr$7550$1Bug2v
                            g$expr$9685$1Bug2v
                            g$r$9681$1Bug2v
                            g$mr$9682$1Bug2v)
                          (g$build-void$7189$1Bug2v)))))
                   (cdr g$rhs$9680$1Bug2v))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$9680$1Bug2v))))))
         (car g$rhs$9680$1Bug2v)))))
   (g$expand-interaction-rhs*/init*$7557$1Bug2v
     g$expand-interaction-rhs*/init*$11017$1Bug2v
     (case-lambda
       ((g$lhs*$9686$1Bug2v
          g$rhs*$9687$1Bug2v
          g$init*$9688$1Bug2v
          g$r$9689$1Bug2v
          g$mr$9690$1Bug2v)
        ((letrec ((g$f$9691$1Bug2v
                    (case-lambda
                      ((g$lhs*$9692$1Bug2v g$rhs*$9693$1Bug2v)
                       (if (null? g$lhs*$9692$1Bug2v)
                         (map (case-lambda
                                ((g$x$9694$1Bug2v)
                                 (g$chi-expr$7550$1Bug2v
                                   g$x$9694$1Bug2v
                                   g$r$9689$1Bug2v
                                   g$mr$9690$1Bug2v)))
                              g$init*$9688$1Bug2v)
                         ((case-lambda
                            ((g$lhs$9695$1Bug2v g$rhs$9696$1Bug2v)
                             ((case-lambda
                                ((g$t$9697$1Bug2v)
                                 (if (g$memv$4955$1Bug2v
                                       g$t$9697$1Bug2v
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$9698$1Bug2v)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$9695$1Bug2v
                                           g$rhs$9698$1Bug2v)
                                         (g$f$9691$1Bug2v
                                           (cdr g$lhs*$9692$1Bug2v)
                                           (cdr g$rhs*$9693$1Bug2v)))))
                                    (g$chi-defun$7555$1Bug2v
                                      (cdr g$rhs$9696$1Bug2v)
                                      g$r$9689$1Bug2v
                                      g$mr$9690$1Bug2v))
                                   (if (g$memv$4955$1Bug2v
                                         g$t$9697$1Bug2v
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$9699$1Bug2v)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$9695$1Bug2v
                                             g$rhs$9699$1Bug2v)
                                           (g$f$9691$1Bug2v
                                             (cdr g$lhs*$9692$1Bug2v)
                                             (cdr g$rhs*$9693$1Bug2v)))))
                                      (g$chi-expr$7550$1Bug2v
                                        (cdr g$rhs$9696$1Bug2v)
                                        g$r$9689$1Bug2v
                                        g$mr$9690$1Bug2v))
                                     (if (g$memv$4955$1Bug2v
                                           g$t$9697$1Bug2v
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$9700$1Bug2v)
                                           (cons
                                             g$e$9700$1Bug2v
                                             (g$f$9691$1Bug2v
                                               (cdr g$lhs*$9692$1Bug2v)
                                               (cdr g$rhs*$9693$1Bug2v)))))
                                        (g$chi-expr$7550$1Bug2v
                                          (cdr g$rhs$9696$1Bug2v)
                                          g$r$9689$1Bug2v
                                          g$mr$9690$1Bug2v))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$9696$1Bug2v))))))
                              (car g$rhs$9696$1Bug2v))))
                          (car g$lhs*$9692$1Bug2v)
                          (car g$rhs*$9693$1Bug2v)))))))
           g$f$9691$1Bug2v)
         g$lhs*$9686$1Bug2v
         g$rhs*$9687$1Bug2v))))
   (g$chi-rhs*$7558$1Bug2v
     g$chi-rhs*$11018$1Bug2v
     (case-lambda
       ((g$rhs*$9701$1Bug2v g$r$9702$1Bug2v g$mr$9703$1Bug2v)
        ((letrec ((g$f$9704$1Bug2v
                    (case-lambda
                      ((g$ls$9705$1Bug2v)
                       (if (null? g$ls$9705$1Bug2v)
                         '()
                         ((case-lambda
                            ((g$a$9706$1Bug2v)
                             (cons
                               g$a$9706$1Bug2v
                               (g$f$9704$1Bug2v (cdr g$ls$9705$1Bug2v)))))
                          (g$chi-rhs$7556$1Bug2v
                            (car g$ls$9705$1Bug2v)
                            g$r$9702$1Bug2v
                            g$mr$9703$1Bug2v)))))))
           g$f$9704$1Bug2v)
         g$rhs*$9701$1Bug2v))))
   (g$find-bound=?$7559$1Bug2v
     g$find-bound=?$11019$1Bug2v
     (case-lambda
       ((g$x$9707$1Bug2v g$lhs*$9708$1Bug2v g$rhs*$9709$1Bug2v)
        (if (null? g$lhs*$9708$1Bug2v)
          '#f
          (if (g$bound-id=?$7257$1Bug2v
                g$x$9707$1Bug2v
                (car g$lhs*$9708$1Bug2v))
            (car g$rhs*$9709$1Bug2v)
            (g$find-bound=?$7559$1Bug2v
              g$x$9707$1Bug2v
              (cdr g$lhs*$9708$1Bug2v)
              (cdr g$rhs*$9709$1Bug2v)))))))
   (g$find-dups$7560$1Bug2v
     g$find-dups$11020$1Bug2v
     (case-lambda
       ((g$ls$9710$1Bug2v)
        ((letrec ((g$f$9711$1Bug2v
                    (case-lambda
                      ((g$ls$9712$1Bug2v g$dups$9713$1Bug2v)
                       (if (null? g$ls$9712$1Bug2v)
                         g$dups$9713$1Bug2v
                         ((case-lambda
                            ((g$t$9714$1Bug2v)
                             (if g$t$9714$1Bug2v
                               ((case-lambda
                                  ((g$x$9715$1Bug2v)
                                   (g$f$9711$1Bug2v
                                     (cdr g$ls$9712$1Bug2v)
                                     (cons
                                       (list
                                         (car g$ls$9712$1Bug2v)
                                         g$x$9715$1Bug2v)
                                       g$dups$9713$1Bug2v))))
                                g$t$9714$1Bug2v)
                               (g$f$9711$1Bug2v
                                 (cdr g$ls$9712$1Bug2v)
                                 g$dups$9713$1Bug2v))))
                          (g$find-bound=?$7559$1Bug2v
                            (car g$ls$9712$1Bug2v)
                            (cdr g$ls$9712$1Bug2v)
                            (cdr g$ls$9712$1Bug2v))))))))
           g$f$9711$1Bug2v)
         g$ls$9710$1Bug2v
         '()))))
   (g$chi-internal$7561$1Bug2v
     g$chi-internal$11021$1Bug2v
     (case-lambda
       ((g$e*$9716$1Bug2v g$r$9717$1Bug2v g$mr$9718$1Bug2v)
        ((case-lambda
           ((g$rib$9719$1Bug2v)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$7576$1Bug2v
                   (map (case-lambda
                          ((g$x$9728$1Bug2v)
                           (g$add-subst$7244$1Bug2v
                             g$rib$9719$1Bug2v
                             g$x$9728$1Bug2v)))
                        (g$syntax->list$7253$1Bug2v g$e*$9716$1Bug2v))
                   g$r$9717$1Bug2v
                   g$mr$9718$1Bug2v
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$9719$1Bug2v
                   '#f)))
              (case-lambda
                ((g$e*$9729$1Bug2v
                   g$r$9730$1Bug2v
                   g$mr$9731$1Bug2v
                   g$lex*$9732$1Bug2v
                   g$rhs*$9733$1Bug2v
                   g$mod**$9734$1Bug2v
                   g$kwd*$9735$1Bug2v
                   g$_exp*$9736$1Bug2v)
                 ((case-lambda
                    ((g$_exp*$9737$1Bug2v
                       g$kwd*$9738$1Bug2v
                       g$mod**$9739$1Bug2v
                       g$rhs*$9740$1Bug2v
                       g$lex*$9741$1Bug2v
                       g$mr$9742$1Bug2v
                       g$r$9743$1Bug2v
                       g$e*$9744$1Bug2v)
                     (begin
                       (if (null? g$e*$9744$1Bug2v)
                         (g$syntax-violation$7643$1Bug2v
                           '#f
                           '"no expression in body"
                           g$e*$9744$1Bug2v)
                         (void))
                       ((case-lambda
                          ((g$init*$9745$1Bug2v)
                           ((case-lambda
                              ((g$rhs*$9746$1Bug2v)
                               ((case-lambda
                                  (()
                                   (g$build-letrec*$7191$1Bug2v
                                     '#f
                                     (reverse g$lex*$9741$1Bug2v)
                                     (reverse g$rhs*$9746$1Bug2v)
                                     (g$build-sequence$7188$1Bug2v
                                       '#f
                                       g$init*$9745$1Bug2v)))))))
                            (g$chi-rhs*$7558$1Bug2v
                              g$rhs*$9740$1Bug2v
                              g$r$9743$1Bug2v
                              g$mr$9742$1Bug2v))))
                        (g$chi-expr*$7548$1Bug2v
                          (append
                            (apply append (reverse g$mod**$9739$1Bug2v))
                            g$e*$9744$1Bug2v)
                          g$r$9743$1Bug2v
                          g$mr$9742$1Bug2v)))))
                  g$_exp*$9736$1Bug2v
                  g$kwd*$9735$1Bug2v
                  g$mod**$9734$1Bug2v
                  g$rhs*$9733$1Bug2v
                  g$lex*$9732$1Bug2v
                  g$mr$9731$1Bug2v
                  g$r$9730$1Bug2v
                  g$e*$9729$1Bug2v))))))
         (g$make-empty-rib$7217$1Bug2v)))))
   (g$parse-module$7562$1Bug2v
     g$parse-module$11022$1Bug2v
     (case-lambda
       ((g$e$9747$1Bug2v)
        ((case-lambda
           ((g$t$9748$1Bug2v)
            ((case-lambda
               ((g$ls/false$9749$1Bug2v)
                (if g$ls/false$9749$1Bug2v
                  (apply
                    (case-lambda
                      ((g$export*$9750$1Bug2v g$b*$9751$1Bug2v)
                       (begin
                         (if (not (g$for-all$4960$1Bug2v
                                    g$id?$7254$1Bug2v
                                    g$export*$9750$1Bug2v))
                           (g$syntax-violation$7643$1Bug2v
                             '#f
                             '"module exports must be identifiers"
                             g$e$9747$1Bug2v)
                           (void))
                         (values
                           '#f
                           (list->vector g$export*$9750$1Bug2v)
                           g$b*$9751$1Bug2v))))
                    g$ls/false$9749$1Bug2v)
                  ((case-lambda
                     ((g$t$9752$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$9753$1Bug2v)
                          (if g$ls/false$9753$1Bug2v
                            (apply
                              (case-lambda
                                ((g$name$9754$1Bug2v
                                   g$export*$9755$1Bug2v
                                   g$b*$9756$1Bug2v)
                                 (begin
                                   (if (not (g$id?$7254$1Bug2v
                                              g$name$9754$1Bug2v))
                                     (g$syntax-violation$7643$1Bug2v
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$9747$1Bug2v)
                                     (void))
                                   (if (not (g$for-all$4960$1Bug2v
                                              g$id?$7254$1Bug2v
                                              g$export*$9755$1Bug2v))
                                     (g$syntax-violation$7643$1Bug2v
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$9747$1Bug2v)
                                     (void))
                                   (values
                                     g$name$9754$1Bug2v
                                     (list->vector g$export*$9755$1Bug2v)
                                     g$b*$9756$1Bug2v))))
                              g$ls/false$9753$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$9752$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$9752$1Bug2v
                         '(_ any each-any . each-any)))))
                   g$t$9748$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$9748$1Bug2v
               '(_ each-any . each-any)))))
         g$e$9747$1Bug2v))))
   (g$8722$7563$1Bug2v
     g$8722$11023$1Bug2v
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$8725$1Bug2v
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$8724$7564$1Bug2v g$8724$11024$1Bug2v '#f)
   (g$8723$7565$1Bug2v
     g$8723$11025$1Bug2v
     (make-record-constructor-descriptor
       g$8722$7563$1Bug2v
       '#f
       g$8724$7564$1Bug2v))
   (g$module-interface?$7566$1Bug2v
     g$module-interface?$11026$1Bug2v
     (record-predicate g$8722$7563$1Bug2v))
   (g$make-module-interface$7567$1Bug2v
     g$make-module-interface$11027$1Bug2v
     (record-constructor g$8723$7565$1Bug2v))
   (g$module-interface-first-mark$7568$1Bug2v
     g$module-interface-first-mark$11028$1Bug2v
     (record-accessor g$8722$7563$1Bug2v '0))
   (g$module-interface-exp-id-vec$7569$1Bug2v
     g$module-interface-exp-id-vec$11029$1Bug2v
     (record-accessor g$8722$7563$1Bug2v '1))
   (g$module-interface-exp-lab-vec$7570$1Bug2v
     g$module-interface-exp-lab-vec$11030$1Bug2v
     (record-accessor g$8722$7563$1Bug2v '2))
   (g$set-module-interface-first-mark!$7571$1Bug2v
     g$set-module-interface-first-mark!$11031$1Bug2v
     (record-mutator g$8722$7563$1Bug2v '0))
   (g$set-module-interface-exp-id-vec!$7572$1Bug2v
     g$set-module-interface-exp-id-vec!$11032$1Bug2v
     (record-mutator g$8722$7563$1Bug2v '1))
   (g$set-module-interface-exp-lab-vec!$7573$1Bug2v
     g$set-module-interface-exp-lab-vec!$11033$1Bug2v
     (record-mutator g$8722$7563$1Bug2v '2))
   (g$module-interface-exp-id*$7574$1Bug2v
     g$module-interface-exp-id*$11034$1Bug2v
     (case-lambda
       ((g$iface$9757$1Bug2v g$id$9758$1Bug2v)
        (letrec* ((g$diff-marks$9759$1Bug2v
                    (case-lambda
                      ((g$ls$9763$1Bug2v g$x$9764$1Bug2v)
                       (begin
                         (if (null? g$ls$9763$1Bug2v)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$9765$1Bug2v)
                             (if (eq? g$a$9765$1Bug2v g$x$9764$1Bug2v)
                               '()
                               (cons
                                 g$a$9765$1Bug2v
                                 (g$diff-marks$9759$1Bug2v
                                   (cdr g$ls$9763$1Bug2v)
                                   g$x$9764$1Bug2v)))))
                          (car g$ls$9763$1Bug2v)))))))
          ((case-lambda
             ((g$diff$9760$1Bug2v g$id-vec$9761$1Bug2v)
              (if (null? g$diff$9760$1Bug2v)
                g$id-vec$9761$1Bug2v
                (vector-map
                  (case-lambda
                    ((g$x$9762$1Bug2v)
                     (g$make-stx$7227$1Bug2v
                       (g$stx-expr$7228$1Bug2v g$x$9762$1Bug2v)
                       (append
                         g$diff$9760$1Bug2v
                         (g$stx-mark*$7229$1Bug2v g$x$9762$1Bug2v))
                       '()
                       '())))
                  g$id-vec$9761$1Bug2v))))
           (g$diff-marks$9759$1Bug2v
             (g$stx-mark*$7229$1Bug2v g$id$9758$1Bug2v)
             (g$module-interface-first-mark$7568$1Bug2v g$iface$9757$1Bug2v))
           (g$module-interface-exp-id-vec$7569$1Bug2v g$iface$9757$1Bug2v))))))
   (g$chi-internal-module$7575$1Bug2v
     g$chi-internal-module$11035$1Bug2v
     (case-lambda
       ((g$e$9766$1Bug2v
          g$r$9767$1Bug2v
          g$mr$9768$1Bug2v
          g$lex*$9769$1Bug2v
          g$rhs*$9770$1Bug2v
          g$mod**$9771$1Bug2v
          g$kwd*$9772$1Bug2v)
        (call-with-values
          (case-lambda (() (g$parse-module$7562$1Bug2v g$e$9766$1Bug2v)))
          (case-lambda
            ((g$name$9776$1Bug2v g$exp-id*$9777$1Bug2v g$e*$9778$1Bug2v)
             ((case-lambda
                ((g$e*$9779$1Bug2v g$exp-id*$9780$1Bug2v g$name$9781$1Bug2v)
                 ((case-lambda
                    ((g$rib$9782$1Bug2v)
                     ((case-lambda
                        ((g$e*$9783$1Bug2v)
                         ((case-lambda
                            (()
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$chi-body*$7576$1Bug2v
                                    g$e*$9783$1Bug2v
                                    g$r$9767$1Bug2v
                                    g$mr$9768$1Bug2v
                                    g$lex*$9769$1Bug2v
                                    g$rhs*$9770$1Bug2v
                                    g$mod**$9771$1Bug2v
                                    g$kwd*$9772$1Bug2v
                                    '()
                                    g$rib$9782$1Bug2v
                                    '#f)))
                               (case-lambda
                                 ((g$e*$9792$1Bug2v
                                    g$r$9793$1Bug2v
                                    g$mr$9794$1Bug2v
                                    g$lex*$9795$1Bug2v
                                    g$rhs*$9796$1Bug2v
                                    g$mod**$9797$1Bug2v
                                    g$kwd*$9798$1Bug2v
                                    g$_exp*$9799$1Bug2v)
                                  ((case-lambda
                                     ((g$_exp*$9800$1Bug2v
                                        g$kwd*$9801$1Bug2v
                                        g$mod**$9802$1Bug2v
                                        g$rhs*$9803$1Bug2v
                                        g$lex*$9804$1Bug2v
                                        g$mr$9805$1Bug2v
                                        g$r$9806$1Bug2v
                                        g$e*$9807$1Bug2v)
                                      ((case-lambda
                                         ((g$exp-lab*$9808$1Bug2v
                                            g$mod**$9809$1Bug2v)
                                          (if (not g$name$9781$1Bug2v)
                                            (values
                                              g$lex*$9804$1Bug2v
                                              g$rhs*$9803$1Bug2v
                                              g$exp-id*$9780$1Bug2v
                                              g$exp-lab*$9808$1Bug2v
                                              g$r$9806$1Bug2v
                                              g$mr$9805$1Bug2v
                                              g$mod**$9809$1Bug2v
                                              g$kwd*$9801$1Bug2v)
                                            ((case-lambda
                                               ((g$lab$9810$1Bug2v
                                                  g$iface$9811$1Bug2v)
                                                (values
                                                  g$lex*$9804$1Bug2v
                                                  g$rhs*$9803$1Bug2v
                                                  (vector g$name$9781$1Bug2v)
                                                  (vector g$lab$9810$1Bug2v)
                                                  (cons
                                                    (cons
                                                      g$lab$9810$1Bug2v
                                                      (cons
                                                        '$module
                                                        g$iface$9811$1Bug2v))
                                                    g$r$9806$1Bug2v)
                                                  (cons
                                                    (cons
                                                      g$lab$9810$1Bug2v
                                                      (cons
                                                        '$module
                                                        g$iface$9811$1Bug2v))
                                                    g$mr$9805$1Bug2v)
                                                  g$mod**$9809$1Bug2v
                                                  g$kwd*$9801$1Bug2v)))
                                             (g$gen-label$7200$1Bug2v 'module)
                                             (g$make-module-interface$7567$1Bug2v
                                               (car (g$stx-mark*$7229$1Bug2v
                                                      g$name$9781$1Bug2v))
                                               (vector-map
                                                 (case-lambda
                                                   ((g$x$9812$1Bug2v)
                                                    (g$make-stx$7227$1Bug2v
                                                      (g$stx-expr$7228$1Bug2v
                                                        g$x$9812$1Bug2v)
                                                      (g$stx-mark*$7229$1Bug2v
                                                        g$x$9812$1Bug2v)
                                                      '()
                                                      '())))
                                                 g$exp-id*$9780$1Bug2v)
                                               g$exp-lab*$9808$1Bug2v)))))
                                       (vector-map
                                         (case-lambda
                                           ((g$x$9813$1Bug2v)
                                            ((case-lambda
                                               ((g$t$9814$1Bug2v)
                                                (if g$t$9814$1Bug2v
                                                  g$t$9814$1Bug2v
                                                  (begin
                                                    '#f
                                                    (g$syntax-violation$7643$1Bug2v
                                                      '#f
                                                      '"cannot find module export"
                                                      g$x$9813$1Bug2v)))))
                                             (g$id->label$7267$1Bug2v
                                               (g$make-stx$7227$1Bug2v
                                                 (g$id->sym$7255$1Bug2v
                                                   g$x$9813$1Bug2v)
                                                 (g$stx-mark*$7229$1Bug2v
                                                   g$x$9813$1Bug2v)
                                                 (list g$rib$9782$1Bug2v)
                                                 '())))))
                                         g$exp-id*$9780$1Bug2v)
                                       (cons
                                         g$e*$9807$1Bug2v
                                         g$mod**$9802$1Bug2v))))
                                   g$_exp*$9799$1Bug2v
                                   g$kwd*$9798$1Bug2v
                                   g$mod**$9797$1Bug2v
                                   g$rhs*$9796$1Bug2v
                                   g$lex*$9795$1Bug2v
                                   g$mr$9794$1Bug2v
                                   g$r$9793$1Bug2v
                                   g$e*$9792$1Bug2v)))))))))
                      (map (case-lambda
                             ((g$x$9815$1Bug2v)
                              (g$add-subst$7244$1Bug2v
                                g$rib$9782$1Bug2v
                                g$x$9815$1Bug2v)))
                           (g$syntax->list$7253$1Bug2v g$e*$9779$1Bug2v)))))
                  (g$make-empty-rib$7217$1Bug2v))))
              g$e*$9778$1Bug2v
              g$exp-id*$9777$1Bug2v
              g$name$9776$1Bug2v)))))))
   (g$chi-body*$7576$1Bug2v
     g$chi-body*$11036$1Bug2v
     (case-lambda
       ((g$e*$9816$1Bug2v
          g$r$9817$1Bug2v
          g$mr$9818$1Bug2v
          g$lex*$9819$1Bug2v
          g$rhs*$9820$1Bug2v
          g$mod**$9821$1Bug2v
          g$kwd*$9822$1Bug2v
          g$exp*$9823$1Bug2v
          g$rib$9824$1Bug2v
          g$top?$9825$1Bug2v)
        (if (null? g$e*$9816$1Bug2v)
          (values
            g$e*$9816$1Bug2v
            g$r$9817$1Bug2v
            g$mr$9818$1Bug2v
            g$lex*$9819$1Bug2v
            g$rhs*$9820$1Bug2v
            g$mod**$9821$1Bug2v
            g$kwd*$9822$1Bug2v
            g$exp*$9823$1Bug2v)
          ((case-lambda
             ((g$e$9826$1Bug2v)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$7274$1Bug2v g$e$9826$1Bug2v g$r$9817$1Bug2v)))
                (case-lambda
                  ((g$type$9830$1Bug2v g$value$9831$1Bug2v g$kwd$9832$1Bug2v)
                   ((case-lambda
                      ((g$kwd$9833$1Bug2v
                         g$value$9834$1Bug2v
                         g$type$9835$1Bug2v)
                       ((case-lambda
                          ((g$kwd*$9836$1Bug2v)
                           ((case-lambda
                              ((g$t$9837$1Bug2v)
                               (if (g$memv$4955$1Bug2v
                                     g$t$9837$1Bug2v
                                     '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$7472$1Bug2v
                                        g$e$9826$1Bug2v)))
                                   (case-lambda
                                     ((g$id$9840$1Bug2v g$rhs$9841$1Bug2v)
                                      ((case-lambda
                                         ((g$rhs$9842$1Bug2v g$id$9843$1Bug2v)
                                          (begin
                                            (if (g$bound-id-member?$7261$1Bug2v
                                                  g$id$9843$1Bug2v
                                                  g$kwd*$9836$1Bug2v)
                                              (g$syntax-violation$7643$1Bug2v
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$9826$1Bug2v)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$7202$1Bug2v
                                                   g$id$9843$1Bug2v
                                                   g$rib$9824$1Bug2v)))
                                              (case-lambda
                                                ((g$lab$9846$1Bug2v
                                                   g$lex$9847$1Bug2v)
                                                 ((case-lambda
                                                    ((g$lex$9848$1Bug2v
                                                       g$lab$9849$1Bug2v)
                                                     (begin
                                                       (g$extend-rib!$7218$1Bug2v
                                                         g$rib$9824$1Bug2v
                                                         g$id$9843$1Bug2v
                                                         g$lab$9849$1Bug2v)
                                                       (g$chi-body*$7576$1Bug2v
                                                         (cdr g$e*$9816$1Bug2v)
                                                         (g$add-lexical$7479$1Bug2v
                                                           g$lab$9849$1Bug2v
                                                           g$lex$9848$1Bug2v
                                                           g$r$9817$1Bug2v)
                                                         g$mr$9818$1Bug2v
                                                         (cons
                                                           g$lex$9848$1Bug2v
                                                           g$lex*$9819$1Bug2v)
                                                         (cons
                                                           g$rhs$9842$1Bug2v
                                                           g$rhs*$9820$1Bug2v)
                                                         g$mod**$9821$1Bug2v
                                                         g$kwd*$9836$1Bug2v
                                                         g$exp*$9823$1Bug2v
                                                         g$rib$9824$1Bug2v
                                                         g$top?$9825$1Bug2v))))
                                                  g$lex$9847$1Bug2v
                                                  g$lab$9846$1Bug2v)))))))
                                       g$rhs$9841$1Bug2v
                                       g$id$9840$1Bug2v))))
                                 (if (g$memv$4955$1Bug2v
                                       g$t$9837$1Bug2v
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$7473$1Bug2v
                                          g$e$9826$1Bug2v)))
                                     (case-lambda
                                       ((g$id$9852$1Bug2v g$rhs$9853$1Bug2v)
                                        ((case-lambda
                                           ((g$rhs$9854$1Bug2v g$id$9855$1Bug2v)
                                            (begin
                                              (if (g$bound-id-member?$7261$1Bug2v
                                                    g$id$9855$1Bug2v
                                                    g$kwd*$9836$1Bug2v)
                                                (g$syntax-violation$7643$1Bug2v
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$9826$1Bug2v)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$9856$1Bug2v
                                                    g$expanded-rhs$9857$1Bug2v)
                                                  (begin
                                                    (g$extend-rib!$7218$1Bug2v
                                                      g$rib$9824$1Bug2v
                                                      g$id$9855$1Bug2v
                                                      g$lab$9856$1Bug2v)
                                                    ((case-lambda
                                                       ((g$b$9858$1Bug2v)
                                                        (g$chi-body*$7576$1Bug2v
                                                          (cdr g$e*$9816$1Bug2v)
                                                          (cons
                                                            (cons
                                                              g$lab$9856$1Bug2v
                                                              g$b$9858$1Bug2v)
                                                            g$r$9817$1Bug2v)
                                                          (cons
                                                            (cons
                                                              g$lab$9856$1Bug2v
                                                              g$b$9858$1Bug2v)
                                                            g$mr$9818$1Bug2v)
                                                          g$lex*$9819$1Bug2v
                                                          g$rhs*$9820$1Bug2v
                                                          g$mod**$9821$1Bug2v
                                                          g$kwd*$9836$1Bug2v
                                                          g$exp*$9823$1Bug2v
                                                          g$rib$9824$1Bug2v
                                                          g$top?$9825$1Bug2v)))
                                                     (g$make-eval-transformer$7286$1Bug2v
                                                       g$expanded-rhs$9857$1Bug2v)))))
                                               (g$gen-define-label$7203$1Bug2v
                                                 g$id$9855$1Bug2v
                                                 g$rib$9824$1Bug2v)
                                               (g$expand-transformer$7577$1Bug2v
                                                 g$rhs$9854$1Bug2v
                                                 g$mr$9818$1Bug2v)))))
                                         g$rhs$9853$1Bug2v
                                         g$id$9852$1Bug2v))))
                                   (if (g$memv$4955$1Bug2v
                                         g$t$9837$1Bug2v
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$9859$1Bug2v)
                                         ((case-lambda
                                            ((g$ls/false$9860$1Bug2v)
                                             (if (if g$ls/false$9860$1Bug2v
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$9861$1Bug2v
                                                            g$xrhs*$9862$1Bug2v
                                                            g$xbody*$9863$1Bug2v)
                                                          (if (not (g$valid-bound-ids?$7259$1Bug2v
                                                                     g$xlhs*$9861$1Bug2v))
                                                            (g$syntax-violation$7643$1Bug2v
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$9826$1Bug2v)
                                                            (void))))
                                                       g$ls/false$9860$1Bug2v))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$9864$1Bug2v
                                                      g$xrhs*$9865$1Bug2v
                                                      g$xbody*$9866$1Bug2v)
                                                    ((case-lambda
                                                       ((g$xlab*$9867$1Bug2v)
                                                        ((case-lambda
                                                           ((g$xrib$9868$1Bug2v)
                                                            ((case-lambda
                                                               ((g$xb*$9869$1Bug2v)
                                                                ((case-lambda
                                                                   (()
                                                                    (g$chi-body*$7576$1Bug2v
                                                                      (append
                                                                        (map (case-lambda
                                                                               ((g$x$9870$1Bug2v)
                                                                                (g$add-subst$7244$1Bug2v
                                                                                  g$xrib$9868$1Bug2v
                                                                                  g$x$9870$1Bug2v)))
                                                                             g$xbody*$9866$1Bug2v)
                                                                        (cdr g$e*$9816$1Bug2v))
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9867$1Bug2v
                                                                             g$xb*$9869$1Bug2v)
                                                                        g$r$9817$1Bug2v)
                                                                      (append
                                                                        (map cons
                                                                             g$xlab*$9867$1Bug2v
                                                                             g$xb*$9869$1Bug2v)
                                                                        g$mr$9818$1Bug2v)
                                                                      g$lex*$9819$1Bug2v
                                                                      g$rhs*$9820$1Bug2v
                                                                      g$mod**$9821$1Bug2v
                                                                      g$kwd*$9836$1Bug2v
                                                                      g$exp*$9823$1Bug2v
                                                                      g$rib$9824$1Bug2v
                                                                      g$top?$9825$1Bug2v))))))
                                                             (map (case-lambda
                                                                    ((g$x$9871$1Bug2v)
                                                                     (g$make-eval-transformer$7286$1Bug2v
                                                                       (g$expand-transformer$7577$1Bug2v
                                                                         (if (eq? g$type$9835$1Bug2v
                                                                                  'let-syntax)
                                                                           g$x$9871$1Bug2v
                                                                           (g$add-subst$7244$1Bug2v
                                                                             g$xrib$9868$1Bug2v
                                                                             g$x$9871$1Bug2v))
                                                                         g$mr$9818$1Bug2v))))
                                                                  g$xrhs*$9865$1Bug2v))))
                                                         (g$make-full-rib$7222$1Bug2v
                                                           g$xlhs*$9864$1Bug2v
                                                           g$xlab*$9867$1Bug2v))))
                                                     (map g$gen-label$7200$1Bug2v
                                                          g$xlhs*$9864$1Bug2v))))
                                                 g$ls/false$9860$1Bug2v)
                                               (g$syntax-violation$7643$1Bug2v
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$9859$1Bug2v))))
                                          (g$syntax-dispatch$7532$1Bug2v
                                            g$t$9859$1Bug2v
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$9826$1Bug2v)
                                     (if (g$memv$4955$1Bug2v
                                           g$t$9837$1Bug2v
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$9872$1Bug2v)
                                           ((case-lambda
                                              ((g$ls/false$9873$1Bug2v)
                                               (if g$ls/false$9873$1Bug2v
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$9874$1Bug2v)
                                                      (g$chi-body*$7576$1Bug2v
                                                        (append
                                                          g$x*$9874$1Bug2v
                                                          (cdr g$e*$9816$1Bug2v))
                                                        g$r$9817$1Bug2v
                                                        g$mr$9818$1Bug2v
                                                        g$lex*$9819$1Bug2v
                                                        g$rhs*$9820$1Bug2v
                                                        g$mod**$9821$1Bug2v
                                                        g$kwd*$9836$1Bug2v
                                                        g$exp*$9823$1Bug2v
                                                        g$rib$9824$1Bug2v
                                                        g$top?$9825$1Bug2v)))
                                                   g$ls/false$9873$1Bug2v)
                                                 (g$syntax-violation$7643$1Bug2v
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$9872$1Bug2v))))
                                            (g$syntax-dispatch$7532$1Bug2v
                                              g$t$9872$1Bug2v
                                              '(_ . each-any)))))
                                        g$e$9826$1Bug2v)
                                       (if (g$memv$4955$1Bug2v
                                             g$t$9837$1Bug2v
                                             '(global-macro global-macro!))
                                         (g$chi-body*$7576$1Bug2v
                                           (cons
                                             (g$add-subst$7244$1Bug2v
                                               g$rib$9824$1Bug2v
                                               (g$chi-global-macro$7547$1Bug2v
                                                 g$value$9834$1Bug2v
                                                 g$e$9826$1Bug2v))
                                             (cdr g$e*$9816$1Bug2v))
                                           g$r$9817$1Bug2v
                                           g$mr$9818$1Bug2v
                                           g$lex*$9819$1Bug2v
                                           g$rhs*$9820$1Bug2v
                                           g$mod**$9821$1Bug2v
                                           g$kwd*$9836$1Bug2v
                                           g$exp*$9823$1Bug2v
                                           g$rib$9824$1Bug2v
                                           g$top?$9825$1Bug2v)
                                         (if (g$memv$4955$1Bug2v
                                               g$t$9837$1Bug2v
                                               '(local-macro local-macro!))
                                           (g$chi-body*$7576$1Bug2v
                                             (cons
                                               (g$add-subst$7244$1Bug2v
                                                 g$rib$9824$1Bug2v
                                                 (g$chi-local-macro$7546$1Bug2v
                                                   g$value$9834$1Bug2v
                                                   g$e$9826$1Bug2v))
                                               (cdr g$e*$9816$1Bug2v))
                                             g$r$9817$1Bug2v
                                             g$mr$9818$1Bug2v
                                             g$lex*$9819$1Bug2v
                                             g$rhs*$9820$1Bug2v
                                             g$mod**$9821$1Bug2v
                                             g$kwd*$9836$1Bug2v
                                             g$exp*$9823$1Bug2v
                                             g$rib$9824$1Bug2v
                                             g$top?$9825$1Bug2v)
                                           (if (g$memv$4955$1Bug2v
                                                 g$t$9837$1Bug2v
                                                 '(macro macro!))
                                             (g$chi-body*$7576$1Bug2v
                                               (cons
                                                 (g$add-subst$7244$1Bug2v
                                                   g$rib$9824$1Bug2v
                                                   (g$chi-macro$7545$1Bug2v
                                                     g$value$9834$1Bug2v
                                                     g$e$9826$1Bug2v))
                                                 (cdr g$e*$9816$1Bug2v))
                                               g$r$9817$1Bug2v
                                               g$mr$9818$1Bug2v
                                               g$lex*$9819$1Bug2v
                                               g$rhs*$9820$1Bug2v
                                               g$mod**$9821$1Bug2v
                                               g$kwd*$9836$1Bug2v
                                               g$exp*$9823$1Bug2v
                                               g$rib$9824$1Bug2v
                                               g$top?$9825$1Bug2v)
                                             (if (g$memv$4955$1Bug2v
                                                   g$t$9837$1Bug2v
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$7575$1Bug2v
                                                      g$e$9826$1Bug2v
                                                      g$r$9817$1Bug2v
                                                      g$mr$9818$1Bug2v
                                                      g$lex*$9819$1Bug2v
                                                      g$rhs*$9820$1Bug2v
                                                      g$mod**$9821$1Bug2v
                                                      g$kwd*$9836$1Bug2v)))
                                                 (case-lambda
                                                   ((g$lex*$9883$1Bug2v
                                                      g$rhs*$9884$1Bug2v
                                                      g$m-exp-id*$9885$1Bug2v
                                                      g$m-exp-lab*$9886$1Bug2v
                                                      g$r$9887$1Bug2v
                                                      g$mr$9888$1Bug2v
                                                      g$mod**$9889$1Bug2v
                                                      g$kwd*$9890$1Bug2v)
                                                    ((case-lambda
                                                       ((g$kwd*$9891$1Bug2v
                                                          g$mod**$9892$1Bug2v
                                                          g$mr$9893$1Bug2v
                                                          g$r$9894$1Bug2v
                                                          g$m-exp-lab*$9895$1Bug2v
                                                          g$m-exp-id*$9896$1Bug2v
                                                          g$rhs*$9897$1Bug2v
                                                          g$lex*$9898$1Bug2v)
                                                        (begin
                                                          (vector-for-each
                                                            (case-lambda
                                                              ((g$id$9899$1Bug2v
                                                                 g$lab$9900$1Bug2v)
                                                               (g$extend-rib!$7218$1Bug2v
                                                                 g$rib$9824$1Bug2v
                                                                 g$id$9899$1Bug2v
                                                                 g$lab$9900$1Bug2v)))
                                                            g$m-exp-id*$9896$1Bug2v
                                                            g$m-exp-lab*$9895$1Bug2v)
                                                          (g$chi-body*$7576$1Bug2v
                                                            (cdr g$e*$9816$1Bug2v)
                                                            g$r$9894$1Bug2v
                                                            g$mr$9893$1Bug2v
                                                            g$lex*$9898$1Bug2v
                                                            g$rhs*$9897$1Bug2v
                                                            g$mod**$9892$1Bug2v
                                                            g$kwd*$9891$1Bug2v
                                                            g$exp*$9823$1Bug2v
                                                            g$rib$9824$1Bug2v
                                                            g$top?$9825$1Bug2v))))
                                                     g$kwd*$9890$1Bug2v
                                                     g$mod**$9889$1Bug2v
                                                     g$mr$9888$1Bug2v
                                                     g$r$9887$1Bug2v
                                                     g$m-exp-lab*$9886$1Bug2v
                                                     g$m-exp-id*$9885$1Bug2v
                                                     g$rhs*$9884$1Bug2v
                                                     g$lex*$9883$1Bug2v))))
                                               (if (g$memv$4955$1Bug2v
                                                     g$t$9837$1Bug2v
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$7627$1Bug2v
                                                     (g$stx->datum$7265$1Bug2v
                                                       g$e$9826$1Bug2v))
                                                   (g$chi-body*$7576$1Bug2v
                                                     (cdr g$e*$9816$1Bug2v)
                                                     g$r$9817$1Bug2v
                                                     g$mr$9818$1Bug2v
                                                     g$lex*$9819$1Bug2v
                                                     g$rhs*$9820$1Bug2v
                                                     g$mod**$9821$1Bug2v
                                                     g$kwd*$9836$1Bug2v
                                                     g$exp*$9823$1Bug2v
                                                     g$rib$9824$1Bug2v
                                                     g$top?$9825$1Bug2v))
                                                 (if (g$memv$4955$1Bug2v
                                                       g$t$9837$1Bug2v
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$9901$1Bug2v)
                                                       ((case-lambda
                                                          ((g$ls/false$9902$1Bug2v)
                                                           (if g$ls/false$9902$1Bug2v
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$9903$1Bug2v)
                                                                  (g$chi-body*$7576$1Bug2v
                                                                    (cdr g$e*$9816$1Bug2v)
                                                                    g$r$9817$1Bug2v
                                                                    g$mr$9818$1Bug2v
                                                                    g$lex*$9819$1Bug2v
                                                                    g$rhs*$9820$1Bug2v
                                                                    g$mod**$9821$1Bug2v
                                                                    g$kwd*$9836$1Bug2v
                                                                    (append
                                                                      g$exp-decl*$9903$1Bug2v
                                                                      g$exp*$9823$1Bug2v)
                                                                    g$rib$9824$1Bug2v
                                                                    g$top?$9825$1Bug2v)))
                                                               g$ls/false$9902$1Bug2v)
                                                             (g$syntax-violation$7643$1Bug2v
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$9901$1Bug2v))))
                                                        (g$syntax-dispatch$7532$1Bug2v
                                                          g$t$9901$1Bug2v
                                                          '(_ . each-any)))))
                                                    g$e$9826$1Bug2v)
                                                   (if (g$memv$4955$1Bug2v
                                                         g$t$9837$1Bug2v
                                                         '(import))
                                                     (begin
                                                       ((case-lambda
                                                          (()
                                                           (letrec* ((g$module-import?$9904$1Bug2v
                                                                       (case-lambda
                                                                         ((g$e$9946$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$9947$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9948$1Bug2v)
                                                                                  (if (if g$ls/false$9948$1Bug2v
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$9949$1Bug2v)
                                                                                               (g$id?$7254$1Bug2v
                                                                                                 g$id$9949$1Bug2v)))
                                                                                            g$ls/false$9948$1Bug2v))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$9950$1Bug2v)
                                                                                         '#t))
                                                                                      g$ls/false$9948$1Bug2v)
                                                                                    ((case-lambda
                                                                                       ((g$t$9951$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9952$1Bug2v)
                                                                                            (if g$ls/false$9952$1Bug2v
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$imp*$9953$1Bug2v)
                                                                                                   '#f))
                                                                                                g$ls/false$9952$1Bug2v)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9954$1Bug2v)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9955$1Bug2v)
                                                                                                      (if g$ls/false$9955$1Bug2v
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$syntax-violation$7643$1Bug2v
                                                                                                               '#f
                                                                                                               '"malformed import form"
                                                                                                               g$e$9946$1Bug2v)))
                                                                                                          g$ls/false$9955$1Bug2v)
                                                                                                        (g$syntax-violation$7643$1Bug2v
                                                                                                          '#f
                                                                                                          '"invalid syntax"
                                                                                                          g$t$9954$1Bug2v))))
                                                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                                                     g$t$9954$1Bug2v
                                                                                                     '_))))
                                                                                               g$t$9951$1Bug2v))))
                                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                                           g$t$9951$1Bug2v
                                                                                           '(_ .
                                                                                               each-any)))))
                                                                                     g$t$9947$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$9947$1Bug2v
                                                                                 '(_ any)))))
                                                                           g$e$9946$1Bug2v))))
                                                                     (g$module-import$9905$1Bug2v
                                                                       (case-lambda
                                                                         ((g$e$9929$1Bug2v
                                                                            g$r$9930$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$9931$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9932$1Bug2v)
                                                                                  (if (if g$ls/false$9932$1Bug2v
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$id$9933$1Bug2v)
                                                                                               (g$id?$7254$1Bug2v
                                                                                                 g$id$9933$1Bug2v)))
                                                                                            g$ls/false$9932$1Bug2v))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$id$9934$1Bug2v)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$syntax-type$7274$1Bug2v
                                                                                                g$id$9934$1Bug2v
                                                                                                g$r$9930$1Bug2v)))
                                                                                           (case-lambda
                                                                                             ((g$type$9938$1Bug2v
                                                                                                g$value$9939$1Bug2v
                                                                                                g$kwd$9940$1Bug2v)
                                                                                              ((case-lambda
                                                                                                 ((g$kwd$9941$1Bug2v
                                                                                                    g$value$9942$1Bug2v
                                                                                                    g$type$9943$1Bug2v)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9944$1Bug2v)
                                                                                                      (if (g$memv$4955$1Bug2v
                                                                                                            g$t$9944$1Bug2v
                                                                                                            '($module))
                                                                                                        ((case-lambda
                                                                                                           ((g$iface$9945$1Bug2v)
                                                                                                            (values
                                                                                                              (g$module-interface-exp-id*$7574$1Bug2v
                                                                                                                g$iface$9945$1Bug2v
                                                                                                                g$id$9934$1Bug2v)
                                                                                                              (g$module-interface-exp-lab-vec$7570$1Bug2v
                                                                                                                g$iface$9945$1Bug2v))))
                                                                                                         g$value$9942$1Bug2v)
                                                                                                        (g$syntax-violation$7643$1Bug2v
                                                                                                          '#f
                                                                                                          '"invalid import"
                                                                                                          g$e$9929$1Bug2v))))
                                                                                                   g$type$9943$1Bug2v)))
                                                                                               g$kwd$9940$1Bug2v
                                                                                               g$value$9939$1Bug2v
                                                                                               g$type$9938$1Bug2v))))))
                                                                                      g$ls/false$9932$1Bug2v)
                                                                                    (g$syntax-violation$7643$1Bug2v
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9931$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$9931$1Bug2v
                                                                                 '(_ any)))))
                                                                           g$e$9929$1Bug2v))))
                                                                     (g$library-import$9906$1Bug2v
                                                                       (case-lambda
                                                                         ((g$e$9915$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$t$9916$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9917$1Bug2v)
                                                                                  (if g$ls/false$9917$1Bug2v
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ctxt$9918$1Bug2v
                                                                                           g$imp*$9919$1Bug2v)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$parse-import-spec*$7581$1Bug2v
                                                                                                (g$syntax->datum$7646$1Bug2v
                                                                                                  g$imp*$9919$1Bug2v))))
                                                                                           (case-lambda
                                                                                             ((g$subst-names$9922$1Bug2v
                                                                                                g$subst-labels$9923$1Bug2v)
                                                                                              ((case-lambda
                                                                                                 ((g$subst-labels$9924$1Bug2v
                                                                                                    g$subst-names$9925$1Bug2v)
                                                                                                  (values
                                                                                                    (vector-map
                                                                                                      (case-lambda
                                                                                                        ((g$name$9926$1Bug2v)
                                                                                                         (g$datum->stx$7237$1Bug2v
                                                                                                           g$ctxt$9918$1Bug2v
                                                                                                           g$name$9926$1Bug2v)))
                                                                                                      g$subst-names$9925$1Bug2v)
                                                                                                    g$subst-labels$9924$1Bug2v)))
                                                                                               g$subst-labels$9923$1Bug2v
                                                                                               g$subst-names$9922$1Bug2v))))))
                                                                                      g$ls/false$9917$1Bug2v)
                                                                                    ((case-lambda
                                                                                       ((g$t$9927$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9928$1Bug2v)
                                                                                            (if g$ls/false$9928$1Bug2v
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$syntax-violation$7643$1Bug2v
                                                                                                     '#f
                                                                                                     '"invalid import form"
                                                                                                     g$e$9915$1Bug2v)))
                                                                                                g$ls/false$9928$1Bug2v)
                                                                                              (g$syntax-violation$7643$1Bug2v
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9927$1Bug2v))))
                                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                                           g$t$9927$1Bug2v
                                                                                           '_))))
                                                                                     g$t$9916$1Bug2v))))
                                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                                 g$t$9916$1Bug2v
                                                                                 '(any .
                                                                                       each-any)))))
                                                                           g$e$9915$1Bug2v)))))
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$9904$1Bug2v
                                                                        g$e$9826$1Bug2v)
                                                                    (g$module-import$9905$1Bug2v
                                                                      g$e$9826$1Bug2v
                                                                      g$r$9817$1Bug2v)
                                                                    (g$library-import$9906$1Bug2v
                                                                      g$e$9826$1Bug2v))))
                                                               (case-lambda
                                                                 ((g$id*$9909$1Bug2v
                                                                    g$lab*$9910$1Bug2v)
                                                                  ((case-lambda
                                                                     ((g$lab*$9911$1Bug2v
                                                                        g$id*$9912$1Bug2v)
                                                                      (vector-for-each
                                                                        (case-lambda
                                                                          ((g$id$9913$1Bug2v
                                                                             g$lab$9914$1Bug2v)
                                                                           (g$extend-rib!$7218$1Bug2v
                                                                             g$rib$9824$1Bug2v
                                                                             g$id$9913$1Bug2v
                                                                             g$lab$9914$1Bug2v)))
                                                                        g$id*$9912$1Bug2v
                                                                        g$lab*$9911$1Bug2v)))
                                                                   g$lab*$9910$1Bug2v
                                                                   g$id*$9909$1Bug2v))))))))
                                                       (g$chi-body*$7576$1Bug2v
                                                         (cdr g$e*$9816$1Bug2v)
                                                         g$r$9817$1Bug2v
                                                         g$mr$9818$1Bug2v
                                                         g$lex*$9819$1Bug2v
                                                         g$rhs*$9820$1Bug2v
                                                         g$mod**$9821$1Bug2v
                                                         g$kwd*$9836$1Bug2v
                                                         g$exp*$9823$1Bug2v
                                                         g$rib$9824$1Bug2v
                                                         g$top?$9825$1Bug2v))
                                                     (if g$top?$9825$1Bug2v
                                                       (g$chi-body*$7576$1Bug2v
                                                         (cdr g$e*$9816$1Bug2v)
                                                         g$r$9817$1Bug2v
                                                         g$mr$9818$1Bug2v
                                                         (cons
                                                           (g$gen-lexical$7198$1Bug2v
                                                             'dummy)
                                                           g$lex*$9819$1Bug2v)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$9826$1Bug2v)
                                                           g$rhs*$9820$1Bug2v)
                                                         g$mod**$9821$1Bug2v
                                                         g$kwd*$9836$1Bug2v
                                                         g$exp*$9823$1Bug2v
                                                         g$rib$9824$1Bug2v
                                                         g$top?$9825$1Bug2v)
                                                       (values
                                                         g$e*$9816$1Bug2v
                                                         g$r$9817$1Bug2v
                                                         g$mr$9818$1Bug2v
                                                         g$lex*$9819$1Bug2v
                                                         g$rhs*$9820$1Bug2v
                                                         g$mod**$9821$1Bug2v
                                                         g$kwd*$9836$1Bug2v
                                                         g$exp*$9823$1Bug2v)))))))))))))))
                            g$type$9835$1Bug2v)))
                        (if (g$id?$7254$1Bug2v g$kwd$9833$1Bug2v)
                          (cons g$kwd$9833$1Bug2v g$kwd*$9822$1Bug2v)
                          g$kwd*$9822$1Bug2v))))
                    g$kwd$9832$1Bug2v
                    g$value$9831$1Bug2v
                    g$type$9830$1Bug2v))))))
           (car g$e*$9816$1Bug2v))))))
   (g$expand-transformer$7577$1Bug2v
     g$expand-transformer$11037$1Bug2v
     (case-lambda
       ((g$expr$9956$1Bug2v g$r$9957$1Bug2v)
        ((case-lambda
           ((g$rtc$9958$1Bug2v)
            ((case-lambda
               ((g$expanded-rhs$9959$1Bug2v)
                (begin
                  (for-each
                    ((case-lambda
                       ((g$mark-visit$9960$1Bug2v)
                        (case-lambda
                          ((g$x$9961$1Bug2v)
                           (begin
                             (g$invoke-library$7069$1Bug2v g$x$9961$1Bug2v)
                             (g$mark-visit$9960$1Bug2v g$x$9961$1Bug2v))))))
                     (g$vis-collector$7585$1Bug2v))
                    (g$rtc$9958$1Bug2v))
                  g$expanded-rhs$9959$1Bug2v)))
             ((case-lambda
                ((g$inv-collector$9966$1Bug2v
                   g$vis-collector$9967$1Bug2v
                   g$inv-collector$9968$1Bug2v
                   g$vis-collector$9969$1Bug2v)
                 ((case-lambda
                    ((g$swap$9970$1Bug2v)
                     (dynamic-wind
                       g$swap$9970$1Bug2v
                       (case-lambda
                         (()
                          (g$chi-expr$7550$1Bug2v
                            g$expr$9956$1Bug2v
                            g$r$9957$1Bug2v
                            g$r$9957$1Bug2v)))
                       g$swap$9970$1Bug2v)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$9971$1Bug2v)
                           (begin
                             (g$inv-collector$9966$1Bug2v
                               g$inv-collector$9968$1Bug2v)
                             (set! g$inv-collector$9968$1Bug2v
                               g$t$9971$1Bug2v))))
                        (g$inv-collector$9966$1Bug2v))
                       ((case-lambda
                          ((g$t$9972$1Bug2v)
                           (begin
                             (g$vis-collector$9967$1Bug2v
                               g$vis-collector$9969$1Bug2v)
                             (set! g$vis-collector$9969$1Bug2v
                               g$t$9972$1Bug2v))))
                        (g$vis-collector$9967$1Bug2v))))))))
              g$inv-collector$7584$1Bug2v
              g$vis-collector$7585$1Bug2v
              g$rtc$9958$1Bug2v
              (case-lambda ((g$x$9973$1Bug2v) (values)))))))
         (g$make-collector$7583$1Bug2v)))))
   (g$parse-exports$7578$1Bug2v
     g$parse-exports$11038$1Bug2v
     (case-lambda
       ((g$exp*$9974$1Bug2v)
        ((letrec ((g$f$9975$1Bug2v
                    (case-lambda
                      ((g$exp*$9976$1Bug2v
                         g$int*$9977$1Bug2v
                         g$ext*$9978$1Bug2v)
                       (if (null? g$exp*$9976$1Bug2v)
                         (begin
                           (if (not (g$valid-bound-ids?$7259$1Bug2v
                                      g$ext*$9978$1Bug2v))
                             (g$syntax-violation$7643$1Bug2v
                               'export
                               '"invalid exports"
                               (g$find-dups$7560$1Bug2v g$ext*$9978$1Bug2v))
                             (void))
                           (values
                             (map g$syntax->datum$7646$1Bug2v
                                  g$ext*$9978$1Bug2v)
                             g$int*$9977$1Bug2v))
                         ((case-lambda
                            ((g$t$9979$1Bug2v)
                             ((case-lambda
                                ((g$ls/false$9980$1Bug2v)
                                 (if g$ls/false$9980$1Bug2v
                                   (apply
                                     (case-lambda
                                       ((g$rename$9981$1Bug2v
                                          g$i*$9982$1Bug2v
                                          g$e*$9983$1Bug2v)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$7646$1Bug2v
                                                              g$rename$9981$1Bug2v)
                                                            'rename)
                                                     (if (g$for-all$4960$1Bug2v
                                                           g$id?$7254$1Bug2v
                                                           g$i*$9982$1Bug2v)
                                                       (begin
                                                         '#f
                                                         (g$for-all$4960$1Bug2v
                                                           g$id?$7254$1Bug2v
                                                           g$e*$9983$1Bug2v))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$7643$1Bug2v
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$9976$1Bug2v))
                                            (void))
                                          (g$f$9975$1Bug2v
                                            (cdr g$exp*$9976$1Bug2v)
                                            (append
                                              g$i*$9982$1Bug2v
                                              g$int*$9977$1Bug2v)
                                            (append
                                              g$e*$9983$1Bug2v
                                              g$ext*$9978$1Bug2v)))))
                                     g$ls/false$9980$1Bug2v)
                                   ((case-lambda
                                      ((g$t$9984$1Bug2v)
                                       ((case-lambda
                                          ((g$ls/false$9985$1Bug2v)
                                           (if g$ls/false$9985$1Bug2v
                                             (apply
                                               (case-lambda
                                                 ((g$ie$9986$1Bug2v)
                                                  (begin
                                                    (if (not (g$id?$7254$1Bug2v
                                                               g$ie$9986$1Bug2v))
                                                      (g$syntax-violation$7643$1Bug2v
                                                        'export
                                                        '"invalid export"
                                                        g$ie$9986$1Bug2v)
                                                      (void))
                                                    (g$f$9975$1Bug2v
                                                      (cdr g$exp*$9976$1Bug2v)
                                                      (cons
                                                        g$ie$9986$1Bug2v
                                                        g$int*$9977$1Bug2v)
                                                      (cons
                                                        g$ie$9986$1Bug2v
                                                        g$ext*$9978$1Bug2v)))))
                                               g$ls/false$9985$1Bug2v)
                                             (g$syntax-violation$7643$1Bug2v
                                               '#f
                                               '"invalid syntax"
                                               g$t$9984$1Bug2v))))
                                        (g$syntax-dispatch$7532$1Bug2v
                                          g$t$9984$1Bug2v
                                          'any))))
                                    g$t$9979$1Bug2v))))
                              (g$syntax-dispatch$7532$1Bug2v
                                g$t$9979$1Bug2v
                                '(any . #(each (any any)))))))
                          (car g$exp*$9976$1Bug2v)))))))
           g$f$9975$1Bug2v)
         g$exp*$9974$1Bug2v
         '()
         '()))))
   (g$parse-library-name$7579$1Bug2v
     g$parse-library-name$11039$1Bug2v
     (case-lambda
       ((g$spec$9987$1Bug2v)
        (letrec* ((g$parse$9988$1Bug2v
                    (case-lambda
                      ((g$x$9995$1Bug2v)
                       ((case-lambda
                          ((g$t$9996$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$9997$1Bug2v)
                               (if (if g$ls/false$9997$1Bug2v
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$9998$1Bug2v)
                                            (g$for-all$4960$1Bug2v
                                              (case-lambda
                                                ((g$x$9999$1Bug2v)
                                                 ((case-lambda
                                                    ((g$x$10000$1Bug2v)
                                                     (if (integer?
                                                           g$x$10000$1Bug2v)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10000$1Bug2v))
                                                       '#f)))
                                                  (g$syntax->datum$7646$1Bug2v
                                                    g$x$9999$1Bug2v))))
                                              g$v*$9998$1Bug2v)))
                                         g$ls/false$9997$1Bug2v))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10001$1Bug2v)
                                      (values
                                        '()
                                        (map g$syntax->datum$7646$1Bug2v
                                             g$v*$10001$1Bug2v))))
                                   g$ls/false$9997$1Bug2v)
                                 ((case-lambda
                                    ((g$t$10002$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$10003$1Bug2v)
                                         (if (if g$ls/false$10003$1Bug2v
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10004$1Bug2v
                                                        g$rest$10005$1Bug2v)
                                                      (symbol?
                                                        (g$syntax->datum$7646$1Bug2v
                                                          g$x$10004$1Bug2v))))
                                                   g$ls/false$10003$1Bug2v))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10006$1Bug2v
                                                  g$rest$10007$1Bug2v)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$9988$1Bug2v
                                                       g$rest$10007$1Bug2v)))
                                                  (case-lambda
                                                    ((g$x*$10010$1Bug2v
                                                       g$v*$10011$1Bug2v)
                                                     ((case-lambda
                                                        ((g$v*$10012$1Bug2v
                                                           g$x*$10013$1Bug2v)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$7646$1Bug2v
                                                               g$x$10006$1Bug2v)
                                                             g$x*$10013$1Bug2v)
                                                           g$v*$10012$1Bug2v)))
                                                      g$v*$10011$1Bug2v
                                                      g$x*$10010$1Bug2v))))))
                                             g$ls/false$10003$1Bug2v)
                                           ((case-lambda
                                              ((g$t$10014$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$10015$1Bug2v)
                                                   (if g$ls/false$10015$1Bug2v
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10015$1Bug2v)
                                                     ((case-lambda
                                                        ((g$t$10016$1Bug2v)
                                                         ((case-lambda
                                                            ((g$ls/false$10017$1Bug2v)
                                                             (if g$ls/false$10017$1Bug2v
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$7643$1Bug2v
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$9987$1Bug2v)))
                                                                 g$ls/false$10017$1Bug2v)
                                                               (g$syntax-violation$7643$1Bug2v
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10016$1Bug2v))))
                                                          (g$syntax-dispatch$7532$1Bug2v
                                                            g$t$10016$1Bug2v
                                                            '_))))
                                                      g$t$10014$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$10014$1Bug2v
                                                  '()))))
                                            g$t$10002$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$10002$1Bug2v
                                        '(any . any)))))
                                  g$t$9996$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$9996$1Bug2v
                              '(each-any)))))
                        g$x$9995$1Bug2v)))))
          (call-with-values
            (case-lambda (() (g$parse$9988$1Bug2v g$spec$9987$1Bug2v)))
            (case-lambda
              ((g$name*$9991$1Bug2v g$ver*$9992$1Bug2v)
               ((case-lambda
                  ((g$ver*$9993$1Bug2v g$name*$9994$1Bug2v)
                   (begin
                     (if (null? g$name*$9994$1Bug2v)
                       (g$syntax-violation$7643$1Bug2v
                         '#f
                         '"empty library name"
                         g$spec$9987$1Bug2v)
                       (void))
                     (values g$name*$9994$1Bug2v g$ver*$9993$1Bug2v))))
                g$ver*$9992$1Bug2v
                g$name*$9991$1Bug2v))))))))
   (g$parse-library$7580$1Bug2v
     g$parse-library$11040$1Bug2v
     (case-lambda
       ((g$e$10018$1Bug2v)
        ((case-lambda
           ((g$t$10019$1Bug2v)
            ((case-lambda
               ((g$ls/false$10020$1Bug2v)
                (if (if g$ls/false$10020$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10021$1Bug2v
                               g$name*$10022$1Bug2v
                               g$export$10023$1Bug2v
                               g$exp*$10024$1Bug2v
                               g$import$10025$1Bug2v
                               g$imp*$10026$1Bug2v
                               g$b*$10027$1Bug2v)
                             (if (eq? (g$syntax->datum$7646$1Bug2v
                                        g$export$10023$1Bug2v)
                                      'export)
                               (if (eq? (g$syntax->datum$7646$1Bug2v
                                          g$import$10025$1Bug2v)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$7646$1Bug2v
                                          g$library$10021$1Bug2v)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10020$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10028$1Bug2v
                         g$name*$10029$1Bug2v
                         g$export$10030$1Bug2v
                         g$exp*$10031$1Bug2v
                         g$import$10032$1Bug2v
                         g$imp*$10033$1Bug2v
                         g$b*$10034$1Bug2v)
                       (values
                         g$name*$10029$1Bug2v
                         g$exp*$10031$1Bug2v
                         g$imp*$10033$1Bug2v
                         g$b*$10034$1Bug2v)))
                    g$ls/false$10020$1Bug2v)
                  ((case-lambda
                     ((g$t$10035$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$10036$1Bug2v)
                          (if g$ls/false$10036$1Bug2v
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$7643$1Bug2v
                                   '#f
                                   '"malformed library"
                                   g$e$10018$1Bug2v)))
                              g$ls/false$10036$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$10035$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v g$t$10035$1Bug2v '_))))
                   g$t$10019$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$10019$1Bug2v
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10018$1Bug2v))))
   (g$parse-import-spec*$7581$1Bug2v
     g$parse-import-spec*$11041$1Bug2v
     (case-lambda
       ((g$imp*$10037$1Bug2v)
        (letrec* ((g$idsyn?$10038$1Bug2v
                    (case-lambda
                      ((g$x$10298$1Bug2v)
                       (symbol?
                         (g$syntax->datum$7646$1Bug2v g$x$10298$1Bug2v)))))
                  (g$dup-error$10039$1Bug2v
                    (case-lambda
                      ((g$name$10297$1Bug2v)
                       (g$syntax-violation$7643$1Bug2v
                         'import
                         '"two imports with different bindings"
                         g$name$10297$1Bug2v))))
                  (g$merge-substs$10040$1Bug2v
                    (case-lambda
                      ((g$s$10288$1Bug2v g$subst$10289$1Bug2v)
                       (letrec* ((g$insert-to-subst$10290$1Bug2v
                                   (case-lambda
                                     ((g$a$10291$1Bug2v g$subst$10292$1Bug2v)
                                      ((case-lambda
                                         ((g$name$10293$1Bug2v
                                            g$label$10294$1Bug2v)
                                          ((case-lambda
                                             ((g$t$10295$1Bug2v)
                                              (if g$t$10295$1Bug2v
                                                ((case-lambda
                                                   ((g$x$10296$1Bug2v)
                                                    (if (eq? (cdr g$x$10296$1Bug2v)
                                                             g$label$10294$1Bug2v)
                                                      g$subst$10292$1Bug2v
                                                      (g$dup-error$10039$1Bug2v
                                                        g$name$10293$1Bug2v))))
                                                 g$t$10295$1Bug2v)
                                                (cons
                                                  g$a$10291$1Bug2v
                                                  g$subst$10292$1Bug2v))))
                                           (g$assq$4950$1Bug2v
                                             g$name$10293$1Bug2v
                                             g$subst$10292$1Bug2v))))
                                       (car g$a$10291$1Bug2v)
                                       (cdr g$a$10291$1Bug2v))))))
                         (if (null? g$s$10288$1Bug2v)
                           g$subst$10289$1Bug2v
                           (g$insert-to-subst$10290$1Bug2v
                             (car g$s$10288$1Bug2v)
                             (g$merge-substs$10040$1Bug2v
                               (cdr g$s$10288$1Bug2v)
                               g$subst$10289$1Bug2v)))))))
                  (g$exclude*$10041$1Bug2v
                    (case-lambda
                      ((g$sym*$10264$1Bug2v g$subst$10265$1Bug2v)
                       (letrec* ((g$exclude$10266$1Bug2v
                                   (case-lambda
                                     ((g$sym$10279$1Bug2v g$subst$10280$1Bug2v)
                                      (if (null? g$subst$10280$1Bug2v)
                                        (g$syntax-violation$7643$1Bug2v
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$10279$1Bug2v)
                                        (if (eq? g$sym$10279$1Bug2v
                                                 (g$caar$5123$1Bug2v
                                                   g$subst$10280$1Bug2v))
                                          (values
                                            (g$cdar$5125$1Bug2v
                                              g$subst$10280$1Bug2v)
                                            (cdr g$subst$10280$1Bug2v))
                                          ((case-lambda
                                             ((g$a$10281$1Bug2v)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$10266$1Bug2v
                                                     g$sym$10279$1Bug2v
                                                     (cdr g$subst$10280$1Bug2v))))
                                                (case-lambda
                                                  ((g$old$10284$1Bug2v
                                                     g$subst$10285$1Bug2v)
                                                   ((case-lambda
                                                      ((g$subst$10286$1Bug2v
                                                         g$old$10287$1Bug2v)
                                                       (values
                                                         g$old$10287$1Bug2v
                                                         (cons
                                                           g$a$10281$1Bug2v
                                                           g$subst$10286$1Bug2v))))
                                                    g$subst$10285$1Bug2v
                                                    g$old$10284$1Bug2v))))))
                                           (car g$subst$10280$1Bug2v))))))))
                         (if (null? g$sym*$10264$1Bug2v)
                           (values '() g$subst$10265$1Bug2v)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$10266$1Bug2v
                                  (car g$sym*$10264$1Bug2v)
                                  g$subst$10265$1Bug2v)))
                             (case-lambda
                               ((g$old$10269$1Bug2v g$subst$10270$1Bug2v)
                                ((case-lambda
                                   ((g$subst$10271$1Bug2v g$old$10272$1Bug2v)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10041$1Bug2v
                                           (cdr g$sym*$10264$1Bug2v)
                                           g$subst$10271$1Bug2v)))
                                      (case-lambda
                                        ((g$old*$10275$1Bug2v
                                           g$subst$10276$1Bug2v)
                                         ((case-lambda
                                            ((g$subst$10277$1Bug2v
                                               g$old*$10278$1Bug2v)
                                             (values
                                               (cons
                                                 g$old$10272$1Bug2v
                                                 g$old*$10278$1Bug2v)
                                               g$subst$10277$1Bug2v)))
                                          g$subst$10276$1Bug2v
                                          g$old*$10275$1Bug2v))))))
                                 g$subst$10270$1Bug2v
                                 g$old$10269$1Bug2v)))))))))
                  (g$find*$10042$1Bug2v
                    (case-lambda
                      ((g$sym*$10260$1Bug2v g$subst$10261$1Bug2v)
                       (map (case-lambda
                              ((g$x$10262$1Bug2v)
                               ((case-lambda
                                  ((g$t$10263$1Bug2v)
                                   (if g$t$10263$1Bug2v
                                     (cdr g$t$10263$1Bug2v)
                                     (g$syntax-violation$7643$1Bug2v
                                       'import
                                       '"cannot find identifier"
                                       g$x$10262$1Bug2v))))
                                (g$assq$4950$1Bug2v
                                  g$x$10262$1Bug2v
                                  g$subst$10261$1Bug2v))))
                            g$sym*$10260$1Bug2v))))
                  (g$rem*$10043$1Bug2v
                    (case-lambda
                      ((g$sym*$10256$1Bug2v g$subst$10257$1Bug2v)
                       ((letrec ((g$f$10258$1Bug2v
                                   (case-lambda
                                     ((g$subst$10259$1Bug2v)
                                      (if (null? g$subst$10259$1Bug2v)
                                        '()
                                        (if (g$memq$4954$1Bug2v
                                              (g$caar$5123$1Bug2v
                                                g$subst$10259$1Bug2v)
                                              g$sym*$10256$1Bug2v)
                                          (g$f$10258$1Bug2v
                                            (cdr g$subst$10259$1Bug2v))
                                          (cons
                                            (car g$subst$10259$1Bug2v)
                                            (g$f$10258$1Bug2v
                                              (cdr g$subst$10259$1Bug2v)))))))))
                          g$f$10258$1Bug2v)
                        g$subst$10257$1Bug2v))))
                  (g$remove-dups$10044$1Bug2v
                    (case-lambda
                      ((g$ls$10255$1Bug2v)
                       (if (null? g$ls$10255$1Bug2v)
                         '()
                         (if (g$memq$4954$1Bug2v
                               (car g$ls$10255$1Bug2v)
                               (cdr g$ls$10255$1Bug2v))
                           (g$remove-dups$10044$1Bug2v (cdr g$ls$10255$1Bug2v))
                           (cons
                             (car g$ls$10255$1Bug2v)
                             (g$remove-dups$10044$1Bug2v
                               (cdr g$ls$10255$1Bug2v))))))))
                  (g$parse-library-name$10045$1Bug2v
                    (case-lambda
                      ((g$spec$10139$1Bug2v)
                       (letrec* ((g$subversion?$10140$1Bug2v
                                   (case-lambda
                                     ((g$x$10253$1Bug2v)
                                      ((case-lambda
                                         ((g$x$10254$1Bug2v)
                                          (if (integer? g$x$10254$1Bug2v)
                                            (if (exact? g$x$10254$1Bug2v)
                                              (begin
                                                '#f
                                                (>= g$x$10254$1Bug2v '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$7646$1Bug2v
                                         g$x$10253$1Bug2v)))))
                                 (g$subversion-pred$10141$1Bug2v
                                   (case-lambda
                                     ((g$x*$10205$1Bug2v)
                                      ((case-lambda
                                         ((g$t$10206$1Bug2v)
                                          ((case-lambda
                                             ((g$ls/false$10207$1Bug2v)
                                              (if (if g$ls/false$10207$1Bug2v
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$10208$1Bug2v)
                                                           (g$subversion?$10140$1Bug2v
                                                             g$n$10208$1Bug2v)))
                                                        g$ls/false$10207$1Bug2v))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$10209$1Bug2v)
                                                     (case-lambda
                                                       ((g$x$10210$1Bug2v)
                                                        (= g$x$10210$1Bug2v
                                                           (g$syntax->datum$7646$1Bug2v
                                                             g$n$10209$1Bug2v))))))
                                                  g$ls/false$10207$1Bug2v)
                                                ((case-lambda
                                                   ((g$t$10211$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$10212$1Bug2v)
                                                        (if (if g$ls/false$10212$1Bug2v
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$10213$1Bug2v
                                                                       g$sub*$10214$1Bug2v)
                                                                     (eq? (g$syntax->datum$7646$1Bug2v
                                                                            g$p?$10213$1Bug2v)
                                                                          'and)))
                                                                  g$ls/false$10212$1Bug2v))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$10215$1Bug2v
                                                                 g$sub*$10216$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$p*$10217$1Bug2v)
                                                                   (case-lambda
                                                                     ((g$x$10218$1Bug2v)
                                                                      (g$for-all$4960$1Bug2v
                                                                        (case-lambda
                                                                          ((g$p$10219$1Bug2v)
                                                                           (g$p$10219$1Bug2v
                                                                             g$x$10218$1Bug2v)))
                                                                        g$p*$10217$1Bug2v)))))
                                                                (map g$subversion-pred$10141$1Bug2v
                                                                     g$sub*$10216$1Bug2v))))
                                                            g$ls/false$10212$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$10220$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$10221$1Bug2v)
                                                                  (if (if g$ls/false$10221$1Bug2v
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$10222$1Bug2v
                                                                                 g$sub*$10223$1Bug2v)
                                                                               (eq? (g$syntax->datum$7646$1Bug2v
                                                                                      g$p?$10222$1Bug2v)
                                                                                    'or)))
                                                                            g$ls/false$10221$1Bug2v))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$10224$1Bug2v
                                                                           g$sub*$10225$1Bug2v)
                                                                         ((case-lambda
                                                                            ((g$p*$10226$1Bug2v)
                                                                             (case-lambda
                                                                               ((g$x$10227$1Bug2v)
                                                                                (g$exists$4961$1Bug2v
                                                                                  (case-lambda
                                                                                    ((g$p$10228$1Bug2v)
                                                                                     (g$p$10228$1Bug2v
                                                                                       g$x$10227$1Bug2v)))
                                                                                  g$p*$10226$1Bug2v)))))
                                                                          (map g$subversion-pred$10141$1Bug2v
                                                                               g$sub*$10225$1Bug2v))))
                                                                      g$ls/false$10221$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$t$10229$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10230$1Bug2v)
                                                                            (if (if g$ls/false$10230$1Bug2v
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$10231$1Bug2v
                                                                                           g$sub$10232$1Bug2v)
                                                                                         (eq? (g$syntax->datum$7646$1Bug2v
                                                                                                g$p?$10231$1Bug2v)
                                                                                              'not)))
                                                                                      g$ls/false$10230$1Bug2v))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$10233$1Bug2v
                                                                                     g$sub$10234$1Bug2v)
                                                                                   ((case-lambda
                                                                                      ((g$p$10235$1Bug2v)
                                                                                       (case-lambda
                                                                                         ((g$x$10236$1Bug2v)
                                                                                          (not (g$p$10235$1Bug2v
                                                                                                 g$x$10236$1Bug2v))))))
                                                                                    (g$subversion-pred$10141$1Bug2v
                                                                                      g$sub$10234$1Bug2v))))
                                                                                g$ls/false$10230$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$t$10237$1Bug2v)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10238$1Bug2v)
                                                                                      (if (if g$ls/false$10238$1Bug2v
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$10239$1Bug2v
                                                                                                     g$n$10240$1Bug2v)
                                                                                                   (if (eq? (g$syntax->datum$7646$1Bug2v
                                                                                                              g$p?$10239$1Bug2v)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$10140$1Bug2v
                                                                                                         g$n$10240$1Bug2v))
                                                                                                     '#f)))
                                                                                                g$ls/false$10238$1Bug2v))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$10241$1Bug2v
                                                                                               g$n$10242$1Bug2v)
                                                                                             (case-lambda
                                                                                               ((g$x$10243$1Bug2v)
                                                                                                (<= g$x$10243$1Bug2v
                                                                                                    (g$syntax->datum$7646$1Bug2v
                                                                                                      g$n$10242$1Bug2v))))))
                                                                                          g$ls/false$10238$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$t$10244$1Bug2v)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10245$1Bug2v)
                                                                                                (if (if g$ls/false$10245$1Bug2v
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$10246$1Bug2v
                                                                                                               g$n$10247$1Bug2v)
                                                                                                             (if (eq? (g$syntax->datum$7646$1Bug2v
                                                                                                                        g$p?$10246$1Bug2v)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$10140$1Bug2v
                                                                                                                   g$n$10247$1Bug2v))
                                                                                                               '#f)))
                                                                                                          g$ls/false$10245$1Bug2v))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$10248$1Bug2v
                                                                                                         g$n$10249$1Bug2v)
                                                                                                       (case-lambda
                                                                                                         ((g$x$10250$1Bug2v)
                                                                                                          (>= g$x$10250$1Bug2v
                                                                                                              (g$syntax->datum$7646$1Bug2v
                                                                                                                g$n$10249$1Bug2v))))))
                                                                                                    g$ls/false$10245$1Bug2v)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$10251$1Bug2v)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$10252$1Bug2v)
                                                                                                          (if g$ls/false$10252$1Bug2v
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$7643$1Bug2v
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$10139$1Bug2v
                                                                                                                   g$x*$10205$1Bug2v)))
                                                                                                              g$ls/false$10252$1Bug2v)
                                                                                                            (g$syntax-violation$7643$1Bug2v
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$10251$1Bug2v))))
                                                                                                       (g$syntax-dispatch$7532$1Bug2v
                                                                                                         g$t$10251$1Bug2v
                                                                                                         '_))))
                                                                                                   g$t$10244$1Bug2v))))
                                                                                             (g$syntax-dispatch$7532$1Bug2v
                                                                                               g$t$10244$1Bug2v
                                                                                               '(any any)))))
                                                                                         g$t$10237$1Bug2v))))
                                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                                     g$t$10237$1Bug2v
                                                                                     '(any any)))))
                                                                               g$t$10229$1Bug2v))))
                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                           g$t$10229$1Bug2v
                                                                           '(any any)))))
                                                                     g$t$10220$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$10220$1Bug2v
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10211$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$10211$1Bug2v
                                                       '(any . each-any)))))
                                                 g$t$10206$1Bug2v))))
                                           (g$syntax-dispatch$7532$1Bug2v
                                             g$t$10206$1Bug2v
                                             'any))))
                                       g$x*$10205$1Bug2v))))
                                 (g$version-pred$10142$1Bug2v
                                   (case-lambda
                                     ((g$x*$10165$1Bug2v)
                                      ((case-lambda
                                         ((g$t$10166$1Bug2v)
                                          ((case-lambda
                                             ((g$ls/false$10167$1Bug2v)
                                              (if g$ls/false$10167$1Bug2v
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$10168$1Bug2v)
                                                        '#t))))
                                                  g$ls/false$10167$1Bug2v)
                                                ((case-lambda
                                                   ((g$t$10169$1Bug2v)
                                                    ((case-lambda
                                                       ((g$ls/false$10170$1Bug2v)
                                                        (if (if g$ls/false$10170$1Bug2v
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$10171$1Bug2v
                                                                       g$ver*$10172$1Bug2v)
                                                                     (eq? (g$syntax->datum$7646$1Bug2v
                                                                            g$c$10171$1Bug2v)
                                                                          'and)))
                                                                  g$ls/false$10170$1Bug2v))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$10173$1Bug2v
                                                                 g$ver*$10174$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$p*$10175$1Bug2v)
                                                                   (case-lambda
                                                                     ((g$x$10176$1Bug2v)
                                                                      (g$for-all$4960$1Bug2v
                                                                        (case-lambda
                                                                          ((g$p$10177$1Bug2v)
                                                                           (g$p$10177$1Bug2v
                                                                             g$x$10176$1Bug2v)))
                                                                        g$p*$10175$1Bug2v)))))
                                                                (map g$version-pred$10142$1Bug2v
                                                                     g$ver*$10174$1Bug2v))))
                                                            g$ls/false$10170$1Bug2v)
                                                          ((case-lambda
                                                             ((g$t$10178$1Bug2v)
                                                              ((case-lambda
                                                                 ((g$ls/false$10179$1Bug2v)
                                                                  (if (if g$ls/false$10179$1Bug2v
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$10180$1Bug2v
                                                                                 g$ver*$10181$1Bug2v)
                                                                               (eq? (g$syntax->datum$7646$1Bug2v
                                                                                      g$c$10180$1Bug2v)
                                                                                    'or)))
                                                                            g$ls/false$10179$1Bug2v))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$10182$1Bug2v
                                                                           g$ver*$10183$1Bug2v)
                                                                         ((case-lambda
                                                                            ((g$p*$10184$1Bug2v)
                                                                             (case-lambda
                                                                               ((g$x$10185$1Bug2v)
                                                                                (g$exists$4961$1Bug2v
                                                                                  (case-lambda
                                                                                    ((g$p$10186$1Bug2v)
                                                                                     (g$p$10186$1Bug2v
                                                                                       g$x$10185$1Bug2v)))
                                                                                  g$p*$10184$1Bug2v)))))
                                                                          (map g$version-pred$10142$1Bug2v
                                                                               g$ver*$10183$1Bug2v))))
                                                                      g$ls/false$10179$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$t$10187$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$ls/false$10188$1Bug2v)
                                                                            (if (if g$ls/false$10188$1Bug2v
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$10189$1Bug2v
                                                                                           g$ver$10190$1Bug2v)
                                                                                         (eq? (g$syntax->datum$7646$1Bug2v
                                                                                                g$c$10189$1Bug2v)
                                                                                              'not)))
                                                                                      g$ls/false$10188$1Bug2v))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$10191$1Bug2v
                                                                                     g$ver$10192$1Bug2v)
                                                                                   ((case-lambda
                                                                                      ((g$p$10193$1Bug2v)
                                                                                       (case-lambda
                                                                                         ((g$x$10194$1Bug2v)
                                                                                          (not (g$p$10193$1Bug2v
                                                                                                 g$x$10194$1Bug2v))))))
                                                                                    (g$version-pred$10142$1Bug2v
                                                                                      g$ver$10192$1Bug2v))))
                                                                                g$ls/false$10188$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$t$10195$1Bug2v)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$10196$1Bug2v)
                                                                                      (if g$ls/false$10196$1Bug2v
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$10197$1Bug2v)
                                                                                             ((case-lambda
                                                                                                ((g$p*$10198$1Bug2v)
                                                                                                 (case-lambda
                                                                                                   ((g$x$10199$1Bug2v)
                                                                                                    ((letrec ((g$f$10200$1Bug2v
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$10201$1Bug2v
                                                                                                                     g$x$10202$1Bug2v)
                                                                                                                   (if (null?
                                                                                                                         g$p*$10201$1Bug2v)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$10202$1Bug2v)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$10201$1Bug2v)
                                                                                                                            (car g$x$10202$1Bug2v))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$10200$1Bug2v
                                                                                                                             (cdr g$p*$10201$1Bug2v)
                                                                                                                             (cdr g$x$10202$1Bug2v)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$10200$1Bug2v)
                                                                                                     g$p*$10198$1Bug2v
                                                                                                     g$x$10199$1Bug2v)))))
                                                                                              (map g$subversion-pred$10141$1Bug2v
                                                                                                   g$sub*$10197$1Bug2v))))
                                                                                          g$ls/false$10196$1Bug2v)
                                                                                        ((case-lambda
                                                                                           ((g$t$10203$1Bug2v)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$10204$1Bug2v)
                                                                                                (if g$ls/false$10204$1Bug2v
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$7643$1Bug2v
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$10139$1Bug2v
                                                                                                         g$x*$10165$1Bug2v)))
                                                                                                    g$ls/false$10204$1Bug2v)
                                                                                                  (g$syntax-violation$7643$1Bug2v
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$10203$1Bug2v))))
                                                                                             (g$syntax-dispatch$7532$1Bug2v
                                                                                               g$t$10203$1Bug2v
                                                                                               '_))))
                                                                                         g$t$10195$1Bug2v))))
                                                                                   (g$syntax-dispatch$7532$1Bug2v
                                                                                     g$t$10195$1Bug2v
                                                                                     'each-any))))
                                                                               g$t$10187$1Bug2v))))
                                                                         (g$syntax-dispatch$7532$1Bug2v
                                                                           g$t$10187$1Bug2v
                                                                           '(any any)))))
                                                                     g$t$10178$1Bug2v))))
                                                               (g$syntax-dispatch$7532$1Bug2v
                                                                 g$t$10178$1Bug2v
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$10169$1Bug2v))))
                                                     (g$syntax-dispatch$7532$1Bug2v
                                                       g$t$10169$1Bug2v
                                                       '(any . each-any)))))
                                                 g$t$10166$1Bug2v))))
                                           (g$syntax-dispatch$7532$1Bug2v
                                             g$t$10166$1Bug2v
                                             '()))))
                                       g$x*$10165$1Bug2v)))))
                         ((letrec ((g$f$10143$1Bug2v
                                     (case-lambda
                                       ((g$x$10144$1Bug2v)
                                        ((case-lambda
                                           ((g$t$10145$1Bug2v)
                                            ((case-lambda
                                               ((g$ls/false$10146$1Bug2v)
                                                (if g$ls/false$10146$1Bug2v
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$10147$1Bug2v)
                                                       (values
                                                         '()
                                                         (g$version-pred$10142$1Bug2v
                                                           g$version-spec*$10147$1Bug2v))))
                                                    g$ls/false$10146$1Bug2v)
                                                  ((case-lambda
                                                     ((g$t$10148$1Bug2v)
                                                      ((case-lambda
                                                         ((g$ls/false$10149$1Bug2v)
                                                          (if (if g$ls/false$10149$1Bug2v
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$10150$1Bug2v
                                                                         g$x*$10151$1Bug2v)
                                                                       (g$idsyn?$10038$1Bug2v
                                                                         g$x$10150$1Bug2v)))
                                                                    g$ls/false$10149$1Bug2v))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$10152$1Bug2v
                                                                   g$x*$10153$1Bug2v)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$10143$1Bug2v
                                                                        g$x*$10153$1Bug2v)))
                                                                   (case-lambda
                                                                     ((g$name$10156$1Bug2v
                                                                        g$pred$10157$1Bug2v)
                                                                      ((case-lambda
                                                                         ((g$pred$10158$1Bug2v
                                                                            g$name$10159$1Bug2v)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$7646$1Bug2v
                                                                                g$x$10152$1Bug2v)
                                                                              g$name$10159$1Bug2v)
                                                                            g$pred$10158$1Bug2v)))
                                                                       g$pred$10157$1Bug2v
                                                                       g$name$10156$1Bug2v))))))
                                                              g$ls/false$10149$1Bug2v)
                                                            ((case-lambda
                                                               ((g$t$10160$1Bug2v)
                                                                ((case-lambda
                                                                   ((g$ls/false$10161$1Bug2v)
                                                                    (if g$ls/false$10161$1Bug2v
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$10162$1Bug2v)
                                                                                '#t)))))
                                                                        g$ls/false$10161$1Bug2v)
                                                                      ((case-lambda
                                                                         ((g$t$10163$1Bug2v)
                                                                          ((case-lambda
                                                                             ((g$ls/false$10164$1Bug2v)
                                                                              (if g$ls/false$10164$1Bug2v
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$7643$1Bug2v
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$10139$1Bug2v)))
                                                                                  g$ls/false$10164$1Bug2v)
                                                                                (g$syntax-violation$7643$1Bug2v
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$10163$1Bug2v))))
                                                                           (g$syntax-dispatch$7532$1Bug2v
                                                                             g$t$10163$1Bug2v
                                                                             '_))))
                                                                       g$t$10160$1Bug2v))))
                                                                 (g$syntax-dispatch$7532$1Bug2v
                                                                   g$t$10160$1Bug2v
                                                                   '()))))
                                                             g$t$10148$1Bug2v))))
                                                       (g$syntax-dispatch$7532$1Bug2v
                                                         g$t$10148$1Bug2v
                                                         '(any . any)))))
                                                   g$t$10145$1Bug2v))))
                                             (g$syntax-dispatch$7532$1Bug2v
                                               g$t$10145$1Bug2v
                                               '(each-any)))))
                                         g$x$10144$1Bug2v)))))
                            g$f$10143$1Bug2v)
                          g$spec$10139$1Bug2v)))))
                  (g$import-library$10046$1Bug2v
                    (case-lambda
                      ((g$spec*$10131$1Bug2v)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10045$1Bug2v
                              g$spec*$10131$1Bug2v)))
                         (case-lambda
                           ((g$name$10134$1Bug2v g$pred$10135$1Bug2v)
                            ((case-lambda
                               ((g$pred$10136$1Bug2v g$name$10137$1Bug2v)
                                (begin
                                  (if (null? g$name$10137$1Bug2v)
                                    (g$syntax-violation$7643$1Bug2v
                                      'import
                                      '"empty library name"
                                      g$spec*$10131$1Bug2v)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$10138$1Bug2v)
                                      (begin
                                        (if (not g$lib$10138$1Bug2v)
                                          (g$syntax-violation$7643$1Bug2v
                                            'import
                                            '"cannot find library with required name"
                                            g$name$10137$1Bug2v)
                                          (void))
                                        (if (not (g$pred$10136$1Bug2v
                                                   (g$library-version$7022$1Bug2v
                                                     g$lib$10138$1Bug2v)))
                                          (g$syntax-violation$7643$1Bug2v
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$10131$1Bug2v
                                            g$lib$10138$1Bug2v)
                                          (void))
                                        ((g$imp-collector$7586$1Bug2v)
                                         g$lib$10138$1Bug2v)
                                        (g$library-subst$7026$1Bug2v
                                          g$lib$10138$1Bug2v))))
                                   (g$find-library-by-name$7062$1Bug2v
                                     g$name$10137$1Bug2v)))))
                             g$pred$10135$1Bug2v
                             g$name$10134$1Bug2v)))))))
                  (g$get-import$10047$1Bug2v
                    (case-lambda
                      ((g$spec$10060$1Bug2v)
                       ((case-lambda
                          ((g$t$10061$1Bug2v)
                           ((case-lambda
                              ((g$ls/false$10062$1Bug2v)
                               (if (if g$ls/false$10062$1Bug2v
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10063$1Bug2v g$x*$10064$1Bug2v)
                                            (not (g$memq$4954$1Bug2v
                                                   (g$syntax->datum$7646$1Bug2v
                                                     g$x$10063$1Bug2v)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10062$1Bug2v))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10065$1Bug2v g$x*$10066$1Bug2v)
                                      (g$import-library$10046$1Bug2v
                                        (cons
                                          g$x$10065$1Bug2v
                                          g$x*$10066$1Bug2v))))
                                   g$ls/false$10062$1Bug2v)
                                 ((case-lambda
                                    ((g$t$10067$1Bug2v)
                                     ((case-lambda
                                        ((g$ls/false$10068$1Bug2v)
                                         (if (if g$ls/false$10068$1Bug2v
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10069$1Bug2v
                                                        g$isp$10070$1Bug2v
                                                        g$old*$10071$1Bug2v
                                                        g$new*$10072$1Bug2v)
                                                      (if (eq? (g$syntax->datum$7646$1Bug2v
                                                                 g$rename$10069$1Bug2v)
                                                               'rename)
                                                        (if (g$for-all$4960$1Bug2v
                                                              g$idsyn?$10038$1Bug2v
                                                              g$old*$10071$1Bug2v)
                                                          (begin
                                                            '#f
                                                            (g$for-all$4960$1Bug2v
                                                              g$idsyn?$10038$1Bug2v
                                                              g$new*$10072$1Bug2v))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10068$1Bug2v))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10073$1Bug2v
                                                  g$isp$10074$1Bug2v
                                                  g$old*$10075$1Bug2v
                                                  g$new*$10076$1Bug2v)
                                                ((case-lambda
                                                   ((g$subst$10077$1Bug2v
                                                      g$old*$10078$1Bug2v
                                                      g$new*$10079$1Bug2v)
                                                    ((case-lambda
                                                       ((g$old-label*$10080$1Bug2v)
                                                        ((case-lambda
                                                           ((g$subst$10081$1Bug2v)
                                                            (g$merge-substs$10040$1Bug2v
                                                              (map cons
                                                                   g$new*$10079$1Bug2v
                                                                   g$old-label*$10080$1Bug2v)
                                                              g$subst$10081$1Bug2v)))
                                                         (g$rem*$10043$1Bug2v
                                                           g$old*$10078$1Bug2v
                                                           g$subst$10077$1Bug2v))))
                                                     (g$find*$10042$1Bug2v
                                                       g$old*$10078$1Bug2v
                                                       g$subst$10077$1Bug2v))))
                                                 (g$get-import$10047$1Bug2v
                                                   g$isp$10074$1Bug2v)
                                                 (map g$syntax->datum$7646$1Bug2v
                                                      g$old*$10075$1Bug2v)
                                                 (map g$syntax->datum$7646$1Bug2v
                                                      g$new*$10076$1Bug2v))))
                                             g$ls/false$10068$1Bug2v)
                                           ((case-lambda
                                              ((g$t$10082$1Bug2v)
                                               ((case-lambda
                                                  ((g$ls/false$10083$1Bug2v)
                                                   (if (if g$ls/false$10083$1Bug2v
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10084$1Bug2v
                                                                  g$isp$10085$1Bug2v
                                                                  g$sym*$10086$1Bug2v)
                                                                (if (eq? (g$syntax->datum$7646$1Bug2v
                                                                           g$except$10084$1Bug2v)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$4960$1Bug2v
                                                                      g$idsyn?$10038$1Bug2v
                                                                      g$sym*$10086$1Bug2v))
                                                                  '#f)))
                                                             g$ls/false$10083$1Bug2v))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10087$1Bug2v
                                                            g$isp$10088$1Bug2v
                                                            g$sym*$10089$1Bug2v)
                                                          ((case-lambda
                                                             ((g$subst$10090$1Bug2v)
                                                              (g$rem*$10043$1Bug2v
                                                                (map g$syntax->datum$7646$1Bug2v
                                                                     g$sym*$10089$1Bug2v)
                                                                g$subst$10090$1Bug2v)))
                                                           (g$get-import$10047$1Bug2v
                                                             g$isp$10088$1Bug2v))))
                                                       g$ls/false$10083$1Bug2v)
                                                     ((case-lambda
                                                        ((g$t$10091$1Bug2v)
                                                         ((case-lambda
                                                            ((g$ls/false$10092$1Bug2v)
                                                             (if (if g$ls/false$10092$1Bug2v
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$10093$1Bug2v
                                                                            g$isp$10094$1Bug2v
                                                                            g$sym*$10095$1Bug2v)
                                                                          (if (eq? (g$syntax->datum$7646$1Bug2v
                                                                                     g$only$10093$1Bug2v)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$4960$1Bug2v
                                                                                g$idsyn?$10038$1Bug2v
                                                                                g$sym*$10095$1Bug2v))
                                                                            '#f)))
                                                                       g$ls/false$10092$1Bug2v))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$10096$1Bug2v
                                                                      g$isp$10097$1Bug2v
                                                                      g$sym*$10098$1Bug2v)
                                                                    ((case-lambda
                                                                       ((g$subst$10099$1Bug2v
                                                                          g$sym*$10100$1Bug2v)
                                                                        ((case-lambda
                                                                           ((g$sym*$10101$1Bug2v)
                                                                            ((case-lambda
                                                                               ((g$lab*$10102$1Bug2v)
                                                                                (map cons
                                                                                     g$sym*$10101$1Bug2v
                                                                                     g$lab*$10102$1Bug2v)))
                                                                             (g$find*$10042$1Bug2v
                                                                               g$sym*$10101$1Bug2v
                                                                               g$subst$10099$1Bug2v))))
                                                                         (g$remove-dups$10044$1Bug2v
                                                                           g$sym*$10100$1Bug2v))))
                                                                     (g$get-import$10047$1Bug2v
                                                                       g$isp$10097$1Bug2v)
                                                                     (map g$syntax->datum$7646$1Bug2v
                                                                          g$sym*$10098$1Bug2v))))
                                                                 g$ls/false$10092$1Bug2v)
                                                               ((case-lambda
                                                                  ((g$t$10103$1Bug2v)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10104$1Bug2v)
                                                                       (if (if g$ls/false$10104$1Bug2v
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$10105$1Bug2v
                                                                                      g$isp$10106$1Bug2v
                                                                                      g$p$10107$1Bug2v)
                                                                                    (if (eq? (g$syntax->datum$7646$1Bug2v
                                                                                               g$prefix$10105$1Bug2v)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10038$1Bug2v
                                                                                          g$p$10107$1Bug2v))
                                                                                      '#f)))
                                                                                 g$ls/false$10104$1Bug2v))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$10108$1Bug2v
                                                                                g$isp$10109$1Bug2v
                                                                                g$p$10110$1Bug2v)
                                                                              ((case-lambda
                                                                                 ((g$subst$10111$1Bug2v
                                                                                    g$prefix$10112$1Bug2v)
                                                                                  (map (case-lambda
                                                                                         ((g$x$10113$1Bug2v)
                                                                                          (cons
                                                                                            (string->symbol
                                                                                              (string-append
                                                                                                g$prefix$10112$1Bug2v
                                                                                                (symbol->string
                                                                                                  (car g$x$10113$1Bug2v))))
                                                                                            (cdr g$x$10113$1Bug2v))))
                                                                                       g$subst$10111$1Bug2v)))
                                                                               (g$get-import$10047$1Bug2v
                                                                                 g$isp$10109$1Bug2v)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$7646$1Bug2v
                                                                                   g$p$10110$1Bug2v)))))
                                                                           g$ls/false$10104$1Bug2v)
                                                                         ((case-lambda
                                                                            ((g$t$10114$1Bug2v)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10115$1Bug2v)
                                                                                 (if (if g$ls/false$10115$1Bug2v
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$10116$1Bug2v
                                                                                                g$spec*$10117$1Bug2v)
                                                                                              (eq? (g$syntax->datum$7646$1Bug2v
                                                                                                     g$library$10116$1Bug2v)
                                                                                                   'library)))
                                                                                           g$ls/false$10115$1Bug2v))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$10118$1Bug2v
                                                                                          g$spec*$10119$1Bug2v)
                                                                                        (g$import-library$10046$1Bug2v
                                                                                          g$spec*$10119$1Bug2v)))
                                                                                     g$ls/false$10115$1Bug2v)
                                                                                   ((case-lambda
                                                                                      ((g$t$10120$1Bug2v)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10121$1Bug2v)
                                                                                           (if (if g$ls/false$10121$1Bug2v
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$10122$1Bug2v
                                                                                                          g$isp$10123$1Bug2v
                                                                                                          g$rest$10124$1Bug2v)
                                                                                                        (eq? (g$syntax->datum$7646$1Bug2v
                                                                                                               g$for$10122$1Bug2v)
                                                                                                             'for)))
                                                                                                     g$ls/false$10121$1Bug2v))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$10125$1Bug2v
                                                                                                    g$isp$10126$1Bug2v
                                                                                                    g$rest$10127$1Bug2v)
                                                                                                  (g$get-import$10047$1Bug2v
                                                                                                    g$isp$10126$1Bug2v)))
                                                                                               g$ls/false$10121$1Bug2v)
                                                                                             ((case-lambda
                                                                                                ((g$t$10128$1Bug2v)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$10129$1Bug2v)
                                                                                                     (if g$ls/false$10129$1Bug2v
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$10130$1Bug2v)
                                                                                                            (g$syntax-violation$7643$1Bug2v
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$10130$1Bug2v)))
                                                                                                         g$ls/false$10129$1Bug2v)
                                                                                                       (g$syntax-violation$7643$1Bug2v
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$10128$1Bug2v))))
                                                                                                  (g$syntax-dispatch$7532$1Bug2v
                                                                                                    g$t$10128$1Bug2v
                                                                                                    'any))))
                                                                                              g$t$10120$1Bug2v))))
                                                                                        (g$syntax-dispatch$7532$1Bug2v
                                                                                          g$t$10120$1Bug2v
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$10114$1Bug2v))))
                                                                              (g$syntax-dispatch$7532$1Bug2v
                                                                                g$t$10114$1Bug2v
                                                                                '(any each-any)))))
                                                                          g$t$10103$1Bug2v))))
                                                                    (g$syntax-dispatch$7532$1Bug2v
                                                                      g$t$10103$1Bug2v
                                                                      '(any any
                                                                            any)))))
                                                                g$t$10091$1Bug2v))))
                                                          (g$syntax-dispatch$7532$1Bug2v
                                                            g$t$10091$1Bug2v
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10082$1Bug2v))))
                                                (g$syntax-dispatch$7532$1Bug2v
                                                  g$t$10082$1Bug2v
                                                  '(any any . each-any)))))
                                            g$t$10067$1Bug2v))))
                                      (g$syntax-dispatch$7532$1Bug2v
                                        g$t$10067$1Bug2v
                                        '(any any . #(each (any any)))))))
                                  g$t$10061$1Bug2v))))
                            (g$syntax-dispatch$7532$1Bug2v
                              g$t$10061$1Bug2v
                              '(any . each-any)))))
                        g$spec$10060$1Bug2v))))
                  (g$add-imports!$10048$1Bug2v
                    (case-lambda
                      ((g$imp$10052$1Bug2v g$h$10053$1Bug2v)
                       ((case-lambda
                          ((g$subst$10054$1Bug2v)
                           (for-each
                             (case-lambda
                               ((g$x$10055$1Bug2v)
                                ((case-lambda
                                   ((g$name$10056$1Bug2v g$label$10057$1Bug2v)
                                    ((case-lambda
                                       ((g$t$10058$1Bug2v)
                                        (if g$t$10058$1Bug2v
                                          ((case-lambda
                                             ((g$l$10059$1Bug2v)
                                              (if (not (eq? g$l$10059$1Bug2v
                                                            g$label$10057$1Bug2v))
                                                (g$dup-error$10039$1Bug2v
                                                  g$name$10056$1Bug2v)
                                                (void))))
                                           g$t$10058$1Bug2v)
                                          (g$hashtable-set!$5402$1Bug2v
                                            g$h$10053$1Bug2v
                                            g$name$10056$1Bug2v
                                            g$label$10057$1Bug2v))))
                                     (g$hashtable-ref$5401$1Bug2v
                                       g$h$10053$1Bug2v
                                       g$name$10056$1Bug2v
                                       '#f))))
                                 (car g$x$10055$1Bug2v)
                                 (cdr g$x$10055$1Bug2v))))
                             g$subst$10054$1Bug2v)))
                        (g$get-import$10047$1Bug2v g$imp$10052$1Bug2v))))))
          ((letrec ((g$f$10049$1Bug2v
                      (case-lambda
                        ((g$imp*$10050$1Bug2v g$h$10051$1Bug2v)
                         (if (null? g$imp*$10050$1Bug2v)
                           (hashtable-entries g$h$10051$1Bug2v)
                           (begin
                             (g$add-imports!$10048$1Bug2v
                               (car g$imp*$10050$1Bug2v)
                               g$h$10051$1Bug2v)
                             (g$f$10049$1Bug2v
                               (cdr g$imp*$10050$1Bug2v)
                               g$h$10051$1Bug2v)))))))
             g$f$10049$1Bug2v)
           g$imp*$10037$1Bug2v
           (g$make-eq-hashtable$5398$1Bug2v))))))
   (g$make-top-rib$7582$1Bug2v
     g$make-top-rib$11042$1Bug2v
     (case-lambda
       ((g$names$10299$1Bug2v g$labels$10300$1Bug2v)
        ((case-lambda
           ((g$rib$10301$1Bug2v)
            (begin
              (vector-for-each
                (case-lambda
                  ((g$name$10302$1Bug2v g$label$10303$1Bug2v)
                   (begin
                     (if (not (symbol? g$name$10302$1Bug2v))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$10302$1Bug2v)
                       (void))
                     (g$extend-rib!$7218$1Bug2v
                       g$rib$10301$1Bug2v
                       (g$make-stx$7227$1Bug2v
                         g$name$10302$1Bug2v
                         g$top-mark*$7196$1Bug2v
                         '()
                         '())
                       g$label$10303$1Bug2v))))
                g$names$10299$1Bug2v
                g$labels$10300$1Bug2v)
              g$rib$10301$1Bug2v)))
         (g$make-empty-rib$7217$1Bug2v)))))
   (g$make-collector$7583$1Bug2v
     g$make-collector$11043$1Bug2v
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$10304$1Bug2v)
            (case-lambda
              (() g$ls$10304$1Bug2v)
              ((g$x$10305$1Bug2v)
               (set! g$ls$10304$1Bug2v
                 (g$set-cons$7193$1Bug2v
                   g$x$10305$1Bug2v
                   g$ls$10304$1Bug2v))))))
         '()))))
   (g$inv-collector$7584$1Bug2v
     g$inv-collector$11044$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda
         (g$args$10306$1Bug2v
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10307$1Bug2v)
          (begin
            (if (not (procedure? g$x$10307$1Bug2v))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$10307$1Bug2v)
              (void))
            g$x$10307$1Bug2v)))))
   (g$vis-collector$7585$1Bug2v
     g$vis-collector$11045$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda
         (g$args$10308$1Bug2v
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10309$1Bug2v)
          (begin
            (if (not (procedure? g$x$10309$1Bug2v))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$10309$1Bug2v)
              (void))
            g$x$10309$1Bug2v)))))
   (g$imp-collector$7586$1Bug2v
     g$imp-collector$11046$1Bug2v
     (g$make-parameter$6522$1Bug2v
       (case-lambda
         (g$args$10310$1Bug2v
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$10311$1Bug2v)
          (begin
            (if (not (procedure? g$x$10311$1Bug2v))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$10311$1Bug2v)
              (void))
            g$x$10311$1Bug2v)))))
   (g$chi-library-internal$7587$1Bug2v
     g$chi-library-internal$11047$1Bug2v
     (case-lambda
       ((g$e*$10312$1Bug2v g$rib$10313$1Bug2v g$top?$10314$1Bug2v)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7576$1Bug2v
               g$e*$10312$1Bug2v
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$10313$1Bug2v
               g$top?$10314$1Bug2v)))
          (case-lambda
            ((g$e*$10323$1Bug2v
               g$r$10324$1Bug2v
               g$mr$10325$1Bug2v
               g$lex*$10326$1Bug2v
               g$rhs*$10327$1Bug2v
               g$mod**$10328$1Bug2v
               g$_kwd*$10329$1Bug2v
               g$exp*$10330$1Bug2v)
             ((case-lambda
                ((g$exp*$10331$1Bug2v
                   g$_kwd*$10332$1Bug2v
                   g$mod**$10333$1Bug2v
                   g$rhs*$10334$1Bug2v
                   g$lex*$10335$1Bug2v
                   g$mr$10336$1Bug2v
                   g$r$10337$1Bug2v
                   g$e*$10338$1Bug2v)
                 (values
                   (append
                     (apply append (reverse g$mod**$10333$1Bug2v))
                     g$e*$10338$1Bug2v)
                   g$r$10337$1Bug2v
                   g$mr$10336$1Bug2v
                   (reverse g$lex*$10335$1Bug2v)
                   (reverse g$rhs*$10334$1Bug2v)
                   g$exp*$10331$1Bug2v)))
              g$exp*$10330$1Bug2v
              g$_kwd*$10329$1Bug2v
              g$mod**$10328$1Bug2v
              g$rhs*$10327$1Bug2v
              g$lex*$10326$1Bug2v
              g$mr$10325$1Bug2v
              g$r$10324$1Bug2v
              g$e*$10323$1Bug2v)))))))
   (g$chi-interaction-expr$7588$1Bug2v
     g$chi-interaction-expr$11048$1Bug2v
     (case-lambda
       ((g$e$10339$1Bug2v g$rib$10340$1Bug2v g$r$10341$1Bug2v)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$7576$1Bug2v
               (list g$e$10339$1Bug2v)
               g$r$10341$1Bug2v
               g$r$10341$1Bug2v
               '()
               '()
               '()
               '()
               '()
               g$rib$10340$1Bug2v
               '#t)))
          (case-lambda
            ((g$e*$10350$1Bug2v
               g$r$10351$1Bug2v
               g$mr$10352$1Bug2v
               g$lex*$10353$1Bug2v
               g$rhs*$10354$1Bug2v
               g$mod**$10355$1Bug2v
               g$_kwd*$10356$1Bug2v
               g$_exp*$10357$1Bug2v)
             ((case-lambda
                ((g$_exp*$10358$1Bug2v
                   g$_kwd*$10359$1Bug2v
                   g$mod**$10360$1Bug2v
                   g$rhs*$10361$1Bug2v
                   g$lex*$10362$1Bug2v
                   g$mr$10363$1Bug2v
                   g$r$10364$1Bug2v
                   g$e*$10365$1Bug2v)
                 ((case-lambda
                    ((g$e*$10366$1Bug2v)
                     ((case-lambda
                        ((g$e$10367$1Bug2v)
                         (values g$e$10367$1Bug2v g$r$10364$1Bug2v)))
                      (if (null? g$e*$10366$1Bug2v)
                        (g$build-void$7189$1Bug2v)
                        (if (null? (cdr g$e*$10366$1Bug2v))
                          (car g$e*$10366$1Bug2v)
                          (g$build-sequence$7188$1Bug2v
                            '#f
                            g$e*$10366$1Bug2v))))))
                  (g$expand-interaction-rhs*/init*$7557$1Bug2v
                    (reverse g$lex*$10362$1Bug2v)
                    (reverse g$rhs*$10361$1Bug2v)
                    (append
                      (apply append (reverse g$mod**$10360$1Bug2v))
                      g$e*$10365$1Bug2v)
                    g$r$10364$1Bug2v
                    g$mr$10363$1Bug2v))))
              g$_exp*$10357$1Bug2v
              g$_kwd*$10356$1Bug2v
              g$mod**$10355$1Bug2v
              g$rhs*$10354$1Bug2v
              g$lex*$10353$1Bug2v
              g$mr$10352$1Bug2v
              g$r$10351$1Bug2v
              g$e*$10350$1Bug2v)))))))
   (g$library-body-expander$7589$1Bug2v
     g$library-body-expander$11049$1Bug2v
     (case-lambda
       ((g$name$10368$1Bug2v
          g$main-exp*$10369$1Bug2v
          g$imp*$10370$1Bug2v
          g$b*$10371$1Bug2v
          g$top?$10372$1Bug2v)
        (letrec* ((g$itc$10373$1Bug2v (g$make-collector$7583$1Bug2v)))
          ((case-lambda
             ((g$imp-collector$10378$1Bug2v
                g$top-level-context$10379$1Bug2v
                g$imp-collector$10380$1Bug2v
                g$top-level-context$10381$1Bug2v)
              ((case-lambda
                 ((g$swap$10382$1Bug2v)
                  (dynamic-wind
                    g$swap$10382$1Bug2v
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$7581$1Bug2v
                              g$imp*$10370$1Bug2v)))
                         (case-lambda
                           ((g$subst-names$10385$1Bug2v
                              g$subst-labels$10386$1Bug2v)
                            ((case-lambda
                               ((g$subst-labels$10387$1Bug2v
                                  g$subst-names$10388$1Bug2v)
                                ((case-lambda
                                   ((g$rib$10389$1Bug2v)
                                    (letrec* ((g$wrap$10390$1Bug2v
                                                (case-lambda
                                                  ((g$x$10452$1Bug2v)
                                                   (g$make-stx$7227$1Bug2v
                                                     g$x$10452$1Bug2v
                                                     g$top-mark*$7196$1Bug2v
                                                     (list g$rib$10389$1Bug2v)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$10391$1Bug2v
                                            g$main-exp*$10392$1Bug2v
                                            g$rtc$10393$1Bug2v
                                            g$vtc$10394$1Bug2v)
                                          ((case-lambda
                                             ((g$inv-collector$10399$1Bug2v
                                                g$vis-collector$10400$1Bug2v
                                                g$inv-collector$10401$1Bug2v
                                                g$vis-collector$10402$1Bug2v)
                                              ((case-lambda
                                                 ((g$swap$10403$1Bug2v)
                                                  (dynamic-wind
                                                    g$swap$10403$1Bug2v
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$7587$1Bug2v
                                                              g$b*$10391$1Bug2v
                                                              g$rib$10389$1Bug2v
                                                              g$top?$10372$1Bug2v)))
                                                         (case-lambda
                                                           ((g$init*$10410$1Bug2v
                                                              g$r$10411$1Bug2v
                                                              g$mr$10412$1Bug2v
                                                              g$lex*$10413$1Bug2v
                                                              g$rhs*$10414$1Bug2v
                                                              g$internal-exp*$10415$1Bug2v)
                                                            ((case-lambda
                                                               ((g$internal-exp*$10416$1Bug2v
                                                                  g$rhs*$10417$1Bug2v
                                                                  g$lex*$10418$1Bug2v
                                                                  g$mr$10419$1Bug2v
                                                                  g$r$10420$1Bug2v
                                                                  g$init*$10421$1Bug2v)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$7578$1Bug2v
                                                                       (append
                                                                         g$main-exp*$10392$1Bug2v
                                                                         g$internal-exp*$10416$1Bug2v))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$10424$1Bug2v
                                                                       g$exp-id*$10425$1Bug2v)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$10426$1Bug2v
                                                                           g$exp-name*$10427$1Bug2v)
                                                                         (begin
                                                                           (g$seal-rib!$7220$1Bug2v
                                                                             g$rib$10389$1Bug2v)
                                                                           ((case-lambda
                                                                              ((g$init*$10428$1Bug2v)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$10429$1Bug2v)
                                                                                   ((case-lambda
                                                                                      (()
                                                                                       (begin
                                                                                         (g$unseal-rib!$7221$1Bug2v
                                                                                           g$rib$10389$1Bug2v)
                                                                                         ((case-lambda
                                                                                            ((g$loc*$10430$1Bug2v
                                                                                               g$export-subst$10431$1Bug2v)
                                                                                             (letrec* ((g$errstr$10432$1Bug2v
                                                                                                         '"attempt to export mutated variable"))
                                                                                               (call-with-values
                                                                                                 (case-lambda
                                                                                                   (()
                                                                                                    (g$make-export-env/macros$7632$1Bug2v
                                                                                                      g$lex*$10418$1Bug2v
                                                                                                      g$loc*$10430$1Bug2v
                                                                                                      g$r$10420$1Bug2v)))
                                                                                                 (case-lambda
                                                                                                   ((g$export-env$10436$1Bug2v
                                                                                                      g$global*$10437$1Bug2v
                                                                                                      g$macro*$10438$1Bug2v)
                                                                                                    ((case-lambda
                                                                                                       ((g$macro*$10439$1Bug2v
                                                                                                          g$global*$10440$1Bug2v
                                                                                                          g$export-env$10441$1Bug2v)
                                                                                                        (begin
                                                                                                          (for-each
                                                                                                            (case-lambda
                                                                                                              ((g$s$10442$1Bug2v)
                                                                                                               ((case-lambda
                                                                                                                  ((g$name$10443$1Bug2v
                                                                                                                     g$label$10444$1Bug2v)
                                                                                                                   ((case-lambda
                                                                                                                      ((g$p$10445$1Bug2v)
                                                                                                                       (if g$p$10445$1Bug2v
                                                                                                                         ((case-lambda
                                                                                                                            ((g$b$10446$1Bug2v)
                                                                                                                             ((case-lambda
                                                                                                                                ((g$type$10447$1Bug2v)
                                                                                                                                 (if (eq? g$type$10447$1Bug2v
                                                                                                                                          'mutable)
                                                                                                                                   (g$syntax-violation$7643$1Bug2v
                                                                                                                                     'export
                                                                                                                                     g$errstr$10432$1Bug2v
                                                                                                                                     g$name$10443$1Bug2v)
                                                                                                                                   (void))))
                                                                                                                              (car g$b$10446$1Bug2v))))
                                                                                                                          (cdr g$p$10445$1Bug2v))
                                                                                                                         (void))))
                                                                                                                    (g$assq$4950$1Bug2v
                                                                                                                      g$label$10444$1Bug2v
                                                                                                                      g$export-env$10441$1Bug2v))))
                                                                                                                (car g$s$10442$1Bug2v)
                                                                                                                (cdr g$s$10442$1Bug2v))))
                                                                                                            g$export-subst$10431$1Bug2v)
                                                                                                          ((case-lambda
                                                                                                             ((g$invoke-body$10448$1Bug2v
                                                                                                                g$invoke-definitions$10449$1Bug2v)
                                                                                                              (values
                                                                                                                (g$itc$10373$1Bug2v)
                                                                                                                (g$rtc$10393$1Bug2v)
                                                                                                                (g$vtc$10394$1Bug2v)
                                                                                                                (g$build-sequence$7188$1Bug2v
                                                                                                                  '#f
                                                                                                                  (append
                                                                                                                    g$invoke-definitions$10449$1Bug2v
                                                                                                                    (list
                                                                                                                      g$invoke-body$10448$1Bug2v)))
                                                                                                                g$macro*$10439$1Bug2v
                                                                                                                g$export-subst$10431$1Bug2v
                                                                                                                g$export-env$10441$1Bug2v)))
                                                                                                           (g$build-library-letrec*$7192$1Bug2v
                                                                                                             '#f
                                                                                                             g$name$10368$1Bug2v
                                                                                                             g$lex*$10418$1Bug2v
                                                                                                             g$loc*$10430$1Bug2v
                                                                                                             g$rhs*$10429$1Bug2v
                                                                                                             (if (null?
                                                                                                                   g$init*$10428$1Bug2v)
                                                                                                               (g$build-void$7189$1Bug2v)
                                                                                                               (g$build-sequence$7188$1Bug2v
                                                                                                                 '#f
                                                                                                                 g$init*$10428$1Bug2v)))
                                                                                                           (map g$build-global-define$7184$1Bug2v
                                                                                                                (map cdr
                                                                                                                     g$global*$10440$1Bug2v))))))
                                                                                                     g$macro*$10438$1Bug2v
                                                                                                     g$global*$10437$1Bug2v
                                                                                                     g$export-env$10436$1Bug2v)))))))
                                                                                          (map g$gen-global$7199$1Bug2v
                                                                                               g$lex*$10418$1Bug2v)
                                                                                          (g$make-export-subst$7631$1Bug2v
                                                                                            g$exp-name*$10427$1Bug2v
                                                                                            g$exp-id*$10426$1Bug2v))))))))
                                                                                (g$chi-rhs*$7558$1Bug2v
                                                                                  g$rhs*$10417$1Bug2v
                                                                                  g$r$10420$1Bug2v
                                                                                  g$mr$10419$1Bug2v))))
                                                                            (g$chi-expr*$7548$1Bug2v
                                                                              g$init*$10421$1Bug2v
                                                                              g$r$10420$1Bug2v
                                                                              g$mr$10419$1Bug2v)))))
                                                                      g$exp-id*$10425$1Bug2v
                                                                      g$exp-name*$10424$1Bug2v))))))
                                                             g$internal-exp*$10415$1Bug2v
                                                             g$rhs*$10414$1Bug2v
                                                             g$lex*$10413$1Bug2v
                                                             g$mr$10412$1Bug2v
                                                             g$r$10411$1Bug2v
                                                             g$init*$10410$1Bug2v))))))
                                                    g$swap$10403$1Bug2v)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$10450$1Bug2v)
                                                        (begin
                                                          (g$inv-collector$10399$1Bug2v
                                                            g$inv-collector$10401$1Bug2v)
                                                          (set! g$inv-collector$10401$1Bug2v
                                                            g$t$10450$1Bug2v))))
                                                     (g$inv-collector$10399$1Bug2v))
                                                    ((case-lambda
                                                       ((g$t$10451$1Bug2v)
                                                        (begin
                                                          (g$vis-collector$10400$1Bug2v
                                                            g$vis-collector$10402$1Bug2v)
                                                          (set! g$vis-collector$10402$1Bug2v
                                                            g$t$10451$1Bug2v))))
                                                     (g$vis-collector$10400$1Bug2v))))))))
                                           g$inv-collector$7584$1Bug2v
                                           g$vis-collector$7585$1Bug2v
                                           g$rtc$10393$1Bug2v
                                           g$vtc$10394$1Bug2v)))
                                       (map g$wrap$10390$1Bug2v
                                            g$b*$10371$1Bug2v)
                                       (map g$wrap$10390$1Bug2v
                                            g$main-exp*$10369$1Bug2v)
                                       (g$make-collector$7583$1Bug2v)
                                       (g$make-collector$7583$1Bug2v)))))
                                 (g$make-top-rib$7582$1Bug2v
                                   g$subst-names$10388$1Bug2v
                                   g$subst-labels$10387$1Bug2v))))
                             g$subst-labels$10386$1Bug2v
                             g$subst-names$10385$1Bug2v))))))
                    g$swap$10382$1Bug2v)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$10453$1Bug2v)
                        (begin
                          (g$imp-collector$10378$1Bug2v
                            g$imp-collector$10380$1Bug2v)
                          (set! g$imp-collector$10380$1Bug2v
                            g$t$10453$1Bug2v))))
                     (g$imp-collector$10378$1Bug2v))
                    ((case-lambda
                       ((g$t$10454$1Bug2v)
                        (begin
                          (g$top-level-context$10379$1Bug2v
                            g$top-level-context$10381$1Bug2v)
                          (set! g$top-level-context$10381$1Bug2v
                            g$t$10454$1Bug2v))))
                     (g$top-level-context$10379$1Bug2v))))))))
           g$imp-collector$7586$1Bug2v
           g$top-level-context$7650$1Bug2v
           g$itc$10373$1Bug2v
           '#f)))))
   (g$core-library-expander$7590$1Bug2v
     g$core-library-expander$11050$1Bug2v
     (case-lambda
       ((g$e$10455$1Bug2v g$verify-name$10456$1Bug2v)
        (call-with-values
          (case-lambda (() (g$parse-library$7580$1Bug2v g$e$10455$1Bug2v)))
          (case-lambda
            ((g$name*$10461$1Bug2v
               g$exp*$10462$1Bug2v
               g$imp*$10463$1Bug2v
               g$b*$10464$1Bug2v)
             ((case-lambda
                ((g$b*$10465$1Bug2v
                   g$imp*$10466$1Bug2v
                   g$exp*$10467$1Bug2v
                   g$name*$10468$1Bug2v)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$parse-library-name$7579$1Bug2v g$name*$10468$1Bug2v)))
                   (case-lambda
                     ((g$name$10471$1Bug2v g$ver$10472$1Bug2v)
                      ((case-lambda
                         ((g$ver$10473$1Bug2v g$name$10474$1Bug2v)
                          (begin
                            (g$verify-name$10456$1Bug2v g$name$10474$1Bug2v)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$7589$1Bug2v
                                   g$name$10474$1Bug2v
                                   g$exp*$10467$1Bug2v
                                   g$imp*$10466$1Bug2v
                                   g$b*$10465$1Bug2v
                                   '#f)))
                              (case-lambda
                                ((g$imp*$10482$1Bug2v
                                   g$invoke-req*$10483$1Bug2v
                                   g$visit-req*$10484$1Bug2v
                                   g$invoke-code$10485$1Bug2v
                                   g$visit-code$10486$1Bug2v
                                   g$export-subst$10487$1Bug2v
                                   g$export-env$10488$1Bug2v)
                                 ((case-lambda
                                    ((g$export-env$10489$1Bug2v
                                       g$export-subst$10490$1Bug2v
                                       g$visit-code$10491$1Bug2v
                                       g$invoke-code$10492$1Bug2v
                                       g$visit-req*$10493$1Bug2v
                                       g$invoke-req*$10494$1Bug2v
                                       g$imp*$10495$1Bug2v)
                                     (values
                                       g$name$10474$1Bug2v
                                       g$ver$10473$1Bug2v
                                       g$imp*$10495$1Bug2v
                                       g$invoke-req*$10494$1Bug2v
                                       g$visit-req*$10493$1Bug2v
                                       g$invoke-code$10492$1Bug2v
                                       g$visit-code$10491$1Bug2v
                                       g$export-subst$10490$1Bug2v
                                       g$export-env$10489$1Bug2v)))
                                  g$export-env$10488$1Bug2v
                                  g$export-subst$10487$1Bug2v
                                  g$visit-code$10486$1Bug2v
                                  g$invoke-code$10485$1Bug2v
                                  g$visit-req*$10484$1Bug2v
                                  g$invoke-req*$10483$1Bug2v
                                  g$imp*$10482$1Bug2v)))))))
                       g$ver$10472$1Bug2v
                       g$name$10471$1Bug2v))))))
              g$b*$10464$1Bug2v
              g$imp*$10463$1Bug2v
              g$exp*$10462$1Bug2v
              g$name*$10461$1Bug2v)))))))
   (g$parse-top-level-program$7591$1Bug2v
     g$parse-top-level-program$11051$1Bug2v
     (case-lambda
       ((g$e*$10496$1Bug2v)
        ((case-lambda
           ((g$t$10497$1Bug2v)
            ((case-lambda
               ((g$ls/false$10498$1Bug2v)
                (if (if g$ls/false$10498$1Bug2v
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$10499$1Bug2v
                               g$imp*$10500$1Bug2v
                               g$b*$10501$1Bug2v)
                             (eq? (g$syntax->datum$7646$1Bug2v
                                    g$import$10499$1Bug2v)
                                  'import)))
                          g$ls/false$10498$1Bug2v))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$10502$1Bug2v
                         g$imp*$10503$1Bug2v
                         g$b*$10504$1Bug2v)
                       (values g$imp*$10503$1Bug2v g$b*$10504$1Bug2v)))
                    g$ls/false$10498$1Bug2v)
                  ((case-lambda
                     ((g$t$10505$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$10506$1Bug2v)
                          (if (if g$ls/false$10506$1Bug2v
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$10507$1Bug2v
                                         g$x$10508$1Bug2v
                                         g$y$10509$1Bug2v)
                                       (eq? (g$syntax->datum$7646$1Bug2v
                                              g$import$10507$1Bug2v)
                                            'import)))
                                    g$ls/false$10506$1Bug2v))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$10510$1Bug2v
                                   g$x$10511$1Bug2v
                                   g$y$10512$1Bug2v)
                                 (g$syntax-violation$7643$1Bug2v
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$7251$1Bug2v
                                     g$e*$10496$1Bug2v))))
                              g$ls/false$10506$1Bug2v)
                            ((case-lambda
                               ((g$t$10513$1Bug2v)
                                ((case-lambda
                                   ((g$ls/false$10514$1Bug2v)
                                    (if g$ls/false$10514$1Bug2v
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$10514$1Bug2v)
                                      (g$syntax-violation$7643$1Bug2v
                                        '#f
                                        '"invalid syntax"
                                        g$t$10513$1Bug2v))))
                                 (g$syntax-dispatch$7532$1Bug2v
                                   g$t$10513$1Bug2v
                                   '_))))
                             g$t$10505$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v
                         g$t$10505$1Bug2v
                         '((any . any) . any)))))
                   g$t$10497$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v
               g$t$10497$1Bug2v
               '((any . each-any) . each-any)))))
         g$e*$10496$1Bug2v))))
   (g$top-level-expander$7592$1Bug2v
     g$top-level-expander$11052$1Bug2v
     (case-lambda
       ((g$e*$10515$1Bug2v)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$7591$1Bug2v g$e*$10515$1Bug2v)))
          (case-lambda
            ((g$imp*$10518$1Bug2v g$b*$10519$1Bug2v)
             ((case-lambda
                ((g$b*$10520$1Bug2v g$imp*$10521$1Bug2v)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$7589$1Bug2v
                        '()
                        '()
                        g$imp*$10521$1Bug2v
                        g$b*$10520$1Bug2v
                        '#t)))
                   (case-lambda
                     ((g$imp*$10529$1Bug2v
                        g$invoke-req*$10530$1Bug2v
                        g$visit-req*$10531$1Bug2v
                        g$invoke-code$10532$1Bug2v
                        g$visit-code$10533$1Bug2v
                        g$export-subst$10534$1Bug2v
                        g$export-env$10535$1Bug2v)
                      ((case-lambda
                         ((g$export-env$10536$1Bug2v
                            g$export-subst$10537$1Bug2v
                            g$visit-code$10538$1Bug2v
                            g$invoke-code$10539$1Bug2v
                            g$visit-req*$10540$1Bug2v
                            g$invoke-req*$10541$1Bug2v
                            g$imp*$10542$1Bug2v)
                          (values
                            g$invoke-req*$10541$1Bug2v
                            g$invoke-code$10539$1Bug2v)))
                       g$export-env$10535$1Bug2v
                       g$export-subst$10534$1Bug2v
                       g$visit-code$10533$1Bug2v
                       g$invoke-code$10532$1Bug2v
                       g$visit-req*$10531$1Bug2v
                       g$invoke-req*$10530$1Bug2v
                       g$imp*$10529$1Bug2v))))))
              g$b*$10519$1Bug2v
              g$imp*$10518$1Bug2v)))))))
   (g$8759$7593$1Bug2v
     g$8759$11053$1Bug2v
     (make-record-type-descriptor
       'env
       '#f
       'g$8762$1Bug2v
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$8761$7594$1Bug2v g$8761$11054$1Bug2v '#f)
   (g$8760$7595$1Bug2v
     g$8760$11055$1Bug2v
     (make-record-constructor-descriptor
       g$8759$7593$1Bug2v
       '#f
       g$8761$7594$1Bug2v))
   (g$env?$7596$1Bug2v
     g$env?$11056$1Bug2v
     (record-predicate g$8759$7593$1Bug2v))
   (g$make-env$7597$1Bug2v
     g$make-env$11057$1Bug2v
     (record-constructor g$8760$7595$1Bug2v))
   (g$env-names$7598$1Bug2v
     g$env-names$11058$1Bug2v
     (record-accessor g$8759$7593$1Bug2v '0))
   (g$env-labels$7599$1Bug2v
     g$env-labels$11059$1Bug2v
     (record-accessor g$8759$7593$1Bug2v '1))
   (g$env-itc$7600$1Bug2v
     g$env-itc$11060$1Bug2v
     (record-accessor g$8759$7593$1Bug2v '2))
   (g$set-env-names!$7601$1Bug2v
     g$set-env-names!$11061$1Bug2v
     (record-mutator g$8759$7593$1Bug2v '0))
   (g$set-env-labels!$7602$1Bug2v
     g$set-env-labels!$11062$1Bug2v
     (record-mutator g$8759$7593$1Bug2v '1))
   (g$set-env-itc!$7603$1Bug2v
     g$set-env-itc!$11063$1Bug2v
     (record-mutator g$8759$7593$1Bug2v '2))
   (g$rp$7604$1Bug2v
     g$rp$11064$1Bug2v
     (make-record-printer
       'env
       (case-lambda
         ((g$x$10543$1Bug2v g$p$10544$1Bug2v)
          (display '"#<environment>" g$p$10544$1Bug2v)))))
   (g$8778$7605$1Bug2v
     g$8778$11065$1Bug2v
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$8781$1Bug2v
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$8780$7606$1Bug2v g$8780$11066$1Bug2v '#f)
   (g$8779$7607$1Bug2v
     g$8779$11067$1Bug2v
     (make-record-constructor-descriptor
       g$8778$7605$1Bug2v
       '#f
       g$8780$7606$1Bug2v))
   (g$interaction-env?$7608$1Bug2v
     g$interaction-env?$11068$1Bug2v
     (record-predicate g$8778$7605$1Bug2v))
   (g$make-interaction-env$7609$1Bug2v
     g$make-interaction-env$11069$1Bug2v
     (record-constructor g$8779$7607$1Bug2v))
   (g$interaction-env-rib$7610$1Bug2v
     g$interaction-env-rib$11070$1Bug2v
     (record-accessor g$8778$7605$1Bug2v '0))
   (g$interaction-env-r$7611$1Bug2v
     g$interaction-env-r$11071$1Bug2v
     (record-accessor g$8778$7605$1Bug2v '1))
   (g$interaction-env-locs$7612$1Bug2v
     g$interaction-env-locs$11072$1Bug2v
     (record-accessor g$8778$7605$1Bug2v '2))
   (g$set-interaction-env-rib!$7613$1Bug2v
     g$set-interaction-env-rib!$11073$1Bug2v
     (record-mutator g$8778$7605$1Bug2v '0))
   (g$set-interaction-env-r!$7614$1Bug2v
     g$set-interaction-env-r!$11074$1Bug2v
     (record-mutator g$8778$7605$1Bug2v '1))
   (g$set-interaction-env-locs!$7615$1Bug2v
     g$set-interaction-env-locs!$11075$1Bug2v
     (record-mutator g$8778$7605$1Bug2v '2))
   (g$rp$7616$1Bug2v
     g$rp$11076$1Bug2v
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$10545$1Bug2v g$p$10546$1Bug2v)
          (display '"#<environment>" g$p$10546$1Bug2v)))))
   (g$interaction-environment-symbols$7617$1Bug2v
     g$interaction-environment-symbols$11077$1Bug2v
     (case-lambda
       (()
        (g$environment-symbols$7621$1Bug2v
          (g$interaction-environment$7649$1Bug2v)))))
   (g$environment-bindings$7618$1Bug2v
     g$environment-bindings$11078$1Bug2v
     (case-lambda
       ((g$e$10547$1Bug2v)
        (vector->list
          (vector-map
            (case-lambda
              ((g$name$10548$1Bug2v g$label$10549$1Bug2v)
               (g$parse-binding$7619$1Bug2v
                 (cons
                   g$name$10548$1Bug2v
                   (g$imported-label->binding$7068$1Bug2v
                     g$label$10549$1Bug2v)))))
            (g$env-names$7598$1Bug2v g$e$10547$1Bug2v)
            (g$env-labels$7599$1Bug2v g$e$10547$1Bug2v))))))
   (g$parse-binding$7619$1Bug2v
     g$parse-binding$11079$1Bug2v
     (case-lambda
       ((g$b$10550$1Bug2v)
        (cons
          (car g$b$10550$1Bug2v)
          ((case-lambda
             ((g$t$10551$1Bug2v)
              (if (g$memv$4955$1Bug2v g$t$10551$1Bug2v '(core-prim global))
                'procedure
                (if (g$memv$4955$1Bug2v
                      g$t$10551$1Bug2v
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$4955$1Bug2v g$t$10551$1Bug2v '($core-rtd))
                    'record
                    (if (eq? (car g$b$10550$1Bug2v)
                             (g$cadr$5124$1Bug2v g$b$10550$1Bug2v))
                      'syntax
                      'unknown))))))
           (g$cadr$5124$1Bug2v g$b$10550$1Bug2v))))))
   (g$environment?$7620$1Bug2v
     g$environment?$11080$1Bug2v
     (case-lambda
       ((g$x$10552$1Bug2v)
        ((case-lambda
           ((g$t$10553$1Bug2v)
            (if g$t$10553$1Bug2v
              g$t$10553$1Bug2v
              (begin '#f (g$interaction-env?$7608$1Bug2v g$x$10552$1Bug2v)))))
         (g$env?$7596$1Bug2v g$x$10552$1Bug2v)))))
   (g$environment-symbols$7621$1Bug2v
     g$environment-symbols$11081$1Bug2v
     (case-lambda
       ((g$x$10554$1Bug2v)
        (if (g$env?$7596$1Bug2v g$x$10554$1Bug2v)
          (vector->list (g$env-names$7598$1Bug2v g$x$10554$1Bug2v))
          (if (g$interaction-env?$7608$1Bug2v g$x$10554$1Bug2v)
            (map values
                 (g$rib-sym*$7209$1Bug2v
                   (g$interaction-env-rib$7610$1Bug2v g$x$10554$1Bug2v)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$10554$1Bug2v))))))
   (g$environment$7622$1Bug2v
     g$environment$11082$1Bug2v
     (case-lambda
       (g$imp*$10555$1Bug2v
        ((case-lambda
           ((g$itc$10556$1Bug2v)
            ((case-lambda
               ((g$imp-collector$10559$1Bug2v g$imp-collector$10560$1Bug2v)
                ((case-lambda
                   ((g$swap$10561$1Bug2v)
                    (dynamic-wind
                      g$swap$10561$1Bug2v
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$7581$1Bug2v
                                g$imp*$10555$1Bug2v)))
                           (case-lambda
                             ((g$subst-names$10564$1Bug2v
                                g$subst-labels$10565$1Bug2v)
                              ((case-lambda
                                 ((g$subst-labels$10566$1Bug2v
                                    g$subst-names$10567$1Bug2v)
                                  (g$make-env$7597$1Bug2v
                                    g$subst-names$10567$1Bug2v
                                    g$subst-labels$10566$1Bug2v
                                    g$itc$10556$1Bug2v)))
                               g$subst-labels$10565$1Bug2v
                               g$subst-names$10564$1Bug2v))))))
                      g$swap$10561$1Bug2v)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$10568$1Bug2v)
                        (begin
                          (g$imp-collector$10559$1Bug2v
                            g$imp-collector$10560$1Bug2v)
                          (set! g$imp-collector$10560$1Bug2v
                            g$t$10568$1Bug2v))))
                     (g$imp-collector$10559$1Bug2v)))))))
             g$imp-collector$7586$1Bug2v
             g$itc$10556$1Bug2v)))
         (g$make-collector$7583$1Bug2v)))))
   (g$null-environment$7623$1Bug2v
     g$null-environment$11083$1Bug2v
     (case-lambda
       ((g$n$10569$1Bug2v)
        (begin
          (if (not (eqv? g$n$10569$1Bug2v '5))
            (assertion-violation 'null-environment '"not 5" g$n$10569$1Bug2v)
            (void))
          (g$environment$7622$1Bug2v '(psyntax null-environment-5))))))
   (g$scheme-report-environment$7624$1Bug2v
     g$scheme-report-environment$11084$1Bug2v
     (case-lambda
       ((g$n$10570$1Bug2v)
        (begin
          (if (not (eqv? g$n$10570$1Bug2v '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$10570$1Bug2v)
            (void))
          (g$environment$7622$1Bug2v '(psyntax scheme-report-environment-5))))))
   (g$expand$7625$1Bug2v
     g$expand$11085$1Bug2v
     (case-lambda
       ((g$x$10571$1Bug2v g$env$10572$1Bug2v)
        (if (g$env?$7596$1Bug2v g$env$10572$1Bug2v)
          ((case-lambda
             ((g$rib$10573$1Bug2v)
              ((case-lambda
                 ((g$x$10574$1Bug2v
                    g$itc$10575$1Bug2v
                    g$rtc$10576$1Bug2v
                    g$vtc$10577$1Bug2v)
                  ((case-lambda
                     ((g$x$10578$1Bug2v)
                      (begin
                        (g$seal-rib!$7220$1Bug2v g$rib$10573$1Bug2v)
                        (values g$x$10578$1Bug2v (g$rtc$10576$1Bug2v)))))
                   ((case-lambda
                      ((g$inv-collector$10585$1Bug2v
                         g$vis-collector$10586$1Bug2v
                         g$imp-collector$10587$1Bug2v
                         g$inv-collector$10588$1Bug2v
                         g$vis-collector$10589$1Bug2v
                         g$imp-collector$10590$1Bug2v)
                       ((case-lambda
                          ((g$swap$10591$1Bug2v)
                           (dynamic-wind
                             g$swap$10591$1Bug2v
                             (case-lambda
                               (()
                                (g$chi-expr$7550$1Bug2v
                                  g$x$10574$1Bug2v
                                  '()
                                  '())))
                             g$swap$10591$1Bug2v)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$10592$1Bug2v)
                                 (begin
                                   (g$inv-collector$10585$1Bug2v
                                     g$inv-collector$10588$1Bug2v)
                                   (set! g$inv-collector$10588$1Bug2v
                                     g$t$10592$1Bug2v))))
                              (g$inv-collector$10585$1Bug2v))
                             ((case-lambda
                                ((g$t$10593$1Bug2v)
                                 (begin
                                   (g$vis-collector$10586$1Bug2v
                                     g$vis-collector$10589$1Bug2v)
                                   (set! g$vis-collector$10589$1Bug2v
                                     g$t$10593$1Bug2v))))
                              (g$vis-collector$10586$1Bug2v))
                             ((case-lambda
                                ((g$t$10594$1Bug2v)
                                 (begin
                                   (g$imp-collector$10587$1Bug2v
                                     g$imp-collector$10590$1Bug2v)
                                   (set! g$imp-collector$10590$1Bug2v
                                     g$t$10594$1Bug2v))))
                              (g$imp-collector$10587$1Bug2v))))))))
                    g$inv-collector$7584$1Bug2v
                    g$vis-collector$7585$1Bug2v
                    g$imp-collector$7586$1Bug2v
                    g$rtc$10576$1Bug2v
                    g$vtc$10577$1Bug2v
                    g$itc$10575$1Bug2v))))
               (g$make-stx$7227$1Bug2v
                 g$x$10571$1Bug2v
                 g$top-mark*$7196$1Bug2v
                 (list g$rib$10573$1Bug2v)
                 '())
               (g$env-itc$7600$1Bug2v g$env$10572$1Bug2v)
               (g$make-collector$7583$1Bug2v)
               (g$make-collector$7583$1Bug2v))))
           (g$make-top-rib$7582$1Bug2v
             (g$env-names$7598$1Bug2v g$env$10572$1Bug2v)
             (g$env-labels$7599$1Bug2v g$env$10572$1Bug2v)))
          (if (g$interaction-env?$7608$1Bug2v g$env$10572$1Bug2v)
            ((case-lambda
               ((g$rib$10595$1Bug2v g$r$10596$1Bug2v g$rtc$10597$1Bug2v)
                ((case-lambda
                   ((g$x$10598$1Bug2v)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$10609$1Bug2v
                               g$inv-collector$10610$1Bug2v
                               g$vis-collector$10611$1Bug2v
                               g$imp-collector$10612$1Bug2v
                               g$top-level-context$10613$1Bug2v
                               g$inv-collector$10614$1Bug2v
                               g$vis-collector$10615$1Bug2v
                               g$imp-collector$10616$1Bug2v)
                             ((case-lambda
                                ((g$swap$10617$1Bug2v)
                                 (dynamic-wind
                                   g$swap$10617$1Bug2v
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$7588$1Bug2v
                                        g$x$10598$1Bug2v
                                        g$rib$10595$1Bug2v
                                        g$r$10596$1Bug2v)))
                                   g$swap$10617$1Bug2v)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$10618$1Bug2v)
                                       (begin
                                         (g$top-level-context$10609$1Bug2v
                                           g$top-level-context$10613$1Bug2v)
                                         (set! g$top-level-context$10613$1Bug2v
                                           g$t$10618$1Bug2v))))
                                    (g$top-level-context$10609$1Bug2v))
                                   ((case-lambda
                                      ((g$t$10619$1Bug2v)
                                       (begin
                                         (g$inv-collector$10610$1Bug2v
                                           g$inv-collector$10614$1Bug2v)
                                         (set! g$inv-collector$10614$1Bug2v
                                           g$t$10619$1Bug2v))))
                                    (g$inv-collector$10610$1Bug2v))
                                   ((case-lambda
                                      ((g$t$10620$1Bug2v)
                                       (begin
                                         (g$vis-collector$10611$1Bug2v
                                           g$vis-collector$10615$1Bug2v)
                                         (set! g$vis-collector$10615$1Bug2v
                                           g$t$10620$1Bug2v))))
                                    (g$vis-collector$10611$1Bug2v))
                                   ((case-lambda
                                      ((g$t$10621$1Bug2v)
                                       (begin
                                         (g$imp-collector$10612$1Bug2v
                                           g$imp-collector$10616$1Bug2v)
                                         (set! g$imp-collector$10616$1Bug2v
                                           g$t$10621$1Bug2v))))
                                    (g$imp-collector$10612$1Bug2v))))))))
                          g$top-level-context$7650$1Bug2v
                          g$inv-collector$7584$1Bug2v
                          g$vis-collector$7585$1Bug2v
                          g$imp-collector$7586$1Bug2v
                          g$env$10572$1Bug2v
                          g$rtc$10597$1Bug2v
                          (g$make-collector$7583$1Bug2v)
                          (g$make-collector$7583$1Bug2v))))
                      (case-lambda
                        ((g$e$10622$1Bug2v g$r^$10623$1Bug2v)
                         ((case-lambda
                            ((g$r^$10624$1Bug2v g$e$10625$1Bug2v)
                             (begin
                               (g$set-interaction-env-r!$7614$1Bug2v
                                 g$env$10572$1Bug2v
                                 g$r^$10624$1Bug2v)
                               (values g$e$10625$1Bug2v (g$rtc$10597$1Bug2v)))))
                          g$r^$10623$1Bug2v
                          g$e$10622$1Bug2v))))))
                 (g$make-stx$7227$1Bug2v
                   g$x$10571$1Bug2v
                   g$top-mark*$7196$1Bug2v
                   (list g$rib$10595$1Bug2v)
                   '()))))
             (g$interaction-env-rib$7610$1Bug2v g$env$10572$1Bug2v)
             (g$interaction-env-r$7611$1Bug2v g$env$10572$1Bug2v)
             (g$make-collector$7583$1Bug2v))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$10572$1Bug2v))))))
   (g$eval$7626$1Bug2v
     g$eval$11086$1Bug2v
     (case-lambda
       ((g$x$10626$1Bug2v g$env$10627$1Bug2v)
        (begin
          (if (not (g$environment?$7620$1Bug2v g$env$10627$1Bug2v))
            (error 'eval '"not an environment" g$env$10627$1Bug2v)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$7625$1Bug2v g$x$10626$1Bug2v g$env$10627$1Bug2v)))
            (case-lambda
              ((g$x$10630$1Bug2v g$invoke-req*$10631$1Bug2v)
               ((case-lambda
                  ((g$invoke-req*$10632$1Bug2v g$x$10633$1Bug2v)
                   (begin
                     (for-each
                       g$invoke-library$7069$1Bug2v
                       g$invoke-req*$10632$1Bug2v)
                     (eval-core
                       (g$expanded->core$6768$1Bug2v g$x$10633$1Bug2v)))))
                g$invoke-req*$10631$1Bug2v
                g$x$10630$1Bug2v))))))))
   (g$library-expander$7627$1Bug2v
     g$library-expander$11087$1Bug2v
     (case-lambda
       ((g$x$10634$1Bug2v g$filename$10635$1Bug2v g$verify-name$10636$1Bug2v)
        (letrec* ((g$build-visit-code$10637$1Bug2v
                    (case-lambda
                      ((g$macro*$10680$1Bug2v)
                       (if (null? g$macro*$10680$1Bug2v)
                         (g$build-void$7189$1Bug2v)
                         (g$build-sequence$7188$1Bug2v
                           '#f
                           (map (case-lambda
                                  ((g$x$10681$1Bug2v)
                                   ((case-lambda
                                      ((g$loc$10682$1Bug2v g$src$10683$1Bug2v)
                                       (list
                                         'set!
                                         g$loc$10682$1Bug2v
                                         g$src$10683$1Bug2v)))
                                    (car g$x$10681$1Bug2v)
                                    (g$cddr$5126$1Bug2v g$x$10681$1Bug2v))))
                                g$macro*$10680$1Bug2v))))))
                  (g$visit!$10638$1Bug2v
                    (case-lambda
                      ((g$macro*$10676$1Bug2v)
                       (for-each
                         (case-lambda
                           ((g$x$10677$1Bug2v)
                            ((case-lambda
                               ((g$loc$10678$1Bug2v g$proc$10679$1Bug2v)
                                (set-symbol-value!
                                  g$loc$10678$1Bug2v
                                  g$proc$10679$1Bug2v)))
                             (car g$x$10677$1Bug2v)
                             (g$cadr$5124$1Bug2v g$x$10677$1Bug2v))))
                         g$macro*$10676$1Bug2v)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$7590$1Bug2v
                 g$x$10634$1Bug2v
                 g$verify-name$10636$1Bug2v)))
            (case-lambda
              ((g$name$10648$1Bug2v
                 g$ver$10649$1Bug2v
                 g$imp*$10650$1Bug2v
                 g$inv*$10651$1Bug2v
                 g$vis*$10652$1Bug2v
                 g$invoke-code$10653$1Bug2v
                 g$macro*$10654$1Bug2v
                 g$export-subst$10655$1Bug2v
                 g$export-env$10656$1Bug2v)
               ((case-lambda
                  ((g$export-env$10657$1Bug2v
                     g$export-subst$10658$1Bug2v
                     g$macro*$10659$1Bug2v
                     g$invoke-code$10660$1Bug2v
                     g$vis*$10661$1Bug2v
                     g$inv*$10662$1Bug2v
                     g$imp*$10663$1Bug2v
                     g$ver$10664$1Bug2v
                     g$name$10665$1Bug2v)
                   ((case-lambda
                      ((g$id$10666$1Bug2v
                         g$name$10667$1Bug2v
                         g$ver$10668$1Bug2v
                         g$imp*$10669$1Bug2v
                         g$vis*$10670$1Bug2v
                         g$inv*$10671$1Bug2v
                         g$visit-proc$10672$1Bug2v
                         g$invoke-proc$10673$1Bug2v
                         g$visit-code$10674$1Bug2v
                         g$invoke-code$10675$1Bug2v)
                       (begin
                         (g$install-library$7067$1Bug2v
                           g$id$10666$1Bug2v
                           g$name$10667$1Bug2v
                           g$ver$10668$1Bug2v
                           g$imp*$10669$1Bug2v
                           g$vis*$10670$1Bug2v
                           g$inv*$10671$1Bug2v
                           g$export-subst$10658$1Bug2v
                           g$export-env$10657$1Bug2v
                           g$visit-proc$10672$1Bug2v
                           g$invoke-proc$10673$1Bug2v
                           g$visit-code$10674$1Bug2v
                           g$invoke-code$10675$1Bug2v
                           '#t
                           g$filename$10635$1Bug2v)
                         (values
                           g$id$10666$1Bug2v
                           g$name$10667$1Bug2v
                           g$ver$10668$1Bug2v
                           g$imp*$10669$1Bug2v
                           g$vis*$10670$1Bug2v
                           g$inv*$10671$1Bug2v
                           g$invoke-code$10675$1Bug2v
                           g$visit-code$10674$1Bug2v
                           g$export-subst$10658$1Bug2v
                           g$export-env$10657$1Bug2v))))
                    (gensym)
                    g$name$10665$1Bug2v
                    g$ver$10664$1Bug2v
                    (map g$library-spec$7073$1Bug2v g$imp*$10663$1Bug2v)
                    (map g$library-spec$7073$1Bug2v g$vis*$10661$1Bug2v)
                    (map g$library-spec$7073$1Bug2v g$inv*$10662$1Bug2v)
                    (case-lambda
                      (() (g$visit!$10638$1Bug2v g$macro*$10659$1Bug2v)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$6768$1Bug2v
                           g$invoke-code$10660$1Bug2v))))
                    (g$build-visit-code$10637$1Bug2v g$macro*$10659$1Bug2v)
                    g$invoke-code$10660$1Bug2v)))
                g$export-env$10656$1Bug2v
                g$export-subst$10655$1Bug2v
                g$macro*$10654$1Bug2v
                g$invoke-code$10653$1Bug2v
                g$vis*$10652$1Bug2v
                g$inv*$10651$1Bug2v
                g$imp*$10650$1Bug2v
                g$ver$10649$1Bug2v
                g$name$10648$1Bug2v))))))
       ((g$x$10684$1Bug2v g$filename$10685$1Bug2v)
        (g$library-expander$7627$1Bug2v
          g$x$10684$1Bug2v
          g$filename$10685$1Bug2v
          (case-lambda ((g$x$10686$1Bug2v) (values)))))
       ((g$x$10687$1Bug2v)
        (g$library-expander$7627$1Bug2v
          g$x$10687$1Bug2v
          '#f
          (case-lambda ((g$x$10688$1Bug2v) (values)))))))
   (g$boot-library-expand$7628$1Bug2v
     g$boot-library-expand$11088$1Bug2v
     (case-lambda
       ((g$x$10689$1Bug2v)
        (call-with-values
          (case-lambda (() (g$library-expander$7627$1Bug2v g$x$10689$1Bug2v)))
          (case-lambda
            ((g$id$10700$1Bug2v
               g$name$10701$1Bug2v
               g$ver$10702$1Bug2v
               g$imp*$10703$1Bug2v
               g$vis*$10704$1Bug2v
               g$inv*$10705$1Bug2v
               g$invoke-code$10706$1Bug2v
               g$visit-code$10707$1Bug2v
               g$export-subst$10708$1Bug2v
               g$export-env$10709$1Bug2v)
             ((case-lambda
                ((g$export-env$10710$1Bug2v
                   g$export-subst$10711$1Bug2v
                   g$visit-code$10712$1Bug2v
                   g$invoke-code$10713$1Bug2v
                   g$inv*$10714$1Bug2v
                   g$vis*$10715$1Bug2v
                   g$imp*$10716$1Bug2v
                   g$ver$10717$1Bug2v
                   g$name$10718$1Bug2v
                   g$id$10719$1Bug2v)
                 (values
                   g$name$10718$1Bug2v
                   g$invoke-code$10713$1Bug2v
                   g$export-subst$10711$1Bug2v
                   g$export-env$10710$1Bug2v)))
              g$export-env$10709$1Bug2v
              g$export-subst$10708$1Bug2v
              g$visit-code$10707$1Bug2v
              g$invoke-code$10706$1Bug2v
              g$inv*$10705$1Bug2v
              g$vis*$10704$1Bug2v
              g$imp*$10703$1Bug2v
              g$ver$10702$1Bug2v
              g$name$10701$1Bug2v
              g$id$10700$1Bug2v)))))))
   (g$rev-map-append$7629$1Bug2v
     g$rev-map-append$11089$1Bug2v
     (case-lambda
       ((g$f$10720$1Bug2v g$ls$10721$1Bug2v g$ac$10722$1Bug2v)
        (if (null? g$ls$10721$1Bug2v)
          g$ac$10722$1Bug2v
          (g$rev-map-append$7629$1Bug2v
            g$f$10720$1Bug2v
            (cdr g$ls$10721$1Bug2v)
            (cons
              (g$f$10720$1Bug2v (car g$ls$10721$1Bug2v))
              g$ac$10722$1Bug2v))))))
   (g$build-exports$7630$1Bug2v
     g$build-exports$11090$1Bug2v
     (case-lambda
       ((g$lex*+loc*$10723$1Bug2v g$init*$10724$1Bug2v)
        (g$build-sequence$7188$1Bug2v
          '#f
          (cons
            (g$build-void$7189$1Bug2v)
            (g$rev-map-append$7629$1Bug2v
              (case-lambda
                ((g$x$10725$1Bug2v)
                 (list 'set! (cdr g$x$10725$1Bug2v) (car g$x$10725$1Bug2v))))
              g$lex*+loc*$10723$1Bug2v
              g$init*$10724$1Bug2v))))))
   (g$make-export-subst$7631$1Bug2v
     g$make-export-subst$11091$1Bug2v
     (case-lambda
       ((g$name*$10726$1Bug2v g$id*$10727$1Bug2v)
        (map (case-lambda
               ((g$name$10728$1Bug2v g$id$10729$1Bug2v)
                ((case-lambda
                   ((g$label$10730$1Bug2v)
                    (begin
                      (if (not g$label$10730$1Bug2v)
                        (g$syntax-violation$7643$1Bug2v
                          '#f
                          '"cannot export unbound identifier"
                          g$id$10729$1Bug2v)
                        (void))
                      (cons g$name$10728$1Bug2v g$label$10730$1Bug2v))))
                 (g$id->label$7267$1Bug2v g$id$10729$1Bug2v))))
             g$name*$10726$1Bug2v
             g$id*$10727$1Bug2v))))
   (g$make-export-env/macros$7632$1Bug2v
     g$make-export-env/macros$11092$1Bug2v
     (case-lambda
       ((g$lex*$10731$1Bug2v g$loc*$10732$1Bug2v g$r$10733$1Bug2v)
        (letrec* ((g$lookup$10734$1Bug2v
                    (case-lambda
                      ((g$x$10749$1Bug2v)
                       ((letrec ((g$f$10750$1Bug2v
                                   (case-lambda
                                     ((g$x$10751$1Bug2v
                                        g$lex*$10752$1Bug2v
                                        g$loc*$10753$1Bug2v)
                                      (if (pair? g$lex*$10752$1Bug2v)
                                        (if (eq? g$x$10751$1Bug2v
                                                 (car g$lex*$10752$1Bug2v))
                                          (car g$loc*$10753$1Bug2v)
                                          (g$f$10750$1Bug2v
                                            g$x$10751$1Bug2v
                                            (cdr g$lex*$10752$1Bug2v)
                                            (cdr g$loc*$10753$1Bug2v)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$10750$1Bug2v)
                        g$x$10749$1Bug2v
                        g$lex*$10731$1Bug2v
                        g$loc*$10732$1Bug2v)))))
          ((letrec ((g$f$10735$1Bug2v
                      (case-lambda
                        ((g$r$10736$1Bug2v
                           g$env$10737$1Bug2v
                           g$global*$10738$1Bug2v
                           g$macro*$10739$1Bug2v)
                         (if (null? g$r$10736$1Bug2v)
                           (values
                             g$env$10737$1Bug2v
                             g$global*$10738$1Bug2v
                             g$macro*$10739$1Bug2v)
                           ((case-lambda
                              ((g$x$10740$1Bug2v)
                               ((case-lambda
                                  ((g$label$10741$1Bug2v g$b$10742$1Bug2v)
                                   ((case-lambda
                                      ((g$t$10743$1Bug2v)
                                       (if (g$memv$4955$1Bug2v
                                             g$t$10743$1Bug2v
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$10744$1Bug2v)
                                             ((case-lambda
                                                ((g$loc$10745$1Bug2v
                                                   g$type$10746$1Bug2v)
                                                 (g$f$10735$1Bug2v
                                                   (cdr g$r$10736$1Bug2v)
                                                   (cons
                                                     (g$cons*$4962$1Bug2v
                                                       g$label$10741$1Bug2v
                                                       g$type$10746$1Bug2v
                                                       g$loc$10745$1Bug2v)
                                                     g$env$10737$1Bug2v)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$7476$1Bug2v
                                                         g$v$10744$1Bug2v)
                                                       g$loc$10745$1Bug2v)
                                                     g$global*$10738$1Bug2v)
                                                   g$macro*$10739$1Bug2v)))
                                              (g$lookup$10734$1Bug2v
                                                (g$lexical-var$7476$1Bug2v
                                                  g$v$10744$1Bug2v))
                                              (if (g$lexical-mutable?$7477$1Bug2v
                                                    g$v$10744$1Bug2v)
                                                'mutable
                                                'global))))
                                          (g$binding-value$7272$1Bug2v
                                            g$b$10742$1Bug2v))
                                         (if (g$memv$4955$1Bug2v
                                               g$t$10743$1Bug2v
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$10747$1Bug2v)
                                               (g$f$10735$1Bug2v
                                                 (cdr g$r$10736$1Bug2v)
                                                 (cons
                                                   (g$cons*$4962$1Bug2v
                                                     g$label$10741$1Bug2v
                                                     'global-macro
                                                     g$loc$10747$1Bug2v)
                                                   g$env$10737$1Bug2v)
                                                 g$global*$10738$1Bug2v
                                                 (cons
                                                   (cons
                                                     g$loc$10747$1Bug2v
                                                     (g$binding-value$7272$1Bug2v
                                                       g$b$10742$1Bug2v))
                                                   g$macro*$10739$1Bug2v))))
                                            (gensym))
                                           (if (g$memv$4955$1Bug2v
                                                 g$t$10743$1Bug2v
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$10748$1Bug2v)
                                                 (g$f$10735$1Bug2v
                                                   (cdr g$r$10736$1Bug2v)
                                                   (cons
                                                     (g$cons*$4962$1Bug2v
                                                       g$label$10741$1Bug2v
                                                       'global-macro!
                                                       g$loc$10748$1Bug2v)
                                                     g$env$10737$1Bug2v)
                                                   g$global*$10738$1Bug2v
                                                   (cons
                                                     (cons
                                                       g$loc$10748$1Bug2v
                                                       (g$binding-value$7272$1Bug2v
                                                         g$b$10742$1Bug2v))
                                                     g$macro*$10739$1Bug2v))))
                                              (gensym))
                                             (if (g$memv$4955$1Bug2v
                                                   g$t$10743$1Bug2v
                                                   '($rtd $module))
                                               (g$f$10735$1Bug2v
                                                 (cdr g$r$10736$1Bug2v)
                                                 (cons
                                                   g$x$10740$1Bug2v
                                                   g$env$10737$1Bug2v)
                                                 g$global*$10738$1Bug2v
                                                 g$macro*$10739$1Bug2v)
                                               (assertion-violation
                                                 'expander
                                                 '"BUG: do not know how to export"
                                                 (g$binding-type$7271$1Bug2v
                                                   g$b$10742$1Bug2v)
                                                 (g$binding-value$7272$1Bug2v
                                                   g$b$10742$1Bug2v))))))))
                                    (g$binding-type$7271$1Bug2v
                                      g$b$10742$1Bug2v))))
                                (car g$x$10740$1Bug2v)
                                (cdr g$x$10740$1Bug2v))))
                            (car g$r$10736$1Bug2v)))))))
             g$f$10735$1Bug2v)
           g$r$10733$1Bug2v
           '()
           '()
           '())))))
   (g$generate-temporaries$7633$1Bug2v
     g$generate-temporaries$11093$1Bug2v
     (case-lambda
       ((g$ls$10754$1Bug2v)
        ((case-lambda
           ((g$t$10755$1Bug2v)
            ((case-lambda
               ((g$ls/false$10756$1Bug2v)
                (if g$ls/false$10756$1Bug2v
                  (apply
                    (case-lambda
                      ((g$ls$10757$1Bug2v)
                       (map (case-lambda
                              ((g$x$10758$1Bug2v)
                               (g$make-stx$7227$1Bug2v
                                 ((case-lambda
                                    ((g$x$10759$1Bug2v)
                                     (if ((case-lambda
                                            ((g$t$10760$1Bug2v)
                                             (if g$t$10760$1Bug2v
                                               g$t$10760$1Bug2v
                                               (begin
                                                 '#f
                                                 (string? g$x$10759$1Bug2v)))))
                                          (symbol? g$x$10759$1Bug2v))
                                       (gensym g$x$10759$1Bug2v)
                                       (gensym 't))))
                                  (g$syntax->datum$7646$1Bug2v
                                    g$x$10758$1Bug2v))
                                 g$top-mark*$7196$1Bug2v
                                 '()
                                 '())))
                            g$ls$10757$1Bug2v)))
                    g$ls/false$10756$1Bug2v)
                  ((case-lambda
                     ((g$t$10761$1Bug2v)
                      ((case-lambda
                         ((g$ls/false$10762$1Bug2v)
                          (if g$ls/false$10762$1Bug2v
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$10762$1Bug2v)
                            (g$syntax-violation$7643$1Bug2v
                              '#f
                              '"invalid syntax"
                              g$t$10761$1Bug2v))))
                       (g$syntax-dispatch$7532$1Bug2v g$t$10761$1Bug2v '_))))
                   g$t$10755$1Bug2v))))
             (g$syntax-dispatch$7532$1Bug2v g$t$10755$1Bug2v 'each-any))))
         g$ls$10754$1Bug2v))))
   (g$free-identifier=?$7634$1Bug2v
     g$free-identifier=?$11094$1Bug2v
     (case-lambda
       ((g$x$10763$1Bug2v g$y$10764$1Bug2v)
        (if (g$id?$7254$1Bug2v g$x$10763$1Bug2v)
          (if (g$id?$7254$1Bug2v g$y$10764$1Bug2v)
            (g$free-id=?$7258$1Bug2v g$x$10763$1Bug2v g$y$10764$1Bug2v)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$10764$1Bug2v))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$10763$1Bug2v)))))
   (g$bound-identifier=?$7635$1Bug2v
     g$bound-identifier=?$11095$1Bug2v
     (case-lambda
       ((g$x$10765$1Bug2v g$y$10766$1Bug2v)
        (if (g$id?$7254$1Bug2v g$x$10765$1Bug2v)
          (if (g$id?$7254$1Bug2v g$y$10766$1Bug2v)
            (g$bound-id=?$7257$1Bug2v g$x$10765$1Bug2v g$y$10766$1Bug2v)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$10766$1Bug2v))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$10765$1Bug2v)))))
   (g$make-source-condition$7636$1Bug2v
     g$make-source-condition$11096$1Bug2v
     (case-lambda
       ((g$x$10767$1Bug2v)
        (letrec* ((g$11679$10768$1Bug2v
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$11682$1Bug2v
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$11681$10769$1Bug2v '#f)
                  (g$11680$10770$1Bug2v
                    (make-record-constructor-descriptor
                      g$11679$10768$1Bug2v
                      &condition-rcd
                      g$11681$10769$1Bug2v))
                  (g$11678$10771$1Bug2v (record-predicate g$11679$10768$1Bug2v))
                  (g$make-source-condition$10772$1Bug2v
                    (record-constructor g$11680$10770$1Bug2v))
                  (g$11676$10773$1Bug2v
                    (record-accessor g$11679$10768$1Bug2v '0))
                  (g$11677$10774$1Bug2v
                    (record-accessor g$11679$10768$1Bug2v '1))
                  (g$source-condition?$10775$1Bug2v
                    (condition-predicate g$11679$10768$1Bug2v))
                  (g$source-filename$10776$1Bug2v
                    (condition-accessor
                      g$11679$10768$1Bug2v
                      g$11676$10773$1Bug2v))
                  (g$source-character$10777$1Bug2v
                    (condition-accessor
                      g$11679$10768$1Bug2v
                      g$11677$10774$1Bug2v)))
          (if (pair? g$x$10767$1Bug2v)
            (g$make-source-condition$10772$1Bug2v
              (car g$x$10767$1Bug2v)
              (cdr g$x$10767$1Bug2v))
            (condition))))))
   (g$extract-position-condition$7637$1Bug2v
     g$extract-position-condition$11097$1Bug2v
     (case-lambda
       ((g$x$10778$1Bug2v)
        (g$make-source-condition$7636$1Bug2v
          (g$expression-position$7638$1Bug2v g$x$10778$1Bug2v)))))
   (g$expression-position$7638$1Bug2v
     g$expression-position$11098$1Bug2v
     (case-lambda
       ((g$x$10779$1Bug2v)
        (if (g$stx?$7226$1Bug2v g$x$10779$1Bug2v)
          (begin
            '#f
            ((case-lambda
               ((g$x$10780$1Bug2v)
                (if (annotation? g$x$10780$1Bug2v)
                  (begin '#f (annotation-source g$x$10780$1Bug2v))
                  '#f)))
             (g$stx-expr$7228$1Bug2v g$x$10779$1Bug2v)))
          '#f))))
   (g$assertion-error$7639$1Bug2v
     g$assertion-error$11099$1Bug2v
     (case-lambda
       ((g$expr$10781$1Bug2v g$pos$10782$1Bug2v)
        (raise
          (condition
            (g$make-assertion-violation$5698$1Bug2v)
            (g$make-who-condition$5712$1Bug2v 'assert)
            (g$make-message-condition$5666$1Bug2v '"assertion failed")
            (g$make-irritants-condition$5704$1Bug2v (list g$expr$10781$1Bug2v))
            (g$make-source-condition$7636$1Bug2v g$pos$10782$1Bug2v))))))
   (g$syntax-error$7640$1Bug2v
     g$syntax-error$11100$1Bug2v
     (case-lambda
       ((g$x$10783$1Bug2v . g$args$10784$1Bug2v)
        (begin
          (if (not (g$for-all$4960$1Bug2v string? g$args$10784$1Bug2v))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$10784$1Bug2v)
            (void))
          (raise
            (condition
              (g$make-message-condition$5666$1Bug2v
                (if (null? g$args$10784$1Bug2v)
                  '"invalid syntax"
                  (apply string-append g$args$10784$1Bug2v)))
              (g$make-syntax-violation$5738$1Bug2v
                (g$syntax->datum$7646$1Bug2v g$x$10783$1Bug2v)
                '#f)
              (g$extract-position-condition$7637$1Bug2v g$x$10783$1Bug2v)
              (g$extract-trace$7641$1Bug2v g$x$10783$1Bug2v)))))))
   (g$extract-trace$7641$1Bug2v
     g$extract-trace$11101$1Bug2v
     (case-lambda
       ((g$x$10785$1Bug2v)
        (letrec* ((g$11706$10786$1Bug2v
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$11709$1Bug2v
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$11708$10787$1Bug2v '#f)
                  (g$11707$10788$1Bug2v
                    (make-record-constructor-descriptor
                      g$11706$10786$1Bug2v
                      &condition-rcd
                      g$11708$10787$1Bug2v))
                  (g$11705$10789$1Bug2v (record-predicate g$11706$10786$1Bug2v))
                  (g$make-trace$10790$1Bug2v
                    (record-constructor g$11707$10788$1Bug2v))
                  (g$11704$10791$1Bug2v
                    (record-accessor g$11706$10786$1Bug2v '0))
                  (g$trace?$10792$1Bug2v
                    (condition-predicate g$11706$10786$1Bug2v))
                  (g$trace-form$10793$1Bug2v
                    (condition-accessor
                      g$11706$10786$1Bug2v
                      g$11704$10791$1Bug2v)))
          ((letrec ((g$f$10794$1Bug2v
                      (case-lambda
                        ((g$x$10795$1Bug2v)
                         (if (g$stx?$7226$1Bug2v g$x$10795$1Bug2v)
                           (apply
                             condition
                             (g$make-trace$10790$1Bug2v g$x$10795$1Bug2v)
                             (map g$f$10794$1Bug2v
                                  (g$stx-ae*$7231$1Bug2v g$x$10795$1Bug2v)))
                           (if (annotation? g$x$10795$1Bug2v)
                             (g$make-trace$10790$1Bug2v
                               (g$make-stx$7227$1Bug2v
                                 g$x$10795$1Bug2v
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$10794$1Bug2v)
           g$x$10785$1Bug2v)))))
   (g$syntax-violation*$7642$1Bug2v
     g$syntax-violation*$11102$1Bug2v
     (case-lambda
       ((g$who$10796$1Bug2v
          g$msg$10797$1Bug2v
          g$form$10798$1Bug2v
          g$condition-object$10799$1Bug2v)
        (begin
          (if (not (string? g$msg$10797$1Bug2v))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$10797$1Bug2v)
            (void))
          ((case-lambda
             ((g$who$10800$1Bug2v)
              (raise
                (condition
                  (if g$who$10800$1Bug2v
                    (g$make-who-condition$5712$1Bug2v g$who$10800$1Bug2v)
                    (condition))
                  (g$make-message-condition$5666$1Bug2v g$msg$10797$1Bug2v)
                  g$condition-object$10799$1Bug2v
                  (g$extract-position-condition$7637$1Bug2v g$form$10798$1Bug2v)
                  (g$extract-trace$7641$1Bug2v g$form$10798$1Bug2v)))))
           (if ((case-lambda
                  ((g$t$10801$1Bug2v)
                   (if g$t$10801$1Bug2v
                     g$t$10801$1Bug2v
                     (begin '#f (symbol? g$who$10796$1Bug2v)))))
                (string? g$who$10796$1Bug2v))
             g$who$10796$1Bug2v
             (if (not g$who$10796$1Bug2v)
               ((case-lambda
                  ((g$t$10802$1Bug2v)
                   ((case-lambda
                      ((g$ls/false$10803$1Bug2v)
                       (if (if g$ls/false$10803$1Bug2v
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$10804$1Bug2v)
                                    (g$id?$7254$1Bug2v g$id$10804$1Bug2v)))
                                 g$ls/false$10803$1Bug2v))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$10805$1Bug2v)
                              (g$syntax->datum$7646$1Bug2v g$id$10805$1Bug2v)))
                           g$ls/false$10803$1Bug2v)
                         ((case-lambda
                            ((g$t$10806$1Bug2v)
                             ((case-lambda
                                ((g$ls/false$10807$1Bug2v)
                                 (if (if g$ls/false$10807$1Bug2v
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$10808$1Bug2v
                                                g$rest$10809$1Bug2v)
                                              (g$id?$7254$1Bug2v
                                                g$id$10808$1Bug2v)))
                                           g$ls/false$10807$1Bug2v))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$10810$1Bug2v g$rest$10811$1Bug2v)
                                        (g$syntax->datum$7646$1Bug2v
                                          g$id$10810$1Bug2v)))
                                     g$ls/false$10807$1Bug2v)
                                   ((case-lambda
                                      ((g$t$10812$1Bug2v)
                                       ((case-lambda
                                          ((g$ls/false$10813$1Bug2v)
                                           (if g$ls/false$10813$1Bug2v
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$10813$1Bug2v)
                                             (g$syntax-violation$7643$1Bug2v
                                               '#f
                                               '"invalid syntax"
                                               g$t$10812$1Bug2v))))
                                        (g$syntax-dispatch$7532$1Bug2v
                                          g$t$10812$1Bug2v
                                          '_))))
                                    g$t$10806$1Bug2v))))
                              (g$syntax-dispatch$7532$1Bug2v
                                g$t$10806$1Bug2v
                                '(any . any)))))
                          g$t$10802$1Bug2v))))
                    (g$syntax-dispatch$7532$1Bug2v g$t$10802$1Bug2v 'any))))
                g$form$10798$1Bug2v)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$10796$1Bug2v))))))))
   (g$syntax-violation$7643$1Bug2v
     g$syntax-violation$11103$1Bug2v
     (case-lambda
       ((g$who$10814$1Bug2v g$msg$10815$1Bug2v g$form$10816$1Bug2v)
        (g$syntax-violation$7643$1Bug2v
          g$who$10814$1Bug2v
          g$msg$10815$1Bug2v
          g$form$10816$1Bug2v
          '#f))
       ((g$who$10817$1Bug2v
          g$msg$10818$1Bug2v
          g$form$10819$1Bug2v
          g$subform$10820$1Bug2v)
        (g$syntax-violation*$7642$1Bug2v
          g$who$10817$1Bug2v
          g$msg$10818$1Bug2v
          g$form$10819$1Bug2v
          (g$make-syntax-violation$5738$1Bug2v
            (g$syntax->datum$7646$1Bug2v g$form$10819$1Bug2v)
            (g$syntax->datum$7646$1Bug2v g$subform$10820$1Bug2v))))))
   (g$identifier?$7644$1Bug2v
     g$identifier?$11104$1Bug2v
     (case-lambda ((g$x$10821$1Bug2v) (g$id?$7254$1Bug2v g$x$10821$1Bug2v))))
   (g$datum->syntax$7645$1Bug2v
     g$datum->syntax$11105$1Bug2v
     (case-lambda
       ((g$id$10822$1Bug2v g$datum$10823$1Bug2v)
        (if (g$id?$7254$1Bug2v g$id$10822$1Bug2v)
          (g$datum->stx$7237$1Bug2v g$id$10822$1Bug2v g$datum$10823$1Bug2v)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$10822$1Bug2v)))))
   (g$syntax->datum$7646$1Bug2v
     g$syntax->datum$11106$1Bug2v
     (case-lambda
       ((g$x$10824$1Bug2v) (g$stx->datum$7265$1Bug2v g$x$10824$1Bug2v))))
   (g$compile-r6rs-top-level$7647$1Bug2v
     g$compile-r6rs-top-level$11107$1Bug2v
     (case-lambda
       ((g$x*$10825$1Bug2v)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7592$1Bug2v g$x*$10825$1Bug2v)))
          (case-lambda
            ((g$lib*$10828$1Bug2v g$invoke-code$10829$1Bug2v)
             ((case-lambda
                ((g$invoke-code$10830$1Bug2v g$lib*$10831$1Bug2v)
                 (case-lambda
                   (()
                    (begin
                      (for-each
                        g$invoke-library$7069$1Bug2v
                        g$lib*$10831$1Bug2v)
                      (eval-core
                        (g$expanded->core$6768$1Bug2v
                          g$invoke-code$10830$1Bug2v)))))))
              g$invoke-code$10829$1Bug2v
              g$lib*$10828$1Bug2v)))))))
   (g$pre-compile-r6rs-top-level$7648$1Bug2v
     g$pre-compile-r6rs-top-level$11108$1Bug2v
     (case-lambda
       ((g$x*$10832$1Bug2v)
        (call-with-values
          (case-lambda
            (() (g$top-level-expander$7592$1Bug2v g$x*$10832$1Bug2v)))
          (case-lambda
            ((g$lib*$10835$1Bug2v g$invoke-code$10836$1Bug2v)
             ((case-lambda
                ((g$invoke-code$10837$1Bug2v g$lib*$10838$1Bug2v)
                 (begin
                   (for-each g$invoke-library$7069$1Bug2v g$lib*$10838$1Bug2v)
                   (compile-core
                     (g$expanded->core$6768$1Bug2v
                       g$invoke-code$10837$1Bug2v)))))
              g$invoke-code$10836$1Bug2v
              g$lib*$10835$1Bug2v)))))))
   (g$interaction-environment$7649$1Bug2v
     g$interaction-environment$11109$1Bug2v
     ((case-lambda
        ((g$the-env$10839$1Bug2v)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$10840$1Bug2v)
                (if g$t$10840$1Bug2v
                  g$t$10840$1Bug2v
                  (begin
                    '#f
                    ((case-lambda
                       ((g$lib$10841$1Bug2v g$rib$10842$1Bug2v)
                        (begin
                          ((case-lambda
                             ((g$subst$10843$1Bug2v)
                              (begin
                                (g$set-rib-sym*!$7213$1Bug2v
                                  g$rib$10842$1Bug2v
                                  (map car g$subst$10843$1Bug2v))
                                (g$set-rib-mark**!$7214$1Bug2v
                                  g$rib$10842$1Bug2v
                                  (map (case-lambda
                                         ((g$x$10844$1Bug2v)
                                          g$top-mark*$7196$1Bug2v))
                                       g$subst$10843$1Bug2v))
                                (g$set-rib-label*!$7215$1Bug2v
                                  g$rib$10842$1Bug2v
                                  (map cdr g$subst$10843$1Bug2v)))))
                           (g$library-subst$7026$1Bug2v g$lib$10841$1Bug2v))
                          ((case-lambda
                             ((g$env$10845$1Bug2v)
                              (begin
                                (set! g$the-env$10839$1Bug2v g$env$10845$1Bug2v)
                                g$env$10845$1Bug2v)))
                           (g$make-interaction-env$7609$1Bug2v
                             g$rib$10842$1Bug2v
                             '()
                             '())))))
                     (g$find-library-by-name$7062$1Bug2v '(ironscheme))
                     (g$make-empty-rib$7217$1Bug2v))))))
             g$the-env$10839$1Bug2v)))))
      '#f))
   (g$top-level-context$7650$1Bug2v
     g$top-level-context$11110$1Bug2v
     (g$make-parameter$6522$1Bug2v '#f)))
  (g$current-library-expander$7059$1Bug2v g$library-expander$7627$1Bug2v))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$6765$1Bug2v
      (case-lambda
        ((g$x$11163$1Bug2v)
         ((case-lambda
            ((g$t$11164$1Bug2v)
             (if g$t$11164$1Bug2v (cdr g$t$11164$1Bug2v) '#f)))
          (g$assq$4950$1Bug2v
            g$x$11163$1Bug2v
            '((ellipsis-map . g$ellipsis-map$10997$1Bug2v)
              (ironscheme-build . g$ironscheme-build$11156$1Bug2v)
              (syntax-error . g$syntax-error$11100$1Bug2v)
              (syntax-dispatch . g$syntax-dispatch$10992$1Bug2v)
              (compile-system-libraries
                .
                g$compile-system-libraries$11158$1Bug2v)
              (compile->closure . g$compile->closure$11160$1Bug2v)
              (compile . g$compile$11159$1Bug2v)
              (load . g$load$11155$1Bug2v)
              (interaction-environment . g$interaction-environment$11109$1Bug2v)
              (string-ci>? . g$string-ci>?$5921$1Bug2v)
              (string-ci>=? . g$string-ci>=?$5923$1Bug2v)
              (string-ci=? . g$string-ci=?$5919$1Bug2v)
              (string-ci<? . g$string-ci<?$5920$1Bug2v)
              (string-ci<=? . g$string-ci<=?$5922$1Bug2v)
              (char-ci>? . g$char-ci>?$5926$1Bug2v)
              (char-ci>=? . g$char-ci>=?$5928$1Bug2v)
              (char-ci=? . g$char-ci=?$5924$1Bug2v)
              (char-ci<? . g$char-ci<?$5925$1Bug2v)
              (char-ci<=? . g$char-ci<=?$5927$1Bug2v)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$10930$1Bug2v)
              (variable-transformer? . g$variable-transformer?$10929$1Bug2v)
              (make-variable-transformer
                .
                g$make-variable-transformer$10928$1Bug2v)
              (identifier? . g$identifier?$11104$1Bug2v)
              (generate-temporaries . g$generate-temporaries$11093$1Bug2v)
              (free-identifier=? . g$free-identifier=?$11094$1Bug2v)
              (syntax->datum . g$syntax->datum$11106$1Bug2v)
              (datum->syntax . g$datum->syntax$11105$1Bug2v)
              (bound-identifier=? . g$bound-identifier=?$11095$1Bug2v)
              (delete-file . g$delete-file$5418$1Bug2v)
              (file-exists? . g$file-exists?$5417$1Bug2v)
              (list-sort . g$list-sort$5809$1Bug2v)
              (make-eqv-hashtable . g$make-eqv-hashtable$5399$1Bug2v)
              (make-eq-hashtable . g$make-eq-hashtable$5398$1Bug2v)
              (hashtable-update! . g$hashtable-update!$5405$1Bug2v)
              (hashtable-size . g$hashtable-size$5400$1Bug2v)
              (hashtable-set! . g$hashtable-set!$5402$1Bug2v)
              (hashtable-ref . g$hashtable-ref$5401$1Bug2v)
              (hashtable-delete! . g$hashtable-delete!$5403$1Bug2v)
              (hashtable-contains? . g$hashtable-contains?$5404$1Bug2v)
              (hashtable-clear! . g$hashtable-clear!$5406$1Bug2v)
              (call-with-output-file . g$call-with-output-file$6268$1Bug2v)
              (call-with-input-file . g$call-with-input-file$6267$1Bug2v)
              (with-output-to-file . g$with-output-to-file$6266$1Bug2v)
              (with-input-from-file . g$with-input-from-file$6265$1Bug2v)
              (port? . g$port?$6232$1Bug2v)
              (open-string-output-port . g$open-string-output-port$6231$1Bug2v)
              (make-i/o-write-error . g$make-i/o-write-error$6157$1Bug2v)
              (make-i/o-read-error . g$make-i/o-read-error$6151$1Bug2v)
              (make-i/o-port-error . g$make-i/o-port-error$6203$1Bug2v)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6163$1Bug2v)
              (make-i/o-filename-error . g$make-i/o-filename-error$6171$1Bug2v)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6179$1Bug2v)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6185$1Bug2v)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6197$1Bug2v)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6191$1Bug2v)
              (make-i/o-error . g$make-i/o-error$6145$1Bug2v)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6217$1Bug2v)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6211$1Bug2v)
              (i/o-write-error? . g$i/o-write-error?$6158$1Bug2v)
              (i/o-read-error? . g$i/o-read-error?$6152$1Bug2v)
              (i/o-port-error? . g$i/o-port-error?$6205$1Bug2v)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6165$1Bug2v)
              (i/o-error-position . g$i/o-error-position$6166$1Bug2v)
              (i/o-filename-error? . g$i/o-filename-error?$6173$1Bug2v)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6180$1Bug2v)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6186$1Bug2v)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6198$1Bug2v)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6192$1Bug2v)
              (i/o-error? . g$i/o-error?$6146$1Bug2v)
              (i/o-error-port . g$i/o-error-port$6206$1Bug2v)
              (i/o-error-filename . g$i/o-error-filename$6174$1Bug2v)
              (i/o-encoding-error? . g$i/o-encoding-error?$6219$1Bug2v)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6220$1Bug2v)
              (i/o-decoding-error? . g$i/o-decoding-error?$6212$1Bug2v)
              (scheme-report-environment
                .
                g$scheme-report-environment$11084$1Bug2v)
              (quotient . g$quotient$5776$1Bug2v)
              (null-environment . g$null-environment$11083$1Bug2v)
              (remainder . g$remainder$5777$1Bug2v)
              (modulo . g$modulo$5778$1Bug2v)
              (force . g$force$5780$1Bug2v)
              (command-line . g$command-line$11152$1Bug2v)
              (remove . g$remove$4965$1Bug2v)
              (remv . g$remv$4966$1Bug2v)
              (remp . g$remp$4948$1Bug2v)
              (remq . g$remq$4967$1Bug2v)
              (partition . g$partition$4947$1Bug2v)
              (memv . g$memv$4955$1Bug2v)
              (memq . g$memq$4954$1Bug2v)
              (memp . g$memp$4957$1Bug2v)
              (member . g$member$4956$1Bug2v)
              (exists . g$exists$4961$1Bug2v)
              (for-all . g$for-all$4960$1Bug2v)
              (fold-right . g$fold-right$4964$1Bug2v)
              (fold-left . g$fold-left$4963$1Bug2v)
              (find . g$find$4946$1Bug2v)
              (filter . g$filter$4949$1Bug2v)
              (cons* . g$cons*$4962$1Bug2v)
              (assv . g$assv$4951$1Bug2v)
              (assq . g$assq$4950$1Bug2v)
              (assp . g$assp$4953$1Bug2v)
              (assoc . g$assoc$4952$1Bug2v)
              (eval . g$eval$11086$1Bug2v)
              (environment . g$environment$11082$1Bug2v)
              (make-enumeration . g$make-enumeration$6399$1Bug2v)
              (enum-set=? . g$enum-set=?$6406$1Bug2v)
              (enum-set-universe . g$enum-set-universe$6400$1Bug2v)
              (enum-set-union . g$enum-set-union$6407$1Bug2v)
              (enum-set-subset? . g$enum-set-subset?$6405$1Bug2v)
              (enum-set-projection . g$enum-set-projection$6411$1Bug2v)
              (enum-set-member? . g$enum-set-member?$6404$1Bug2v)
              (enum-set-intersection . g$enum-set-intersection$6408$1Bug2v)
              (enum-set-indexer . g$enum-set-indexer$6401$1Bug2v)
              (enum-set-difference . g$enum-set-difference$6409$1Bug2v)
              (enum-set-constructor . g$enum-set-constructor$6402$1Bug2v)
              (enum-set-complement . g$enum-set-complement$6410$1Bug2v)
              (enum-set->list . g$enum-set->list$6403$1Bug2v)
              (who-condition? . g$who-condition?$5714$1Bug2v)
              (warning? . g$warning?$5675$1Bug2v)
              (violation? . g$violation?$5693$1Bug2v)
              (undefined-violation? . g$undefined-violation?$5749$1Bug2v)
              (syntax-violation? . g$syntax-violation?$5741$1Bug2v)
              (syntax-violation-subform
                .
                g$syntax-violation-subform$5743$1Bug2v)
              (syntax-violation-form . g$syntax-violation-form$5742$1Bug2v)
              (syntax-violation . g$syntax-violation$11103$1Bug2v)
              (serious-condition? . g$serious-condition?$5681$1Bug2v)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$5721$1Bug2v)
              (message-condition? . g$message-condition?$5668$1Bug2v)
              (make-who-condition . g$make-who-condition$5712$1Bug2v)
              (make-warning . g$make-warning$5674$1Bug2v)
              (make-violation . g$make-violation$5692$1Bug2v)
              (make-undefined-violation
                .
                g$make-undefined-violation$5748$1Bug2v)
              (make-syntax-violation . g$make-syntax-violation$5738$1Bug2v)
              (make-serious-condition . g$make-serious-condition$5680$1Bug2v)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$5720$1Bug2v)
              (make-message-condition . g$make-message-condition$5666$1Bug2v)
              (make-lexical-violation . g$make-lexical-violation$5732$1Bug2v)
              (make-irritants-condition
                .
                g$make-irritants-condition$5704$1Bug2v)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$5726$1Bug2v)
              (make-error . g$make-error$5686$1Bug2v)
              (make-assertion-violation
                .
                g$make-assertion-violation$5698$1Bug2v)
              (lexical-violation? . g$lexical-violation?$5733$1Bug2v)
              (irritants-condition? . g$irritants-condition?$5706$1Bug2v)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$5727$1Bug2v)
              (error? . g$error?$5687$1Bug2v)
              (condition-who . g$condition-who$5715$1Bug2v)
              (condition-message . g$condition-message$5669$1Bug2v)
              (condition-irritants . g$condition-irritants$5707$1Bug2v)
              (assertion-violation? . g$assertion-violation?$5699$1Bug2v)
              (native-endianness . g$native-endianness$5531$1Bug2v)
              (bytevector-u64-set! . g$bytevector-u64-set!$5552$1Bug2v)
              (bytevector-u64-ref . g$bytevector-u64-ref$5548$1Bug2v)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5554$1Bug2v)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5550$1Bug2v)
              (bytevector-u32-set! . g$bytevector-u32-set!$5544$1Bug2v)
              (bytevector-u32-ref . g$bytevector-u32-ref$5540$1Bug2v)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5546$1Bug2v)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5542$1Bug2v)
              (bytevector-u16-set! . g$bytevector-u16-set!$5536$1Bug2v)
              (bytevector-u16-ref . g$bytevector-u16-ref$5532$1Bug2v)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5538$1Bug2v)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5534$1Bug2v)
              (bytevector-s64-set! . g$bytevector-s64-set!$5553$1Bug2v)
              (bytevector-s64-ref . g$bytevector-s64-ref$5549$1Bug2v)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5555$1Bug2v)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5551$1Bug2v)
              (bytevector-s32-set! . g$bytevector-s32-set!$5545$1Bug2v)
              (bytevector-s32-ref . g$bytevector-s32-ref$5541$1Bug2v)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5547$1Bug2v)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5543$1Bug2v)
              (bytevector-s16-set! . g$bytevector-s16-set!$5537$1Bug2v)
              (bytevector-s16-ref . g$bytevector-s16-ref$5533$1Bug2v)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5539$1Bug2v)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5535$1Bug2v)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5558$1Bug2v)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5556$1Bug2v)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5559$1Bug2v)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5557$1Bug2v)
              (no-nans-violation? . g$no-nans-violation?$6060$1Bug2v)
              (no-infinities-violation?
                .
                g$no-infinities-violation?$6054$1Bug2v)
              (make-no-nans-violation . g$make-no-nans-violation$6059$1Bug2v)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6053$1Bug2v)
              (fxrotate-bit-field . g$fxrotate-bit-field$6036$1Bug2v)
              (fxif . g$fxif$6030$1Bug2v)
              (fxcopy-bit-field . g$fxcopy-bit-field$6033$1Bug2v)
              (fxcopy-bit . g$fxcopy-bit$6031$1Bug2v)
              (fxbit-field . g$fxbit-field$6032$1Bug2v)
              (fxarithmetic-shift-right
                .
                g$fxarithmetic-shift-right$6035$1Bug2v)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6034$1Bug2v)
              (bitwise-rotate-bit-field
                .
                g$bitwise-rotate-bit-field$5982$1Bug2v)
              (bitwise-if . g$bitwise-if$5976$1Bug2v)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$5979$1Bug2v)
              (bitwise-copy-bit . g$bitwise-copy-bit$5977$1Bug2v)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$5981$1Bug2v)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$5980$1Bug2v)
              (symbol=? . g$symbol=?$5156$1Bug2v)
              (string>? . g$string>?$5153$1Bug2v)
              (string>=? . g$string>=?$5155$1Bug2v)
              (string=? . g$string=?$5151$1Bug2v)
              (string<? . g$string<?$5152$1Bug2v)
              (string<=? . g$string<=?$5154$1Bug2v)
              (rationalize . g$rationalize$5163$1Bug2v)
              (char>? . g$char>?$5160$1Bug2v)
              (char>=? . g$char>=?$5162$1Bug2v)
              (char=? . g$char=?$5158$1Bug2v)
              (char<? . g$char<?$5159$1Bug2v)
              (char<=? . g$char<=?$5161$1Bug2v)
              (cddddr . g$cddddr$5150$1Bug2v)
              (cdddar . g$cdddar$5149$1Bug2v)
              (cddadr . g$cddadr$5148$1Bug2v)
              (cddaar . g$cddaar$5147$1Bug2v)
              (cdaddr . g$cdaddr$5146$1Bug2v)
              (cdadar . g$cdadar$5145$1Bug2v)
              (cdaadr . g$cdaadr$5144$1Bug2v)
              (cdaaar . g$cdaaar$5143$1Bug2v)
              (cadddr . g$cadddr$5142$1Bug2v)
              (caddar . g$caddar$5141$1Bug2v)
              (cadadr . g$cadadr$5140$1Bug2v)
              (cadaar . g$cadaar$5139$1Bug2v)
              (caaddr . g$caaddr$5138$1Bug2v)
              (caadar . g$caadar$5137$1Bug2v)
              (caaadr . g$caaadr$5136$1Bug2v)
              (caaaar . g$caaaar$5135$1Bug2v)
              (cdddr . g$cdddr$5134$1Bug2v)
              (cddar . g$cddar$5133$1Bug2v)
              (cdadr . g$cdadr$5132$1Bug2v)
              (cdaar . g$cdaar$5131$1Bug2v)
              (caddr . g$caddr$5130$1Bug2v)
              (cadar . g$cadar$5129$1Bug2v)
              (caadr . g$caadr$5128$1Bug2v)
              (caaar . g$caaar$5127$1Bug2v)
              (cddr . g$cddr$5126$1Bug2v)
              (cdar . g$cdar$5125$1Bug2v)
              (cadr . g$cadr$5124$1Bug2v)
              (caar . g$caar$5123$1Bug2v)
              (boolean=? . g$boolean=?$5157$1Bug2v)
              (enum-set? . g$enum?$6380$1Bug2v)
              (make-promise . g$make-promise$5779$1Bug2v)
              (load/args . g$load/args$11154$1Bug2v)
              (printf . g$printf$6435$1Bug2v)
              (fprintf . g$fprintf$6436$1Bug2v)
              (format . g$format$6437$1Bug2v)
              (trace-printer . g$trace-printer$11151$1Bug2v)
              (make-traced-macro . g$make-traced-macro$6441$1Bug2v)
              (assertion-error . g$assertion-error$11099$1Bug2v)
              (make-parameter . g$make-parameter$6522$1Bug2v)
              (environment-bindings . g$environment-bindings$11078$1Bug2v)
              (environment-symbols . g$environment-symbols$11081$1Bug2v)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$11077$1Bug2v)
              (library-path . g$library-path$7051$1Bug2v)))))))
    (g$install-library$7067$1Bug2v
      'g$12433$1Bug2v
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$12370$1Bug2v)
        (cosh . g$12369$1Bug2v)
        (sinh . g$12368$1Bug2v)
        (make-guid . g$12367$1Bug2v)
        (unspecified? . g$12366$1Bug2v)
        (make-trace . g$12365$1Bug2v)
        (make-list . g$12364$1Bug2v)
        (last-pair . g$12363$1Bug2v)
        (load-r5rs . g$12362$1Bug2v)
        (license . g$12361$1Bug2v)
        (stacktrace . g$12360$1Bug2v)
        (ironscheme-build . g$11778$1Bug2v)
        (set-symbol-value! . g$12346$1Bug2v)
        (symbol-value . g$12345$1Bug2v)
        (ungensym . g$12344$1Bug2v)
        (gensym . g$12343$1Bug2v)
        (void . g$12342$1Bug2v)
        (compile-system-libraries . g$11780$1Bug2v)
        (compile->closure . g$11782$1Bug2v)
        (compile . g$11781$1Bug2v)
        (load . g$11777$1Bug2v)
        (interaction-environment . g$8829$1Bug2v)
        (string-upcase . g$12338$1Bug2v)
        (string-titlecase . g$12337$1Bug2v)
        (string-normalize-nfkd . g$12336$1Bug2v)
        (string-normalize-nfkc . g$12335$1Bug2v)
        (string-normalize-nfd . g$12334$1Bug2v)
        (string-normalize-nfc . g$12333$1Bug2v)
        (string-foldcase . g$12332$1Bug2v)
        (string-downcase . g$12331$1Bug2v)
        (string-ci>? . g$6938$1Bug2v)
        (string-ci>=? . g$6940$1Bug2v)
        (string-ci=? . g$6936$1Bug2v)
        (string-ci<? . g$6937$1Bug2v)
        (string-ci<=? . g$6939$1Bug2v)
        (char-whitespace? . g$12330$1Bug2v)
        (char-upper-case? . g$12329$1Bug2v)
        (char-title-case? . g$12328$1Bug2v)
        (char-numeric? . g$12327$1Bug2v)
        (char-lower-case? . g$12326$1Bug2v)
        (char-general-category . g$12325$1Bug2v)
        (char-upcase . g$12324$1Bug2v)
        (char-titlecase . g$12323$1Bug2v)
        (char-foldcase . g$12322$1Bug2v)
        (char-downcase . g$12321$1Bug2v)
        (char-ci>? . g$6977$1Bug2v)
        (char-ci>=? . g$6979$1Bug2v)
        (char-ci=? . g$6975$1Bug2v)
        (char-ci<? . g$6976$1Bug2v)
        (char-ci<=? . g$6978$1Bug2v)
        (char-alphabetic? . g$12320$1Bug2v)
        (variable-transformer-procedure . g$8428$1Bug2v)
        (variable-transformer? . g$8427$1Bug2v)
        (make-variable-transformer . g$8426$1Bug2v)
        (identifier? . g$8824$1Bug2v)
        (generate-temporaries . g$8813$1Bug2v)
        (free-identifier=? . g$8814$1Bug2v)
        (syntax->datum . g$8826$1Bug2v)
        (datum->syntax . g$8825$1Bug2v)
        (bound-identifier=? . g$8815$1Bug2v)
        (record-type-descriptor? . g$12319$1Bug2v)
        (record-predicate . g$12318$1Bug2v)
        (record-mutator . g$12317$1Bug2v)
        (record-constructor . g$12316$1Bug2v)
        (record-accessor . g$12315$1Bug2v)
        (make-record-type-descriptor . g$12314$1Bug2v)
        (make-record-constructor-descriptor . g$12313$1Bug2v)
        (record? . g$12312$1Bug2v)
        (record-type-uid . g$12311$1Bug2v)
        (record-type-sealed? . g$12310$1Bug2v)
        (record-type-parent . g$12309$1Bug2v)
        (record-type-opaque? . g$12308$1Bug2v)
        (record-type-name . g$12307$1Bug2v)
        (record-type-generative? . g$12306$1Bug2v)
        (record-type-field-names . g$12305$1Bug2v)
        (record-rtd . g$12304$1Bug2v)
        (record-field-mutable? . g$12303$1Bug2v)
        (delete-file . g$6461$1Bug2v)
        (file-exists? . g$6460$1Bug2v)
        (vector-sort! . g$12302$1Bug2v)
        (vector-sort . g$12301$1Bug2v)
        (list-sort . g$6824$1Bug2v)
        (symbol-hash . g$12300$1Bug2v)
        (string-ci-hash . g$12299$1Bug2v)
        (string-hash . g$12298$1Bug2v)
        (equal-hash . g$12297$1Bug2v)
        (hashtable-equivalence-function . g$12296$1Bug2v)
        (make-hashtable . g$12295$1Bug2v)
        (hashtable-hash-function . g$12294$1Bug2v)
        (make-eqv-hashtable . g$6428$1Bug2v)
        (make-eq-hashtable . g$6427$1Bug2v)
        (hashtable? . g$12293$1Bug2v)
        (hashtable-update! . g$6434$1Bug2v)
        (hashtable-size . g$6429$1Bug2v)
        (hashtable-set! . g$6431$1Bug2v)
        (hashtable-ref . g$6430$1Bug2v)
        (hashtable-mutable? . g$12292$1Bug2v)
        (hashtable-keys . g$12291$1Bug2v)
        (hashtable-entries . g$12290$1Bug2v)
        (hashtable-delete! . g$6432$1Bug2v)
        (hashtable-copy . g$12289$1Bug2v)
        (hashtable-contains? . g$6433$1Bug2v)
        (hashtable-clear! . g$6435$1Bug2v)
        (call-with-output-file . g$7366$1Bug2v)
        (call-with-input-file . g$7365$1Bug2v)
        (write-char . g$12288$1Bug2v)
        (write . g$12287$1Bug2v)
        (with-output-to-file . g$7364$1Bug2v)
        (with-input-from-file . g$7363$1Bug2v)
        (read-char . g$12286$1Bug2v)
        (read . g$12285$1Bug2v)
        (peek-char . g$12284$1Bug2v)
        (open-output-file . g$12283$1Bug2v)
        (open-input-file . g$12282$1Bug2v)
        (newline . g$12281$1Bug2v)
        (display . g$12280$1Bug2v)
        (close-output-port . g$12279$1Bug2v)
        (close-input-port . g$12278$1Bug2v)
        (eof-object? . g$12277$1Bug2v)
        (eof-object . g$12276$1Bug2v)
        (current-error-port . g$12275$1Bug2v)
        (current-output-port . g$12274$1Bug2v)
        (current-input-port . g$12273$1Bug2v)
        (output-port? . g$12272$1Bug2v)
        (input-port? . g$12271$1Bug2v)
        (utf-8-codec . g$12270$1Bug2v)
        (utf-16-codec . g$12269$1Bug2v)
        (transcoder-error-handling-mode . g$12268$1Bug2v)
        (transcoder-eol-style . g$12267$1Bug2v)
        (transcoder-codec . g$12266$1Bug2v)
        (transcoded-port . g$12265$1Bug2v)
        (textual-port? . g$12264$1Bug2v)
        (string->bytevector . g$12263$1Bug2v)
        (standard-output-port . g$12262$1Bug2v)
        (standard-input-port . g$12261$1Bug2v)
        (standard-error-port . g$12260$1Bug2v)
        (set-port-position! . g$12259$1Bug2v)
        (put-u8 . g$12258$1Bug2v)
        (put-string . g$12257$1Bug2v)
        (put-datum . g$12256$1Bug2v)
        (put-char . g$12255$1Bug2v)
        (put-bytevector . g$12254$1Bug2v)
        (port? . g$7342$1Bug2v)
        (port-transcoder . g$12253$1Bug2v)
        (port-position . g$12252$1Bug2v)
        (port-has-set-port-position!? . g$12251$1Bug2v)
        (port-has-port-position? . g$12250$1Bug2v)
        (port-eof? . g$12249$1Bug2v)
        (output-port-buffer-mode . g$12248$1Bug2v)
        (open-string-output-port . g$7341$1Bug2v)
        (open-string-input-port . g$12247$1Bug2v)
        (open-file-output-port . g$12246$1Bug2v)
        (open-file-input/output-port . g$12245$1Bug2v)
        (open-file-input-port . g$12244$1Bug2v)
        (open-bytevector-output-port . g$12243$1Bug2v)
        (open-bytevector-input-port . g$12242$1Bug2v)
        (native-transcoder . g$12241$1Bug2v)
        (native-eol-style . g$12240$1Bug2v)
        (make-transcoder . g$12239$1Bug2v)
        (latin-1-codec . g$12238$1Bug2v)
        (make-i/o-write-error . g$7198$1Bug2v)
        (make-i/o-read-error . g$7184$1Bug2v)
        (make-i/o-port-error . g$7303$1Bug2v)
        (make-i/o-invalid-position-error . g$7213$1Bug2v)
        (make-i/o-filename-error . g$7230$1Bug2v)
        (make-i/o-file-protection-error . g$7246$1Bug2v)
        (make-i/o-file-is-read-only-error . g$7260$1Bug2v)
        (make-i/o-file-does-not-exist-error . g$7288$1Bug2v)
        (make-i/o-file-already-exists-error . g$7274$1Bug2v)
        (make-i/o-error . g$7170$1Bug2v)
        (make-i/o-encoding-error . g$7334$1Bug2v)
        (make-i/o-decoding-error . g$7319$1Bug2v)
        (make-custom-textual-output-port . g$12237$1Bug2v)
        (make-custom-textual-input/output-port . g$12236$1Bug2v)
        (make-custom-textual-input-port . g$12235$1Bug2v)
        (make-custom-binary-output-port . g$12234$1Bug2v)
        (make-custom-binary-input/output-port . g$12233$1Bug2v)
        (make-custom-binary-input-port . g$12232$1Bug2v)
        (make-bytevector . g$12231$1Bug2v)
        (lookahead-u8 . g$12230$1Bug2v)
        (lookahead-char . g$12229$1Bug2v)
        (i/o-write-error? . g$7199$1Bug2v)
        (i/o-read-error? . g$7185$1Bug2v)
        (i/o-port-error? . g$7305$1Bug2v)
        (i/o-invalid-position-error? . g$7215$1Bug2v)
        (i/o-error-position . g$7216$1Bug2v)
        (i/o-filename-error? . g$7232$1Bug2v)
        (i/o-file-protection-error? . g$7247$1Bug2v)
        (i/o-file-is-read-only-error? . g$7261$1Bug2v)
        (i/o-file-does-not-exist-error? . g$7289$1Bug2v)
        (i/o-file-already-exists-error? . g$7275$1Bug2v)
        (i/o-error? . g$7171$1Bug2v)
        (i/o-error-port . g$7306$1Bug2v)
        (i/o-error-filename . g$7233$1Bug2v)
        (i/o-encoding-error? . g$7336$1Bug2v)
        (i/o-encoding-error-char . g$7337$1Bug2v)
        (i/o-decoding-error? . g$7320$1Bug2v)
        (get-u8 . g$12228$1Bug2v)
        (get-string-n! . g$12227$1Bug2v)
        (get-string-n . g$12226$1Bug2v)
        (get-string-all . g$12225$1Bug2v)
        (get-line . g$12224$1Bug2v)
        (get-datum . g$12223$1Bug2v)
        (get-char . g$12222$1Bug2v)
        (get-bytevector-some . g$12221$1Bug2v)
        (get-bytevector-n! . g$12220$1Bug2v)
        (get-bytevector-n . g$12219$1Bug2v)
        (get-bytevector-all . g$12218$1Bug2v)
        (flush-output-port . g$12217$1Bug2v)
        (close-port . g$12216$1Bug2v)
        (call-with-string-output-port . g$12215$1Bug2v)
        (call-with-port . g$12214$1Bug2v)
        (call-with-bytevector-output-port . g$12213$1Bug2v)
        (bytevector->string . g$12212$1Bug2v)
        (buffer-mode? . g$12211$1Bug2v)
        (binary-port? . g$12210$1Bug2v)
        (scheme-report-environment . g$8804$1Bug2v)
        (quotient . g$6804$1Bug2v)
        (null-environment . g$8803$1Bug2v)
        (remainder . g$6805$1Bug2v)
        (modulo . g$6806$1Bug2v)
        (inexact->exact . g$12209$1Bug2v)
        (force . g$6808$1Bug2v)
        (exact->inexact . g$12208$1Bug2v)
        (exit . g$12207$1Bug2v)
        (command-line . g$11774$1Bug2v)
        (string-fill! . g$12206$1Bug2v)
        (string-set! . g$12205$1Bug2v)
        (set-cdr! . g$12204$1Bug2v)
        (set-car! . g$12203$1Bug2v)
        (remove . g$5824$1Bug2v)
        (remv . g$5825$1Bug2v)
        (remp . g$5807$1Bug2v)
        (remq . g$5826$1Bug2v)
        (partition . g$5806$1Bug2v)
        (memv . g$5814$1Bug2v)
        (memq . g$5813$1Bug2v)
        (memp . g$5816$1Bug2v)
        (member . g$5815$1Bug2v)
        (exists . g$5820$1Bug2v)
        (for-all . g$5819$1Bug2v)
        (fold-right . g$5823$1Bug2v)
        (fold-left . g$5822$1Bug2v)
        (find . g$5805$1Bug2v)
        (filter . g$5808$1Bug2v)
        (cons* . g$5821$1Bug2v)
        (assv . g$5810$1Bug2v)
        (assq . g$5809$1Bug2v)
        (assp . g$5812$1Bug2v)
        (assoc . g$5811$1Bug2v)
        (with-exception-handler . g$12202$1Bug2v)
        (raise-continuable . g$12201$1Bug2v)
        (raise . g$12200$1Bug2v)
        (eval . g$8806$1Bug2v)
        (environment . g$8802$1Bug2v)
        (make-enumeration . g$7424$1Bug2v)
        (enum-set=? . g$7431$1Bug2v)
        (enum-set-universe . g$7425$1Bug2v)
        (enum-set-union . g$7432$1Bug2v)
        (enum-set-subset? . g$7430$1Bug2v)
        (enum-set-projection . g$7436$1Bug2v)
        (enum-set-member? . g$7429$1Bug2v)
        (enum-set-intersection . g$7433$1Bug2v)
        (enum-set-indexer . g$7426$1Bug2v)
        (enum-set-difference . g$7434$1Bug2v)
        (enum-set-constructor . g$7427$1Bug2v)
        (enum-set-complement . g$7435$1Bug2v)
        (enum-set->list . g$7428$1Bug2v)
        (who-condition? . g$6715$1Bug2v)
        (warning? . g$6626$1Bug2v)
        (violation? . g$6668$1Bug2v)
        (undefined-violation? . g$6792$1Bug2v)
        (syntax-violation? . g$6776$1Bug2v)
        (syntax-violation-subform . g$6778$1Bug2v)
        (syntax-violation-form . g$6777$1Bug2v)
        (syntax-violation . g$8823$1Bug2v)
        (simple-conditions . g$12199$1Bug2v)
        (serious-condition? . g$6640$1Bug2v)
        (non-continuable-violation? . g$6730$1Bug2v)
        (message-condition? . g$6611$1Bug2v)
        (make-who-condition . g$6713$1Bug2v)
        (make-warning . g$6625$1Bug2v)
        (make-violation . g$6667$1Bug2v)
        (make-undefined-violation . g$6791$1Bug2v)
        (make-syntax-violation . g$6773$1Bug2v)
        (make-serious-condition . g$6639$1Bug2v)
        (make-non-continuable-violation . g$6729$1Bug2v)
        (make-message-condition . g$6609$1Bug2v)
        (make-lexical-violation . g$6757$1Bug2v)
        (make-irritants-condition . g$6696$1Bug2v)
        (make-implementation-restriction-violation . g$6743$1Bug2v)
        (make-error . g$6653$1Bug2v)
        (make-assertion-violation . g$6681$1Bug2v)
        (lexical-violation? . g$6758$1Bug2v)
        (irritants-condition? . g$6698$1Bug2v)
        (implementation-restriction-violation? . g$6744$1Bug2v)
        (error? . g$6654$1Bug2v)
        (condition-who . g$6716$1Bug2v)
        (condition-predicate . g$12198$1Bug2v)
        (condition-message . g$6612$1Bug2v)
        (condition-irritants . g$6699$1Bug2v)
        (condition-accessor . g$12197$1Bug2v)
        (condition . g$12196$1Bug2v)
        (assertion-violation? . g$6682$1Bug2v)
        (condition? . g$12195$1Bug2v)
        (utf32->string . g$12194$1Bug2v)
        (utf16->string . g$12193$1Bug2v)
        (utf8->string . g$12192$1Bug2v)
        (uint-list->bytevector . g$12191$1Bug2v)
        (u8-list->bytevector . g$12190$1Bug2v)
        (string->utf8 . g$12189$1Bug2v)
        (string->utf32 . g$12188$1Bug2v)
        (string->utf16 . g$12187$1Bug2v)
        (sint-list->bytevector . g$12186$1Bug2v)
        (native-endianness . g$6467$1Bug2v)
        (bytevector? . g$12185$1Bug2v)
        (bytevector=? . g$12184$1Bug2v)
        (bytevector-uint-set! . g$12183$1Bug2v)
        (bytevector-uint-ref . g$12182$1Bug2v)
        (bytevector-u8-set! . g$12181$1Bug2v)
        (bytevector-u8-ref . g$12180$1Bug2v)
        (bytevector-u64-set! . g$6488$1Bug2v)
        (bytevector-u64-ref . g$6484$1Bug2v)
        (bytevector-u64-native-set! . g$6490$1Bug2v)
        (bytevector-u64-native-ref . g$6486$1Bug2v)
        (bytevector-u32-set! . g$6480$1Bug2v)
        (bytevector-u32-ref . g$6476$1Bug2v)
        (bytevector-u32-native-set! . g$6482$1Bug2v)
        (bytevector-u32-native-ref . g$6478$1Bug2v)
        (bytevector-u16-set! . g$6472$1Bug2v)
        (bytevector-u16-ref . g$6468$1Bug2v)
        (bytevector-u16-native-set! . g$6474$1Bug2v)
        (bytevector-u16-native-ref . g$6470$1Bug2v)
        (bytevector-sint-set! . g$12179$1Bug2v)
        (bytevector-sint-ref . g$12178$1Bug2v)
        (bytevector-s8-set! . g$12177$1Bug2v)
        (bytevector-s8-ref . g$12176$1Bug2v)
        (bytevector-s64-set! . g$6489$1Bug2v)
        (bytevector-s64-ref . g$6485$1Bug2v)
        (bytevector-s64-native-set! . g$6491$1Bug2v)
        (bytevector-s64-native-ref . g$6487$1Bug2v)
        (bytevector-s32-set! . g$6481$1Bug2v)
        (bytevector-s32-ref . g$6477$1Bug2v)
        (bytevector-s32-native-set! . g$6483$1Bug2v)
        (bytevector-s32-native-ref . g$6479$1Bug2v)
        (bytevector-s16-set! . g$6473$1Bug2v)
        (bytevector-s16-ref . g$6469$1Bug2v)
        (bytevector-s16-native-set! . g$6475$1Bug2v)
        (bytevector-s16-native-ref . g$6471$1Bug2v)
        (bytevector-length . g$12175$1Bug2v)
        (bytevector-ieee-single-set! . g$12174$1Bug2v)
        (bytevector-ieee-single-ref . g$12173$1Bug2v)
        (bytevector-ieee-single-native-set! . g$6494$1Bug2v)
        (bytevector-ieee-single-native-ref . g$6492$1Bug2v)
        (bytevector-ieee-double-set! . g$12172$1Bug2v)
        (bytevector-ieee-double-ref . g$12171$1Bug2v)
        (bytevector-ieee-double-native-set! . g$6495$1Bug2v)
        (bytevector-ieee-double-native-ref . g$6493$1Bug2v)
        (bytevector-fill! . g$12170$1Bug2v)
        (bytevector-copy! . g$12169$1Bug2v)
        (bytevector-copy . g$12168$1Bug2v)
        (bytevector->uint-list . g$12167$1Bug2v)
        (bytevector->u8-list . g$12166$1Bug2v)
        (bytevector->sint-list . g$12165$1Bug2v)
        (no-nans-violation? . g$7156$1Bug2v)
        (no-infinities-violation? . g$7142$1Bug2v)
        (make-no-nans-violation . g$7155$1Bug2v)
        (make-no-infinities-violation . g$7141$1Bug2v)
        (real->flonum . g$12164$1Bug2v)
        (flzero? . g$12163$1Bug2v)
        (fltruncate . g$12162$1Bug2v)
        (fltan . g$12161$1Bug2v)
        (flsqrt . g$12160$1Bug2v)
        (flsin . g$12159$1Bug2v)
        (flround . g$12158$1Bug2v)
        (flpositive? . g$12157$1Bug2v)
        (flonum? . g$12156$1Bug2v)
        (flodd? . g$12155$1Bug2v)
        (flnumerator . g$12154$1Bug2v)
        (flnegative? . g$12153$1Bug2v)
        (flnan? . g$12152$1Bug2v)
        (flmod0 . g$12151$1Bug2v)
        (flmod . g$12150$1Bug2v)
        (flmin . g$12149$1Bug2v)
        (flmax . g$12148$1Bug2v)
        (fllog . g$12147$1Bug2v)
        (flinteger? . g$12146$1Bug2v)
        (flinfinite? . g$12145$1Bug2v)
        (flfloor . g$12144$1Bug2v)
        (flfinite? . g$12143$1Bug2v)
        (flexpt . g$12142$1Bug2v)
        (flexp . g$12141$1Bug2v)
        (fleven? . g$12140$1Bug2v)
        (fldiv0-and-mod0 . g$12139$1Bug2v)
        (fldiv0 . g$12138$1Bug2v)
        (fldiv-and-mod . g$12137$1Bug2v)
        (fldiv . g$12136$1Bug2v)
        (fldenominator . g$12135$1Bug2v)
        (flcos . g$12134$1Bug2v)
        (flceiling . g$12133$1Bug2v)
        (flatan . g$12132$1Bug2v)
        (flasin . g$12131$1Bug2v)
        (flacos . g$12130$1Bug2v)
        (flabs . g$12129$1Bug2v)
        (fl>? . g$12128$1Bug2v)
        (fl>=? . g$12127$1Bug2v)
        (fl=? . g$12126$1Bug2v)
        (fl<? . g$12125$1Bug2v)
        (fl<=? . g$12124$1Bug2v)
        (fl/ . g$12123$1Bug2v)
        (fl- . g$12122$1Bug2v)
        (fl+ . g$12121$1Bug2v)
        (fl* . g$12120$1Bug2v)
        (fixnum->flonum . g$12119$1Bug2v)
        (fxzero? . g$12118$1Bug2v)
        (fxxor . g$12117$1Bug2v)
        (fxrotate-bit-field . g$7087$1Bug2v)
        (fxreverse-bit-field . g$12116$1Bug2v)
        (fxpositive? . g$12115$1Bug2v)
        (fxodd? . g$12114$1Bug2v)
        (fxnot . g$12113$1Bug2v)
        (fxnegative? . g$12112$1Bug2v)
        (fxmod0 . g$12111$1Bug2v)
        (fxmod . g$12110$1Bug2v)
        (fxmin . g$12109$1Bug2v)
        (fxmax . g$12108$1Bug2v)
        (fxlength . g$12107$1Bug2v)
        (fxior . g$12106$1Bug2v)
        (fxif . g$7081$1Bug2v)
        (fxfirst-bit-set . g$12105$1Bug2v)
        (fxeven? . g$12104$1Bug2v)
        (fxdiv0-and-mod0 . g$12103$1Bug2v)
        (fxdiv0 . g$12102$1Bug2v)
        (fxdiv-and-mod . g$12101$1Bug2v)
        (fxdiv . g$12100$1Bug2v)
        (fxcopy-bit-field . g$7084$1Bug2v)
        (fxcopy-bit . g$7082$1Bug2v)
        (fxbit-set? . g$12099$1Bug2v)
        (fxbit-field . g$7083$1Bug2v)
        (fxbit-count . g$12098$1Bug2v)
        (fxarithmetic-shift-right . g$7086$1Bug2v)
        (fxarithmetic-shift-left . g$7085$1Bug2v)
        (fxarithmetic-shift . g$12097$1Bug2v)
        (fxand . g$12096$1Bug2v)
        (fx>? . g$12095$1Bug2v)
        (fx>=? . g$12094$1Bug2v)
        (fx=? . g$12093$1Bug2v)
        (fx<? . g$12092$1Bug2v)
        (fx<=? . g$12091$1Bug2v)
        (fx-/carry . g$12090$1Bug2v)
        (fx- . g$12089$1Bug2v)
        (fx+/carry . g$12088$1Bug2v)
        (fx+ . g$12087$1Bug2v)
        (fx*/carry . g$12086$1Bug2v)
        (fx* . g$12085$1Bug2v)
        (greatest-fixnum . g$12084$1Bug2v)
        (least-fixnum . g$12083$1Bug2v)
        (fixnum-width . g$12082$1Bug2v)
        (fixnum? . g$12081$1Bug2v)
        (bitwise-rotate-bit-field . g$7039$1Bug2v)
        (bitwise-reverse-bit-field . g$12080$1Bug2v)
        (bitwise-length . g$12079$1Bug2v)
        (bitwise-if . g$7033$1Bug2v)
        (bitwise-first-bit-set . g$12078$1Bug2v)
        (bitwise-copy-bit-field . g$7036$1Bug2v)
        (bitwise-copy-bit . g$7034$1Bug2v)
        (bitwise-bit-set? . g$12077$1Bug2v)
        (bitwise-bit-field . g$12076$1Bug2v)
        (bitwise-bit-count . g$12075$1Bug2v)
        (bitwise-xor . g$12074$1Bug2v)
        (bitwise-ior . g$12073$1Bug2v)
        (bitwise-and . g$12072$1Bug2v)
        (bitwise-not . g$12071$1Bug2v)
        (bitwise-arithmetic-shift-right . g$7038$1Bug2v)
        (bitwise-arithmetic-shift-left . g$7037$1Bug2v)
        (bitwise-arithmetic-shift . g$12070$1Bug2v)
        (zero? . g$12069$1Bug2v)
        (vector? . g$12068$1Bug2v)
        (vector-set! . g$12067$1Bug2v)
        (vector-ref . g$12066$1Bug2v)
        (vector-map . g$12065$1Bug2v)
        (vector-length . g$12064$1Bug2v)
        (vector-for-each . g$12063$1Bug2v)
        (vector-fill! . g$12062$1Bug2v)
        (vector->list . g$12061$1Bug2v)
        (vector . g$12060$1Bug2v)
        (values . g$12059$1Bug2v)
        (truncate . g$12058$1Bug2v)
        (tan . g$12057$1Bug2v)
        (symbol? . g$12056$1Bug2v)
        (symbol=? . g$5976$1Bug2v)
        (symbol->string . g$12055$1Bug2v)
        (substring . g$12054$1Bug2v)
        (string? . g$12053$1Bug2v)
        (string>? . g$5973$1Bug2v)
        (string>=? . g$5975$1Bug2v)
        (string=? . g$5971$1Bug2v)
        (string<? . g$5972$1Bug2v)
        (string<=? . g$5974$1Bug2v)
        (string-ref . g$12052$1Bug2v)
        (string-length . g$12051$1Bug2v)
        (string-for-each . g$12050$1Bug2v)
        (string-copy . g$12049$1Bug2v)
        (string-append . g$12048$1Bug2v)
        (string->symbol . g$12047$1Bug2v)
        (string->number . g$12046$1Bug2v)
        (string->list . g$12045$1Bug2v)
        (string . g$12044$1Bug2v)
        (sqrt . g$12043$1Bug2v)
        (sin . g$12042$1Bug2v)
        (round . g$12041$1Bug2v)
        (reverse . g$12040$1Bug2v)
        (real? . g$12039$1Bug2v)
        (real-valued? . g$12038$1Bug2v)
        (real-part . g$12037$1Bug2v)
        (rationalize . g$6017$1Bug2v)
        (rational? . g$12036$1Bug2v)
        (rational-valued? . g$12035$1Bug2v)
        (procedure? . g$12034$1Bug2v)
        (positive? . g$12033$1Bug2v)
        (pair? . g$12032$1Bug2v)
        (odd? . g$12031$1Bug2v)
        (numerator . g$12030$1Bug2v)
        (number? . g$12029$1Bug2v)
        (number->string . g$12028$1Bug2v)
        (null? . g$12027$1Bug2v)
        (not . g$12026$1Bug2v)
        (negative? . g$12025$1Bug2v)
        (nan? . g$12024$1Bug2v)
        (min . g$12023$1Bug2v)
        (max . g$12022$1Bug2v)
        (map . g$12021$1Bug2v)
        (make-vector . g$12020$1Bug2v)
        (make-string . g$12019$1Bug2v)
        (make-rectangular . g$12018$1Bug2v)
        (make-polar . g$12017$1Bug2v)
        (magnitude . g$12016$1Bug2v)
        (log . g$12015$1Bug2v)
        (list? . g$12014$1Bug2v)
        (list-tail . g$12013$1Bug2v)
        (list-ref . g$12012$1Bug2v)
        (list->vector . g$12011$1Bug2v)
        (list->string . g$12010$1Bug2v)
        (list . g$12009$1Bug2v)
        (length . g$12008$1Bug2v)
        (lcm . g$12007$1Bug2v)
        (integer? . g$12006$1Bug2v)
        (integer-valued? . g$12005$1Bug2v)
        (integer->char . g$12004$1Bug2v)
        (infinite? . g$12003$1Bug2v)
        (inexact? . g$12002$1Bug2v)
        (inexact . g$12001$1Bug2v)
        (imag-part . g$12000$1Bug2v)
        (gcd . g$11999$1Bug2v)
        (for-each . g$11998$1Bug2v)
        (floor . g$11997$1Bug2v)
        (finite? . g$11996$1Bug2v)
        (expt . g$11995$1Bug2v)
        (exp . g$11994$1Bug2v)
        (exact? . g$11993$1Bug2v)
        (exact-integer-sqrt . g$11992$1Bug2v)
        (exact . g$11991$1Bug2v)
        (even? . g$11990$1Bug2v)
        (error . g$11989$1Bug2v)
        (eqv? . g$11988$1Bug2v)
        (equal? . g$11987$1Bug2v)
        (eq? . g$11986$1Bug2v)
        (dynamic-wind . g$11985$1Bug2v)
        (div0-and-mod0 . g$11984$1Bug2v)
        (mod0 . g$11983$1Bug2v)
        (div0 . g$11982$1Bug2v)
        (div-and-mod . g$11981$1Bug2v)
        (mod . g$11980$1Bug2v)
        (div . g$11979$1Bug2v)
        (denominator . g$11978$1Bug2v)
        (cos . g$11977$1Bug2v)
        (cons . g$11976$1Bug2v)
        (complex? . g$11975$1Bug2v)
        (char? . g$11974$1Bug2v)
        (char>? . g$6014$1Bug2v)
        (char>=? . g$6016$1Bug2v)
        (char=? . g$6012$1Bug2v)
        (char<? . g$6013$1Bug2v)
        (char<=? . g$6015$1Bug2v)
        (char->integer . g$11973$1Bug2v)
        (ceiling . g$11972$1Bug2v)
        (call-with-values . g$11971$1Bug2v)
        (call/cc . g$11970$1Bug2v)
        (call-with-current-continuation . g$11969$1Bug2v)
        (cddddr . g$5936$1Bug2v)
        (cdddar . g$5935$1Bug2v)
        (cddadr . g$5934$1Bug2v)
        (cddaar . g$5933$1Bug2v)
        (cdaddr . g$5932$1Bug2v)
        (cdadar . g$5931$1Bug2v)
        (cdaadr . g$5930$1Bug2v)
        (cdaaar . g$5929$1Bug2v)
        (cadddr . g$5928$1Bug2v)
        (caddar . g$5927$1Bug2v)
        (cadadr . g$5926$1Bug2v)
        (cadaar . g$5925$1Bug2v)
        (caaddr . g$5924$1Bug2v)
        (caadar . g$5923$1Bug2v)
        (caaadr . g$5922$1Bug2v)
        (caaaar . g$5921$1Bug2v)
        (cdddr . g$5920$1Bug2v)
        (cddar . g$5919$1Bug2v)
        (cdadr . g$5918$1Bug2v)
        (cdaar . g$5917$1Bug2v)
        (caddr . g$5916$1Bug2v)
        (cadar . g$5915$1Bug2v)
        (caadr . g$5914$1Bug2v)
        (caaar . g$5913$1Bug2v)
        (cddr . g$5912$1Bug2v)
        (cdar . g$5911$1Bug2v)
        (cadr . g$5910$1Bug2v)
        (caar . g$5909$1Bug2v)
        (cdr . g$11968$1Bug2v)
        (car . g$11967$1Bug2v)
        (boolean? . g$11966$1Bug2v)
        (boolean=? . g$5977$1Bug2v)
        (atan . g$11965$1Bug2v)
        (assertion-violation . g$11964$1Bug2v)
        (asin . g$11963$1Bug2v)
        (apply . g$11962$1Bug2v)
        (append . g$11961$1Bug2v)
        (angle . g$11960$1Bug2v)
        (acos . g$11959$1Bug2v)
        (abs . g$11958$1Bug2v)
        (/ . g$11957$1Bug2v)
        (* . g$11956$1Bug2v)
        (- . g$11955$1Bug2v)
        (+ . g$11954$1Bug2v)
        (>= . g$11953$1Bug2v)
        (> . g$11952$1Bug2v)
        (= . g$11951$1Bug2v)
        (<= . g$11950$1Bug2v)
        (< . g$11949$1Bug2v)
        (deserialize-port . g$11944$1Bug2v)
        (serialize-port . g$11943$1Bug2v)
        (enum-set? . g$7399$1Bug2v)
        (make-promise . g$6807$1Bug2v)
        (load/args . g$11776$1Bug2v)
        (printf . g$7509$1Bug2v)
        (fprintf . g$7510$1Bug2v)
        (format . g$7511$1Bug2v)
        (procedure-form . g$11942$1Bug2v)
        (procedure-environment . g$11941$1Bug2v)
        (procedure-name . g$11940$1Bug2v)
        (procedure-arity . g$11939$1Bug2v)
        (gc-collect . g$11938$1Bug2v)
        (clr-type? . g$11937$1Bug2v)
        (get-clr-type . g$11936$1Bug2v)
        (vector-append . g$11934$1Bug2v)
        (vector-filter . g$11933$1Bug2v)
        (vector-reverse! . g$11932$1Bug2v)
        (vector-contains? . g$11931$1Bug2v)
        (vector-index-of . g$11930$1Bug2v)
        (vector-copy . g$11929$1Bug2v)
        (vector-binary-search . g$11928$1Bug2v)
        (get-output-string . g$11927$1Bug2v)
        (open-output-string . g$11926$1Bug2v)
        (open-input-string . g$11925$1Bug2v)
        (string-ci-compare . g$11924$1Bug2v)
        (string-compare . g$11923$1Bug2v)
        (string-format . g$11922$1Bug2v)
        (trace-printer . g$11773$1Bug2v)
        (make-traced-procedure . g$11921$1Bug2v)
        (make-traced-macro . g$7531$1Bug2v)
        (pmap . g$11920$1Bug2v)
        (time-it . g$11919$1Bug2v)
        (make-parameter . g$7536$1Bug2v)
        (library-locator . g$11918$1Bug2v)
        (get-library-paths . g$11917$1Bug2v)
        (environment-bindings . g$8798$1Bug2v)
        (environment-symbols . g$8801$1Bug2v)
        (interaction-environment-symbols . g$8797$1Bug2v)
        (optimization-level . g$11916$1Bug2v)
        (library-path . g$7966$1Bug2v)
        (&no-nans . g$11915$1Bug2v)
        (&no-infinities . g$11914$1Bug2v)
        (&i/o-encoding . g$11913$1Bug2v)
        (&i/o-decoding . g$11912$1Bug2v)
        (&i/o-port . g$11911$1Bug2v)
        (&i/o-file-does-not-exist . g$11910$1Bug2v)
        (&i/o-file-already-exists . g$11909$1Bug2v)
        (&i/o-file-is-read-only . g$11908$1Bug2v)
        (&i/o-file-protection . g$11907$1Bug2v)
        (&i/o-filename . g$11906$1Bug2v)
        (&i/o-invalid-position . g$11905$1Bug2v)
        (&i/o-write . g$11904$1Bug2v)
        (&i/o-read . g$11903$1Bug2v)
        (&i/o . g$11902$1Bug2v)
        (&non-continuable . g$11901$1Bug2v)
        (&undefined . g$11900$1Bug2v)
        (&syntax . g$11899$1Bug2v)
        (&lexical . g$11898$1Bug2v)
        (&implementation-restriction . g$11897$1Bug2v)
        (&who . g$11895$1Bug2v)
        (&irritants . g$11894$1Bug2v)
        (&assertion . g$11893$1Bug2v)
        (&violation . g$11892$1Bug2v)
        (&error . g$11891$1Bug2v)
        (&serious . g$11890$1Bug2v)
        (&warning . g$11889$1Bug2v)
        (&message . g$11888$1Bug2v)
        (&condition . g$11887$1Bug2v)
        (define-condition-type . g$11886$1Bug2v)
        (define-enumeration . g$11885$1Bug2v)
        (define-record-type . g$11884$1Bug2v)
        (parent-rtd . g$11883$1Bug2v)
        (nongenerative . g$11882$1Bug2v)
        (opaque . g$11881$1Bug2v)
        (sealed . g$11880$1Bug2v)
        (protocol . g$11879$1Bug2v)
        (parent . g$11878$1Bug2v)
        (immutable . g$11877$1Bug2v)
        (mutable . g$11876$1Bug2v)
        (fields . g$11875$1Bug2v)
        (error-handling-mode . g$11874$1Bug2v)
        (file-options . g$11873$1Bug2v)
        (buffer-mode . g$11872$1Bug2v)
        (eol-style . g$11871$1Bug2v)
        (guard . g$11870$1Bug2v)
        (trace-letrec-syntax . g$11869$1Bug2v)
        (trace-let-syntax . g$11868$1Bug2v)
        (trace-define-syntax . g$11867$1Bug2v)
        (trace-define . g$11866$1Bug2v)
        (trace-lambda . g$11865$1Bug2v)
        (unsyntax-splicing . g$11864$1Bug2v)
        (unsyntax . g$11863$1Bug2v)
        (unquote-splicing . g$11862$1Bug2v)
        (unquote . g$11861$1Bug2v)
        (_ . g$11860$1Bug2v)
        (else . g$11859$1Bug2v)
        (=> . g$11858$1Bug2v)
        (... . g$11857$1Bug2v)
        (assert . g$11856$1Bug2v)
        (endianness . g$11855$1Bug2v)
        (delay . g$11854$1Bug2v)
        (time . g$11853$1Bug2v)
        (or . g$11852$1Bug2v)
        (and . g$11851$1Bug2v)
        (do . g$11850$1Bug2v)
        (cond . g$11849$1Bug2v)
        (let* . g$11848$1Bug2v)
        (let . g$11847$1Bug2v)
        (identifier-syntax . g$11846$1Bug2v)
        (with-syntax . g$11845$1Bug2v)
        (quasisyntax . g$11844$1Bug2v)
        (quasiquote . g$11843$1Bug2v)
        (syntax-rules . g$11842$1Bug2v)
        (include-into . g$11841$1Bug2v)
        (include . g$11840$1Bug2v)
        (let-values . g$11838$1Bug2v)
        (let*-values . g$11837$1Bug2v)
        (record-constructor-descriptor . g$11836$1Bug2v)
        (record-type-descriptor . g$11835$1Bug2v)
        (fluid-let-syntax . g$11834$1Bug2v)
        (case . g$11833$1Bug2v)
        (parameterize . g$11832$1Bug2v)
        (unless . g$11831$1Bug2v)
        (when . g$11830$1Bug2v)
        (if . g$11829$1Bug2v)
        (letrec* . g$11828$1Bug2v)
        (letrec . g$11827$1Bug2v)
        (case-lambda . g$11825$1Bug2v)
        (lambda . g$11824$1Bug2v)
        (syntax . g$11823$1Bug2v)
        (syntax-case . g$11822$1Bug2v)
        (quote . g$11821$1Bug2v)
        (letrec-syntax . g$11819$1Bug2v)
        (let-syntax . g$11818$1Bug2v)
        (set! . g$11817$1Bug2v)
        (export . g$11816$1Bug2v)
        (import . g$11815$1Bug2v)
        (library . g$11814$1Bug2v)
        (begin . g$11813$1Bug2v)
        (module . g$11812$1Bug2v)
        (define-syntax . g$11811$1Bug2v)
        (define . g$11810$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12434$1Bug2v
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$11917$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12435$1Bug2v
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$12375$1Bug2v)
        (annotation-source . g$12374$1Bug2v)
        (annotation-expression . g$12373$1Bug2v)
        (annotation? . g$12372$1Bug2v)
        (read-annotated . g$12371$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12436$1Bug2v
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12341$1Bug2v)
        (serialize-library . g$12340$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12437$1Bug2v
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((variable-transformer-procedure . g$8428$1Bug2v)
        (variable-transformer? . g$8427$1Bug2v)
        (eqv-hash . g$11947$1Bug2v)
        (eq-hash . g$11946$1Bug2v)
        (reverse! . g$11945$1Bug2v)
        (format . g$7511$1Bug2v)
        (get-command-line . g$11935$1Bug2v)
        (make-traced-procedure . g$11921$1Bug2v)
        (assertion-error . g$8819$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12438$1Bug2v
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$11948$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12439$1Bug2v
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12359$1Bug2v)
        (clr-field-set!-internal . g$12358$1Bug2v)
        (clr-field-get-internal . g$12357$1Bug2v)
        (clr-cast-internal . g$12356$1Bug2v)
        (clr-call-internal . g$12355$1Bug2v)
        (clr-new-internal . g$12354$1Bug2v)
        (clr-new-array-internal . g$12353$1Bug2v)
        (clr-is-internal . g$12352$1Bug2v)
        (clr-reference-internal . g$12351$1Bug2v)
        (clr-using-internal . g$12350$1Bug2v)
        (clr-clear-usings-internal . g$12349$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12440$1Bug2v
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$11862$1Bug2v)
        (unquote . g$11861$1Bug2v)
        (else . g$11859$1Bug2v)
        (=> . g$11858$1Bug2v)
        (delay . g$11854$1Bug2v)
        (or . g$11852$1Bug2v)
        (and . g$11851$1Bug2v)
        (do . g$11850$1Bug2v)
        (cond . g$11849$1Bug2v)
        (let* . g$11848$1Bug2v)
        (let . g$11847$1Bug2v)
        (quasiquote . g$11843$1Bug2v)
        (syntax-rules . g$11842$1Bug2v)
        (case . g$11833$1Bug2v)
        (if . g$11829$1Bug2v)
        (letrec . g$11827$1Bug2v)
        (lambda . g$11824$1Bug2v)
        (quote . g$11821$1Bug2v)
        (letrec-syntax . g$11819$1Bug2v)
        (let-syntax . g$11818$1Bug2v)
        (set! . g$11817$1Bug2v)
        (begin . g$11813$1Bug2v)
        (define-syntax . g$11811$1Bug2v)
        (define . g$11810$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12441$1Bug2v
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((interaction-environment . g$8829$1Bug2v)
        (char-ready? . g$12339$1Bug2v)
        (string-ci>? . g$6938$1Bug2v)
        (string-ci>=? . g$6940$1Bug2v)
        (string-ci=? . g$6936$1Bug2v)
        (string-ci<? . g$6937$1Bug2v)
        (string-ci<=? . g$6939$1Bug2v)
        (char-whitespace? . g$12330$1Bug2v)
        (char-upper-case? . g$12329$1Bug2v)
        (char-numeric? . g$12327$1Bug2v)
        (char-lower-case? . g$12326$1Bug2v)
        (char-upcase . g$12324$1Bug2v)
        (char-downcase . g$12321$1Bug2v)
        (char-ci>? . g$6977$1Bug2v)
        (char-ci>=? . g$6979$1Bug2v)
        (char-ci=? . g$6975$1Bug2v)
        (char-ci<? . g$6976$1Bug2v)
        (char-ci<=? . g$6978$1Bug2v)
        (char-alphabetic? . g$12320$1Bug2v)
        (call-with-output-file . g$7366$1Bug2v)
        (call-with-input-file . g$7365$1Bug2v)
        (write-char . g$12288$1Bug2v)
        (write . g$12287$1Bug2v)
        (with-output-to-file . g$7364$1Bug2v)
        (with-input-from-file . g$7363$1Bug2v)
        (read-char . g$12286$1Bug2v)
        (read . g$12285$1Bug2v)
        (peek-char . g$12284$1Bug2v)
        (open-output-file . g$12283$1Bug2v)
        (open-input-file . g$12282$1Bug2v)
        (newline . g$12281$1Bug2v)
        (display . g$12280$1Bug2v)
        (close-output-port . g$12279$1Bug2v)
        (close-input-port . g$12278$1Bug2v)
        (eof-object? . g$12277$1Bug2v)
        (eof-object . g$12276$1Bug2v)
        (current-error-port . g$12275$1Bug2v)
        (current-output-port . g$12274$1Bug2v)
        (current-input-port . g$12273$1Bug2v)
        (output-port? . g$12272$1Bug2v)
        (input-port? . g$12271$1Bug2v)
        (scheme-report-environment . g$8804$1Bug2v)
        (quotient . g$6804$1Bug2v)
        (null-environment . g$8803$1Bug2v)
        (remainder . g$6805$1Bug2v)
        (modulo . g$6806$1Bug2v)
        (inexact->exact . g$12209$1Bug2v)
        (force . g$6808$1Bug2v)
        (exact->inexact . g$12208$1Bug2v)
        (string-fill! . g$12206$1Bug2v)
        (string-set! . g$12205$1Bug2v)
        (set-cdr! . g$12204$1Bug2v)
        (set-car! . g$12203$1Bug2v)
        (memv . g$5814$1Bug2v)
        (memq . g$5813$1Bug2v)
        (member . g$5815$1Bug2v)
        (assv . g$5810$1Bug2v)
        (assq . g$5809$1Bug2v)
        (assoc . g$5811$1Bug2v)
        (eval . g$8806$1Bug2v)
        (zero? . g$12069$1Bug2v)
        (vector? . g$12068$1Bug2v)
        (vector-set! . g$12067$1Bug2v)
        (vector-ref . g$12066$1Bug2v)
        (vector-length . g$12064$1Bug2v)
        (vector-fill! . g$12062$1Bug2v)
        (vector->list . g$12061$1Bug2v)
        (vector . g$12060$1Bug2v)
        (values . g$12059$1Bug2v)
        (truncate . g$12058$1Bug2v)
        (tan . g$12057$1Bug2v)
        (symbol? . g$12056$1Bug2v)
        (symbol->string . g$12055$1Bug2v)
        (substring . g$12054$1Bug2v)
        (string? . g$12053$1Bug2v)
        (string>? . g$5973$1Bug2v)
        (string>=? . g$5975$1Bug2v)
        (string=? . g$5971$1Bug2v)
        (string<? . g$5972$1Bug2v)
        (string<=? . g$5974$1Bug2v)
        (string-ref . g$12052$1Bug2v)
        (string-length . g$12051$1Bug2v)
        (string-copy . g$12049$1Bug2v)
        (string-append . g$12048$1Bug2v)
        (string->symbol . g$12047$1Bug2v)
        (string->number . g$12046$1Bug2v)
        (string->list . g$12045$1Bug2v)
        (string . g$12044$1Bug2v)
        (sqrt . g$12043$1Bug2v)
        (sin . g$12042$1Bug2v)
        (round . g$12041$1Bug2v)
        (reverse . g$12040$1Bug2v)
        (real? . g$12039$1Bug2v)
        (real-part . g$12037$1Bug2v)
        (rationalize . g$6017$1Bug2v)
        (rational? . g$12036$1Bug2v)
        (procedure? . g$12034$1Bug2v)
        (positive? . g$12033$1Bug2v)
        (pair? . g$12032$1Bug2v)
        (odd? . g$12031$1Bug2v)
        (numerator . g$12030$1Bug2v)
        (number? . g$12029$1Bug2v)
        (number->string . g$12028$1Bug2v)
        (null? . g$12027$1Bug2v)
        (not . g$12026$1Bug2v)
        (negative? . g$12025$1Bug2v)
        (min . g$12023$1Bug2v)
        (max . g$12022$1Bug2v)
        (map . g$12021$1Bug2v)
        (make-vector . g$12020$1Bug2v)
        (make-string . g$12019$1Bug2v)
        (make-rectangular . g$12018$1Bug2v)
        (make-polar . g$12017$1Bug2v)
        (magnitude . g$12016$1Bug2v)
        (log . g$12015$1Bug2v)
        (list? . g$12014$1Bug2v)
        (list-tail . g$12013$1Bug2v)
        (list-ref . g$12012$1Bug2v)
        (list->vector . g$12011$1Bug2v)
        (list->string . g$12010$1Bug2v)
        (list . g$12009$1Bug2v)
        (length . g$12008$1Bug2v)
        (lcm . g$12007$1Bug2v)
        (integer? . g$12006$1Bug2v)
        (integer->char . g$12004$1Bug2v)
        (inexact? . g$12002$1Bug2v)
        (imag-part . g$12000$1Bug2v)
        (gcd . g$11999$1Bug2v)
        (for-each . g$11998$1Bug2v)
        (floor . g$11997$1Bug2v)
        (expt . g$11995$1Bug2v)
        (exp . g$11994$1Bug2v)
        (exact? . g$11993$1Bug2v)
        (even? . g$11990$1Bug2v)
        (eqv? . g$11988$1Bug2v)
        (equal? . g$11987$1Bug2v)
        (eq? . g$11986$1Bug2v)
        (dynamic-wind . g$11985$1Bug2v)
        (denominator . g$11978$1Bug2v)
        (cos . g$11977$1Bug2v)
        (cons . g$11976$1Bug2v)
        (complex? . g$11975$1Bug2v)
        (char? . g$11974$1Bug2v)
        (char>? . g$6014$1Bug2v)
        (char>=? . g$6016$1Bug2v)
        (char=? . g$6012$1Bug2v)
        (char<? . g$6013$1Bug2v)
        (char<=? . g$6015$1Bug2v)
        (char->integer . g$11973$1Bug2v)
        (ceiling . g$11972$1Bug2v)
        (call-with-values . g$11971$1Bug2v)
        (call-with-current-continuation . g$11969$1Bug2v)
        (cddddr . g$5936$1Bug2v)
        (cdddar . g$5935$1Bug2v)
        (cddadr . g$5934$1Bug2v)
        (cddaar . g$5933$1Bug2v)
        (cdaddr . g$5932$1Bug2v)
        (cdadar . g$5931$1Bug2v)
        (cdaadr . g$5930$1Bug2v)
        (cdaaar . g$5929$1Bug2v)
        (cadddr . g$5928$1Bug2v)
        (caddar . g$5927$1Bug2v)
        (cadadr . g$5926$1Bug2v)
        (cadaar . g$5925$1Bug2v)
        (caaddr . g$5924$1Bug2v)
        (caadar . g$5923$1Bug2v)
        (caaadr . g$5922$1Bug2v)
        (caaaar . g$5921$1Bug2v)
        (cdddr . g$5920$1Bug2v)
        (cddar . g$5919$1Bug2v)
        (cdadr . g$5918$1Bug2v)
        (cdaar . g$5917$1Bug2v)
        (caddr . g$5916$1Bug2v)
        (cadar . g$5915$1Bug2v)
        (caadr . g$5914$1Bug2v)
        (caaar . g$5913$1Bug2v)
        (cddr . g$5912$1Bug2v)
        (cdar . g$5911$1Bug2v)
        (cadr . g$5910$1Bug2v)
        (caar . g$5909$1Bug2v)
        (cdr . g$11968$1Bug2v)
        (car . g$11967$1Bug2v)
        (boolean? . g$11966$1Bug2v)
        (atan . g$11965$1Bug2v)
        (asin . g$11963$1Bug2v)
        (apply . g$11962$1Bug2v)
        (append . g$11961$1Bug2v)
        (angle . g$11960$1Bug2v)
        (acos . g$11959$1Bug2v)
        (abs . g$11958$1Bug2v)
        (/ . g$11957$1Bug2v)
        (* . g$11956$1Bug2v)
        (- . g$11955$1Bug2v)
        (+ . g$11954$1Bug2v)
        (>= . g$11953$1Bug2v)
        (> . g$11952$1Bug2v)
        (= . g$11951$1Bug2v)
        (<= . g$11950$1Bug2v)
        (< . g$11949$1Bug2v)
        (unquote-splicing . g$11862$1Bug2v)
        (unquote . g$11861$1Bug2v)
        (else . g$11859$1Bug2v)
        (=> . g$11858$1Bug2v)
        (... . g$11857$1Bug2v)
        (delay . g$11854$1Bug2v)
        (or . g$11852$1Bug2v)
        (and . g$11851$1Bug2v)
        (do . g$11850$1Bug2v)
        (cond . g$11849$1Bug2v)
        (let* . g$11848$1Bug2v)
        (let . g$11847$1Bug2v)
        (quasiquote . g$11843$1Bug2v)
        (syntax-rules . g$11842$1Bug2v)
        (case . g$11833$1Bug2v)
        (if . g$11829$1Bug2v)
        (letrec . g$11827$1Bug2v)
        (lambda . g$11824$1Bug2v)
        (quote . g$11821$1Bug2v)
        (letrec-syntax . g$11819$1Bug2v)
        (let-syntax . g$11818$1Bug2v)
        (set! . g$11817$1Bug2v)
        (begin . g$11813$1Bug2v)
        (define-syntax . g$11811$1Bug2v)
        (define . g$11810$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12442$1Bug2v
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12338$1Bug2v)
        (string-titlecase . g$12337$1Bug2v)
        (string-normalize-nfkd . g$12336$1Bug2v)
        (string-normalize-nfkc . g$12335$1Bug2v)
        (string-normalize-nfd . g$12334$1Bug2v)
        (string-normalize-nfc . g$12333$1Bug2v)
        (string-foldcase . g$12332$1Bug2v)
        (string-downcase . g$12331$1Bug2v)
        (string-ci>? . g$6938$1Bug2v)
        (string-ci>=? . g$6940$1Bug2v)
        (string-ci=? . g$6936$1Bug2v)
        (string-ci<? . g$6937$1Bug2v)
        (string-ci<=? . g$6939$1Bug2v)
        (char-whitespace? . g$12330$1Bug2v)
        (char-upper-case? . g$12329$1Bug2v)
        (char-title-case? . g$12328$1Bug2v)
        (char-numeric? . g$12327$1Bug2v)
        (char-lower-case? . g$12326$1Bug2v)
        (char-general-category . g$12325$1Bug2v)
        (char-upcase . g$12324$1Bug2v)
        (char-titlecase . g$12323$1Bug2v)
        (char-foldcase . g$12322$1Bug2v)
        (char-downcase . g$12321$1Bug2v)
        (char-ci>? . g$6977$1Bug2v)
        (char-ci>=? . g$6979$1Bug2v)
        (char-ci=? . g$6975$1Bug2v)
        (char-ci<? . g$6976$1Bug2v)
        (char-ci<=? . g$6978$1Bug2v)
        (char-alphabetic? . g$12320$1Bug2v)
        (make-variable-transformer . g$8426$1Bug2v)
        (identifier? . g$8824$1Bug2v)
        (generate-temporaries . g$8813$1Bug2v)
        (free-identifier=? . g$8814$1Bug2v)
        (syntax->datum . g$8826$1Bug2v)
        (datum->syntax . g$8825$1Bug2v)
        (bound-identifier=? . g$8815$1Bug2v)
        (record-type-descriptor? . g$12319$1Bug2v)
        (record-predicate . g$12318$1Bug2v)
        (record-mutator . g$12317$1Bug2v)
        (record-constructor . g$12316$1Bug2v)
        (record-accessor . g$12315$1Bug2v)
        (make-record-type-descriptor . g$12314$1Bug2v)
        (make-record-constructor-descriptor . g$12313$1Bug2v)
        (record? . g$12312$1Bug2v)
        (record-type-uid . g$12311$1Bug2v)
        (record-type-sealed? . g$12310$1Bug2v)
        (record-type-parent . g$12309$1Bug2v)
        (record-type-opaque? . g$12308$1Bug2v)
        (record-type-name . g$12307$1Bug2v)
        (record-type-generative? . g$12306$1Bug2v)
        (record-type-field-names . g$12305$1Bug2v)
        (record-rtd . g$12304$1Bug2v)
        (record-field-mutable? . g$12303$1Bug2v)
        (delete-file . g$6461$1Bug2v)
        (file-exists? . g$6460$1Bug2v)
        (vector-sort! . g$12302$1Bug2v)
        (vector-sort . g$12301$1Bug2v)
        (list-sort . g$6824$1Bug2v)
        (symbol-hash . g$12300$1Bug2v)
        (string-ci-hash . g$12299$1Bug2v)
        (string-hash . g$12298$1Bug2v)
        (equal-hash . g$12297$1Bug2v)
        (hashtable-equivalence-function . g$12296$1Bug2v)
        (make-hashtable . g$12295$1Bug2v)
        (hashtable-hash-function . g$12294$1Bug2v)
        (make-eqv-hashtable . g$6428$1Bug2v)
        (make-eq-hashtable . g$6427$1Bug2v)
        (hashtable? . g$12293$1Bug2v)
        (hashtable-update! . g$6434$1Bug2v)
        (hashtable-size . g$6429$1Bug2v)
        (hashtable-set! . g$6431$1Bug2v)
        (hashtable-ref . g$6430$1Bug2v)
        (hashtable-mutable? . g$12292$1Bug2v)
        (hashtable-keys . g$12291$1Bug2v)
        (hashtable-entries . g$12290$1Bug2v)
        (hashtable-delete! . g$6432$1Bug2v)
        (hashtable-copy . g$12289$1Bug2v)
        (hashtable-contains? . g$6433$1Bug2v)
        (hashtable-clear! . g$6435$1Bug2v)
        (call-with-output-file . g$7366$1Bug2v)
        (call-with-input-file . g$7365$1Bug2v)
        (write-char . g$12288$1Bug2v)
        (write . g$12287$1Bug2v)
        (with-output-to-file . g$7364$1Bug2v)
        (with-input-from-file . g$7363$1Bug2v)
        (read-char . g$12286$1Bug2v)
        (read . g$12285$1Bug2v)
        (peek-char . g$12284$1Bug2v)
        (open-output-file . g$12283$1Bug2v)
        (open-input-file . g$12282$1Bug2v)
        (newline . g$12281$1Bug2v)
        (display . g$12280$1Bug2v)
        (close-output-port . g$12279$1Bug2v)
        (close-input-port . g$12278$1Bug2v)
        (eof-object? . g$12277$1Bug2v)
        (eof-object . g$12276$1Bug2v)
        (current-error-port . g$12275$1Bug2v)
        (current-output-port . g$12274$1Bug2v)
        (current-input-port . g$12273$1Bug2v)
        (output-port? . g$12272$1Bug2v)
        (input-port? . g$12271$1Bug2v)
        (utf-8-codec . g$12270$1Bug2v)
        (utf-16-codec . g$12269$1Bug2v)
        (transcoder-error-handling-mode . g$12268$1Bug2v)
        (transcoder-eol-style . g$12267$1Bug2v)
        (transcoder-codec . g$12266$1Bug2v)
        (transcoded-port . g$12265$1Bug2v)
        (textual-port? . g$12264$1Bug2v)
        (string->bytevector . g$12263$1Bug2v)
        (standard-output-port . g$12262$1Bug2v)
        (standard-input-port . g$12261$1Bug2v)
        (standard-error-port . g$12260$1Bug2v)
        (set-port-position! . g$12259$1Bug2v)
        (put-u8 . g$12258$1Bug2v)
        (put-string . g$12257$1Bug2v)
        (put-datum . g$12256$1Bug2v)
        (put-char . g$12255$1Bug2v)
        (put-bytevector . g$12254$1Bug2v)
        (port? . g$7342$1Bug2v)
        (port-transcoder . g$12253$1Bug2v)
        (port-position . g$12252$1Bug2v)
        (port-has-set-port-position!? . g$12251$1Bug2v)
        (port-has-port-position? . g$12250$1Bug2v)
        (port-eof? . g$12249$1Bug2v)
        (output-port-buffer-mode . g$12248$1Bug2v)
        (open-string-output-port . g$7341$1Bug2v)
        (open-string-input-port . g$12247$1Bug2v)
        (open-file-output-port . g$12246$1Bug2v)
        (open-file-input/output-port . g$12245$1Bug2v)
        (open-file-input-port . g$12244$1Bug2v)
        (open-bytevector-output-port . g$12243$1Bug2v)
        (open-bytevector-input-port . g$12242$1Bug2v)
        (native-transcoder . g$12241$1Bug2v)
        (native-eol-style . g$12240$1Bug2v)
        (make-transcoder . g$12239$1Bug2v)
        (latin-1-codec . g$12238$1Bug2v)
        (make-i/o-write-error . g$7198$1Bug2v)
        (make-i/o-read-error . g$7184$1Bug2v)
        (make-i/o-port-error . g$7303$1Bug2v)
        (make-i/o-invalid-position-error . g$7213$1Bug2v)
        (make-i/o-filename-error . g$7230$1Bug2v)
        (make-i/o-file-protection-error . g$7246$1Bug2v)
        (make-i/o-file-is-read-only-error . g$7260$1Bug2v)
        (make-i/o-file-does-not-exist-error . g$7288$1Bug2v)
        (make-i/o-file-already-exists-error . g$7274$1Bug2v)
        (make-i/o-error . g$7170$1Bug2v)
        (make-i/o-encoding-error . g$7334$1Bug2v)
        (make-i/o-decoding-error . g$7319$1Bug2v)
        (make-custom-textual-output-port . g$12237$1Bug2v)
        (make-custom-textual-input/output-port . g$12236$1Bug2v)
        (make-custom-textual-input-port . g$12235$1Bug2v)
        (make-custom-binary-output-port . g$12234$1Bug2v)
        (make-custom-binary-input/output-port . g$12233$1Bug2v)
        (make-custom-binary-input-port . g$12232$1Bug2v)
        (make-bytevector . g$12231$1Bug2v)
        (lookahead-u8 . g$12230$1Bug2v)
        (lookahead-char . g$12229$1Bug2v)
        (i/o-write-error? . g$7199$1Bug2v)
        (i/o-read-error? . g$7185$1Bug2v)
        (i/o-port-error? . g$7305$1Bug2v)
        (i/o-invalid-position-error? . g$7215$1Bug2v)
        (i/o-error-position . g$7216$1Bug2v)
        (i/o-filename-error? . g$7232$1Bug2v)
        (i/o-file-protection-error? . g$7247$1Bug2v)
        (i/o-file-is-read-only-error? . g$7261$1Bug2v)
        (i/o-file-does-not-exist-error? . g$7289$1Bug2v)
        (i/o-file-already-exists-error? . g$7275$1Bug2v)
        (i/o-error? . g$7171$1Bug2v)
        (i/o-error-port . g$7306$1Bug2v)
        (i/o-error-filename . g$7233$1Bug2v)
        (i/o-encoding-error? . g$7336$1Bug2v)
        (i/o-encoding-error-char . g$7337$1Bug2v)
        (i/o-decoding-error? . g$7320$1Bug2v)
        (get-u8 . g$12228$1Bug2v)
        (get-string-n! . g$12227$1Bug2v)
        (get-string-n . g$12226$1Bug2v)
        (get-string-all . g$12225$1Bug2v)
        (get-line . g$12224$1Bug2v)
        (get-datum . g$12223$1Bug2v)
        (get-char . g$12222$1Bug2v)
        (get-bytevector-some . g$12221$1Bug2v)
        (get-bytevector-n! . g$12220$1Bug2v)
        (get-bytevector-n . g$12219$1Bug2v)
        (get-bytevector-all . g$12218$1Bug2v)
        (flush-output-port . g$12217$1Bug2v)
        (close-port . g$12216$1Bug2v)
        (call-with-string-output-port . g$12215$1Bug2v)
        (call-with-port . g$12214$1Bug2v)
        (call-with-bytevector-output-port . g$12213$1Bug2v)
        (bytevector->string . g$12212$1Bug2v)
        (buffer-mode? . g$12211$1Bug2v)
        (binary-port? . g$12210$1Bug2v)
        (exit . g$12207$1Bug2v)
        (command-line . g$11774$1Bug2v)
        (remove . g$5824$1Bug2v)
        (remv . g$5825$1Bug2v)
        (remp . g$5807$1Bug2v)
        (remq . g$5826$1Bug2v)
        (partition . g$5806$1Bug2v)
        (memv . g$5814$1Bug2v)
        (memq . g$5813$1Bug2v)
        (memp . g$5816$1Bug2v)
        (member . g$5815$1Bug2v)
        (exists . g$5820$1Bug2v)
        (for-all . g$5819$1Bug2v)
        (fold-right . g$5823$1Bug2v)
        (fold-left . g$5822$1Bug2v)
        (find . g$5805$1Bug2v)
        (filter . g$5808$1Bug2v)
        (cons* . g$5821$1Bug2v)
        (assv . g$5810$1Bug2v)
        (assq . g$5809$1Bug2v)
        (assp . g$5812$1Bug2v)
        (assoc . g$5811$1Bug2v)
        (with-exception-handler . g$12202$1Bug2v)
        (raise-continuable . g$12201$1Bug2v)
        (raise . g$12200$1Bug2v)
        (make-enumeration . g$7424$1Bug2v)
        (enum-set=? . g$7431$1Bug2v)
        (enum-set-universe . g$7425$1Bug2v)
        (enum-set-union . g$7432$1Bug2v)
        (enum-set-subset? . g$7430$1Bug2v)
        (enum-set-projection . g$7436$1Bug2v)
        (enum-set-member? . g$7429$1Bug2v)
        (enum-set-intersection . g$7433$1Bug2v)
        (enum-set-indexer . g$7426$1Bug2v)
        (enum-set-difference . g$7434$1Bug2v)
        (enum-set-constructor . g$7427$1Bug2v)
        (enum-set-complement . g$7435$1Bug2v)
        (enum-set->list . g$7428$1Bug2v)
        (who-condition? . g$6715$1Bug2v)
        (warning? . g$6626$1Bug2v)
        (violation? . g$6668$1Bug2v)
        (undefined-violation? . g$6792$1Bug2v)
        (syntax-violation? . g$6776$1Bug2v)
        (syntax-violation-subform . g$6778$1Bug2v)
        (syntax-violation-form . g$6777$1Bug2v)
        (syntax-violation . g$8823$1Bug2v)
        (simple-conditions . g$12199$1Bug2v)
        (serious-condition? . g$6640$1Bug2v)
        (non-continuable-violation? . g$6730$1Bug2v)
        (message-condition? . g$6611$1Bug2v)
        (make-who-condition . g$6713$1Bug2v)
        (make-warning . g$6625$1Bug2v)
        (make-violation . g$6667$1Bug2v)
        (make-undefined-violation . g$6791$1Bug2v)
        (make-syntax-violation . g$6773$1Bug2v)
        (make-serious-condition . g$6639$1Bug2v)
        (make-non-continuable-violation . g$6729$1Bug2v)
        (make-message-condition . g$6609$1Bug2v)
        (make-lexical-violation . g$6757$1Bug2v)
        (make-irritants-condition . g$6696$1Bug2v)
        (make-implementation-restriction-violation . g$6743$1Bug2v)
        (make-error . g$6653$1Bug2v)
        (make-assertion-violation . g$6681$1Bug2v)
        (lexical-violation? . g$6758$1Bug2v)
        (irritants-condition? . g$6698$1Bug2v)
        (implementation-restriction-violation? . g$6744$1Bug2v)
        (error? . g$6654$1Bug2v)
        (condition-who . g$6716$1Bug2v)
        (condition-predicate . g$12198$1Bug2v)
        (condition-message . g$6612$1Bug2v)
        (condition-irritants . g$6699$1Bug2v)
        (condition-accessor . g$12197$1Bug2v)
        (condition . g$12196$1Bug2v)
        (assertion-violation? . g$6682$1Bug2v)
        (condition? . g$12195$1Bug2v)
        (utf32->string . g$12194$1Bug2v)
        (utf16->string . g$12193$1Bug2v)
        (utf8->string . g$12192$1Bug2v)
        (uint-list->bytevector . g$12191$1Bug2v)
        (u8-list->bytevector . g$12190$1Bug2v)
        (string->utf8 . g$12189$1Bug2v)
        (string->utf32 . g$12188$1Bug2v)
        (string->utf16 . g$12187$1Bug2v)
        (sint-list->bytevector . g$12186$1Bug2v)
        (native-endianness . g$6467$1Bug2v)
        (bytevector? . g$12185$1Bug2v)
        (bytevector=? . g$12184$1Bug2v)
        (bytevector-uint-set! . g$12183$1Bug2v)
        (bytevector-uint-ref . g$12182$1Bug2v)
        (bytevector-u8-set! . g$12181$1Bug2v)
        (bytevector-u8-ref . g$12180$1Bug2v)
        (bytevector-u64-set! . g$6488$1Bug2v)
        (bytevector-u64-ref . g$6484$1Bug2v)
        (bytevector-u64-native-set! . g$6490$1Bug2v)
        (bytevector-u64-native-ref . g$6486$1Bug2v)
        (bytevector-u32-set! . g$6480$1Bug2v)
        (bytevector-u32-ref . g$6476$1Bug2v)
        (bytevector-u32-native-set! . g$6482$1Bug2v)
        (bytevector-u32-native-ref . g$6478$1Bug2v)
        (bytevector-u16-set! . g$6472$1Bug2v)
        (bytevector-u16-ref . g$6468$1Bug2v)
        (bytevector-u16-native-set! . g$6474$1Bug2v)
        (bytevector-u16-native-ref . g$6470$1Bug2v)
        (bytevector-sint-set! . g$12179$1Bug2v)
        (bytevector-sint-ref . g$12178$1Bug2v)
        (bytevector-s8-set! . g$12177$1Bug2v)
        (bytevector-s8-ref . g$12176$1Bug2v)
        (bytevector-s64-set! . g$6489$1Bug2v)
        (bytevector-s64-ref . g$6485$1Bug2v)
        (bytevector-s64-native-set! . g$6491$1Bug2v)
        (bytevector-s64-native-ref . g$6487$1Bug2v)
        (bytevector-s32-set! . g$6481$1Bug2v)
        (bytevector-s32-ref . g$6477$1Bug2v)
        (bytevector-s32-native-set! . g$6483$1Bug2v)
        (bytevector-s32-native-ref . g$6479$1Bug2v)
        (bytevector-s16-set! . g$6473$1Bug2v)
        (bytevector-s16-ref . g$6469$1Bug2v)
        (bytevector-s16-native-set! . g$6475$1Bug2v)
        (bytevector-s16-native-ref . g$6471$1Bug2v)
        (bytevector-length . g$12175$1Bug2v)
        (bytevector-ieee-single-set! . g$12174$1Bug2v)
        (bytevector-ieee-single-ref . g$12173$1Bug2v)
        (bytevector-ieee-single-native-set! . g$6494$1Bug2v)
        (bytevector-ieee-single-native-ref . g$6492$1Bug2v)
        (bytevector-ieee-double-set! . g$12172$1Bug2v)
        (bytevector-ieee-double-ref . g$12171$1Bug2v)
        (bytevector-ieee-double-native-set! . g$6495$1Bug2v)
        (bytevector-ieee-double-native-ref . g$6493$1Bug2v)
        (bytevector-fill! . g$12170$1Bug2v)
        (bytevector-copy! . g$12169$1Bug2v)
        (bytevector-copy . g$12168$1Bug2v)
        (bytevector->uint-list . g$12167$1Bug2v)
        (bytevector->u8-list . g$12166$1Bug2v)
        (bytevector->sint-list . g$12165$1Bug2v)
        (no-nans-violation? . g$7156$1Bug2v)
        (no-infinities-violation? . g$7142$1Bug2v)
        (make-no-nans-violation . g$7155$1Bug2v)
        (make-no-infinities-violation . g$7141$1Bug2v)
        (real->flonum . g$12164$1Bug2v)
        (flzero? . g$12163$1Bug2v)
        (fltruncate . g$12162$1Bug2v)
        (fltan . g$12161$1Bug2v)
        (flsqrt . g$12160$1Bug2v)
        (flsin . g$12159$1Bug2v)
        (flround . g$12158$1Bug2v)
        (flpositive? . g$12157$1Bug2v)
        (flonum? . g$12156$1Bug2v)
        (flodd? . g$12155$1Bug2v)
        (flnumerator . g$12154$1Bug2v)
        (flnegative? . g$12153$1Bug2v)
        (flnan? . g$12152$1Bug2v)
        (flmod0 . g$12151$1Bug2v)
        (flmod . g$12150$1Bug2v)
        (flmin . g$12149$1Bug2v)
        (flmax . g$12148$1Bug2v)
        (fllog . g$12147$1Bug2v)
        (flinteger? . g$12146$1Bug2v)
        (flinfinite? . g$12145$1Bug2v)
        (flfloor . g$12144$1Bug2v)
        (flfinite? . g$12143$1Bug2v)
        (flexpt . g$12142$1Bug2v)
        (flexp . g$12141$1Bug2v)
        (fleven? . g$12140$1Bug2v)
        (fldiv0-and-mod0 . g$12139$1Bug2v)
        (fldiv0 . g$12138$1Bug2v)
        (fldiv-and-mod . g$12137$1Bug2v)
        (fldiv . g$12136$1Bug2v)
        (fldenominator . g$12135$1Bug2v)
        (flcos . g$12134$1Bug2v)
        (flceiling . g$12133$1Bug2v)
        (flatan . g$12132$1Bug2v)
        (flasin . g$12131$1Bug2v)
        (flacos . g$12130$1Bug2v)
        (flabs . g$12129$1Bug2v)
        (fl>? . g$12128$1Bug2v)
        (fl>=? . g$12127$1Bug2v)
        (fl=? . g$12126$1Bug2v)
        (fl<? . g$12125$1Bug2v)
        (fl<=? . g$12124$1Bug2v)
        (fl/ . g$12123$1Bug2v)
        (fl- . g$12122$1Bug2v)
        (fl+ . g$12121$1Bug2v)
        (fl* . g$12120$1Bug2v)
        (fixnum->flonum . g$12119$1Bug2v)
        (fxzero? . g$12118$1Bug2v)
        (fxxor . g$12117$1Bug2v)
        (fxrotate-bit-field . g$7087$1Bug2v)
        (fxreverse-bit-field . g$12116$1Bug2v)
        (fxpositive? . g$12115$1Bug2v)
        (fxodd? . g$12114$1Bug2v)
        (fxnot . g$12113$1Bug2v)
        (fxnegative? . g$12112$1Bug2v)
        (fxmod0 . g$12111$1Bug2v)
        (fxmod . g$12110$1Bug2v)
        (fxmin . g$12109$1Bug2v)
        (fxmax . g$12108$1Bug2v)
        (fxlength . g$12107$1Bug2v)
        (fxior . g$12106$1Bug2v)
        (fxif . g$7081$1Bug2v)
        (fxfirst-bit-set . g$12105$1Bug2v)
        (fxeven? . g$12104$1Bug2v)
        (fxdiv0-and-mod0 . g$12103$1Bug2v)
        (fxdiv0 . g$12102$1Bug2v)
        (fxdiv-and-mod . g$12101$1Bug2v)
        (fxdiv . g$12100$1Bug2v)
        (fxcopy-bit-field . g$7084$1Bug2v)
        (fxcopy-bit . g$7082$1Bug2v)
        (fxbit-set? . g$12099$1Bug2v)
        (fxbit-field . g$7083$1Bug2v)
        (fxbit-count . g$12098$1Bug2v)
        (fxarithmetic-shift-right . g$7086$1Bug2v)
        (fxarithmetic-shift-left . g$7085$1Bug2v)
        (fxarithmetic-shift . g$12097$1Bug2v)
        (fxand . g$12096$1Bug2v)
        (fx>? . g$12095$1Bug2v)
        (fx>=? . g$12094$1Bug2v)
        (fx=? . g$12093$1Bug2v)
        (fx<? . g$12092$1Bug2v)
        (fx<=? . g$12091$1Bug2v)
        (fx-/carry . g$12090$1Bug2v)
        (fx- . g$12089$1Bug2v)
        (fx+/carry . g$12088$1Bug2v)
        (fx+ . g$12087$1Bug2v)
        (fx*/carry . g$12086$1Bug2v)
        (fx* . g$12085$1Bug2v)
        (greatest-fixnum . g$12084$1Bug2v)
        (least-fixnum . g$12083$1Bug2v)
        (fixnum-width . g$12082$1Bug2v)
        (fixnum? . g$12081$1Bug2v)
        (bitwise-rotate-bit-field . g$7039$1Bug2v)
        (bitwise-reverse-bit-field . g$12080$1Bug2v)
        (bitwise-length . g$12079$1Bug2v)
        (bitwise-if . g$7033$1Bug2v)
        (bitwise-first-bit-set . g$12078$1Bug2v)
        (bitwise-copy-bit-field . g$7036$1Bug2v)
        (bitwise-copy-bit . g$7034$1Bug2v)
        (bitwise-bit-set? . g$12077$1Bug2v)
        (bitwise-bit-field . g$12076$1Bug2v)
        (bitwise-bit-count . g$12075$1Bug2v)
        (bitwise-xor . g$12074$1Bug2v)
        (bitwise-ior . g$12073$1Bug2v)
        (bitwise-and . g$12072$1Bug2v)
        (bitwise-not . g$12071$1Bug2v)
        (bitwise-arithmetic-shift-right . g$7038$1Bug2v)
        (bitwise-arithmetic-shift-left . g$7037$1Bug2v)
        (bitwise-arithmetic-shift . g$12070$1Bug2v)
        (zero? . g$12069$1Bug2v)
        (vector? . g$12068$1Bug2v)
        (vector-set! . g$12067$1Bug2v)
        (vector-ref . g$12066$1Bug2v)
        (vector-map . g$12065$1Bug2v)
        (vector-length . g$12064$1Bug2v)
        (vector-for-each . g$12063$1Bug2v)
        (vector-fill! . g$12062$1Bug2v)
        (vector->list . g$12061$1Bug2v)
        (vector . g$12060$1Bug2v)
        (values . g$12059$1Bug2v)
        (truncate . g$12058$1Bug2v)
        (tan . g$12057$1Bug2v)
        (symbol? . g$12056$1Bug2v)
        (symbol=? . g$5976$1Bug2v)
        (symbol->string . g$12055$1Bug2v)
        (substring . g$12054$1Bug2v)
        (string? . g$12053$1Bug2v)
        (string>? . g$5973$1Bug2v)
        (string>=? . g$5975$1Bug2v)
        (string=? . g$5971$1Bug2v)
        (string<? . g$5972$1Bug2v)
        (string<=? . g$5974$1Bug2v)
        (string-ref . g$12052$1Bug2v)
        (string-length . g$12051$1Bug2v)
        (string-for-each . g$12050$1Bug2v)
        (string-copy . g$12049$1Bug2v)
        (string-append . g$12048$1Bug2v)
        (string->symbol . g$12047$1Bug2v)
        (string->number . g$12046$1Bug2v)
        (string->list . g$12045$1Bug2v)
        (string . g$12044$1Bug2v)
        (sqrt . g$12043$1Bug2v)
        (sin . g$12042$1Bug2v)
        (round . g$12041$1Bug2v)
        (reverse . g$12040$1Bug2v)
        (real? . g$12039$1Bug2v)
        (real-valued? . g$12038$1Bug2v)
        (real-part . g$12037$1Bug2v)
        (rationalize . g$6017$1Bug2v)
        (rational? . g$12036$1Bug2v)
        (rational-valued? . g$12035$1Bug2v)
        (procedure? . g$12034$1Bug2v)
        (positive? . g$12033$1Bug2v)
        (pair? . g$12032$1Bug2v)
        (odd? . g$12031$1Bug2v)
        (numerator . g$12030$1Bug2v)
        (number? . g$12029$1Bug2v)
        (number->string . g$12028$1Bug2v)
        (null? . g$12027$1Bug2v)
        (not . g$12026$1Bug2v)
        (negative? . g$12025$1Bug2v)
        (nan? . g$12024$1Bug2v)
        (min . g$12023$1Bug2v)
        (max . g$12022$1Bug2v)
        (map . g$12021$1Bug2v)
        (make-vector . g$12020$1Bug2v)
        (make-string . g$12019$1Bug2v)
        (make-rectangular . g$12018$1Bug2v)
        (make-polar . g$12017$1Bug2v)
        (magnitude . g$12016$1Bug2v)
        (log . g$12015$1Bug2v)
        (list? . g$12014$1Bug2v)
        (list-tail . g$12013$1Bug2v)
        (list-ref . g$12012$1Bug2v)
        (list->vector . g$12011$1Bug2v)
        (list->string . g$12010$1Bug2v)
        (list . g$12009$1Bug2v)
        (length . g$12008$1Bug2v)
        (lcm . g$12007$1Bug2v)
        (integer? . g$12006$1Bug2v)
        (integer-valued? . g$12005$1Bug2v)
        (integer->char . g$12004$1Bug2v)
        (infinite? . g$12003$1Bug2v)
        (inexact? . g$12002$1Bug2v)
        (inexact . g$12001$1Bug2v)
        (imag-part . g$12000$1Bug2v)
        (gcd . g$11999$1Bug2v)
        (for-each . g$11998$1Bug2v)
        (floor . g$11997$1Bug2v)
        (finite? . g$11996$1Bug2v)
        (expt . g$11995$1Bug2v)
        (exp . g$11994$1Bug2v)
        (exact? . g$11993$1Bug2v)
        (exact-integer-sqrt . g$11992$1Bug2v)
        (exact . g$11991$1Bug2v)
        (even? . g$11990$1Bug2v)
        (error . g$11989$1Bug2v)
        (eqv? . g$11988$1Bug2v)
        (equal? . g$11987$1Bug2v)
        (eq? . g$11986$1Bug2v)
        (dynamic-wind . g$11985$1Bug2v)
        (div0-and-mod0 . g$11984$1Bug2v)
        (mod0 . g$11983$1Bug2v)
        (div0 . g$11982$1Bug2v)
        (div-and-mod . g$11981$1Bug2v)
        (mod . g$11980$1Bug2v)
        (div . g$11979$1Bug2v)
        (denominator . g$11978$1Bug2v)
        (cos . g$11977$1Bug2v)
        (cons . g$11976$1Bug2v)
        (complex? . g$11975$1Bug2v)
        (char? . g$11974$1Bug2v)
        (char>? . g$6014$1Bug2v)
        (char>=? . g$6016$1Bug2v)
        (char=? . g$6012$1Bug2v)
        (char<? . g$6013$1Bug2v)
        (char<=? . g$6015$1Bug2v)
        (char->integer . g$11973$1Bug2v)
        (ceiling . g$11972$1Bug2v)
        (call-with-values . g$11971$1Bug2v)
        (call/cc . g$11970$1Bug2v)
        (call-with-current-continuation . g$11969$1Bug2v)
        (cddddr . g$5936$1Bug2v)
        (cdddar . g$5935$1Bug2v)
        (cddadr . g$5934$1Bug2v)
        (cddaar . g$5933$1Bug2v)
        (cdaddr . g$5932$1Bug2v)
        (cdadar . g$5931$1Bug2v)
        (cdaadr . g$5930$1Bug2v)
        (cdaaar . g$5929$1Bug2v)
        (cadddr . g$5928$1Bug2v)
        (caddar . g$5927$1Bug2v)
        (cadadr . g$5926$1Bug2v)
        (cadaar . g$5925$1Bug2v)
        (caaddr . g$5924$1Bug2v)
        (caadar . g$5923$1Bug2v)
        (caaadr . g$5922$1Bug2v)
        (caaaar . g$5921$1Bug2v)
        (cdddr . g$5920$1Bug2v)
        (cddar . g$5919$1Bug2v)
        (cdadr . g$5918$1Bug2v)
        (cdaar . g$5917$1Bug2v)
        (caddr . g$5916$1Bug2v)
        (cadar . g$5915$1Bug2v)
        (caadr . g$5914$1Bug2v)
        (caaar . g$5913$1Bug2v)
        (cddr . g$5912$1Bug2v)
        (cdar . g$5911$1Bug2v)
        (cadr . g$5910$1Bug2v)
        (caar . g$5909$1Bug2v)
        (cdr . g$11968$1Bug2v)
        (car . g$11967$1Bug2v)
        (boolean? . g$11966$1Bug2v)
        (boolean=? . g$5977$1Bug2v)
        (atan . g$11965$1Bug2v)
        (assertion-violation . g$11964$1Bug2v)
        (asin . g$11963$1Bug2v)
        (apply . g$11962$1Bug2v)
        (append . g$11961$1Bug2v)
        (angle . g$11960$1Bug2v)
        (acos . g$11959$1Bug2v)
        (abs . g$11958$1Bug2v)
        (/ . g$11957$1Bug2v)
        (* . g$11956$1Bug2v)
        (- . g$11955$1Bug2v)
        (+ . g$11954$1Bug2v)
        (>= . g$11953$1Bug2v)
        (> . g$11952$1Bug2v)
        (= . g$11951$1Bug2v)
        (<= . g$11950$1Bug2v)
        (< . g$11949$1Bug2v)
        (&no-nans . g$11915$1Bug2v)
        (&no-infinities . g$11914$1Bug2v)
        (&i/o-encoding . g$11913$1Bug2v)
        (&i/o-decoding . g$11912$1Bug2v)
        (&i/o-port . g$11911$1Bug2v)
        (&i/o-file-does-not-exist . g$11910$1Bug2v)
        (&i/o-file-already-exists . g$11909$1Bug2v)
        (&i/o-file-is-read-only . g$11908$1Bug2v)
        (&i/o-file-protection . g$11907$1Bug2v)
        (&i/o-filename . g$11906$1Bug2v)
        (&i/o-invalid-position . g$11905$1Bug2v)
        (&i/o-write . g$11904$1Bug2v)
        (&i/o-read . g$11903$1Bug2v)
        (&i/o . g$11902$1Bug2v)
        (&non-continuable . g$11901$1Bug2v)
        (&undefined . g$11900$1Bug2v)
        (&syntax . g$11899$1Bug2v)
        (&lexical . g$11898$1Bug2v)
        (&implementation-restriction . g$11897$1Bug2v)
        (&who . g$11895$1Bug2v)
        (&irritants . g$11894$1Bug2v)
        (&assertion . g$11893$1Bug2v)
        (&violation . g$11892$1Bug2v)
        (&error . g$11891$1Bug2v)
        (&serious . g$11890$1Bug2v)
        (&warning . g$11889$1Bug2v)
        (&message . g$11888$1Bug2v)
        (&condition . g$11887$1Bug2v)
        (define-condition-type . g$11886$1Bug2v)
        (define-enumeration . g$11885$1Bug2v)
        (define-record-type . g$11884$1Bug2v)
        (parent-rtd . g$11883$1Bug2v)
        (nongenerative . g$11882$1Bug2v)
        (opaque . g$11881$1Bug2v)
        (sealed . g$11880$1Bug2v)
        (protocol . g$11879$1Bug2v)
        (parent . g$11878$1Bug2v)
        (immutable . g$11877$1Bug2v)
        (mutable . g$11876$1Bug2v)
        (fields . g$11875$1Bug2v)
        (error-handling-mode . g$11874$1Bug2v)
        (file-options . g$11873$1Bug2v)
        (buffer-mode . g$11872$1Bug2v)
        (eol-style . g$11871$1Bug2v)
        (guard . g$11870$1Bug2v)
        (unsyntax-splicing . g$11864$1Bug2v)
        (unsyntax . g$11863$1Bug2v)
        (unquote-splicing . g$11862$1Bug2v)
        (unquote . g$11861$1Bug2v)
        (_ . g$11860$1Bug2v)
        (else . g$11859$1Bug2v)
        (=> . g$11858$1Bug2v)
        (... . g$11857$1Bug2v)
        (assert . g$11856$1Bug2v)
        (endianness . g$11855$1Bug2v)
        (or . g$11852$1Bug2v)
        (and . g$11851$1Bug2v)
        (do . g$11850$1Bug2v)
        (cond . g$11849$1Bug2v)
        (let* . g$11848$1Bug2v)
        (let . g$11847$1Bug2v)
        (identifier-syntax . g$11846$1Bug2v)
        (with-syntax . g$11845$1Bug2v)
        (quasisyntax . g$11844$1Bug2v)
        (quasiquote . g$11843$1Bug2v)
        (syntax-rules . g$11842$1Bug2v)
        (let-values . g$11838$1Bug2v)
        (let*-values . g$11837$1Bug2v)
        (record-constructor-descriptor . g$11836$1Bug2v)
        (record-type-descriptor . g$11835$1Bug2v)
        (case . g$11833$1Bug2v)
        (unless . g$11831$1Bug2v)
        (when . g$11830$1Bug2v)
        (if . g$11829$1Bug2v)
        (letrec* . g$11828$1Bug2v)
        (letrec . g$11827$1Bug2v)
        (case-lambda . g$11825$1Bug2v)
        (lambda . g$11824$1Bug2v)
        (syntax . g$11823$1Bug2v)
        (syntax-case . g$11822$1Bug2v)
        (quote . g$11821$1Bug2v)
        (letrec-syntax . g$11819$1Bug2v)
        (let-syntax . g$11818$1Bug2v)
        (set! . g$11817$1Bug2v)
        (begin . g$11813$1Bug2v)
        (define-syntax . g$11811$1Bug2v)
        (define . g$11810$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12443$1Bug2v
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((interaction-environment . g$8829$1Bug2v)
        (scheme-report-environment . g$8804$1Bug2v)
        (quotient . g$6804$1Bug2v)
        (null-environment . g$8803$1Bug2v)
        (remainder . g$6805$1Bug2v)
        (modulo . g$6806$1Bug2v)
        (inexact->exact . g$12209$1Bug2v)
        (force . g$6808$1Bug2v)
        (exact->inexact . g$12208$1Bug2v)
        (delay . g$11854$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12444$1Bug2v
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$11850$1Bug2v)
        (unless . g$11831$1Bug2v)
        (when . g$11830$1Bug2v)
        (case-lambda . g$11825$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12445$1Bug2v
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$8806$1Bug2v) (environment . g$8802$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12446$1Bug2v
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12204$1Bug2v) (set-car! . g$12203$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12447$1Bug2v
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12206$1Bug2v) (string-set! . g$12205$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12448$1Bug2v
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12207$1Bug2v) (command-line . g$11774$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12449$1Bug2v
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$8426$1Bug2v)
        (identifier? . g$8824$1Bug2v)
        (generate-temporaries . g$8813$1Bug2v)
        (free-identifier=? . g$8814$1Bug2v)
        (syntax->datum . g$8826$1Bug2v)
        (datum->syntax . g$8825$1Bug2v)
        (bound-identifier=? . g$8815$1Bug2v)
        (syntax-violation . g$8823$1Bug2v)
        (unsyntax-splicing . g$11864$1Bug2v)
        (unsyntax . g$11863$1Bug2v)
        (_ . g$11860$1Bug2v)
        (... . g$11857$1Bug2v)
        (with-syntax . g$11845$1Bug2v)
        (quasisyntax . g$11844$1Bug2v)
        (syntax . g$11823$1Bug2v)
        (syntax-case . g$11822$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12450$1Bug2v
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6461$1Bug2v)
        (file-exists? . g$6460$1Bug2v)
        (make-i/o-write-error . g$7198$1Bug2v)
        (make-i/o-read-error . g$7184$1Bug2v)
        (make-i/o-port-error . g$7303$1Bug2v)
        (make-i/o-invalid-position-error . g$7213$1Bug2v)
        (make-i/o-filename-error . g$7230$1Bug2v)
        (make-i/o-file-protection-error . g$7246$1Bug2v)
        (make-i/o-file-is-read-only-error . g$7260$1Bug2v)
        (make-i/o-file-does-not-exist-error . g$7288$1Bug2v)
        (make-i/o-file-already-exists-error . g$7274$1Bug2v)
        (make-i/o-error . g$7170$1Bug2v)
        (i/o-write-error? . g$7199$1Bug2v)
        (i/o-read-error? . g$7185$1Bug2v)
        (i/o-port-error? . g$7305$1Bug2v)
        (i/o-invalid-position-error? . g$7215$1Bug2v)
        (i/o-error-position . g$7216$1Bug2v)
        (i/o-filename-error? . g$7232$1Bug2v)
        (i/o-file-protection-error? . g$7247$1Bug2v)
        (i/o-file-is-read-only-error? . g$7261$1Bug2v)
        (i/o-file-does-not-exist-error? . g$7289$1Bug2v)
        (i/o-file-already-exists-error? . g$7275$1Bug2v)
        (i/o-error? . g$7171$1Bug2v)
        (i/o-error-port . g$7306$1Bug2v)
        (i/o-error-filename . g$7233$1Bug2v)
        (&i/o-port . g$11911$1Bug2v)
        (&i/o-file-does-not-exist . g$11910$1Bug2v)
        (&i/o-file-already-exists . g$11909$1Bug2v)
        (&i/o-file-is-read-only . g$11908$1Bug2v)
        (&i/o-file-protection . g$11907$1Bug2v)
        (&i/o-filename . g$11906$1Bug2v)
        (&i/o-invalid-position . g$11905$1Bug2v)
        (&i/o-write . g$11904$1Bug2v)
        (&i/o-read . g$11903$1Bug2v)
        (&i/o . g$11902$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12451$1Bug2v
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12302$1Bug2v)
        (vector-sort . g$12301$1Bug2v)
        (list-sort . g$6824$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12452$1Bug2v
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$12069$1Bug2v)
        (vector? . g$12068$1Bug2v)
        (vector-set! . g$12067$1Bug2v)
        (vector-ref . g$12066$1Bug2v)
        (vector-map . g$12065$1Bug2v)
        (vector-length . g$12064$1Bug2v)
        (vector-for-each . g$12063$1Bug2v)
        (vector-fill! . g$12062$1Bug2v)
        (vector->list . g$12061$1Bug2v)
        (vector . g$12060$1Bug2v)
        (values . g$12059$1Bug2v)
        (truncate . g$12058$1Bug2v)
        (tan . g$12057$1Bug2v)
        (symbol? . g$12056$1Bug2v)
        (symbol=? . g$5976$1Bug2v)
        (symbol->string . g$12055$1Bug2v)
        (substring . g$12054$1Bug2v)
        (string? . g$12053$1Bug2v)
        (string>? . g$5973$1Bug2v)
        (string>=? . g$5975$1Bug2v)
        (string=? . g$5971$1Bug2v)
        (string<? . g$5972$1Bug2v)
        (string<=? . g$5974$1Bug2v)
        (string-ref . g$12052$1Bug2v)
        (string-length . g$12051$1Bug2v)
        (string-for-each . g$12050$1Bug2v)
        (string-copy . g$12049$1Bug2v)
        (string-append . g$12048$1Bug2v)
        (string->symbol . g$12047$1Bug2v)
        (string->number . g$12046$1Bug2v)
        (string->list . g$12045$1Bug2v)
        (string . g$12044$1Bug2v)
        (sqrt . g$12043$1Bug2v)
        (sin . g$12042$1Bug2v)
        (round . g$12041$1Bug2v)
        (reverse . g$12040$1Bug2v)
        (real? . g$12039$1Bug2v)
        (real-valued? . g$12038$1Bug2v)
        (real-part . g$12037$1Bug2v)
        (rationalize . g$6017$1Bug2v)
        (rational? . g$12036$1Bug2v)
        (rational-valued? . g$12035$1Bug2v)
        (procedure? . g$12034$1Bug2v)
        (positive? . g$12033$1Bug2v)
        (pair? . g$12032$1Bug2v)
        (odd? . g$12031$1Bug2v)
        (numerator . g$12030$1Bug2v)
        (number? . g$12029$1Bug2v)
        (number->string . g$12028$1Bug2v)
        (null? . g$12027$1Bug2v)
        (not . g$12026$1Bug2v)
        (negative? . g$12025$1Bug2v)
        (nan? . g$12024$1Bug2v)
        (min . g$12023$1Bug2v)
        (max . g$12022$1Bug2v)
        (map . g$12021$1Bug2v)
        (make-vector . g$12020$1Bug2v)
        (make-string . g$12019$1Bug2v)
        (make-rectangular . g$12018$1Bug2v)
        (make-polar . g$12017$1Bug2v)
        (magnitude . g$12016$1Bug2v)
        (log . g$12015$1Bug2v)
        (list? . g$12014$1Bug2v)
        (list-tail . g$12013$1Bug2v)
        (list-ref . g$12012$1Bug2v)
        (list->vector . g$12011$1Bug2v)
        (list->string . g$12010$1Bug2v)
        (list . g$12009$1Bug2v)
        (length . g$12008$1Bug2v)
        (lcm . g$12007$1Bug2v)
        (integer? . g$12006$1Bug2v)
        (integer-valued? . g$12005$1Bug2v)
        (integer->char . g$12004$1Bug2v)
        (infinite? . g$12003$1Bug2v)
        (inexact? . g$12002$1Bug2v)
        (inexact . g$12001$1Bug2v)
        (imag-part . g$12000$1Bug2v)
        (gcd . g$11999$1Bug2v)
        (for-each . g$11998$1Bug2v)
        (floor . g$11997$1Bug2v)
        (finite? . g$11996$1Bug2v)
        (expt . g$11995$1Bug2v)
        (exp . g$11994$1Bug2v)
        (exact? . g$11993$1Bug2v)
        (exact-integer-sqrt . g$11992$1Bug2v)
        (exact . g$11991$1Bug2v)
        (even? . g$11990$1Bug2v)
        (error . g$11989$1Bug2v)
        (eqv? . g$11988$1Bug2v)
        (equal? . g$11987$1Bug2v)
        (eq? . g$11986$1Bug2v)
        (dynamic-wind . g$11985$1Bug2v)
        (div0-and-mod0 . g$11984$1Bug2v)
        (mod0 . g$11983$1Bug2v)
        (div0 . g$11982$1Bug2v)
        (div-and-mod . g$11981$1Bug2v)
        (mod . g$11980$1Bug2v)
        (div . g$11979$1Bug2v)
        (denominator . g$11978$1Bug2v)
        (cos . g$11977$1Bug2v)
        (cons . g$11976$1Bug2v)
        (complex? . g$11975$1Bug2v)
        (char? . g$11974$1Bug2v)
        (char>? . g$6014$1Bug2v)
        (char>=? . g$6016$1Bug2v)
        (char=? . g$6012$1Bug2v)
        (char<? . g$6013$1Bug2v)
        (char<=? . g$6015$1Bug2v)
        (char->integer . g$11973$1Bug2v)
        (ceiling . g$11972$1Bug2v)
        (call-with-values . g$11971$1Bug2v)
        (call/cc . g$11970$1Bug2v)
        (call-with-current-continuation . g$11969$1Bug2v)
        (cddddr . g$5936$1Bug2v)
        (cdddar . g$5935$1Bug2v)
        (cddadr . g$5934$1Bug2v)
        (cddaar . g$5933$1Bug2v)
        (cdaddr . g$5932$1Bug2v)
        (cdadar . g$5931$1Bug2v)
        (cdaadr . g$5930$1Bug2v)
        (cdaaar . g$5929$1Bug2v)
        (cadddr . g$5928$1Bug2v)
        (caddar . g$5927$1Bug2v)
        (cadadr . g$5926$1Bug2v)
        (cadaar . g$5925$1Bug2v)
        (caaddr . g$5924$1Bug2v)
        (caadar . g$5923$1Bug2v)
        (caaadr . g$5922$1Bug2v)
        (caaaar . g$5921$1Bug2v)
        (cdddr . g$5920$1Bug2v)
        (cddar . g$5919$1Bug2v)
        (cdadr . g$5918$1Bug2v)
        (cdaar . g$5917$1Bug2v)
        (caddr . g$5916$1Bug2v)
        (cadar . g$5915$1Bug2v)
        (caadr . g$5914$1Bug2v)
        (caaar . g$5913$1Bug2v)
        (cddr . g$5912$1Bug2v)
        (cdar . g$5911$1Bug2v)
        (cadr . g$5910$1Bug2v)
        (caar . g$5909$1Bug2v)
        (cdr . g$11968$1Bug2v)
        (car . g$11967$1Bug2v)
        (boolean? . g$11966$1Bug2v)
        (boolean=? . g$5977$1Bug2v)
        (atan . g$11965$1Bug2v)
        (assertion-violation . g$11964$1Bug2v)
        (asin . g$11963$1Bug2v)
        (apply . g$11962$1Bug2v)
        (append . g$11961$1Bug2v)
        (angle . g$11960$1Bug2v)
        (acos . g$11959$1Bug2v)
        (abs . g$11958$1Bug2v)
        (/ . g$11957$1Bug2v)
        (* . g$11956$1Bug2v)
        (- . g$11955$1Bug2v)
        (+ . g$11954$1Bug2v)
        (>= . g$11953$1Bug2v)
        (> . g$11952$1Bug2v)
        (= . g$11951$1Bug2v)
        (<= . g$11950$1Bug2v)
        (< . g$11949$1Bug2v)
        (unquote-splicing . g$11862$1Bug2v)
        (unquote . g$11861$1Bug2v)
        (_ . g$11860$1Bug2v)
        (else . g$11859$1Bug2v)
        (=> . g$11858$1Bug2v)
        (... . g$11857$1Bug2v)
        (assert . g$11856$1Bug2v)
        (or . g$11852$1Bug2v)
        (and . g$11851$1Bug2v)
        (cond . g$11849$1Bug2v)
        (let* . g$11848$1Bug2v)
        (let . g$11847$1Bug2v)
        (identifier-syntax . g$11846$1Bug2v)
        (quasiquote . g$11843$1Bug2v)
        (syntax-rules . g$11842$1Bug2v)
        (let-values . g$11838$1Bug2v)
        (let*-values . g$11837$1Bug2v)
        (case . g$11833$1Bug2v)
        (if . g$11829$1Bug2v)
        (letrec* . g$11828$1Bug2v)
        (letrec . g$11827$1Bug2v)
        (lambda . g$11824$1Bug2v)
        (quote . g$11821$1Bug2v)
        (letrec-syntax . g$11819$1Bug2v)
        (let-syntax . g$11818$1Bug2v)
        (set! . g$11817$1Bug2v)
        (begin . g$11813$1Bug2v)
        (define-syntax . g$11811$1Bug2v)
        (define . g$11810$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12453$1Bug2v
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5824$1Bug2v)
        (remv . g$5825$1Bug2v)
        (remp . g$5807$1Bug2v)
        (remq . g$5826$1Bug2v)
        (partition . g$5806$1Bug2v)
        (memv . g$5814$1Bug2v)
        (memq . g$5813$1Bug2v)
        (memp . g$5816$1Bug2v)
        (member . g$5815$1Bug2v)
        (exists . g$5820$1Bug2v)
        (for-all . g$5819$1Bug2v)
        (fold-right . g$5823$1Bug2v)
        (fold-left . g$5822$1Bug2v)
        (find . g$5805$1Bug2v)
        (filter . g$5808$1Bug2v)
        (cons* . g$5821$1Bug2v)
        (assv . g$5810$1Bug2v)
        (assq . g$5809$1Bug2v)
        (assp . g$5812$1Bug2v)
        (assoc . g$5811$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12454$1Bug2v
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7366$1Bug2v)
        (call-with-input-file . g$7365$1Bug2v)
        (write-char . g$12288$1Bug2v)
        (write . g$12287$1Bug2v)
        (with-output-to-file . g$7364$1Bug2v)
        (with-input-from-file . g$7363$1Bug2v)
        (read-char . g$12286$1Bug2v)
        (read . g$12285$1Bug2v)
        (peek-char . g$12284$1Bug2v)
        (open-output-file . g$12283$1Bug2v)
        (open-input-file . g$12282$1Bug2v)
        (newline . g$12281$1Bug2v)
        (display . g$12280$1Bug2v)
        (close-output-port . g$12279$1Bug2v)
        (close-input-port . g$12278$1Bug2v)
        (eof-object? . g$12277$1Bug2v)
        (eof-object . g$12276$1Bug2v)
        (current-error-port . g$12275$1Bug2v)
        (current-output-port . g$12274$1Bug2v)
        (current-input-port . g$12273$1Bug2v)
        (output-port? . g$12272$1Bug2v)
        (input-port? . g$12271$1Bug2v)
        (make-i/o-write-error . g$7198$1Bug2v)
        (make-i/o-read-error . g$7184$1Bug2v)
        (make-i/o-port-error . g$7303$1Bug2v)
        (make-i/o-invalid-position-error . g$7213$1Bug2v)
        (make-i/o-filename-error . g$7230$1Bug2v)
        (make-i/o-file-protection-error . g$7246$1Bug2v)
        (make-i/o-file-is-read-only-error . g$7260$1Bug2v)
        (make-i/o-file-does-not-exist-error . g$7288$1Bug2v)
        (make-i/o-file-already-exists-error . g$7274$1Bug2v)
        (make-i/o-error . g$7170$1Bug2v)
        (i/o-write-error? . g$7199$1Bug2v)
        (i/o-read-error? . g$7185$1Bug2v)
        (i/o-port-error? . g$7305$1Bug2v)
        (i/o-invalid-position-error? . g$7215$1Bug2v)
        (i/o-error-position . g$7216$1Bug2v)
        (i/o-filename-error? . g$7232$1Bug2v)
        (i/o-file-protection-error? . g$7247$1Bug2v)
        (i/o-file-is-read-only-error? . g$7261$1Bug2v)
        (i/o-file-does-not-exist-error? . g$7289$1Bug2v)
        (i/o-file-already-exists-error? . g$7275$1Bug2v)
        (i/o-error? . g$7171$1Bug2v)
        (i/o-error-port . g$7306$1Bug2v)
        (i/o-error-filename . g$7233$1Bug2v)
        (&i/o-port . g$11911$1Bug2v)
        (&i/o-file-does-not-exist . g$11910$1Bug2v)
        (&i/o-file-already-exists . g$11909$1Bug2v)
        (&i/o-file-is-read-only . g$11908$1Bug2v)
        (&i/o-file-protection . g$11907$1Bug2v)
        (&i/o-filename . g$11906$1Bug2v)
        (&i/o-invalid-position . g$11905$1Bug2v)
        (&i/o-write . g$11904$1Bug2v)
        (&i/o-read . g$11903$1Bug2v)
        (&i/o . g$11902$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12455$1Bug2v
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12231$1Bug2v)
        (utf32->string . g$12194$1Bug2v)
        (utf16->string . g$12193$1Bug2v)
        (utf8->string . g$12192$1Bug2v)
        (uint-list->bytevector . g$12191$1Bug2v)
        (u8-list->bytevector . g$12190$1Bug2v)
        (string->utf8 . g$12189$1Bug2v)
        (string->utf32 . g$12188$1Bug2v)
        (string->utf16 . g$12187$1Bug2v)
        (sint-list->bytevector . g$12186$1Bug2v)
        (native-endianness . g$6467$1Bug2v)
        (bytevector? . g$12185$1Bug2v)
        (bytevector=? . g$12184$1Bug2v)
        (bytevector-uint-set! . g$12183$1Bug2v)
        (bytevector-uint-ref . g$12182$1Bug2v)
        (bytevector-u8-set! . g$12181$1Bug2v)
        (bytevector-u8-ref . g$12180$1Bug2v)
        (bytevector-u64-set! . g$6488$1Bug2v)
        (bytevector-u64-ref . g$6484$1Bug2v)
        (bytevector-u64-native-set! . g$6490$1Bug2v)
        (bytevector-u64-native-ref . g$6486$1Bug2v)
        (bytevector-u32-set! . g$6480$1Bug2v)
        (bytevector-u32-ref . g$6476$1Bug2v)
        (bytevector-u32-native-set! . g$6482$1Bug2v)
        (bytevector-u32-native-ref . g$6478$1Bug2v)
        (bytevector-u16-set! . g$6472$1Bug2v)
        (bytevector-u16-ref . g$6468$1Bug2v)
        (bytevector-u16-native-set! . g$6474$1Bug2v)
        (bytevector-u16-native-ref . g$6470$1Bug2v)
        (bytevector-sint-set! . g$12179$1Bug2v)
        (bytevector-sint-ref . g$12178$1Bug2v)
        (bytevector-s8-set! . g$12177$1Bug2v)
        (bytevector-s8-ref . g$12176$1Bug2v)
        (bytevector-s64-set! . g$6489$1Bug2v)
        (bytevector-s64-ref . g$6485$1Bug2v)
        (bytevector-s64-native-set! . g$6491$1Bug2v)
        (bytevector-s64-native-ref . g$6487$1Bug2v)
        (bytevector-s32-set! . g$6481$1Bug2v)
        (bytevector-s32-ref . g$6477$1Bug2v)
        (bytevector-s32-native-set! . g$6483$1Bug2v)
        (bytevector-s32-native-ref . g$6479$1Bug2v)
        (bytevector-s16-set! . g$6473$1Bug2v)
        (bytevector-s16-ref . g$6469$1Bug2v)
        (bytevector-s16-native-set! . g$6475$1Bug2v)
        (bytevector-s16-native-ref . g$6471$1Bug2v)
        (bytevector-length . g$12175$1Bug2v)
        (bytevector-ieee-single-set! . g$12174$1Bug2v)
        (bytevector-ieee-single-ref . g$12173$1Bug2v)
        (bytevector-ieee-single-native-set! . g$6494$1Bug2v)
        (bytevector-ieee-single-native-ref . g$6492$1Bug2v)
        (bytevector-ieee-double-set! . g$12172$1Bug2v)
        (bytevector-ieee-double-ref . g$12171$1Bug2v)
        (bytevector-ieee-double-native-set! . g$6495$1Bug2v)
        (bytevector-ieee-double-native-ref . g$6493$1Bug2v)
        (bytevector-fill! . g$12170$1Bug2v)
        (bytevector-copy! . g$12169$1Bug2v)
        (bytevector-copy . g$12168$1Bug2v)
        (bytevector->uint-list . g$12167$1Bug2v)
        (bytevector->u8-list . g$12166$1Bug2v)
        (bytevector->sint-list . g$12165$1Bug2v)
        (endianness . g$11855$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12456$1Bug2v
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12338$1Bug2v)
        (string-titlecase . g$12337$1Bug2v)
        (string-normalize-nfkd . g$12336$1Bug2v)
        (string-normalize-nfkc . g$12335$1Bug2v)
        (string-normalize-nfd . g$12334$1Bug2v)
        (string-normalize-nfc . g$12333$1Bug2v)
        (string-foldcase . g$12332$1Bug2v)
        (string-downcase . g$12331$1Bug2v)
        (string-ci>? . g$6938$1Bug2v)
        (string-ci>=? . g$6940$1Bug2v)
        (string-ci=? . g$6936$1Bug2v)
        (string-ci<? . g$6937$1Bug2v)
        (string-ci<=? . g$6939$1Bug2v)
        (char-whitespace? . g$12330$1Bug2v)
        (char-upper-case? . g$12329$1Bug2v)
        (char-title-case? . g$12328$1Bug2v)
        (char-numeric? . g$12327$1Bug2v)
        (char-lower-case? . g$12326$1Bug2v)
        (char-general-category . g$12325$1Bug2v)
        (char-upcase . g$12324$1Bug2v)
        (char-titlecase . g$12323$1Bug2v)
        (char-foldcase . g$12322$1Bug2v)
        (char-downcase . g$12321$1Bug2v)
        (char-ci>? . g$6977$1Bug2v)
        (char-ci>=? . g$6979$1Bug2v)
        (char-ci=? . g$6975$1Bug2v)
        (char-ci<? . g$6976$1Bug2v)
        (char-ci<=? . g$6978$1Bug2v)
        (char-alphabetic? . g$12320$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12457$1Bug2v
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12202$1Bug2v)
        (raise-continuable . g$12201$1Bug2v)
        (raise . g$12200$1Bug2v)
        (guard . g$11870$1Bug2v)
        (else . g$11859$1Bug2v)
        (=> . g$11858$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12458$1Bug2v
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7039$1Bug2v)
        (bitwise-reverse-bit-field . g$12080$1Bug2v)
        (bitwise-length . g$12079$1Bug2v)
        (bitwise-if . g$7033$1Bug2v)
        (bitwise-first-bit-set . g$12078$1Bug2v)
        (bitwise-copy-bit-field . g$7036$1Bug2v)
        (bitwise-copy-bit . g$7034$1Bug2v)
        (bitwise-bit-set? . g$12077$1Bug2v)
        (bitwise-bit-field . g$12076$1Bug2v)
        (bitwise-bit-count . g$12075$1Bug2v)
        (bitwise-xor . g$12074$1Bug2v)
        (bitwise-ior . g$12073$1Bug2v)
        (bitwise-and . g$12072$1Bug2v)
        (bitwise-not . g$12071$1Bug2v)
        (bitwise-arithmetic-shift-right . g$7038$1Bug2v)
        (bitwise-arithmetic-shift-left . g$7037$1Bug2v)
        (bitwise-arithmetic-shift . g$12070$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12459$1Bug2v
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$12118$1Bug2v)
        (fxxor . g$12117$1Bug2v)
        (fxrotate-bit-field . g$7087$1Bug2v)
        (fxreverse-bit-field . g$12116$1Bug2v)
        (fxpositive? . g$12115$1Bug2v)
        (fxodd? . g$12114$1Bug2v)
        (fxnot . g$12113$1Bug2v)
        (fxnegative? . g$12112$1Bug2v)
        (fxmod0 . g$12111$1Bug2v)
        (fxmod . g$12110$1Bug2v)
        (fxmin . g$12109$1Bug2v)
        (fxmax . g$12108$1Bug2v)
        (fxlength . g$12107$1Bug2v)
        (fxior . g$12106$1Bug2v)
        (fxif . g$7081$1Bug2v)
        (fxfirst-bit-set . g$12105$1Bug2v)
        (fxeven? . g$12104$1Bug2v)
        (fxdiv0-and-mod0 . g$12103$1Bug2v)
        (fxdiv0 . g$12102$1Bug2v)
        (fxdiv-and-mod . g$12101$1Bug2v)
        (fxdiv . g$12100$1Bug2v)
        (fxcopy-bit-field . g$7084$1Bug2v)
        (fxcopy-bit . g$7082$1Bug2v)
        (fxbit-set? . g$12099$1Bug2v)
        (fxbit-field . g$7083$1Bug2v)
        (fxbit-count . g$12098$1Bug2v)
        (fxarithmetic-shift-right . g$7086$1Bug2v)
        (fxarithmetic-shift-left . g$7085$1Bug2v)
        (fxarithmetic-shift . g$12097$1Bug2v)
        (fxand . g$12096$1Bug2v)
        (fx>? . g$12095$1Bug2v)
        (fx>=? . g$12094$1Bug2v)
        (fx=? . g$12093$1Bug2v)
        (fx<? . g$12092$1Bug2v)
        (fx<=? . g$12091$1Bug2v)
        (fx-/carry . g$12090$1Bug2v)
        (fx- . g$12089$1Bug2v)
        (fx+/carry . g$12088$1Bug2v)
        (fx+ . g$12087$1Bug2v)
        (fx*/carry . g$12086$1Bug2v)
        (fx* . g$12085$1Bug2v)
        (greatest-fixnum . g$12084$1Bug2v)
        (least-fixnum . g$12083$1Bug2v)
        (fixnum-width . g$12082$1Bug2v)
        (fixnum? . g$12081$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12460$1Bug2v
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7156$1Bug2v)
        (no-infinities-violation? . g$7142$1Bug2v)
        (make-no-nans-violation . g$7155$1Bug2v)
        (make-no-infinities-violation . g$7141$1Bug2v)
        (real->flonum . g$12164$1Bug2v)
        (flzero? . g$12163$1Bug2v)
        (fltruncate . g$12162$1Bug2v)
        (fltan . g$12161$1Bug2v)
        (flsqrt . g$12160$1Bug2v)
        (flsin . g$12159$1Bug2v)
        (flround . g$12158$1Bug2v)
        (flpositive? . g$12157$1Bug2v)
        (flonum? . g$12156$1Bug2v)
        (flodd? . g$12155$1Bug2v)
        (flnumerator . g$12154$1Bug2v)
        (flnegative? . g$12153$1Bug2v)
        (flnan? . g$12152$1Bug2v)
        (flmod0 . g$12151$1Bug2v)
        (flmod . g$12150$1Bug2v)
        (flmin . g$12149$1Bug2v)
        (flmax . g$12148$1Bug2v)
        (fllog . g$12147$1Bug2v)
        (flinteger? . g$12146$1Bug2v)
        (flinfinite? . g$12145$1Bug2v)
        (flfloor . g$12144$1Bug2v)
        (flfinite? . g$12143$1Bug2v)
        (flexpt . g$12142$1Bug2v)
        (flexp . g$12141$1Bug2v)
        (fleven? . g$12140$1Bug2v)
        (fldiv0-and-mod0 . g$12139$1Bug2v)
        (fldiv0 . g$12138$1Bug2v)
        (fldiv-and-mod . g$12137$1Bug2v)
        (fldiv . g$12136$1Bug2v)
        (fldenominator . g$12135$1Bug2v)
        (flcos . g$12134$1Bug2v)
        (flceiling . g$12133$1Bug2v)
        (flatan . g$12132$1Bug2v)
        (flasin . g$12131$1Bug2v)
        (flacos . g$12130$1Bug2v)
        (flabs . g$12129$1Bug2v)
        (fl>? . g$12128$1Bug2v)
        (fl>=? . g$12127$1Bug2v)
        (fl=? . g$12126$1Bug2v)
        (fl<? . g$12125$1Bug2v)
        (fl<=? . g$12124$1Bug2v)
        (fl/ . g$12123$1Bug2v)
        (fl- . g$12122$1Bug2v)
        (fl+ . g$12121$1Bug2v)
        (fl* . g$12120$1Bug2v)
        (fixnum->flonum . g$12119$1Bug2v)
        (&no-nans . g$11915$1Bug2v)
        (&no-infinities . g$11914$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12461$1Bug2v
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12300$1Bug2v)
        (string-ci-hash . g$12299$1Bug2v)
        (string-hash . g$12298$1Bug2v)
        (equal-hash . g$12297$1Bug2v)
        (hashtable-equivalence-function . g$12296$1Bug2v)
        (make-hashtable . g$12295$1Bug2v)
        (hashtable-hash-function . g$12294$1Bug2v)
        (make-eqv-hashtable . g$6428$1Bug2v)
        (make-eq-hashtable . g$6427$1Bug2v)
        (hashtable? . g$12293$1Bug2v)
        (hashtable-update! . g$6434$1Bug2v)
        (hashtable-size . g$6429$1Bug2v)
        (hashtable-set! . g$6431$1Bug2v)
        (hashtable-ref . g$6430$1Bug2v)
        (hashtable-mutable? . g$12292$1Bug2v)
        (hashtable-keys . g$12291$1Bug2v)
        (hashtable-entries . g$12290$1Bug2v)
        (hashtable-delete! . g$6432$1Bug2v)
        (hashtable-copy . g$12289$1Bug2v)
        (hashtable-contains? . g$6433$1Bug2v)
        (hashtable-clear! . g$6435$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12462$1Bug2v
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12277$1Bug2v)
        (eof-object . g$12276$1Bug2v)
        (current-error-port . g$12275$1Bug2v)
        (current-output-port . g$12274$1Bug2v)
        (current-input-port . g$12273$1Bug2v)
        (output-port? . g$12272$1Bug2v)
        (input-port? . g$12271$1Bug2v)
        (utf-8-codec . g$12270$1Bug2v)
        (utf-16-codec . g$12269$1Bug2v)
        (transcoder-error-handling-mode . g$12268$1Bug2v)
        (transcoder-eol-style . g$12267$1Bug2v)
        (transcoder-codec . g$12266$1Bug2v)
        (transcoded-port . g$12265$1Bug2v)
        (textual-port? . g$12264$1Bug2v)
        (string->bytevector . g$12263$1Bug2v)
        (standard-output-port . g$12262$1Bug2v)
        (standard-input-port . g$12261$1Bug2v)
        (standard-error-port . g$12260$1Bug2v)
        (set-port-position! . g$12259$1Bug2v)
        (put-u8 . g$12258$1Bug2v)
        (put-string . g$12257$1Bug2v)
        (put-datum . g$12256$1Bug2v)
        (put-char . g$12255$1Bug2v)
        (put-bytevector . g$12254$1Bug2v)
        (port? . g$7342$1Bug2v)
        (port-transcoder . g$12253$1Bug2v)
        (port-position . g$12252$1Bug2v)
        (port-has-set-port-position!? . g$12251$1Bug2v)
        (port-has-port-position? . g$12250$1Bug2v)
        (port-eof? . g$12249$1Bug2v)
        (output-port-buffer-mode . g$12248$1Bug2v)
        (open-string-output-port . g$7341$1Bug2v)
        (open-string-input-port . g$12247$1Bug2v)
        (open-file-output-port . g$12246$1Bug2v)
        (open-file-input/output-port . g$12245$1Bug2v)
        (open-file-input-port . g$12244$1Bug2v)
        (open-bytevector-output-port . g$12243$1Bug2v)
        (open-bytevector-input-port . g$12242$1Bug2v)
        (native-transcoder . g$12241$1Bug2v)
        (native-eol-style . g$12240$1Bug2v)
        (make-transcoder . g$12239$1Bug2v)
        (latin-1-codec . g$12238$1Bug2v)
        (make-i/o-write-error . g$7198$1Bug2v)
        (make-i/o-read-error . g$7184$1Bug2v)
        (make-i/o-port-error . g$7303$1Bug2v)
        (make-i/o-invalid-position-error . g$7213$1Bug2v)
        (make-i/o-filename-error . g$7230$1Bug2v)
        (make-i/o-file-protection-error . g$7246$1Bug2v)
        (make-i/o-file-is-read-only-error . g$7260$1Bug2v)
        (make-i/o-file-does-not-exist-error . g$7288$1Bug2v)
        (make-i/o-file-already-exists-error . g$7274$1Bug2v)
        (make-i/o-error . g$7170$1Bug2v)
        (make-i/o-encoding-error . g$7334$1Bug2v)
        (make-i/o-decoding-error . g$7319$1Bug2v)
        (make-custom-textual-output-port . g$12237$1Bug2v)
        (make-custom-textual-input/output-port . g$12236$1Bug2v)
        (make-custom-textual-input-port . g$12235$1Bug2v)
        (make-custom-binary-output-port . g$12234$1Bug2v)
        (make-custom-binary-input/output-port . g$12233$1Bug2v)
        (make-custom-binary-input-port . g$12232$1Bug2v)
        (lookahead-u8 . g$12230$1Bug2v)
        (lookahead-char . g$12229$1Bug2v)
        (i/o-write-error? . g$7199$1Bug2v)
        (i/o-read-error? . g$7185$1Bug2v)
        (i/o-port-error? . g$7305$1Bug2v)
        (i/o-invalid-position-error? . g$7215$1Bug2v)
        (i/o-error-position . g$7216$1Bug2v)
        (i/o-filename-error? . g$7232$1Bug2v)
        (i/o-file-protection-error? . g$7247$1Bug2v)
        (i/o-file-is-read-only-error? . g$7261$1Bug2v)
        (i/o-file-does-not-exist-error? . g$7289$1Bug2v)
        (i/o-file-already-exists-error? . g$7275$1Bug2v)
        (i/o-error? . g$7171$1Bug2v)
        (i/o-error-port . g$7306$1Bug2v)
        (i/o-error-filename . g$7233$1Bug2v)
        (i/o-encoding-error? . g$7336$1Bug2v)
        (i/o-encoding-error-char . g$7337$1Bug2v)
        (i/o-decoding-error? . g$7320$1Bug2v)
        (get-u8 . g$12228$1Bug2v)
        (get-string-n! . g$12227$1Bug2v)
        (get-string-n . g$12226$1Bug2v)
        (get-string-all . g$12225$1Bug2v)
        (get-line . g$12224$1Bug2v)
        (get-datum . g$12223$1Bug2v)
        (get-char . g$12222$1Bug2v)
        (get-bytevector-some . g$12221$1Bug2v)
        (get-bytevector-n! . g$12220$1Bug2v)
        (get-bytevector-n . g$12219$1Bug2v)
        (get-bytevector-all . g$12218$1Bug2v)
        (flush-output-port . g$12217$1Bug2v)
        (close-port . g$12216$1Bug2v)
        (call-with-string-output-port . g$12215$1Bug2v)
        (call-with-port . g$12214$1Bug2v)
        (call-with-bytevector-output-port . g$12213$1Bug2v)
        (bytevector->string . g$12212$1Bug2v)
        (buffer-mode? . g$12211$1Bug2v)
        (binary-port? . g$12210$1Bug2v)
        (&i/o-encoding . g$11913$1Bug2v)
        (&i/o-decoding . g$11912$1Bug2v)
        (&i/o-port . g$11911$1Bug2v)
        (&i/o-file-does-not-exist . g$11910$1Bug2v)
        (&i/o-file-already-exists . g$11909$1Bug2v)
        (&i/o-file-is-read-only . g$11908$1Bug2v)
        (&i/o-file-protection . g$11907$1Bug2v)
        (&i/o-filename . g$11906$1Bug2v)
        (&i/o-invalid-position . g$11905$1Bug2v)
        (&i/o-write . g$11904$1Bug2v)
        (&i/o-read . g$11903$1Bug2v)
        (&i/o . g$11902$1Bug2v)
        (error-handling-mode . g$11874$1Bug2v)
        (file-options . g$11873$1Bug2v)
        (buffer-mode . g$11872$1Bug2v)
        (eol-style . g$11871$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12463$1Bug2v
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7424$1Bug2v)
        (enum-set=? . g$7431$1Bug2v)
        (enum-set-universe . g$7425$1Bug2v)
        (enum-set-union . g$7432$1Bug2v)
        (enum-set-subset? . g$7430$1Bug2v)
        (enum-set-projection . g$7436$1Bug2v)
        (enum-set-member? . g$7429$1Bug2v)
        (enum-set-intersection . g$7433$1Bug2v)
        (enum-set-indexer . g$7426$1Bug2v)
        (enum-set-difference . g$7434$1Bug2v)
        (enum-set-constructor . g$7427$1Bug2v)
        (enum-set-complement . g$7435$1Bug2v)
        (enum-set->list . g$7428$1Bug2v)
        (define-enumeration . g$11885$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12464$1Bug2v
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$6715$1Bug2v)
        (warning? . g$6626$1Bug2v)
        (violation? . g$6668$1Bug2v)
        (undefined-violation? . g$6792$1Bug2v)
        (syntax-violation? . g$6776$1Bug2v)
        (syntax-violation-subform . g$6778$1Bug2v)
        (syntax-violation-form . g$6777$1Bug2v)
        (syntax-violation . g$8823$1Bug2v)
        (simple-conditions . g$12199$1Bug2v)
        (serious-condition? . g$6640$1Bug2v)
        (non-continuable-violation? . g$6730$1Bug2v)
        (message-condition? . g$6611$1Bug2v)
        (make-who-condition . g$6713$1Bug2v)
        (make-warning . g$6625$1Bug2v)
        (make-violation . g$6667$1Bug2v)
        (make-undefined-violation . g$6791$1Bug2v)
        (make-syntax-violation . g$6773$1Bug2v)
        (make-serious-condition . g$6639$1Bug2v)
        (make-non-continuable-violation . g$6729$1Bug2v)
        (make-message-condition . g$6609$1Bug2v)
        (make-lexical-violation . g$6757$1Bug2v)
        (make-irritants-condition . g$6696$1Bug2v)
        (make-implementation-restriction-violation . g$6743$1Bug2v)
        (make-error . g$6653$1Bug2v)
        (make-assertion-violation . g$6681$1Bug2v)
        (lexical-violation? . g$6758$1Bug2v)
        (irritants-condition? . g$6698$1Bug2v)
        (implementation-restriction-violation? . g$6744$1Bug2v)
        (error? . g$6654$1Bug2v)
        (condition-who . g$6716$1Bug2v)
        (condition-predicate . g$12198$1Bug2v)
        (condition-message . g$6612$1Bug2v)
        (condition-irritants . g$6699$1Bug2v)
        (condition-accessor . g$12197$1Bug2v)
        (condition . g$12196$1Bug2v)
        (assertion-violation? . g$6682$1Bug2v)
        (condition? . g$12195$1Bug2v)
        (&non-continuable . g$11901$1Bug2v)
        (&undefined . g$11900$1Bug2v)
        (&syntax . g$11899$1Bug2v)
        (&lexical . g$11898$1Bug2v)
        (&implementation-restriction . g$11897$1Bug2v)
        (&who . g$11895$1Bug2v)
        (&irritants . g$11894$1Bug2v)
        (&assertion . g$11893$1Bug2v)
        (&violation . g$11892$1Bug2v)
        (&error . g$11891$1Bug2v)
        (&serious . g$11890$1Bug2v)
        (&warning . g$11889$1Bug2v)
        (&message . g$11888$1Bug2v)
        (&condition . g$11887$1Bug2v)
        (define-condition-type . g$11886$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12465$1Bug2v
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12312$1Bug2v)
        (record-type-uid . g$12311$1Bug2v)
        (record-type-sealed? . g$12310$1Bug2v)
        (record-type-parent . g$12309$1Bug2v)
        (record-type-opaque? . g$12308$1Bug2v)
        (record-type-name . g$12307$1Bug2v)
        (record-type-generative? . g$12306$1Bug2v)
        (record-type-field-names . g$12305$1Bug2v)
        (record-rtd . g$12304$1Bug2v)
        (record-field-mutable? . g$12303$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12466$1Bug2v
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12319$1Bug2v)
        (record-predicate . g$12318$1Bug2v)
        (record-mutator . g$12317$1Bug2v)
        (record-constructor . g$12316$1Bug2v)
        (record-accessor . g$12315$1Bug2v)
        (make-record-type-descriptor . g$12314$1Bug2v)
        (make-record-constructor-descriptor . g$12313$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12467$1Bug2v
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$11884$1Bug2v)
        (parent-rtd . g$11883$1Bug2v)
        (nongenerative . g$11882$1Bug2v)
        (opaque . g$11881$1Bug2v)
        (sealed . g$11880$1Bug2v)
        (protocol . g$11879$1Bug2v)
        (parent . g$11878$1Bug2v)
        (immutable . g$11877$1Bug2v)
        (mutable . g$11876$1Bug2v)
        (fields . g$11875$1Bug2v)
        (record-constructor-descriptor . g$11836$1Bug2v)
        (record-type-descriptor . g$11835$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12468$1Bug2v
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$8696$1Bug2v)
        (&no-nans-rcd . g$12432$1Bug2v)
        (&no-nans-rtd . g$12431$1Bug2v)
        (&no-infinities-rcd . g$12430$1Bug2v)
        (&no-infinities-rtd . g$12429$1Bug2v)
        (&i/o-encoding-rcd . g$12428$1Bug2v)
        (&i/o-encoding-rtd . g$12427$1Bug2v)
        (&i/o-decoding-rcd . g$12426$1Bug2v)
        (&i/o-decoding-rtd . g$12425$1Bug2v)
        (&i/o-port-rcd . g$12424$1Bug2v)
        (&i/o-port-rtd . g$12423$1Bug2v)
        (&i/o-file-does-not-exist-rcd . g$12422$1Bug2v)
        (&i/o-file-does-not-exist-rtd . g$12421$1Bug2v)
        (&i/o-file-already-exists-rcd . g$12420$1Bug2v)
        (&i/o-file-already-exists-rtd . g$12419$1Bug2v)
        (&i/o-file-is-read-only-rcd . g$12418$1Bug2v)
        (&i/o-file-is-read-only-rtd . g$12417$1Bug2v)
        (&i/o-file-protection-rcd . g$12416$1Bug2v)
        (&i/o-file-protection-rtd . g$12415$1Bug2v)
        (&i/o-filename-rcd . g$12414$1Bug2v)
        (&i/o-filename-rtd . g$12413$1Bug2v)
        (&i/o-invalid-position-rcd . g$12412$1Bug2v)
        (&i/o-invalid-position-rtd . g$12411$1Bug2v)
        (&i/o-write-rcd . g$12410$1Bug2v)
        (&i/o-write-rtd . g$12409$1Bug2v)
        (&i/o-read-rcd . g$12408$1Bug2v)
        (&i/o-read-rtd . g$12407$1Bug2v)
        (&i/o-rcd . g$12406$1Bug2v)
        (&i/o-rtd . g$12405$1Bug2v)
        (&undefined-rcd . g$12404$1Bug2v)
        (&undefined-rtd . g$12403$1Bug2v)
        (&syntax-rcd . g$12402$1Bug2v)
        (&syntax-rtd . g$12401$1Bug2v)
        (&lexical-rcd . g$12400$1Bug2v)
        (&lexical-rtd . g$12399$1Bug2v)
        (&implementation-restriction-rcd . g$12398$1Bug2v)
        (&implementation-restriction-rtd . g$12397$1Bug2v)
        (&non-continuable-rcd . g$12396$1Bug2v)
        (&non-continuable-rtd . g$12395$1Bug2v)
        (&who-rcd . g$12394$1Bug2v)
        (&who-rtd . g$12393$1Bug2v)
        (&irritants-rcd . g$12392$1Bug2v)
        (&irritants-rtd . g$12391$1Bug2v)
        (&assertion-rcd . g$12390$1Bug2v)
        (&assertion-rtd . g$12389$1Bug2v)
        (&violation-rcd . g$12388$1Bug2v)
        (&violation-rtd . g$12387$1Bug2v)
        (&error-rcd . g$12386$1Bug2v)
        (&error-rtd . g$12385$1Bug2v)
        (&serious-rcd . g$12384$1Bug2v)
        (&serious-rtd . g$12383$1Bug2v)
        (&warning-rcd . g$12382$1Bug2v)
        (&warning-rtd . g$12381$1Bug2v)
        (&message-rcd . g$12380$1Bug2v)
        (&message-rtd . g$12379$1Bug2v)
        (&condition-rcd . g$12378$1Bug2v)
        (&condition-rtd . g$12377$1Bug2v)
        (library-letrec* . g$12376$1Bug2v)
        (annotation-stripped . g$12375$1Bug2v)
        (annotation-source . g$12374$1Bug2v)
        (annotation-expression . g$12373$1Bug2v)
        (annotation? . g$12372$1Bug2v)
        (read-annotated . g$12371$1Bug2v)
        (tanh . g$12370$1Bug2v)
        (cosh . g$12369$1Bug2v)
        (sinh . g$12368$1Bug2v)
        (make-guid . g$12367$1Bug2v)
        (unspecified? . g$12366$1Bug2v)
        (make-trace . g$12365$1Bug2v)
        (make-list . g$12364$1Bug2v)
        (last-pair . g$12363$1Bug2v)
        (load-r5rs . g$12362$1Bug2v)
        (license . g$12361$1Bug2v)
        (stacktrace . g$12360$1Bug2v)
        (ironscheme-build . g$11778$1Bug2v)
        (define-clr-class-internal . g$12359$1Bug2v)
        (clr-field-set!-internal . g$12358$1Bug2v)
        (clr-field-get-internal . g$12357$1Bug2v)
        (clr-cast-internal . g$12356$1Bug2v)
        (clr-call-internal . g$12355$1Bug2v)
        (clr-new-internal . g$12354$1Bug2v)
        (clr-new-array-internal . g$12353$1Bug2v)
        (clr-is-internal . g$12352$1Bug2v)
        (clr-reference-internal . g$12351$1Bug2v)
        (clr-using-internal . g$12350$1Bug2v)
        (clr-clear-usings-internal . g$12349$1Bug2v)
        (syntax-error . g$8820$1Bug2v)
        (syntax-dispatch . g$8691$1Bug2v)
        (compile-core . g$12348$1Bug2v)
        (eval-core . g$12347$1Bug2v)
        (set-symbol-value! . g$12346$1Bug2v)
        (symbol-value . g$12345$1Bug2v)
        (ungensym . g$12344$1Bug2v)
        (gensym . g$12343$1Bug2v)
        (void . g$12342$1Bug2v)
        (load-serialized-library . g$12341$1Bug2v)
        (serialize-library . g$12340$1Bug2v)
        (compile-system-libraries . g$11780$1Bug2v)
        (compile->closure . g$11782$1Bug2v)
        (compile . g$11781$1Bug2v)
        (load . g$11777$1Bug2v)
        (interaction-environment . g$8829$1Bug2v)
        (char-ready? . g$12339$1Bug2v)
        (string-upcase . g$12338$1Bug2v)
        (string-titlecase . g$12337$1Bug2v)
        (string-normalize-nfkd . g$12336$1Bug2v)
        (string-normalize-nfkc . g$12335$1Bug2v)
        (string-normalize-nfd . g$12334$1Bug2v)
        (string-normalize-nfc . g$12333$1Bug2v)
        (string-foldcase . g$12332$1Bug2v)
        (string-downcase . g$12331$1Bug2v)
        (string-ci>? . g$6938$1Bug2v)
        (string-ci>=? . g$6940$1Bug2v)
        (string-ci=? . g$6936$1Bug2v)
        (string-ci<? . g$6937$1Bug2v)
        (string-ci<=? . g$6939$1Bug2v)
        (char-whitespace? . g$12330$1Bug2v)
        (char-upper-case? . g$12329$1Bug2v)
        (char-title-case? . g$12328$1Bug2v)
        (char-numeric? . g$12327$1Bug2v)
        (char-lower-case? . g$12326$1Bug2v)
        (char-general-category . g$12325$1Bug2v)
        (char-upcase . g$12324$1Bug2v)
        (char-titlecase . g$12323$1Bug2v)
        (char-foldcase . g$12322$1Bug2v)
        (char-downcase . g$12321$1Bug2v)
        (char-ci>? . g$6977$1Bug2v)
        (char-ci>=? . g$6979$1Bug2v)
        (char-ci=? . g$6975$1Bug2v)
        (char-ci<? . g$6976$1Bug2v)
        (char-ci<=? . g$6978$1Bug2v)
        (char-alphabetic? . g$12320$1Bug2v)
        (variable-transformer-procedure . g$8428$1Bug2v)
        (variable-transformer? . g$8427$1Bug2v)
        (make-variable-transformer . g$8426$1Bug2v)
        (identifier? . g$8824$1Bug2v)
        (generate-temporaries . g$8813$1Bug2v)
        (free-identifier=? . g$8814$1Bug2v)
        (syntax->datum . g$8826$1Bug2v)
        (datum->syntax . g$8825$1Bug2v)
        (bound-identifier=? . g$8815$1Bug2v)
        (record-type-descriptor? . g$12319$1Bug2v)
        (record-predicate . g$12318$1Bug2v)
        (record-mutator . g$12317$1Bug2v)
        (record-constructor . g$12316$1Bug2v)
        (record-accessor . g$12315$1Bug2v)
        (make-record-type-descriptor . g$12314$1Bug2v)
        (make-record-constructor-descriptor . g$12313$1Bug2v)
        (record? . g$12312$1Bug2v)
        (record-type-uid . g$12311$1Bug2v)
        (record-type-sealed? . g$12310$1Bug2v)
        (record-type-parent . g$12309$1Bug2v)
        (record-type-opaque? . g$12308$1Bug2v)
        (record-type-name . g$12307$1Bug2v)
        (record-type-generative? . g$12306$1Bug2v)
        (record-type-field-names . g$12305$1Bug2v)
        (record-rtd . g$12304$1Bug2v)
        (record-field-mutable? . g$12303$1Bug2v)
        (delete-file . g$6461$1Bug2v)
        (file-exists? . g$6460$1Bug2v)
        (vector-sort! . g$12302$1Bug2v)
        (vector-sort . g$12301$1Bug2v)
        (list-sort . g$6824$1Bug2v)
        (symbol-hash . g$12300$1Bug2v)
        (string-ci-hash . g$12299$1Bug2v)
        (string-hash . g$12298$1Bug2v)
        (equal-hash . g$12297$1Bug2v)
        (hashtable-equivalence-function . g$12296$1Bug2v)
        (make-hashtable . g$12295$1Bug2v)
        (hashtable-hash-function . g$12294$1Bug2v)
        (make-eqv-hashtable . g$6428$1Bug2v)
        (make-eq-hashtable . g$6427$1Bug2v)
        (hashtable? . g$12293$1Bug2v)
        (hashtable-update! . g$6434$1Bug2v)
        (hashtable-size . g$6429$1Bug2v)
        (hashtable-set! . g$6431$1Bug2v)
        (hashtable-ref . g$6430$1Bug2v)
        (hashtable-mutable? . g$12292$1Bug2v)
        (hashtable-keys . g$12291$1Bug2v)
        (hashtable-entries . g$12290$1Bug2v)
        (hashtable-delete! . g$6432$1Bug2v)
        (hashtable-copy . g$12289$1Bug2v)
        (hashtable-contains? . g$6433$1Bug2v)
        (hashtable-clear! . g$6435$1Bug2v)
        (call-with-output-file . g$7366$1Bug2v)
        (call-with-input-file . g$7365$1Bug2v)
        (write-char . g$12288$1Bug2v)
        (write . g$12287$1Bug2v)
        (with-output-to-file . g$7364$1Bug2v)
        (with-input-from-file . g$7363$1Bug2v)
        (read-char . g$12286$1Bug2v)
        (read . g$12285$1Bug2v)
        (peek-char . g$12284$1Bug2v)
        (open-output-file . g$12283$1Bug2v)
        (open-input-file . g$12282$1Bug2v)
        (newline . g$12281$1Bug2v)
        (display . g$12280$1Bug2v)
        (close-output-port . g$12279$1Bug2v)
        (close-input-port . g$12278$1Bug2v)
        (eof-object? . g$12277$1Bug2v)
        (eof-object . g$12276$1Bug2v)
        (current-error-port . g$12275$1Bug2v)
        (current-output-port . g$12274$1Bug2v)
        (current-input-port . g$12273$1Bug2v)
        (output-port? . g$12272$1Bug2v)
        (input-port? . g$12271$1Bug2v)
        (utf-8-codec . g$12270$1Bug2v)
        (utf-16-codec . g$12269$1Bug2v)
        (transcoder-error-handling-mode . g$12268$1Bug2v)
        (transcoder-eol-style . g$12267$1Bug2v)
        (transcoder-codec . g$12266$1Bug2v)
        (transcoded-port . g$12265$1Bug2v)
        (textual-port? . g$12264$1Bug2v)
        (string->bytevector . g$12263$1Bug2v)
        (standard-output-port . g$12262$1Bug2v)
        (standard-input-port . g$12261$1Bug2v)
        (standard-error-port . g$12260$1Bug2v)
        (set-port-position! . g$12259$1Bug2v)
        (put-u8 . g$12258$1Bug2v)
        (put-string . g$12257$1Bug2v)
        (put-datum . g$12256$1Bug2v)
        (put-char . g$12255$1Bug2v)
        (put-bytevector . g$12254$1Bug2v)
        (port? . g$7342$1Bug2v)
        (port-transcoder . g$12253$1Bug2v)
        (port-position . g$12252$1Bug2v)
        (port-has-set-port-position!? . g$12251$1Bug2v)
        (port-has-port-position? . g$12250$1Bug2v)
        (port-eof? . g$12249$1Bug2v)
        (output-port-buffer-mode . g$12248$1Bug2v)
        (open-string-output-port . g$7341$1Bug2v)
        (open-string-input-port . g$12247$1Bug2v)
        (open-file-output-port . g$12246$1Bug2v)
        (open-file-input/output-port . g$12245$1Bug2v)
        (open-file-input-port . g$12244$1Bug2v)
        (open-bytevector-output-port . g$12243$1Bug2v)
        (open-bytevector-input-port . g$12242$1Bug2v)
        (native-transcoder . g$12241$1Bug2v)
        (native-eol-style . g$12240$1Bug2v)
        (make-transcoder . g$12239$1Bug2v)
        (latin-1-codec . g$12238$1Bug2v)
        (make-i/o-write-error . g$7198$1Bug2v)
        (make-i/o-read-error . g$7184$1Bug2v)
        (make-i/o-port-error . g$7303$1Bug2v)
        (make-i/o-invalid-position-error . g$7213$1Bug2v)
        (make-i/o-filename-error . g$7230$1Bug2v)
        (make-i/o-file-protection-error . g$7246$1Bug2v)
        (make-i/o-file-is-read-only-error . g$7260$1Bug2v)
        (make-i/o-file-does-not-exist-error . g$7288$1Bug2v)
        (make-i/o-file-already-exists-error . g$7274$1Bug2v)
        (make-i/o-error . g$7170$1Bug2v)
        (make-i/o-encoding-error . g$7334$1Bug2v)
        (make-i/o-decoding-error . g$7319$1Bug2v)
        (make-custom-textual-output-port . g$12237$1Bug2v)
        (make-custom-textual-input/output-port . g$12236$1Bug2v)
        (make-custom-textual-input-port . g$12235$1Bug2v)
        (make-custom-binary-output-port . g$12234$1Bug2v)
        (make-custom-binary-input/output-port . g$12233$1Bug2v)
        (make-custom-binary-input-port . g$12232$1Bug2v)
        (make-bytevector . g$12231$1Bug2v)
        (lookahead-u8 . g$12230$1Bug2v)
        (lookahead-char . g$12229$1Bug2v)
        (i/o-write-error? . g$7199$1Bug2v)
        (i/o-read-error? . g$7185$1Bug2v)
        (i/o-port-error? . g$7305$1Bug2v)
        (i/o-invalid-position-error? . g$7215$1Bug2v)
        (i/o-error-position . g$7216$1Bug2v)
        (i/o-filename-error? . g$7232$1Bug2v)
        (i/o-file-protection-error? . g$7247$1Bug2v)
        (i/o-file-is-read-only-error? . g$7261$1Bug2v)
        (i/o-file-does-not-exist-error? . g$7289$1Bug2v)
        (i/o-file-already-exists-error? . g$7275$1Bug2v)
        (i/o-error? . g$7171$1Bug2v)
        (i/o-error-port . g$7306$1Bug2v)
        (i/o-error-filename . g$7233$1Bug2v)
        (i/o-encoding-error? . g$7336$1Bug2v)
        (i/o-encoding-error-char . g$7337$1Bug2v)
        (i/o-decoding-error? . g$7320$1Bug2v)
        (get-u8 . g$12228$1Bug2v)
        (get-string-n! . g$12227$1Bug2v)
        (get-string-n . g$12226$1Bug2v)
        (get-string-all . g$12225$1Bug2v)
        (get-line . g$12224$1Bug2v)
        (get-datum . g$12223$1Bug2v)
        (get-char . g$12222$1Bug2v)
        (get-bytevector-some . g$12221$1Bug2v)
        (get-bytevector-n! . g$12220$1Bug2v)
        (get-bytevector-n . g$12219$1Bug2v)
        (get-bytevector-all . g$12218$1Bug2v)
        (flush-output-port . g$12217$1Bug2v)
        (close-port . g$12216$1Bug2v)
        (call-with-string-output-port . g$12215$1Bug2v)
        (call-with-port . g$12214$1Bug2v)
        (call-with-bytevector-output-port . g$12213$1Bug2v)
        (bytevector->string . g$12212$1Bug2v)
        (buffer-mode? . g$12211$1Bug2v)
        (binary-port? . g$12210$1Bug2v)
        (scheme-report-environment . g$8804$1Bug2v)
        (quotient . g$6804$1Bug2v)
        (null-environment . g$8803$1Bug2v)
        (remainder . g$6805$1Bug2v)
        (modulo . g$6806$1Bug2v)
        (inexact->exact . g$12209$1Bug2v)
        (force . g$6808$1Bug2v)
        (exact->inexact . g$12208$1Bug2v)
        (exit . g$12207$1Bug2v)
        (command-line . g$11774$1Bug2v)
        (string-fill! . g$12206$1Bug2v)
        (string-set! . g$12205$1Bug2v)
        (set-cdr! . g$12204$1Bug2v)
        (set-car! . g$12203$1Bug2v)
        (remove . g$5824$1Bug2v)
        (remv . g$5825$1Bug2v)
        (remp . g$5807$1Bug2v)
        (remq . g$5826$1Bug2v)
        (partition . g$5806$1Bug2v)
        (memv . g$5814$1Bug2v)
        (memq . g$5813$1Bug2v)
        (memp . g$5816$1Bug2v)
        (member . g$5815$1Bug2v)
        (exists . g$5820$1Bug2v)
        (for-all . g$5819$1Bug2v)
        (fold-right . g$5823$1Bug2v)
        (fold-left . g$5822$1Bug2v)
        (find . g$5805$1Bug2v)
        (filter . g$5808$1Bug2v)
        (cons* . g$5821$1Bug2v)
        (assv . g$5810$1Bug2v)
        (assq . g$5809$1Bug2v)
        (assp . g$5812$1Bug2v)
        (assoc . g$5811$1Bug2v)
        (with-exception-handler . g$12202$1Bug2v)
        (raise-continuable . g$12201$1Bug2v)
        (raise . g$12200$1Bug2v)
        (eval . g$8806$1Bug2v)
        (environment . g$8802$1Bug2v)
        (make-enumeration . g$7424$1Bug2v)
        (enum-set=? . g$7431$1Bug2v)
        (enum-set-universe . g$7425$1Bug2v)
        (enum-set-union . g$7432$1Bug2v)
        (enum-set-subset? . g$7430$1Bug2v)
        (enum-set-projection . g$7436$1Bug2v)
        (enum-set-member? . g$7429$1Bug2v)
        (enum-set-intersection . g$7433$1Bug2v)
        (enum-set-indexer . g$7426$1Bug2v)
        (enum-set-difference . g$7434$1Bug2v)
        (enum-set-constructor . g$7427$1Bug2v)
        (enum-set-complement . g$7435$1Bug2v)
        (enum-set->list . g$7428$1Bug2v)
        (who-condition? . g$6715$1Bug2v)
        (warning? . g$6626$1Bug2v)
        (violation? . g$6668$1Bug2v)
        (undefined-violation? . g$6792$1Bug2v)
        (syntax-violation? . g$6776$1Bug2v)
        (syntax-violation-subform . g$6778$1Bug2v)
        (syntax-violation-form . g$6777$1Bug2v)
        (syntax-violation . g$8823$1Bug2v)
        (simple-conditions . g$12199$1Bug2v)
        (serious-condition? . g$6640$1Bug2v)
        (non-continuable-violation? . g$6730$1Bug2v)
        (message-condition? . g$6611$1Bug2v)
        (make-who-condition . g$6713$1Bug2v)
        (make-warning . g$6625$1Bug2v)
        (make-violation . g$6667$1Bug2v)
        (make-undefined-violation . g$6791$1Bug2v)
        (make-syntax-violation . g$6773$1Bug2v)
        (make-serious-condition . g$6639$1Bug2v)
        (make-non-continuable-violation . g$6729$1Bug2v)
        (make-message-condition . g$6609$1Bug2v)
        (make-lexical-violation . g$6757$1Bug2v)
        (make-irritants-condition . g$6696$1Bug2v)
        (make-implementation-restriction-violation . g$6743$1Bug2v)
        (make-error . g$6653$1Bug2v)
        (make-assertion-violation . g$6681$1Bug2v)
        (lexical-violation? . g$6758$1Bug2v)
        (irritants-condition? . g$6698$1Bug2v)
        (implementation-restriction-violation? . g$6744$1Bug2v)
        (error? . g$6654$1Bug2v)
        (condition-who . g$6716$1Bug2v)
        (condition-predicate . g$12198$1Bug2v)
        (condition-message . g$6612$1Bug2v)
        (condition-irritants . g$6699$1Bug2v)
        (condition-accessor . g$12197$1Bug2v)
        (condition . g$12196$1Bug2v)
        (assertion-violation? . g$6682$1Bug2v)
        (condition? . g$12195$1Bug2v)
        (utf32->string . g$12194$1Bug2v)
        (utf16->string . g$12193$1Bug2v)
        (utf8->string . g$12192$1Bug2v)
        (uint-list->bytevector . g$12191$1Bug2v)
        (u8-list->bytevector . g$12190$1Bug2v)
        (string->utf8 . g$12189$1Bug2v)
        (string->utf32 . g$12188$1Bug2v)
        (string->utf16 . g$12187$1Bug2v)
        (sint-list->bytevector . g$12186$1Bug2v)
        (native-endianness . g$6467$1Bug2v)
        (bytevector? . g$12185$1Bug2v)
        (bytevector=? . g$12184$1Bug2v)
        (bytevector-uint-set! . g$12183$1Bug2v)
        (bytevector-uint-ref . g$12182$1Bug2v)
        (bytevector-u8-set! . g$12181$1Bug2v)
        (bytevector-u8-ref . g$12180$1Bug2v)
        (bytevector-u64-set! . g$6488$1Bug2v)
        (bytevector-u64-ref . g$6484$1Bug2v)
        (bytevector-u64-native-set! . g$6490$1Bug2v)
        (bytevector-u64-native-ref . g$6486$1Bug2v)
        (bytevector-u32-set! . g$6480$1Bug2v)
        (bytevector-u32-ref . g$6476$1Bug2v)
        (bytevector-u32-native-set! . g$6482$1Bug2v)
        (bytevector-u32-native-ref . g$6478$1Bug2v)
        (bytevector-u16-set! . g$6472$1Bug2v)
        (bytevector-u16-ref . g$6468$1Bug2v)
        (bytevector-u16-native-set! . g$6474$1Bug2v)
        (bytevector-u16-native-ref . g$6470$1Bug2v)
        (bytevector-sint-set! . g$12179$1Bug2v)
        (bytevector-sint-ref . g$12178$1Bug2v)
        (bytevector-s8-set! . g$12177$1Bug2v)
        (bytevector-s8-ref . g$12176$1Bug2v)
        (bytevector-s64-set! . g$6489$1Bug2v)
        (bytevector-s64-ref . g$6485$1Bug2v)
        (bytevector-s64-native-set! . g$6491$1Bug2v)
        (bytevector-s64-native-ref . g$6487$1Bug2v)
        (bytevector-s32-set! . g$6481$1Bug2v)
        (bytevector-s32-ref . g$6477$1Bug2v)
        (bytevector-s32-native-set! . g$6483$1Bug2v)
        (bytevector-s32-native-ref . g$6479$1Bug2v)
        (bytevector-s16-set! . g$6473$1Bug2v)
        (bytevector-s16-ref . g$6469$1Bug2v)
        (bytevector-s16-native-set! . g$6475$1Bug2v)
        (bytevector-s16-native-ref . g$6471$1Bug2v)
        (bytevector-length . g$12175$1Bug2v)
        (bytevector-ieee-single-set! . g$12174$1Bug2v)
        (bytevector-ieee-single-ref . g$12173$1Bug2v)
        (bytevector-ieee-single-native-set! . g$6494$1Bug2v)
        (bytevector-ieee-single-native-ref . g$6492$1Bug2v)
        (bytevector-ieee-double-set! . g$12172$1Bug2v)
        (bytevector-ieee-double-ref . g$12171$1Bug2v)
        (bytevector-ieee-double-native-set! . g$6495$1Bug2v)
        (bytevector-ieee-double-native-ref . g$6493$1Bug2v)
        (bytevector-fill! . g$12170$1Bug2v)
        (bytevector-copy! . g$12169$1Bug2v)
        (bytevector-copy . g$12168$1Bug2v)
        (bytevector->uint-list . g$12167$1Bug2v)
        (bytevector->u8-list . g$12166$1Bug2v)
        (bytevector->sint-list . g$12165$1Bug2v)
        (no-nans-violation? . g$7156$1Bug2v)
        (no-infinities-violation? . g$7142$1Bug2v)
        (make-no-nans-violation . g$7155$1Bug2v)
        (make-no-infinities-violation . g$7141$1Bug2v)
        (real->flonum . g$12164$1Bug2v)
        (flzero? . g$12163$1Bug2v)
        (fltruncate . g$12162$1Bug2v)
        (fltan . g$12161$1Bug2v)
        (flsqrt . g$12160$1Bug2v)
        (flsin . g$12159$1Bug2v)
        (flround . g$12158$1Bug2v)
        (flpositive? . g$12157$1Bug2v)
        (flonum? . g$12156$1Bug2v)
        (flodd? . g$12155$1Bug2v)
        (flnumerator . g$12154$1Bug2v)
        (flnegative? . g$12153$1Bug2v)
        (flnan? . g$12152$1Bug2v)
        (flmod0 . g$12151$1Bug2v)
        (flmod . g$12150$1Bug2v)
        (flmin . g$12149$1Bug2v)
        (flmax . g$12148$1Bug2v)
        (fllog . g$12147$1Bug2v)
        (flinteger? . g$12146$1Bug2v)
        (flinfinite? . g$12145$1Bug2v)
        (flfloor . g$12144$1Bug2v)
        (flfinite? . g$12143$1Bug2v)
        (flexpt . g$12142$1Bug2v)
        (flexp . g$12141$1Bug2v)
        (fleven? . g$12140$1Bug2v)
        (fldiv0-and-mod0 . g$12139$1Bug2v)
        (fldiv0 . g$12138$1Bug2v)
        (fldiv-and-mod . g$12137$1Bug2v)
        (fldiv . g$12136$1Bug2v)
        (fldenominator . g$12135$1Bug2v)
        (flcos . g$12134$1Bug2v)
        (flceiling . g$12133$1Bug2v)
        (flatan . g$12132$1Bug2v)
        (flasin . g$12131$1Bug2v)
        (flacos . g$12130$1Bug2v)
        (flabs . g$12129$1Bug2v)
        (fl>? . g$12128$1Bug2v)
        (fl>=? . g$12127$1Bug2v)
        (fl=? . g$12126$1Bug2v)
        (fl<? . g$12125$1Bug2v)
        (fl<=? . g$12124$1Bug2v)
        (fl/ . g$12123$1Bug2v)
        (fl- . g$12122$1Bug2v)
        (fl+ . g$12121$1Bug2v)
        (fl* . g$12120$1Bug2v)
        (fixnum->flonum . g$12119$1Bug2v)
        (fxzero? . g$12118$1Bug2v)
        (fxxor . g$12117$1Bug2v)
        (fxrotate-bit-field . g$7087$1Bug2v)
        (fxreverse-bit-field . g$12116$1Bug2v)
        (fxpositive? . g$12115$1Bug2v)
        (fxodd? . g$12114$1Bug2v)
        (fxnot . g$12113$1Bug2v)
        (fxnegative? . g$12112$1Bug2v)
        (fxmod0 . g$12111$1Bug2v)
        (fxmod . g$12110$1Bug2v)
        (fxmin . g$12109$1Bug2v)
        (fxmax . g$12108$1Bug2v)
        (fxlength . g$12107$1Bug2v)
        (fxior . g$12106$1Bug2v)
        (fxif . g$7081$1Bug2v)
        (fxfirst-bit-set . g$12105$1Bug2v)
        (fxeven? . g$12104$1Bug2v)
        (fxdiv0-and-mod0 . g$12103$1Bug2v)
        (fxdiv0 . g$12102$1Bug2v)
        (fxdiv-and-mod . g$12101$1Bug2v)
        (fxdiv . g$12100$1Bug2v)
        (fxcopy-bit-field . g$7084$1Bug2v)
        (fxcopy-bit . g$7082$1Bug2v)
        (fxbit-set? . g$12099$1Bug2v)
        (fxbit-field . g$7083$1Bug2v)
        (fxbit-count . g$12098$1Bug2v)
        (fxarithmetic-shift-right . g$7086$1Bug2v)
        (fxarithmetic-shift-left . g$7085$1Bug2v)
        (fxarithmetic-shift . g$12097$1Bug2v)
        (fxand . g$12096$1Bug2v)
        (fx>? . g$12095$1Bug2v)
        (fx>=? . g$12094$1Bug2v)
        (fx=? . g$12093$1Bug2v)
        (fx<? . g$12092$1Bug2v)
        (fx<=? . g$12091$1Bug2v)
        (fx-/carry . g$12090$1Bug2v)
        (fx- . g$12089$1Bug2v)
        (fx+/carry . g$12088$1Bug2v)
        (fx+ . g$12087$1Bug2v)
        (fx*/carry . g$12086$1Bug2v)
        (fx* . g$12085$1Bug2v)
        (greatest-fixnum . g$12084$1Bug2v)
        (least-fixnum . g$12083$1Bug2v)
        (fixnum-width . g$12082$1Bug2v)
        (fixnum? . g$12081$1Bug2v)
        (bitwise-rotate-bit-field . g$7039$1Bug2v)
        (bitwise-reverse-bit-field . g$12080$1Bug2v)
        (bitwise-length . g$12079$1Bug2v)
        (bitwise-if . g$7033$1Bug2v)
        (bitwise-first-bit-set . g$12078$1Bug2v)
        (bitwise-copy-bit-field . g$7036$1Bug2v)
        (bitwise-copy-bit . g$7034$1Bug2v)
        (bitwise-bit-set? . g$12077$1Bug2v)
        (bitwise-bit-field . g$12076$1Bug2v)
        (bitwise-bit-count . g$12075$1Bug2v)
        (bitwise-xor . g$12074$1Bug2v)
        (bitwise-ior . g$12073$1Bug2v)
        (bitwise-and . g$12072$1Bug2v)
        (bitwise-not . g$12071$1Bug2v)
        (bitwise-arithmetic-shift-right . g$7038$1Bug2v)
        (bitwise-arithmetic-shift-left . g$7037$1Bug2v)
        (bitwise-arithmetic-shift . g$12070$1Bug2v)
        (zero? . g$12069$1Bug2v)
        (vector? . g$12068$1Bug2v)
        (vector-set! . g$12067$1Bug2v)
        (vector-ref . g$12066$1Bug2v)
        (vector-map . g$12065$1Bug2v)
        (vector-length . g$12064$1Bug2v)
        (vector-for-each . g$12063$1Bug2v)
        (vector-fill! . g$12062$1Bug2v)
        (vector->list . g$12061$1Bug2v)
        (vector . g$12060$1Bug2v)
        (values . g$12059$1Bug2v)
        (truncate . g$12058$1Bug2v)
        (tan . g$12057$1Bug2v)
        (symbol? . g$12056$1Bug2v)
        (symbol=? . g$5976$1Bug2v)
        (symbol->string . g$12055$1Bug2v)
        (substring . g$12054$1Bug2v)
        (string? . g$12053$1Bug2v)
        (string>? . g$5973$1Bug2v)
        (string>=? . g$5975$1Bug2v)
        (string=? . g$5971$1Bug2v)
        (string<? . g$5972$1Bug2v)
        (string<=? . g$5974$1Bug2v)
        (string-ref . g$12052$1Bug2v)
        (string-length . g$12051$1Bug2v)
        (string-for-each . g$12050$1Bug2v)
        (string-copy . g$12049$1Bug2v)
        (string-append . g$12048$1Bug2v)
        (string->symbol . g$12047$1Bug2v)
        (string->number . g$12046$1Bug2v)
        (string->list . g$12045$1Bug2v)
        (string . g$12044$1Bug2v)
        (sqrt . g$12043$1Bug2v)
        (sin . g$12042$1Bug2v)
        (round . g$12041$1Bug2v)
        (reverse . g$12040$1Bug2v)
        (real? . g$12039$1Bug2v)
        (real-valued? . g$12038$1Bug2v)
        (real-part . g$12037$1Bug2v)
        (rationalize . g$6017$1Bug2v)
        (rational? . g$12036$1Bug2v)
        (rational-valued? . g$12035$1Bug2v)
        (procedure? . g$12034$1Bug2v)
        (positive? . g$12033$1Bug2v)
        (pair? . g$12032$1Bug2v)
        (odd? . g$12031$1Bug2v)
        (numerator . g$12030$1Bug2v)
        (number? . g$12029$1Bug2v)
        (number->string . g$12028$1Bug2v)
        (null? . g$12027$1Bug2v)
        (not . g$12026$1Bug2v)
        (negative? . g$12025$1Bug2v)
        (nan? . g$12024$1Bug2v)
        (min . g$12023$1Bug2v)
        (max . g$12022$1Bug2v)
        (map . g$12021$1Bug2v)
        (make-vector . g$12020$1Bug2v)
        (make-string . g$12019$1Bug2v)
        (make-rectangular . g$12018$1Bug2v)
        (make-polar . g$12017$1Bug2v)
        (magnitude . g$12016$1Bug2v)
        (log . g$12015$1Bug2v)
        (list? . g$12014$1Bug2v)
        (list-tail . g$12013$1Bug2v)
        (list-ref . g$12012$1Bug2v)
        (list->vector . g$12011$1Bug2v)
        (list->string . g$12010$1Bug2v)
        (list . g$12009$1Bug2v)
        (length . g$12008$1Bug2v)
        (lcm . g$12007$1Bug2v)
        (integer? . g$12006$1Bug2v)
        (integer-valued? . g$12005$1Bug2v)
        (integer->char . g$12004$1Bug2v)
        (infinite? . g$12003$1Bug2v)
        (inexact? . g$12002$1Bug2v)
        (inexact . g$12001$1Bug2v)
        (imag-part . g$12000$1Bug2v)
        (gcd . g$11999$1Bug2v)
        (for-each . g$11998$1Bug2v)
        (floor . g$11997$1Bug2v)
        (finite? . g$11996$1Bug2v)
        (expt . g$11995$1Bug2v)
        (exp . g$11994$1Bug2v)
        (exact? . g$11993$1Bug2v)
        (exact-integer-sqrt . g$11992$1Bug2v)
        (exact . g$11991$1Bug2v)
        (even? . g$11990$1Bug2v)
        (error . g$11989$1Bug2v)
        (eqv? . g$11988$1Bug2v)
        (equal? . g$11987$1Bug2v)
        (eq? . g$11986$1Bug2v)
        (dynamic-wind . g$11985$1Bug2v)
        (div0-and-mod0 . g$11984$1Bug2v)
        (mod0 . g$11983$1Bug2v)
        (div0 . g$11982$1Bug2v)
        (div-and-mod . g$11981$1Bug2v)
        (mod . g$11980$1Bug2v)
        (div . g$11979$1Bug2v)
        (denominator . g$11978$1Bug2v)
        (cos . g$11977$1Bug2v)
        (cons . g$11976$1Bug2v)
        (complex? . g$11975$1Bug2v)
        (char? . g$11974$1Bug2v)
        (char>? . g$6014$1Bug2v)
        (char>=? . g$6016$1Bug2v)
        (char=? . g$6012$1Bug2v)
        (char<? . g$6013$1Bug2v)
        (char<=? . g$6015$1Bug2v)
        (char->integer . g$11973$1Bug2v)
        (ceiling . g$11972$1Bug2v)
        (call-with-values . g$11971$1Bug2v)
        (call/cc . g$11970$1Bug2v)
        (call-with-current-continuation . g$11969$1Bug2v)
        (cddddr . g$5936$1Bug2v)
        (cdddar . g$5935$1Bug2v)
        (cddadr . g$5934$1Bug2v)
        (cddaar . g$5933$1Bug2v)
        (cdaddr . g$5932$1Bug2v)
        (cdadar . g$5931$1Bug2v)
        (cdaadr . g$5930$1Bug2v)
        (cdaaar . g$5929$1Bug2v)
        (cadddr . g$5928$1Bug2v)
        (caddar . g$5927$1Bug2v)
        (cadadr . g$5926$1Bug2v)
        (cadaar . g$5925$1Bug2v)
        (caaddr . g$5924$1Bug2v)
        (caadar . g$5923$1Bug2v)
        (caaadr . g$5922$1Bug2v)
        (caaaar . g$5921$1Bug2v)
        (cdddr . g$5920$1Bug2v)
        (cddar . g$5919$1Bug2v)
        (cdadr . g$5918$1Bug2v)
        (cdaar . g$5917$1Bug2v)
        (caddr . g$5916$1Bug2v)
        (cadar . g$5915$1Bug2v)
        (caadr . g$5914$1Bug2v)
        (caaar . g$5913$1Bug2v)
        (cddr . g$5912$1Bug2v)
        (cdar . g$5911$1Bug2v)
        (cadr . g$5910$1Bug2v)
        (caar . g$5909$1Bug2v)
        (cdr . g$11968$1Bug2v)
        (car . g$11967$1Bug2v)
        (boolean? . g$11966$1Bug2v)
        (boolean=? . g$5977$1Bug2v)
        (atan . g$11965$1Bug2v)
        (assertion-violation . g$11964$1Bug2v)
        (asin . g$11963$1Bug2v)
        (apply . g$11962$1Bug2v)
        (append . g$11961$1Bug2v)
        (angle . g$11960$1Bug2v)
        (acos . g$11959$1Bug2v)
        (abs . g$11958$1Bug2v)
        (/ . g$11957$1Bug2v)
        (* . g$11956$1Bug2v)
        (- . g$11955$1Bug2v)
        (+ . g$11954$1Bug2v)
        (>= . g$11953$1Bug2v)
        (> . g$11952$1Bug2v)
        (= . g$11951$1Bug2v)
        (<= . g$11950$1Bug2v)
        (< . g$11949$1Bug2v)
        (make-record-printer . g$11948$1Bug2v)
        (eqv-hash . g$11947$1Bug2v)
        (eq-hash . g$11946$1Bug2v)
        (reverse! . g$11945$1Bug2v)
        (deserialize-port . g$11944$1Bug2v)
        (serialize-port . g$11943$1Bug2v)
        (enum-set? . g$7399$1Bug2v)
        (make-promise . g$6807$1Bug2v)
        (load/args . g$11776$1Bug2v)
        (printf . g$7509$1Bug2v)
        (fprintf . g$7510$1Bug2v)
        (format . g$7511$1Bug2v)
        (procedure-form . g$11942$1Bug2v)
        (procedure-environment . g$11941$1Bug2v)
        (procedure-name . g$11940$1Bug2v)
        (procedure-arity . g$11939$1Bug2v)
        (gc-collect . g$11938$1Bug2v)
        (clr-type? . g$11937$1Bug2v)
        (get-clr-type . g$11936$1Bug2v)
        (get-command-line . g$11935$1Bug2v)
        (vector-append . g$11934$1Bug2v)
        (vector-filter . g$11933$1Bug2v)
        (vector-reverse! . g$11932$1Bug2v)
        (vector-contains? . g$11931$1Bug2v)
        (vector-index-of . g$11930$1Bug2v)
        (vector-copy . g$11929$1Bug2v)
        (vector-binary-search . g$11928$1Bug2v)
        (get-output-string . g$11927$1Bug2v)
        (open-output-string . g$11926$1Bug2v)
        (open-input-string . g$11925$1Bug2v)
        (string-ci-compare . g$11924$1Bug2v)
        (string-compare . g$11923$1Bug2v)
        (string-format . g$11922$1Bug2v)
        (trace-printer . g$11773$1Bug2v)
        (make-traced-procedure . g$11921$1Bug2v)
        (make-traced-macro . g$7531$1Bug2v)
        (assertion-error . g$8819$1Bug2v)
        (pmap . g$11920$1Bug2v)
        (time-it . g$11919$1Bug2v)
        (make-parameter . g$7536$1Bug2v)
        (library-locator . g$11918$1Bug2v)
        (get-library-paths . g$11917$1Bug2v)
        (environment-bindings . g$8798$1Bug2v)
        (environment-symbols . g$8801$1Bug2v)
        (interaction-environment-symbols . g$8797$1Bug2v)
        (optimization-level . g$11916$1Bug2v)
        (library-path . g$7966$1Bug2v)
        (&no-nans . g$11915$1Bug2v)
        (&no-infinities . g$11914$1Bug2v)
        (&i/o-encoding . g$11913$1Bug2v)
        (&i/o-decoding . g$11912$1Bug2v)
        (&i/o-port . g$11911$1Bug2v)
        (&i/o-file-does-not-exist . g$11910$1Bug2v)
        (&i/o-file-already-exists . g$11909$1Bug2v)
        (&i/o-file-is-read-only . g$11908$1Bug2v)
        (&i/o-file-protection . g$11907$1Bug2v)
        (&i/o-filename . g$11906$1Bug2v)
        (&i/o-invalid-position . g$11905$1Bug2v)
        (&i/o-write . g$11904$1Bug2v)
        (&i/o-read . g$11903$1Bug2v)
        (&i/o . g$11902$1Bug2v)
        (&non-continuable . g$11901$1Bug2v)
        (&undefined . g$11900$1Bug2v)
        (&syntax . g$11899$1Bug2v)
        (&lexical . g$11898$1Bug2v)
        (&implementation-restriction . g$11897$1Bug2v)
        (&non . g$11896$1Bug2v)
        (&who . g$11895$1Bug2v)
        (&irritants . g$11894$1Bug2v)
        (&assertion . g$11893$1Bug2v)
        (&violation . g$11892$1Bug2v)
        (&error . g$11891$1Bug2v)
        (&serious . g$11890$1Bug2v)
        (&warning . g$11889$1Bug2v)
        (&message . g$11888$1Bug2v)
        (&condition . g$11887$1Bug2v)
        (define-condition-type . g$11886$1Bug2v)
        (define-enumeration . g$11885$1Bug2v)
        (define-record-type . g$11884$1Bug2v)
        (parent-rtd . g$11883$1Bug2v)
        (nongenerative . g$11882$1Bug2v)
        (opaque . g$11881$1Bug2v)
        (sealed . g$11880$1Bug2v)
        (protocol . g$11879$1Bug2v)
        (parent . g$11878$1Bug2v)
        (immutable . g$11877$1Bug2v)
        (mutable . g$11876$1Bug2v)
        (fields . g$11875$1Bug2v)
        (error-handling-mode . g$11874$1Bug2v)
        (file-options . g$11873$1Bug2v)
        (buffer-mode . g$11872$1Bug2v)
        (eol-style . g$11871$1Bug2v)
        (guard . g$11870$1Bug2v)
        (trace-letrec-syntax . g$11869$1Bug2v)
        (trace-let-syntax . g$11868$1Bug2v)
        (trace-define-syntax . g$11867$1Bug2v)
        (trace-define . g$11866$1Bug2v)
        (trace-lambda . g$11865$1Bug2v)
        (unsyntax-splicing . g$11864$1Bug2v)
        (unsyntax . g$11863$1Bug2v)
        (unquote-splicing . g$11862$1Bug2v)
        (unquote . g$11861$1Bug2v)
        (_ . g$11860$1Bug2v)
        (else . g$11859$1Bug2v)
        (=> . g$11858$1Bug2v)
        (... . g$11857$1Bug2v)
        (assert . g$11856$1Bug2v)
        (endianness . g$11855$1Bug2v)
        (delay . g$11854$1Bug2v)
        (time . g$11853$1Bug2v)
        (or . g$11852$1Bug2v)
        (and . g$11851$1Bug2v)
        (do . g$11850$1Bug2v)
        (cond . g$11849$1Bug2v)
        (let* . g$11848$1Bug2v)
        (let . g$11847$1Bug2v)
        (identifier-syntax . g$11846$1Bug2v)
        (with-syntax . g$11845$1Bug2v)
        (quasisyntax . g$11844$1Bug2v)
        (quasiquote . g$11843$1Bug2v)
        (syntax-rules . g$11842$1Bug2v)
        (include-into . g$11841$1Bug2v)
        (include . g$11840$1Bug2v)
        (define-struct . g$11839$1Bug2v)
        (let-values . g$11838$1Bug2v)
        (let*-values . g$11837$1Bug2v)
        (record-constructor-descriptor . g$11836$1Bug2v)
        (record-type-descriptor . g$11835$1Bug2v)
        (fluid-let-syntax . g$11834$1Bug2v)
        (case . g$11833$1Bug2v)
        (parameterize . g$11832$1Bug2v)
        (unless . g$11831$1Bug2v)
        (when . g$11830$1Bug2v)
        (if . g$11829$1Bug2v)
        (letrec* . g$11828$1Bug2v)
        (letrec . g$11827$1Bug2v)
        (type-descriptor . g$11826$1Bug2v)
        (case-lambda . g$11825$1Bug2v)
        (lambda . g$11824$1Bug2v)
        (syntax . g$11823$1Bug2v)
        (syntax-case . g$11822$1Bug2v)
        (quote . g$11821$1Bug2v)
        (foreign-call . g$11820$1Bug2v)
        (letrec-syntax . g$11819$1Bug2v)
        (let-syntax . g$11818$1Bug2v)
        (set! . g$11817$1Bug2v)
        (export . g$11816$1Bug2v)
        (import . g$11815$1Bug2v)
        (library . g$11814$1Bug2v)
        (begin . g$11813$1Bug2v)
        (module . g$11812$1Bug2v)
        (define-syntax . g$11811$1Bug2v)
        (define . g$11810$1Bug2v))
      '((g$8696$1Bug2v core-prim . ellipsis-map)
        (g$12432$1Bug2v core-prim . &no-nans-rcd)
        (g$12431$1Bug2v core-prim . &no-nans-rtd)
        (g$12430$1Bug2v core-prim . &no-infinities-rcd)
        (g$12429$1Bug2v core-prim . &no-infinities-rtd)
        (g$12428$1Bug2v core-prim . &i/o-encoding-rcd)
        (g$12427$1Bug2v core-prim . &i/o-encoding-rtd)
        (g$12426$1Bug2v core-prim . &i/o-decoding-rcd)
        (g$12425$1Bug2v core-prim . &i/o-decoding-rtd)
        (g$12424$1Bug2v core-prim . &i/o-port-rcd)
        (g$12423$1Bug2v core-prim . &i/o-port-rtd)
        (g$12422$1Bug2v core-prim . &i/o-file-does-not-exist-rcd)
        (g$12421$1Bug2v core-prim . &i/o-file-does-not-exist-rtd)
        (g$12420$1Bug2v core-prim . &i/o-file-already-exists-rcd)
        (g$12419$1Bug2v core-prim . &i/o-file-already-exists-rtd)
        (g$12418$1Bug2v core-prim . &i/o-file-is-read-only-rcd)
        (g$12417$1Bug2v core-prim . &i/o-file-is-read-only-rtd)
        (g$12416$1Bug2v core-prim . &i/o-file-protection-rcd)
        (g$12415$1Bug2v core-prim . &i/o-file-protection-rtd)
        (g$12414$1Bug2v core-prim . &i/o-filename-rcd)
        (g$12413$1Bug2v core-prim . &i/o-filename-rtd)
        (g$12412$1Bug2v core-prim . &i/o-invalid-position-rcd)
        (g$12411$1Bug2v core-prim . &i/o-invalid-position-rtd)
        (g$12410$1Bug2v core-prim . &i/o-write-rcd)
        (g$12409$1Bug2v core-prim . &i/o-write-rtd)
        (g$12408$1Bug2v core-prim . &i/o-read-rcd)
        (g$12407$1Bug2v core-prim . &i/o-read-rtd)
        (g$12406$1Bug2v core-prim . &i/o-rcd)
        (g$12405$1Bug2v core-prim . &i/o-rtd)
        (g$12404$1Bug2v core-prim . &undefined-rcd)
        (g$12403$1Bug2v core-prim . &undefined-rtd)
        (g$12402$1Bug2v core-prim . &syntax-rcd)
        (g$12401$1Bug2v core-prim . &syntax-rtd)
        (g$12400$1Bug2v core-prim . &lexical-rcd)
        (g$12399$1Bug2v core-prim . &lexical-rtd)
        (g$12398$1Bug2v core-prim . &implementation-restriction-rcd)
        (g$12397$1Bug2v core-prim . &implementation-restriction-rtd)
        (g$12396$1Bug2v core-prim . &non-continuable-rcd)
        (g$12395$1Bug2v core-prim . &non-continuable-rtd)
        (g$12394$1Bug2v core-prim . &who-rcd)
        (g$12393$1Bug2v core-prim . &who-rtd)
        (g$12392$1Bug2v core-prim . &irritants-rcd)
        (g$12391$1Bug2v core-prim . &irritants-rtd)
        (g$12390$1Bug2v core-prim . &assertion-rcd)
        (g$12389$1Bug2v core-prim . &assertion-rtd)
        (g$12388$1Bug2v core-prim . &violation-rcd)
        (g$12387$1Bug2v core-prim . &violation-rtd)
        (g$12386$1Bug2v core-prim . &error-rcd)
        (g$12385$1Bug2v core-prim . &error-rtd)
        (g$12384$1Bug2v core-prim . &serious-rcd)
        (g$12383$1Bug2v core-prim . &serious-rtd)
        (g$12382$1Bug2v core-prim . &warning-rcd)
        (g$12381$1Bug2v core-prim . &warning-rtd)
        (g$12380$1Bug2v core-prim . &message-rcd)
        (g$12379$1Bug2v core-prim . &message-rtd)
        (g$12378$1Bug2v core-prim . &condition-rcd)
        (g$12377$1Bug2v core-prim . &condition-rtd)
        (g$12376$1Bug2v core-prim . library-letrec*)
        (g$12375$1Bug2v core-prim . annotation-stripped)
        (g$12374$1Bug2v core-prim . annotation-source)
        (g$12373$1Bug2v core-prim . annotation-expression)
        (g$12372$1Bug2v core-prim . annotation?)
        (g$12371$1Bug2v core-prim . read-annotated)
        (g$12370$1Bug2v core-prim . tanh)
        (g$12369$1Bug2v core-prim . cosh)
        (g$12368$1Bug2v core-prim . sinh)
        (g$12367$1Bug2v core-prim . make-guid)
        (g$12366$1Bug2v core-prim . unspecified?)
        (g$12365$1Bug2v core-prim . make-trace)
        (g$12364$1Bug2v core-prim . make-list)
        (g$12363$1Bug2v core-prim . last-pair)
        (g$12362$1Bug2v core-prim . load-r5rs)
        (g$12361$1Bug2v core-prim . license)
        (g$12360$1Bug2v core-prim . stacktrace)
        (g$11778$1Bug2v core-prim . ironscheme-build)
        (g$12359$1Bug2v core-prim . define-clr-class-internal)
        (g$12358$1Bug2v core-prim . clr-field-set!-internal)
        (g$12357$1Bug2v core-prim . clr-field-get-internal)
        (g$12356$1Bug2v core-prim . clr-cast-internal)
        (g$12355$1Bug2v core-prim . clr-call-internal)
        (g$12354$1Bug2v core-prim . clr-new-internal)
        (g$12353$1Bug2v core-prim . clr-new-array-internal)
        (g$12352$1Bug2v core-prim . clr-is-internal)
        (g$12351$1Bug2v core-prim . clr-reference-internal)
        (g$12350$1Bug2v core-prim . clr-using-internal)
        (g$12349$1Bug2v core-prim . clr-clear-usings-internal)
        (g$8820$1Bug2v core-prim . syntax-error)
        (g$8691$1Bug2v core-prim . syntax-dispatch)
        (g$12348$1Bug2v core-prim . compile-core)
        (g$12347$1Bug2v core-prim . eval-core)
        (g$12346$1Bug2v core-prim . set-symbol-value!)
        (g$12345$1Bug2v core-prim . symbol-value)
        (g$12344$1Bug2v core-prim . ungensym)
        (g$12343$1Bug2v core-prim . gensym)
        (g$12342$1Bug2v core-prim . void)
        (g$12341$1Bug2v core-prim . load-serialized-library)
        (g$12340$1Bug2v core-prim . serialize-library)
        (g$11780$1Bug2v core-prim . compile-system-libraries)
        (g$11782$1Bug2v core-prim . compile->closure)
        (g$11781$1Bug2v core-prim . compile)
        (g$11777$1Bug2v core-prim . load)
        (g$8829$1Bug2v core-prim . interaction-environment)
        (g$12339$1Bug2v core-prim . char-ready?)
        (g$12338$1Bug2v core-prim . string-upcase)
        (g$12337$1Bug2v core-prim . string-titlecase)
        (g$12336$1Bug2v core-prim . string-normalize-nfkd)
        (g$12335$1Bug2v core-prim . string-normalize-nfkc)
        (g$12334$1Bug2v core-prim . string-normalize-nfd)
        (g$12333$1Bug2v core-prim . string-normalize-nfc)
        (g$12332$1Bug2v core-prim . string-foldcase)
        (g$12331$1Bug2v core-prim . string-downcase)
        (g$6938$1Bug2v core-prim . string-ci>?)
        (g$6940$1Bug2v core-prim . string-ci>=?)
        (g$6936$1Bug2v core-prim . string-ci=?)
        (g$6937$1Bug2v core-prim . string-ci<?)
        (g$6939$1Bug2v core-prim . string-ci<=?)
        (g$12330$1Bug2v core-prim . char-whitespace?)
        (g$12329$1Bug2v core-prim . char-upper-case?)
        (g$12328$1Bug2v core-prim . char-title-case?)
        (g$12327$1Bug2v core-prim . char-numeric?)
        (g$12326$1Bug2v core-prim . char-lower-case?)
        (g$12325$1Bug2v core-prim . char-general-category)
        (g$12324$1Bug2v core-prim . char-upcase)
        (g$12323$1Bug2v core-prim . char-titlecase)
        (g$12322$1Bug2v core-prim . char-foldcase)
        (g$12321$1Bug2v core-prim . char-downcase)
        (g$6977$1Bug2v core-prim . char-ci>?)
        (g$6979$1Bug2v core-prim . char-ci>=?)
        (g$6975$1Bug2v core-prim . char-ci=?)
        (g$6976$1Bug2v core-prim . char-ci<?)
        (g$6978$1Bug2v core-prim . char-ci<=?)
        (g$12320$1Bug2v core-prim . char-alphabetic?)
        (g$8428$1Bug2v core-prim . variable-transformer-procedure)
        (g$8427$1Bug2v core-prim . variable-transformer?)
        (g$8426$1Bug2v core-prim . make-variable-transformer)
        (g$8824$1Bug2v core-prim . identifier?)
        (g$8813$1Bug2v core-prim . generate-temporaries)
        (g$8814$1Bug2v core-prim . free-identifier=?)
        (g$8826$1Bug2v core-prim . syntax->datum)
        (g$8825$1Bug2v core-prim . datum->syntax)
        (g$8815$1Bug2v core-prim . bound-identifier=?)
        (g$12319$1Bug2v core-prim . record-type-descriptor?)
        (g$12318$1Bug2v core-prim . record-predicate)
        (g$12317$1Bug2v core-prim . record-mutator)
        (g$12316$1Bug2v core-prim . record-constructor)
        (g$12315$1Bug2v core-prim . record-accessor)
        (g$12314$1Bug2v core-prim . make-record-type-descriptor)
        (g$12313$1Bug2v core-prim . make-record-constructor-descriptor)
        (g$12312$1Bug2v core-prim . record?)
        (g$12311$1Bug2v core-prim . record-type-uid)
        (g$12310$1Bug2v core-prim . record-type-sealed?)
        (g$12309$1Bug2v core-prim . record-type-parent)
        (g$12308$1Bug2v core-prim . record-type-opaque?)
        (g$12307$1Bug2v core-prim . record-type-name)
        (g$12306$1Bug2v core-prim . record-type-generative?)
        (g$12305$1Bug2v core-prim . record-type-field-names)
        (g$12304$1Bug2v core-prim . record-rtd)
        (g$12303$1Bug2v core-prim . record-field-mutable?)
        (g$6461$1Bug2v core-prim . delete-file)
        (g$6460$1Bug2v core-prim . file-exists?)
        (g$12302$1Bug2v core-prim . vector-sort!)
        (g$12301$1Bug2v core-prim . vector-sort)
        (g$6824$1Bug2v core-prim . list-sort)
        (g$12300$1Bug2v core-prim . symbol-hash)
        (g$12299$1Bug2v core-prim . string-ci-hash)
        (g$12298$1Bug2v core-prim . string-hash)
        (g$12297$1Bug2v core-prim . equal-hash)
        (g$12296$1Bug2v core-prim . hashtable-equivalence-function)
        (g$12295$1Bug2v core-prim . make-hashtable)
        (g$12294$1Bug2v core-prim . hashtable-hash-function)
        (g$6428$1Bug2v core-prim . make-eqv-hashtable)
        (g$6427$1Bug2v core-prim . make-eq-hashtable)
        (g$12293$1Bug2v core-prim . hashtable?)
        (g$6434$1Bug2v core-prim . hashtable-update!)
        (g$6429$1Bug2v core-prim . hashtable-size)
        (g$6431$1Bug2v core-prim . hashtable-set!)
        (g$6430$1Bug2v core-prim . hashtable-ref)
        (g$12292$1Bug2v core-prim . hashtable-mutable?)
        (g$12291$1Bug2v core-prim . hashtable-keys)
        (g$12290$1Bug2v core-prim . hashtable-entries)
        (g$6432$1Bug2v core-prim . hashtable-delete!)
        (g$12289$1Bug2v core-prim . hashtable-copy)
        (g$6433$1Bug2v core-prim . hashtable-contains?)
        (g$6435$1Bug2v core-prim . hashtable-clear!)
        (g$7366$1Bug2v core-prim . call-with-output-file)
        (g$7365$1Bug2v core-prim . call-with-input-file)
        (g$12288$1Bug2v core-prim . write-char)
        (g$12287$1Bug2v core-prim . write)
        (g$7364$1Bug2v core-prim . with-output-to-file)
        (g$7363$1Bug2v core-prim . with-input-from-file)
        (g$12286$1Bug2v core-prim . read-char)
        (g$12285$1Bug2v core-prim . read)
        (g$12284$1Bug2v core-prim . peek-char)
        (g$12283$1Bug2v core-prim . open-output-file)
        (g$12282$1Bug2v core-prim . open-input-file)
        (g$12281$1Bug2v core-prim . newline)
        (g$12280$1Bug2v core-prim . display)
        (g$12279$1Bug2v core-prim . close-output-port)
        (g$12278$1Bug2v core-prim . close-input-port)
        (g$12277$1Bug2v core-prim . eof-object?)
        (g$12276$1Bug2v core-prim . eof-object)
        (g$12275$1Bug2v core-prim . current-error-port)
        (g$12274$1Bug2v core-prim . current-output-port)
        (g$12273$1Bug2v core-prim . current-input-port)
        (g$12272$1Bug2v core-prim . output-port?)
        (g$12271$1Bug2v core-prim . input-port?)
        (g$12270$1Bug2v core-prim . utf-8-codec)
        (g$12269$1Bug2v core-prim . utf-16-codec)
        (g$12268$1Bug2v core-prim . transcoder-error-handling-mode)
        (g$12267$1Bug2v core-prim . transcoder-eol-style)
        (g$12266$1Bug2v core-prim . transcoder-codec)
        (g$12265$1Bug2v core-prim . transcoded-port)
        (g$12264$1Bug2v core-prim . textual-port?)
        (g$12263$1Bug2v core-prim . string->bytevector)
        (g$12262$1Bug2v core-prim . standard-output-port)
        (g$12261$1Bug2v core-prim . standard-input-port)
        (g$12260$1Bug2v core-prim . standard-error-port)
        (g$12259$1Bug2v core-prim . set-port-position!)
        (g$12258$1Bug2v core-prim . put-u8)
        (g$12257$1Bug2v core-prim . put-string)
        (g$12256$1Bug2v core-prim . put-datum)
        (g$12255$1Bug2v core-prim . put-char)
        (g$12254$1Bug2v core-prim . put-bytevector)
        (g$7342$1Bug2v core-prim . port?)
        (g$12253$1Bug2v core-prim . port-transcoder)
        (g$12252$1Bug2v core-prim . port-position)
        (g$12251$1Bug2v core-prim . port-has-set-port-position!?)
        (g$12250$1Bug2v core-prim . port-has-port-position?)
        (g$12249$1Bug2v core-prim . port-eof?)
        (g$12248$1Bug2v core-prim . output-port-buffer-mode)
        (g$7341$1Bug2v core-prim . open-string-output-port)
        (g$12247$1Bug2v core-prim . open-string-input-port)
        (g$12246$1Bug2v core-prim . open-file-output-port)
        (g$12245$1Bug2v core-prim . open-file-input/output-port)
        (g$12244$1Bug2v core-prim . open-file-input-port)
        (g$12243$1Bug2v core-prim . open-bytevector-output-port)
        (g$12242$1Bug2v core-prim . open-bytevector-input-port)
        (g$12241$1Bug2v core-prim . native-transcoder)
        (g$12240$1Bug2v core-prim . native-eol-style)
        (g$12239$1Bug2v core-prim . make-transcoder)
        (g$12238$1Bug2v core-prim . latin-1-codec)
        (g$7198$1Bug2v core-prim . make-i/o-write-error)
        (g$7184$1Bug2v core-prim . make-i/o-read-error)
        (g$7303$1Bug2v core-prim . make-i/o-port-error)
        (g$7213$1Bug2v core-prim . make-i/o-invalid-position-error)
        (g$7230$1Bug2v core-prim . make-i/o-filename-error)
        (g$7246$1Bug2v core-prim . make-i/o-file-protection-error)
        (g$7260$1Bug2v core-prim . make-i/o-file-is-read-only-error)
        (g$7288$1Bug2v core-prim . make-i/o-file-does-not-exist-error)
        (g$7274$1Bug2v core-prim . make-i/o-file-already-exists-error)
        (g$7170$1Bug2v core-prim . make-i/o-error)
        (g$7334$1Bug2v core-prim . make-i/o-encoding-error)
        (g$7319$1Bug2v core-prim . make-i/o-decoding-error)
        (g$12237$1Bug2v core-prim . make-custom-textual-output-port)
        (g$12236$1Bug2v core-prim . make-custom-textual-input/output-port)
        (g$12235$1Bug2v core-prim . make-custom-textual-input-port)
        (g$12234$1Bug2v core-prim . make-custom-binary-output-port)
        (g$12233$1Bug2v core-prim . make-custom-binary-input/output-port)
        (g$12232$1Bug2v core-prim . make-custom-binary-input-port)
        (g$12231$1Bug2v core-prim . make-bytevector)
        (g$12230$1Bug2v core-prim . lookahead-u8)
        (g$12229$1Bug2v core-prim . lookahead-char)
        (g$7199$1Bug2v core-prim . i/o-write-error?)
        (g$7185$1Bug2v core-prim . i/o-read-error?)
        (g$7305$1Bug2v core-prim . i/o-port-error?)
        (g$7215$1Bug2v core-prim . i/o-invalid-position-error?)
        (g$7216$1Bug2v core-prim . i/o-error-position)
        (g$7232$1Bug2v core-prim . i/o-filename-error?)
        (g$7247$1Bug2v core-prim . i/o-file-protection-error?)
        (g$7261$1Bug2v core-prim . i/o-file-is-read-only-error?)
        (g$7289$1Bug2v core-prim . i/o-file-does-not-exist-error?)
        (g$7275$1Bug2v core-prim . i/o-file-already-exists-error?)
        (g$7171$1Bug2v core-prim . i/o-error?)
        (g$7306$1Bug2v core-prim . i/o-error-port)
        (g$7233$1Bug2v core-prim . i/o-error-filename)
        (g$7336$1Bug2v core-prim . i/o-encoding-error?)
        (g$7337$1Bug2v core-prim . i/o-encoding-error-char)
        (g$7320$1Bug2v core-prim . i/o-decoding-error?)
        (g$12228$1Bug2v core-prim . get-u8)
        (g$12227$1Bug2v core-prim . get-string-n!)
        (g$12226$1Bug2v core-prim . get-string-n)
        (g$12225$1Bug2v core-prim . get-string-all)
        (g$12224$1Bug2v core-prim . get-line)
        (g$12223$1Bug2v core-prim . get-datum)
        (g$12222$1Bug2v core-prim . get-char)
        (g$12221$1Bug2v core-prim . get-bytevector-some)
        (g$12220$1Bug2v core-prim . get-bytevector-n!)
        (g$12219$1Bug2v core-prim . get-bytevector-n)
        (g$12218$1Bug2v core-prim . get-bytevector-all)
        (g$12217$1Bug2v core-prim . flush-output-port)
        (g$12216$1Bug2v core-prim . close-port)
        (g$12215$1Bug2v core-prim . call-with-string-output-port)
        (g$12214$1Bug2v core-prim . call-with-port)
        (g$12213$1Bug2v core-prim . call-with-bytevector-output-port)
        (g$12212$1Bug2v core-prim . bytevector->string)
        (g$12211$1Bug2v core-prim . buffer-mode?)
        (g$12210$1Bug2v core-prim . binary-port?)
        (g$8804$1Bug2v core-prim . scheme-report-environment)
        (g$6804$1Bug2v core-prim . quotient)
        (g$8803$1Bug2v core-prim . null-environment)
        (g$6805$1Bug2v core-prim . remainder)
        (g$6806$1Bug2v core-prim . modulo)
        (g$12209$1Bug2v core-prim . inexact->exact)
        (g$6808$1Bug2v core-prim . force)
        (g$12208$1Bug2v core-prim . exact->inexact)
        (g$12207$1Bug2v core-prim . exit)
        (g$11774$1Bug2v core-prim . command-line)
        (g$12206$1Bug2v core-prim . string-fill!)
        (g$12205$1Bug2v core-prim . string-set!)
        (g$12204$1Bug2v core-prim . set-cdr!)
        (g$12203$1Bug2v core-prim . set-car!)
        (g$5824$1Bug2v core-prim . remove)
        (g$5825$1Bug2v core-prim . remv)
        (g$5807$1Bug2v core-prim . remp)
        (g$5826$1Bug2v core-prim . remq)
        (g$5806$1Bug2v core-prim . partition)
        (g$5814$1Bug2v core-prim . memv)
        (g$5813$1Bug2v core-prim . memq)
        (g$5816$1Bug2v core-prim . memp)
        (g$5815$1Bug2v core-prim . member)
        (g$5820$1Bug2v core-prim . exists)
        (g$5819$1Bug2v core-prim . for-all)
        (g$5823$1Bug2v core-prim . fold-right)
        (g$5822$1Bug2v core-prim . fold-left)
        (g$5805$1Bug2v core-prim . find)
        (g$5808$1Bug2v core-prim . filter)
        (g$5821$1Bug2v core-prim . cons*)
        (g$5810$1Bug2v core-prim . assv)
        (g$5809$1Bug2v core-prim . assq)
        (g$5812$1Bug2v core-prim . assp)
        (g$5811$1Bug2v core-prim . assoc)
        (g$12202$1Bug2v core-prim . with-exception-handler)
        (g$12201$1Bug2v core-prim . raise-continuable)
        (g$12200$1Bug2v core-prim . raise)
        (g$8806$1Bug2v core-prim . eval)
        (g$8802$1Bug2v core-prim . environment)
        (g$7424$1Bug2v core-prim . make-enumeration)
        (g$7431$1Bug2v core-prim . enum-set=?)
        (g$7425$1Bug2v core-prim . enum-set-universe)
        (g$7432$1Bug2v core-prim . enum-set-union)
        (g$7430$1Bug2v core-prim . enum-set-subset?)
        (g$7436$1Bug2v core-prim . enum-set-projection)
        (g$7429$1Bug2v core-prim . enum-set-member?)
        (g$7433$1Bug2v core-prim . enum-set-intersection)
        (g$7426$1Bug2v core-prim . enum-set-indexer)
        (g$7434$1Bug2v core-prim . enum-set-difference)
        (g$7427$1Bug2v core-prim . enum-set-constructor)
        (g$7435$1Bug2v core-prim . enum-set-complement)
        (g$7428$1Bug2v core-prim . enum-set->list)
        (g$6715$1Bug2v core-prim . who-condition?)
        (g$6626$1Bug2v core-prim . warning?)
        (g$6668$1Bug2v core-prim . violation?)
        (g$6792$1Bug2v core-prim . undefined-violation?)
        (g$6776$1Bug2v core-prim . syntax-violation?)
        (g$6778$1Bug2v core-prim . syntax-violation-subform)
        (g$6777$1Bug2v core-prim . syntax-violation-form)
        (g$8823$1Bug2v core-prim . syntax-violation)
        (g$12199$1Bug2v core-prim . simple-conditions)
        (g$6640$1Bug2v core-prim . serious-condition?)
        (g$6730$1Bug2v core-prim . non-continuable-violation?)
        (g$6611$1Bug2v core-prim . message-condition?)
        (g$6713$1Bug2v core-prim . make-who-condition)
        (g$6625$1Bug2v core-prim . make-warning)
        (g$6667$1Bug2v core-prim . make-violation)
        (g$6791$1Bug2v core-prim . make-undefined-violation)
        (g$6773$1Bug2v core-prim . make-syntax-violation)
        (g$6639$1Bug2v core-prim . make-serious-condition)
        (g$6729$1Bug2v core-prim . make-non-continuable-violation)
        (g$6609$1Bug2v core-prim . make-message-condition)
        (g$6757$1Bug2v core-prim . make-lexical-violation)
        (g$6696$1Bug2v core-prim . make-irritants-condition)
        (g$6743$1Bug2v core-prim . make-implementation-restriction-violation)
        (g$6653$1Bug2v core-prim . make-error)
        (g$6681$1Bug2v core-prim . make-assertion-violation)
        (g$6758$1Bug2v core-prim . lexical-violation?)
        (g$6698$1Bug2v core-prim . irritants-condition?)
        (g$6744$1Bug2v core-prim . implementation-restriction-violation?)
        (g$6654$1Bug2v core-prim . error?)
        (g$6716$1Bug2v core-prim . condition-who)
        (g$12198$1Bug2v core-prim . condition-predicate)
        (g$6612$1Bug2v core-prim . condition-message)
        (g$6699$1Bug2v core-prim . condition-irritants)
        (g$12197$1Bug2v core-prim . condition-accessor)
        (g$12196$1Bug2v core-prim . condition)
        (g$6682$1Bug2v core-prim . assertion-violation?)
        (g$12195$1Bug2v core-prim . condition?)
        (g$12194$1Bug2v core-prim . utf32->string)
        (g$12193$1Bug2v core-prim . utf16->string)
        (g$12192$1Bug2v core-prim . utf8->string)
        (g$12191$1Bug2v core-prim . uint-list->bytevector)
        (g$12190$1Bug2v core-prim . u8-list->bytevector)
        (g$12189$1Bug2v core-prim . string->utf8)
        (g$12188$1Bug2v core-prim . string->utf32)
        (g$12187$1Bug2v core-prim . string->utf16)
        (g$12186$1Bug2v core-prim . sint-list->bytevector)
        (g$6467$1Bug2v core-prim . native-endianness)
        (g$12185$1Bug2v core-prim . bytevector?)
        (g$12184$1Bug2v core-prim . bytevector=?)
        (g$12183$1Bug2v core-prim . bytevector-uint-set!)
        (g$12182$1Bug2v core-prim . bytevector-uint-ref)
        (g$12181$1Bug2v core-prim . bytevector-u8-set!)
        (g$12180$1Bug2v core-prim . bytevector-u8-ref)
        (g$6488$1Bug2v core-prim . bytevector-u64-set!)
        (g$6484$1Bug2v core-prim . bytevector-u64-ref)
        (g$6490$1Bug2v core-prim . bytevector-u64-native-set!)
        (g$6486$1Bug2v core-prim . bytevector-u64-native-ref)
        (g$6480$1Bug2v core-prim . bytevector-u32-set!)
        (g$6476$1Bug2v core-prim . bytevector-u32-ref)
        (g$6482$1Bug2v core-prim . bytevector-u32-native-set!)
        (g$6478$1Bug2v core-prim . bytevector-u32-native-ref)
        (g$6472$1Bug2v core-prim . bytevector-u16-set!)
        (g$6468$1Bug2v core-prim . bytevector-u16-ref)
        (g$6474$1Bug2v core-prim . bytevector-u16-native-set!)
        (g$6470$1Bug2v core-prim . bytevector-u16-native-ref)
        (g$12179$1Bug2v core-prim . bytevector-sint-set!)
        (g$12178$1Bug2v core-prim . bytevector-sint-ref)
        (g$12177$1Bug2v core-prim . bytevector-s8-set!)
        (g$12176$1Bug2v core-prim . bytevector-s8-ref)
        (g$6489$1Bug2v core-prim . bytevector-s64-set!)
        (g$6485$1Bug2v core-prim . bytevector-s64-ref)
        (g$6491$1Bug2v core-prim . bytevector-s64-native-set!)
        (g$6487$1Bug2v core-prim . bytevector-s64-native-ref)
        (g$6481$1Bug2v core-prim . bytevector-s32-set!)
        (g$6477$1Bug2v core-prim . bytevector-s32-ref)
        (g$6483$1Bug2v core-prim . bytevector-s32-native-set!)
        (g$6479$1Bug2v core-prim . bytevector-s32-native-ref)
        (g$6473$1Bug2v core-prim . bytevector-s16-set!)
        (g$6469$1Bug2v core-prim . bytevector-s16-ref)
        (g$6475$1Bug2v core-prim . bytevector-s16-native-set!)
        (g$6471$1Bug2v core-prim . bytevector-s16-native-ref)
        (g$12175$1Bug2v core-prim . bytevector-length)
        (g$12174$1Bug2v core-prim . bytevector-ieee-single-set!)
        (g$12173$1Bug2v core-prim . bytevector-ieee-single-ref)
        (g$6494$1Bug2v core-prim . bytevector-ieee-single-native-set!)
        (g$6492$1Bug2v core-prim . bytevector-ieee-single-native-ref)
        (g$12172$1Bug2v core-prim . bytevector-ieee-double-set!)
        (g$12171$1Bug2v core-prim . bytevector-ieee-double-ref)
        (g$6495$1Bug2v core-prim . bytevector-ieee-double-native-set!)
        (g$6493$1Bug2v core-prim . bytevector-ieee-double-native-ref)
        (g$12170$1Bug2v core-prim . bytevector-fill!)
        (g$12169$1Bug2v core-prim . bytevector-copy!)
        (g$12168$1Bug2v core-prim . bytevector-copy)
        (g$12167$1Bug2v core-prim . bytevector->uint-list)
        (g$12166$1Bug2v core-prim . bytevector->u8-list)
        (g$12165$1Bug2v core-prim . bytevector->sint-list)
        (g$7156$1Bug2v core-prim . no-nans-violation?)
        (g$7142$1Bug2v core-prim . no-infinities-violation?)
        (g$7155$1Bug2v core-prim . make-no-nans-violation)
        (g$7141$1Bug2v core-prim . make-no-infinities-violation)
        (g$12164$1Bug2v core-prim . real->flonum)
        (g$12163$1Bug2v core-prim . flzero?)
        (g$12162$1Bug2v core-prim . fltruncate)
        (g$12161$1Bug2v core-prim . fltan)
        (g$12160$1Bug2v core-prim . flsqrt)
        (g$12159$1Bug2v core-prim . flsin)
        (g$12158$1Bug2v core-prim . flround)
        (g$12157$1Bug2v core-prim . flpositive?)
        (g$12156$1Bug2v core-prim . flonum?)
        (g$12155$1Bug2v core-prim . flodd?)
        (g$12154$1Bug2v core-prim . flnumerator)
        (g$12153$1Bug2v core-prim . flnegative?)
        (g$12152$1Bug2v core-prim . flnan?)
        (g$12151$1Bug2v core-prim . flmod0)
        (g$12150$1Bug2v core-prim . flmod)
        (g$12149$1Bug2v core-prim . flmin)
        (g$12148$1Bug2v core-prim . flmax)
        (g$12147$1Bug2v core-prim . fllog)
        (g$12146$1Bug2v core-prim . flinteger?)
        (g$12145$1Bug2v core-prim . flinfinite?)
        (g$12144$1Bug2v core-prim . flfloor)
        (g$12143$1Bug2v core-prim . flfinite?)
        (g$12142$1Bug2v core-prim . flexpt)
        (g$12141$1Bug2v core-prim . flexp)
        (g$12140$1Bug2v core-prim . fleven?)
        (g$12139$1Bug2v core-prim . fldiv0-and-mod0)
        (g$12138$1Bug2v core-prim . fldiv0)
        (g$12137$1Bug2v core-prim . fldiv-and-mod)
        (g$12136$1Bug2v core-prim . fldiv)
        (g$12135$1Bug2v core-prim . fldenominator)
        (g$12134$1Bug2v core-prim . flcos)
        (g$12133$1Bug2v core-prim . flceiling)
        (g$12132$1Bug2v core-prim . flatan)
        (g$12131$1Bug2v core-prim . flasin)
        (g$12130$1Bug2v core-prim . flacos)
        (g$12129$1Bug2v core-prim . flabs)
        (g$12128$1Bug2v core-prim . fl>?)
        (g$12127$1Bug2v core-prim . fl>=?)
        (g$12126$1Bug2v core-prim . fl=?)
        (g$12125$1Bug2v core-prim . fl<?)
        (g$12124$1Bug2v core-prim . fl<=?)
        (g$12123$1Bug2v core-prim . fl/)
        (g$12122$1Bug2v core-prim . fl-)
        (g$12121$1Bug2v core-prim . fl+)
        (g$12120$1Bug2v core-prim . fl*)
        (g$12119$1Bug2v core-prim . fixnum->flonum)
        (g$12118$1Bug2v core-prim . fxzero?)
        (g$12117$1Bug2v core-prim . fxxor)
        (g$7087$1Bug2v core-prim . fxrotate-bit-field)
        (g$12116$1Bug2v core-prim . fxreverse-bit-field)
        (g$12115$1Bug2v core-prim . fxpositive?)
        (g$12114$1Bug2v core-prim . fxodd?)
        (g$12113$1Bug2v core-prim . fxnot)
        (g$12112$1Bug2v core-prim . fxnegative?)
        (g$12111$1Bug2v core-prim . fxmod0)
        (g$12110$1Bug2v core-prim . fxmod)
        (g$12109$1Bug2v core-prim . fxmin)
        (g$12108$1Bug2v core-prim . fxmax)
        (g$12107$1Bug2v core-prim . fxlength)
        (g$12106$1Bug2v core-prim . fxior)
        (g$7081$1Bug2v core-prim . fxif)
        (g$12105$1Bug2v core-prim . fxfirst-bit-set)
        (g$12104$1Bug2v core-prim . fxeven?)
        (g$12103$1Bug2v core-prim . fxdiv0-and-mod0)
        (g$12102$1Bug2v core-prim . fxdiv0)
        (g$12101$1Bug2v core-prim . fxdiv-and-mod)
        (g$12100$1Bug2v core-prim . fxdiv)
        (g$7084$1Bug2v core-prim . fxcopy-bit-field)
        (g$7082$1Bug2v core-prim . fxcopy-bit)
        (g$12099$1Bug2v core-prim . fxbit-set?)
        (g$7083$1Bug2v core-prim . fxbit-field)
        (g$12098$1Bug2v core-prim . fxbit-count)
        (g$7086$1Bug2v core-prim . fxarithmetic-shift-right)
        (g$7085$1Bug2v core-prim . fxarithmetic-shift-left)
        (g$12097$1Bug2v core-prim . fxarithmetic-shift)
        (g$12096$1Bug2v core-prim . fxand)
        (g$12095$1Bug2v core-prim . fx>?)
        (g$12094$1Bug2v core-prim . fx>=?)
        (g$12093$1Bug2v core-prim . fx=?)
        (g$12092$1Bug2v core-prim . fx<?)
        (g$12091$1Bug2v core-prim . fx<=?)
        (g$12090$1Bug2v core-prim . fx-/carry)
        (g$12089$1Bug2v core-prim . fx-)
        (g$12088$1Bug2v core-prim . fx+/carry)
        (g$12087$1Bug2v core-prim . fx+)
        (g$12086$1Bug2v core-prim . fx*/carry)
        (g$12085$1Bug2v core-prim . fx*)
        (g$12084$1Bug2v core-prim . greatest-fixnum)
        (g$12083$1Bug2v core-prim . least-fixnum)
        (g$12082$1Bug2v core-prim . fixnum-width)
        (g$12081$1Bug2v core-prim . fixnum?)
        (g$7039$1Bug2v core-prim . bitwise-rotate-bit-field)
        (g$12080$1Bug2v core-prim . bitwise-reverse-bit-field)
        (g$12079$1Bug2v core-prim . bitwise-length)
        (g$7033$1Bug2v core-prim . bitwise-if)
        (g$12078$1Bug2v core-prim . bitwise-first-bit-set)
        (g$7036$1Bug2v core-prim . bitwise-copy-bit-field)
        (g$7034$1Bug2v core-prim . bitwise-copy-bit)
        (g$12077$1Bug2v core-prim . bitwise-bit-set?)
        (g$12076$1Bug2v core-prim . bitwise-bit-field)
        (g$12075$1Bug2v core-prim . bitwise-bit-count)
        (g$12074$1Bug2v core-prim . bitwise-xor)
        (g$12073$1Bug2v core-prim . bitwise-ior)
        (g$12072$1Bug2v core-prim . bitwise-and)
        (g$12071$1Bug2v core-prim . bitwise-not)
        (g$7038$1Bug2v core-prim . bitwise-arithmetic-shift-right)
        (g$7037$1Bug2v core-prim . bitwise-arithmetic-shift-left)
        (g$12070$1Bug2v core-prim . bitwise-arithmetic-shift)
        (g$12069$1Bug2v core-prim . zero?)
        (g$12068$1Bug2v core-prim . vector?)
        (g$12067$1Bug2v core-prim . vector-set!)
        (g$12066$1Bug2v core-prim . vector-ref)
        (g$12065$1Bug2v core-prim . vector-map)
        (g$12064$1Bug2v core-prim . vector-length)
        (g$12063$1Bug2v core-prim . vector-for-each)
        (g$12062$1Bug2v core-prim . vector-fill!)
        (g$12061$1Bug2v core-prim . vector->list)
        (g$12060$1Bug2v core-prim . vector)
        (g$12059$1Bug2v core-prim . values)
        (g$12058$1Bug2v core-prim . truncate)
        (g$12057$1Bug2v core-prim . tan)
        (g$12056$1Bug2v core-prim . symbol?)
        (g$5976$1Bug2v core-prim . symbol=?)
        (g$12055$1Bug2v core-prim . symbol->string)
        (g$12054$1Bug2v core-prim . substring)
        (g$12053$1Bug2v core-prim . string?)
        (g$5973$1Bug2v core-prim . string>?)
        (g$5975$1Bug2v core-prim . string>=?)
        (g$5971$1Bug2v core-prim . string=?)
        (g$5972$1Bug2v core-prim . string<?)
        (g$5974$1Bug2v core-prim . string<=?)
        (g$12052$1Bug2v core-prim . string-ref)
        (g$12051$1Bug2v core-prim . string-length)
        (g$12050$1Bug2v core-prim . string-for-each)
        (g$12049$1Bug2v core-prim . string-copy)
        (g$12048$1Bug2v core-prim . string-append)
        (g$12047$1Bug2v core-prim . string->symbol)
        (g$12046$1Bug2v core-prim . string->number)
        (g$12045$1Bug2v core-prim . string->list)
        (g$12044$1Bug2v core-prim . string)
        (g$12043$1Bug2v core-prim . sqrt)
        (g$12042$1Bug2v core-prim . sin)
        (g$12041$1Bug2v core-prim . round)
        (g$12040$1Bug2v core-prim . reverse)
        (g$12039$1Bug2v core-prim . real?)
        (g$12038$1Bug2v core-prim . real-valued?)
        (g$12037$1Bug2v core-prim . real-part)
        (g$6017$1Bug2v core-prim . rationalize)
        (g$12036$1Bug2v core-prim . rational?)
        (g$12035$1Bug2v core-prim . rational-valued?)
        (g$12034$1Bug2v core-prim . procedure?)
        (g$12033$1Bug2v core-prim . positive?)
        (g$12032$1Bug2v core-prim . pair?)
        (g$12031$1Bug2v core-prim . odd?)
        (g$12030$1Bug2v core-prim . numerator)
        (g$12029$1Bug2v core-prim . number?)
        (g$12028$1Bug2v core-prim . number->string)
        (g$12027$1Bug2v core-prim . null?)
        (g$12026$1Bug2v core-prim . not)
        (g$12025$1Bug2v core-prim . negative?)
        (g$12024$1Bug2v core-prim . nan?)
        (g$12023$1Bug2v core-prim . min)
        (g$12022$1Bug2v core-prim . max)
        (g$12021$1Bug2v core-prim . map)
        (g$12020$1Bug2v core-prim . make-vector)
        (g$12019$1Bug2v core-prim . make-string)
        (g$12018$1Bug2v core-prim . make-rectangular)
        (g$12017$1Bug2v core-prim . make-polar)
        (g$12016$1Bug2v core-prim . magnitude)
        (g$12015$1Bug2v core-prim . log)
        (g$12014$1Bug2v core-prim . list?)
        (g$12013$1Bug2v core-prim . list-tail)
        (g$12012$1Bug2v core-prim . list-ref)
        (g$12011$1Bug2v core-prim . list->vector)
        (g$12010$1Bug2v core-prim . list->string)
        (g$12009$1Bug2v core-prim . list)
        (g$12008$1Bug2v core-prim . length)
        (g$12007$1Bug2v core-prim . lcm)
        (g$12006$1Bug2v core-prim . integer?)
        (g$12005$1Bug2v core-prim . integer-valued?)
        (g$12004$1Bug2v core-prim . integer->char)
        (g$12003$1Bug2v core-prim . infinite?)
        (g$12002$1Bug2v core-prim . inexact?)
        (g$12001$1Bug2v core-prim . inexact)
        (g$12000$1Bug2v core-prim . imag-part)
        (g$11999$1Bug2v core-prim . gcd)
        (g$11998$1Bug2v core-prim . for-each)
        (g$11997$1Bug2v core-prim . floor)
        (g$11996$1Bug2v core-prim . finite?)
        (g$11995$1Bug2v core-prim . expt)
        (g$11994$1Bug2v core-prim . exp)
        (g$11993$1Bug2v core-prim . exact?)
        (g$11992$1Bug2v core-prim . exact-integer-sqrt)
        (g$11991$1Bug2v core-prim . exact)
        (g$11990$1Bug2v core-prim . even?)
        (g$11989$1Bug2v core-prim . error)
        (g$11988$1Bug2v core-prim . eqv?)
        (g$11987$1Bug2v core-prim . equal?)
        (g$11986$1Bug2v core-prim . eq?)
        (g$11985$1Bug2v core-prim . dynamic-wind)
        (g$11984$1Bug2v core-prim . div0-and-mod0)
        (g$11983$1Bug2v core-prim . mod0)
        (g$11982$1Bug2v core-prim . div0)
        (g$11981$1Bug2v core-prim . div-and-mod)
        (g$11980$1Bug2v core-prim . mod)
        (g$11979$1Bug2v core-prim . div)
        (g$11978$1Bug2v core-prim . denominator)
        (g$11977$1Bug2v core-prim . cos)
        (g$11976$1Bug2v core-prim . cons)
        (g$11975$1Bug2v core-prim . complex?)
        (g$11974$1Bug2v core-prim . char?)
        (g$6014$1Bug2v core-prim . char>?)
        (g$6016$1Bug2v core-prim . char>=?)
        (g$6012$1Bug2v core-prim . char=?)
        (g$6013$1Bug2v core-prim . char<?)
        (g$6015$1Bug2v core-prim . char<=?)
        (g$11973$1Bug2v core-prim . char->integer)
        (g$11972$1Bug2v core-prim . ceiling)
        (g$11971$1Bug2v core-prim . call-with-values)
        (g$11970$1Bug2v core-prim . call/cc)
        (g$11969$1Bug2v core-prim . call-with-current-continuation)
        (g$5936$1Bug2v core-prim . cddddr)
        (g$5935$1Bug2v core-prim . cdddar)
        (g$5934$1Bug2v core-prim . cddadr)
        (g$5933$1Bug2v core-prim . cddaar)
        (g$5932$1Bug2v core-prim . cdaddr)
        (g$5931$1Bug2v core-prim . cdadar)
        (g$5930$1Bug2v core-prim . cdaadr)
        (g$5929$1Bug2v core-prim . cdaaar)
        (g$5928$1Bug2v core-prim . cadddr)
        (g$5927$1Bug2v core-prim . caddar)
        (g$5926$1Bug2v core-prim . cadadr)
        (g$5925$1Bug2v core-prim . cadaar)
        (g$5924$1Bug2v core-prim . caaddr)
        (g$5923$1Bug2v core-prim . caadar)
        (g$5922$1Bug2v core-prim . caaadr)
        (g$5921$1Bug2v core-prim . caaaar)
        (g$5920$1Bug2v core-prim . cdddr)
        (g$5919$1Bug2v core-prim . cddar)
        (g$5918$1Bug2v core-prim . cdadr)
        (g$5917$1Bug2v core-prim . cdaar)
        (g$5916$1Bug2v core-prim . caddr)
        (g$5915$1Bug2v core-prim . cadar)
        (g$5914$1Bug2v core-prim . caadr)
        (g$5913$1Bug2v core-prim . caaar)
        (g$5912$1Bug2v core-prim . cddr)
        (g$5911$1Bug2v core-prim . cdar)
        (g$5910$1Bug2v core-prim . cadr)
        (g$5909$1Bug2v core-prim . caar)
        (g$11968$1Bug2v core-prim . cdr)
        (g$11967$1Bug2v core-prim . car)
        (g$11966$1Bug2v core-prim . boolean?)
        (g$5977$1Bug2v core-prim . boolean=?)
        (g$11965$1Bug2v core-prim . atan)
        (g$11964$1Bug2v core-prim . assertion-violation)
        (g$11963$1Bug2v core-prim . asin)
        (g$11962$1Bug2v core-prim . apply)
        (g$11961$1Bug2v core-prim . append)
        (g$11960$1Bug2v core-prim . angle)
        (g$11959$1Bug2v core-prim . acos)
        (g$11958$1Bug2v core-prim . abs)
        (g$11957$1Bug2v core-prim . /)
        (g$11956$1Bug2v core-prim . *)
        (g$11955$1Bug2v core-prim . -)
        (g$11954$1Bug2v core-prim . +)
        (g$11953$1Bug2v core-prim . >=)
        (g$11952$1Bug2v core-prim . >)
        (g$11951$1Bug2v core-prim . =)
        (g$11950$1Bug2v core-prim . <=)
        (g$11949$1Bug2v core-prim . <)
        (g$11948$1Bug2v core-prim . make-record-printer)
        (g$11947$1Bug2v core-prim . eqv-hash)
        (g$11946$1Bug2v core-prim . eq-hash)
        (g$11945$1Bug2v core-prim . reverse!)
        (g$11944$1Bug2v core-prim . deserialize-port)
        (g$11943$1Bug2v core-prim . serialize-port)
        (g$7399$1Bug2v core-prim . enum-set?)
        (g$6807$1Bug2v core-prim . make-promise)
        (g$11776$1Bug2v core-prim . load/args)
        (g$7509$1Bug2v core-prim . printf)
        (g$7510$1Bug2v core-prim . fprintf)
        (g$7511$1Bug2v core-prim . format)
        (g$11942$1Bug2v core-prim . procedure-form)
        (g$11941$1Bug2v core-prim . procedure-environment)
        (g$11940$1Bug2v core-prim . procedure-name)
        (g$11939$1Bug2v core-prim . procedure-arity)
        (g$11938$1Bug2v core-prim . gc-collect)
        (g$11937$1Bug2v core-prim . clr-type?)
        (g$11936$1Bug2v core-prim . get-clr-type)
        (g$11935$1Bug2v core-prim . get-command-line)
        (g$11934$1Bug2v core-prim . vector-append)
        (g$11933$1Bug2v core-prim . vector-filter)
        (g$11932$1Bug2v core-prim . vector-reverse!)
        (g$11931$1Bug2v core-prim . vector-contains?)
        (g$11930$1Bug2v core-prim . vector-index-of)
        (g$11929$1Bug2v core-prim . vector-copy)
        (g$11928$1Bug2v core-prim . vector-binary-search)
        (g$11927$1Bug2v core-prim . get-output-string)
        (g$11926$1Bug2v core-prim . open-output-string)
        (g$11925$1Bug2v core-prim . open-input-string)
        (g$11924$1Bug2v core-prim . string-ci-compare)
        (g$11923$1Bug2v core-prim . string-compare)
        (g$11922$1Bug2v core-prim . string-format)
        (g$11773$1Bug2v core-prim . trace-printer)
        (g$11921$1Bug2v core-prim . make-traced-procedure)
        (g$7531$1Bug2v core-prim . make-traced-macro)
        (g$8819$1Bug2v core-prim . assertion-error)
        (g$11920$1Bug2v core-prim . pmap)
        (g$11919$1Bug2v core-prim . time-it)
        (g$7536$1Bug2v core-prim . make-parameter)
        (g$11918$1Bug2v core-prim . library-locator)
        (g$11917$1Bug2v core-prim . get-library-paths)
        (g$8798$1Bug2v core-prim . environment-bindings)
        (g$8801$1Bug2v core-prim . environment-symbols)
        (g$8797$1Bug2v core-prim . interaction-environment-symbols)
        (g$11916$1Bug2v core-prim . optimization-level)
        (g$7966$1Bug2v core-prim . library-path)
        (g$11915$1Bug2v $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$11914$1Bug2v $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$11913$1Bug2v $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$11912$1Bug2v $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$11911$1Bug2v $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$11910$1Bug2v
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$11909$1Bug2v
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$11908$1Bug2v
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$11907$1Bug2v
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$11906$1Bug2v $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$11905$1Bug2v
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$11904$1Bug2v $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$11903$1Bug2v $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$11902$1Bug2v $core-rtd &i/o-rtd &i/o-rcd)
        (g$11901$1Bug2v $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11900$1Bug2v $core-rtd &undefined-rtd &undefined-rcd)
        (g$11899$1Bug2v $core-rtd &syntax-rtd &syntax-rcd)
        (g$11898$1Bug2v $core-rtd &lexical-rtd &lexical-rcd)
        (g$11897$1Bug2v
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$11896$1Bug2v $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$11895$1Bug2v $core-rtd &who-rtd &who-rcd)
        (g$11894$1Bug2v $core-rtd &irritants-rtd &irritants-rcd)
        (g$11893$1Bug2v $core-rtd &assertion-rtd &assertion-rcd)
        (g$11892$1Bug2v $core-rtd &violation-rtd &violation-rcd)
        (g$11891$1Bug2v $core-rtd &error-rtd &error-rcd)
        (g$11890$1Bug2v $core-rtd &serious-rtd &serious-rcd)
        (g$11889$1Bug2v $core-rtd &warning-rtd &warning-rcd)
        (g$11888$1Bug2v $core-rtd &message-rtd &message-rcd)
        (g$11887$1Bug2v $core-rtd &condition-rtd &condition-rcd)
        (g$11886$1Bug2v macro . define-condition-type)
        (g$11885$1Bug2v macro . define-enumeration)
        (g$11884$1Bug2v macro . define-record-type)
        (g$11883$1Bug2v macro . parent-rtd)
        (g$11882$1Bug2v macro . nongenerative)
        (g$11881$1Bug2v macro . opaque)
        (g$11880$1Bug2v macro . sealed)
        (g$11879$1Bug2v macro . protocol)
        (g$11878$1Bug2v macro . parent)
        (g$11877$1Bug2v macro . immutable)
        (g$11876$1Bug2v macro . mutable)
        (g$11875$1Bug2v macro . fields)
        (g$11874$1Bug2v macro . error-handling-mode)
        (g$11873$1Bug2v macro . file-options)
        (g$11872$1Bug2v macro . buffer-mode)
        (g$11871$1Bug2v macro . eol-style)
        (g$11870$1Bug2v macro . guard)
        (g$11869$1Bug2v macro . trace-letrec-syntax)
        (g$11868$1Bug2v macro . trace-let-syntax)
        (g$11867$1Bug2v macro . trace-define-syntax)
        (g$11866$1Bug2v macro . trace-define)
        (g$11865$1Bug2v macro . trace-lambda)
        (g$11864$1Bug2v macro . unsyntax-splicing)
        (g$11863$1Bug2v macro . unsyntax)
        (g$11862$1Bug2v macro . unquote-splicing)
        (g$11861$1Bug2v macro . unquote)
        (g$11860$1Bug2v macro . _)
        (g$11859$1Bug2v macro . else)
        (g$11858$1Bug2v macro . =>)
        (g$11857$1Bug2v macro . ...)
        (g$11856$1Bug2v macro . assert)
        (g$11855$1Bug2v macro . endianness)
        (g$11854$1Bug2v macro . delay)
        (g$11853$1Bug2v macro . time)
        (g$11852$1Bug2v macro . or)
        (g$11851$1Bug2v macro . and)
        (g$11850$1Bug2v macro . do)
        (g$11849$1Bug2v macro . cond)
        (g$11848$1Bug2v macro . let*)
        (g$11847$1Bug2v macro . let)
        (g$11846$1Bug2v macro . identifier-syntax)
        (g$11845$1Bug2v macro . with-syntax)
        (g$11844$1Bug2v macro . quasisyntax)
        (g$11843$1Bug2v macro . quasiquote)
        (g$11842$1Bug2v macro . syntax-rules)
        (g$11841$1Bug2v macro . include-into)
        (g$11840$1Bug2v macro . include)
        (g$11839$1Bug2v macro . define-struct)
        (g$11838$1Bug2v macro . let-values)
        (g$11837$1Bug2v macro . let*-values)
        (g$11836$1Bug2v core-macro . record-constructor-descriptor)
        (g$11835$1Bug2v core-macro . record-type-descriptor)
        (g$11834$1Bug2v core-macro . fluid-let-syntax)
        (g$11833$1Bug2v macro . case)
        (g$11832$1Bug2v macro . parameterize)
        (g$11831$1Bug2v macro . unless)
        (g$11830$1Bug2v macro . when)
        (g$11829$1Bug2v core-macro . if)
        (g$11828$1Bug2v core-macro . letrec*)
        (g$11827$1Bug2v core-macro . letrec)
        (g$11826$1Bug2v core-macro . type-descriptor)
        (g$11825$1Bug2v core-macro . case-lambda)
        (g$11824$1Bug2v core-macro . lambda)
        (g$11823$1Bug2v core-macro . syntax)
        (g$11822$1Bug2v core-macro . syntax-case)
        (g$11821$1Bug2v core-macro . quote)
        (g$11820$1Bug2v core-macro . foreign-call)
        (g$11819$1Bug2v letrec-syntax)
        (g$11818$1Bug2v let-syntax)
        (g$11817$1Bug2v set!)
        (g$11816$1Bug2v export)
        (g$11815$1Bug2v import)
        (g$11814$1Bug2v library)
        (g$11813$1Bug2v begin)
        (g$11812$1Bug2v module)
        (g$11811$1Bug2v define-syntax)
        (g$11810$1Bug2v define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7067$1Bug2v
      'g$12469$1Bug2v
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12348$1Bug2v)
        (eval-core . g$12347$1Bug2v)
        (set-symbol-value! . g$12346$1Bug2v)
        (symbol-value . g$12345$1Bug2v)
        (gensym . g$12343$1Bug2v)
        (void . g$12342$1Bug2v))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$11111$1Bug2v
     g$trace-printer$11151$1Bug2v
     (g$make-parameter$6522$1Bug2v write))
   (g$command-line$11112$1Bug2v
     g$command-line$11152$1Bug2v
     (g$make-parameter$6522$1Bug2v (get-command-line)))
   (g$local-library-path$11113$1Bug2v
     g$local-library-path$11153$1Bug2v
     (case-lambda
       ((g$filename$11124$1Bug2v)
        (cons
          (g$get-directory-name$5419$1Bug2v g$filename$11124$1Bug2v)
          (g$library-path$7051$1Bug2v)))))
   (g$load/args$11114$1Bug2v
     g$load/args$11154$1Bug2v
     (case-lambda
       ((g$filename$11125$1Bug2v . g$args$11126$1Bug2v)
        (begin
          (apply
            g$load-r6rs-top-level$11121$1Bug2v
            g$filename$11125$1Bug2v
            'load
            g$args$11126$1Bug2v)
          (void)))))
   (g$load$11115$1Bug2v
     g$load$11155$1Bug2v
     (case-lambda
       ((g$filename$11127$1Bug2v)
        (begin
          (apply
            g$load-r6rs-top-level$11121$1Bug2v
            g$filename$11127$1Bug2v
            'load
            (cdr (g$command-line$11112$1Bug2v)))
          (void)))))
   (g$ironscheme-build$11116$1Bug2v
     g$ironscheme-build$11156$1Bug2v
     (case-lambda (() (g$load$11115$1Bug2v '"ironscheme-buildscript.ss"))))
   (g$eval-top-level$11117$1Bug2v
     g$eval-top-level$11157$1Bug2v
     (case-lambda
       ((g$x$11128$1Bug2v)
        (g$eval$11086$1Bug2v
          g$x$11128$1Bug2v
          (g$interaction-environment$11109$1Bug2v)))))
   (g$compile-system-libraries$11118$1Bug2v
     g$compile-system-libraries$11158$1Bug2v
     (case-lambda
       (()
        (g$eval-top-level$11117$1Bug2v
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$11119$1Bug2v
     g$compile$11159$1Bug2v
     (case-lambda
       ((g$filename$11129$1Bug2v)
        (g$load-r6rs-top-level$11121$1Bug2v g$filename$11129$1Bug2v 'compile))))
   (g$compile->closure$11120$1Bug2v
     g$compile->closure$11160$1Bug2v
     (case-lambda
       ((g$filename$11130$1Bug2v)
        (g$load-r6rs-top-level$11121$1Bug2v g$filename$11130$1Bug2v 'closure))))
   (g$load-r6rs-top-level$11121$1Bug2v
     g$load-r6rs-top-level$11161$1Bug2v
     (case-lambda
       ((g$filename$11131$1Bug2v g$how$11132$1Bug2v . g$args$11133$1Bug2v)
        ((case-lambda
           ((g$library-path$11136$1Bug2v g$library-path$11137$1Bug2v)
            ((case-lambda
               ((g$swap$11138$1Bug2v)
                (dynamic-wind
                  g$swap$11138$1Bug2v
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$11139$1Bug2v)
                         ((case-lambda
                            ((g$t$11140$1Bug2v)
                             (if (g$memv$4955$1Bug2v
                                   g$t$11140$1Bug2v
                                   '(closure))
                               (g$pre-compile-r6rs-top-level$11108$1Bug2v
                                 g$x*$11139$1Bug2v)
                               (if (g$memv$4955$1Bug2v g$t$11140$1Bug2v '(load))
                                 ((case-lambda
                                    ((g$command-line$11143$1Bug2v
                                       g$command-line$11144$1Bug2v)
                                     ((case-lambda
                                        ((g$swap$11145$1Bug2v)
                                         (dynamic-wind
                                           g$swap$11145$1Bug2v
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$11107$1Bug2v
                                                 g$x*$11139$1Bug2v))))
                                           g$swap$11145$1Bug2v)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$11146$1Bug2v)
                                             (begin
                                               (g$command-line$11143$1Bug2v
                                                 g$command-line$11144$1Bug2v)
                                               (set! g$command-line$11144$1Bug2v
                                                 g$t$11146$1Bug2v))))
                                          (g$command-line$11143$1Bug2v)))))))
                                  g$command-line$11112$1Bug2v
                                  (cons
                                    g$filename$11131$1Bug2v
                                    (map (case-lambda
                                           ((g$x$11147$1Bug2v)
                                            (g$format$6437$1Bug2v
                                              '"~a"
                                              g$x$11147$1Bug2v)))
                                         g$args$11133$1Bug2v)))
                                 (if (g$memv$4955$1Bug2v
                                       g$t$11140$1Bug2v
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$11107$1Bug2v
                                       g$x*$11139$1Bug2v)
                                     (g$serialize-all$7055$1Bug2v
                                       serialize-library
                                       g$compile-core-expr$6769$1Bug2v))
                                   (if '#f '#f (void)))))))
                          g$how$11132$1Bug2v)))
                      (g$with-input-from-file$6265$1Bug2v
                        g$filename$11131$1Bug2v
                        (case-lambda
                          (()
                           ((letrec ((g$f$11148$1Bug2v
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$11149$1Bug2v)
                                              (if (eof-object? g$x$11149$1Bug2v)
                                                '()
                                                (cons
                                                  g$x$11149$1Bug2v
                                                  (g$f$11148$1Bug2v)))))
                                           (read-annotated))))))
                              g$f$11148$1Bug2v))))))))
                  g$swap$11138$1Bug2v)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$11150$1Bug2v)
                    (begin
                      (g$library-path$11136$1Bug2v g$library-path$11137$1Bug2v)
                      (set! g$library-path$11137$1Bug2v g$t$11150$1Bug2v))))
                 (g$library-path$11136$1Bug2v)))))))
         g$library-path$7051$1Bug2v
         (g$local-library-path$11113$1Bug2v g$filename$11131$1Bug2v)))))
   (g$fo$11122$1Bug2v
     g$fo$11162$1Bug2v
     (g$make-enumeration$6399$1Bug2v '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7056$1Bug2v
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$11123$1Bug2v)
         (if (g$serious-condition?$5681$1Bug2v g$ex$11123$1Bug2v)
           (raise g$ex$11123$1Bug2v)
           (begin (display g$ex$11123$1Bug2v) (newline))))))
    (set-symbol-value! 'load g$load$11115$1Bug2v)
    (set-symbol-value! 'compile g$compile$11119$1Bug2v)
    (set-symbol-value! 'compile->closure g$compile->closure$11120$1Bug2v)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$11117$1Bug2v)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$11077$1Bug2v)
    (set-symbol-value! 'expanded2core g$expanded->core$6768$1Bug2v)
    (set-symbol-value! 'trace-printer g$trace-printer$11111$1Bug2v)
    (g$file-options-constructor$6523$1Bug2v
      (g$enum-set-constructor$6402$1Bug2v g$fo$11122$1Bug2v))
    (g$library-path$7051$1Bug2v (get-library-paths))))

