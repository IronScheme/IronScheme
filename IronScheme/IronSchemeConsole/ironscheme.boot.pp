;;; Copyright (c) 2006, 2007 Abdulaziz Ghuloum and Kent Dybvig
;;; Copyright (c) 2007, 2008 Llewellyn Pritchard
;;; automatically generated from psyntax & ironscheme sources
;;; for copyright details, see psyntax/main.ss

(library-letrec* (psyntax config) () (void))

(library-letrec* (ironscheme lists)
  ((g$list-tail$4993$sFNhI
     g$list-tail$5137$sFNhI
     (case-lambda
       ((g$lst$5021$sFNhI g$index$5022$sFNhI)
        (if ((case-lambda
               ((g$t$5023$sFNhI)
                (if g$t$5023$sFNhI
                  g$t$5023$sFNhI
                  (begin '#f (g$negative?$5682$sFNhI g$index$5022$sFNhI)))))
             (null? g$lst$5021$sFNhI))
          (assertion-violation
            'list-tail
            '"index out of range"
            g$lst$5021$sFNhI
            g$index$5022$sFNhI)
          (if (g$zero?$5683$sFNhI g$index$5022$sFNhI)
            g$lst$5021$sFNhI
            (g$list-tail$4993$sFNhI
              (cdr g$lst$5021$sFNhI)
              (- g$index$5022$sFNhI '1)))))))
   (g$list-ref$4994$sFNhI
     g$list-ref$5138$sFNhI
     (case-lambda
       ((g$lst$5024$sFNhI g$index$5025$sFNhI)
        (car (g$list-tail$4993$sFNhI g$lst$5024$sFNhI g$index$5025$sFNhI)))))
   (g$last-pair$4995$sFNhI
     g$last-pair$5139$sFNhI
     (case-lambda
       ((g$lst$5026$sFNhI)
        (if (null? g$lst$5026$sFNhI)
          g$lst$5026$sFNhI
          (if (null? (cdr g$lst$5026$sFNhI))
            g$lst$5026$sFNhI
            (g$last-pair$4995$sFNhI (cdr g$lst$5026$sFNhI)))))))
   (g$make-list$4996$sFNhI
     g$make-list$5140$sFNhI
     (case-lambda
       ((g$n$5027$sFNhI) (vector->list (make-vector g$n$5027$sFNhI)))
       ((g$n$5028$sFNhI g$fill$5029$sFNhI)
        (vector->list (make-vector g$n$5028$sFNhI g$fill$5029$sFNhI)))))
   (g$find$4997$sFNhI
     g$find$5141$sFNhI
     (case-lambda
       ((g$proc$5030$sFNhI g$l$5031$sFNhI)
        (if (null? g$l$5031$sFNhI)
          '#f
          ((case-lambda
             ((g$e$5032$sFNhI g$r$5033$sFNhI g$proc$5034$sFNhI)
              (if (g$proc$5034$sFNhI g$e$5032$sFNhI)
                g$e$5032$sFNhI
                (g$find$4997$sFNhI g$proc$5034$sFNhI g$r$5033$sFNhI))))
           (car g$l$5031$sFNhI)
           (cdr g$l$5031$sFNhI)
           g$proc$5030$sFNhI)))))
   (g$partition$4998$sFNhI
     g$partition$5142$sFNhI
     (case-lambda
       ((g$proc$5035$sFNhI g$l$5036$sFNhI)
        ((letrec ((g$f$5037$sFNhI
                    (case-lambda
                      ((g$l$5038$sFNhI g$a$5039$sFNhI g$b$5040$sFNhI)
                       (if (null? g$l$5038$sFNhI)
                         (values
                           (reverse! g$a$5039$sFNhI)
                           (reverse! g$b$5040$sFNhI))
                         ((case-lambda
                            ((g$e$5041$sFNhI)
                             (if (g$proc$5035$sFNhI g$e$5041$sFNhI)
                               (g$f$5037$sFNhI
                                 (cdr g$l$5038$sFNhI)
                                 (cons g$e$5041$sFNhI g$a$5039$sFNhI)
                                 g$b$5040$sFNhI)
                               (g$f$5037$sFNhI
                                 (cdr g$l$5038$sFNhI)
                                 g$a$5039$sFNhI
                                 (cons g$e$5041$sFNhI g$b$5040$sFNhI)))))
                          (car g$l$5038$sFNhI)))))))
           g$f$5037$sFNhI)
         g$l$5036$sFNhI
         '()
         '()))))
   (g$remp$4999$sFNhI
     g$remp$5143$sFNhI
     (case-lambda
       ((g$proc$5042$sFNhI g$l$5043$sFNhI)
        ((letrec ((g$f$5044$sFNhI
                    (case-lambda
                      ((g$l$5045$sFNhI g$a$5046$sFNhI)
                       (if (null? g$l$5045$sFNhI)
                         (reverse! g$a$5046$sFNhI)
                         ((case-lambda
                            ((g$e$5047$sFNhI)
                             (if (g$proc$5042$sFNhI g$e$5047$sFNhI)
                               (g$f$5044$sFNhI
                                 (cdr g$l$5045$sFNhI)
                                 g$a$5046$sFNhI)
                               (g$f$5044$sFNhI
                                 (cdr g$l$5045$sFNhI)
                                 (cons g$e$5047$sFNhI g$a$5046$sFNhI)))))
                          (car g$l$5045$sFNhI)))))))
           g$f$5044$sFNhI)
         g$l$5043$sFNhI
         '()))))
   (g$filter$5000$sFNhI
     g$filter$5144$sFNhI
     (case-lambda
       ((g$proc$5048$sFNhI g$l$5049$sFNhI)
        ((letrec ((g$f$5050$sFNhI
                    (case-lambda
                      ((g$l$5051$sFNhI g$a$5052$sFNhI)
                       (if (null? g$l$5051$sFNhI)
                         (reverse! g$a$5052$sFNhI)
                         ((case-lambda
                            ((g$e$5053$sFNhI)
                             (if (g$proc$5048$sFNhI g$e$5053$sFNhI)
                               (g$f$5050$sFNhI
                                 (cdr g$l$5051$sFNhI)
                                 (cons g$e$5053$sFNhI g$a$5052$sFNhI))
                               (g$f$5050$sFNhI
                                 (cdr g$l$5051$sFNhI)
                                 g$a$5052$sFNhI))))
                          (car g$l$5051$sFNhI)))))))
           g$f$5050$sFNhI)
         g$l$5049$sFNhI
         '()))))
   (g$assq$5001$sFNhI
     g$assq$5145$sFNhI
     (case-lambda
       ((g$obj$5054$sFNhI g$lst$5055$sFNhI)
        (if (null? g$lst$5055$sFNhI)
          '#f
          ((case-lambda
             ((g$obj$5056$sFNhI g$t$5057$sFNhI g$r$5058$sFNhI)
              (if (eq? g$obj$5056$sFNhI (car g$t$5057$sFNhI))
                g$t$5057$sFNhI
                (g$assq$5001$sFNhI g$obj$5056$sFNhI g$r$5058$sFNhI))))
           g$obj$5054$sFNhI
           (car g$lst$5055$sFNhI)
           (cdr g$lst$5055$sFNhI))))))
   (g$assv$5002$sFNhI
     g$assv$5146$sFNhI
     (case-lambda
       ((g$obj$5059$sFNhI g$lst$5060$sFNhI)
        (if (null? g$lst$5060$sFNhI)
          '#f
          ((case-lambda
             ((g$obj$5061$sFNhI g$t$5062$sFNhI g$r$5063$sFNhI)
              (if (eqv? g$obj$5061$sFNhI (car g$t$5062$sFNhI))
                g$t$5062$sFNhI
                (g$assv$5002$sFNhI g$obj$5061$sFNhI g$r$5063$sFNhI))))
           g$obj$5059$sFNhI
           (car g$lst$5060$sFNhI)
           (cdr g$lst$5060$sFNhI))))))
   (g$assoc$5003$sFNhI
     g$assoc$5147$sFNhI
     (case-lambda
       ((g$obj$5064$sFNhI g$lst$5065$sFNhI)
        (if (null? g$lst$5065$sFNhI)
          '#f
          ((case-lambda
             ((g$obj$5066$sFNhI g$t$5067$sFNhI g$r$5068$sFNhI)
              (if (equal? g$obj$5066$sFNhI (car g$t$5067$sFNhI))
                g$t$5067$sFNhI
                (g$assoc$5003$sFNhI g$obj$5066$sFNhI g$r$5068$sFNhI))))
           g$obj$5064$sFNhI
           (car g$lst$5065$sFNhI)
           (cdr g$lst$5065$sFNhI))))))
   (g$assp$5004$sFNhI
     g$assp$5148$sFNhI
     (case-lambda
       ((g$p?$5069$sFNhI g$lst$5070$sFNhI)
        (if (null? g$lst$5070$sFNhI)
          '#f
          ((case-lambda
             ((g$p?$5071$sFNhI g$t$5072$sFNhI g$r$5073$sFNhI)
              (if (g$p?$5071$sFNhI (car g$t$5072$sFNhI))
                g$t$5072$sFNhI
                (g$assp$5004$sFNhI g$p?$5071$sFNhI g$r$5073$sFNhI))))
           g$p?$5069$sFNhI
           (car g$lst$5070$sFNhI)
           (cdr g$lst$5070$sFNhI))))))
   (g$memq$5005$sFNhI
     g$memq$5149$sFNhI
     (case-lambda
       ((g$obj$5074$sFNhI g$lst$5075$sFNhI)
        (if (null? g$lst$5075$sFNhI)
          '#f
          (if (eq? g$obj$5074$sFNhI (car g$lst$5075$sFNhI))
            g$lst$5075$sFNhI
            (g$memq$5005$sFNhI g$obj$5074$sFNhI (cdr g$lst$5075$sFNhI)))))))
   (g$memv$5006$sFNhI
     g$memv$5150$sFNhI
     (case-lambda
       ((g$obj$5076$sFNhI g$lst$5077$sFNhI)
        (if (null? g$lst$5077$sFNhI)
          '#f
          (if (eqv? g$obj$5076$sFNhI (car g$lst$5077$sFNhI))
            g$lst$5077$sFNhI
            (g$memv$5006$sFNhI g$obj$5076$sFNhI (cdr g$lst$5077$sFNhI)))))))
   (g$member$5007$sFNhI
     g$member$5151$sFNhI
     (case-lambda
       ((g$obj$5078$sFNhI g$lst$5079$sFNhI)
        (if (null? g$lst$5079$sFNhI)
          '#f
          (if (equal? g$obj$5078$sFNhI (car g$lst$5079$sFNhI))
            g$lst$5079$sFNhI
            (g$member$5007$sFNhI g$obj$5078$sFNhI (cdr g$lst$5079$sFNhI)))))))
   (g$memp$5008$sFNhI
     g$memp$5152$sFNhI
     (case-lambda
       ((g$p?$5080$sFNhI g$lst$5081$sFNhI)
        (if (null? g$lst$5081$sFNhI)
          '#f
          (if (g$p?$5080$sFNhI (car g$lst$5081$sFNhI))
            g$lst$5081$sFNhI
            (g$memp$5008$sFNhI g$p?$5080$sFNhI (cdr g$lst$5081$sFNhI)))))))
   (g$all-empty?$5009$sFNhI
     g$all-empty?$5153$sFNhI
     (case-lambda
       ((g$ls$5082$sFNhI)
        ((case-lambda
           ((g$t$5083$sFNhI)
            (if g$t$5083$sFNhI
              g$t$5083$sFNhI
              (begin
                '#f
                (if (null? (car g$ls$5082$sFNhI))
                  (begin '#f (g$all-empty?$5009$sFNhI (cdr g$ls$5082$sFNhI)))
                  '#f)))))
         (null? g$ls$5082$sFNhI)))))
   (g$split$5010$sFNhI
     g$split$5154$sFNhI
     (case-lambda
       ((g$ls$5084$sFNhI)
        (if (null? g$ls$5084$sFNhI)
          (values '() '())
          (call-with-values
            (case-lambda (() (g$split$5010$sFNhI (cdr g$ls$5084$sFNhI))))
            (case-lambda
              ((g$cars$5085$sFNhI g$cdrs$5086$sFNhI)
               ((case-lambda
                  ((g$a$5087$sFNhI)
                   (values
                     (cons (car g$a$5087$sFNhI) g$cars$5085$sFNhI)
                     (cons (cdr g$a$5087$sFNhI) g$cdrs$5086$sFNhI))))
                (car g$ls$5084$sFNhI)))))))))
   (g$for-all$5011$sFNhI
     g$for-all$5155$sFNhI
     (case-lambda
       ((g$f$5088$sFNhI g$arg1$5089$sFNhI . g$args$5090$sFNhI)
        ((case-lambda
           ((g$args$5091$sFNhI)
            (if (g$all-empty?$5009$sFNhI g$args$5091$sFNhI)
              '#t
              (call-with-values
                (case-lambda (() (g$split$5010$sFNhI g$args$5091$sFNhI)))
                (case-lambda
                  ((g$cars$5092$sFNhI g$cdrs$5093$sFNhI)
                   (if (g$all-empty?$5009$sFNhI g$cdrs$5093$sFNhI)
                     (apply g$f$5088$sFNhI g$cars$5092$sFNhI)
                     (if (apply g$f$5088$sFNhI g$cars$5092$sFNhI)
                       (begin
                         '#f
                         (apply
                           g$for-all$5011$sFNhI
                           g$f$5088$sFNhI
                           g$cdrs$5093$sFNhI))
                       '#f))))))))
         (cons g$arg1$5089$sFNhI g$args$5090$sFNhI)))))
   (g$exists$5012$sFNhI
     g$exists$5156$sFNhI
     (case-lambda
       ((g$f$5094$sFNhI g$arg1$5095$sFNhI . g$args$5096$sFNhI)
        ((case-lambda
           ((g$args$5097$sFNhI)
            (if (g$all-empty?$5009$sFNhI g$args$5097$sFNhI)
              '#f
              (call-with-values
                (case-lambda (() (g$split$5010$sFNhI g$args$5097$sFNhI)))
                (case-lambda
                  ((g$cars$5098$sFNhI g$cdrs$5099$sFNhI)
                   ((case-lambda
                      ((g$t$5100$sFNhI)
                       (if g$t$5100$sFNhI
                         g$t$5100$sFNhI
                         (begin
                           '#f
                           (apply
                             g$exists$5012$sFNhI
                             g$f$5094$sFNhI
                             g$cdrs$5099$sFNhI)))))
                    (apply g$f$5094$sFNhI g$cars$5098$sFNhI))))))))
         (cons g$arg1$5095$sFNhI g$args$5096$sFNhI)))))
   (g$map$5013$sFNhI
     g$map$5157$sFNhI
     (case-lambda
       ((g$proc$5101$sFNhI g$list1$5102$sFNhI . g$lists$5103$sFNhI)
        ((letrec ((g$f$5104$sFNhI
                    (case-lambda
                      ((g$lists$5105$sFNhI g$a$5106$sFNhI)
                       (if (g$all-empty?$5009$sFNhI g$lists$5105$sFNhI)
                         (reverse! g$a$5106$sFNhI)
                         (call-with-values
                           (case-lambda
                             (() (g$split$5010$sFNhI g$lists$5105$sFNhI)))
                           (case-lambda
                             ((g$cars$5107$sFNhI g$cdrs$5108$sFNhI)
                              (g$f$5104$sFNhI
                                g$cdrs$5108$sFNhI
                                (cons
                                  (apply g$proc$5101$sFNhI g$cars$5107$sFNhI)
                                  g$a$5106$sFNhI))))))))))
           g$f$5104$sFNhI)
         (cons g$list1$5102$sFNhI g$lists$5103$sFNhI)
         '()))))
   (g$for-each$5014$sFNhI
     g$for-each$5158$sFNhI
     (case-lambda
       ((g$f$5109$sFNhI g$arg1$5110$sFNhI . g$args$5111$sFNhI)
        ((case-lambda
           ((g$args$5112$sFNhI)
            (if (not (g$all-empty?$5009$sFNhI g$args$5112$sFNhI))
              (call-with-values
                (case-lambda (() (g$split$5010$sFNhI g$args$5112$sFNhI)))
                (case-lambda
                  ((g$cars$5113$sFNhI g$cdrs$5114$sFNhI)
                   (begin
                     (apply g$f$5109$sFNhI g$cars$5113$sFNhI)
                     (apply
                       g$for-each$5014$sFNhI
                       g$f$5109$sFNhI
                       g$cdrs$5114$sFNhI)))))
              (void))))
         (cons g$arg1$5110$sFNhI g$args$5111$sFNhI)))))
   (g$cons*$5015$sFNhI
     g$cons*$5159$sFNhI
     (case-lambda
       ((g$a$5115$sFNhI . g$rest$5116$sFNhI)
        ((letrec ((g$f$5117$sFNhI
                    (case-lambda
                      ((g$a$5118$sFNhI g$rest$5119$sFNhI)
                       (if (null? g$rest$5119$sFNhI)
                         g$a$5118$sFNhI
                         (cons
                           g$a$5118$sFNhI
                           (g$f$5117$sFNhI
                             (car g$rest$5119$sFNhI)
                             (cdr g$rest$5119$sFNhI))))))))
           g$f$5117$sFNhI)
         g$a$5115$sFNhI
         g$rest$5116$sFNhI))))
   (g$fold-left$5016$sFNhI
     g$fold-left$5160$sFNhI
     (case-lambda
       ((g$combine$5120$sFNhI
          g$nil$5121$sFNhI
          g$list1$5122$sFNhI
          .
          g$lists$5123$sFNhI)
        (if (null? g$list1$5122$sFNhI)
          g$nil$5121$sFNhI
          (apply
            g$fold-left$5016$sFNhI
            (g$cons*$5015$sFNhI
              g$combine$5120$sFNhI
              (apply
                g$combine$5120$sFNhI
                (g$cons*$5015$sFNhI
                  g$nil$5121$sFNhI
                  (car g$list1$5122$sFNhI)
                  (g$map$5013$sFNhI car g$lists$5123$sFNhI)))
              (cdr g$list1$5122$sFNhI)
              (g$map$5013$sFNhI cdr g$lists$5123$sFNhI)))))))
   (g$fold-right$5017$sFNhI
     g$fold-right$5161$sFNhI
     (case-lambda
       ((g$combine$5124$sFNhI
          g$nil$5125$sFNhI
          g$list1$5126$sFNhI
          .
          g$lists$5127$sFNhI)
        (if (null? g$list1$5126$sFNhI)
          g$nil$5125$sFNhI
          (apply
            g$combine$5124$sFNhI
            (append
              (list (car g$list1$5126$sFNhI))
              (g$map$5013$sFNhI car g$lists$5127$sFNhI)
              (list
                (apply
                  g$fold-right$5017$sFNhI
                  (g$cons*$5015$sFNhI
                    g$combine$5124$sFNhI
                    g$nil$5125$sFNhI
                    (cdr g$list1$5126$sFNhI)
                    (g$map$5013$sFNhI cdr g$lists$5127$sFNhI))))))))))
   (g$remove$5018$sFNhI
     g$remove$5162$sFNhI
     (case-lambda
       ((g$obj$5128$sFNhI g$list$5129$sFNhI)
        (g$remp$4999$sFNhI
          (case-lambda
            ((g$x$5130$sFNhI) (equal? g$obj$5128$sFNhI g$x$5130$sFNhI)))
          g$list$5129$sFNhI))))
   (g$remv$5019$sFNhI
     g$remv$5163$sFNhI
     (case-lambda
       ((g$obj$5131$sFNhI g$list$5132$sFNhI)
        (g$remp$4999$sFNhI
          (case-lambda
            ((g$x$5133$sFNhI) (eqv? g$obj$5131$sFNhI g$x$5133$sFNhI)))
          g$list$5132$sFNhI))))
   (g$remq$5020$sFNhI
     g$remq$5164$sFNhI
     (case-lambda
       ((g$obj$5134$sFNhI g$list$5135$sFNhI)
        (g$remp$4999$sFNhI
          (case-lambda ((g$x$5136$sFNhI) (eq? g$obj$5134$sFNhI g$x$5136$sFNhI)))
          g$list$5135$sFNhI)))))
  (void))

(library-letrec* (ironscheme base)
  ((g$div$5352$sFNhI
     g$div$5636$sFNhI
     (case-lambda
       ((g$x1$5436$sFNhI g$x2$5437$sFNhI)
        (call-with-values
          (case-lambda (() (div-and-mod g$x1$5436$sFNhI g$x2$5437$sFNhI)))
          (case-lambda
            ((g$n$5440$sFNhI g$d$5441$sFNhI)
             ((case-lambda ((g$d$5442$sFNhI g$n$5443$sFNhI) g$n$5443$sFNhI))
              g$d$5441$sFNhI
              g$n$5440$sFNhI)))))))
   (g$div0$5353$sFNhI
     g$div0$5637$sFNhI
     (case-lambda
       ((g$x1$5444$sFNhI g$x2$5445$sFNhI)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$x1$5444$sFNhI g$x2$5445$sFNhI)))
          (case-lambda
            ((g$n$5448$sFNhI g$d$5449$sFNhI)
             ((case-lambda ((g$d$5450$sFNhI g$n$5451$sFNhI) g$n$5451$sFNhI))
              g$d$5449$sFNhI
              g$n$5448$sFNhI)))))))
   (g$mod$5354$sFNhI
     g$mod$5638$sFNhI
     (case-lambda
       ((g$x1$5452$sFNhI g$x2$5453$sFNhI)
        (call-with-values
          (case-lambda (() (div-and-mod g$x1$5452$sFNhI g$x2$5453$sFNhI)))
          (case-lambda
            ((g$n$5456$sFNhI g$d$5457$sFNhI)
             ((case-lambda ((g$d$5458$sFNhI g$n$5459$sFNhI) g$d$5458$sFNhI))
              g$d$5457$sFNhI
              g$n$5456$sFNhI)))))))
   (g$mod0$5355$sFNhI
     g$mod0$5639$sFNhI
     (case-lambda
       ((g$x1$5460$sFNhI g$x2$5461$sFNhI)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$x1$5460$sFNhI g$x2$5461$sFNhI)))
          (case-lambda
            ((g$n$5464$sFNhI g$d$5465$sFNhI)
             ((case-lambda ((g$d$5466$sFNhI g$n$5467$sFNhI) g$d$5466$sFNhI))
              g$d$5465$sFNhI
              g$n$5464$sFNhI)))))))
   (g$list->vector$5356$sFNhI
     g$list->vector$5640$sFNhI
     (case-lambda ((g$lst$5468$sFNhI) (apply vector g$lst$5468$sFNhI))))
   (g$list->string$5357$sFNhI
     g$list->string$5641$sFNhI
     (case-lambda ((g$lst$5469$sFNhI) (apply string g$lst$5469$sFNhI))))
   (g$char?$5358$sFNhI
     g$char?$5642$sFNhI
     (case-lambda
       ((g$obj$5470$sFNhI) (clr-is-internal 'system.char g$obj$5470$sFNhI))))
   (g$vector?$5359$sFNhI
     g$vector?$5643$sFNhI
     (case-lambda
       ((g$obj$5471$sFNhI)
        (clr-is-internal 'system.object[] g$obj$5471$sFNhI))))
   (g$bytevector?$5360$sFNhI
     g$bytevector?$5644$sFNhI
     (case-lambda
       ((g$obj$5472$sFNhI) (clr-is-internal 'system.byte[] g$obj$5472$sFNhI))))
   (g$symbol?$5361$sFNhI
     g$symbol?$5645$sFNhI
     (case-lambda
       ((g$obj$5473$sFNhI)
        (clr-is-internal 'microsoft.scripting.symbolid g$obj$5473$sFNhI))))
   (g$boolean?$5362$sFNhI
     g$boolean?$5646$sFNhI
     (case-lambda
       ((g$obj$5474$sFNhI) (clr-is-internal 'system.boolean g$obj$5474$sFNhI))))
   (g$procedure?$5363$sFNhI
     g$procedure?$5647$sFNhI
     (case-lambda
       ((g$obj$5475$sFNhI)
        (clr-is-internal 'ironscheme.runtime.icallable g$obj$5475$sFNhI))))
   (g$fixnum?$5364$sFNhI
     g$fixnum?$5648$sFNhI
     (case-lambda
       ((g$obj$5476$sFNhI) (clr-is-internal 'system.int32 g$obj$5476$sFNhI))))
   (g$flonum?$5365$sFNhI
     g$flonum?$5649$sFNhI
     (case-lambda
       ((g$obj$5477$sFNhI) (clr-is-internal 'system.double g$obj$5477$sFNhI))))
   (g$fixnum-width$5366$sFNhI
     g$fixnum-width$5650$sFNhI
     (case-lambda (() '32)))
   (g$vector-fill!$5367$sFNhI
     g$vector-fill!$5651$sFNhI
     (case-lambda
       ((g$vec$5478$sFNhI g$val$5479$sFNhI)
        ((case-lambda
           ((g$len$5480$sFNhI)
            (letrec ((g$loop$5481$sFNhI
                       (case-lambda
                         ((g$i$5482$sFNhI)
                          (if (fx=? g$i$5482$sFNhI g$len$5480$sFNhI)
                            (if '#f '#f (void))
                            (begin
                              (vector-set!
                                g$vec$5478$sFNhI
                                g$i$5482$sFNhI
                                g$val$5479$sFNhI)
                              (g$loop$5481$sFNhI (fx+ g$i$5482$sFNhI '1))))))))
              (g$loop$5481$sFNhI '0))))
         (vector-length g$vec$5478$sFNhI)))))
   (g$reverse$5368$sFNhI
     g$reverse$5652$sFNhI
     (case-lambda
       ((g$lst$5483$sFNhI)
        (g$fold-left$5160$sFNhI
          (case-lambda
            ((g$x$5484$sFNhI g$y$5485$sFNhI)
             (cons g$y$5485$sFNhI g$x$5484$sFNhI)))
          '()
          g$lst$5483$sFNhI))))
   (g$caar$5369$sFNhI
     g$caar$5653$sFNhI
     (case-lambda ((g$x$5486$sFNhI) (car (car g$x$5486$sFNhI)))))
   (g$cadr$5370$sFNhI
     g$cadr$5654$sFNhI
     (case-lambda ((g$x$5487$sFNhI) (car (cdr g$x$5487$sFNhI)))))
   (g$cdar$5371$sFNhI
     g$cdar$5655$sFNhI
     (case-lambda ((g$x$5488$sFNhI) (cdr (car g$x$5488$sFNhI)))))
   (g$cddr$5372$sFNhI
     g$cddr$5656$sFNhI
     (case-lambda ((g$x$5489$sFNhI) (cdr (cdr g$x$5489$sFNhI)))))
   (g$caaar$5373$sFNhI
     g$caaar$5657$sFNhI
     (case-lambda
       ((g$x$5490$sFNhI) (g$caar$5369$sFNhI (car g$x$5490$sFNhI)))))
   (g$caadr$5374$sFNhI
     g$caadr$5658$sFNhI
     (case-lambda
       ((g$x$5491$sFNhI) (g$caar$5369$sFNhI (cdr g$x$5491$sFNhI)))))
   (g$cadar$5375$sFNhI
     g$cadar$5659$sFNhI
     (case-lambda
       ((g$x$5492$sFNhI) (g$cadr$5370$sFNhI (car g$x$5492$sFNhI)))))
   (g$caddr$5376$sFNhI
     g$caddr$5660$sFNhI
     (case-lambda
       ((g$x$5493$sFNhI) (g$cadr$5370$sFNhI (cdr g$x$5493$sFNhI)))))
   (g$cdaar$5377$sFNhI
     g$cdaar$5661$sFNhI
     (case-lambda
       ((g$x$5494$sFNhI) (g$cdar$5371$sFNhI (car g$x$5494$sFNhI)))))
   (g$cdadr$5378$sFNhI
     g$cdadr$5662$sFNhI
     (case-lambda
       ((g$x$5495$sFNhI) (g$cdar$5371$sFNhI (cdr g$x$5495$sFNhI)))))
   (g$cddar$5379$sFNhI
     g$cddar$5663$sFNhI
     (case-lambda
       ((g$x$5496$sFNhI) (g$cddr$5372$sFNhI (car g$x$5496$sFNhI)))))
   (g$cdddr$5380$sFNhI
     g$cdddr$5664$sFNhI
     (case-lambda
       ((g$x$5497$sFNhI) (g$cddr$5372$sFNhI (cdr g$x$5497$sFNhI)))))
   (g$caaaar$5381$sFNhI
     g$caaaar$5665$sFNhI
     (case-lambda
       ((g$x$5498$sFNhI) (g$caaar$5373$sFNhI (car g$x$5498$sFNhI)))))
   (g$caaadr$5382$sFNhI
     g$caaadr$5666$sFNhI
     (case-lambda
       ((g$x$5499$sFNhI) (g$caaar$5373$sFNhI (cdr g$x$5499$sFNhI)))))
   (g$caadar$5383$sFNhI
     g$caadar$5667$sFNhI
     (case-lambda
       ((g$x$5500$sFNhI) (g$caadr$5374$sFNhI (car g$x$5500$sFNhI)))))
   (g$caaddr$5384$sFNhI
     g$caaddr$5668$sFNhI
     (case-lambda
       ((g$x$5501$sFNhI) (g$caadr$5374$sFNhI (cdr g$x$5501$sFNhI)))))
   (g$cadaar$5385$sFNhI
     g$cadaar$5669$sFNhI
     (case-lambda
       ((g$x$5502$sFNhI) (g$cadar$5375$sFNhI (car g$x$5502$sFNhI)))))
   (g$cadadr$5386$sFNhI
     g$cadadr$5670$sFNhI
     (case-lambda
       ((g$x$5503$sFNhI) (g$cadar$5375$sFNhI (cdr g$x$5503$sFNhI)))))
   (g$caddar$5387$sFNhI
     g$caddar$5671$sFNhI
     (case-lambda
       ((g$x$5504$sFNhI) (g$caddr$5376$sFNhI (car g$x$5504$sFNhI)))))
   (g$cadddr$5388$sFNhI
     g$cadddr$5672$sFNhI
     (case-lambda
       ((g$x$5505$sFNhI) (g$caddr$5376$sFNhI (cdr g$x$5505$sFNhI)))))
   (g$cdaaar$5389$sFNhI
     g$cdaaar$5673$sFNhI
     (case-lambda
       ((g$x$5506$sFNhI) (g$cdaar$5377$sFNhI (car g$x$5506$sFNhI)))))
   (g$cdaadr$5390$sFNhI
     g$cdaadr$5674$sFNhI
     (case-lambda
       ((g$x$5507$sFNhI) (g$cdaar$5377$sFNhI (cdr g$x$5507$sFNhI)))))
   (g$cdadar$5391$sFNhI
     g$cdadar$5675$sFNhI
     (case-lambda
       ((g$x$5508$sFNhI) (g$cdadr$5378$sFNhI (car g$x$5508$sFNhI)))))
   (g$cdaddr$5392$sFNhI
     g$cdaddr$5676$sFNhI
     (case-lambda
       ((g$x$5509$sFNhI) (g$cdadr$5378$sFNhI (cdr g$x$5509$sFNhI)))))
   (g$cddaar$5393$sFNhI
     g$cddaar$5677$sFNhI
     (case-lambda
       ((g$x$5510$sFNhI) (g$cddar$5379$sFNhI (car g$x$5510$sFNhI)))))
   (g$cddadr$5394$sFNhI
     g$cddadr$5678$sFNhI
     (case-lambda
       ((g$x$5511$sFNhI) (g$cddar$5379$sFNhI (cdr g$x$5511$sFNhI)))))
   (g$cdddar$5395$sFNhI
     g$cdddar$5679$sFNhI
     (case-lambda
       ((g$x$5512$sFNhI) (g$cdddr$5380$sFNhI (car g$x$5512$sFNhI)))))
   (g$cddddr$5396$sFNhI
     g$cddddr$5680$sFNhI
     (case-lambda
       ((g$x$5513$sFNhI) (g$cdddr$5380$sFNhI (cdr g$x$5513$sFNhI)))))
   (g$positive?$5397$sFNhI
     g$positive?$5681$sFNhI
     (case-lambda
       ((g$r$5514$sFNhI)
        (begin
          (if (not (real-valued? g$r$5514$sFNhI))
            (assertion-violation 'positive? '"not a real" g$r$5514$sFNhI)
            (void))
          (< '0 g$r$5514$sFNhI)))))
   (g$negative?$5398$sFNhI
     g$negative?$5682$sFNhI
     (case-lambda
       ((g$r$5515$sFNhI)
        (begin
          (if (not (real-valued? g$r$5515$sFNhI))
            (assertion-violation 'negative? '"not a real" g$r$5515$sFNhI)
            (void))
          (> '0 g$r$5515$sFNhI)))))
   (g$zero?$5399$sFNhI
     g$zero?$5683$sFNhI
     (case-lambda
       ((g$r$5516$sFNhI)
        (begin
          (if (not (real-valued? g$r$5516$sFNhI))
            (assertion-violation 'zero? '"not a real" g$r$5516$sFNhI)
            (void))
          (= '0 g$r$5516$sFNhI)))))
   (g$even?$5400$sFNhI
     g$even?$5684$sFNhI
     (case-lambda
       ((g$n$5517$sFNhI)
        (begin
          (if (not (integer-valued? g$n$5517$sFNhI))
            (assertion-violation 'even? '"not a integer" g$n$5517$sFNhI)
            (void))
          (= '0 (g$mod$5354$sFNhI g$n$5517$sFNhI '2))))))
   (g$odd?$5401$sFNhI
     g$odd?$5685$sFNhI
     (case-lambda
       ((g$n$5518$sFNhI)
        (begin
          (if (not (integer-valued? g$n$5518$sFNhI))
            (assertion-violation 'odd? '"not a integer" g$n$5518$sFNhI)
            (void))
          (= '1 (g$mod$5354$sFNhI g$n$5518$sFNhI '2))))))
   (g$max$5402$sFNhI
     g$max$5686$sFNhI
     (case-lambda
       ((g$a$5519$sFNhI . g$rest$5520$sFNhI)
        (g$fold-left$5160$sFNhI
          (case-lambda
            ((g$a$5521$sFNhI g$b$5522$sFNhI)
             ((case-lambda
                ((g$r$5523$sFNhI)
                 (if ((case-lambda
                        ((g$t$5524$sFNhI)
                         (if g$t$5524$sFNhI
                           g$t$5524$sFNhI
                           (begin '#f (inexact? g$b$5522$sFNhI)))))
                      (inexact? g$a$5521$sFNhI))
                   (inexact g$r$5523$sFNhI)
                   g$r$5523$sFNhI)))
              (if (< g$a$5521$sFNhI g$b$5522$sFNhI)
                g$b$5522$sFNhI
                g$a$5521$sFNhI))))
          g$a$5519$sFNhI
          g$rest$5520$sFNhI))))
   (g$min$5403$sFNhI
     g$min$5687$sFNhI
     (case-lambda
       ((g$a$5525$sFNhI . g$rest$5526$sFNhI)
        (g$fold-left$5160$sFNhI
          (case-lambda
            ((g$a$5527$sFNhI g$b$5528$sFNhI)
             ((case-lambda
                ((g$r$5529$sFNhI)
                 (if ((case-lambda
                        ((g$t$5530$sFNhI)
                         (if g$t$5530$sFNhI
                           g$t$5530$sFNhI
                           (begin '#f (inexact? g$b$5528$sFNhI)))))
                      (inexact? g$a$5527$sFNhI))
                   (inexact g$r$5529$sFNhI)
                   g$r$5529$sFNhI)))
              (if (> g$a$5527$sFNhI g$b$5528$sFNhI)
                g$b$5528$sFNhI
                g$a$5527$sFNhI))))
          g$a$5525$sFNhI
          g$rest$5526$sFNhI))))
   (g$gcd$5404$sFNhI
     g$gcd$5688$sFNhI
     (case-lambda
       (g$nums$5531$sFNhI
        ((case-lambda
           ((g$t$5532$sFNhI)
            (if (g$memv$5150$sFNhI g$t$5532$sFNhI '(0))
              '0
              (if (g$memv$5150$sFNhI g$t$5532$sFNhI '(1))
                ((case-lambda
                   ((g$n$5533$sFNhI)
                    (begin
                      (if (not (integer-valued? g$n$5533$sFNhI))
                        (assertion-violation
                          'gcd
                          '"not an integer"
                          g$n$5533$sFNhI)
                        (void))
                      (abs g$n$5533$sFNhI))))
                 (car g$nums$5531$sFNhI))
                (if (g$memv$5150$sFNhI g$t$5532$sFNhI '(2))
                  ((case-lambda
                     ((g$a$5534$sFNhI g$b$5535$sFNhI)
                      (begin
                        (if (not (integer-valued? g$a$5534$sFNhI))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$a$5534$sFNhI)
                          (void))
                        (if (not (integer-valued? g$b$5535$sFNhI))
                          (assertion-violation
                            'gcd
                            '"not an integer"
                            g$b$5535$sFNhI)
                          (void))
                        (if (g$zero?$5399$sFNhI g$b$5535$sFNhI)
                          (abs g$a$5534$sFNhI)
                          (abs (g$gcd$5404$sFNhI
                                 g$b$5535$sFNhI
                                 (g$mod$5354$sFNhI
                                   g$a$5534$sFNhI
                                   g$b$5535$sFNhI)))))))
                   (car g$nums$5531$sFNhI)
                   (g$cadr$5370$sFNhI g$nums$5531$sFNhI))
                  (g$fold-left$5160$sFNhI
                    g$gcd$5404$sFNhI
                    (abs (car g$nums$5531$sFNhI))
                    (cdr g$nums$5531$sFNhI)))))))
         (length g$nums$5531$sFNhI)))))
   (g$lcm$5405$sFNhI
     g$lcm$5689$sFNhI
     (case-lambda
       (g$nums$5536$sFNhI
        ((case-lambda
           ((g$t$5537$sFNhI)
            (if (g$memv$5150$sFNhI g$t$5537$sFNhI '(0))
              '1
              (if (g$memv$5150$sFNhI g$t$5537$sFNhI '(1))
                ((case-lambda
                   ((g$n$5538$sFNhI)
                    (begin
                      (if (not (integer-valued? g$n$5538$sFNhI))
                        (assertion-violation
                          'lcm
                          '"not an integer"
                          g$n$5538$sFNhI)
                        (void))
                      (abs g$n$5538$sFNhI))))
                 (car g$nums$5536$sFNhI))
                (if (g$memv$5150$sFNhI g$t$5537$sFNhI '(2))
                  ((case-lambda
                     ((g$a$5539$sFNhI g$b$5540$sFNhI)
                      (begin
                        (if (not (integer-valued? g$a$5539$sFNhI))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$a$5539$sFNhI)
                          (void))
                        (if (not (integer-valued? g$b$5540$sFNhI))
                          (assertion-violation
                            'lcm
                            '"not an integer"
                            g$b$5540$sFNhI)
                          (void))
                        (if ((case-lambda
                               ((g$t$5541$sFNhI)
                                (if g$t$5541$sFNhI
                                  g$t$5541$sFNhI
                                  (begin
                                    '#f
                                    (g$zero?$5399$sFNhI g$b$5540$sFNhI)))))
                             (g$zero?$5399$sFNhI g$a$5539$sFNhI))
                          '0
                          (abs (* (/ g$a$5539$sFNhI
                                     (g$gcd$5404$sFNhI
                                       g$a$5539$sFNhI
                                       g$b$5540$sFNhI))
                                  g$b$5540$sFNhI))))))
                   (car g$nums$5536$sFNhI)
                   (g$cadr$5370$sFNhI g$nums$5536$sFNhI))
                  (g$fold-left$5160$sFNhI
                    g$lcm$5405$sFNhI
                    (abs (car g$nums$5536$sFNhI))
                    (cdr g$nums$5536$sFNhI)))))))
         (length g$nums$5536$sFNhI)))))
   (g$string=?$5412$sFNhI
     g$string=?$5690$sFNhI
     (case-lambda
       ((g$a$5542$sFNhI g$b$5543$sFNhI . g$rest$5544$sFNhI)
        (begin
          (if (not (string? g$a$5542$sFNhI))
            (assertion-violation 'string=? '"not a string" g$a$5542$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5545$sFNhI)
               (begin
                 (if (not (string? g$x$5545$sFNhI))
                   (assertion-violation
                     'string=?
                     '"not a string"
                     g$x$5545$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5546$sFNhI)
                     (begin
                       (set! g$a$5542$sFNhI g$x$5545$sFNhI)
                       g$r$5546$sFNhI)))
                  (fx=? (string-compare g$a$5542$sFNhI g$x$5545$sFNhI) '0)))))
            (cons g$b$5543$sFNhI g$rest$5544$sFNhI))))))
   (g$string<?$5413$sFNhI
     g$string<?$5691$sFNhI
     (case-lambda
       ((g$a$5547$sFNhI g$b$5548$sFNhI . g$rest$5549$sFNhI)
        (begin
          (if (not (string? g$a$5547$sFNhI))
            (assertion-violation 'string<? '"not a string" g$a$5547$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5550$sFNhI)
               (begin
                 (if (not (string? g$x$5550$sFNhI))
                   (assertion-violation
                     'string<?
                     '"not a string"
                     g$x$5550$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5551$sFNhI)
                     (begin
                       (set! g$a$5547$sFNhI g$x$5550$sFNhI)
                       g$r$5551$sFNhI)))
                  (fx<? (string-compare g$a$5547$sFNhI g$x$5550$sFNhI) '0)))))
            (cons g$b$5548$sFNhI g$rest$5549$sFNhI))))))
   (g$string>?$5414$sFNhI
     g$string>?$5692$sFNhI
     (case-lambda
       ((g$a$5552$sFNhI g$b$5553$sFNhI . g$rest$5554$sFNhI)
        (begin
          (if (not (string? g$a$5552$sFNhI))
            (assertion-violation 'string>? '"not a string" g$a$5552$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5555$sFNhI)
               (begin
                 (if (not (string? g$x$5555$sFNhI))
                   (assertion-violation
                     'string>?
                     '"not a string"
                     g$x$5555$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5556$sFNhI)
                     (begin
                       (set! g$a$5552$sFNhI g$x$5555$sFNhI)
                       g$r$5556$sFNhI)))
                  (fx>? (string-compare g$a$5552$sFNhI g$x$5555$sFNhI) '0)))))
            (cons g$b$5553$sFNhI g$rest$5554$sFNhI))))))
   (g$string<=?$5415$sFNhI
     g$string<=?$5693$sFNhI
     (case-lambda
       ((g$a$5557$sFNhI g$b$5558$sFNhI . g$rest$5559$sFNhI)
        (begin
          (if (not (string? g$a$5557$sFNhI))
            (assertion-violation 'string<=? '"not a string" g$a$5557$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5560$sFNhI)
               (begin
                 (if (not (string? g$x$5560$sFNhI))
                   (assertion-violation
                     'string<=?
                     '"not a string"
                     g$x$5560$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5561$sFNhI)
                     (begin
                       (set! g$a$5557$sFNhI g$x$5560$sFNhI)
                       g$r$5561$sFNhI)))
                  (fx<=? (string-compare g$a$5557$sFNhI g$x$5560$sFNhI) '0)))))
            (cons g$b$5558$sFNhI g$rest$5559$sFNhI))))))
   (g$string>=?$5416$sFNhI
     g$string>=?$5694$sFNhI
     (case-lambda
       ((g$a$5562$sFNhI g$b$5563$sFNhI . g$rest$5564$sFNhI)
        (begin
          (if (not (string? g$a$5562$sFNhI))
            (assertion-violation 'string>=? '"not a string" g$a$5562$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5565$sFNhI)
               (begin
                 (if (not (string? g$x$5565$sFNhI))
                   (assertion-violation
                     'string>=?
                     '"not a string"
                     g$x$5565$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5566$sFNhI)
                     (begin
                       (set! g$a$5562$sFNhI g$x$5565$sFNhI)
                       g$r$5566$sFNhI)))
                  (fx>=? (string-compare g$a$5562$sFNhI g$x$5565$sFNhI) '0)))))
            (cons g$b$5563$sFNhI g$rest$5564$sFNhI))))))
   (g$symbol=?$5417$sFNhI
     g$symbol=?$5695$sFNhI
     (case-lambda
       ((g$a$5567$sFNhI g$b$5568$sFNhI . g$rest$5569$sFNhI)
        (begin
          (if (not (g$symbol?$5361$sFNhI g$a$5567$sFNhI))
            (assertion-violation 'symbol=? '"not a symbol" g$a$5567$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5570$sFNhI)
               (begin
                 (if (not (g$symbol?$5361$sFNhI g$x$5570$sFNhI))
                   (assertion-violation
                     'symbol=?
                     '"not a symbol"
                     g$x$5570$sFNhI)
                   (void))
                 (eq? g$a$5567$sFNhI g$x$5570$sFNhI))))
            (cons g$b$5568$sFNhI g$rest$5569$sFNhI))))))
   (g$boolean=?$5418$sFNhI
     g$boolean=?$5696$sFNhI
     (case-lambda
       ((g$a$5571$sFNhI g$b$5572$sFNhI . g$rest$5573$sFNhI)
        (begin
          (if (not (g$boolean?$5362$sFNhI g$a$5571$sFNhI))
            (assertion-violation 'boolean=? '"not a boolean" g$a$5571$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5574$sFNhI)
               (begin
                 (if (not (g$boolean?$5362$sFNhI g$x$5574$sFNhI))
                   (assertion-violation
                     'boolean=?
                     '"not a boolean"
                     g$x$5574$sFNhI)
                   (void))
                 (eq? g$a$5571$sFNhI g$x$5574$sFNhI))))
            (cons g$b$5572$sFNhI g$rest$5573$sFNhI))))))
   (g$char=?$5425$sFNhI
     g$char=?$5697$sFNhI
     (case-lambda
       ((g$a$5575$sFNhI g$b$5576$sFNhI . g$rest$5577$sFNhI)
        (begin
          (if (not (g$char?$5358$sFNhI g$a$5575$sFNhI))
            (assertion-violation 'char=? '"not a char" g$a$5575$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5578$sFNhI)
               (begin
                 (if (not (g$char?$5358$sFNhI g$x$5578$sFNhI))
                   (assertion-violation 'char=? '"not a char" g$x$5578$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5579$sFNhI)
                     (begin
                       (set! g$a$5575$sFNhI g$x$5578$sFNhI)
                       g$r$5579$sFNhI)))
                  (fx=?
                    (char->integer g$a$5575$sFNhI)
                    (char->integer g$x$5578$sFNhI))))))
            (cons g$b$5576$sFNhI g$rest$5577$sFNhI))))))
   (g$char<?$5426$sFNhI
     g$char<?$5698$sFNhI
     (case-lambda
       ((g$a$5580$sFNhI g$b$5581$sFNhI . g$rest$5582$sFNhI)
        (begin
          (if (not (g$char?$5358$sFNhI g$a$5580$sFNhI))
            (assertion-violation 'char<? '"not a char" g$a$5580$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5583$sFNhI)
               (begin
                 (if (not (g$char?$5358$sFNhI g$x$5583$sFNhI))
                   (assertion-violation 'char<? '"not a char" g$x$5583$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5584$sFNhI)
                     (begin
                       (set! g$a$5580$sFNhI g$x$5583$sFNhI)
                       g$r$5584$sFNhI)))
                  (fx<?
                    (char->integer g$a$5580$sFNhI)
                    (char->integer g$x$5583$sFNhI))))))
            (cons g$b$5581$sFNhI g$rest$5582$sFNhI))))))
   (g$char>?$5427$sFNhI
     g$char>?$5699$sFNhI
     (case-lambda
       ((g$a$5585$sFNhI g$b$5586$sFNhI . g$rest$5587$sFNhI)
        (begin
          (if (not (g$char?$5358$sFNhI g$a$5585$sFNhI))
            (assertion-violation 'char>? '"not a char" g$a$5585$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5588$sFNhI)
               (begin
                 (if (not (g$char?$5358$sFNhI g$x$5588$sFNhI))
                   (assertion-violation 'char>? '"not a char" g$x$5588$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5589$sFNhI)
                     (begin
                       (set! g$a$5585$sFNhI g$x$5588$sFNhI)
                       g$r$5589$sFNhI)))
                  (fx>?
                    (char->integer g$a$5585$sFNhI)
                    (char->integer g$x$5588$sFNhI))))))
            (cons g$b$5586$sFNhI g$rest$5587$sFNhI))))))
   (g$char<=?$5428$sFNhI
     g$char<=?$5700$sFNhI
     (case-lambda
       ((g$a$5590$sFNhI g$b$5591$sFNhI . g$rest$5592$sFNhI)
        (begin
          (if (not (g$char?$5358$sFNhI g$a$5590$sFNhI))
            (assertion-violation 'char<=? '"not a char" g$a$5590$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5593$sFNhI)
               (begin
                 (if (not (g$char?$5358$sFNhI g$x$5593$sFNhI))
                   (assertion-violation 'char<=? '"not a char" g$x$5593$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5594$sFNhI)
                     (begin
                       (set! g$a$5590$sFNhI g$x$5593$sFNhI)
                       g$r$5594$sFNhI)))
                  (fx<=?
                    (char->integer g$a$5590$sFNhI)
                    (char->integer g$x$5593$sFNhI))))))
            (cons g$b$5591$sFNhI g$rest$5592$sFNhI))))))
   (g$char>=?$5429$sFNhI
     g$char>=?$5701$sFNhI
     (case-lambda
       ((g$a$5595$sFNhI g$b$5596$sFNhI . g$rest$5597$sFNhI)
        (begin
          (if (not (g$char?$5358$sFNhI g$a$5595$sFNhI))
            (assertion-violation 'char>=? '"not a char" g$a$5595$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$5598$sFNhI)
               (begin
                 (if (not (g$char?$5358$sFNhI g$x$5598$sFNhI))
                   (assertion-violation 'char>=? '"not a char" g$x$5598$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$5599$sFNhI)
                     (begin
                       (set! g$a$5595$sFNhI g$x$5598$sFNhI)
                       g$r$5599$sFNhI)))
                  (fx>=?
                    (char->integer g$a$5595$sFNhI)
                    (char->integer g$x$5598$sFNhI))))))
            (cons g$b$5596$sFNhI g$rest$5597$sFNhI))))))
   (g$rationalize$5430$sFNhI
     g$rationalize$5702$sFNhI
     (case-lambda
       ((g$x$5600$sFNhI g$e$5601$sFNhI)
        (if (if (infinite? g$x$5600$sFNhI)
              (begin '#f (infinite? g$e$5601$sFNhI))
              '#f)
          '+nan.0
          ((case-lambda
             ((g$r$5602$sFNhI)
              (if (if (exact? g$x$5600$sFNhI)
                    (begin '#f (exact? g$e$5601$sFNhI))
                    '#f)
                g$r$5602$sFNhI
                (inexact g$r$5602$sFNhI))))
           (apply
             /
             (g$find-ratio$5431$sFNhI g$x$5600$sFNhI g$e$5601$sFNhI)))))))
   (g$find-ratio$5431$sFNhI
     g$find-ratio$5703$sFNhI
     (case-lambda
       ((g$x$5603$sFNhI g$e$5604$sFNhI)
        (g$find-ratio-between$5432$sFNhI
          (- g$x$5603$sFNhI g$e$5604$sFNhI)
          (+ g$x$5603$sFNhI g$e$5604$sFNhI)))))
   (g$find-ratio-between$5432$sFNhI
     g$find-ratio-between$5704$sFNhI
     (case-lambda
       ((g$x$5605$sFNhI g$y$5606$sFNhI)
        (letrec* ((g$sr$5607$sFNhI
                    (case-lambda
                      ((g$x$5609$sFNhI g$y$5610$sFNhI)
                       ((case-lambda
                          ((g$fx$5611$sFNhI g$fy$5612$sFNhI)
                           (if (>= g$fx$5611$sFNhI g$x$5609$sFNhI)
                             (list g$fx$5611$sFNhI '1)
                             (if (= g$fx$5611$sFNhI g$fy$5612$sFNhI)
                               ((case-lambda
                                  ((g$rat$5613$sFNhI)
                                   (list
                                     (+ (g$cadr$5370$sFNhI g$rat$5613$sFNhI)
                                        (* g$fx$5611$sFNhI
                                           (car g$rat$5613$sFNhI)))
                                     (car g$rat$5613$sFNhI))))
                                (g$sr$5607$sFNhI
                                  (/ (- g$y$5610$sFNhI g$fy$5612$sFNhI))
                                  (/ (- g$x$5609$sFNhI g$fx$5611$sFNhI))))
                               (list (+ '1 g$fx$5611$sFNhI) '1)))))
                        (exact (floor g$x$5609$sFNhI))
                        (exact (floor g$y$5610$sFNhI)))))))
          (if (< g$y$5606$sFNhI g$x$5605$sFNhI)
            (g$find-ratio-between$5432$sFNhI g$y$5606$sFNhI g$x$5605$sFNhI)
            (if (>= g$x$5605$sFNhI g$y$5606$sFNhI)
              (list g$x$5605$sFNhI '1)
              (if (g$positive?$5397$sFNhI g$x$5605$sFNhI)
                (g$sr$5607$sFNhI g$x$5605$sFNhI g$y$5606$sFNhI)
                (if (g$negative?$5398$sFNhI g$y$5606$sFNhI)
                  ((case-lambda
                     ((g$rat$5608$sFNhI)
                      (list
                        (- (car g$rat$5608$sFNhI))
                        (g$cadr$5370$sFNhI g$rat$5608$sFNhI))))
                   (g$sr$5607$sFNhI (- g$y$5606$sFNhI) (- g$x$5605$sFNhI)))
                  '(0 1)))))))))
   (g$vector-map$5433$sFNhI
     g$vector-map$5705$sFNhI
     (case-lambda
       ((g$p$5614$sFNhI g$vec1$5615$sFNhI . g$vecs$5616$sFNhI)
        ((case-lambda
           ((g$len$5617$sFNhI)
            ((case-lambda
               ((g$res$5618$sFNhI)
                (letrec ((g$loop$5619$sFNhI
                           (case-lambda
                             ((g$i$5620$sFNhI)
                              (if (fx=? g$i$5620$sFNhI g$len$5617$sFNhI)
                                (begin (if '#f '#f (void)) g$res$5618$sFNhI)
                                (begin
                                  (vector-set!
                                    g$res$5618$sFNhI
                                    g$i$5620$sFNhI
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (apply
                                           values
                                           (g$map$5157$sFNhI
                                             (case-lambda
                                               ((g$x$5621$sFNhI)
                                                (vector-ref
                                                  g$x$5621$sFNhI
                                                  g$i$5620$sFNhI)))
                                             (cons
                                               g$vec1$5615$sFNhI
                                               g$vecs$5616$sFNhI)))))
                                      g$p$5614$sFNhI))
                                  (g$loop$5619$sFNhI
                                    (fx+ g$i$5620$sFNhI '1))))))))
                  (g$loop$5619$sFNhI '0))))
             (make-vector g$len$5617$sFNhI))))
         (vector-length g$vec1$5615$sFNhI)))))
   (g$vector-for-each$5434$sFNhI
     g$vector-for-each$5706$sFNhI
     (case-lambda
       ((g$p$5622$sFNhI g$vec1$5623$sFNhI . g$vecs$5624$sFNhI)
        ((case-lambda
           ((g$len$5625$sFNhI)
            (letrec ((g$loop$5626$sFNhI
                       (case-lambda
                         ((g$i$5627$sFNhI)
                          (if (fx=? g$i$5627$sFNhI g$len$5625$sFNhI)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5157$sFNhI
                                       (case-lambda
                                         ((g$x$5628$sFNhI)
                                          (vector-ref
                                            g$x$5628$sFNhI
                                            g$i$5627$sFNhI)))
                                       (cons
                                         g$vec1$5623$sFNhI
                                         g$vecs$5624$sFNhI)))))
                                g$p$5622$sFNhI)
                              (g$loop$5626$sFNhI (fx+ g$i$5627$sFNhI '1))))))))
              (g$loop$5626$sFNhI '0))))
         (vector-length g$vec1$5623$sFNhI)))))
   (g$string-for-each$5435$sFNhI
     g$string-for-each$5707$sFNhI
     (case-lambda
       ((g$p$5629$sFNhI g$str1$5630$sFNhI . g$strs$5631$sFNhI)
        ((case-lambda
           ((g$len$5632$sFNhI)
            (letrec ((g$loop$5633$sFNhI
                       (case-lambda
                         ((g$i$5634$sFNhI)
                          (if (fx=? g$i$5634$sFNhI g$len$5632$sFNhI)
                            (if '#f '#f (void))
                            (begin
                              (call-with-values
                                (case-lambda
                                  (()
                                   (apply
                                     values
                                     (g$map$5157$sFNhI
                                       (case-lambda
                                         ((g$x$5635$sFNhI)
                                          (string-ref
                                            g$x$5635$sFNhI
                                            g$i$5634$sFNhI)))
                                       (cons
                                         g$str1$5630$sFNhI
                                         g$strs$5631$sFNhI)))))
                                g$p$5629$sFNhI)
                              (g$loop$5633$sFNhI (fx+ g$i$5634$sFNhI '1))))))))
              (g$loop$5633$sFNhI '0))))
         (string-length g$str1$5630$sFNhI))))))
  (void))

(library-letrec* (ironscheme hashtables)
  ((g$using$5709$sFNhI g$using$5742$sFNhI (clr-using-internal 'system))
   (g$using$5711$sFNhI
     g$using$5743$sFNhI
     (clr-using-internal 'system.collections))
   (g$make-eq-hashtable$5712$sFNhI
     g$make-eq-hashtable$5744$sFNhI
     (case-lambda
       (() (g$make-eq-hashtable$5712$sFNhI '32))
       ((g$k$5721$sFNhI)
        (clr-new-internal
          'hashtable
          (clr-cast-internal 'int32 g$k$5721$sFNhI)))))
   (g$make-eqv-hashtable$5713$sFNhI
     g$make-eqv-hashtable$5745$sFNhI
     (case-lambda
       (() (g$make-eqv-hashtable$5713$sFNhI '32))
       ((g$k$5722$sFNhI) (make-hashtable eqv-hash eqv? g$k$5722$sFNhI))))
   (g$hashtable-size$5714$sFNhI
     g$hashtable-size$5746$sFNhI
     (case-lambda
       ((g$ht$5723$sFNhI)
        (clr-call-internal 'hashtable 'get_count g$ht$5723$sFNhI))))
   (g$hashtable-ref$5715$sFNhI
     g$hashtable-ref$5747$sFNhI
     (case-lambda
       ((g$ht$5724$sFNhI g$key$5725$sFNhI g$default$5726$sFNhI)
        (letrec* ((g$r$5727$sFNhI
                    (clr-call-internal
                      'hashtable
                      'get_item
                      g$ht$5724$sFNhI
                      g$key$5725$sFNhI)))
          (if (not (null? g$r$5727$sFNhI))
            g$r$5727$sFNhI
            g$default$5726$sFNhI)))))
   (g$hashtable-set!$5716$sFNhI
     g$hashtable-set!$5748$sFNhI
     (case-lambda
       ((g$ht$5728$sFNhI g$key$5729$sFNhI g$obj$5730$sFNhI)
        (clr-call-internal
          'hashtable
          'set_item
          g$ht$5728$sFNhI
          g$key$5729$sFNhI
          g$obj$5730$sFNhI))))
   (g$hashtable-delete!$5717$sFNhI
     g$hashtable-delete!$5749$sFNhI
     (case-lambda
       ((g$ht$5731$sFNhI g$key$5732$sFNhI)
        (clr-call-internal
          'hashtable
          'remove
          g$ht$5731$sFNhI
          g$key$5732$sFNhI))))
   (g$hashtable-contains?$5718$sFNhI
     g$hashtable-contains?$5750$sFNhI
     (case-lambda
       ((g$ht$5733$sFNhI g$key$5734$sFNhI)
        (clr-call-internal
          'hashtable
          'containskey
          g$ht$5733$sFNhI
          g$key$5734$sFNhI))))
   (g$hashtable-update!$5719$sFNhI
     g$hashtable-update!$5751$sFNhI
     (case-lambda
       ((g$ht$5735$sFNhI
          g$key$5736$sFNhI
          g$proc$5737$sFNhI
          g$default$5738$sFNhI)
        (g$hashtable-set!$5716$sFNhI
          g$ht$5735$sFNhI
          g$key$5736$sFNhI
          (g$proc$5737$sFNhI
            (g$hashtable-ref$5715$sFNhI
              g$ht$5735$sFNhI
              g$key$5736$sFNhI
              g$default$5738$sFNhI))))))
   (g$hashtable-clear!$5720$sFNhI
     g$hashtable-clear!$5752$sFNhI
     (case-lambda
       ((g$ht$5739$sFNhI) (g$hashtable-clear!$5720$sFNhI g$ht$5739$sFNhI '32))
       ((g$ht$5740$sFNhI g$k$5741$sFNhI)
        (clr-call-internal 'hashtable 'clear g$ht$5740$sFNhI)))))
  (void))

(library-letrec* (ironscheme files)
  ((g$using$5754$sFNhI g$using$5761$sFNhI (clr-using-internal 'system.io))
   (g$file-exists?$5755$sFNhI
     g$file-exists?$5762$sFNhI
     (case-lambda
       ((g$fn$5758$sFNhI)
        (clr-call-internal 'file 'exists '() g$fn$5758$sFNhI))))
   (g$delete-file$5756$sFNhI
     g$delete-file$5763$sFNhI
     (case-lambda
       ((g$fn$5759$sFNhI)
        (clr-call-internal 'file 'delete '() g$fn$5759$sFNhI))))
   (g$get-directory-name$5757$sFNhI
     g$get-directory-name$5764$sFNhI
     (case-lambda
       ((g$path$5760$sFNhI)
        (clr-call-internal 'path 'getdirectoryname '() g$path$5760$sFNhI)))))
  (void))

(library-letrec* (ironscheme bytevectors)
  ((g$native-endianness$5765$sFNhI
     g$native-endianness$5876$sFNhI
     (case-lambda (() 'little)))
   (g$bytevector-u16-ref$5766$sFNhI
     g$bytevector-u16-ref$5877$sFNhI
     (case-lambda
       ((g$bytevector$5794$sFNhI g$k$5795$sFNhI g$endianness$5796$sFNhI)
        (bytevector-uint-ref
          g$bytevector$5794$sFNhI
          g$k$5795$sFNhI
          g$endianness$5796$sFNhI
          '2))))
   (g$bytevector-s16-ref$5767$sFNhI
     g$bytevector-s16-ref$5878$sFNhI
     (case-lambda
       ((g$bytevector$5797$sFNhI g$k$5798$sFNhI g$endianness$5799$sFNhI)
        (bytevector-sint-ref
          g$bytevector$5797$sFNhI
          g$k$5798$sFNhI
          g$endianness$5799$sFNhI
          '2))))
   (g$bytevector-u16-native-ref$5768$sFNhI
     g$bytevector-u16-native-ref$5879$sFNhI
     (case-lambda
       ((g$bytevector$5800$sFNhI g$k$5801$sFNhI)
        (bytevector-uint-ref
          g$bytevector$5800$sFNhI
          g$k$5801$sFNhI
          (g$native-endianness$5765$sFNhI)
          '2))))
   (g$bytevector-s16-native-ref$5769$sFNhI
     g$bytevector-s16-native-ref$5880$sFNhI
     (case-lambda
       ((g$bytevector$5802$sFNhI g$k$5803$sFNhI)
        (bytevector-sint-ref
          g$bytevector$5802$sFNhI
          g$k$5803$sFNhI
          (g$native-endianness$5765$sFNhI)
          '2))))
   (g$bytevector-u16-set!$5770$sFNhI
     g$bytevector-u16-set!$5881$sFNhI
     (case-lambda
       ((g$bytevector$5804$sFNhI
          g$k$5805$sFNhI
          g$n$5806$sFNhI
          g$endianness$5807$sFNhI)
        (bytevector-uint-set!
          g$bytevector$5804$sFNhI
          g$k$5805$sFNhI
          g$n$5806$sFNhI
          g$endianness$5807$sFNhI
          '2))))
   (g$bytevector-s16-set!$5771$sFNhI
     g$bytevector-s16-set!$5882$sFNhI
     (case-lambda
       ((g$bytevector$5808$sFNhI
          g$k$5809$sFNhI
          g$n$5810$sFNhI
          g$endianness$5811$sFNhI)
        (bytevector-sint-set!
          g$bytevector$5808$sFNhI
          g$k$5809$sFNhI
          g$n$5810$sFNhI
          g$endianness$5811$sFNhI
          '2))))
   (g$bytevector-u16-native-set!$5772$sFNhI
     g$bytevector-u16-native-set!$5883$sFNhI
     (case-lambda
       ((g$bytevector$5812$sFNhI g$k$5813$sFNhI g$n$5814$sFNhI)
        (bytevector-uint-set!
          g$bytevector$5812$sFNhI
          g$k$5813$sFNhI
          g$n$5814$sFNhI
          (g$native-endianness$5765$sFNhI)
          '2))))
   (g$bytevector-s16-native-set!$5773$sFNhI
     g$bytevector-s16-native-set!$5884$sFNhI
     (case-lambda
       ((g$bytevector$5815$sFNhI g$k$5816$sFNhI g$n$5817$sFNhI)
        (bytevector-sint-set!
          g$bytevector$5815$sFNhI
          g$k$5816$sFNhI
          g$n$5817$sFNhI
          (g$native-endianness$5765$sFNhI)
          '2))))
   (g$bytevector-u32-ref$5774$sFNhI
     g$bytevector-u32-ref$5885$sFNhI
     (case-lambda
       ((g$bytevector$5818$sFNhI g$k$5819$sFNhI g$endianness$5820$sFNhI)
        (bytevector-uint-ref
          g$bytevector$5818$sFNhI
          g$k$5819$sFNhI
          g$endianness$5820$sFNhI
          '4))))
   (g$bytevector-s32-ref$5775$sFNhI
     g$bytevector-s32-ref$5886$sFNhI
     (case-lambda
       ((g$bytevector$5821$sFNhI g$k$5822$sFNhI g$endianness$5823$sFNhI)
        (bytevector-sint-ref
          g$bytevector$5821$sFNhI
          g$k$5822$sFNhI
          g$endianness$5823$sFNhI
          '4))))
   (g$bytevector-u32-native-ref$5776$sFNhI
     g$bytevector-u32-native-ref$5887$sFNhI
     (case-lambda
       ((g$bytevector$5824$sFNhI g$k$5825$sFNhI)
        (bytevector-uint-ref
          g$bytevector$5824$sFNhI
          g$k$5825$sFNhI
          (g$native-endianness$5765$sFNhI)
          '4))))
   (g$bytevector-s32-native-ref$5777$sFNhI
     g$bytevector-s32-native-ref$5888$sFNhI
     (case-lambda
       ((g$bytevector$5826$sFNhI g$k$5827$sFNhI)
        (bytevector-sint-ref
          g$bytevector$5826$sFNhI
          g$k$5827$sFNhI
          (g$native-endianness$5765$sFNhI)
          '4))))
   (g$bytevector-u32-set!$5778$sFNhI
     g$bytevector-u32-set!$5889$sFNhI
     (case-lambda
       ((g$bytevector$5828$sFNhI
          g$k$5829$sFNhI
          g$n$5830$sFNhI
          g$endianness$5831$sFNhI)
        (bytevector-uint-set!
          g$bytevector$5828$sFNhI
          g$k$5829$sFNhI
          g$n$5830$sFNhI
          g$endianness$5831$sFNhI
          '4))))
   (g$bytevector-s32-set!$5779$sFNhI
     g$bytevector-s32-set!$5890$sFNhI
     (case-lambda
       ((g$bytevector$5832$sFNhI
          g$k$5833$sFNhI
          g$n$5834$sFNhI
          g$endianness$5835$sFNhI)
        (bytevector-sint-set!
          g$bytevector$5832$sFNhI
          g$k$5833$sFNhI
          g$n$5834$sFNhI
          g$endianness$5835$sFNhI
          '4))))
   (g$bytevector-u32-native-set!$5780$sFNhI
     g$bytevector-u32-native-set!$5891$sFNhI
     (case-lambda
       ((g$bytevector$5836$sFNhI g$k$5837$sFNhI g$n$5838$sFNhI)
        (bytevector-uint-set!
          g$bytevector$5836$sFNhI
          g$k$5837$sFNhI
          g$n$5838$sFNhI
          (g$native-endianness$5765$sFNhI)
          '4))))
   (g$bytevector-s32-native-set!$5781$sFNhI
     g$bytevector-s32-native-set!$5892$sFNhI
     (case-lambda
       ((g$bytevector$5839$sFNhI g$k$5840$sFNhI g$n$5841$sFNhI)
        (bytevector-sint-set!
          g$bytevector$5839$sFNhI
          g$k$5840$sFNhI
          g$n$5841$sFNhI
          (g$native-endianness$5765$sFNhI)
          '4))))
   (g$bytevector-u64-ref$5782$sFNhI
     g$bytevector-u64-ref$5893$sFNhI
     (case-lambda
       ((g$bytevector$5842$sFNhI g$k$5843$sFNhI g$endianness$5844$sFNhI)
        (bytevector-uint-ref
          g$bytevector$5842$sFNhI
          g$k$5843$sFNhI
          g$endianness$5844$sFNhI
          '8))))
   (g$bytevector-s64-ref$5783$sFNhI
     g$bytevector-s64-ref$5894$sFNhI
     (case-lambda
       ((g$bytevector$5845$sFNhI g$k$5846$sFNhI g$endianness$5847$sFNhI)
        (bytevector-sint-ref
          g$bytevector$5845$sFNhI
          g$k$5846$sFNhI
          g$endianness$5847$sFNhI
          '8))))
   (g$bytevector-u64-native-ref$5784$sFNhI
     g$bytevector-u64-native-ref$5895$sFNhI
     (case-lambda
       ((g$bytevector$5848$sFNhI g$k$5849$sFNhI)
        (bytevector-uint-ref
          g$bytevector$5848$sFNhI
          g$k$5849$sFNhI
          (g$native-endianness$5765$sFNhI)
          '8))))
   (g$bytevector-s64-native-ref$5785$sFNhI
     g$bytevector-s64-native-ref$5896$sFNhI
     (case-lambda
       ((g$bytevector$5850$sFNhI g$k$5851$sFNhI)
        (bytevector-sint-ref
          g$bytevector$5850$sFNhI
          g$k$5851$sFNhI
          (g$native-endianness$5765$sFNhI)
          '8))))
   (g$bytevector-u64-set!$5786$sFNhI
     g$bytevector-u64-set!$5897$sFNhI
     (case-lambda
       ((g$bytevector$5852$sFNhI
          g$k$5853$sFNhI
          g$n$5854$sFNhI
          g$endianness$5855$sFNhI)
        (bytevector-uint-set!
          g$bytevector$5852$sFNhI
          g$k$5853$sFNhI
          g$n$5854$sFNhI
          g$endianness$5855$sFNhI
          '8))))
   (g$bytevector-s64-set!$5787$sFNhI
     g$bytevector-s64-set!$5898$sFNhI
     (case-lambda
       ((g$bytevector$5856$sFNhI
          g$k$5857$sFNhI
          g$n$5858$sFNhI
          g$endianness$5859$sFNhI)
        (bytevector-sint-set!
          g$bytevector$5856$sFNhI
          g$k$5857$sFNhI
          g$n$5858$sFNhI
          g$endianness$5859$sFNhI
          '8))))
   (g$bytevector-u64-native-set!$5788$sFNhI
     g$bytevector-u64-native-set!$5899$sFNhI
     (case-lambda
       ((g$bytevector$5860$sFNhI g$k$5861$sFNhI g$n$5862$sFNhI)
        (bytevector-uint-set!
          g$bytevector$5860$sFNhI
          g$k$5861$sFNhI
          g$n$5862$sFNhI
          (g$native-endianness$5765$sFNhI)
          '8))))
   (g$bytevector-s64-native-set!$5789$sFNhI
     g$bytevector-s64-native-set!$5900$sFNhI
     (case-lambda
       ((g$bytevector$5863$sFNhI g$k$5864$sFNhI g$n$5865$sFNhI)
        (bytevector-sint-set!
          g$bytevector$5863$sFNhI
          g$k$5864$sFNhI
          g$n$5865$sFNhI
          (g$native-endianness$5765$sFNhI)
          '8))))
   (g$bytevector-ieee-single-native-ref$5790$sFNhI
     g$bytevector-ieee-single-native-ref$5901$sFNhI
     (case-lambda
       ((g$bytevector$5866$sFNhI g$k$5867$sFNhI)
        (if (not (g$zero?$5683$sFNhI (g$mod$5638$sFNhI g$k$5867$sFNhI '4)))
          (assertion-violation
            'bytevector-ieee-single-native-ref
            '"must be multiple of 4"
            g$k$5867$sFNhI)
          (bytevector-ieee-single-ref
            g$bytevector$5866$sFNhI
            g$k$5867$sFNhI
            (g$native-endianness$5765$sFNhI))))))
   (g$bytevector-ieee-double-native-ref$5791$sFNhI
     g$bytevector-ieee-double-native-ref$5902$sFNhI
     (case-lambda
       ((g$bytevector$5868$sFNhI g$k$5869$sFNhI)
        (if (not (g$zero?$5683$sFNhI (g$mod$5638$sFNhI g$k$5869$sFNhI '8)))
          (assertion-violation
            'bytevector-ieee-double-native-ref
            '"must be multiple of 8"
            g$k$5869$sFNhI)
          (bytevector-ieee-double-ref
            g$bytevector$5868$sFNhI
            g$k$5869$sFNhI
            (g$native-endianness$5765$sFNhI))))))
   (g$bytevector-ieee-single-native-set!$5792$sFNhI
     g$bytevector-ieee-single-native-set!$5903$sFNhI
     (case-lambda
       ((g$bytevector$5870$sFNhI g$k$5871$sFNhI g$x$5872$sFNhI)
        (if (not (g$zero?$5683$sFNhI (g$mod$5638$sFNhI g$k$5871$sFNhI '4)))
          (assertion-violation
            'bytevector-ieee-single-native-set!
            '"must be multiple of 4"
            g$k$5871$sFNhI)
          (bytevector-ieee-single-set!
            g$bytevector$5870$sFNhI
            g$k$5871$sFNhI
            g$x$5872$sFNhI
            (g$native-endianness$5765$sFNhI))))))
   (g$bytevector-ieee-double-native-set!$5793$sFNhI
     g$bytevector-ieee-double-native-set!$5904$sFNhI
     (case-lambda
       ((g$bytevector$5873$sFNhI g$k$5874$sFNhI g$x$5875$sFNhI)
        (if (not (g$zero?$5683$sFNhI (g$mod$5638$sFNhI g$k$5874$sFNhI '8)))
          (assertion-violation
            'bytevector-ieee-double-native-set!
            '"must be multiple of 8"
            g$k$5874$sFNhI)
          (bytevector-ieee-double-set!
            g$bytevector$5873$sFNhI
            g$k$5874$sFNhI
            g$x$5875$sFNhI
            (g$native-endianness$5765$sFNhI)))))))
  (void))

(library-letrec* (ironscheme control) () (void))

(library-letrec* (ironscheme eval) () (void))

(library-letrec* (ironscheme exceptions) () (void))

(library-letrec* (ironscheme conditions)
  ((g$6887$5905$sFNhI
     g$6887$6000$sFNhI
     (make-record-type-descriptor
       '&condition
       '#f
       'g$6890$sFNhI
       '#f
       '#f
       '#()))
   (g$6889$5906$sFNhI g$6889$6001$sFNhI '#f)
   (g$6888$5907$sFNhI
     g$6888$6002$sFNhI
     (make-record-constructor-descriptor
       g$6887$5905$sFNhI
       '#f
       g$6889$5906$sFNhI))
   (g$&condition?$5908$sFNhI
     g$&condition?$6003$sFNhI
     (record-predicate g$6887$5905$sFNhI))
   (g$make-&condition$5909$sFNhI
     g$make-&condition$6004$sFNhI
     (record-constructor g$6888$5907$sFNhI))
   (g$&condition-rtd$5910$sFNhI
     g$&condition-rtd$6005$sFNhI
     g$6887$5905$sFNhI)
   (g$&condition-rcd$5911$sFNhI
     g$&condition-rcd$6006$sFNhI
     g$6888$5907$sFNhI)
   (g$6903$5912$sFNhI
     g$6903$6007$sFNhI
     (make-record-type-descriptor
       '&message
       g$6887$5905$sFNhI
       'g$6906$sFNhI
       '#f
       '#f
       '#((immutable message))))
   (g$6905$5913$sFNhI g$6905$6008$sFNhI '#f)
   (g$6904$5914$sFNhI
     g$6904$6009$sFNhI
     (make-record-constructor-descriptor
       g$6903$5912$sFNhI
       g$6888$5907$sFNhI
       g$6905$5913$sFNhI))
   (g$6902$5915$sFNhI
     g$6902$6010$sFNhI
     (record-predicate g$6903$5912$sFNhI))
   (g$make-message-condition$5916$sFNhI
     g$make-message-condition$6011$sFNhI
     (record-constructor g$6904$5914$sFNhI))
   (g$6901$5917$sFNhI
     g$6901$6012$sFNhI
     (record-accessor g$6903$5912$sFNhI '0))
   (g$message-condition?$5918$sFNhI
     g$message-condition?$6013$sFNhI
     (condition-predicate g$6903$5912$sFNhI))
   (g$condition-message$5919$sFNhI
     g$condition-message$6014$sFNhI
     (condition-accessor g$6903$5912$sFNhI g$6901$5917$sFNhI))
   (g$6919$5920$sFNhI
     g$6919$6015$sFNhI
     (make-record-type-descriptor
       '&warning
       g$6887$5905$sFNhI
       'g$6922$sFNhI
       '#f
       '#f
       '#()))
   (g$6921$5921$sFNhI g$6921$6016$sFNhI '#f)
   (g$6920$5922$sFNhI
     g$6920$6017$sFNhI
     (make-record-constructor-descriptor
       g$6919$5920$sFNhI
       g$6888$5907$sFNhI
       g$6921$5921$sFNhI))
   (g$6918$5923$sFNhI
     g$6918$6018$sFNhI
     (record-predicate g$6919$5920$sFNhI))
   (g$make-warning$5924$sFNhI
     g$make-warning$6019$sFNhI
     (record-constructor g$6920$5922$sFNhI))
   (g$warning?$5925$sFNhI
     g$warning?$6020$sFNhI
     (condition-predicate g$6919$5920$sFNhI))
   (g$6933$5926$sFNhI
     g$6933$6021$sFNhI
     (make-record-type-descriptor
       '&serious
       g$6887$5905$sFNhI
       'g$6936$sFNhI
       '#f
       '#f
       '#()))
   (g$6935$5927$sFNhI g$6935$6022$sFNhI '#f)
   (g$6934$5928$sFNhI
     g$6934$6023$sFNhI
     (make-record-constructor-descriptor
       g$6933$5926$sFNhI
       g$6888$5907$sFNhI
       g$6935$5927$sFNhI))
   (g$6932$5929$sFNhI
     g$6932$6024$sFNhI
     (record-predicate g$6933$5926$sFNhI))
   (g$make-serious-condition$5930$sFNhI
     g$make-serious-condition$6025$sFNhI
     (record-constructor g$6934$5928$sFNhI))
   (g$serious-condition?$5931$sFNhI
     g$serious-condition?$6026$sFNhI
     (condition-predicate g$6933$5926$sFNhI))
   (g$6947$5932$sFNhI
     g$6947$6027$sFNhI
     (make-record-type-descriptor
       '&error
       g$6933$5926$sFNhI
       'g$6950$sFNhI
       '#f
       '#f
       '#()))
   (g$6949$5933$sFNhI g$6949$6028$sFNhI '#f)
   (g$6948$5934$sFNhI
     g$6948$6029$sFNhI
     (make-record-constructor-descriptor
       g$6947$5932$sFNhI
       g$6934$5928$sFNhI
       g$6949$5933$sFNhI))
   (g$6946$5935$sFNhI
     g$6946$6030$sFNhI
     (record-predicate g$6947$5932$sFNhI))
   (g$make-error$5936$sFNhI
     g$make-error$6031$sFNhI
     (record-constructor g$6948$5934$sFNhI))
   (g$error?$5937$sFNhI
     g$error?$6032$sFNhI
     (condition-predicate g$6947$5932$sFNhI))
   (g$6961$5938$sFNhI
     g$6961$6033$sFNhI
     (make-record-type-descriptor
       '&violation
       g$6933$5926$sFNhI
       'g$6964$sFNhI
       '#f
       '#f
       '#()))
   (g$6963$5939$sFNhI g$6963$6034$sFNhI '#f)
   (g$6962$5940$sFNhI
     g$6962$6035$sFNhI
     (make-record-constructor-descriptor
       g$6961$5938$sFNhI
       g$6934$5928$sFNhI
       g$6963$5939$sFNhI))
   (g$6960$5941$sFNhI
     g$6960$6036$sFNhI
     (record-predicate g$6961$5938$sFNhI))
   (g$make-violation$5942$sFNhI
     g$make-violation$6037$sFNhI
     (record-constructor g$6962$5940$sFNhI))
   (g$violation?$5943$sFNhI
     g$violation?$6038$sFNhI
     (condition-predicate g$6961$5938$sFNhI))
   (g$6975$5944$sFNhI
     g$6975$6039$sFNhI
     (make-record-type-descriptor
       '&assertion
       g$6961$5938$sFNhI
       'g$6978$sFNhI
       '#f
       '#f
       '#()))
   (g$6977$5945$sFNhI g$6977$6040$sFNhI '#f)
   (g$6976$5946$sFNhI
     g$6976$6041$sFNhI
     (make-record-constructor-descriptor
       g$6975$5944$sFNhI
       g$6962$5940$sFNhI
       g$6977$5945$sFNhI))
   (g$6974$5947$sFNhI
     g$6974$6042$sFNhI
     (record-predicate g$6975$5944$sFNhI))
   (g$make-assertion-violation$5948$sFNhI
     g$make-assertion-violation$6043$sFNhI
     (record-constructor g$6976$5946$sFNhI))
   (g$assertion-violation?$5949$sFNhI
     g$assertion-violation?$6044$sFNhI
     (condition-predicate g$6975$5944$sFNhI))
   (g$6990$5950$sFNhI
     g$6990$6045$sFNhI
     (make-record-type-descriptor
       '&irritants
       g$6887$5905$sFNhI
       'g$6993$sFNhI
       '#f
       '#f
       '#((immutable irritants))))
   (g$6992$5951$sFNhI g$6992$6046$sFNhI '#f)
   (g$6991$5952$sFNhI
     g$6991$6047$sFNhI
     (make-record-constructor-descriptor
       g$6990$5950$sFNhI
       g$6888$5907$sFNhI
       g$6992$5951$sFNhI))
   (g$6989$5953$sFNhI
     g$6989$6048$sFNhI
     (record-predicate g$6990$5950$sFNhI))
   (g$make-irritants-condition$5954$sFNhI
     g$make-irritants-condition$6049$sFNhI
     (record-constructor g$6991$5952$sFNhI))
   (g$6988$5955$sFNhI
     g$6988$6050$sFNhI
     (record-accessor g$6990$5950$sFNhI '0))
   (g$irritants-condition?$5956$sFNhI
     g$irritants-condition?$6051$sFNhI
     (condition-predicate g$6990$5950$sFNhI))
   (g$condition-irritants$5957$sFNhI
     g$condition-irritants$6052$sFNhI
     (condition-accessor g$6990$5950$sFNhI g$6988$5955$sFNhI))
   (g$7007$5958$sFNhI
     g$7007$6053$sFNhI
     (make-record-type-descriptor
       '&who
       g$6887$5905$sFNhI
       'g$7010$sFNhI
       '#f
       '#f
       '#((immutable who))))
   (g$7009$5959$sFNhI g$7009$6054$sFNhI '#f)
   (g$7008$5960$sFNhI
     g$7008$6055$sFNhI
     (make-record-constructor-descriptor
       g$7007$5958$sFNhI
       g$6888$5907$sFNhI
       g$7009$5959$sFNhI))
   (g$7006$5961$sFNhI
     g$7006$6056$sFNhI
     (record-predicate g$7007$5958$sFNhI))
   (g$make-who-condition$5962$sFNhI
     g$make-who-condition$6057$sFNhI
     (record-constructor g$7008$5960$sFNhI))
   (g$7005$5963$sFNhI
     g$7005$6058$sFNhI
     (record-accessor g$7007$5958$sFNhI '0))
   (g$who-condition?$5964$sFNhI
     g$who-condition?$6059$sFNhI
     (condition-predicate g$7007$5958$sFNhI))
   (g$condition-who$5965$sFNhI
     g$condition-who$6060$sFNhI
     (condition-accessor g$7007$5958$sFNhI g$7005$5963$sFNhI))
   (g$7023$5966$sFNhI
     g$7023$6061$sFNhI
     (make-record-type-descriptor
       '&non-continuable
       g$6961$5938$sFNhI
       'g$7026$sFNhI
       '#f
       '#f
       '#()))
   (g$7025$5967$sFNhI g$7025$6062$sFNhI '#f)
   (g$7024$5968$sFNhI
     g$7024$6063$sFNhI
     (make-record-constructor-descriptor
       g$7023$5966$sFNhI
       g$6962$5940$sFNhI
       g$7025$5967$sFNhI))
   (g$7022$5969$sFNhI
     g$7022$6064$sFNhI
     (record-predicate g$7023$5966$sFNhI))
   (g$make-non-continuable-violation$5970$sFNhI
     g$make-non-continuable-violation$6065$sFNhI
     (record-constructor g$7024$5968$sFNhI))
   (g$non-continuable-violation?$5971$sFNhI
     g$non-continuable-violation?$6066$sFNhI
     (condition-predicate g$7023$5966$sFNhI))
   (g$7037$5972$sFNhI
     g$7037$6067$sFNhI
     (make-record-type-descriptor
       '&implementation-restriction
       g$6961$5938$sFNhI
       'g$7040$sFNhI
       '#f
       '#f
       '#()))
   (g$7039$5973$sFNhI g$7039$6068$sFNhI '#f)
   (g$7038$5974$sFNhI
     g$7038$6069$sFNhI
     (make-record-constructor-descriptor
       g$7037$5972$sFNhI
       g$6962$5940$sFNhI
       g$7039$5973$sFNhI))
   (g$7036$5975$sFNhI
     g$7036$6070$sFNhI
     (record-predicate g$7037$5972$sFNhI))
   (g$make-implementation-restriction-violation$5976$sFNhI
     g$make-implementation-restriction-violation$6071$sFNhI
     (record-constructor g$7038$5974$sFNhI))
   (g$implementation-restriction-violation?$5977$sFNhI
     g$implementation-restriction-violation?$6072$sFNhI
     (condition-predicate g$7037$5972$sFNhI))
   (g$7051$5978$sFNhI
     g$7051$6073$sFNhI
     (make-record-type-descriptor
       '&lexical
       g$6961$5938$sFNhI
       'g$7054$sFNhI
       '#f
       '#f
       '#()))
   (g$7053$5979$sFNhI g$7053$6074$sFNhI '#f)
   (g$7052$5980$sFNhI
     g$7052$6075$sFNhI
     (make-record-constructor-descriptor
       g$7051$5978$sFNhI
       g$6962$5940$sFNhI
       g$7053$5979$sFNhI))
   (g$7050$5981$sFNhI
     g$7050$6076$sFNhI
     (record-predicate g$7051$5978$sFNhI))
   (g$make-lexical-violation$5982$sFNhI
     g$make-lexical-violation$6077$sFNhI
     (record-constructor g$7052$5980$sFNhI))
   (g$lexical-violation?$5983$sFNhI
     g$lexical-violation?$6078$sFNhI
     (condition-predicate g$7051$5978$sFNhI))
   (g$7067$5984$sFNhI
     g$7067$6079$sFNhI
     (make-record-type-descriptor
       '&syntax
       g$6961$5938$sFNhI
       'g$7070$sFNhI
       '#f
       '#f
       '#((immutable form) (immutable subform))))
   (g$7069$5985$sFNhI g$7069$6080$sFNhI '#f)
   (g$7068$5986$sFNhI
     g$7068$6081$sFNhI
     (make-record-constructor-descriptor
       g$7067$5984$sFNhI
       g$6962$5940$sFNhI
       g$7069$5985$sFNhI))
   (g$7066$5987$sFNhI
     g$7066$6082$sFNhI
     (record-predicate g$7067$5984$sFNhI))
   (g$make-syntax-violation$5988$sFNhI
     g$make-syntax-violation$6083$sFNhI
     (record-constructor g$7068$5986$sFNhI))
   (g$7064$5989$sFNhI
     g$7064$6084$sFNhI
     (record-accessor g$7067$5984$sFNhI '0))
   (g$7065$5990$sFNhI
     g$7065$6085$sFNhI
     (record-accessor g$7067$5984$sFNhI '1))
   (g$syntax-violation?$5991$sFNhI
     g$syntax-violation?$6086$sFNhI
     (condition-predicate g$7067$5984$sFNhI))
   (g$syntax-violation-form$5992$sFNhI
     g$syntax-violation-form$6087$sFNhI
     (condition-accessor g$7067$5984$sFNhI g$7064$5989$sFNhI))
   (g$syntax-violation-subform$5993$sFNhI
     g$syntax-violation-subform$6088$sFNhI
     (condition-accessor g$7067$5984$sFNhI g$7065$5990$sFNhI))
   (g$7085$5994$sFNhI
     g$7085$6089$sFNhI
     (make-record-type-descriptor
       '&undefined
       g$6961$5938$sFNhI
       'g$7088$sFNhI
       '#f
       '#f
       '#()))
   (g$7087$5995$sFNhI g$7087$6090$sFNhI '#f)
   (g$7086$5996$sFNhI
     g$7086$6091$sFNhI
     (make-record-constructor-descriptor
       g$7085$5994$sFNhI
       g$6962$5940$sFNhI
       g$7087$5995$sFNhI))
   (g$7084$5997$sFNhI
     g$7084$6092$sFNhI
     (record-predicate g$7085$5994$sFNhI))
   (g$make-undefined-violation$5998$sFNhI
     g$make-undefined-violation$6093$sFNhI
     (record-constructor g$7086$5996$sFNhI))
   (g$undefined-violation?$5999$sFNhI
     g$undefined-violation?$6094$sFNhI
     (condition-predicate g$7085$5994$sFNhI)))
  (void))

(library-letrec* (ironscheme mutable-pairs)
  ((g$append!$6095$sFNhI
     g$append!$6101$sFNhI
     (case-lambda
       ((g$a$6096$sFNhI . g$b$6097$sFNhI)
        (if (null? g$a$6096$sFNhI)
          g$b$6097$sFNhI
          (if (null? g$b$6097$sFNhI)
            g$a$6096$sFNhI
            (begin
              ((letrec ((g$f$6098$sFNhI
                          (case-lambda
                            ((g$a$6099$sFNhI)
                             ((case-lambda
                                ((g$n$6100$sFNhI)
                                 (if (null? g$n$6100$sFNhI)
                                   (set-cdr! g$a$6099$sFNhI g$b$6097$sFNhI)
                                   (g$f$6098$sFNhI g$n$6100$sFNhI))))
                              (cdr g$a$6099$sFNhI))))))
                 g$f$6098$sFNhI)
               g$a$6096$sFNhI)
              g$a$6096$sFNhI)))))))
  (void))

(library-letrec* (ironscheme mutable-strings) () (void))

(library-letrec* (ironscheme programs) () (void))

(library-letrec* (ironscheme r5rs)
  ((g$inexact->exact$6102$sFNhI g$inexact->exact$6122$sFNhI exact)
   (g$exact->inexact$6103$sFNhI g$exact->inexact$6123$sFNhI inexact)
   (g$sign$6104$sFNhI
     g$sign$6124$sFNhI
     (case-lambda
       ((g$n$6110$sFNhI)
        (if (> g$n$6110$sFNhI '0) '1 (if (< g$n$6110$sFNhI '0) '-1 '0)))))
   (g$quotient$6105$sFNhI
     g$quotient$6125$sFNhI
     (case-lambda
       ((g$n1$6111$sFNhI g$n2$6112$sFNhI)
        (begin
          (if (not (integer-valued? g$n1$6111$sFNhI))
            (assertion-violation 'quotient '"not an integer" g$n1$6111$sFNhI)
            (void))
          (if (not (integer-valued? g$n2$6112$sFNhI))
            (assertion-violation 'quotient '"not an integer" g$n2$6112$sFNhI)
            (void))
          (* (g$sign$6104$sFNhI g$n1$6111$sFNhI)
             (g$sign$6104$sFNhI g$n2$6112$sFNhI)
             (g$div$5636$sFNhI (abs g$n1$6111$sFNhI) (abs g$n2$6112$sFNhI)))))))
   (g$remainder$6106$sFNhI
     g$remainder$6126$sFNhI
     (case-lambda
       ((g$n1$6113$sFNhI g$n2$6114$sFNhI)
        (begin
          (if (not (integer-valued? g$n1$6113$sFNhI))
            (assertion-violation 'remainder '"not an integer" g$n1$6113$sFNhI)
            (void))
          (if (not (integer-valued? g$n2$6114$sFNhI))
            (assertion-violation 'remainder '"not an integer" g$n2$6114$sFNhI)
            (void))
          (* (g$sign$6104$sFNhI g$n1$6113$sFNhI)
             (g$mod$5638$sFNhI (abs g$n1$6113$sFNhI) (abs g$n2$6114$sFNhI)))))))
   (g$modulo$6107$sFNhI
     g$modulo$6127$sFNhI
     (case-lambda
       ((g$n1$6115$sFNhI g$n2$6116$sFNhI)
        (begin
          (if (not (integer-valued? g$n1$6115$sFNhI))
            (assertion-violation 'modulo '"not an integer" g$n1$6115$sFNhI)
            (void))
          (if (not (integer-valued? g$n2$6116$sFNhI))
            (assertion-violation 'modulo '"not an integer" g$n2$6116$sFNhI)
            (void))
          (* (g$sign$6104$sFNhI g$n2$6116$sFNhI)
             (g$mod$5638$sFNhI
               (* (g$sign$6104$sFNhI g$n2$6116$sFNhI) g$n1$6115$sFNhI)
               (abs g$n2$6116$sFNhI)))))))
   (g$make-promise$6108$sFNhI
     g$make-promise$6128$sFNhI
     (case-lambda
       ((g$proc$6117$sFNhI)
        ((case-lambda
           ((g$result-ready?$6118$sFNhI g$result$6119$sFNhI)
            (case-lambda
              (()
               (if g$result-ready?$6118$sFNhI
                 g$result$6119$sFNhI
                 ((case-lambda
                    ((g$x$6120$sFNhI)
                     (if g$result-ready?$6118$sFNhI
                       g$result$6119$sFNhI
                       (begin
                         (set! g$result-ready?$6118$sFNhI '#t)
                         (set! g$result$6119$sFNhI g$x$6120$sFNhI)
                         g$result$6119$sFNhI))))
                  (g$proc$6117$sFNhI)))))))
         '#f
         '#f))))
   (g$force$6109$sFNhI
     g$force$6129$sFNhI
     (case-lambda ((g$object$6121$sFNhI) (g$object$6121$sFNhI)))))
  (void))

(library-letrec* (ironscheme sorting)
  ((g$split$6130$sFNhI
     g$split$6155$sFNhI
     (case-lambda
       ((g$ls$6134$sFNhI)
        ((letrec ((g$loop$6135$sFNhI
                    (case-lambda
                      ((g$rest$6136$sFNhI g$left$6137$sFNhI g$right$6138$sFNhI)
                       (if (null? g$rest$6136$sFNhI)
                         (cons g$left$6137$sFNhI g$right$6138$sFNhI)
                         (if (null? (cdr g$rest$6136$sFNhI))
                           (cons
                             (cons (car g$rest$6136$sFNhI) g$left$6137$sFNhI)
                             g$right$6138$sFNhI)
                           (g$loop$6135$sFNhI
                             (g$cddr$5656$sFNhI g$rest$6136$sFNhI)
                             (cons (car g$rest$6136$sFNhI) g$left$6137$sFNhI)
                             (cons
                               (g$cadr$5654$sFNhI g$rest$6136$sFNhI)
                               g$right$6138$sFNhI))))))))
           g$loop$6135$sFNhI)
         g$ls$6134$sFNhI
         '()
         '()))))
   (g$reverse-it$6131$sFNhI
     g$reverse-it$6156$sFNhI
     (case-lambda
       ((g$head$6139$sFNhI g$tail$6140$sFNhI)
        (if (null? g$head$6139$sFNhI)
          g$tail$6140$sFNhI
          (g$reverse-it$6131$sFNhI
            (cdr g$head$6139$sFNhI)
            (cons (car g$head$6139$sFNhI) g$tail$6140$sFNhI))))))
   (g$merge$6132$sFNhI
     g$merge$6157$sFNhI
     (case-lambda
       ((g$list-1$6141$sFNhI g$list-2$6142$sFNhI g$precedes?$6143$sFNhI)
        ((letrec ((g$loop$6144$sFNhI
                    (case-lambda
                      ((g$source-1$6145$sFNhI
                         g$source-2$6146$sFNhI
                         g$so-far$6147$sFNhI)
                       (if (null? g$source-1$6145$sFNhI)
                         (g$reverse-it$6131$sFNhI
                           g$so-far$6147$sFNhI
                           g$source-2$6146$sFNhI)
                         (if (null? g$source-2$6146$sFNhI)
                           (g$reverse-it$6131$sFNhI
                             g$so-far$6147$sFNhI
                             g$source-1$6145$sFNhI)
                           ((case-lambda
                              ((g$car-1$6148$sFNhI g$car-2$6149$sFNhI)
                               (if (g$precedes?$6143$sFNhI
                                     g$car-2$6149$sFNhI
                                     g$car-1$6148$sFNhI)
                                 (g$loop$6144$sFNhI
                                   g$source-1$6145$sFNhI
                                   (cdr g$source-2$6146$sFNhI)
                                   (cons
                                     g$car-2$6149$sFNhI
                                     g$so-far$6147$sFNhI))
                                 (g$loop$6144$sFNhI
                                   g$source-2$6146$sFNhI
                                   (cdr g$source-1$6145$sFNhI)
                                   (cons
                                     g$car-1$6148$sFNhI
                                     g$so-far$6147$sFNhI)))))
                            (car g$source-1$6145$sFNhI)
                            (car g$source-2$6146$sFNhI))))))))
           g$loop$6144$sFNhI)
         g$list-1$6141$sFNhI
         g$list-2$6142$sFNhI
         '()))))
   (g$list-sort$6133$sFNhI
     g$list-sort$6158$sFNhI
     (case-lambda
       ((g$precedes?$6150$sFNhI g$ls$6151$sFNhI)
        (if (null? g$ls$6151$sFNhI)
          '()
          ((letrec ((g$helper$6152$sFNhI
                      (case-lambda
                        ((g$piece$6153$sFNhI)
                         (if (null? (cdr g$piece$6153$sFNhI))
                           g$piece$6153$sFNhI
                           ((case-lambda
                              ((g$parts$6154$sFNhI)
                               (g$merge$6132$sFNhI
                                 (g$helper$6152$sFNhI (car g$parts$6154$sFNhI))
                                 (g$helper$6152$sFNhI (cdr g$parts$6154$sFNhI))
                                 g$precedes?$6150$sFNhI)))
                            (g$split$6130$sFNhI g$piece$6153$sFNhI)))))))
             g$helper$6152$sFNhI)
           g$ls$6151$sFNhI))))))
  (void))

(library-letrec* (ironscheme syntax-case) () (void))

(library-letrec* (ironscheme unicode)
  ((g$string-ci=?$6165$sFNhI
     g$string-ci=?$6239$sFNhI
     (case-lambda
       ((g$a$6185$sFNhI g$b$6186$sFNhI . g$rest$6187$sFNhI)
        (begin
          (if (not (string? g$a$6185$sFNhI))
            (assertion-violation 'string-ci=? '"not a string" g$a$6185$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6188$sFNhI)
               (begin
                 (if (not (string? g$x$6188$sFNhI))
                   (assertion-violation
                     'string-ci=?
                     '"not a string"
                     g$x$6188$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6189$sFNhI)
                     (begin
                       (set! g$a$6185$sFNhI g$x$6188$sFNhI)
                       g$r$6189$sFNhI)))
                  (= (string-ci-compare g$a$6185$sFNhI g$x$6188$sFNhI) '0)))))
            (cons g$b$6186$sFNhI g$rest$6187$sFNhI))))))
   (g$string-ci<?$6166$sFNhI
     g$string-ci<?$6240$sFNhI
     (case-lambda
       ((g$a$6190$sFNhI g$b$6191$sFNhI . g$rest$6192$sFNhI)
        (begin
          (if (not (string? g$a$6190$sFNhI))
            (assertion-violation 'string-ci<? '"not a string" g$a$6190$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6193$sFNhI)
               (begin
                 (if (not (string? g$x$6193$sFNhI))
                   (assertion-violation
                     'string-ci<?
                     '"not a string"
                     g$x$6193$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6194$sFNhI)
                     (begin
                       (set! g$a$6190$sFNhI g$x$6193$sFNhI)
                       g$r$6194$sFNhI)))
                  (< (string-ci-compare g$a$6190$sFNhI g$x$6193$sFNhI) '0)))))
            (cons g$b$6191$sFNhI g$rest$6192$sFNhI))))))
   (g$string-ci>?$6167$sFNhI
     g$string-ci>?$6241$sFNhI
     (case-lambda
       ((g$a$6195$sFNhI g$b$6196$sFNhI . g$rest$6197$sFNhI)
        (begin
          (if (not (string? g$a$6195$sFNhI))
            (assertion-violation 'string-ci>? '"not a string" g$a$6195$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6198$sFNhI)
               (begin
                 (if (not (string? g$x$6198$sFNhI))
                   (assertion-violation
                     'string-ci>?
                     '"not a string"
                     g$x$6198$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6199$sFNhI)
                     (begin
                       (set! g$a$6195$sFNhI g$x$6198$sFNhI)
                       g$r$6199$sFNhI)))
                  (> (string-ci-compare g$a$6195$sFNhI g$x$6198$sFNhI) '0)))))
            (cons g$b$6196$sFNhI g$rest$6197$sFNhI))))))
   (g$string-ci<=?$6168$sFNhI
     g$string-ci<=?$6242$sFNhI
     (case-lambda
       ((g$a$6200$sFNhI g$b$6201$sFNhI . g$rest$6202$sFNhI)
        (begin
          (if (not (string? g$a$6200$sFNhI))
            (assertion-violation 'string-ci<=? '"not a string" g$a$6200$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6203$sFNhI)
               (begin
                 (if (not (string? g$x$6203$sFNhI))
                   (assertion-violation
                     'string-ci<=?
                     '"not a string"
                     g$x$6203$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6204$sFNhI)
                     (begin
                       (set! g$a$6200$sFNhI g$x$6203$sFNhI)
                       g$r$6204$sFNhI)))
                  (<= (string-ci-compare g$a$6200$sFNhI g$x$6203$sFNhI) '0)))))
            (cons g$b$6201$sFNhI g$rest$6202$sFNhI))))))
   (g$string-ci>=?$6169$sFNhI
     g$string-ci>=?$6243$sFNhI
     (case-lambda
       ((g$a$6205$sFNhI g$b$6206$sFNhI . g$rest$6207$sFNhI)
        (begin
          (if (not (string? g$a$6205$sFNhI))
            (assertion-violation 'string-ci>=? '"not a string" g$a$6205$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6208$sFNhI)
               (begin
                 (if (not (string? g$x$6208$sFNhI))
                   (assertion-violation
                     'string-ci>=?
                     '"not a string"
                     g$x$6208$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6209$sFNhI)
                     (begin
                       (set! g$a$6205$sFNhI g$x$6208$sFNhI)
                       g$r$6209$sFNhI)))
                  (>= (string-ci-compare g$a$6205$sFNhI g$x$6208$sFNhI) '0)))))
            (cons g$b$6206$sFNhI g$rest$6207$sFNhI))))))
   (g$char-ci=?$6176$sFNhI
     g$char-ci=?$6244$sFNhI
     (case-lambda
       ((g$a$6210$sFNhI g$b$6211$sFNhI . g$rest$6212$sFNhI)
        (begin
          (if (not (g$char?$5642$sFNhI g$a$6210$sFNhI))
            (assertion-violation 'char-ci=? '"not a char" g$a$6210$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6213$sFNhI)
               (begin
                 (if (not (g$char?$5642$sFNhI g$x$6213$sFNhI))
                   (assertion-violation 'char-ci=? '"not a char" g$x$6213$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6214$sFNhI)
                     (begin
                       (set! g$a$6210$sFNhI g$x$6213$sFNhI)
                       g$r$6214$sFNhI)))
                  (= (char->integer (char-upcase g$a$6210$sFNhI))
                     (char->integer (char-upcase g$x$6213$sFNhI)))))))
            (cons g$b$6211$sFNhI g$rest$6212$sFNhI))))))
   (g$char-ci<?$6177$sFNhI
     g$char-ci<?$6245$sFNhI
     (case-lambda
       ((g$a$6215$sFNhI g$b$6216$sFNhI . g$rest$6217$sFNhI)
        (begin
          (if (not (g$char?$5642$sFNhI g$a$6215$sFNhI))
            (assertion-violation 'char-ci<? '"not a char" g$a$6215$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6218$sFNhI)
               (begin
                 (if (not (g$char?$5642$sFNhI g$x$6218$sFNhI))
                   (assertion-violation 'char-ci<? '"not a char" g$x$6218$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6219$sFNhI)
                     (begin
                       (set! g$a$6215$sFNhI g$x$6218$sFNhI)
                       g$r$6219$sFNhI)))
                  (< (char->integer (char-upcase g$a$6215$sFNhI))
                     (char->integer (char-upcase g$x$6218$sFNhI)))))))
            (cons g$b$6216$sFNhI g$rest$6217$sFNhI))))))
   (g$char-ci>?$6178$sFNhI
     g$char-ci>?$6246$sFNhI
     (case-lambda
       ((g$a$6220$sFNhI g$b$6221$sFNhI . g$rest$6222$sFNhI)
        (begin
          (if (not (g$char?$5642$sFNhI g$a$6220$sFNhI))
            (assertion-violation 'char-ci>? '"not a char" g$a$6220$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6223$sFNhI)
               (begin
                 (if (not (g$char?$5642$sFNhI g$x$6223$sFNhI))
                   (assertion-violation 'char-ci>? '"not a char" g$x$6223$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6224$sFNhI)
                     (begin
                       (set! g$a$6220$sFNhI g$x$6223$sFNhI)
                       g$r$6224$sFNhI)))
                  (> (char->integer (char-upcase g$a$6220$sFNhI))
                     (char->integer (char-upcase g$x$6223$sFNhI)))))))
            (cons g$b$6221$sFNhI g$rest$6222$sFNhI))))))
   (g$char-ci<=?$6179$sFNhI
     g$char-ci<=?$6247$sFNhI
     (case-lambda
       ((g$a$6225$sFNhI g$b$6226$sFNhI . g$rest$6227$sFNhI)
        (begin
          (if (not (g$char?$5642$sFNhI g$a$6225$sFNhI))
            (assertion-violation 'char-ci<=? '"not a char" g$a$6225$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6228$sFNhI)
               (begin
                 (if (not (g$char?$5642$sFNhI g$x$6228$sFNhI))
                   (assertion-violation
                     'char-ci<=?
                     '"not a char"
                     g$x$6228$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6229$sFNhI)
                     (begin
                       (set! g$a$6225$sFNhI g$x$6228$sFNhI)
                       g$r$6229$sFNhI)))
                  (<= (char->integer (char-upcase g$a$6225$sFNhI))
                      (char->integer (char-upcase g$x$6228$sFNhI)))))))
            (cons g$b$6226$sFNhI g$rest$6227$sFNhI))))))
   (g$char-ci>=?$6180$sFNhI
     g$char-ci>=?$6248$sFNhI
     (case-lambda
       ((g$a$6230$sFNhI g$b$6231$sFNhI . g$rest$6232$sFNhI)
        (begin
          (if (not (g$char?$5642$sFNhI g$a$6230$sFNhI))
            (assertion-violation 'char-ci>=? '"not a char" g$a$6230$sFNhI)
            (void))
          (g$for-all$5155$sFNhI
            (case-lambda
              ((g$x$6233$sFNhI)
               (begin
                 (if (not (g$char?$5642$sFNhI g$x$6233$sFNhI))
                   (assertion-violation
                     'char-ci>=?
                     '"not a char"
                     g$x$6233$sFNhI)
                   (void))
                 ((case-lambda
                    ((g$r$6234$sFNhI)
                     (begin
                       (set! g$a$6230$sFNhI g$x$6233$sFNhI)
                       g$r$6234$sFNhI)))
                  (>= (char->integer (char-upcase g$a$6230$sFNhI))
                      (char->integer (char-upcase g$x$6233$sFNhI)))))))
            (cons g$b$6231$sFNhI g$rest$6232$sFNhI))))))
   (g$string-normalize-nfc$6181$sFNhI
     g$string-normalize-nfc$6249$sFNhI
     (case-lambda
       ((g$s$6235$sFNhI) (string-normalize g$s$6235$sFNhI 'formc))))
   (g$string-normalize-nfd$6182$sFNhI
     g$string-normalize-nfd$6250$sFNhI
     (case-lambda
       ((g$s$6236$sFNhI) (string-normalize g$s$6236$sFNhI 'formd))))
   (g$string-normalize-nfkc$6183$sFNhI
     g$string-normalize-nfkc$6251$sFNhI
     (case-lambda
       ((g$s$6237$sFNhI) (string-normalize g$s$6237$sFNhI 'formkc))))
   (g$string-normalize-nfkd$6184$sFNhI
     g$string-normalize-nfkd$6252$sFNhI
     (case-lambda
       ((g$s$6238$sFNhI) (string-normalize g$s$6238$sFNhI 'formkd)))))
  (void))

(library-letrec* (ironscheme arithmetic bitwise)
  ((g$bitwise-if$6253$sFNhI
     g$bitwise-if$6284$sFNhI
     (case-lambda
       ((g$ei1$6260$sFNhI g$ei2$6261$sFNhI g$ei3$6262$sFNhI)
        (bitwise-ior
          (bitwise-and g$ei1$6260$sFNhI g$ei2$6261$sFNhI)
          (bitwise-and (bitwise-not g$ei1$6260$sFNhI) g$ei3$6262$sFNhI)))))
   (g$bitwise-copy-bit$6254$sFNhI
     g$bitwise-copy-bit$6285$sFNhI
     (case-lambda
       ((g$ei1$6263$sFNhI g$ei2$6264$sFNhI g$ei3$6265$sFNhI)
        (g$bitwise-if$6253$sFNhI
          (g$bitwise-arithmetic-shift-left$6257$sFNhI '1 g$ei2$6264$sFNhI)
          (g$bitwise-arithmetic-shift-left$6257$sFNhI
            g$ei3$6265$sFNhI
            g$ei2$6264$sFNhI)
          g$ei1$6263$sFNhI))))
   (g$bitwise-bit-field$6255$sFNhI
     g$bitwise-bit-field$6286$sFNhI
     (case-lambda
       ((g$ei1$6266$sFNhI g$ei2$6267$sFNhI g$ei3$6268$sFNhI)
        (g$bitwise-arithmetic-shift-right$6258$sFNhI
          (bitwise-and
            g$ei1$6266$sFNhI
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6257$sFNhI
                '-1
                g$ei3$6268$sFNhI)))
          g$ei2$6267$sFNhI))))
   (g$bitwise-copy-bit-field$6256$sFNhI
     g$bitwise-copy-bit-field$6287$sFNhI
     (case-lambda
       ((g$to$6269$sFNhI g$start$6270$sFNhI g$end$6271$sFNhI g$from$6272$sFNhI)
        (g$bitwise-if$6253$sFNhI
          (bitwise-and
            (g$bitwise-arithmetic-shift-left$6257$sFNhI '-1 g$start$6270$sFNhI)
            (bitwise-not
              (g$bitwise-arithmetic-shift-left$6257$sFNhI
                '-1
                g$end$6271$sFNhI)))
          (g$bitwise-arithmetic-shift-left$6257$sFNhI
            g$from$6272$sFNhI
            g$start$6270$sFNhI)
          g$to$6269$sFNhI))))
   (g$bitwise-arithmetic-shift-left$6257$sFNhI
     g$bitwise-arithmetic-shift-left$6288$sFNhI
     (case-lambda
       ((g$ei1$6273$sFNhI g$ei2$6274$sFNhI)
        (bitwise-arithmetic-shift g$ei1$6273$sFNhI g$ei2$6274$sFNhI))))
   (g$bitwise-arithmetic-shift-right$6258$sFNhI
     g$bitwise-arithmetic-shift-right$6289$sFNhI
     (case-lambda
       ((g$ei1$6275$sFNhI g$ei2$6276$sFNhI)
        (bitwise-arithmetic-shift g$ei1$6275$sFNhI (- g$ei2$6276$sFNhI)))))
   (g$bitwise-rotate-bit-field$6259$sFNhI
     g$bitwise-rotate-bit-field$6290$sFNhI
     (case-lambda
       ((g$n$6277$sFNhI g$start$6278$sFNhI g$end$6279$sFNhI g$count$6280$sFNhI)
        ((case-lambda
           ((g$width$6281$sFNhI)
            (if (g$positive?$5681$sFNhI g$width$6281$sFNhI)
              ((case-lambda
                 ((g$count$6282$sFNhI g$field$6283$sFNhI)
                  (g$bitwise-copy-bit-field$6256$sFNhI
                    g$n$6277$sFNhI
                    g$start$6278$sFNhI
                    g$end$6279$sFNhI
                    (bitwise-ior
                      (g$bitwise-arithmetic-shift-left$6257$sFNhI
                        g$field$6283$sFNhI
                        g$count$6282$sFNhI)
                      (g$bitwise-arithmetic-shift-right$6258$sFNhI
                        g$field$6283$sFNhI
                        (- g$width$6281$sFNhI g$count$6282$sFNhI))))))
               (g$mod$5638$sFNhI g$count$6280$sFNhI g$width$6281$sFNhI)
               (g$bitwise-bit-field$6255$sFNhI
                 g$n$6277$sFNhI
                 g$start$6278$sFNhI
                 g$end$6279$sFNhI))
              g$n$6277$sFNhI)))
         (- g$end$6279$sFNhI g$start$6278$sFNhI))))))
  (void))

(library-letrec* (ironscheme arithmetic fixnums)
  ((g$fxdiv$6291$sFNhI
     g$fxdiv$6396$sFNhI
     (case-lambda
       ((g$fx1$6312$sFNhI g$fx2$6313$sFNhI)
        (call-with-values
          (case-lambda (() (fxdiv-and-mod g$fx1$6312$sFNhI g$fx2$6313$sFNhI)))
          (case-lambda
            ((g$n$6316$sFNhI g$d$6317$sFNhI)
             ((case-lambda ((g$d$6318$sFNhI g$n$6319$sFNhI) g$n$6319$sFNhI))
              g$d$6317$sFNhI
              g$n$6316$sFNhI)))))))
   (g$fxdiv0$6292$sFNhI
     g$fxdiv0$6397$sFNhI
     (case-lambda
       ((g$fx1$6320$sFNhI g$fx2$6321$sFNhI)
        (call-with-values
          (case-lambda (() (fxdiv0-and-mod0 g$fx1$6320$sFNhI g$fx2$6321$sFNhI)))
          (case-lambda
            ((g$n$6324$sFNhI g$d$6325$sFNhI)
             ((case-lambda ((g$d$6326$sFNhI g$n$6327$sFNhI) g$n$6327$sFNhI))
              g$d$6325$sFNhI
              g$n$6324$sFNhI)))))))
   (g$fxmod$6293$sFNhI
     g$fxmod$6398$sFNhI
     (case-lambda
       ((g$fx1$6328$sFNhI g$fx2$6329$sFNhI)
        (call-with-values
          (case-lambda (() (fxdiv-and-mod g$fx1$6328$sFNhI g$fx2$6329$sFNhI)))
          (case-lambda
            ((g$n$6332$sFNhI g$d$6333$sFNhI)
             ((case-lambda ((g$d$6334$sFNhI g$n$6335$sFNhI) g$d$6334$sFNhI))
              g$d$6333$sFNhI
              g$n$6332$sFNhI)))))))
   (g$fxmod0$6294$sFNhI
     g$fxmod0$6399$sFNhI
     (case-lambda
       ((g$fx1$6336$sFNhI g$fx2$6337$sFNhI)
        (call-with-values
          (case-lambda (() (fxdiv0-and-mod0 g$fx1$6336$sFNhI g$fx2$6337$sFNhI)))
          (case-lambda
            ((g$n$6340$sFNhI g$d$6341$sFNhI)
             ((case-lambda ((g$d$6342$sFNhI g$n$6343$sFNhI) g$d$6342$sFNhI))
              g$d$6341$sFNhI
              g$n$6340$sFNhI)))))))
   (g$fxpositive?$6295$sFNhI
     g$fxpositive?$6400$sFNhI
     (case-lambda
       ((g$r$6344$sFNhI)
        (begin
          (if (not (g$fixnum?$5648$sFNhI g$r$6344$sFNhI))
            (assertion-violation 'fxpositive? '"not a fixnum" g$r$6344$sFNhI)
            (void))
          (fx<? '0 g$r$6344$sFNhI)))))
   (g$fxnegative?$6296$sFNhI
     g$fxnegative?$6401$sFNhI
     (case-lambda
       ((g$r$6345$sFNhI)
        (begin
          (if (not (g$fixnum?$5648$sFNhI g$r$6345$sFNhI))
            (assertion-violation 'fxnegative? '"not a fixnum" g$r$6345$sFNhI)
            (void))
          (fx>? '0 g$r$6345$sFNhI)))))
   (g$fxzero?$6297$sFNhI
     g$fxzero?$6402$sFNhI
     (case-lambda
       ((g$r$6346$sFNhI)
        (begin
          (if (not (g$fixnum?$5648$sFNhI g$r$6346$sFNhI))
            (assertion-violation 'fxzero? '"not a fixnum" g$r$6346$sFNhI)
            (void))
          (fx=? '0 g$r$6346$sFNhI)))))
   (g$fxeven?$6298$sFNhI
     g$fxeven?$6403$sFNhI
     (case-lambda
       ((g$n$6347$sFNhI)
        (begin
          (if (not (g$fixnum?$5648$sFNhI g$n$6347$sFNhI))
            (assertion-violation 'fxeven? '"not a fixnum" g$n$6347$sFNhI)
            (void))
          (fx=? '0 (g$fxmod$6293$sFNhI g$n$6347$sFNhI '2))))))
   (g$fxodd?$6299$sFNhI
     g$fxodd?$6404$sFNhI
     (case-lambda
       ((g$n$6348$sFNhI)
        (begin
          (if (not (g$fixnum?$5648$sFNhI g$n$6348$sFNhI))
            (assertion-violation 'fxodd? '"not a fixnum" g$n$6348$sFNhI)
            (void))
          (fx=? '1 (g$fxmod$6293$sFNhI g$n$6348$sFNhI '2))))))
   (g$fxmax$6300$sFNhI
     g$fxmax$6405$sFNhI
     (case-lambda
       ((g$a$6349$sFNhI . g$rest$6350$sFNhI)
        (begin
          (if (not (g$fixnum?$5648$sFNhI g$a$6349$sFNhI))
            (assertion-violation 'fxmax '"not a fixnum" g$a$6349$sFNhI)
            (void))
          (g$fold-left$5160$sFNhI
            (case-lambda
              ((g$a$6351$sFNhI g$b$6352$sFNhI)
               (if (fx<? g$a$6351$sFNhI g$b$6352$sFNhI)
                 g$b$6352$sFNhI
                 g$a$6351$sFNhI)))
            g$a$6349$sFNhI
            g$rest$6350$sFNhI)))))
   (g$fxmin$6301$sFNhI
     g$fxmin$6406$sFNhI
     (case-lambda
       ((g$a$6353$sFNhI . g$rest$6354$sFNhI)
        (begin
          (if (not (g$fixnum?$5648$sFNhI g$a$6353$sFNhI))
            (assertion-violation 'fxmin '"not a fixnum" g$a$6353$sFNhI)
            (void))
          (g$fold-left$5160$sFNhI
            (case-lambda
              ((g$a$6355$sFNhI g$b$6356$sFNhI)
               (if (fx>? g$a$6355$sFNhI g$b$6356$sFNhI)
                 g$b$6356$sFNhI
                 g$a$6355$sFNhI)))
            g$a$6353$sFNhI
            g$rest$6354$sFNhI)))))
   (g$fx*/carry$6302$sFNhI
     g$fx*/carry$6407$sFNhI
     (case-lambda
       ((g$fx1$6357$sFNhI g$fx2$6358$sFNhI g$fx3$6359$sFNhI)
        ((case-lambda
           ((g$s$6360$sFNhI g$e$6361$sFNhI)
            (values
              (g$mod0$5639$sFNhI g$s$6360$sFNhI g$e$6361$sFNhI)
              (g$div0$5637$sFNhI g$s$6360$sFNhI g$e$6361$sFNhI))))
         (+ (* g$fx1$6357$sFNhI g$fx2$6358$sFNhI) g$fx3$6359$sFNhI)
         (expt '2 (g$fixnum-width$5650$sFNhI))))))
   (g$fx-/carry$6303$sFNhI
     g$fx-/carry$6408$sFNhI
     (case-lambda
       ((g$fx1$6362$sFNhI g$fx2$6363$sFNhI g$fx3$6364$sFNhI)
        ((case-lambda
           ((g$s$6365$sFNhI g$e$6366$sFNhI)
            (values
              (g$mod0$5639$sFNhI g$s$6365$sFNhI g$e$6366$sFNhI)
              (g$div0$5637$sFNhI g$s$6365$sFNhI g$e$6366$sFNhI))))
         (- g$fx1$6362$sFNhI g$fx2$6363$sFNhI g$fx3$6364$sFNhI)
         (expt '2 (g$fixnum-width$5650$sFNhI))))))
   (g$fx+/carry$6304$sFNhI
     g$fx+/carry$6409$sFNhI
     (case-lambda
       ((g$fx1$6367$sFNhI g$fx2$6368$sFNhI g$fx3$6369$sFNhI)
        ((case-lambda
           ((g$s$6370$sFNhI g$e$6371$sFNhI)
            (values
              (g$mod0$5639$sFNhI g$s$6370$sFNhI g$e$6371$sFNhI)
              (g$div0$5637$sFNhI g$s$6370$sFNhI g$e$6371$sFNhI))))
         (+ g$fx1$6367$sFNhI g$fx2$6368$sFNhI g$fx3$6369$sFNhI)
         (expt '2 (g$fixnum-width$5650$sFNhI))))))
   (g$fxif$6305$sFNhI
     g$fxif$6410$sFNhI
     (case-lambda
       ((g$fx1$6372$sFNhI g$fx2$6373$sFNhI g$fx3$6374$sFNhI)
        (fxior
          (fxand g$fx1$6372$sFNhI g$fx2$6373$sFNhI)
          (fxand (fxnot g$fx1$6372$sFNhI) g$fx3$6374$sFNhI)))))
   (g$fxcopy-bit$6306$sFNhI
     g$fxcopy-bit$6411$sFNhI
     (case-lambda
       ((g$fx1$6375$sFNhI g$fx2$6376$sFNhI g$fx3$6377$sFNhI)
        (g$fxif$6305$sFNhI
          (g$fxarithmetic-shift-left$6309$sFNhI '1 g$fx2$6376$sFNhI)
          (g$fxarithmetic-shift-left$6309$sFNhI
            g$fx3$6377$sFNhI
            g$fx2$6376$sFNhI)
          g$fx1$6375$sFNhI))))
   (g$fxbit-field$6307$sFNhI
     g$fxbit-field$6412$sFNhI
     (case-lambda
       ((g$fx1$6378$sFNhI g$fx2$6379$sFNhI g$fx3$6380$sFNhI)
        (g$fxarithmetic-shift-right$6310$sFNhI
          (fxand
            g$fx1$6378$sFNhI
            (fxnot (g$fxarithmetic-shift-left$6309$sFNhI '-1 g$fx3$6380$sFNhI)))
          g$fx2$6379$sFNhI))))
   (g$fxcopy-bit-field$6308$sFNhI
     g$fxcopy-bit-field$6413$sFNhI
     (case-lambda
       ((g$to$6381$sFNhI g$start$6382$sFNhI g$end$6383$sFNhI g$from$6384$sFNhI)
        (g$fxif$6305$sFNhI
          (fxand
            (g$fxarithmetic-shift-left$6309$sFNhI '-1 g$start$6382$sFNhI)
            (fxnot (g$fxarithmetic-shift-left$6309$sFNhI '-1 g$end$6383$sFNhI)))
          (g$fxarithmetic-shift-left$6309$sFNhI
            g$from$6384$sFNhI
            g$start$6382$sFNhI)
          g$to$6381$sFNhI))))
   (g$fxarithmetic-shift-left$6309$sFNhI
     g$fxarithmetic-shift-left$6414$sFNhI
     (case-lambda
       ((g$fx1$6385$sFNhI g$fx2$6386$sFNhI)
        (fxarithmetic-shift g$fx1$6385$sFNhI g$fx2$6386$sFNhI))))
   (g$fxarithmetic-shift-right$6310$sFNhI
     g$fxarithmetic-shift-right$6415$sFNhI
     (case-lambda
       ((g$fx1$6387$sFNhI g$fx2$6388$sFNhI)
        (fxarithmetic-shift g$fx1$6387$sFNhI (fx- g$fx2$6388$sFNhI)))))
   (g$fxrotate-bit-field$6311$sFNhI
     g$fxrotate-bit-field$6416$sFNhI
     (case-lambda
       ((g$n$6389$sFNhI g$start$6390$sFNhI g$end$6391$sFNhI g$count$6392$sFNhI)
        ((case-lambda
           ((g$width$6393$sFNhI)
            (if (g$fxpositive?$6295$sFNhI g$width$6393$sFNhI)
              ((case-lambda
                 ((g$count$6394$sFNhI g$field$6395$sFNhI)
                  (g$fxcopy-bit-field$6308$sFNhI
                    g$n$6389$sFNhI
                    g$start$6390$sFNhI
                    g$end$6391$sFNhI
                    (fxior
                      (g$fxarithmetic-shift-left$6309$sFNhI
                        g$field$6395$sFNhI
                        g$count$6394$sFNhI)
                      (g$fxarithmetic-shift-right$6310$sFNhI
                        g$field$6395$sFNhI
                        (fx- g$width$6393$sFNhI g$count$6394$sFNhI))))))
               (g$fxmod$6293$sFNhI g$count$6392$sFNhI g$width$6393$sFNhI)
               (g$fxbit-field$6307$sFNhI
                 g$n$6389$sFNhI
                 g$start$6390$sFNhI
                 g$end$6391$sFNhI))
              g$n$6389$sFNhI)))
         (fx- g$end$6391$sFNhI g$start$6390$sFNhI))))))
  (void))

(library-letrec* (ironscheme arithmetic flonums)
  ((g$fldiv-and-mod$6417$sFNhI
     g$fldiv-and-mod$6546$sFNhI
     (case-lambda
       ((g$fl1$6461$sFNhI g$fl2$6462$sFNhI)
        (call-with-values
          (case-lambda (() (div-and-mod g$fl1$6461$sFNhI g$fl2$6462$sFNhI)))
          (case-lambda
            ((g$n$6465$sFNhI g$d$6466$sFNhI)
             ((case-lambda
                ((g$d$6467$sFNhI g$n$6468$sFNhI)
                 (values (real->flonum g$n$6468$sFNhI) g$d$6467$sFNhI)))
              g$d$6466$sFNhI
              g$n$6465$sFNhI)))))))
   (g$fldiv0-and-mod0$6418$sFNhI
     g$fldiv0-and-mod0$6547$sFNhI
     (case-lambda
       ((g$fl1$6469$sFNhI g$fl2$6470$sFNhI)
        (call-with-values
          (case-lambda (() (div0-and-mod0 g$fl1$6469$sFNhI g$fl2$6470$sFNhI)))
          (case-lambda
            ((g$n$6473$sFNhI g$d$6474$sFNhI)
             ((case-lambda
                ((g$d$6475$sFNhI g$n$6476$sFNhI)
                 (values (real->flonum g$n$6476$sFNhI) g$d$6475$sFNhI)))
              g$d$6474$sFNhI
              g$n$6473$sFNhI)))))))
   (g$fldiv$6419$sFNhI
     g$fldiv$6548$sFNhI
     (case-lambda
       ((g$fl1$6477$sFNhI g$fl2$6478$sFNhI)
        (call-with-values
          (case-lambda
            (() (g$fldiv-and-mod$6417$sFNhI g$fl1$6477$sFNhI g$fl2$6478$sFNhI)))
          (case-lambda
            ((g$n$6481$sFNhI g$d$6482$sFNhI)
             ((case-lambda ((g$d$6483$sFNhI g$n$6484$sFNhI) g$n$6484$sFNhI))
              g$d$6482$sFNhI
              g$n$6481$sFNhI)))))))
   (g$fldiv0$6420$sFNhI
     g$fldiv0$6549$sFNhI
     (case-lambda
       ((g$fl1$6485$sFNhI g$fl2$6486$sFNhI)
        (call-with-values
          (case-lambda
            (()
             (g$fldiv0-and-mod0$6418$sFNhI g$fl1$6485$sFNhI g$fl2$6486$sFNhI)))
          (case-lambda
            ((g$n$6489$sFNhI g$d$6490$sFNhI)
             ((case-lambda ((g$d$6491$sFNhI g$n$6492$sFNhI) g$n$6492$sFNhI))
              g$d$6490$sFNhI
              g$n$6489$sFNhI)))))))
   (g$flmod$6421$sFNhI
     g$flmod$6550$sFNhI
     (case-lambda
       ((g$fl1$6493$sFNhI g$fl2$6494$sFNhI)
        (call-with-values
          (case-lambda
            (() (g$fldiv-and-mod$6417$sFNhI g$fl1$6493$sFNhI g$fl2$6494$sFNhI)))
          (case-lambda
            ((g$n$6497$sFNhI g$d$6498$sFNhI)
             ((case-lambda ((g$d$6499$sFNhI g$n$6500$sFNhI) g$d$6499$sFNhI))
              g$d$6498$sFNhI
              g$n$6497$sFNhI)))))))
   (g$flmod0$6422$sFNhI
     g$flmod0$6551$sFNhI
     (case-lambda
       ((g$fl1$6501$sFNhI g$fl2$6502$sFNhI)
        (call-with-values
          (case-lambda
            (()
             (g$fldiv0-and-mod0$6418$sFNhI g$fl1$6501$sFNhI g$fl2$6502$sFNhI)))
          (case-lambda
            ((g$n$6505$sFNhI g$d$6506$sFNhI)
             ((case-lambda ((g$d$6507$sFNhI g$n$6508$sFNhI) g$d$6507$sFNhI))
              g$d$6506$sFNhI
              g$n$6505$sFNhI)))))))
   (g$flinteger?$6423$sFNhI
     g$flinteger?$6552$sFNhI
     (case-lambda
       ((g$fl$6509$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6509$sFNhI))
            (assertion-violation 'flinteger? '"not a flonum" g$fl$6509$sFNhI)
            (void))
          (fl=? '0.0 (g$flmod$6421$sFNhI g$fl$6509$sFNhI '1.0))))))
   (g$flfinite?$6424$sFNhI
     g$flfinite?$6553$sFNhI
     (case-lambda
       ((g$fl$6510$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6510$sFNhI))
            (assertion-violation 'flfinite? '"not a flonum" g$fl$6510$sFNhI)
            (void))
          (not (g$flinfinite?$6425$sFNhI g$fl$6510$sFNhI))))))
   (g$flinfinite?$6425$sFNhI
     g$flinfinite?$6554$sFNhI
     (case-lambda
       ((g$fl$6511$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6511$sFNhI))
            (assertion-violation 'flinfinite? '"not a flonum" g$fl$6511$sFNhI)
            (void))
          (clr-call-internal 'system.double 'isinfinity '() g$fl$6511$sFNhI)))))
   (g$flnan?$6426$sFNhI
     g$flnan?$6555$sFNhI
     (case-lambda
       ((g$fl$6512$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6512$sFNhI))
            (assertion-violation 'flnan? '"not a flonum" g$fl$6512$sFNhI)
            (void))
          (clr-call-internal 'system.double 'isnan '() g$fl$6512$sFNhI)))))
   (g$flsin$6427$sFNhI
     g$flsin$6556$sFNhI
     (case-lambda
       ((g$fl$6513$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6513$sFNhI))
            (assertion-violation 'flsin '"not a flonum" g$fl$6513$sFNhI)
            (void))
          (clr-call-internal 'system.math 'sin '() g$fl$6513$sFNhI)))))
   (g$flcos$6428$sFNhI
     g$flcos$6557$sFNhI
     (case-lambda
       ((g$fl$6514$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6514$sFNhI))
            (assertion-violation 'flcos '"not a flonum" g$fl$6514$sFNhI)
            (void))
          (clr-call-internal 'system.math 'cos '() g$fl$6514$sFNhI)))))
   (g$fltan$6429$sFNhI
     g$fltan$6558$sFNhI
     (case-lambda
       ((g$fl$6515$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6515$sFNhI))
            (assertion-violation 'fltan '"not a flonum" g$fl$6515$sFNhI)
            (void))
          (clr-call-internal 'system.math 'tan '() g$fl$6515$sFNhI)))))
   (g$flasin$6430$sFNhI
     g$flasin$6559$sFNhI
     (case-lambda
       ((g$fl$6516$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6516$sFNhI))
            (assertion-violation 'flasin '"not a flonum" g$fl$6516$sFNhI)
            (void))
          (clr-call-internal 'system.math 'asin '() g$fl$6516$sFNhI)))))
   (g$flacos$6431$sFNhI
     g$flacos$6560$sFNhI
     (case-lambda
       ((g$fl$6517$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6517$sFNhI))
            (assertion-violation 'flacos '"not a flonum" g$fl$6517$sFNhI)
            (void))
          (clr-call-internal 'system.math 'acos '() g$fl$6517$sFNhI)))))
   (g$flatan$6432$sFNhI
     g$flatan$6561$sFNhI
     (case-lambda
       ((g$fl$6518$sFNhI)
        (clr-call-internal 'system.math 'atan '() g$fl$6518$sFNhI))
       ((g$fl1$6519$sFNhI g$fl2$6520$sFNhI)
        (clr-call-internal
          'system.math
          'atan2
          '()
          g$fl1$6519$sFNhI
          g$fl2$6520$sFNhI))))
   (g$fllog$6433$sFNhI
     g$fllog$6562$sFNhI
     (case-lambda
       ((g$fl$6521$sFNhI)
        (clr-call-internal 'system.math 'log '() g$fl$6521$sFNhI))
       ((g$fl1$6522$sFNhI g$fl2$6523$sFNhI)
        (clr-call-internal
          'system.math
          'log
          '()
          g$fl1$6522$sFNhI
          g$fl2$6523$sFNhI))))
   (g$flsqrt$6434$sFNhI
     g$flsqrt$6563$sFNhI
     (case-lambda
       ((g$fl$6524$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6524$sFNhI))
            (assertion-violation 'flsqrt '"not a flonum" g$fl$6524$sFNhI)
            (void))
          (clr-call-internal 'system.math 'sqrt '() g$fl$6524$sFNhI)))))
   (g$flexp$6435$sFNhI
     g$flexp$6564$sFNhI
     (case-lambda
       ((g$fl$6525$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6525$sFNhI))
            (assertion-violation 'flexp '"not a flonum" g$fl$6525$sFNhI)
            (void))
          (clr-call-internal 'system.math 'exp '() g$fl$6525$sFNhI)))))
   (g$flexpt$6436$sFNhI
     g$flexpt$6565$sFNhI
     (case-lambda
       ((g$fl$6526$sFNhI g$n$6527$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6526$sFNhI))
            (assertion-violation 'flexpt '"not a flonum" g$fl$6526$sFNhI)
            (void))
          (clr-call-internal
            'system.math
            'pow
            '()
            g$fl$6526$sFNhI
            g$n$6527$sFNhI)))))
   (g$flceiling$6437$sFNhI
     g$flceiling$6566$sFNhI
     (case-lambda
       ((g$fl$6528$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6528$sFNhI))
            (assertion-violation 'flceiling '"not a flonum" g$fl$6528$sFNhI)
            (void))
          (clr-call-internal
            'system.math
            '"ceiling(double)"
            '()
            g$fl$6528$sFNhI)))))
   (g$flfloor$6438$sFNhI
     g$flfloor$6567$sFNhI
     (case-lambda
       ((g$fl$6529$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6529$sFNhI))
            (assertion-violation 'flfloor '"not a flonum" g$fl$6529$sFNhI)
            (void))
          (clr-call-internal
            'system.math
            '"floor(double)"
            '()
            g$fl$6529$sFNhI)))))
   (g$fltruncate$6439$sFNhI
     g$fltruncate$6568$sFNhI
     (case-lambda
       ((g$fl$6530$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6530$sFNhI))
            (assertion-violation 'fltruncate '"not a flonum" g$fl$6530$sFNhI)
            (void))
          (clr-call-internal
            'system.math
            '"truncate(double)"
            '()
            g$fl$6530$sFNhI)))))
   (g$flround$6440$sFNhI
     g$flround$6569$sFNhI
     (case-lambda
       ((g$fl$6531$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6531$sFNhI))
            (assertion-violation 'flround '"not a flonum" g$fl$6531$sFNhI)
            (void))
          (clr-call-internal
            'system.math
            '"round(double)"
            '()
            g$fl$6531$sFNhI)))))
   (g$flabs$6441$sFNhI
     g$flabs$6570$sFNhI
     (case-lambda
       ((g$fl$6532$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$fl$6532$sFNhI))
            (assertion-violation 'flabs '"not a flonum" g$fl$6532$sFNhI)
            (void))
          (clr-call-internal
            'system.math
            '"abs(double)"
            '()
            g$fl$6532$sFNhI)))))
   (g$flpositive?$6442$sFNhI
     g$flpositive?$6571$sFNhI
     (case-lambda
       ((g$r$6533$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$r$6533$sFNhI))
            (assertion-violation 'flpositive? '"not a flonum" g$r$6533$sFNhI)
            (void))
          (fl<? '0.0 g$r$6533$sFNhI)))))
   (g$flnegative?$6443$sFNhI
     g$flnegative?$6572$sFNhI
     (case-lambda
       ((g$r$6534$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$r$6534$sFNhI))
            (assertion-violation 'flnegative? '"not a flonum" g$r$6534$sFNhI)
            (void))
          (fl>? '0.0 g$r$6534$sFNhI)))))
   (g$flzero?$6444$sFNhI
     g$flzero?$6573$sFNhI
     (case-lambda
       ((g$r$6535$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$r$6535$sFNhI))
            (assertion-violation 'flzero? '"not a flonum" g$r$6535$sFNhI)
            (void))
          (fl=? '0.0 g$r$6535$sFNhI)))))
   (g$fleven?$6445$sFNhI
     g$fleven?$6574$sFNhI
     (case-lambda
       ((g$n$6536$sFNhI)
        (begin
          (if (not (integer-valued? g$n$6536$sFNhI))
            (assertion-violation 'fleven? '"not integer valued" g$n$6536$sFNhI)
            (void))
          (fl=? '0.0 (g$flmod$6421$sFNhI g$n$6536$sFNhI '2.0))))))
   (g$flodd?$6446$sFNhI
     g$flodd?$6575$sFNhI
     (case-lambda
       ((g$n$6537$sFNhI)
        (begin
          (if (not (integer-valued? g$n$6537$sFNhI))
            (assertion-violation 'flodd? '"not integer valued" g$n$6537$sFNhI)
            (void))
          (fl=? '1.0 (g$flmod$6421$sFNhI g$n$6537$sFNhI '2.0))))))
   (g$flmax$6447$sFNhI
     g$flmax$6576$sFNhI
     (case-lambda
       ((g$a$6538$sFNhI . g$rest$6539$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$a$6538$sFNhI))
            (assertion-violation 'flmax '"not a flonum" g$a$6538$sFNhI)
            (void))
          (g$fold-left$5160$sFNhI
            (case-lambda
              ((g$a$6540$sFNhI g$b$6541$sFNhI)
               (if (fl<? g$a$6540$sFNhI g$b$6541$sFNhI)
                 g$b$6541$sFNhI
                 g$a$6540$sFNhI)))
            g$a$6538$sFNhI
            g$rest$6539$sFNhI)))))
   (g$flmin$6448$sFNhI
     g$flmin$6577$sFNhI
     (case-lambda
       ((g$a$6542$sFNhI . g$rest$6543$sFNhI)
        (begin
          (if (not (g$flonum?$5649$sFNhI g$a$6542$sFNhI))
            (assertion-violation 'flmin '"not a flonum" g$a$6542$sFNhI)
            (void))
          (g$fold-left$5160$sFNhI
            (case-lambda
              ((g$a$6544$sFNhI g$b$6545$sFNhI)
               (if (fl>? g$a$6544$sFNhI g$b$6545$sFNhI)
                 g$b$6545$sFNhI
                 g$a$6544$sFNhI)))
            g$a$6542$sFNhI
            g$rest$6543$sFNhI)))))
   (g$7458$6449$sFNhI
     g$7458$6578$sFNhI
     (make-record-type-descriptor
       '&no-infinities
       &implementation-restriction-rtd
       'g$7461$sFNhI
       '#f
       '#f
       '#()))
   (g$7460$6450$sFNhI g$7460$6579$sFNhI '#f)
   (g$7459$6451$sFNhI
     g$7459$6580$sFNhI
     (make-record-constructor-descriptor
       g$7458$6449$sFNhI
       &implementation-restriction-rcd
       g$7460$6450$sFNhI))
   (g$7457$6452$sFNhI
     g$7457$6581$sFNhI
     (record-predicate g$7458$6449$sFNhI))
   (g$make-no-infinities-violation$6453$sFNhI
     g$make-no-infinities-violation$6582$sFNhI
     (record-constructor g$7459$6451$sFNhI))
   (g$no-infinities-violation?$6454$sFNhI
     g$no-infinities-violation?$6583$sFNhI
     (condition-predicate g$7458$6449$sFNhI))
   (g$7472$6455$sFNhI
     g$7472$6584$sFNhI
     (make-record-type-descriptor
       '&no-nans
       &implementation-restriction-rtd
       'g$7475$sFNhI
       '#f
       '#f
       '#()))
   (g$7474$6456$sFNhI g$7474$6585$sFNhI '#f)
   (g$7473$6457$sFNhI
     g$7473$6586$sFNhI
     (make-record-constructor-descriptor
       g$7472$6455$sFNhI
       &implementation-restriction-rcd
       g$7474$6456$sFNhI))
   (g$7471$6458$sFNhI
     g$7471$6587$sFNhI
     (record-predicate g$7472$6455$sFNhI))
   (g$make-no-nans-violation$6459$sFNhI
     g$make-no-nans-violation$6588$sFNhI
     (record-constructor g$7473$6457$sFNhI))
   (g$no-nans-violation?$6460$sFNhI
     g$no-nans-violation?$6589$sFNhI
     (condition-predicate g$7472$6455$sFNhI)))
  (void))

(library-letrec* (ironscheme io conditions)
  ((g$7560$6590$sFNhI
     g$7560$6670$sFNhI
     (make-record-type-descriptor
       '&i/o
       &error-rtd
       'g$7563$sFNhI
       '#f
       '#f
       '#()))
   (g$7562$6591$sFNhI g$7562$6671$sFNhI '#f)
   (g$7561$6592$sFNhI
     g$7561$6672$sFNhI
     (make-record-constructor-descriptor
       g$7560$6590$sFNhI
       &error-rcd
       g$7562$6591$sFNhI))
   (g$7559$6593$sFNhI
     g$7559$6673$sFNhI
     (record-predicate g$7560$6590$sFNhI))
   (g$make-i/o-error$6594$sFNhI
     g$make-i/o-error$6674$sFNhI
     (record-constructor g$7561$6592$sFNhI))
   (g$i/o-error?$6595$sFNhI
     g$i/o-error?$6675$sFNhI
     (condition-predicate g$7560$6590$sFNhI))
   (g$7574$6596$sFNhI
     g$7574$6676$sFNhI
     (make-record-type-descriptor
       '&i/o-read
       g$7560$6590$sFNhI
       'g$7577$sFNhI
       '#f
       '#f
       '#()))
   (g$7576$6597$sFNhI g$7576$6677$sFNhI '#f)
   (g$7575$6598$sFNhI
     g$7575$6678$sFNhI
     (make-record-constructor-descriptor
       g$7574$6596$sFNhI
       g$7561$6592$sFNhI
       g$7576$6597$sFNhI))
   (g$7573$6599$sFNhI
     g$7573$6679$sFNhI
     (record-predicate g$7574$6596$sFNhI))
   (g$make-i/o-read-error$6600$sFNhI
     g$make-i/o-read-error$6680$sFNhI
     (record-constructor g$7575$6598$sFNhI))
   (g$i/o-read-error?$6601$sFNhI
     g$i/o-read-error?$6681$sFNhI
     (condition-predicate g$7574$6596$sFNhI))
   (g$7588$6602$sFNhI
     g$7588$6682$sFNhI
     (make-record-type-descriptor
       '&i/o-write
       g$7560$6590$sFNhI
       'g$7591$sFNhI
       '#f
       '#f
       '#()))
   (g$7590$6603$sFNhI g$7590$6683$sFNhI '#f)
   (g$7589$6604$sFNhI
     g$7589$6684$sFNhI
     (make-record-constructor-descriptor
       g$7588$6602$sFNhI
       g$7561$6592$sFNhI
       g$7590$6603$sFNhI))
   (g$7587$6605$sFNhI
     g$7587$6685$sFNhI
     (record-predicate g$7588$6602$sFNhI))
   (g$make-i/o-write-error$6606$sFNhI
     g$make-i/o-write-error$6686$sFNhI
     (record-constructor g$7589$6604$sFNhI))
   (g$i/o-write-error?$6607$sFNhI
     g$i/o-write-error?$6687$sFNhI
     (condition-predicate g$7588$6602$sFNhI))
   (g$7603$6608$sFNhI
     g$7603$6688$sFNhI
     (make-record-type-descriptor
       '&i/o-invalid-position
       g$7560$6590$sFNhI
       'g$7606$sFNhI
       '#f
       '#f
       '#((immutable position))))
   (g$7605$6609$sFNhI g$7605$6689$sFNhI '#f)
   (g$7604$6610$sFNhI
     g$7604$6690$sFNhI
     (make-record-constructor-descriptor
       g$7603$6608$sFNhI
       g$7561$6592$sFNhI
       g$7605$6609$sFNhI))
   (g$7602$6611$sFNhI
     g$7602$6691$sFNhI
     (record-predicate g$7603$6608$sFNhI))
   (g$make-i/o-invalid-position-error$6612$sFNhI
     g$make-i/o-invalid-position-error$6692$sFNhI
     (record-constructor g$7604$6610$sFNhI))
   (g$7601$6613$sFNhI
     g$7601$6693$sFNhI
     (record-accessor g$7603$6608$sFNhI '0))
   (g$i/o-invalid-position-error?$6614$sFNhI
     g$i/o-invalid-position-error?$6694$sFNhI
     (condition-predicate g$7603$6608$sFNhI))
   (g$i/o-error-position$6615$sFNhI
     g$i/o-error-position$6695$sFNhI
     (condition-accessor g$7603$6608$sFNhI g$7601$6613$sFNhI))
   (g$7620$6616$sFNhI
     g$7620$6696$sFNhI
     (make-record-type-descriptor
       '&i/o-filename
       g$7560$6590$sFNhI
       'g$7623$sFNhI
       '#f
       '#f
       '#((immutable filename))))
   (g$7622$6617$sFNhI g$7622$6697$sFNhI '#f)
   (g$7621$6618$sFNhI
     g$7621$6698$sFNhI
     (make-record-constructor-descriptor
       g$7620$6616$sFNhI
       g$7561$6592$sFNhI
       g$7622$6617$sFNhI))
   (g$7619$6619$sFNhI
     g$7619$6699$sFNhI
     (record-predicate g$7620$6616$sFNhI))
   (g$make-i/o-filename-error$6620$sFNhI
     g$make-i/o-filename-error$6700$sFNhI
     (record-constructor g$7621$6618$sFNhI))
   (g$7618$6621$sFNhI
     g$7618$6701$sFNhI
     (record-accessor g$7620$6616$sFNhI '0))
   (g$i/o-filename-error?$6622$sFNhI
     g$i/o-filename-error?$6702$sFNhI
     (condition-predicate g$7620$6616$sFNhI))
   (g$i/o-error-filename$6623$sFNhI
     g$i/o-error-filename$6703$sFNhI
     (condition-accessor g$7620$6616$sFNhI g$7618$6621$sFNhI))
   (g$7636$6624$sFNhI
     g$7636$6704$sFNhI
     (make-record-type-descriptor
       '&i/o-file-protection
       g$7620$6616$sFNhI
       'g$7639$sFNhI
       '#f
       '#f
       '#()))
   (g$7638$6625$sFNhI g$7638$6705$sFNhI '#f)
   (g$7637$6626$sFNhI
     g$7637$6706$sFNhI
     (make-record-constructor-descriptor
       g$7636$6624$sFNhI
       g$7621$6618$sFNhI
       g$7638$6625$sFNhI))
   (g$7635$6627$sFNhI
     g$7635$6707$sFNhI
     (record-predicate g$7636$6624$sFNhI))
   (g$make-i/o-file-protection-error$6628$sFNhI
     g$make-i/o-file-protection-error$6708$sFNhI
     (record-constructor g$7637$6626$sFNhI))
   (g$i/o-file-protection-error?$6629$sFNhI
     g$i/o-file-protection-error?$6709$sFNhI
     (condition-predicate g$7636$6624$sFNhI))
   (g$7650$6630$sFNhI
     g$7650$6710$sFNhI
     (make-record-type-descriptor
       '&i/o-file-is-read-only
       g$7636$6624$sFNhI
       'g$7653$sFNhI
       '#f
       '#f
       '#()))
   (g$7652$6631$sFNhI g$7652$6711$sFNhI '#f)
   (g$7651$6632$sFNhI
     g$7651$6712$sFNhI
     (make-record-constructor-descriptor
       g$7650$6630$sFNhI
       g$7637$6626$sFNhI
       g$7652$6631$sFNhI))
   (g$7649$6633$sFNhI
     g$7649$6713$sFNhI
     (record-predicate g$7650$6630$sFNhI))
   (g$make-i/o-file-is-read-only-error$6634$sFNhI
     g$make-i/o-file-is-read-only-error$6714$sFNhI
     (record-constructor g$7651$6632$sFNhI))
   (g$i/o-file-is-read-only-error?$6635$sFNhI
     g$i/o-file-is-read-only-error?$6715$sFNhI
     (condition-predicate g$7650$6630$sFNhI))
   (g$7664$6636$sFNhI
     g$7664$6716$sFNhI
     (make-record-type-descriptor
       '&i/o-file-already-exists
       g$7620$6616$sFNhI
       'g$7667$sFNhI
       '#f
       '#f
       '#()))
   (g$7666$6637$sFNhI g$7666$6717$sFNhI '#f)
   (g$7665$6638$sFNhI
     g$7665$6718$sFNhI
     (make-record-constructor-descriptor
       g$7664$6636$sFNhI
       g$7621$6618$sFNhI
       g$7666$6637$sFNhI))
   (g$7663$6639$sFNhI
     g$7663$6719$sFNhI
     (record-predicate g$7664$6636$sFNhI))
   (g$make-i/o-file-already-exists-error$6640$sFNhI
     g$make-i/o-file-already-exists-error$6720$sFNhI
     (record-constructor g$7665$6638$sFNhI))
   (g$i/o-file-already-exists-error?$6641$sFNhI
     g$i/o-file-already-exists-error?$6721$sFNhI
     (condition-predicate g$7664$6636$sFNhI))
   (g$7678$6642$sFNhI
     g$7678$6722$sFNhI
     (make-record-type-descriptor
       '&i/o-file-does-not-exist
       g$7620$6616$sFNhI
       'g$7681$sFNhI
       '#f
       '#f
       '#()))
   (g$7680$6643$sFNhI g$7680$6723$sFNhI '#f)
   (g$7679$6644$sFNhI
     g$7679$6724$sFNhI
     (make-record-constructor-descriptor
       g$7678$6642$sFNhI
       g$7621$6618$sFNhI
       g$7680$6643$sFNhI))
   (g$7677$6645$sFNhI
     g$7677$6725$sFNhI
     (record-predicate g$7678$6642$sFNhI))
   (g$make-i/o-file-does-not-exist-error$6646$sFNhI
     g$make-i/o-file-does-not-exist-error$6726$sFNhI
     (record-constructor g$7679$6644$sFNhI))
   (g$i/o-file-does-not-exist-error?$6647$sFNhI
     g$i/o-file-does-not-exist-error?$6727$sFNhI
     (condition-predicate g$7678$6642$sFNhI))
   (g$7693$6648$sFNhI
     g$7693$6728$sFNhI
     (make-record-type-descriptor
       '&i/o-port
       g$7560$6590$sFNhI
       'g$7696$sFNhI
       '#f
       '#f
       '#((immutable port))))
   (g$7695$6649$sFNhI g$7695$6729$sFNhI '#f)
   (g$7694$6650$sFNhI
     g$7694$6730$sFNhI
     (make-record-constructor-descriptor
       g$7693$6648$sFNhI
       g$7561$6592$sFNhI
       g$7695$6649$sFNhI))
   (g$7692$6651$sFNhI
     g$7692$6731$sFNhI
     (record-predicate g$7693$6648$sFNhI))
   (g$make-i/o-port-error$6652$sFNhI
     g$make-i/o-port-error$6732$sFNhI
     (record-constructor g$7694$6650$sFNhI))
   (g$7691$6653$sFNhI
     g$7691$6733$sFNhI
     (record-accessor g$7693$6648$sFNhI '0))
   (g$i/o-port-error?$6654$sFNhI
     g$i/o-port-error?$6734$sFNhI
     (condition-predicate g$7693$6648$sFNhI))
   (g$i/o-error-port$6655$sFNhI
     g$i/o-error-port$6735$sFNhI
     (condition-accessor g$7693$6648$sFNhI g$7691$6653$sFNhI))
   (g$7709$6656$sFNhI
     g$7709$6736$sFNhI
     (make-record-type-descriptor
       '&i/o-decoding
       g$7693$6648$sFNhI
       'g$7712$sFNhI
       '#f
       '#f
       '#()))
   (g$7711$6657$sFNhI g$7711$6737$sFNhI '#f)
   (g$7710$6658$sFNhI
     g$7710$6738$sFNhI
     (make-record-constructor-descriptor
       g$7709$6656$sFNhI
       g$7694$6650$sFNhI
       g$7711$6657$sFNhI))
   (g$7708$6659$sFNhI
     g$7708$6739$sFNhI
     (record-predicate g$7709$6656$sFNhI))
   (g$make-i/o-decoding-error$6660$sFNhI
     g$make-i/o-decoding-error$6740$sFNhI
     (record-constructor g$7710$6658$sFNhI))
   (g$i/o-decoding-error?$6661$sFNhI
     g$i/o-decoding-error?$6741$sFNhI
     (condition-predicate g$7709$6656$sFNhI))
   (g$7724$6662$sFNhI
     g$7724$6742$sFNhI
     (make-record-type-descriptor
       '&i/o-encoding
       g$7693$6648$sFNhI
       'g$7727$sFNhI
       '#f
       '#f
       '#((immutable char))))
   (g$7726$6663$sFNhI g$7726$6743$sFNhI '#f)
   (g$7725$6664$sFNhI
     g$7725$6744$sFNhI
     (make-record-constructor-descriptor
       g$7724$6662$sFNhI
       g$7694$6650$sFNhI
       g$7726$6663$sFNhI))
   (g$7723$6665$sFNhI
     g$7723$6745$sFNhI
     (record-predicate g$7724$6662$sFNhI))
   (g$make-i/o-encoding-error$6666$sFNhI
     g$make-i/o-encoding-error$6746$sFNhI
     (record-constructor g$7725$6664$sFNhI))
   (g$7722$6667$sFNhI
     g$7722$6747$sFNhI
     (record-accessor g$7724$6662$sFNhI '0))
   (g$i/o-encoding-error?$6668$sFNhI
     g$i/o-encoding-error?$6748$sFNhI
     (condition-predicate g$7724$6662$sFNhI))
   (g$i/o-encoding-error-char$6669$sFNhI
     g$i/o-encoding-error-char$6749$sFNhI
     (condition-accessor g$7724$6662$sFNhI g$7722$6667$sFNhI)))
  (void))

(library-letrec* (ironscheme io ports)
  ((g$using$6751$sFNhI
     g$using$6771$sFNhI
     (clr-using-internal 'ironscheme.runtime))
   (g$put-datum$6752$sFNhI
     g$put-datum$6772$sFNhI
     (case-lambda
       ((g$p$6760$sFNhI g$datum$6761$sFNhI)
        (write g$datum$6761$sFNhI g$p$6760$sFNhI))))
   (g$get-datum$6753$sFNhI g$get-datum$6773$sFNhI read)
   (g$get-output-string$6754$sFNhI
     g$get-output-string$6774$sFNhI
     (case-lambda
       ((g$port$6762$sFNhI)
        (clr-call-internal
          'ironscheme.runtime.stringwriter
          'getbuffer
          g$port$6762$sFNhI))))
   (g$open-output-string$6755$sFNhI
     g$open-output-string$6775$sFNhI
     (case-lambda (() (clr-new-internal 'ironscheme.runtime.stringwriter))))
   (g$open-string-output-port$6756$sFNhI
     g$open-string-output-port$6776$sFNhI
     (case-lambda
       (()
        ((case-lambda
           ((g$p$6763$sFNhI)
            (values
              g$p$6763$sFNhI
              (case-lambda
                (() (g$get-output-string$6754$sFNhI g$p$6763$sFNhI))))))
         (g$open-output-string$6755$sFNhI)))))
   (g$port?$6757$sFNhI
     g$port?$6777$sFNhI
     (case-lambda
       ((g$obj$6764$sFNhI)
        ((case-lambda
           ((g$t$6765$sFNhI)
            (if g$t$6765$sFNhI
              g$t$6765$sFNhI
              (begin '#f (binary-port? g$obj$6764$sFNhI)))))
         (textual-port? g$obj$6764$sFNhI)))))
   (g$call-with-string-output-port$6758$sFNhI
     g$call-with-string-output-port$6778$sFNhI
     (case-lambda
       ((g$proc$6766$sFNhI)
        ((case-lambda
           ((g$p$6767$sFNhI)
            (begin
              (g$call-with-port$6759$sFNhI g$p$6767$sFNhI g$proc$6766$sFNhI)
              (g$get-output-string$6754$sFNhI g$p$6767$sFNhI))))
         (g$open-output-string$6755$sFNhI)))))
   (g$call-with-port$6759$sFNhI
     g$call-with-port$6779$sFNhI
     (case-lambda
       ((g$port$6768$sFNhI g$proc$6769$sFNhI)
        ((case-lambda
           ((g$r$6770$sFNhI)
            (begin (close-port g$port$6768$sFNhI) g$r$6770$sFNhI)))
         (g$proc$6769$sFNhI g$port$6768$sFNhI))))))
  (void))

(library-letrec* (ironscheme io simple)
  ((g$peek-char$6780$sFNhI
     g$peek-char$6822$sFNhI
     (case-lambda
       (() (g$peek-char$6780$sFNhI (current-input-port)))
       ((g$port$6794$sFNhI) (lookahead-char g$port$6794$sFNhI))))
   (g$read-char$6781$sFNhI
     g$read-char$6823$sFNhI
     (case-lambda
       (() (g$read-char$6781$sFNhI (current-input-port)))
       ((g$port$6795$sFNhI) (get-char g$port$6795$sFNhI))))
   (g$write-char$6782$sFNhI
     g$write-char$6824$sFNhI
     (case-lambda
       ((g$chr$6796$sFNhI)
        (g$write-char$6782$sFNhI g$chr$6796$sFNhI (current-output-port)))
       ((g$chr$6797$sFNhI g$port$6798$sFNhI)
        (put-char g$port$6798$sFNhI g$chr$6797$sFNhI))))
   (g$with-input-from-file$6789$sFNhI
     g$with-input-from-file$6825$sFNhI
     (case-lambda
       ((g$filename$6799$sFNhI g$thunk$6800$sFNhI)
        ((case-lambda
           ((g$current-input-port$6803$sFNhI g$t$6804$sFNhI)
            ((case-lambda
               ((g$swap$6805$sFNhI)
                (dynamic-wind
                  g$swap$6805$sFNhI
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6800$sFNhI)))
                       (case-lambda
                         (() (close-input-port (current-input-port)))))))
                  g$swap$6805$sFNhI)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6806$sFNhI)
                    (begin
                      (g$current-input-port$6803$sFNhI g$t$6804$sFNhI)
                      (set! g$t$6804$sFNhI g$t$6806$sFNhI))))
                 (g$current-input-port$6803$sFNhI)))))))
         current-input-port
         (open-input-file g$filename$6799$sFNhI)))))
   (g$with-output-to-file$6790$sFNhI
     g$with-output-to-file$6826$sFNhI
     (case-lambda
       ((g$filename$6807$sFNhI g$thunk$6808$sFNhI)
        ((case-lambda
           ((g$current-output-port$6811$sFNhI g$t$6812$sFNhI)
            ((case-lambda
               ((g$swap$6813$sFNhI)
                (dynamic-wind
                  g$swap$6813$sFNhI
                  (case-lambda
                    (()
                     (dynamic-wind
                       (case-lambda (() '#f))
                       (case-lambda (() (g$thunk$6808$sFNhI)))
                       (case-lambda
                         (() (close-output-port (current-output-port)))))))
                  g$swap$6813$sFNhI)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$6814$sFNhI)
                    (begin
                      (g$current-output-port$6811$sFNhI g$t$6812$sFNhI)
                      (set! g$t$6812$sFNhI g$t$6814$sFNhI))))
                 (g$current-output-port$6811$sFNhI)))))))
         current-output-port
         (open-output-file g$filename$6807$sFNhI)))))
   (g$call-with-input-file$6791$sFNhI
     g$call-with-input-file$6827$sFNhI
     (case-lambda
       ((g$filename$6815$sFNhI g$proc$6816$sFNhI)
        ((case-lambda
           ((g$p$6817$sFNhI)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6816$sFNhI g$p$6817$sFNhI)))
              (case-lambda (() (close-input-port g$p$6817$sFNhI))))))
         (open-input-file g$filename$6815$sFNhI)))))
   (g$call-with-output-file$6792$sFNhI
     g$call-with-output-file$6828$sFNhI
     (case-lambda
       ((g$filename$6818$sFNhI g$proc$6819$sFNhI)
        ((case-lambda
           ((g$p$6820$sFNhI)
            (dynamic-wind
              (case-lambda (() '#f))
              (case-lambda (() (g$proc$6819$sFNhI g$p$6820$sFNhI)))
              (case-lambda (() (close-output-port g$p$6820$sFNhI))))))
         (open-output-file g$filename$6818$sFNhI)))))
   (g$newline$6793$sFNhI
     g$newline$6829$sFNhI
     (case-lambda
       (() (g$newline$6793$sFNhI (current-output-port)))
       ((g$port$6821$sFNhI) (display '"
" g$port$6821$sFNhI)))))
  (void))

(library-letrec* (ironscheme records inspection) () (void))

(library-letrec* (ironscheme records procedural) () (void))

(library-letrec* (ironscheme records syntactic) () (void))

(library-letrec* (ironscheme enums)
  ((g$7813$6830$sFNhI
     g$7813$6939$sFNhI
     (make-record-type-descriptor
       'enum
       '#f
       '#f
       '#f
       '#f
       '#((immutable value) (immutable info))))
   (g$7815$6831$sFNhI g$7815$6940$sFNhI '#f)
   (g$7814$6832$sFNhI
     g$7814$6941$sFNhI
     (make-record-constructor-descriptor
       g$7813$6830$sFNhI
       '#f
       g$7815$6831$sFNhI))
   (g$enum?$6833$sFNhI
     g$enum?$6942$sFNhI
     (record-predicate g$7813$6830$sFNhI))
   (g$make-enum$6834$sFNhI
     g$make-enum$6943$sFNhI
     (record-constructor g$7814$6832$sFNhI))
   (g$enum-value$6835$sFNhI
     g$enum-value$6944$sFNhI
     (record-accessor g$7813$6830$sFNhI '0))
   (g$enum-info$6836$sFNhI
     g$enum-info$6945$sFNhI
     (record-accessor g$7813$6830$sFNhI '1))
   (g$7826$6837$sFNhI
     g$7826$6946$sFNhI
     (make-record-type-descriptor
       'enum-universe
       '#f
       '#f
       '#f
       '#f
       '#((immutable id)
          (immutable symbols)
          (immutable mapping)
          (immutable value))))
   (g$7828$6838$sFNhI g$7828$6947$sFNhI '#f)
   (g$7827$6839$sFNhI
     g$7827$6948$sFNhI
     (make-record-constructor-descriptor
       g$7826$6837$sFNhI
       '#f
       g$7828$6838$sFNhI))
   (g$enum-universe?$6840$sFNhI
     g$enum-universe?$6949$sFNhI
     (record-predicate g$7826$6837$sFNhI))
   (g$make-enum-universe$6841$sFNhI
     g$make-enum-universe$6950$sFNhI
     (record-constructor g$7827$6839$sFNhI))
   (g$enum-universe-id$6842$sFNhI
     g$enum-universe-id$6951$sFNhI
     (record-accessor g$7826$6837$sFNhI '0))
   (g$enum-universe-symbols$6843$sFNhI
     g$enum-universe-symbols$6952$sFNhI
     (record-accessor g$7826$6837$sFNhI '1))
   (g$enum-universe-mapping$6844$sFNhI
     g$enum-universe-mapping$6953$sFNhI
     (record-accessor g$7826$6837$sFNhI '2))
   (g$enum-universe-value$6845$sFNhI
     g$enum-universe-value$6954$sFNhI
     (record-accessor g$7826$6837$sFNhI '3))
   (g$enum-type=?$6846$sFNhI
     g$enum-type=?$6955$sFNhI
     (case-lambda
       ((g$enumset1$6868$sFNhI g$enumset2$6869$sFNhI)
        (eq? (g$enum-universe-id$6842$sFNhI
               (g$enum-info$6836$sFNhI g$enumset1$6868$sFNhI))
             (g$enum-universe-id$6842$sFNhI
               (g$enum-info$6836$sFNhI g$enumset2$6869$sFNhI))))))
   (g$get-symbols$6847$sFNhI
     g$get-symbols$6956$sFNhI
     (case-lambda
       ((g$enumset$6870$sFNhI)
        (g$enum-universe-symbols$6843$sFNhI
          (g$enum-info$6836$sFNhI g$enumset$6870$sFNhI)))))
   (g$get-value$6848$sFNhI
     g$get-value$6957$sFNhI
     (case-lambda
       ((g$enumset$6871$sFNhI g$s$6872$sFNhI)
        (g$hashtable-ref$5747$sFNhI
          (g$enum-universe-mapping$6844$sFNhI
            (g$enum-info$6836$sFNhI g$enumset$6871$sFNhI))
          g$s$6872$sFNhI
          '#f))))
   (g$assert-enum$6849$sFNhI
     g$assert-enum$6958$sFNhI
     (case-lambda
       ((g$who$6873$sFNhI g$enumset$6874$sFNhI)
        (if (not (g$enum?$6833$sFNhI g$enumset$6874$sFNhI))
          (assertion-violation
            g$who$6873$sFNhI
            '"not an enumeration"
            g$enumset$6874$sFNhI)
          (void)))))
   (g$make-info$6850$sFNhI
     g$make-info$6959$sFNhI
     (case-lambda
       ((g$symbols$6875$sFNhI)
        ((case-lambda
           ((g$ht$6876$sFNhI)
            ((letrec ((g$f$6877$sFNhI
                        (case-lambda
                          ((g$s$6878$sFNhI g$a$6879$sFNhI g$mask$6880$sFNhI)
                           (if (null? g$s$6878$sFNhI)
                             (values
                               (reverse! g$a$6879$sFNhI)
                               g$ht$6876$sFNhI
                               (- g$mask$6880$sFNhI '1))
                             ((case-lambda
                                ((g$n$6881$sFNhI)
                                 (if (g$symbol?$5645$sFNhI g$n$6881$sFNhI)
                                   (if (g$hashtable-contains?$5750$sFNhI
                                         g$ht$6876$sFNhI
                                         g$n$6881$sFNhI)
                                     (g$f$6877$sFNhI
                                       (cdr g$s$6878$sFNhI)
                                       g$a$6879$sFNhI
                                       g$mask$6880$sFNhI)
                                     (begin
                                       (g$hashtable-set!$5748$sFNhI
                                         g$ht$6876$sFNhI
                                         g$n$6881$sFNhI
                                         g$mask$6880$sFNhI)
                                       (g$f$6877$sFNhI
                                         (cdr g$s$6878$sFNhI)
                                         (cons g$n$6881$sFNhI g$a$6879$sFNhI)
                                         (g$bitwise-arithmetic-shift-left$6288$sFNhI
                                           g$mask$6880$sFNhI
                                           '1))))
                                   (assertion-violation
                                     'make-enumeration
                                     '"not a symbol"
                                     g$n$6881$sFNhI))))
                              (car g$s$6878$sFNhI)))))))
               g$f$6877$sFNhI)
             g$symbols$6875$sFNhI
             '()
             '1)))
         (g$make-eq-hashtable$5744$sFNhI)))))
   (g$make-name$6851$sFNhI
     g$make-name$6960$sFNhI
     (case-lambda
       ((g$symbols$6882$sFNhI)
        (string->symbol (g$format$6999$sFNhI '"~a" g$symbols$6882$sFNhI)))))
   (g$make-enumeration$6852$sFNhI
     g$make-enumeration$6961$sFNhI
     (case-lambda
       ((g$symbols$6883$sFNhI)
        (call-with-values
          (case-lambda (() (g$make-info$6850$sFNhI g$symbols$6883$sFNhI)))
          (case-lambda
            ((g$s$6887$sFNhI g$mapping$6888$sFNhI g$mask$6889$sFNhI)
             ((case-lambda
                ((g$mask$6890$sFNhI g$mapping$6891$sFNhI g$s$6892$sFNhI)
                 (g$make-enum$6834$sFNhI
                   g$mask$6890$sFNhI
                   (g$make-enum-universe$6841$sFNhI
                     (g$make-name$6851$sFNhI g$s$6892$sFNhI)
                     g$s$6892$sFNhI
                     g$mapping$6891$sFNhI
                     g$mask$6890$sFNhI))))
              g$mask$6889$sFNhI
              g$mapping$6888$sFNhI
              g$s$6887$sFNhI)))))))
   (g$enum-set-universe$6853$sFNhI
     g$enum-set-universe$6962$sFNhI
     (case-lambda
       ((g$enumset$6893$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-universe g$enumset$6893$sFNhI)
          ((case-lambda
             ((g$ei$6894$sFNhI)
              (g$make-enum$6834$sFNhI
                (g$enum-universe-value$6845$sFNhI g$ei$6894$sFNhI)
                g$ei$6894$sFNhI)))
           (g$enum-info$6836$sFNhI g$enumset$6893$sFNhI))))))
   (g$enum-set-indexer$6854$sFNhI
     g$enum-set-indexer$6963$sFNhI
     (case-lambda
       ((g$enumset$6895$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-indexer g$enumset$6895$sFNhI)
          (case-lambda
            ((g$symbol$6896$sFNhI)
             (begin
               (if (not (g$symbol?$5645$sFNhI g$symbol$6896$sFNhI))
                 (assertion-violation
                   'enum-set-indexer
                   '"not a symbol"
                   g$symbol$6896$sFNhI)
                 (void))
               ((case-lambda
                  ((g$v$6897$sFNhI)
                   (if g$v$6897$sFNhI
                     (- (bitwise-length g$v$6897$sFNhI) '1)
                     '#f)))
                (g$get-value$6848$sFNhI
                  g$enumset$6895$sFNhI
                  g$symbol$6896$sFNhI)))))))))
   (g$enum-set-constructor$6855$sFNhI
     g$enum-set-constructor$6964$sFNhI
     (case-lambda
       ((g$enumset$6898$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-constructor g$enumset$6898$sFNhI)
          (case-lambda
            ((g$symbols$6899$sFNhI)
             ((letrec ((g$f$6900$sFNhI
                         (case-lambda
                           ((g$v$6901$sFNhI g$s$6902$sFNhI)
                            (if (null? g$s$6902$sFNhI)
                              (g$make-enum$6834$sFNhI
                                g$v$6901$sFNhI
                                (g$enum-info$6836$sFNhI g$enumset$6898$sFNhI))
                              ((case-lambda
                                 ((g$n$6903$sFNhI)
                                  (if (g$symbol?$5645$sFNhI g$n$6903$sFNhI)
                                    ((case-lambda
                                       ((g$v*$6904$sFNhI)
                                        (if g$v*$6904$sFNhI
                                          (g$f$6900$sFNhI
                                            (bitwise-ior
                                              g$v$6901$sFNhI
                                              g$v*$6904$sFNhI)
                                            (cdr g$s$6902$sFNhI))
                                          (assertion-violation
                                            'enum-set-constructor
                                            '"not a member of enum-set"
                                            g$n$6903$sFNhI))))
                                     (g$get-value$6848$sFNhI
                                       g$enumset$6898$sFNhI
                                       g$n$6903$sFNhI))
                                    (assertion-violation
                                      'enum-set-constructor
                                      '"not a symbol"
                                      g$n$6903$sFNhI))))
                               (car g$s$6902$sFNhI)))))))
                g$f$6900$sFNhI)
              '0
              g$symbols$6899$sFNhI)))))))
   (g$enum-set->list$6856$sFNhI
     g$enum-set->list$6965$sFNhI
     (case-lambda
       ((g$enumset$6905$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set->list g$enumset$6905$sFNhI)
          ((case-lambda
             ((g$value$6906$sFNhI)
              ((letrec ((g$f$6907$sFNhI
                          (case-lambda
                            ((g$s$6908$sFNhI g$l$6909$sFNhI)
                             (if (null? g$s$6908$sFNhI)
                               (reverse! g$l$6909$sFNhI)
                               (if (g$zero?$5683$sFNhI
                                     (bitwise-and
                                       (g$get-value$6848$sFNhI
                                         g$enumset$6905$sFNhI
                                         (car g$s$6908$sFNhI))
                                       g$value$6906$sFNhI))
                                 (g$f$6907$sFNhI
                                   (cdr g$s$6908$sFNhI)
                                   g$l$6909$sFNhI)
                                 (g$f$6907$sFNhI
                                   (cdr g$s$6908$sFNhI)
                                   (cons
                                     (car g$s$6908$sFNhI)
                                     g$l$6909$sFNhI))))))))
                 g$f$6907$sFNhI)
               (g$get-symbols$6847$sFNhI g$enumset$6905$sFNhI)
               '())))
           (g$enum-value$6835$sFNhI g$enumset$6905$sFNhI))))))
   (g$enum-set-member?$6857$sFNhI
     g$enum-set-member?$6966$sFNhI
     (case-lambda
       ((g$symbol$6910$sFNhI g$enumset$6911$sFNhI)
        (begin
          (if (not (g$symbol?$5645$sFNhI g$symbol$6910$sFNhI))
            (assertion-violation
              'enum-set-member?
              '"not a symbol"
              g$symbol$6910$sFNhI)
            (void))
          (g$assert-enum$6849$sFNhI 'enum-set-member? g$enumset$6911$sFNhI)
          ((case-lambda
             ((g$v$6912$sFNhI)
              (if g$v$6912$sFNhI
                (not (g$zero?$5683$sFNhI
                       (bitwise-and
                         g$v$6912$sFNhI
                         (g$enum-value$6835$sFNhI g$enumset$6911$sFNhI))))
                '#f)))
           (g$get-value$6848$sFNhI
             g$enumset$6911$sFNhI
             g$symbol$6910$sFNhI))))))
   (g$enum-set-subset?$6858$sFNhI
     g$enum-set-subset?$6967$sFNhI
     (case-lambda
       ((g$enumset1$6913$sFNhI g$enumset2$6914$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-subset? g$enumset1$6913$sFNhI)
          (g$assert-enum$6849$sFNhI 'enum-set-subset? g$enumset2$6914$sFNhI)
          ((case-lambda
             ((g$v1$6915$sFNhI g$v2$6916$sFNhI)
              (if (g$enum-type=?$6846$sFNhI
                    g$enumset1$6913$sFNhI
                    g$enumset2$6914$sFNhI)
                (= (bitwise-and g$v1$6915$sFNhI g$v2$6916$sFNhI)
                   g$v1$6915$sFNhI)
                ((letrec ((g$f$6917$sFNhI
                            (case-lambda
                              ((g$s$6918$sFNhI)
                               (if (null? g$s$6918$sFNhI)
                                 '#t
                                 ((case-lambda
                                    ((g$v1*$6919$sFNhI g$v2*$6920$sFNhI)
                                     (if g$v2*$6920$sFNhI
                                       ((case-lambda
                                          ((g$has1$6921$sFNhI g$has2$6922$sFNhI)
                                           (if (if g$has1$6921$sFNhI
                                                 (begin
                                                   '#f
                                                   (not g$has2$6922$sFNhI))
                                                 '#f)
                                             '#f
                                             (g$f$6917$sFNhI
                                               (cdr g$s$6918$sFNhI)))))
                                        (not (g$zero?$5683$sFNhI
                                               (bitwise-and
                                                 g$v1$6915$sFNhI
                                                 g$v1*$6919$sFNhI)))
                                        (not (g$zero?$5683$sFNhI
                                               (bitwise-and
                                                 g$v2$6916$sFNhI
                                                 g$v2*$6920$sFNhI))))
                                       '#f)))
                                  (g$get-value$6848$sFNhI
                                    g$enumset1$6913$sFNhI
                                    (car g$s$6918$sFNhI))
                                  (g$get-value$6848$sFNhI
                                    g$enumset2$6914$sFNhI
                                    (car g$s$6918$sFNhI))))))))
                   g$f$6917$sFNhI)
                 (g$get-symbols$6847$sFNhI g$enumset1$6913$sFNhI)))))
           (g$enum-value$6835$sFNhI g$enumset1$6913$sFNhI)
           (g$enum-value$6835$sFNhI g$enumset2$6914$sFNhI))))))
   (g$enum-set=?$6859$sFNhI
     g$enum-set=?$6968$sFNhI
     (case-lambda
       ((g$enumset1$6923$sFNhI g$enumset2$6924$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set=? g$enumset1$6923$sFNhI)
          (g$assert-enum$6849$sFNhI 'enum-set=? g$enumset2$6924$sFNhI)
          (if (g$enum-set-subset?$6858$sFNhI
                g$enumset1$6923$sFNhI
                g$enumset2$6924$sFNhI)
            (begin
              '#f
              (g$enum-set-subset?$6858$sFNhI
                g$enumset2$6924$sFNhI
                g$enumset1$6923$sFNhI))
            '#f)))))
   (g$enum-set-union$6860$sFNhI
     g$enum-set-union$6969$sFNhI
     (case-lambda
       ((g$enumset1$6925$sFNhI g$enumset2$6926$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-union g$enumset1$6925$sFNhI)
          (g$assert-enum$6849$sFNhI 'enum-set-union g$enumset2$6926$sFNhI)
          (if (g$enum-type=?$6846$sFNhI
                g$enumset1$6925$sFNhI
                g$enumset2$6926$sFNhI)
            (g$make-enum$6834$sFNhI
              (bitwise-ior
                (g$enum-value$6835$sFNhI g$enumset1$6925$sFNhI)
                (g$enum-value$6835$sFNhI g$enumset2$6926$sFNhI))
              (g$enum-info$6836$sFNhI g$enumset1$6925$sFNhI))
            '#f)))))
   (g$enum-set-intersection$6861$sFNhI
     g$enum-set-intersection$6970$sFNhI
     (case-lambda
       ((g$enumset1$6927$sFNhI g$enumset2$6928$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI
            'enum-set-intersection
            g$enumset1$6927$sFNhI)
          (g$assert-enum$6849$sFNhI
            'enum-set-intersection
            g$enumset2$6928$sFNhI)
          (if (g$enum-type=?$6846$sFNhI
                g$enumset1$6927$sFNhI
                g$enumset2$6928$sFNhI)
            (g$make-enum$6834$sFNhI
              (bitwise-and
                (g$enum-value$6835$sFNhI g$enumset1$6927$sFNhI)
                (g$enum-value$6835$sFNhI g$enumset2$6928$sFNhI))
              (g$enum-info$6836$sFNhI g$enumset1$6927$sFNhI))
            '#f)))))
   (g$enum-set-difference$6862$sFNhI
     g$enum-set-difference$6971$sFNhI
     (case-lambda
       ((g$enumset1$6929$sFNhI g$enumset2$6930$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-difference g$enumset1$6929$sFNhI)
          (g$assert-enum$6849$sFNhI 'enum-set-difference g$enumset2$6930$sFNhI)
          (if (g$enum-type=?$6846$sFNhI
                g$enumset1$6929$sFNhI
                g$enumset2$6930$sFNhI)
            (g$make-enum$6834$sFNhI
              (bitwise-and
                (g$enum-value$6835$sFNhI g$enumset1$6929$sFNhI)
                (bitwise-not (g$enum-value$6835$sFNhI g$enumset2$6930$sFNhI)))
              (g$enum-info$6836$sFNhI g$enumset1$6929$sFNhI))
            '#f)))))
   (g$enum-set-complement$6863$sFNhI
     g$enum-set-complement$6972$sFNhI
     (case-lambda
       ((g$enumset$6931$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-complement g$enumset$6931$sFNhI)
          (g$make-enum$6834$sFNhI
            (bitwise-not (g$enum-value$6835$sFNhI g$enumset$6931$sFNhI))
            (g$enum-info$6836$sFNhI g$enumset$6931$sFNhI))))))
   (g$enum-set-projection$6864$sFNhI
     g$enum-set-projection$6973$sFNhI
     (case-lambda
       ((g$enumset1$6932$sFNhI g$enumset2$6933$sFNhI)
        (begin
          (g$assert-enum$6849$sFNhI 'enum-set-projection g$enumset1$6932$sFNhI)
          (g$assert-enum$6849$sFNhI 'enum-set-projection g$enumset2$6933$sFNhI)
          ((case-lambda
             ((g$v1$6934$sFNhI)
              ((letrec ((g$f$6935$sFNhI
                          (case-lambda
                            ((g$s$6936$sFNhI g$v$6937$sFNhI)
                             (if (null? g$s$6936$sFNhI)
                               (g$make-enum$6834$sFNhI
                                 g$v$6937$sFNhI
                                 (g$enum-info$6836$sFNhI g$enumset2$6933$sFNhI))
                               (if (g$zero?$5683$sFNhI
                                     (bitwise-and
                                       g$v1$6934$sFNhI
                                       (g$get-value$6848$sFNhI
                                         g$enumset1$6932$sFNhI
                                         (car g$s$6936$sFNhI))))
                                 (g$f$6935$sFNhI
                                   (cdr g$s$6936$sFNhI)
                                   g$v$6937$sFNhI)
                                 ((case-lambda
                                    ((g$v2$6938$sFNhI)
                                     (if g$v2$6938$sFNhI
                                       (g$f$6935$sFNhI
                                         (cdr g$s$6936$sFNhI)
                                         (bitwise-ior
                                           g$v$6937$sFNhI
                                           g$v2$6938$sFNhI))
                                       (g$f$6935$sFNhI
                                         (cdr g$s$6936$sFNhI)
                                         g$v$6937$sFNhI))))
                                  (g$get-value$6848$sFNhI
                                    g$enumset2$6933$sFNhI
                                    (car g$s$6936$sFNhI)))))))))
                 g$f$6935$sFNhI)
               (g$get-symbols$6847$sFNhI g$enumset1$6932$sFNhI)
               '0)))
           (g$enum-value$6835$sFNhI g$enumset1$6932$sFNhI)))))))
  (make-record-printer
    'enum
    (case-lambda
      ((g$x$6865$sFNhI g$p$6866$sFNhI g$wr$6867$sFNhI)
       (g$fprintf$6998$sFNhI
         g$p$6866$sFNhI
         '"#[enum-set ~a]"
         (g$enum-set->list$6856$sFNhI g$x$6865$sFNhI))))))

(library-letrec* (ironscheme format)
  ((g$dofmt$6974$sFNhI
     g$dofmt$6996$sFNhI
     (case-lambda
       ((g$p$6978$sFNhI g$cntl$6979$sFNhI g$args$6980$sFNhI)
        ((case-lambda
           ((g$nmax$6981$sFNhI)
            ((letrec ((g$loop$6982$sFNhI
                        (case-lambda
                          ((g$n$6983$sFNhI g$a$6984$sFNhI)
                           (if (fx<=? g$n$6983$sFNhI g$nmax$6981$sFNhI)
                             ((case-lambda
                                ((g$c$6985$sFNhI)
                                 (if (if (g$char=?$5697$sFNhI
                                           g$c$6985$sFNhI
                                           '#\~)
                                       (begin
                                         '#f
                                         (fx<?
                                           g$n$6983$sFNhI
                                           g$nmax$6981$sFNhI))
                                       '#f)
                                   ((case-lambda
                                      ((g$t$6986$sFNhI)
                                       (if (g$memv$5150$sFNhI
                                             g$t$6986$sFNhI
                                             '(#\a))
                                         (begin
                                           (display
                                             (car g$a$6984$sFNhI)
                                             g$p$6978$sFNhI)
                                           (g$loop$6982$sFNhI
                                             (fx+ g$n$6983$sFNhI '2)
                                             (cdr g$a$6984$sFNhI)))
                                         (if (g$memv$5150$sFNhI
                                               g$t$6986$sFNhI
                                               '(#\s))
                                           (begin
                                             (write
                                               (car g$a$6984$sFNhI)
                                               g$p$6978$sFNhI)
                                             (g$loop$6982$sFNhI
                                               (fx+ g$n$6983$sFNhI '2)
                                               (cdr g$a$6984$sFNhI)))
                                           (if (g$memv$5150$sFNhI
                                                 g$t$6986$sFNhI
                                                 '(#\b))
                                             (begin
                                               (write
                                                 (number->string
                                                   (car g$a$6984$sFNhI)
                                                   '2)
                                                 g$p$6978$sFNhI)
                                               (g$loop$6982$sFNhI
                                                 (fx+ g$n$6983$sFNhI '2)
                                                 (cdr g$a$6984$sFNhI)))
                                             (if (g$memv$5150$sFNhI
                                                   g$t$6986$sFNhI
                                                   '(#\o))
                                               (begin
                                                 (write
                                                   (number->string
                                                     (car g$a$6984$sFNhI)
                                                     '8)
                                                   g$p$6978$sFNhI)
                                                 (g$loop$6982$sFNhI
                                                   (fx+ g$n$6983$sFNhI '2)
                                                   (cdr g$a$6984$sFNhI)))
                                               (if (g$memv$5150$sFNhI
                                                     g$t$6986$sFNhI
                                                     '(#\x))
                                                 (begin
                                                   (write
                                                     (number->string
                                                       (car g$a$6984$sFNhI)
                                                       '16)
                                                     g$p$6978$sFNhI)
                                                   (g$loop$6982$sFNhI
                                                     (fx+ g$n$6983$sFNhI '2)
                                                     (cdr g$a$6984$sFNhI)))
                                                 (if (g$memv$5150$sFNhI
                                                       g$t$6986$sFNhI
                                                       '(#\d))
                                                   (begin
                                                     (write
                                                       (number->string
                                                         (car g$a$6984$sFNhI)
                                                         '10)
                                                       g$p$6978$sFNhI)
                                                     (g$loop$6982$sFNhI
                                                       (fx+ g$n$6983$sFNhI '2)
                                                       (cdr g$a$6984$sFNhI)))
                                                   (if (g$memv$5150$sFNhI
                                                         g$t$6986$sFNhI
                                                         '(#\~))
                                                     (begin
                                                       (g$write-char$6824$sFNhI
                                                         '#\~
                                                         g$p$6978$sFNhI)
                                                       (g$loop$6982$sFNhI
                                                         (fx+ g$n$6983$sFNhI '2)
                                                         g$a$6984$sFNhI))
                                                     (begin
                                                       (g$write-char$6824$sFNhI
                                                         g$c$6985$sFNhI
                                                         g$p$6978$sFNhI)
                                                       (g$loop$6982$sFNhI
                                                         (fx+ g$n$6983$sFNhI '1)
                                                         g$a$6984$sFNhI)))))))))))
                                    (string-ref
                                      g$cntl$6979$sFNhI
                                      (fx+ g$n$6983$sFNhI '1)))
                                   (begin
                                     (g$write-char$6824$sFNhI
                                       g$c$6985$sFNhI
                                       g$p$6978$sFNhI)
                                     (g$loop$6982$sFNhI
                                       (fx+ g$n$6983$sFNhI '1)
                                       g$a$6984$sFNhI)))))
                              (string-ref g$cntl$6979$sFNhI g$n$6983$sFNhI))
                             (void))))))
               g$loop$6982$sFNhI)
             '0
             g$args$6980$sFNhI)))
         (fx- (string-length g$cntl$6979$sFNhI) '1)))))
   (g$printf$6975$sFNhI
     g$printf$6997$sFNhI
     (case-lambda
       ((g$control$6987$sFNhI . g$args$6988$sFNhI)
        (g$dofmt$6974$sFNhI
          (current-output-port)
          g$control$6987$sFNhI
          g$args$6988$sFNhI))))
   (g$fprintf$6976$sFNhI
     g$fprintf$6998$sFNhI
     (case-lambda
       ((g$p$6989$sFNhI g$control$6990$sFNhI . g$args$6991$sFNhI)
        (g$dofmt$6974$sFNhI
          g$p$6989$sFNhI
          g$control$6990$sFNhI
          g$args$6991$sFNhI))))
   (g$format$6977$sFNhI
     g$format$6999$sFNhI
     (case-lambda
       ((g$control$6992$sFNhI . g$args$6993$sFNhI)
        (call-with-values
          g$open-string-output-port$6776$sFNhI
          (case-lambda
            ((g$p$6994$sFNhI g$c$6995$sFNhI)
             (begin
               (g$dofmt$6974$sFNhI
                 g$p$6994$sFNhI
                 g$control$6992$sFNhI
                 g$args$6993$sFNhI)
               (g$c$6995$sFNhI)))))))))
  (void))

(library-letrec* (ironscheme trace)
  ((g$make-traced-macro$7000$sFNhI
     g$make-traced-macro$7003$sFNhI
     (case-lambda
       ((g$name$7001$sFNhI g$x$7002$sFNhI)
        (if (g$procedure?$5647$sFNhI g$x$7002$sFNhI)
          (make-traced-procedure
            g$name$7001$sFNhI
            g$x$7002$sFNhI
            g$syntax->datum$12038$sFNhI)
          (if (g$variable-transformer?$11860$sFNhI g$x$7002$sFNhI)
            (g$make-variable-transformer$11858$sFNhI
              (make-traced-procedure
                g$name$7001$sFNhI
                (g$variable-transformer-procedure$11861$sFNhI g$x$7002$sFNhI)
                g$syntax->datum$12038$sFNhI))
            g$x$7002$sFNhI))))))
  (void))

(library-letrec* (ironscheme cps)
  ((g$cps/generate-reference$7004$sFNhI
     g$cps/generate-reference$7269$sFNhI
     (case-lambda
       ((g$variable$7057$sFNhI)
        (g$cps/generate-operand$7008$sFNhI
          (g$make-reference$7034$sFNhI g$variable$7057$sFNhI)))))
   (g$cps/generate-literal$7005$sFNhI
     g$cps/generate-literal$7270$sFNhI
     (case-lambda
       ((g$datum$7058$sFNhI)
        (g$cps/generate-operand$7008$sFNhI
          (g$make-literal$7033$sFNhI g$datum$7058$sFNhI)))))
   (g$cps/generate-abstraction$7006$sFNhI
     g$cps/generate-abstraction$7271$sFNhI
     (case-lambda
       ((g$bvl$7059$sFNhI g$body-generator$7060$sFNhI)
        (g$cps/generate-operand$7008$sFNhI
          (g$make-user-abstraction$7035$sFNhI
            g$bvl$7059$sFNhI
            (case-lambda
              ((g$continuation-variable$7061$sFNhI)
               (g$body-generator$7060$sFNhI
                 (g$variable-continuator$7021$sFNhI
                   g$continuation-variable$7061$sFNhI)))))))))
   (g$cps/generate-abstractions$7007$sFNhI
     g$cps/generate-abstractions$7272$sFNhI
     (case-lambda
       ((g$bvls$7062$sFNhI g$body-generators$7063$sFNhI)
        (g$cps/generate-operand$7008$sFNhI
          (g$make-user-abstractions$7036$sFNhI
            g$bvls$7062$sFNhI
            (g$map$5157$sFNhI
              (case-lambda
                ((g$body-generator$7064$sFNhI)
                 (case-lambda
                   ((g$continuation-variable$7065$sFNhI)
                    (g$body-generator$7064$sFNhI
                      (g$variable-continuator$7021$sFNhI
                        g$continuation-variable$7065$sFNhI))))))
              g$body-generators$7063$sFNhI))))))
   (g$cps/generate-operand$7008$sFNhI
     g$cps/generate-operand$7273$sFNhI
     (case-lambda
       ((g$operand$7066$sFNhI)
        (case-lambda
          ((g$continuator$7067$sFNhI)
           (g$continue-with-operand$7024$sFNhI
             g$continuator$7067$sFNhI
             g$operand$7066$sFNhI))))))
   (g$cps/generate-conditional$7009$sFNhI
     g$cps/generate-conditional$7274$sFNhI
     (case-lambda
       ((g$condition-generator$7068$sFNhI
          g$consequent-generator$7069$sFNhI
          g$alternative-generator$7070$sFNhI)
        (case-lambda
          ((g$continuator$7071$sFNhI)
           (letrec* ((g$if-variable$7072$sFNhI
                       (case-lambda
                         ((g$continuation-variable$7074$sFNhI)
                          ((case-lambda
                             ((g$continuator*$7075$sFNhI)
                              (g$condition-generator$7068$sFNhI
                                (g$conditional-continuator$7020$sFNhI
                                  (case-lambda
                                    ((g$condition$7076$sFNhI)
                                     (g$make-conditional$7043$sFNhI
                                       g$condition$7076$sFNhI
                                       (g$consequent-generator$7069$sFNhI
                                         g$continuator*$7075$sFNhI)
                                       (g$alternative-generator$7070$sFNhI
                                         g$continuator*$7075$sFNhI))))))))
                           (g$variable-continuator$7021$sFNhI
                             g$continuation-variable$7074$sFNhI))))))
             (g$reify-continuation*$7026$sFNhI
               g$continuator$7071$sFNhI
               g$if-variable$7072$sFNhI
               (case-lambda
                 ((g$continuation-abstraction$7073$sFNhI)
                  (g$make-conditional-join$7044$sFNhI
                    g$continuation-abstraction$7073$sFNhI
                    g$if-variable$7072$sFNhI))))))))))
   (g$cps/generate-recursive-bind$7010$sFNhI
     g$cps/generate-recursive-bind$7275$sFNhI
     (case-lambda
       ((g$variables$7077$sFNhI
          g$generators$7078$sFNhI
          g$body-generator$7079$sFNhI)
        (case-lambda
          ((g$continuator$7080$sFNhI)
           (g$make-recursive-bind$7038$sFNhI
             g$variables$7077$sFNhI
             (g$map$5157$sFNhI
               (case-lambda
                 ((g$generator$7081$sFNhI)
                  (case-lambda
                    ((g$continuation-variable$7082$sFNhI)
                     (g$generator$7081$sFNhI
                       (g$variable-continuator$7021$sFNhI
                         g$continuation-variable$7082$sFNhI))))))
               g$generators$7078$sFNhI)
             (g$body-generator$7079$sFNhI
               (g$reified-continuator$7023$sFNhI
                 g$continuator$7080$sFNhI))))))))
   (g$cps/generate-recursive*-bind$7011$sFNhI
     g$cps/generate-recursive*-bind$7276$sFNhI
     (case-lambda
       ((g$variables$7083$sFNhI
          g$generators$7084$sFNhI
          g$body-generator$7085$sFNhI)
        (case-lambda
          ((g$continuator$7086$sFNhI)
           (g$make-recursive*-bind$7039$sFNhI
             g$variables$7083$sFNhI
             (g$map$5157$sFNhI
               (case-lambda
                 ((g$generator$7087$sFNhI)
                  (case-lambda
                    ((g$continuation-variable$7088$sFNhI)
                     (g$generator$7087$sFNhI
                       (g$variable-continuator$7021$sFNhI
                         g$continuation-variable$7088$sFNhI))))))
               g$generators$7084$sFNhI)
             (g$body-generator$7085$sFNhI
               (g$reified-continuator$7023$sFNhI
                 g$continuator$7086$sFNhI))))))))
   (g$cps/generate-recursive*-library-bind$7012$sFNhI
     g$cps/generate-recursive*-library-bind$7277$sFNhI
     (case-lambda
       ((g$name$7089$sFNhI
          g$variables$7090$sFNhI
          g$variables*$7091$sFNhI
          g$generators$7092$sFNhI
          g$body-generator$7093$sFNhI)
        (case-lambda
          ((g$continuator$7094$sFNhI)
           (g$make-recursive*-library-bind$7040$sFNhI
             g$name$7089$sFNhI
             g$variables$7090$sFNhI
             g$variables*$7091$sFNhI
             (g$map$5157$sFNhI
               (case-lambda
                 ((g$generator$7095$sFNhI)
                  (case-lambda
                    ((g$continuation-variable$7096$sFNhI)
                     (g$generator$7095$sFNhI
                       (g$variable-continuator$7021$sFNhI
                         g$continuation-variable$7096$sFNhI))))))
               g$generators$7092$sFNhI)
             (g$body-generator$7093$sFNhI
               (g$reified-continuator$7023$sFNhI
                 g$continuator$7094$sFNhI))))))))
   (g$cps/generate-sequence$7013$sFNhI
     g$cps/generate-sequence$7278$sFNhI
     (case-lambda
       ((g$generators$7097$sFNhI)
        (case-lambda
          ((g$continuator$7098$sFNhI)
           ((letrec ((g$recur$7099$sFNhI
                       (case-lambda
                         ((g$generators$7100$sFNhI)
                          ((car g$generators$7100$sFNhI)
                           ((case-lambda
                              ((g$generators$7101$sFNhI)
                               (if (pair? g$generators$7101$sFNhI)
                                 (g$effect-continuator$7019$sFNhI
                                   (case-lambda
                                     (()
                                      (g$recur$7099$sFNhI
                                        g$generators$7101$sFNhI))))
                                 g$continuator$7098$sFNhI)))
                            (cdr g$generators$7100$sFNhI)))))))
              g$recur$7099$sFNhI)
            g$generators$7097$sFNhI))))))
   (g$cps/generate-assignment$7014$sFNhI
     g$cps/generate-assignment$7279$sFNhI
     (case-lambda
       ((g$location$7102$sFNhI g$expression-generator$7103$sFNhI)
        (case-lambda
          ((g$continuator$7104$sFNhI)
           (g$expression-generator$7103$sFNhI
             (g$operand-continuator$7018$sFNhI
               (case-lambda
                 ((g$operand$7105$sFNhI)
                  (g$make-assignment$7046$sFNhI
                    g$location$7102$sFNhI
                    g$operand$7105$sFNhI
                    (g$continue-with-operand$7024$sFNhI
                      g$continuator$7104$sFNhI
                      '(cps-void))))))))))))
   (g$cps/generate-declaration$7015$sFNhI
     g$cps/generate-declaration$7280$sFNhI
     (case-lambda
       ((g$location$7106$sFNhI g$expression-generator$7107$sFNhI)
        (case-lambda
          ((g$continuator$7108$sFNhI)
           (g$expression-generator$7107$sFNhI
             (g$operand-continuator$7018$sFNhI
               (case-lambda
                 ((g$operand$7109$sFNhI)
                  (g$make-declaration$7047$sFNhI
                    g$location$7106$sFNhI
                    g$operand$7109$sFNhI
                    (g$continue-with-operand$7024$sFNhI
                      g$continuator$7108$sFNhI
                      '(cps-void))))))))))))
   (g$cps/generate-combination$7016$sFNhI
     g$cps/generate-combination$7281$sFNhI
     (case-lambda
       ((g$operator-generator$7110$sFNhI g$operand-generators$7111$sFNhI)
        (g$cps/generate-subproblems$7017$sFNhI
          (g$reverse$5652$sFNhI
            (cons
              g$operator-generator$7110$sFNhI
              g$operand-generators$7111$sFNhI))
          (case-lambda
            ((g$operands$7112$sFNhI g$continuator$7113$sFNhI)
             (g$make-combination$7041$sFNhI
               (car g$operands$7112$sFNhI)
               (g$reify-continuation$7025$sFNhI g$continuator$7113$sFNhI)
               (cdr g$operands$7112$sFNhI))))))))
   (g$cps/generate-subproblems$7017$sFNhI
     g$cps/generate-subproblems$7282$sFNhI
     (case-lambda
       ((g$generators$7114$sFNhI g$combiner$7115$sFNhI)
        (case-lambda
          ((g$continuator$7116$sFNhI)
           ((letrec ((g$recur$7117$sFNhI
                       (case-lambda
                         ((g$generators$7118$sFNhI g$operands$7119$sFNhI)
                          (if (pair? g$generators$7118$sFNhI)
                            ((car g$generators$7118$sFNhI)
                             ((case-lambda
                                ((g$generators$7120$sFNhI)
                                 (g$operand-continuator$7018$sFNhI
                                   (case-lambda
                                     ((g$operand$7121$sFNhI)
                                      (g$recur$7117$sFNhI
                                        g$generators$7120$sFNhI
                                        (cons
                                          g$operand$7121$sFNhI
                                          g$operands$7119$sFNhI)))))))
                              (cdr g$generators$7118$sFNhI)))
                            (g$combiner$7115$sFNhI
                              g$operands$7119$sFNhI
                              g$continuator$7116$sFNhI))))))
              g$recur$7117$sFNhI)
            g$generators$7114$sFNhI
            '()))))))
   (g$operand-continuator$7018$sFNhI
     g$operand-continuator$7283$sFNhI
     (case-lambda
       ((g$generator$7122$sFNhI)
        (case-lambda
          ((g$if-operand$7123$sFNhI
             g$if-effect$7124$sFNhI
             g$if-conditional$7125$sFNhI
             g$if-variable$7126$sFNhI
             g$if-inline$7127$sFNhI)
           (begin
             g$if-effect$7124$sFNhI
             g$if-conditional$7125$sFNhI
             g$if-variable$7126$sFNhI
             g$if-inline$7127$sFNhI
             (g$if-operand$7123$sFNhI g$generator$7122$sFNhI)))))))
   (g$effect-continuator$7019$sFNhI
     g$effect-continuator$7284$sFNhI
     (case-lambda
       ((g$generator$7128$sFNhI)
        (case-lambda
          ((g$if-operand$7129$sFNhI
             g$if-effect$7130$sFNhI
             g$if-conditional$7131$sFNhI
             g$if-variable$7132$sFNhI
             g$if-inline$7133$sFNhI)
           (begin
             g$if-operand$7129$sFNhI
             g$if-conditional$7131$sFNhI
             g$if-variable$7132$sFNhI
             g$if-inline$7133$sFNhI
             (g$if-effect$7130$sFNhI g$generator$7128$sFNhI)))))))
   (g$conditional-continuator$7020$sFNhI
     g$conditional-continuator$7285$sFNhI
     (case-lambda
       ((g$generator$7134$sFNhI)
        (case-lambda
          ((g$if-operand$7135$sFNhI
             g$if-effect$7136$sFNhI
             g$if-conditional$7137$sFNhI
             g$if-variable$7138$sFNhI
             g$if-inline$7139$sFNhI)
           (begin
             g$if-operand$7135$sFNhI
             g$if-effect$7136$sFNhI
             g$if-variable$7138$sFNhI
             g$if-inline$7139$sFNhI
             (g$if-conditional$7137$sFNhI g$generator$7134$sFNhI)))))))
   (g$variable-continuator$7021$sFNhI
     g$variable-continuator$7286$sFNhI
     (case-lambda
       ((g$variable$7140$sFNhI)
        (case-lambda
          ((g$if-operand$7141$sFNhI
             g$if-effect$7142$sFNhI
             g$if-conditional$7143$sFNhI
             g$if-variable$7144$sFNhI
             g$if-inline$7145$sFNhI)
           (begin
             g$if-operand$7141$sFNhI
             g$if-effect$7142$sFNhI
             g$if-variable$7144$sFNhI
             g$if-inline$7145$sFNhI
             (g$if-variable$7144$sFNhI g$variable$7140$sFNhI)))))))
   (g$inline-continuator$7022$sFNhI
     g$inline-continuator$7287$sFNhI
     (case-lambda
       ((g$continuation$7146$sFNhI)
        (case-lambda
          ((g$if-operand$7147$sFNhI
             g$if-effect$7148$sFNhI
             g$if-conditional$7149$sFNhI
             g$if-variable$7150$sFNhI
             g$if-inline$7151$sFNhI)
           (begin
             g$if-operand$7147$sFNhI
             g$if-effect$7148$sFNhI
             g$if-conditional$7149$sFNhI
             g$if-variable$7150$sFNhI
             (g$if-inline$7151$sFNhI g$continuation$7146$sFNhI)))))))
   (g$reified-continuator$7023$sFNhI
     g$reified-continuator$7288$sFNhI
     (case-lambda
       ((g$continuator$7152$sFNhI)
        (case-lambda
          ((g$if-operand$7153$sFNhI
             g$if-effect$7154$sFNhI
             g$if-conditional$7155$sFNhI
             g$if-variable$7156$sFNhI
             g$if-inline$7157$sFNhI)
           (begin
             g$if-operand$7153$sFNhI
             g$if-effect$7154$sFNhI
             g$if-conditional$7155$sFNhI
             (g$reify-continuation*$7026$sFNhI
               g$continuator$7152$sFNhI
               g$if-variable$7156$sFNhI
               g$if-inline$7157$sFNhI)))))))
   (g$continue-with-operand$7024$sFNhI
     g$continue-with-operand$7289$sFNhI
     (case-lambda
       ((g$continuator$7158$sFNhI g$operand$7159$sFNhI)
        (g$continuator$7158$sFNhI
          (case-lambda
            ((g$generator$7160$sFNhI)
             (g$generator$7160$sFNhI g$operand$7159$sFNhI)))
          (case-lambda ((g$generator$7161$sFNhI) (g$generator$7161$sFNhI)))
          (case-lambda
            ((g$generator$7162$sFNhI)
             (g$generator$7162$sFNhI
               (g$make-truth-test$7048$sFNhI g$operand$7159$sFNhI))))
          (case-lambda
            ((g$continuation-variable$7163$sFNhI)
             (g$make-return$7042$sFNhI
               (g$make-reference$7034$sFNhI g$continuation-variable$7163$sFNhI)
               (list g$operand$7159$sFNhI))))
          (case-lambda
            ((g$continuation-abstraction$7164$sFNhI)
             (g$make-return$7042$sFNhI
               g$continuation-abstraction$7164$sFNhI
               (list g$operand$7159$sFNhI))))))))
   (g$reify-continuation$7025$sFNhI
     g$reify-continuation$7290$sFNhI
     (case-lambda
       ((g$continuator$7165$sFNhI)
        (g$continuator$7165$sFNhI
          g$operand-continuation-reifier$7028$sFNhI
          g$effect-continuation-reifier$7030$sFNhI
          g$conditional-continuation-reifier$7032$sFNhI
          (case-lambda
            ((g$variable$7166$sFNhI)
             (g$make-reference$7034$sFNhI g$variable$7166$sFNhI)))
          (case-lambda
            ((g$continuation$7167$sFNhI) g$continuation$7167$sFNhI))))))
   (g$reify-continuation*$7026$sFNhI
     g$reify-continuation*$7291$sFNhI
     (case-lambda
       ((g$continuator$7168$sFNhI
          g$if-variable$7169$sFNhI
          g$if-inline$7170$sFNhI)
        (g$continuator$7168$sFNhI
          (g$operand-continuation-reifier*$7027$sFNhI g$if-inline$7170$sFNhI)
          (g$effect-continuation-reifier*$7029$sFNhI g$if-inline$7170$sFNhI)
          (g$conditional-continuation-reifier*$7031$sFNhI
            g$if-inline$7170$sFNhI)
          g$if-variable$7169$sFNhI
          g$if-inline$7170$sFNhI))))
   (g$operand-continuation-reifier*$7027$sFNhI
     g$operand-continuation-reifier*$7292$sFNhI
     (case-lambda
       ((g$receiver$7171$sFNhI)
        (case-lambda
          ((g$generator$7172$sFNhI)
           (g$receiver$7171$sFNhI
             ((case-lambda
                ((g$variable$7173$sFNhI)
                 (g$make-continuation-abstraction$7037$sFNhI
                   (list g$variable$7173$sFNhI)
                   (g$generator$7172$sFNhI
                     (g$make-reference$7034$sFNhI g$variable$7173$sFNhI)))))
              (g$generate-variable$7049$sFNhI 'V))))))))
   (g$operand-continuation-reifier$7028$sFNhI
     g$operand-continuation-reifier$7293$sFNhI
     (g$operand-continuation-reifier*$7027$sFNhI values))
   (g$effect-continuation-reifier*$7029$sFNhI
     g$effect-continuation-reifier*$7294$sFNhI
     (case-lambda
       ((g$receiver$7174$sFNhI)
        (case-lambda
          ((g$generator$7175$sFNhI)
           (g$receiver$7174$sFNhI
             ((case-lambda
                ((g$variable$7176$sFNhI)
                 (g$make-continuation-abstraction$7037$sFNhI
                   g$variable$7176$sFNhI
                   (g$generator$7175$sFNhI))))
              (g$generate-variable$7049$sFNhI 'IGNORE))))))))
   (g$effect-continuation-reifier$7030$sFNhI
     g$effect-continuation-reifier$7295$sFNhI
     (g$effect-continuation-reifier*$7029$sFNhI values))
   (g$conditional-continuation-reifier*$7031$sFNhI
     g$conditional-continuation-reifier*$7296$sFNhI
     (case-lambda
       ((g$receiver$7177$sFNhI)
        (case-lambda
          ((g$generator$7178$sFNhI)
           (g$receiver$7177$sFNhI
             ((case-lambda
                ((g$variable$7179$sFNhI)
                 (g$make-continuation-abstraction$7037$sFNhI
                   (list g$variable$7179$sFNhI)
                   (g$generator$7178$sFNhI
                     (g$make-truth-test$7048$sFNhI
                       (g$make-reference$7034$sFNhI g$variable$7179$sFNhI))))))
              (g$generate-variable$7049$sFNhI 'T))))))))
   (g$conditional-continuation-reifier$7032$sFNhI
     g$conditional-continuation-reifier$7297$sFNhI
     (g$conditional-continuation-reifier*$7031$sFNhI values))
   (g$make-literal$7033$sFNhI
     g$make-literal$7298$sFNhI
     (case-lambda ((g$datum$7180$sFNhI) (list 'quote g$datum$7180$sFNhI))))
   (g$make-reference$7034$sFNhI
     g$make-reference$7299$sFNhI
     (case-lambda ((g$variable$7181$sFNhI) g$variable$7181$sFNhI)))
   (g$make-user-abstraction$7035$sFNhI
     g$make-user-abstraction$7300$sFNhI
     (case-lambda
       ((g$bvl$7182$sFNhI g$body-constructor$7183$sFNhI)
        ((case-lambda
           ((g$continuation$7184$sFNhI)
            (list
              'case-lambda
              (list
                (cons g$continuation$7184$sFNhI g$bvl$7182$sFNhI)
                (g$body-constructor$7183$sFNhI g$continuation$7184$sFNhI)))))
         (g$generate-variable$7049$sFNhI 'C)))))
   (g$make-user-abstractions$7036$sFNhI
     g$make-user-abstractions$7301$sFNhI
     (case-lambda
       ((g$bvls$7185$sFNhI g$body-constructors$7186$sFNhI)
        ((case-lambda
           ((g$continuation$7187$sFNhI)
            (cons
              'case-lambda
              (g$map$5157$sFNhI
                (case-lambda
                  ((g$bvl$7188$sFNhI g$body-constructor$7189$sFNhI)
                   (list
                     (cons g$continuation$7187$sFNhI g$bvl$7188$sFNhI)
                     (g$body-constructor$7189$sFNhI
                       g$continuation$7187$sFNhI))))
                g$bvls$7185$sFNhI
                g$body-constructors$7186$sFNhI))))
         (g$generate-variable$7049$sFNhI 'C)))))
   (g$make-continuation-abstraction$7037$sFNhI
     g$make-continuation-abstraction$7302$sFNhI
     (case-lambda
       ((g$bvl$7190$sFNhI g$body$7191$sFNhI)
        (list 'case-lambda (list g$bvl$7190$sFNhI g$body$7191$sFNhI)))))
   (g$make-recursive-bind$7038$sFNhI
     g$make-recursive-bind$7303$sFNhI
     (case-lambda
       ((g$variables$7192$sFNhI g$constructors$7193$sFNhI g$body$7194$sFNhI)
        (list
          'letrec
          (g$map$5157$sFNhI
            (case-lambda
              ((g$variable$7195$sFNhI g$constructor$7196$sFNhI)
               (list
                 g$variable$7195$sFNhI
                 (list
                   (g$make-user-abstraction$7035$sFNhI
                     '()
                     g$constructor$7196$sFNhI)
                   (list
                     'letrec-identity
                     (list 'quote g$variable$7195$sFNhI))))))
            g$variables$7192$sFNhI
            g$constructors$7193$sFNhI)
          g$body$7194$sFNhI))))
   (g$make-recursive*-bind$7039$sFNhI
     g$make-recursive*-bind$7304$sFNhI
     (case-lambda
       ((g$variables$7197$sFNhI g$constructors$7198$sFNhI g$body$7199$sFNhI)
        (list
          'letrec*
          (g$map$5157$sFNhI
            (case-lambda
              ((g$variable$7200$sFNhI g$constructor$7201$sFNhI)
               (list
                 g$variable$7200$sFNhI
                 (list
                   (g$make-user-abstraction$7035$sFNhI
                     '()
                     g$constructor$7201$sFNhI)
                   (list
                     'letrec*-identity
                     (list 'quote g$variable$7200$sFNhI))))))
            g$variables$7197$sFNhI
            g$constructors$7198$sFNhI)
          g$body$7199$sFNhI))))
   (g$make-recursive*-library-bind$7040$sFNhI
     g$make-recursive*-library-bind$7305$sFNhI
     (case-lambda
       ((g$name$7202$sFNhI
          g$variables$7203$sFNhI
          g$variables*$7204$sFNhI
          g$constructors$7205$sFNhI
          g$body$7206$sFNhI)
        (list
          'library-letrec*
          g$name$7202$sFNhI
          (g$map$5157$sFNhI
            (case-lambda
              ((g$variable$7207$sFNhI
                 g$variable*$7208$sFNhI
                 g$constructor$7209$sFNhI)
               (list
                 g$variable$7207$sFNhI
                 g$variable*$7208$sFNhI
                 (list
                   (g$make-user-abstraction$7035$sFNhI
                     '()
                     g$constructor$7209$sFNhI)
                   (list
                     'library-letrec*-identity
                     (list 'quote g$variable$7207$sFNhI))))))
            g$variables$7203$sFNhI
            g$variables*$7204$sFNhI
            g$constructors$7205$sFNhI)
          g$body$7206$sFNhI))))
   (g$make-combination$7041$sFNhI
     g$make-combination$7306$sFNhI
     (case-lambda
       ((g$operator$7210$sFNhI g$continuation$7211$sFNhI g$operands$7212$sFNhI)
        (cons
          g$operator$7210$sFNhI
          (cons g$continuation$7211$sFNhI g$operands$7212$sFNhI)))))
   (g$make-return$7042$sFNhI
     g$make-return$7307$sFNhI
     (case-lambda
       ((g$continuation$7213$sFNhI g$operands$7214$sFNhI)
        (cons g$continuation$7213$sFNhI g$operands$7214$sFNhI))))
   (g$make-conditional$7043$sFNhI
     g$make-conditional$7308$sFNhI
     (case-lambda
       ((g$condition$7215$sFNhI
          g$consequent$7216$sFNhI
          g$alternative$7217$sFNhI)
        (list
          'if
          g$condition$7215$sFNhI
          g$consequent$7216$sFNhI
          g$alternative$7217$sFNhI))))
   (g$make-conditional-join$7044$sFNhI
     g$make-conditional-join$7309$sFNhI
     (case-lambda
       ((g$continuation$7218$sFNhI g$constructor$7219$sFNhI)
        ((case-lambda
           ((g$variable$7220$sFNhI)
            (g$make-let$7045$sFNhI
              (list g$variable$7220$sFNhI)
              (list g$continuation$7218$sFNhI)
              (g$constructor$7219$sFNhI g$variable$7220$sFNhI))))
         (g$generate-variable$7049$sFNhI 'J)))))
   (g$make-let$7045$sFNhI
     g$make-let$7310$sFNhI
     (case-lambda
       ((g$variables$7221$sFNhI g$expressions$7222$sFNhI g$body$7223$sFNhI)
        (cons
          (list 'case-lambda (list g$variables$7221$sFNhI g$body$7223$sFNhI))
          g$expressions$7222$sFNhI))))
   (g$make-assignment$7046$sFNhI
     g$make-assignment$7311$sFNhI
     (case-lambda
       ((g$location$7224$sFNhI g$operand$7225$sFNhI g$expression$7226$sFNhI)
        (list
          'begin
          (list 'set! g$location$7224$sFNhI g$operand$7225$sFNhI)
          g$expression$7226$sFNhI))))
   (g$make-declaration$7047$sFNhI
     g$make-declaration$7312$sFNhI
     (case-lambda
       ((g$location$7227$sFNhI g$operand$7228$sFNhI g$expression$7229$sFNhI)
        (list
          'begin
          (list 'define g$location$7227$sFNhI g$operand$7228$sFNhI)
          g$expression$7229$sFNhI))))
   (g$make-truth-test$7048$sFNhI
     g$make-truth-test$7313$sFNhI
     (case-lambda ((g$operand$7230$sFNhI) g$operand$7230$sFNhI)))
   (g$generate-variable$7049$sFNhI
     g$generate-variable$7314$sFNhI
     (case-lambda ((g$name$7231$sFNhI) (gensym g$name$7231$sFNhI))))
   (g$parse$7050$sFNhI
     g$parse$7315$sFNhI
     (case-lambda
       ((g$x$7232$sFNhI)
        (if (pair? g$x$7232$sFNhI)
          ((case-lambda
             ((g$t$7233$sFNhI)
              (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(quote))
                (g$cps/generate-literal$7005$sFNhI
                  (g$cadr$5654$sFNhI g$x$7232$sFNhI))
                (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(if))
                  (g$cps/generate-conditional$7009$sFNhI
                    (g$parse$7050$sFNhI (g$cadr$5654$sFNhI g$x$7232$sFNhI))
                    (g$parse$7050$sFNhI (g$caddr$5660$sFNhI g$x$7232$sFNhI))
                    (g$parse$7050$sFNhI (g$cadddr$5672$sFNhI g$x$7232$sFNhI)))
                  (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(case-lambda))
                    ((case-lambda
                       ((g$d$7234$sFNhI)
                        (g$cps/generate-abstractions$7007$sFNhI
                          (g$map$5157$sFNhI car g$d$7234$sFNhI)
                          (g$map$5157$sFNhI
                            (case-lambda
                              ((g$e$7235$sFNhI)
                               (g$cps/generate-sequence$7013$sFNhI
                                 (g$map$5157$sFNhI
                                   g$parse$7050$sFNhI
                                   (cdr g$e$7235$sFNhI)))))
                            g$d$7234$sFNhI))))
                     (cdr g$x$7232$sFNhI))
                    (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(letrec))
                      ((case-lambda
                         ((g$bindings$7236$sFNhI g$body*$7237$sFNhI)
                          ((case-lambda
                             ((g$lhs*$7238$sFNhI g$rhs*$7239$sFNhI)
                              ((case-lambda
                                 ((g$t*$7240$sFNhI g$tmps$7241$sFNhI)
                                  ((case-lambda
                                     ((g$s*$7242$sFNhI)
                                      (g$parse$7050$sFNhI
                                        (cons
                                          (list
                                            'case-lambda
                                            (list
                                              g$lhs*$7238$sFNhI
                                              (cons
                                                (list
                                                  'case-lambda
                                                  (cons
                                                    g$t*$7240$sFNhI
                                                    (append
                                                      g$s*$7242$sFNhI
                                                      g$body*$7237$sFNhI)))
                                                g$rhs*$7239$sFNhI)))
                                          g$tmps$7241$sFNhI))))
                                   (g$map$5157$sFNhI
                                     (case-lambda
                                       ((g$i$7243$sFNhI g$t$7244$sFNhI)
                                        (list
                                          'set!
                                          g$i$7243$sFNhI
                                          g$t$7244$sFNhI)))
                                     g$lhs*$7238$sFNhI
                                     g$t*$7240$sFNhI))))
                               (g$map$5157$sFNhI gensym g$lhs*$7238$sFNhI)
                               (g$map$5157$sFNhI
                                 (case-lambda ((g$x$7245$sFNhI) 'uninitialized))
                                 g$lhs*$7238$sFNhI))))
                           (g$map$5157$sFNhI car g$bindings$7236$sFNhI)
                           (g$map$5157$sFNhI
                             g$cadr$5654$sFNhI
                             g$bindings$7236$sFNhI))))
                       (g$cadr$5654$sFNhI g$x$7232$sFNhI)
                       (g$cddr$5656$sFNhI g$x$7232$sFNhI))
                      (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(letrec*))
                        ((case-lambda
                           ((g$bindings$7246$sFNhI g$body*$7247$sFNhI)
                            ((case-lambda
                               ((g$lhs*$7248$sFNhI g$rhs*$7249$sFNhI)
                                (g$cps/generate-recursive*-bind$7011$sFNhI
                                  g$lhs*$7248$sFNhI
                                  (g$map$5157$sFNhI
                                    g$parse$7050$sFNhI
                                    g$rhs*$7249$sFNhI)
                                  (g$parse$7050$sFNhI
                                    (cons 'begin g$body*$7247$sFNhI)))))
                             (g$map$5157$sFNhI car g$bindings$7246$sFNhI)
                             (g$map$5157$sFNhI
                               g$cadr$5654$sFNhI
                               g$bindings$7246$sFNhI))))
                         (g$cadr$5654$sFNhI g$x$7232$sFNhI)
                         (g$cddr$5656$sFNhI g$x$7232$sFNhI))
                        (if (g$memv$5150$sFNhI
                              g$t$7233$sFNhI
                              '(library-letrec*))
                          ((case-lambda
                             ((g$name$7250$sFNhI g$x$7251$sFNhI)
                              ((case-lambda
                                 ((g$bindings$7252$sFNhI g$body*$7253$sFNhI)
                                  ((case-lambda
                                     ((g$lhs*$7254$sFNhI
                                        g$lhs**$7255$sFNhI
                                        g$rhs*$7256$sFNhI)
                                      (g$cps/generate-recursive*-library-bind$7012$sFNhI
                                        g$name$7250$sFNhI
                                        g$lhs*$7254$sFNhI
                                        g$lhs**$7255$sFNhI
                                        (g$map$5157$sFNhI
                                          g$parse$7050$sFNhI
                                          g$rhs*$7256$sFNhI)
                                        (g$parse$7050$sFNhI
                                          (cons 'begin g$body*$7253$sFNhI)))))
                                   (g$map$5157$sFNhI car g$bindings$7252$sFNhI)
                                   (g$map$5157$sFNhI
                                     g$cadr$5654$sFNhI
                                     g$bindings$7252$sFNhI)
                                   (g$map$5157$sFNhI
                                     g$caddr$5660$sFNhI
                                     g$bindings$7252$sFNhI))))
                               (g$cadr$5654$sFNhI g$x$7251$sFNhI)
                               (g$cddr$5656$sFNhI g$x$7251$sFNhI))))
                           (g$cadr$5654$sFNhI g$x$7232$sFNhI)
                           (cdr g$x$7232$sFNhI))
                          (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(begin))
                            (g$cps/generate-sequence$7013$sFNhI
                              (g$map$5157$sFNhI
                                g$parse$7050$sFNhI
                                (cdr g$x$7232$sFNhI)))
                            (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(set!))
                              (g$cps/generate-assignment$7014$sFNhI
                                (g$cadr$5654$sFNhI g$x$7232$sFNhI)
                                (g$parse$7050$sFNhI
                                  (g$caddr$5660$sFNhI g$x$7232$sFNhI)))
                              (if (g$memv$5150$sFNhI g$t$7233$sFNhI '(define))
                                (g$cps/generate-declaration$7015$sFNhI
                                  (g$cadr$5654$sFNhI g$x$7232$sFNhI)
                                  (g$parse$7050$sFNhI
                                    (g$caddr$5660$sFNhI g$x$7232$sFNhI)))
                                (if (list? g$x$7232$sFNhI)
                                  (g$cps/generate-combination$7016$sFNhI
                                    (g$parse$7050$sFNhI (car g$x$7232$sFNhI))
                                    (g$map$5157$sFNhI
                                      g$parse$7050$sFNhI
                                      (cdr g$x$7232$sFNhI)))
                                  (error
                                    'rewrite
                                    '"invalid form ~s ~s"
                                    g$x$7232$sFNhI
                                    (list? g$x$7232$sFNhI))))))))))))))
           (car g$x$7232$sFNhI))
          (if (g$symbol?$5645$sFNhI g$x$7232$sFNhI)
            (g$cps/generate-reference$7004$sFNhI g$x$7232$sFNhI)
            (g$cps/generate-literal$7005$sFNhI g$x$7232$sFNhI))))))
   (g$starts-with?$7051$sFNhI
     g$starts-with?$7316$sFNhI
     (case-lambda
       ((g$str$7257$sFNhI g$sub$7258$sFNhI)
        (clr-call-internal
          'system.string
          'startswith
          g$str$7257$sFNhI
          g$sub$7258$sFNhI))))
   (g$ends-with?$7052$sFNhI
     g$ends-with?$7317$sFNhI
     (case-lambda
       ((g$str$7259$sFNhI g$sub$7260$sFNhI)
        (clr-call-internal
          'system.string
          'endswith
          g$str$7259$sFNhI
          g$sub$7260$sFNhI))))
   (g$clr-generator?$7053$sFNhI
     g$clr-generator?$7318$sFNhI
     (case-lambda
       ((g$o$7261$sFNhI)
        (if (g$symbol?$5645$sFNhI g$o$7261$sFNhI)
          (begin
            '#f
            ((case-lambda
               ((g$o$7262$sFNhI)
                (if (g$starts-with?$7051$sFNhI g$o$7262$sFNhI '"clr-")
                  (begin
                    '#f
                    (g$ends-with?$7052$sFNhI g$o$7262$sFNhI '"-internal"))
                  '#f)))
             (symbol->string g$o$7261$sFNhI)))
          '#f))))
   (g$fix-primitives$7054$sFNhI
     g$fix-primitives$7319$sFNhI
     (case-lambda
       ((g$e$7263$sFNhI)
        (if (if (pair? g$e$7263$sFNhI) (begin '#f (list? g$e$7263$sFNhI)) '#f)
          ((case-lambda
             ((g$o$7264$sFNhI)
              (if (eq? g$o$7264$sFNhI 'quote)
                g$e$7263$sFNhI
                (if (begin '#f (g$clr-generator?$7053$sFNhI g$o$7264$sFNhI))
                  (if (pair? (cdr g$e$7263$sFNhI))
                    (list
                      (g$fix-primitives$7054$sFNhI
                        (g$cadr$5654$sFNhI g$e$7263$sFNhI))
                      (cons
                        g$o$7264$sFNhI
                        (g$map$5157$sFNhI
                          g$fix-primitives$7054$sFNhI
                          (g$cddr$5656$sFNhI g$e$7263$sFNhI))))
                    g$e$7263$sFNhI)
                  (cons
                    (g$fix-primitives$7054$sFNhI g$o$7264$sFNhI)
                    (g$map$5157$sFNhI
                      g$fix-primitives$7054$sFNhI
                      (cdr g$e$7263$sFNhI)))))))
           (car g$e$7263$sFNhI))
          g$e$7263$sFNhI))))
   (g$parse->cps$7055$sFNhI
     g$parse->cps$7320$sFNhI
     (case-lambda
       ((g$e$7265$sFNhI g$var$7266$sFNhI)
        ((g$parse$7050$sFNhI g$e$7265$sFNhI)
         (g$variable-continuator$7021$sFNhI g$var$7266$sFNhI)))))
   (g$convert->cps$7056$sFNhI
     g$convert->cps$7321$sFNhI
     (case-lambda
       ((g$e$7267$sFNhI g$var$7268$sFNhI)
        (g$fix-primitives$7054$sFNhI
          (g$parse->cps$7055$sFNhI g$e$7267$sFNhI g$var$7268$sFNhI))))))
  (void))

(library-letrec* (psyntax compat)
  ((g$library-version-mismatch-warning$7322$sFNhI
     g$library-version-mismatch-warning$7423$sFNhI
     (case-lambda
       ((g$name$7397$sFNhI g$depname$7398$sFNhI g$filename$7399$sFNhI)
        (g$fprintf$6998$sFNhI
          (current-error-port)
          '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.
"
          g$name$7397$sFNhI
          g$depname$7398$sFNhI
          g$filename$7399$sFNhI))))
   (g$file-locator-resolution-error$7323$sFNhI
     g$file-locator-resolution-error$7424$sFNhI
     (case-lambda
       ((g$libname$7400$sFNhI g$failed-list$7401$sFNhI)
        (letrec* ((g$8326$7402$sFNhI
                    (make-record-type-descriptor
                      '&library-resolution
                      &condition-rtd
                      'g$8329$sFNhI
                      '#f
                      '#f
                      '#((immutable library) (immutable files))))
                  (g$8328$7403$sFNhI '#f)
                  (g$8327$7404$sFNhI
                    (make-record-constructor-descriptor
                      g$8326$7402$sFNhI
                      &condition-rcd
                      g$8328$7403$sFNhI))
                  (g$8325$7405$sFNhI (record-predicate g$8326$7402$sFNhI))
                  (g$make-library-resolution-condition$7406$sFNhI
                    (record-constructor g$8327$7404$sFNhI))
                  (g$8323$7407$sFNhI (record-accessor g$8326$7402$sFNhI '0))
                  (g$8324$7408$sFNhI (record-accessor g$8326$7402$sFNhI '1))
                  (g$library-resolution-condition?$7409$sFNhI
                    (condition-predicate g$8326$7402$sFNhI))
                  (g$condition-library$7410$sFNhI
                    (condition-accessor g$8326$7402$sFNhI g$8323$7407$sFNhI))
                  (g$condition-files$7411$sFNhI
                    (condition-accessor g$8326$7402$sFNhI g$8324$7408$sFNhI)))
          (raise
            (condition
              (g$make-error$6031$sFNhI)
              (g$make-who-condition$6057$sFNhI 'expander)
              (g$make-message-condition$6011$sFNhI
                '"cannot locate library in library-path")
              (g$make-library-resolution-condition$7406$sFNhI
                g$libname$7400$sFNhI
                g$failed-list$7401$sFNhI)))))))
   (g$read-library-source-file$7324$sFNhI
     g$read-library-source-file$7425$sFNhI
     (case-lambda
       ((g$file-name$7412$sFNhI)
        (g$with-input-from-file$6825$sFNhI
          g$file-name$7412$sFNhI
          read-annotated))))
   (g$make-parameter$7325$sFNhI
     g$make-parameter$7426$sFNhI
     (case-lambda
       ((g$x$7413$sFNhI)
        (g$make-parameter$7325$sFNhI
          g$x$7413$sFNhI
          (case-lambda ((g$x$7414$sFNhI) g$x$7414$sFNhI))))
       ((g$x$7415$sFNhI g$fender$7416$sFNhI)
        (begin
          (if (not (g$procedure?$5647$sFNhI g$fender$7416$sFNhI))
            (g$assertion-error$12031$sFNhI
              '(procedure? fender)
              '("psyntax\\compat.ss" . "(90,8) - (90,36)"))
            (void))
          ((case-lambda
             ((g$x$7417$sFNhI)
              (case-lambda
                (() g$x$7417$sFNhI)
                ((g$v$7418$sFNhI)
                 (set! g$x$7417$sFNhI (g$fender$7416$sFNhI g$v$7418$sFNhI))))))
           (g$fender$7416$sFNhI g$x$7415$sFNhI))))))
   (g$file-options-constructor$7393$sFNhI
     g$file-options-constructor$7427$sFNhI
     (g$make-parameter$7325$sFNhI '#f))
   (g$file-options-spec$7394$sFNhI
     g$file-options-spec$7428$sFNhI
     (case-lambda
       ((g$x$7419$sFNhI)
        ((g$file-options-constructor$7393$sFNhI) g$x$7419$sFNhI))))
   (g$set-label-binding!$7395$sFNhI
     g$set-label-binding!$7429$sFNhI
     (case-lambda
       ((g$label$7420$sFNhI g$binding$7421$sFNhI)
        (set-symbol-value! g$label$7420$sFNhI g$binding$7421$sFNhI))))
   (g$label-binding$7396$sFNhI
     g$label-binding$7430$sFNhI
     (case-lambda
       ((g$label$7422$sFNhI)
        (if (symbol-bound? g$label$7422$sFNhI)
          (begin '#f (symbol-value g$label$7422$sFNhI))
          '#f)))))
  (void))

(library-letrec* (psyntax internal)
  ((g$current-primitive-locations$7626$sFNhI
     g$current-primitive-locations$7671$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda ((g$x$7632$sFNhI) '#f))
       (case-lambda
         ((g$p$7633$sFNhI)
          (begin
            (if (not (g$procedure?$5647$sFNhI g$p$7633$sFNhI))
              (g$assertion-error$12031$sFNhI
                '(procedure? p)
                '("psyntax\\internal.ss" . "(29,9) - (29,32)"))
              (void))
            g$p$7633$sFNhI)))))
   (g$mutable?$7627$sFNhI
     g$mutable?$7672$sFNhI
     (case-lambda
       ((g$x$7634$sFNhI)
        (letrec* ((g$simple?$7635$sFNhI
                    (case-lambda
                      ((g$x$7636$sFNhI)
                       ((case-lambda
                          ((g$t$7637$sFNhI)
                           (if g$t$7637$sFNhI
                             g$t$7637$sFNhI
                             ((case-lambda
                                ((g$t$7638$sFNhI)
                                 (if g$t$7638$sFNhI
                                   g$t$7638$sFNhI
                                   ((case-lambda
                                      ((g$t$7639$sFNhI)
                                       (if g$t$7639$sFNhI
                                         g$t$7639$sFNhI
                                         ((case-lambda
                                            ((g$t$7640$sFNhI)
                                             (if g$t$7640$sFNhI
                                               g$t$7640$sFNhI
                                               ((case-lambda
                                                  ((g$t$7641$sFNhI)
                                                   (if g$t$7641$sFNhI
                                                     g$t$7641$sFNhI
                                                     ((case-lambda
                                                        ((g$t$7642$sFNhI)
                                                         (if g$t$7642$sFNhI
                                                           g$t$7642$sFNhI
                                                           (begin
                                                             '#f
                                                             (number?
                                                               g$x$7636$sFNhI)))))
                                                      (g$bytevector?$5644$sFNhI
                                                        g$x$7636$sFNhI)))))
                                                (string? g$x$7636$sFNhI)))))
                                          (g$boolean?$5646$sFNhI
                                            g$x$7636$sFNhI)))))
                                    (g$symbol?$5645$sFNhI g$x$7636$sFNhI)))))
                              (g$char?$5642$sFNhI g$x$7636$sFNhI)))))
                        (null? g$x$7636$sFNhI))))))
          (not (g$simple?$7635$sFNhI g$x$7634$sFNhI))))))
   (g$rewriter$7628$sFNhI
     g$rewriter$7673$sFNhI
     (case-lambda
       ((g$quote-hack?$7643$sFNhI)
        (letrec* ((g$f$7644$sFNhI
                    (case-lambda
                      ((g$x$7645$sFNhI)
                       (if (pair? g$x$7645$sFNhI)
                         ((case-lambda
                            ((g$t$7646$sFNhI)
                             (if (g$memv$5150$sFNhI g$t$7646$sFNhI '(quote))
                               (if (if g$quote-hack?$7643$sFNhI
                                     (begin
                                       '#f
                                       (g$mutable?$7627$sFNhI
                                         (g$cadr$5654$sFNhI g$x$7645$sFNhI)))
                                     '#f)
                                 ((case-lambda
                                    ((g$g$7647$sFNhI)
                                     (begin
                                       (set-symbol-value!
                                         g$g$7647$sFNhI
                                         (g$cadr$5654$sFNhI g$x$7645$sFNhI))
                                       g$g$7647$sFNhI)))
                                  (gensym))
                                 g$x$7645$sFNhI)
                               (if (g$memv$5150$sFNhI
                                     g$t$7646$sFNhI
                                     '(case-lambda))
                                 (cons
                                   'case-lambda
                                   (g$map$5157$sFNhI
                                     (case-lambda
                                       ((g$x$7648$sFNhI)
                                        (cons
                                          (car g$x$7648$sFNhI)
                                          (g$map$5157$sFNhI
                                            g$f$7644$sFNhI
                                            (cdr g$x$7648$sFNhI)))))
                                     (cdr g$x$7645$sFNhI)))
                                 (if (g$memv$5150$sFNhI
                                       g$t$7646$sFNhI
                                       '(lambda))
                                   (g$cons*$5159$sFNhI
                                     'lambda
                                     (g$cadr$5654$sFNhI g$x$7645$sFNhI)
                                     (g$map$5157$sFNhI
                                       g$f$7644$sFNhI
                                       (g$cddr$5656$sFNhI g$x$7645$sFNhI)))
                                   (if (g$memv$5150$sFNhI
                                         g$t$7646$sFNhI
                                         '(letrec))
                                     ((case-lambda
                                        ((g$bindings$7649$sFNhI
                                           g$body*$7650$sFNhI)
                                         ((case-lambda
                                            ((g$lhs*$7651$sFNhI
                                               g$rhs*$7652$sFNhI)
                                             (g$cons*$5159$sFNhI
                                               'letrec
                                               (g$map$5157$sFNhI
                                                 list
                                                 g$lhs*$7651$sFNhI
                                                 (g$map$5157$sFNhI
                                                   g$f$7644$sFNhI
                                                   g$rhs*$7652$sFNhI))
                                               (g$map$5157$sFNhI
                                                 g$f$7644$sFNhI
                                                 g$body*$7650$sFNhI))))
                                          (g$map$5157$sFNhI
                                            car
                                            g$bindings$7649$sFNhI)
                                          (g$map$5157$sFNhI
                                            g$cadr$5654$sFNhI
                                            g$bindings$7649$sFNhI))))
                                      (g$cadr$5654$sFNhI g$x$7645$sFNhI)
                                      (g$cddr$5656$sFNhI g$x$7645$sFNhI))
                                     (if (g$memv$5150$sFNhI
                                           g$t$7646$sFNhI
                                           '(letrec*))
                                       ((case-lambda
                                          ((g$bindings$7653$sFNhI
                                             g$body*$7654$sFNhI)
                                           ((case-lambda
                                              ((g$lhs*$7655$sFNhI
                                                 g$rhs*$7656$sFNhI)
                                               (g$cons*$5159$sFNhI
                                                 'letrec*
                                                 (g$map$5157$sFNhI
                                                   list
                                                   g$lhs*$7655$sFNhI
                                                   (g$map$5157$sFNhI
                                                     g$f$7644$sFNhI
                                                     g$rhs*$7656$sFNhI))
                                                 (g$map$5157$sFNhI
                                                   g$f$7644$sFNhI
                                                   g$body*$7654$sFNhI))))
                                            (g$map$5157$sFNhI
                                              car
                                              g$bindings$7653$sFNhI)
                                            (g$map$5157$sFNhI
                                              g$cadr$5654$sFNhI
                                              g$bindings$7653$sFNhI))))
                                        (g$cadr$5654$sFNhI g$x$7645$sFNhI)
                                        (g$cddr$5656$sFNhI g$x$7645$sFNhI))
                                       (if (g$memv$5150$sFNhI
                                             g$t$7646$sFNhI
                                             '(library-letrec*))
                                         ((case-lambda
                                            ((g$name$7657$sFNhI g$x$7658$sFNhI)
                                             ((case-lambda
                                                ((g$bindings$7659$sFNhI
                                                   g$body*$7660$sFNhI)
                                                 ((case-lambda
                                                    ((g$lhs*$7661$sFNhI
                                                       g$lhs**$7662$sFNhI
                                                       g$rhs*$7663$sFNhI)
                                                     (g$cons*$5159$sFNhI
                                                       'library-letrec*
                                                       g$name$7657$sFNhI
                                                       (g$map$5157$sFNhI
                                                         list
                                                         g$lhs*$7661$sFNhI
                                                         g$lhs**$7662$sFNhI
                                                         (g$map$5157$sFNhI
                                                           g$f$7644$sFNhI
                                                           g$rhs*$7663$sFNhI))
                                                       (g$map$5157$sFNhI
                                                         g$f$7644$sFNhI
                                                         g$body*$7660$sFNhI))))
                                                  (g$map$5157$sFNhI
                                                    car
                                                    g$bindings$7659$sFNhI)
                                                  (g$map$5157$sFNhI
                                                    g$cadr$5654$sFNhI
                                                    g$bindings$7659$sFNhI)
                                                  (g$map$5157$sFNhI
                                                    g$caddr$5660$sFNhI
                                                    g$bindings$7659$sFNhI))))
                                              (g$cadr$5654$sFNhI g$x$7658$sFNhI)
                                              (g$cddr$5656$sFNhI
                                                g$x$7658$sFNhI))))
                                          (g$cadr$5654$sFNhI g$x$7645$sFNhI)
                                          (cdr g$x$7645$sFNhI))
                                         (if (g$memv$5150$sFNhI
                                               g$t$7646$sFNhI
                                               '(begin))
                                           (cons
                                             'begin
                                             (g$map$5157$sFNhI
                                               g$f$7644$sFNhI
                                               (cdr g$x$7645$sFNhI)))
                                           (if (g$memv$5150$sFNhI
                                                 g$t$7646$sFNhI
                                                 '(set!))
                                             (list
                                               'set!
                                               (g$cadr$5654$sFNhI
                                                 g$x$7645$sFNhI)
                                               (g$f$7644$sFNhI
                                                 (g$caddr$5660$sFNhI
                                                   g$x$7645$sFNhI)))
                                             (if (g$memv$5150$sFNhI
                                                   g$t$7646$sFNhI
                                                   '(primitive))
                                               ((case-lambda
                                                  ((g$op$7664$sFNhI)
                                                   ((case-lambda
                                                      ((g$t$7665$sFNhI)
                                                       (if g$t$7665$sFNhI
                                                         ((case-lambda
                                                            ((g$loc$7666$sFNhI)
                                                             g$loc$7666$sFNhI))
                                                          g$t$7665$sFNhI)
                                                         g$op$7664$sFNhI)))
                                                    ((g$current-primitive-locations$7626$sFNhI)
                                                     g$op$7664$sFNhI))))
                                                (g$cadr$5654$sFNhI
                                                  g$x$7645$sFNhI))
                                               (if (g$memv$5150$sFNhI
                                                     g$t$7646$sFNhI
                                                     '(define))
                                                 g$x$7645$sFNhI
                                                 (if (list? g$x$7645$sFNhI)
                                                   (g$map$5157$sFNhI
                                                     g$f$7644$sFNhI
                                                     g$x$7645$sFNhI)
                                                   (error
                                                     'rewrite
                                                     '"invalid form ~s ~s"
                                                     g$x$7645$sFNhI
                                                     (list?
                                                       g$x$7645$sFNhI)))))))))))))))
                          (car g$x$7645$sFNhI))
                         g$x$7645$sFNhI)))))
          g$f$7644$sFNhI))))
   (g$expanded->core$7629$sFNhI
     g$expanded->core$7674$sFNhI
     (case-lambda
       ((g$x$7667$sFNhI) ((g$rewriter$7628$sFNhI '#t) g$x$7667$sFNhI))))
   (g$compile-core-expr$7630$sFNhI
     g$compile-core-expr$7675$sFNhI
     (case-lambda
       ((g$x$7668$sFNhI) ((g$rewriter$7628$sFNhI '#f) g$x$7668$sFNhI))))
   (g$compile-core-expr-to-port$7631$sFNhI
     g$compile-core-expr-to-port$7676$sFNhI
     (case-lambda
       ((g$x$7669$sFNhI g$p$7670$sFNhI)
        (g$pretty-print$7625$sFNhI
          ((g$rewriter$7628$sFNhI '#f) g$x$7669$sFNhI)
          g$p$7670$sFNhI)))))
  (void))

(library-letrec* (psyntax library-manager)
  ((g$make-collection$7677$sFNhI
     g$make-collection$7880$sFNhI
     (case-lambda
       (()
        ((case-lambda
           ((g$set$7738$sFNhI)
            (letrec* ((g$set-cons$7739$sFNhI
                        (case-lambda
                          ((g$x$7743$sFNhI g$ls$7744$sFNhI)
                           (if (g$memq$5149$sFNhI
                                 g$x$7743$sFNhI
                                 g$ls$7744$sFNhI)
                             g$ls$7744$sFNhI
                             (cons g$x$7743$sFNhI g$ls$7744$sFNhI))))))
              (case-lambda
                (() g$set$7738$sFNhI)
                ((g$x$7740$sFNhI)
                 (set! g$set$7738$sFNhI
                   (g$set-cons$7739$sFNhI g$x$7740$sFNhI g$set$7738$sFNhI)))
                ((g$x$7741$sFNhI g$del?$7742$sFNhI)
                 (if g$del?$7742$sFNhI
                   (set! g$set$7738$sFNhI
                     (g$remq$5164$sFNhI g$x$7741$sFNhI g$set$7738$sFNhI))
                   (set! g$set$7738$sFNhI
                     (g$set-cons$7739$sFNhI
                       g$x$7741$sFNhI
                       g$set$7738$sFNhI))))))))
         '()))))
   (g$current-library-collection$7678$sFNhI
     g$current-library-collection$7881$sFNhI
     (g$make-parameter$7426$sFNhI
       (g$make-collection$7677$sFNhI)
       (case-lambda
         ((g$x$7745$sFNhI)
          (begin
            (if (not (g$procedure?$5647$sFNhI g$x$7745$sFNhI))
              (assertion-violation
                'current-library-collection
                '"not a procedure"
                g$x$7745$sFNhI)
              (void))
            g$x$7745$sFNhI)))))
   (g$8596$7679$sFNhI
     g$8596$7882$sFNhI
     (make-record-type-descriptor
       'library
       '#f
       'g$8599$sFNhI
       '#t
       '#t
       '#((mutable id)
          (mutable name)
          (mutable version)
          (mutable imp*)
          (mutable vis*)
          (mutable inv*)
          (mutable subst)
          (mutable env)
          (mutable visit-state)
          (mutable invoke-state)
          (mutable visit-code)
          (mutable invoke-code)
          (mutable visible?)
          (mutable source-file-name))))
   (g$8598$7680$sFNhI g$8598$7883$sFNhI '#f)
   (g$8597$7681$sFNhI
     g$8597$7884$sFNhI
     (make-record-constructor-descriptor
       g$8596$7679$sFNhI
       '#f
       g$8598$7680$sFNhI))
   (g$library?$7682$sFNhI
     g$library?$7885$sFNhI
     (record-predicate g$8596$7679$sFNhI))
   (g$make-library$7683$sFNhI
     g$make-library$7886$sFNhI
     (record-constructor g$8597$7681$sFNhI))
   (g$library-id$7684$sFNhI
     g$library-id$7887$sFNhI
     (record-accessor g$8596$7679$sFNhI '0))
   (g$library-name$7685$sFNhI
     g$library-name$7888$sFNhI
     (record-accessor g$8596$7679$sFNhI '1))
   (g$library-version$7686$sFNhI
     g$library-version$7889$sFNhI
     (record-accessor g$8596$7679$sFNhI '2))
   (g$library-imp*$7687$sFNhI
     g$library-imp*$7890$sFNhI
     (record-accessor g$8596$7679$sFNhI '3))
   (g$library-vis*$7688$sFNhI
     g$library-vis*$7891$sFNhI
     (record-accessor g$8596$7679$sFNhI '4))
   (g$library-inv*$7689$sFNhI
     g$library-inv*$7892$sFNhI
     (record-accessor g$8596$7679$sFNhI '5))
   (g$library-subst$7690$sFNhI
     g$library-subst$7893$sFNhI
     (record-accessor g$8596$7679$sFNhI '6))
   (g$library-env$7691$sFNhI
     g$library-env$7894$sFNhI
     (record-accessor g$8596$7679$sFNhI '7))
   (g$library-visit-state$7692$sFNhI
     g$library-visit-state$7895$sFNhI
     (record-accessor g$8596$7679$sFNhI '8))
   (g$library-invoke-state$7693$sFNhI
     g$library-invoke-state$7896$sFNhI
     (record-accessor g$8596$7679$sFNhI '9))
   (g$library-visit-code$7694$sFNhI
     g$library-visit-code$7897$sFNhI
     (record-accessor g$8596$7679$sFNhI '10))
   (g$library-invoke-code$7695$sFNhI
     g$library-invoke-code$7898$sFNhI
     (record-accessor g$8596$7679$sFNhI '11))
   (g$library-visible?$7696$sFNhI
     g$library-visible?$7899$sFNhI
     (record-accessor g$8596$7679$sFNhI '12))
   (g$library-source-file-name$7697$sFNhI
     g$library-source-file-name$7900$sFNhI
     (record-accessor g$8596$7679$sFNhI '13))
   (g$set-library-id!$7698$sFNhI
     g$set-library-id!$7901$sFNhI
     (record-mutator g$8596$7679$sFNhI '0))
   (g$set-library-name!$7699$sFNhI
     g$set-library-name!$7902$sFNhI
     (record-mutator g$8596$7679$sFNhI '1))
   (g$set-library-version!$7700$sFNhI
     g$set-library-version!$7903$sFNhI
     (record-mutator g$8596$7679$sFNhI '2))
   (g$set-library-imp*!$7701$sFNhI
     g$set-library-imp*!$7904$sFNhI
     (record-mutator g$8596$7679$sFNhI '3))
   (g$set-library-vis*!$7702$sFNhI
     g$set-library-vis*!$7905$sFNhI
     (record-mutator g$8596$7679$sFNhI '4))
   (g$set-library-inv*!$7703$sFNhI
     g$set-library-inv*!$7906$sFNhI
     (record-mutator g$8596$7679$sFNhI '5))
   (g$set-library-subst!$7704$sFNhI
     g$set-library-subst!$7907$sFNhI
     (record-mutator g$8596$7679$sFNhI '6))
   (g$set-library-env!$7705$sFNhI
     g$set-library-env!$7908$sFNhI
     (record-mutator g$8596$7679$sFNhI '7))
   (g$set-library-visit-state!$7706$sFNhI
     g$set-library-visit-state!$7909$sFNhI
     (record-mutator g$8596$7679$sFNhI '8))
   (g$set-library-invoke-state!$7707$sFNhI
     g$set-library-invoke-state!$7910$sFNhI
     (record-mutator g$8596$7679$sFNhI '9))
   (g$set-library-visit-code!$7708$sFNhI
     g$set-library-visit-code!$7911$sFNhI
     (record-mutator g$8596$7679$sFNhI '10))
   (g$set-library-invoke-code!$7709$sFNhI
     g$set-library-invoke-code!$7912$sFNhI
     (record-mutator g$8596$7679$sFNhI '11))
   (g$set-library-visible?!$7710$sFNhI
     g$set-library-visible?!$7913$sFNhI
     (record-mutator g$8596$7679$sFNhI '12))
   (g$set-library-source-file-name!$7711$sFNhI
     g$set-library-source-file-name!$7914$sFNhI
     (record-mutator g$8596$7679$sFNhI '13))
   (g$rp$7712$sFNhI
     g$rp$7915$sFNhI
     (make-record-printer
       'library
       (case-lambda
         ((g$x$7746$sFNhI g$p$7747$sFNhI g$wr$7748$sFNhI)
          (begin
            (if (not (g$library?$7682$sFNhI g$x$7746$sFNhI))
              (assertion-violation 'record-type-printer '"not a library")
              (void))
            (display
              (g$format$6999$sFNhI
                '"#<library ~s>"
                (if (null? (g$library-version$7686$sFNhI g$x$7746$sFNhI))
                  (g$library-name$7685$sFNhI g$x$7746$sFNhI)
                  (append
                    (g$library-name$7685$sFNhI g$x$7746$sFNhI)
                    (list (g$library-version$7686$sFNhI g$x$7746$sFNhI)))))
              g$p$7747$sFNhI))))))
   (g$find-dependencies$7713$sFNhI
     g$find-dependencies$7916$sFNhI
     (case-lambda
       ((g$ls$7749$sFNhI)
        (if (null? g$ls$7749$sFNhI)
          '()
          (assertion-violation 'find-dependencies '"cannot handle deps yet")))))
   (g$find-library-by$7714$sFNhI
     g$find-library-by$7917$sFNhI
     (case-lambda
       ((g$pred$7750$sFNhI)
        ((letrec ((g$f$7751$sFNhI
                    (case-lambda
                      ((g$ls$7752$sFNhI)
                       (if (null? g$ls$7752$sFNhI)
                         '#f
                         (if (g$pred$7750$sFNhI (car g$ls$7752$sFNhI))
                           (car g$ls$7752$sFNhI)
                           (g$f$7751$sFNhI (cdr g$ls$7752$sFNhI))))))))
           g$f$7751$sFNhI)
         ((g$current-library-collection$7678$sFNhI))))))
   (g$library-path$7715$sFNhI
     g$library-path$7918$sFNhI
     (g$make-parameter$7426$sFNhI
       '(".")
       (case-lambda
         ((g$x$7753$sFNhI)
          (if (if (list? g$x$7753$sFNhI)
                (begin '#f (g$for-all$5155$sFNhI string? g$x$7753$sFNhI))
                '#f)
            (g$map$5157$sFNhI
              (case-lambda ((g$x$7754$sFNhI) g$x$7754$sFNhI))
              g$x$7753$sFNhI)
            (assertion-violation
              'library-path
              '"not a list of strings"
              g$x$7753$sFNhI))))))
   (g$library-extensions$7716$sFNhI
     g$library-extensions$7919$sFNhI
     (g$make-parameter$7426$sFNhI
       '(".sls" ".ss" ".scm")
       (case-lambda
         ((g$x$7755$sFNhI)
          (if (if (list? g$x$7755$sFNhI)
                (begin '#f (g$for-all$5155$sFNhI string? g$x$7755$sFNhI))
                '#f)
            (g$map$5157$sFNhI
              (case-lambda ((g$x$7756$sFNhI) g$x$7756$sFNhI))
              g$x$7755$sFNhI)
            (assertion-violation
              'library-extensions
              '"not a list of strings"
              g$x$7755$sFNhI))))))
   (g$library-name->file-name$7717$sFNhI
     g$library-name->file-name$7920$sFNhI
     (case-lambda
       ((g$x$7757$sFNhI)
        (call-with-values
          (case-lambda (() (g$open-string-output-port$6776$sFNhI)))
          (case-lambda
            ((g$p$7760$sFNhI g$extract$7761$sFNhI)
             ((case-lambda
                ((g$extract$7762$sFNhI g$p$7763$sFNhI)
                 (letrec* ((g$display-hex$7764$sFNhI
                             (case-lambda
                               ((g$n$7772$sFNhI)
                                (if (<= '0 g$n$7772$sFNhI '9)
                                  (display g$n$7772$sFNhI g$p$7763$sFNhI)
                                  (display
                                    (integer->char
                                      (+ (char->integer '#\A)
                                         (- g$n$7772$sFNhI '10)))
                                    g$p$7763$sFNhI))))))
                   (begin
                     ((letrec ((g$f$7765$sFNhI
                                 (case-lambda
                                   ((g$ls$7766$sFNhI)
                                    (if (not (null? g$ls$7766$sFNhI))
                                      (begin
                                        (display '"/" g$p$7763$sFNhI)
                                        (g$for-each$5158$sFNhI
                                          (case-lambda
                                            ((g$c$7767$sFNhI)
                                             (if ((case-lambda
                                                    ((g$t$7768$sFNhI)
                                                     (if g$t$7768$sFNhI
                                                       g$t$7768$sFNhI
                                                       ((case-lambda
                                                          ((g$t$7769$sFNhI)
                                                           (if g$t$7769$sFNhI
                                                             g$t$7769$sFNhI
                                                             ((case-lambda
                                                                ((g$t$7770$sFNhI)
                                                                 (if g$t$7770$sFNhI
                                                                   g$t$7770$sFNhI
                                                                   (begin
                                                                     '#f
                                                                     (g$memv$5150$sFNhI
                                                                       g$c$7767$sFNhI
                                                                       '(#\-
                                                                         #\.
                                                                         #\_
                                                                         #\~))))))
                                                              (g$char<=?$5700$sFNhI
                                                                '#\0
                                                                g$c$7767$sFNhI
                                                                '#\9)))))
                                                        (g$char<=?$5700$sFNhI
                                                          '#\A
                                                          g$c$7767$sFNhI
                                                          '#\Z)))))
                                                  (g$char<=?$5700$sFNhI
                                                    '#\a
                                                    g$c$7767$sFNhI
                                                    '#\z))
                                               (display
                                                 g$c$7767$sFNhI
                                                 g$p$7763$sFNhI)
                                               (begin
                                                 (display '"%" g$p$7763$sFNhI)
                                                 ((case-lambda
                                                    ((g$n$7771$sFNhI)
                                                     (begin
                                                       (g$display-hex$7764$sFNhI
                                                         (g$quotient$6125$sFNhI
                                                           g$n$7771$sFNhI
                                                           '16))
                                                       (g$display-hex$7764$sFNhI
                                                         (g$remainder$6126$sFNhI
                                                           g$n$7771$sFNhI
                                                           '16)))))
                                                  (char->integer
                                                    g$c$7767$sFNhI))))))
                                          (string->list
                                            (symbol->string
                                              (car g$ls$7766$sFNhI))))
                                        (g$f$7765$sFNhI (cdr g$ls$7766$sFNhI)))
                                      (void))))))
                        g$f$7765$sFNhI)
                      g$x$7757$sFNhI)
                     (g$extract$7762$sFNhI)))))
              g$extract$7761$sFNhI
              g$p$7760$sFNhI)))))))
   (g$file-locator$7718$sFNhI
     g$file-locator$7921$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda
         ((g$x$7773$sFNhI)
          ((case-lambda
             ((g$str$7774$sFNhI)
              ((letrec ((g$f$7775$sFNhI
                          (case-lambda
                            ((g$ls$7776$sFNhI
                               g$exts$7777$sFNhI
                               g$failed-list$7778$sFNhI)
                             (if (null? g$ls$7776$sFNhI)
                               (g$file-locator-resolution-error$7424$sFNhI
                                 g$x$7773$sFNhI
                                 (g$reverse$5652$sFNhI
                                   g$failed-list$7778$sFNhI))
                               (if (null? g$exts$7777$sFNhI)
                                 (g$f$7775$sFNhI
                                   (cdr g$ls$7776$sFNhI)
                                   (g$library-extensions$7716$sFNhI)
                                   g$failed-list$7778$sFNhI)
                                 ((case-lambda
                                    ((g$name$7779$sFNhI)
                                     (if (g$file-exists?$5762$sFNhI
                                           g$name$7779$sFNhI)
                                       g$name$7779$sFNhI
                                       (g$f$7775$sFNhI
                                         g$ls$7776$sFNhI
                                         (cdr g$exts$7777$sFNhI)
                                         (cons
                                           g$name$7779$sFNhI
                                           g$failed-list$7778$sFNhI)))))
                                  (string-append
                                    (car g$ls$7776$sFNhI)
                                    g$str$7774$sFNhI
                                    (car g$exts$7777$sFNhI)))))))))
                 g$f$7775$sFNhI)
               (g$library-path$7715$sFNhI)
               (g$library-extensions$7716$sFNhI)
               '())))
           (g$library-name->file-name$7717$sFNhI g$x$7773$sFNhI))))
       (case-lambda
         ((g$f$7780$sFNhI)
          (if (g$procedure?$5647$sFNhI g$f$7780$sFNhI)
            g$f$7780$sFNhI
            (assertion-violation
              'file-locator
              '"not a procedure"
              g$f$7780$sFNhI))))))
   (g$serialize-all$7719$sFNhI
     g$serialize-all$7922$sFNhI
     (case-lambda
       ((g$serialize$7781$sFNhI g$compile$7782$sFNhI)
        (letrec* ((g$library-desc$7783$sFNhI
                    (case-lambda
                      ((g$x$7785$sFNhI)
                       (list
                         (g$library-id$7684$sFNhI g$x$7785$sFNhI)
                         (g$library-name$7685$sFNhI g$x$7785$sFNhI))))))
          (g$for-each$5158$sFNhI
            (case-lambda
              ((g$x$7784$sFNhI)
               (if (g$library-source-file-name$7697$sFNhI g$x$7784$sFNhI)
                 (g$serialize$7781$sFNhI
                   (g$library-source-file-name$7697$sFNhI g$x$7784$sFNhI)
                   (list
                     (g$library-id$7684$sFNhI g$x$7784$sFNhI)
                     (g$library-name$7685$sFNhI g$x$7784$sFNhI)
                     (g$library-version$7686$sFNhI g$x$7784$sFNhI)
                     (g$map$5157$sFNhI
                       g$library-desc$7783$sFNhI
                       (g$library-imp*$7687$sFNhI g$x$7784$sFNhI))
                     (g$map$5157$sFNhI
                       g$library-desc$7783$sFNhI
                       (g$library-vis*$7688$sFNhI g$x$7784$sFNhI))
                     (g$map$5157$sFNhI
                       g$library-desc$7783$sFNhI
                       (g$library-inv*$7689$sFNhI g$x$7784$sFNhI))
                     (g$library-subst$7690$sFNhI g$x$7784$sFNhI)
                     (g$library-env$7691$sFNhI g$x$7784$sFNhI)
                     (g$compile$7782$sFNhI
                       (g$library-visit-code$7694$sFNhI g$x$7784$sFNhI))
                     (g$compile$7782$sFNhI
                       (g$library-invoke-code$7695$sFNhI g$x$7784$sFNhI))
                     (g$library-visible?$7696$sFNhI g$x$7784$sFNhI)))
                 (void))))
            ((g$current-library-collection$7678$sFNhI)))))))
   (g$current-precompiled-library-loader$7720$sFNhI
     g$current-precompiled-library-loader$7923$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda ((g$filename$7786$sFNhI g$sk$7787$sFNhI) '#f))))
   (g$try-load-from-file$7721$sFNhI
     g$try-load-from-file$7924$sFNhI
     (case-lambda
       ((g$filename$7788$sFNhI)
        ((g$current-precompiled-library-loader$7720$sFNhI)
         g$filename$7788$sFNhI
         (case-lambda
           ((g$id$7789$sFNhI
              g$name$7790$sFNhI
              g$ver$7791$sFNhI
              g$imp*$7792$sFNhI
              g$vis*$7793$sFNhI
              g$inv*$7794$sFNhI
              g$exp-subst$7795$sFNhI
              g$exp-env$7796$sFNhI
              g$visit-proc$7797$sFNhI
              g$invoke-proc$7798$sFNhI
              g$visible?$7799$sFNhI)
            ((letrec ((g$f$7800$sFNhI
                        (case-lambda
                          ((g$deps$7801$sFNhI)
                           (if (null? g$deps$7801$sFNhI)
                             (begin
                               (g$install-library$7731$sFNhI
                                 g$id$7789$sFNhI
                                 g$name$7790$sFNhI
                                 g$ver$7791$sFNhI
                                 g$imp*$7792$sFNhI
                                 g$vis*$7793$sFNhI
                                 g$inv*$7794$sFNhI
                                 g$exp-subst$7795$sFNhI
                                 g$exp-env$7796$sFNhI
                                 g$visit-proc$7797$sFNhI
                                 g$invoke-proc$7798$sFNhI
                                 '#f
                                 '#f
                                 g$visible?$7799$sFNhI
                                 '#f)
                               '#t)
                             ((case-lambda
                                ((g$d$7802$sFNhI)
                                 ((case-lambda
                                    ((g$label$7803$sFNhI g$dname$7804$sFNhI)
                                     ((case-lambda
                                        ((g$l$7805$sFNhI)
                                         (if (if (g$library?$7682$sFNhI
                                                   g$l$7805$sFNhI)
                                               (begin
                                                 '#f
                                                 (eq? g$label$7803$sFNhI
                                                      (g$library-id$7684$sFNhI
                                                        g$l$7805$sFNhI)))
                                               '#f)
                                           (g$f$7800$sFNhI
                                             (cdr g$deps$7801$sFNhI))
                                           (begin
                                             (g$library-version-mismatch-warning$7423$sFNhI
                                               g$name$7790$sFNhI
                                               g$dname$7804$sFNhI
                                               g$filename$7788$sFNhI)
                                             '#f))))
                                      (g$find-library-by-name$7726$sFNhI
                                        g$dname$7804$sFNhI))))
                                  (car g$d$7802$sFNhI)
                                  (g$cadr$5654$sFNhI g$d$7802$sFNhI))))
                              (car g$deps$7801$sFNhI)))))))
               g$f$7800$sFNhI)
             (append g$imp*$7792$sFNhI g$vis*$7793$sFNhI g$inv*$7794$sFNhI)))
           (g$others$7806$sFNhI '#f))))))
   (g$library-loader$7722$sFNhI
     g$library-loader$7925$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda
         ((g$x$7807$sFNhI)
          ((case-lambda
             ((g$file-name$7808$sFNhI)
              (if (not g$file-name$7808$sFNhI)
                (assertion-violation '#f '"cannot file library" g$x$7807$sFNhI)
                ((case-lambda
                   ((g$t$7809$sFNhI)
                    (if g$t$7809$sFNhI
                      g$t$7809$sFNhI
                      (begin
                        '#f
                        ((g$current-library-expander$7723$sFNhI)
                         (g$read-library-source-file$7425$sFNhI
                           g$file-name$7808$sFNhI)
                         g$file-name$7808$sFNhI
                         (case-lambda
                           ((g$name$7810$sFNhI)
                            (if (not (equal? g$name$7810$sFNhI g$x$7807$sFNhI))
                              (assertion-violation
                                'import
                                (call-with-values
                                  (case-lambda
                                    (() (g$open-string-output-port$6776$sFNhI)))
                                  (case-lambda
                                    ((g$p$7813$sFNhI g$e$7814$sFNhI)
                                     ((case-lambda
                                        ((g$e$7815$sFNhI g$p$7816$sFNhI)
                                         (begin
                                           (display
                                             '"expected to find library "
                                             g$p$7816$sFNhI)
                                           (write g$x$7807$sFNhI g$p$7816$sFNhI)
                                           (display '" in file " g$p$7816$sFNhI)
                                           (display
                                             g$file-name$7808$sFNhI
                                             g$p$7816$sFNhI)
                                           (display '", found " g$p$7816$sFNhI)
                                           (write
                                             g$name$7810$sFNhI
                                             g$p$7816$sFNhI)
                                           (display '" instead" g$p$7816$sFNhI)
                                           (g$e$7815$sFNhI))))
                                      g$e$7814$sFNhI
                                      g$p$7813$sFNhI)))))
                              (void)))))))))
                 (g$try-load-from-file$7721$sFNhI g$file-name$7808$sFNhI)))))
           ((g$file-locator$7718$sFNhI) g$x$7807$sFNhI))))
       (case-lambda
         ((g$f$7817$sFNhI)
          (if (g$procedure?$5647$sFNhI g$f$7817$sFNhI)
            g$f$7817$sFNhI
            (assertion-violation
              'library-locator
              '"not a procedure"
              g$f$7817$sFNhI))))))
   (g$current-library-expander$7723$sFNhI
     g$current-library-expander$7926$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda
         ((g$x$7818$sFNhI)
          (assertion-violation 'library-expander '"not initialized")))
       (case-lambda
         ((g$f$7819$sFNhI)
          (if (g$procedure?$5647$sFNhI g$f$7819$sFNhI)
            g$f$7819$sFNhI
            (assertion-violation
              'library-expander
              '"not a procedure"
              g$f$7819$sFNhI))))))
   (g$external-pending-libraries$7724$sFNhI
     g$external-pending-libraries$7927$sFNhI
     (g$make-parameter$7426$sFNhI '()))
   (g$find-external-library$7725$sFNhI
     g$find-external-library$7928$sFNhI
     (case-lambda
       ((g$name$7820$sFNhI)
        (begin
          (if (g$member$5151$sFNhI
                g$name$7820$sFNhI
                (g$external-pending-libraries$7724$sFNhI))
            (assertion-violation
              '#f
              '"circular attempt to import library was detected"
              g$name$7820$sFNhI)
            (void))
          ((case-lambda
             ((g$external-pending-libraries$7823$sFNhI
                g$external-pending-libraries$7824$sFNhI)
              ((case-lambda
                 ((g$swap$7825$sFNhI)
                  (dynamic-wind
                    g$swap$7825$sFNhI
                    (case-lambda
                      (()
                       (begin
                         ((g$library-loader$7722$sFNhI) g$name$7820$sFNhI)
                         ((case-lambda
                            ((g$t$7826$sFNhI)
                             (if g$t$7826$sFNhI
                               g$t$7826$sFNhI
                               (begin
                                 '#f
                                 (assertion-violation
                                   '#f
                                   '"handling external library did not yield the correct library"
                                   g$name$7820$sFNhI)))))
                          (g$find-library-by$7714$sFNhI
                            (case-lambda
                              ((g$x$7827$sFNhI)
                               (equal?
                                 (g$library-name$7685$sFNhI g$x$7827$sFNhI)
                                 g$name$7820$sFNhI))))))))
                    g$swap$7825$sFNhI)))
               (case-lambda
                 (()
                  ((case-lambda
                     ((g$t$7828$sFNhI)
                      (begin
                        (g$external-pending-libraries$7823$sFNhI
                          g$external-pending-libraries$7824$sFNhI)
                        (set! g$external-pending-libraries$7824$sFNhI
                          g$t$7828$sFNhI))))
                   (g$external-pending-libraries$7823$sFNhI)))))))
           g$external-pending-libraries$7724$sFNhI
           (cons
             g$name$7820$sFNhI
             (g$external-pending-libraries$7724$sFNhI)))))))
   (g$find-library-by-name$7726$sFNhI
     g$find-library-by-name$7929$sFNhI
     (case-lambda
       ((g$name$7829$sFNhI)
        ((case-lambda
           ((g$t$7830$sFNhI)
            (if g$t$7830$sFNhI
              g$t$7830$sFNhI
              (begin
                '#f
                (g$find-external-library$7725$sFNhI g$name$7829$sFNhI)))))
         (g$find-library-by$7714$sFNhI
           (case-lambda
             ((g$x$7831$sFNhI)
              (equal?
                (g$library-name$7685$sFNhI g$x$7831$sFNhI)
                g$name$7829$sFNhI))))))))
   (g$uninstall-library$7727$sFNhI
     g$uninstall-library$7930$sFNhI
     (case-lambda
       ((g$name$7832$sFNhI g$err?$7833$sFNhI)
        (letrec* ((g$who$7834$sFNhI 'uninstall-library))
          ((case-lambda
             ((g$lib$7835$sFNhI)
              (begin
                (if (if g$err?$7833$sFNhI
                      (begin '#f (not g$lib$7835$sFNhI))
                      '#f)
                  (assertion-violation
                    g$who$7834$sFNhI
                    '"library not installed"
                    g$name$7832$sFNhI)
                  (void))
                ((g$current-library-collection$7678$sFNhI)
                 g$lib$7835$sFNhI
                 '#t))))
           (g$find-library-by$7714$sFNhI
             (case-lambda
               ((g$x$7836$sFNhI)
                (equal?
                  (g$library-name$7685$sFNhI g$x$7836$sFNhI)
                  g$name$7832$sFNhI)))))))
       ((g$name$7837$sFNhI)
        (g$uninstall-library$7727$sFNhI g$name$7837$sFNhI '#t))))
   (g$library-exists?$7728$sFNhI
     g$library-exists?$7931$sFNhI
     (case-lambda
       ((g$name$7838$sFNhI)
        (if (g$find-library-by$7714$sFNhI
              (case-lambda
                ((g$x$7839$sFNhI)
                 (equal?
                   (g$library-name$7685$sFNhI g$x$7839$sFNhI)
                   g$name$7838$sFNhI))))
          (begin '#f '#t)
          '#f))))
   (g$find-library-by-spec/die$7729$sFNhI
     g$find-library-by-spec/die$7932$sFNhI
     (case-lambda
       ((g$spec$7840$sFNhI)
        ((case-lambda
           ((g$id$7841$sFNhI)
            ((case-lambda
               ((g$t$7842$sFNhI)
                (if g$t$7842$sFNhI
                  g$t$7842$sFNhI
                  (begin
                    '#f
                    (assertion-violation
                      '#f
                      '"cannot find library with required spec"
                      g$spec$7840$sFNhI)))))
             (g$find-library-by$7714$sFNhI
               (case-lambda
                 ((g$x$7843$sFNhI)
                  (eq? g$id$7841$sFNhI
                       (g$library-id$7684$sFNhI g$x$7843$sFNhI))))))))
         (car g$spec$7840$sFNhI)))))
   (g$install-library-record$7730$sFNhI
     g$install-library-record$7933$sFNhI
     (case-lambda
       ((g$lib$7844$sFNhI)
        (begin
          ((case-lambda
             ((g$exp-env$7845$sFNhI)
              (g$for-each$5158$sFNhI
                (case-lambda
                  ((g$x$7846$sFNhI)
                   ((case-lambda
                      ((g$label$7847$sFNhI g$binding$7848$sFNhI)
                       ((case-lambda
                          ((g$binding$7849$sFNhI)
                           (g$set-label-binding!$7429$sFNhI
                             g$label$7847$sFNhI
                             g$binding$7849$sFNhI)))
                        ((case-lambda
                           ((g$t$7850$sFNhI)
                            (if (g$memv$5150$sFNhI g$t$7850$sFNhI '(global))
                              (cons
                                'global
                                (cons
                                  g$lib$7844$sFNhI
                                  (cdr g$binding$7848$sFNhI)))
                              (if (g$memv$5150$sFNhI
                                    g$t$7850$sFNhI
                                    '(global-macro))
                                (cons
                                  'global-macro
                                  (cons
                                    g$lib$7844$sFNhI
                                    (cdr g$binding$7848$sFNhI)))
                                (if (g$memv$5150$sFNhI
                                      g$t$7850$sFNhI
                                      '(global-macro!))
                                  (cons
                                    'global-macro!
                                    (cons
                                      g$lib$7844$sFNhI
                                      (cdr g$binding$7848$sFNhI)))
                                  (if (g$memv$5150$sFNhI
                                        g$t$7850$sFNhI
                                        '(global-ctv))
                                    (cons
                                      'global-ctv
                                      (cons
                                        g$lib$7844$sFNhI
                                        (cdr g$binding$7848$sFNhI)))
                                    g$binding$7848$sFNhI))))))
                         (car g$binding$7848$sFNhI)))))
                    (car g$x$7846$sFNhI)
                    (cdr g$x$7846$sFNhI))))
                g$exp-env$7845$sFNhI)))
           (g$library-env$7691$sFNhI g$lib$7844$sFNhI))
          ((g$current-library-collection$7678$sFNhI) g$lib$7844$sFNhI)))))
   (g$install-library$7731$sFNhI
     g$install-library$7934$sFNhI
     (case-lambda
       ((g$id$7851$sFNhI
          g$name$7852$sFNhI
          g$ver$7853$sFNhI
          g$imp*$7854$sFNhI
          g$vis*$7855$sFNhI
          g$inv*$7856$sFNhI
          g$exp-subst$7857$sFNhI
          g$exp-env$7858$sFNhI
          g$visit-proc$7859$sFNhI
          g$invoke-proc$7860$sFNhI
          g$visit-code$7861$sFNhI
          g$invoke-code$7862$sFNhI
          g$visible?$7863$sFNhI
          g$source-file-name$7864$sFNhI)
        ((case-lambda
           ((g$imp-lib*$7865$sFNhI g$vis-lib*$7866$sFNhI g$inv-lib*$7867$sFNhI)
            (begin
              (if (not (if (g$symbol?$5645$sFNhI g$id$7851$sFNhI)
                         (if (list? g$name$7852$sFNhI)
                           (begin '#f (list? g$ver$7853$sFNhI))
                           '#f)
                         '#f))
                (assertion-violation
                  'install-library
                  '"invalid spec with id/name/ver"
                  g$id$7851$sFNhI
                  g$name$7852$sFNhI
                  g$ver$7853$sFNhI)
                (void))
              (if (g$library-exists?$7728$sFNhI g$name$7852$sFNhI)
                (assertion-violation
                  'install-library
                  '"library is already installed"
                  g$name$7852$sFNhI)
                (void))
              ((case-lambda
                 ((g$lib$7868$sFNhI)
                  (g$install-library-record$7730$sFNhI g$lib$7868$sFNhI)))
               (g$make-library$7683$sFNhI
                 g$id$7851$sFNhI
                 g$name$7852$sFNhI
                 g$ver$7853$sFNhI
                 g$imp-lib*$7865$sFNhI
                 g$vis-lib*$7866$sFNhI
                 g$inv-lib*$7867$sFNhI
                 g$exp-subst$7857$sFNhI
                 g$exp-env$7858$sFNhI
                 g$visit-proc$7859$sFNhI
                 g$invoke-proc$7860$sFNhI
                 g$visit-code$7861$sFNhI
                 g$invoke-code$7862$sFNhI
                 g$visible?$7863$sFNhI
                 g$source-file-name$7864$sFNhI)))))
         (g$map$5157$sFNhI
           g$find-library-by-spec/die$7729$sFNhI
           g$imp*$7854$sFNhI)
         (g$map$5157$sFNhI
           g$find-library-by-spec/die$7729$sFNhI
           g$vis*$7855$sFNhI)
         (g$map$5157$sFNhI
           g$find-library-by-spec/die$7729$sFNhI
           g$inv*$7856$sFNhI)))))
   (g$imported-label->binding$7732$sFNhI
     g$imported-label->binding$7935$sFNhI
     (case-lambda
       ((g$lab$7869$sFNhI) (g$label-binding$7430$sFNhI g$lab$7869$sFNhI))))
   (g$invoke-library$7733$sFNhI
     g$invoke-library$7936$sFNhI
     (case-lambda
       ((g$lib$7870$sFNhI)
        ((case-lambda
           ((g$invoke$7871$sFNhI)
            (if (g$procedure?$5647$sFNhI g$invoke$7871$sFNhI)
              (begin
                (g$set-library-invoke-state!$7707$sFNhI
                  g$lib$7870$sFNhI
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"circularity detected"
                       g$lib$7870$sFNhI))))
                (g$for-each$5158$sFNhI
                  g$invoke-library$7733$sFNhI
                  (g$library-inv*$7689$sFNhI g$lib$7870$sFNhI))
                (g$set-library-invoke-state!$7707$sFNhI
                  g$lib$7870$sFNhI
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first invoke did not return"
                       g$lib$7870$sFNhI))))
                (g$invoke$7871$sFNhI)
                (g$set-library-invoke-state!$7707$sFNhI g$lib$7870$sFNhI '#t))
              (void))))
         (g$library-invoke-state$7693$sFNhI g$lib$7870$sFNhI)))))
   (g$visit-library$7734$sFNhI
     g$visit-library$7937$sFNhI
     (case-lambda
       ((g$lib$7872$sFNhI)
        ((case-lambda
           ((g$visit$7873$sFNhI)
            (if (g$procedure?$5647$sFNhI g$visit$7873$sFNhI)
              (begin
                (g$set-library-visit-state!$7706$sFNhI
                  g$lib$7872$sFNhI
                  (case-lambda
                    (()
                     (assertion-violation
                       'visit
                       '"circularity detected"
                       g$lib$7872$sFNhI))))
                (g$for-each$5158$sFNhI
                  g$invoke-library$7733$sFNhI
                  (g$library-vis*$7688$sFNhI g$lib$7872$sFNhI))
                (g$set-library-visit-state!$7706$sFNhI
                  g$lib$7872$sFNhI
                  (case-lambda
                    (()
                     (assertion-violation
                       'invoke
                       '"first visit did not return"
                       g$lib$7872$sFNhI))))
                (g$visit$7873$sFNhI)
                (g$set-library-visit-state!$7706$sFNhI g$lib$7872$sFNhI '#t))
              (void))))
         (g$library-visit-state$7692$sFNhI g$lib$7872$sFNhI)))))
   (g$invoke-library-by-spec$7735$sFNhI
     g$invoke-library-by-spec$7938$sFNhI
     (case-lambda
       ((g$spec$7874$sFNhI)
        (g$invoke-library$7733$sFNhI
          (g$find-library-by-spec/die$7729$sFNhI g$spec$7874$sFNhI)))))
   (g$installed-libraries$7736$sFNhI
     g$installed-libraries$7939$sFNhI
     (case-lambda
       ((g$all?$7875$sFNhI)
        ((letrec ((g$f$7876$sFNhI
                    (case-lambda
                      ((g$ls$7877$sFNhI)
                       (if (null? g$ls$7877$sFNhI)
                         '()
                         (if ((case-lambda
                                ((g$t$7878$sFNhI)
                                 (if g$t$7878$sFNhI
                                   g$t$7878$sFNhI
                                   (begin
                                     '#f
                                     (g$library-visible?$7696$sFNhI
                                       (car g$ls$7877$sFNhI))))))
                              g$all?$7875$sFNhI)
                           (cons
                             (g$library-name$7685$sFNhI (car g$ls$7877$sFNhI))
                             (g$f$7876$sFNhI (cdr g$ls$7877$sFNhI)))
                           (g$f$7876$sFNhI (cdr g$ls$7877$sFNhI))))))))
           g$f$7876$sFNhI)
         ((g$current-library-collection$7678$sFNhI))))
       (() (g$installed-libraries$7736$sFNhI '#f))))
   (g$library-spec$7737$sFNhI
     g$library-spec$7940$sFNhI
     (case-lambda
       ((g$x$7879$sFNhI)
        (begin
          (if (not (g$library?$7682$sFNhI g$x$7879$sFNhI))
            (assertion-violation 'library-spec '"not a library" g$x$7879$sFNhI)
            (void))
          (list
            (g$library-id$7684$sFNhI g$x$7879$sFNhI)
            (g$library-name$7685$sFNhI g$x$7879$sFNhI)
            (g$library-version$7686$sFNhI g$x$7879$sFNhI)))))))
  (void))

(library-letrec* (psyntax builders)
  ((g$build-global-define$7941$sFNhI
     g$build-global-define$8051$sFNhI
     (case-lambda ((g$x$8022$sFNhI) (g$build-void$8018$sFNhI))))
   (g$build-lambda$7990$sFNhI
     g$build-lambda$8052$sFNhI
     (case-lambda
       ((g$ae$8023$sFNhI g$vars$8024$sFNhI g$exp$8025$sFNhI)
        (list 'case-lambda (list g$vars$8024$sFNhI g$exp$8025$sFNhI)))))
   (g$build-case-lambda$7991$sFNhI
     g$build-case-lambda$8053$sFNhI
     (case-lambda
       ((g$ae$8026$sFNhI g$vars*$8027$sFNhI g$exp*$8028$sFNhI)
        (cons
          'case-lambda
          (g$map$5157$sFNhI list g$vars*$8027$sFNhI g$exp*$8028$sFNhI)))))
   (g$build-let$7992$sFNhI
     g$build-let$8054$sFNhI
     (case-lambda
       ((g$ae$8029$sFNhI g$lhs*$8030$sFNhI g$rhs*$8031$sFNhI g$body$8032$sFNhI)
        (cons
          (g$build-lambda$7990$sFNhI
            g$ae$8029$sFNhI
            g$lhs*$8030$sFNhI
            g$body$8032$sFNhI)
          g$rhs*$8031$sFNhI))))
   (g$build-sequence$8017$sFNhI
     g$build-sequence$8055$sFNhI
     (case-lambda
       ((g$ae$8033$sFNhI g$exps$8034$sFNhI)
        ((letrec ((g$loop$8035$sFNhI
                    (case-lambda
                      ((g$exps$8036$sFNhI)
                       (if (null? (cdr g$exps$8036$sFNhI))
                         (car g$exps$8036$sFNhI)
                         (if (equal?
                               (car g$exps$8036$sFNhI)
                               (g$build-void$8018$sFNhI))
                           (g$loop$8035$sFNhI (cdr g$exps$8036$sFNhI))
                           (cons 'begin g$exps$8036$sFNhI)))))))
           g$loop$8035$sFNhI)
         g$exps$8034$sFNhI))))
   (g$build-void$8018$sFNhI
     g$build-void$8056$sFNhI
     (case-lambda (() '((primitive void)))))
   (g$build-letrec$8019$sFNhI
     g$build-letrec$8057$sFNhI
     (case-lambda
       ((g$ae$8037$sFNhI
          g$vars$8038$sFNhI
          g$val-exps$8039$sFNhI
          g$body-exp$8040$sFNhI)
        (if (null? g$vars$8038$sFNhI)
          g$body-exp$8040$sFNhI
          (list
            'letrec
            (g$map$5157$sFNhI list g$vars$8038$sFNhI g$val-exps$8039$sFNhI)
            g$body-exp$8040$sFNhI)))))
   (g$build-letrec*$8020$sFNhI
     g$build-letrec*$8058$sFNhI
     (case-lambda
       ((g$ae$8041$sFNhI
          g$vars$8042$sFNhI
          g$val-exps$8043$sFNhI
          g$body-exp$8044$sFNhI)
        (if (null? g$vars$8042$sFNhI)
          g$body-exp$8044$sFNhI
          (list
            'letrec*
            (g$map$5157$sFNhI list g$vars$8042$sFNhI g$val-exps$8043$sFNhI)
            g$body-exp$8044$sFNhI)))))
   (g$build-library-letrec*$8021$sFNhI
     g$build-library-letrec*$8059$sFNhI
     (case-lambda
       ((g$ae$8045$sFNhI
          g$name$8046$sFNhI
          g$vars$8047$sFNhI
          g$locs$8048$sFNhI
          g$val-exps$8049$sFNhI
          g$body-exp$8050$sFNhI)
        (list
          'library-letrec*
          g$name$8046$sFNhI
          (g$map$5157$sFNhI
            list
            g$vars$8047$sFNhI
            g$locs$8048$sFNhI
            g$val-exps$8049$sFNhI)
          g$body-exp$8050$sFNhI)))))
  (void))

(library-letrec* (psyntax expander)
  ((g$set-cons$8060$sFNhI
     g$set-cons$11771$sFNhI
     (case-lambda
       ((g$x$8526$sFNhI g$ls$8527$sFNhI)
        (if (g$memq$5149$sFNhI g$x$8526$sFNhI g$ls$8527$sFNhI)
          g$ls$8527$sFNhI
          (cons g$x$8526$sFNhI g$ls$8527$sFNhI)))))
   (g$set-union$8061$sFNhI
     g$set-union$11772$sFNhI
     (case-lambda
       ((g$ls1$8528$sFNhI g$ls2$8529$sFNhI)
        (if (null? g$ls1$8528$sFNhI)
          g$ls2$8529$sFNhI
          (if (g$memq$5149$sFNhI (car g$ls1$8528$sFNhI) g$ls2$8529$sFNhI)
            (g$set-union$8061$sFNhI (cdr g$ls1$8528$sFNhI) g$ls2$8529$sFNhI)
            (cons
              (car g$ls1$8528$sFNhI)
              (g$set-union$8061$sFNhI
                (cdr g$ls1$8528$sFNhI)
                g$ls2$8529$sFNhI)))))))
   (g$top-mark*$8063$sFNhI g$top-mark*$11773$sFNhI '(top))
   (g$top-marked?$8064$sFNhI
     g$top-marked?$11774$sFNhI
     (case-lambda
       ((g$m*$8530$sFNhI) (g$memq$5149$sFNhI 'top g$m*$8530$sFNhI))))
   (g$gen-lexical$8065$sFNhI
     g$gen-lexical$11775$sFNhI
     (case-lambda
       ((g$sym$8531$sFNhI)
        (if (g$symbol?$5645$sFNhI g$sym$8531$sFNhI)
          (gensym g$sym$8531$sFNhI)
          (if (g$stx?$8098$sFNhI g$sym$8531$sFNhI)
            (g$gen-lexical$8065$sFNhI (g$id->sym$8127$sFNhI g$sym$8531$sFNhI))
            (assertion-violation
              'gen-lexical
              '"BUG: invalid arg"
              g$sym$8531$sFNhI))))))
   (g$gen-global$8066$sFNhI
     g$gen-global$11776$sFNhI
     (case-lambda
       ((g$x$8532$sFNhI) (g$gen-lexical$8065$sFNhI g$x$8532$sFNhI))))
   (g$gen-label$8067$sFNhI
     g$gen-label$11777$sFNhI
     (case-lambda ((g$_$8533$sFNhI) (gensym))))
   (g$gen-top-level-label$8068$sFNhI
     g$gen-top-level-label$11778$sFNhI
     (case-lambda
       ((g$id$8534$sFNhI g$rib$8535$sFNhI)
        (letrec* ((g$find$8536$sFNhI
                    (case-lambda
                      ((g$sym$8542$sFNhI
                         g$mark*$8543$sFNhI
                         g$sym*$8544$sFNhI
                         g$mark**$8545$sFNhI
                         g$label*$8546$sFNhI)
                       (if (pair? g$sym*$8544$sFNhI)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8542$sFNhI
                                        (car g$sym*$8544$sFNhI))
                                 (begin
                                   '#f
                                   (g$same-marks?$8128$sFNhI
                                     g$mark*$8543$sFNhI
                                     (car g$mark**$8545$sFNhI)))
                                 '#f)
                             (car g$label*$8546$sFNhI)
                             (g$find$8536$sFNhI
                               g$sym$8542$sFNhI
                               g$mark*$8543$sFNhI
                               (cdr g$sym*$8544$sFNhI)
                               (cdr g$mark**$8545$sFNhI)
                               (cdr g$label*$8546$sFNhI))))
                         '#f)))))
          ((case-lambda
             ((g$sym$8537$sFNhI g$mark*$8538$sFNhI)
              ((case-lambda
                 ((g$sym*$8539$sFNhI)
                  ((case-lambda
                     ((g$t$8540$sFNhI)
                      (if g$t$8540$sFNhI
                        ((case-lambda
                           ((g$label$8541$sFNhI)
                            (if (g$imported-label->binding$7935$sFNhI
                                  g$label$8541$sFNhI)
                              (gensym)
                              g$label$8541$sFNhI)))
                         g$t$8540$sFNhI)
                        (gensym))))
                   (if (g$memq$5149$sFNhI
                         g$sym$8537$sFNhI
                         (g$rib-sym*$8076$sFNhI g$rib$8535$sFNhI))
                     (begin
                       '#f
                       (g$find$8536$sFNhI
                         g$sym$8537$sFNhI
                         g$mark*$8538$sFNhI
                         g$sym*$8539$sFNhI
                         (g$rib-mark**$8077$sFNhI g$rib$8535$sFNhI)
                         (g$rib-label*$8078$sFNhI g$rib$8535$sFNhI)))
                     '#f))))
               (g$rib-sym*$8076$sFNhI g$rib$8535$sFNhI))))
           (g$id->sym$8127$sFNhI g$id$8534$sFNhI)
           (g$stx-mark*$8101$sFNhI g$id$8534$sFNhI))))))
   (g$gen-define-label+loc$8069$sFNhI
     g$gen-define-label+loc$11779$sFNhI
     (case-lambda
       ((g$id$8547$sFNhI g$rib$8548$sFNhI g$sd?$8549$sFNhI)
        (if g$sd?$8549$sFNhI
          (values (gensym) (g$gen-lexical$8065$sFNhI g$id$8547$sFNhI))
          ((case-lambda
             ((g$env$8550$sFNhI)
              ((case-lambda
                 ((g$label$8551$sFNhI g$locs$8552$sFNhI)
                  (values
                    g$label$8551$sFNhI
                    ((case-lambda
                       ((g$t$8553$sFNhI)
                        (if g$t$8553$sFNhI
                          (cdr g$t$8553$sFNhI)
                          ((case-lambda
                             ((g$loc$8554$sFNhI)
                              (begin
                                (g$set-interaction-env-locs!$8488$sFNhI
                                  g$env$8550$sFNhI
                                  (cons
                                    (cons g$label$8551$sFNhI g$loc$8554$sFNhI)
                                    g$locs$8552$sFNhI))
                                g$loc$8554$sFNhI)))
                           (g$gen-lexical$8065$sFNhI g$id$8547$sFNhI)))))
                     (g$assq$5145$sFNhI
                       g$label$8551$sFNhI
                       g$locs$8552$sFNhI)))))
               (g$gen-top-level-label$8068$sFNhI
                 g$id$8547$sFNhI
                 g$rib$8548$sFNhI)
               (g$interaction-env-locs$8485$sFNhI g$env$8550$sFNhI))))
           (g$top-level-context$8525$sFNhI))))))
   (g$gen-define-label$8070$sFNhI
     g$gen-define-label$11780$sFNhI
     (case-lambda
       ((g$id$8555$sFNhI g$rib$8556$sFNhI g$sd?$8557$sFNhI)
        (if g$sd?$8557$sFNhI
          (gensym)
          (g$gen-top-level-label$8068$sFNhI
            g$id$8555$sFNhI
            g$rib$8556$sFNhI)))))
   (g$8988$8071$sFNhI
     g$8988$11781$sFNhI
     (make-record-type-descriptor
       'rib
       '#f
       'g$8991$sFNhI
       '#t
       '#t
       '#((mutable sym*)
          (mutable mark**)
          (mutable label*)
          (mutable sealed/freq)
          (mutable cache))))
   (g$8990$8072$sFNhI g$8990$11782$sFNhI '#f)
   (g$8989$8073$sFNhI
     g$8989$11783$sFNhI
     (make-record-constructor-descriptor
       g$8988$8071$sFNhI
       '#f
       g$8990$8072$sFNhI))
   (g$rib?$8074$sFNhI
     g$rib?$11784$sFNhI
     (record-predicate g$8988$8071$sFNhI))
   (g$make-rib$8075$sFNhI
     g$make-rib$11785$sFNhI
     (record-constructor g$8989$8073$sFNhI))
   (g$rib-sym*$8076$sFNhI
     g$rib-sym*$11786$sFNhI
     (record-accessor g$8988$8071$sFNhI '0))
   (g$rib-mark**$8077$sFNhI
     g$rib-mark**$11787$sFNhI
     (record-accessor g$8988$8071$sFNhI '1))
   (g$rib-label*$8078$sFNhI
     g$rib-label*$11788$sFNhI
     (record-accessor g$8988$8071$sFNhI '2))
   (g$rib-sealed/freq$8079$sFNhI
     g$rib-sealed/freq$11789$sFNhI
     (record-accessor g$8988$8071$sFNhI '3))
   (g$rib-cache$8080$sFNhI
     g$rib-cache$11790$sFNhI
     (record-accessor g$8988$8071$sFNhI '4))
   (g$set-rib-sym*!$8081$sFNhI
     g$set-rib-sym*!$11791$sFNhI
     (record-mutator g$8988$8071$sFNhI '0))
   (g$set-rib-mark**!$8082$sFNhI
     g$set-rib-mark**!$11792$sFNhI
     (record-mutator g$8988$8071$sFNhI '1))
   (g$set-rib-label*!$8083$sFNhI
     g$set-rib-label*!$11793$sFNhI
     (record-mutator g$8988$8071$sFNhI '2))
   (g$set-rib-sealed/freq!$8084$sFNhI
     g$set-rib-sealed/freq!$11794$sFNhI
     (record-mutator g$8988$8071$sFNhI '3))
   (g$set-rib-cache!$8085$sFNhI
     g$set-rib-cache!$11795$sFNhI
     (record-mutator g$8988$8071$sFNhI '4))
   (g$make-empty-rib$8086$sFNhI
     g$make-empty-rib$11796$sFNhI
     (case-lambda (() (g$make-rib$8075$sFNhI '() '() '() '#f '#f))))
   (g$make-cache-rib$8087$sFNhI
     g$make-cache-rib$11797$sFNhI
     (case-lambda
       (()
        (g$make-rib$8075$sFNhI
          '()
          '()
          '()
          '#f
          (g$make-eq-hashtable$5744$sFNhI)))))
   (g$find-label$8088$sFNhI
     g$find-label$11798$sFNhI
     (case-lambda
       ((g$rib$8558$sFNhI g$sym$8559$sFNhI g$mark*$8560$sFNhI)
        ((case-lambda
           ((g$ht$8561$sFNhI)
            (if g$ht$8561$sFNhI
              (begin
                '#f
                ((case-lambda
                   ((g$cv$8562$sFNhI)
                    ((case-lambda
                       ((g$t$8563$sFNhI)
                        (if g$t$8563$sFNhI (cdr g$t$8563$sFNhI) '#f)))
                     (if g$cv$8562$sFNhI
                       (begin
                         '#f
                         (g$assp$5148$sFNhI
                           (case-lambda
                             ((g$m$8564$sFNhI)
                              (g$same-marks?$8128$sFNhI
                                g$mark*$8560$sFNhI
                                g$m$8564$sFNhI)))
                           g$cv$8562$sFNhI))
                       '#f))))
                 (g$hashtable-ref$5747$sFNhI
                   g$ht$8561$sFNhI
                   g$sym$8559$sFNhI
                   '#f)))
              '#f)))
         (g$rib-cache$8080$sFNhI g$rib$8558$sFNhI)))))
   (g$extend-rib!$8089$sFNhI
     g$extend-rib!$11799$sFNhI
     (case-lambda
       ((g$rib$8565$sFNhI g$id$8566$sFNhI g$label$8567$sFNhI g$sd?$8568$sFNhI)
        (letrec* ((g$find$8569$sFNhI
                    (case-lambda
                      ((g$sym$8578$sFNhI
                         g$mark*$8579$sFNhI
                         g$sym*$8580$sFNhI
                         g$mark**$8581$sFNhI
                         g$label*$8582$sFNhI)
                       (if (pair? g$sym*$8580$sFNhI)
                         (begin
                           '#f
                           (if (if (eq? g$sym$8578$sFNhI
                                        (car g$sym*$8580$sFNhI))
                                 (begin
                                   '#f
                                   (g$same-marks?$8128$sFNhI
                                     g$mark*$8579$sFNhI
                                     (car g$mark**$8581$sFNhI)))
                                 '#f)
                             g$label*$8582$sFNhI
                             (g$find$8569$sFNhI
                               g$sym$8578$sFNhI
                               g$mark*$8579$sFNhI
                               (cdr g$sym*$8580$sFNhI)
                               (cdr g$mark**$8581$sFNhI)
                               (cdr g$label*$8582$sFNhI))))
                         '#f)))))
          (begin
            (if (g$rib-sealed/freq$8079$sFNhI g$rib$8565$sFNhI)
              (assertion-violation
                'extend-rib!
                '"BUG: rib is sealed"
                g$rib$8565$sFNhI)
              (void))
            ((case-lambda
               ((g$sym$8570$sFNhI g$mark*$8571$sFNhI)
                ((case-lambda
                   ((g$sym*$8572$sFNhI)
                    ((case-lambda
                       ((g$t$8573$sFNhI)
                        (if g$t$8573$sFNhI
                          ((case-lambda
                             ((g$p$8574$sFNhI)
                              (if (not (eq? g$label$8567$sFNhI g$p$8574$sFNhI))
                                (g$syntax-violation$8517$sFNhI
                                  '#f
                                  '"multiple definitions of identifier"
                                  g$id$8566$sFNhI)
                                (void))))
                           g$t$8573$sFNhI)
                          ((case-lambda
                             ((g$t$8575$sFNhI)
                              (if g$t$8575$sFNhI
                                ((case-lambda
                                   ((g$p$8576$sFNhI)
                                    (if (not (eq? g$label$8567$sFNhI
                                                  (car g$p$8576$sFNhI)))
                                      (if (not g$sd?$8568$sFNhI)
                                        (set-car!
                                          g$p$8576$sFNhI
                                          g$label$8567$sFNhI)
                                        (g$syntax-violation$8517$sFNhI
                                          '#f
                                          '"multiple definitions of identifier"
                                          g$id$8566$sFNhI))
                                      (void))))
                                 g$t$8575$sFNhI)
                                (begin
                                  (if (g$rib-cache$8080$sFNhI g$rib$8565$sFNhI)
                                    (g$hashtable-update!$5751$sFNhI
                                      (g$rib-cache$8080$sFNhI g$rib$8565$sFNhI)
                                      g$sym$8570$sFNhI
                                      (case-lambda
                                        ((g$e$8577$sFNhI)
                                         (cons
                                           (cons
                                             g$mark*$8571$sFNhI
                                             g$label$8567$sFNhI)
                                           g$e$8577$sFNhI)))
                                      '())
                                    (void))
                                  (g$set-rib-sym*!$8081$sFNhI
                                    g$rib$8565$sFNhI
                                    (cons g$sym$8570$sFNhI g$sym*$8572$sFNhI))
                                  (g$set-rib-mark**!$8082$sFNhI
                                    g$rib$8565$sFNhI
                                    (cons
                                      g$mark*$8571$sFNhI
                                      (g$rib-mark**$8077$sFNhI
                                        g$rib$8565$sFNhI)))
                                  (g$set-rib-label*!$8083$sFNhI
                                    g$rib$8565$sFNhI
                                    (cons
                                      g$label$8567$sFNhI
                                      (g$rib-label*$8078$sFNhI
                                        g$rib$8565$sFNhI)))))))
                           (if (g$memq$5149$sFNhI
                                 g$sym$8570$sFNhI
                                 (g$rib-sym*$8076$sFNhI g$rib$8565$sFNhI))
                             (begin
                               '#f
                               (g$find$8569$sFNhI
                                 g$sym$8570$sFNhI
                                 g$mark*$8571$sFNhI
                                 g$sym*$8572$sFNhI
                                 (g$rib-mark**$8077$sFNhI g$rib$8565$sFNhI)
                                 (g$rib-label*$8078$sFNhI g$rib$8565$sFNhI)))
                             '#f)))))
                     (g$find-label$8088$sFNhI
                       g$rib$8565$sFNhI
                       g$sym$8570$sFNhI
                       g$mark*$8571$sFNhI))))
                 (g$rib-sym*$8076$sFNhI g$rib$8565$sFNhI))))
             (g$id->sym$8127$sFNhI g$id$8566$sFNhI)
             (g$stx-mark*$8101$sFNhI g$id$8566$sFNhI)))))))
   (g$extend-rib/nc!$8090$sFNhI
     g$extend-rib/nc!$11800$sFNhI
     (case-lambda
       ((g$rib$8583$sFNhI g$id$8584$sFNhI g$label$8585$sFNhI)
        ((case-lambda
           ((g$sym$8586$sFNhI g$mark*$8587$sFNhI)
            ((case-lambda
               ((g$sym*$8588$sFNhI)
                (begin
                  (if (g$rib-cache$8080$sFNhI g$rib$8583$sFNhI)
                    (g$hashtable-update!$5751$sFNhI
                      (g$rib-cache$8080$sFNhI g$rib$8583$sFNhI)
                      g$sym$8586$sFNhI
                      (case-lambda
                        ((g$e$8589$sFNhI)
                         (cons
                           (cons g$mark*$8587$sFNhI g$label$8585$sFNhI)
                           g$e$8589$sFNhI)))
                      '())
                    (void))
                  (g$set-rib-sym*!$8081$sFNhI
                    g$rib$8583$sFNhI
                    (cons g$sym$8586$sFNhI g$sym*$8588$sFNhI))
                  (g$set-rib-mark**!$8082$sFNhI
                    g$rib$8583$sFNhI
                    (cons
                      g$mark*$8587$sFNhI
                      (g$rib-mark**$8077$sFNhI g$rib$8583$sFNhI)))
                  (g$set-rib-label*!$8083$sFNhI
                    g$rib$8583$sFNhI
                    (cons
                      g$label$8585$sFNhI
                      (g$rib-label*$8078$sFNhI g$rib$8583$sFNhI))))))
             (g$rib-sym*$8076$sFNhI g$rib$8583$sFNhI))))
         (g$id->sym$8127$sFNhI g$id$8584$sFNhI)
         (g$stx-mark*$8101$sFNhI g$id$8584$sFNhI)))))
   (g$make-rib-map$8091$sFNhI
     g$make-rib-map$11801$sFNhI
     (case-lambda
       ((g$sym*$8590$sFNhI)
        ((case-lambda
           ((g$ht$8591$sFNhI)
            ((letrec ((g$f$8592$sFNhI
                        (case-lambda
                          ((g$i$8593$sFNhI g$sym*$8594$sFNhI)
                           (if (null? g$sym*$8594$sFNhI)
                             g$ht$8591$sFNhI
                             (begin
                               (g$hashtable-update!$5751$sFNhI
                                 g$ht$8591$sFNhI
                                 (car g$sym*$8594$sFNhI)
                                 (case-lambda
                                   ((g$x$8595$sFNhI)
                                    (cons g$i$8593$sFNhI g$x$8595$sFNhI)))
                                 '())
                               (g$f$8592$sFNhI
                                 (+ g$i$8593$sFNhI '1)
                                 (cdr g$sym*$8594$sFNhI))))))))
               g$f$8592$sFNhI)
             '0
             g$sym*$8590$sFNhI)))
         (g$make-eq-hashtable$5744$sFNhI)))))
   (g$seal-rib!$8092$sFNhI
     g$seal-rib!$11802$sFNhI
     (case-lambda
       ((g$rib$8596$sFNhI)
        ((case-lambda
           ((g$sym*$8597$sFNhI)
            (if (not (null? g$sym*$8597$sFNhI))
              (begin
                (g$set-rib-sym*!$8081$sFNhI
                  g$rib$8596$sFNhI
                  (g$list->vector$5640$sFNhI g$sym*$8597$sFNhI))
                (g$set-rib-mark**!$8082$sFNhI
                  g$rib$8596$sFNhI
                  (g$list->vector$5640$sFNhI
                    (g$rib-mark**$8077$sFNhI g$rib$8596$sFNhI)))
                (g$set-rib-label*!$8083$sFNhI
                  g$rib$8596$sFNhI
                  (g$list->vector$5640$sFNhI
                    (g$rib-label*$8078$sFNhI g$rib$8596$sFNhI)))
                (g$set-rib-sealed/freq!$8084$sFNhI
                  g$rib$8596$sFNhI
                  (g$make-rib-map$8091$sFNhI g$sym*$8597$sFNhI)))
              (void))))
         (g$rib-sym*$8076$sFNhI g$rib$8596$sFNhI)))))
   (g$unseal-rib!$8093$sFNhI
     g$unseal-rib!$11803$sFNhI
     (case-lambda
       ((g$rib$8598$sFNhI)
        (if (g$rib-sealed/freq$8079$sFNhI g$rib$8598$sFNhI)
          (begin
            (g$set-rib-sealed/freq!$8084$sFNhI g$rib$8598$sFNhI '#f)
            (g$set-rib-sym*!$8081$sFNhI
              g$rib$8598$sFNhI
              (vector->list (g$rib-sym*$8076$sFNhI g$rib$8598$sFNhI)))
            (g$set-rib-mark**!$8082$sFNhI
              g$rib$8598$sFNhI
              (vector->list (g$rib-mark**$8077$sFNhI g$rib$8598$sFNhI)))
            (g$set-rib-label*!$8083$sFNhI
              g$rib$8598$sFNhI
              (vector->list (g$rib-label*$8078$sFNhI g$rib$8598$sFNhI))))
          (void)))))
   (g$make-full-rib$8094$sFNhI
     g$make-full-rib$11804$sFNhI
     (case-lambda
       ((g$id*$8599$sFNhI g$label*$8600$sFNhI)
        ((case-lambda
           ((g$r$8601$sFNhI)
            (begin (g$seal-rib!$8092$sFNhI g$r$8601$sFNhI) g$r$8601$sFNhI)))
         (g$make-rib$8075$sFNhI
           (g$map$5157$sFNhI g$id->sym$8127$sFNhI g$id*$8599$sFNhI)
           (g$map$5157$sFNhI g$stx-mark*$8101$sFNhI g$id*$8599$sFNhI)
           g$label*$8600$sFNhI
           '#f
           '#f)))))
   (g$9019$8095$sFNhI
     g$9019$11805$sFNhI
     (make-record-type-descriptor
       'stx
       '#f
       'g$9022$sFNhI
       '#t
       '#t
       '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))
   (g$9021$8096$sFNhI g$9021$11806$sFNhI '#f)
   (g$9020$8097$sFNhI
     g$9020$11807$sFNhI
     (make-record-constructor-descriptor
       g$9019$8095$sFNhI
       '#f
       g$9021$8096$sFNhI))
   (g$stx?$8098$sFNhI
     g$stx?$11808$sFNhI
     (record-predicate g$9019$8095$sFNhI))
   (g$make-stx$8099$sFNhI
     g$make-stx$11809$sFNhI
     (record-constructor g$9020$8097$sFNhI))
   (g$stx-expr$8100$sFNhI
     g$stx-expr$11810$sFNhI
     (record-accessor g$9019$8095$sFNhI '0))
   (g$stx-mark*$8101$sFNhI
     g$stx-mark*$11811$sFNhI
     (record-accessor g$9019$8095$sFNhI '1))
   (g$stx-subst*$8102$sFNhI
     g$stx-subst*$11812$sFNhI
     (record-accessor g$9019$8095$sFNhI '2))
   (g$stx-ae*$8103$sFNhI
     g$stx-ae*$11813$sFNhI
     (record-accessor g$9019$8095$sFNhI '3))
   (g$set-stx-expr!$8104$sFNhI
     g$set-stx-expr!$11814$sFNhI
     (record-mutator g$9019$8095$sFNhI '0))
   (g$set-stx-mark*!$8105$sFNhI
     g$set-stx-mark*!$11815$sFNhI
     (record-mutator g$9019$8095$sFNhI '1))
   (g$set-stx-subst*!$8106$sFNhI
     g$set-stx-subst*!$11816$sFNhI
     (record-mutator g$9019$8095$sFNhI '2))
   (g$set-stx-ae*!$8107$sFNhI
     g$set-stx-ae*!$11817$sFNhI
     (record-mutator g$9019$8095$sFNhI '3))
   (g$rp$8108$sFNhI
     g$rp$11818$sFNhI
     (make-record-printer
       'stx
       (case-lambda
         ((g$x$8602$sFNhI g$p$8603$sFNhI g$wr$8604$sFNhI)
          (begin
            (display '"#<syntax " g$p$8603$sFNhI)
            (write (g$stx->datum$8137$sFNhI g$x$8602$sFNhI) g$p$8603$sFNhI)
            ((case-lambda
               ((g$expr$8605$sFNhI)
                (if (annotation? g$expr$8605$sFNhI)
                  ((case-lambda
                     ((g$src$8606$sFNhI)
                      (if (pair? g$src$8606$sFNhI)
                        (begin
                          (display '" (" g$p$8603$sFNhI)
                          (display (cdr g$src$8606$sFNhI) g$p$8603$sFNhI)
                          (display '" of " g$p$8603$sFNhI)
                          (display (car g$src$8606$sFNhI) g$p$8603$sFNhI)
                          (display '")" g$p$8603$sFNhI))
                        (void))))
                   (annotation-source g$expr$8605$sFNhI))
                  (void))))
             (g$stx-expr$8100$sFNhI g$x$8602$sFNhI))
            (display '">" g$p$8603$sFNhI))))))
   (g$datum->stx$8109$sFNhI
     g$datum->stx$11819$sFNhI
     (case-lambda
       ((g$id$8607$sFNhI g$datum$8608$sFNhI)
        (g$make-stx$8099$sFNhI
          g$datum$8608$sFNhI
          (g$stx-mark*$8101$sFNhI g$id$8607$sFNhI)
          (g$stx-subst*$8102$sFNhI g$id$8607$sFNhI)
          (g$stx-ae*$8103$sFNhI g$id$8607$sFNhI)))))
   (g$gen-mark$8110$sFNhI
     g$gen-mark$11820$sFNhI
     (case-lambda (() (string '#\m))))
   (g$anti-mark$8111$sFNhI g$anti-mark$11821$sFNhI '#f)
   (g$anti-mark?$8112$sFNhI g$anti-mark?$11822$sFNhI not)
   (g$join-wraps$8113$sFNhI
     g$join-wraps$11823$sFNhI
     (case-lambda
       ((g$m1*$8609$sFNhI g$s1*$8610$sFNhI g$ae1*$8611$sFNhI g$e$8612$sFNhI)
        (letrec* ((g$cancel$8613$sFNhI
                    (case-lambda
                      ((g$ls1$8617$sFNhI g$ls2$8618$sFNhI)
                       ((letrec ((g$f$8619$sFNhI
                                   (case-lambda
                                     ((g$x$8620$sFNhI g$ls1$8621$sFNhI)
                                      (if (null? g$ls1$8621$sFNhI)
                                        (cdr g$ls2$8618$sFNhI)
                                        (cons
                                          g$x$8620$sFNhI
                                          (g$f$8619$sFNhI
                                            (car g$ls1$8621$sFNhI)
                                            (cdr g$ls1$8621$sFNhI))))))))
                          g$f$8619$sFNhI)
                        (car g$ls1$8617$sFNhI)
                        (cdr g$ls1$8617$sFNhI))))))
          ((case-lambda
             ((g$m2*$8614$sFNhI g$s2*$8615$sFNhI g$ae2*$8616$sFNhI)
              (if (if (not (null? g$m1*$8609$sFNhI))
                    (if (not (null? g$m2*$8614$sFNhI))
                      (begin
                        '#f
                        (g$anti-mark?$8112$sFNhI (car g$m2*$8614$sFNhI)))
                      '#f)
                    '#f)
                (values
                  (g$cancel$8613$sFNhI g$m1*$8609$sFNhI g$m2*$8614$sFNhI)
                  (g$cancel$8613$sFNhI g$s1*$8610$sFNhI g$s2*$8615$sFNhI)
                  (g$cancel$8613$sFNhI g$ae1*$8611$sFNhI g$ae2*$8616$sFNhI))
                (values
                  (append g$m1*$8609$sFNhI g$m2*$8614$sFNhI)
                  (append g$s1*$8610$sFNhI g$s2*$8615$sFNhI)
                  (append g$ae1*$8611$sFNhI g$ae2*$8616$sFNhI)))))
           (g$stx-mark*$8101$sFNhI g$e$8612$sFNhI)
           (g$stx-subst*$8102$sFNhI g$e$8612$sFNhI)
           (g$stx-ae*$8103$sFNhI g$e$8612$sFNhI))))))
   (g$mkstx$8114$sFNhI
     g$mkstx$11824$sFNhI
     (case-lambda
       ((g$e$8622$sFNhI g$m*$8623$sFNhI g$s*$8624$sFNhI g$ae*$8625$sFNhI)
        (if (if (g$stx?$8098$sFNhI g$e$8622$sFNhI)
              (begin '#f (not (g$top-marked?$8064$sFNhI g$m*$8623$sFNhI)))
              '#f)
          (call-with-values
            (case-lambda
              (()
               (g$join-wraps$8113$sFNhI
                 g$m*$8623$sFNhI
                 g$s*$8624$sFNhI
                 g$ae*$8625$sFNhI
                 g$e$8622$sFNhI)))
            (case-lambda
              ((g$m*$8629$sFNhI g$s*$8630$sFNhI g$ae*$8631$sFNhI)
               ((case-lambda
                  ((g$ae*$8632$sFNhI g$s*$8633$sFNhI g$m*$8634$sFNhI)
                   (g$make-stx$8099$sFNhI
                     (g$stx-expr$8100$sFNhI g$e$8622$sFNhI)
                     g$m*$8634$sFNhI
                     g$s*$8633$sFNhI
                     g$ae*$8632$sFNhI)))
                g$ae*$8631$sFNhI
                g$s*$8630$sFNhI
                g$m*$8629$sFNhI))))
          (g$make-stx$8099$sFNhI
            g$e$8622$sFNhI
            g$m*$8623$sFNhI
            g$s*$8624$sFNhI
            g$ae*$8625$sFNhI)))))
   (g$add-mark$8115$sFNhI
     g$add-mark$11825$sFNhI
     (case-lambda
       ((g$m$8635$sFNhI g$e$8636$sFNhI g$ae$8637$sFNhI)
        (g$mkstx$8114$sFNhI
          g$e$8636$sFNhI
          (list g$m$8635$sFNhI)
          '(shift)
          (list g$ae$8637$sFNhI)))))
   (g$add-subst$8116$sFNhI
     g$add-subst$11826$sFNhI
     (case-lambda
       ((g$subst$8638$sFNhI g$e$8639$sFNhI)
        (g$mkstx$8114$sFNhI g$e$8639$sFNhI '() (list g$subst$8638$sFNhI) '()))))
   (g$syntax-kind?$8117$sFNhI
     g$syntax-kind?$11827$sFNhI
     (case-lambda
       ((g$x$8640$sFNhI g$p?$8641$sFNhI)
        (if (g$stx?$8098$sFNhI g$x$8640$sFNhI)
          (g$syntax-kind?$8117$sFNhI
            (g$stx-expr$8100$sFNhI g$x$8640$sFNhI)
            g$p?$8641$sFNhI)
          (if (annotation? g$x$8640$sFNhI)
            (g$syntax-kind?$8117$sFNhI
              (annotation-expression g$x$8640$sFNhI)
              g$p?$8641$sFNhI)
            (g$p?$8641$sFNhI g$x$8640$sFNhI))))))
   (g$syntax-vector->list$8118$sFNhI
     g$syntax-vector->list$11828$sFNhI
     (case-lambda
       ((g$x$8642$sFNhI)
        (if (g$stx?$8098$sFNhI g$x$8642$sFNhI)
          ((case-lambda
             ((g$ls$8643$sFNhI g$m*$8644$sFNhI g$s*$8645$sFNhI g$ae*$8646$sFNhI)
              (g$map$5157$sFNhI
                (case-lambda
                  ((g$x$8647$sFNhI)
                   (g$mkstx$8114$sFNhI
                     g$x$8647$sFNhI
                     g$m*$8644$sFNhI
                     g$s*$8645$sFNhI
                     g$ae*$8646$sFNhI)))
                g$ls$8643$sFNhI)))
           (g$syntax-vector->list$8118$sFNhI
             (g$stx-expr$8100$sFNhI g$x$8642$sFNhI))
           (g$stx-mark*$8101$sFNhI g$x$8642$sFNhI)
           (g$stx-subst*$8102$sFNhI g$x$8642$sFNhI)
           (g$stx-ae*$8103$sFNhI g$x$8642$sFNhI))
          (if (annotation? g$x$8642$sFNhI)
            (g$syntax-vector->list$8118$sFNhI
              (annotation-expression g$x$8642$sFNhI))
            (if (g$vector?$5643$sFNhI g$x$8642$sFNhI)
              (vector->list g$x$8642$sFNhI)
              (assertion-violation
                'syntax-vector->list
                '"BUG: not a syntax vector"
                g$x$8642$sFNhI)))))))
   (g$syntax-pair?$8119$sFNhI
     g$syntax-pair?$11829$sFNhI
     (case-lambda
       ((g$x$8648$sFNhI) (g$syntax-kind?$8117$sFNhI g$x$8648$sFNhI pair?))))
   (g$syntax-vector?$8120$sFNhI
     g$syntax-vector?$11830$sFNhI
     (case-lambda
       ((g$x$8649$sFNhI)
        (g$syntax-kind?$8117$sFNhI g$x$8649$sFNhI g$vector?$5643$sFNhI))))
   (g$syntax-null?$8121$sFNhI
     g$syntax-null?$11831$sFNhI
     (case-lambda
       ((g$x$8650$sFNhI) (g$syntax-kind?$8117$sFNhI g$x$8650$sFNhI null?))))
   (g$syntax-list?$8122$sFNhI
     g$syntax-list?$11832$sFNhI
     (case-lambda
       ((g$x$8651$sFNhI)
        ((case-lambda
           ((g$t$8652$sFNhI)
            (if g$t$8652$sFNhI
              g$t$8652$sFNhI
              (begin
                '#f
                (if (g$syntax-pair?$8119$sFNhI g$x$8651$sFNhI)
                  (begin
                    '#f
                    (g$syntax-list?$8122$sFNhI
                      (g$syntax-cdr$8124$sFNhI g$x$8651$sFNhI)))
                  '#f)))))
         (g$syntax-null?$8121$sFNhI g$x$8651$sFNhI)))))
   (g$syntax-car$8123$sFNhI
     g$syntax-car$11833$sFNhI
     (case-lambda
       ((g$x$8653$sFNhI)
        (if (g$stx?$8098$sFNhI g$x$8653$sFNhI)
          (g$mkstx$8114$sFNhI
            (g$syntax-car$8123$sFNhI (g$stx-expr$8100$sFNhI g$x$8653$sFNhI))
            (g$stx-mark*$8101$sFNhI g$x$8653$sFNhI)
            (g$stx-subst*$8102$sFNhI g$x$8653$sFNhI)
            (g$stx-ae*$8103$sFNhI g$x$8653$sFNhI))
          (if (annotation? g$x$8653$sFNhI)
            (g$syntax-car$8123$sFNhI (annotation-expression g$x$8653$sFNhI))
            (if (pair? g$x$8653$sFNhI)
              (car g$x$8653$sFNhI)
              (assertion-violation
                'syntax-car
                '"BUG: not a pair"
                g$x$8653$sFNhI)))))))
   (g$syntax-cdr$8124$sFNhI
     g$syntax-cdr$11834$sFNhI
     (case-lambda
       ((g$x$8654$sFNhI)
        (if (g$stx?$8098$sFNhI g$x$8654$sFNhI)
          (g$mkstx$8114$sFNhI
            (g$syntax-cdr$8124$sFNhI (g$stx-expr$8100$sFNhI g$x$8654$sFNhI))
            (g$stx-mark*$8101$sFNhI g$x$8654$sFNhI)
            (g$stx-subst*$8102$sFNhI g$x$8654$sFNhI)
            (g$stx-ae*$8103$sFNhI g$x$8654$sFNhI))
          (if (annotation? g$x$8654$sFNhI)
            (g$syntax-cdr$8124$sFNhI (annotation-expression g$x$8654$sFNhI))
            (if (pair? g$x$8654$sFNhI)
              (cdr g$x$8654$sFNhI)
              (assertion-violation
                'syntax-cdr
                '"BUG: not a pair"
                g$x$8654$sFNhI)))))))
   (g$syntax->list$8125$sFNhI
     g$syntax->list$11835$sFNhI
     (case-lambda
       ((g$x$8655$sFNhI)
        (if (g$syntax-pair?$8119$sFNhI g$x$8655$sFNhI)
          (cons
            (g$syntax-car$8123$sFNhI g$x$8655$sFNhI)
            (g$syntax->list$8125$sFNhI
              (g$syntax-cdr$8124$sFNhI g$x$8655$sFNhI)))
          (if (g$syntax-null?$8121$sFNhI g$x$8655$sFNhI)
            '()
            (assertion-violation
              'syntax->list
              '"BUG: invalid argument"
              g$x$8655$sFNhI))))))
   (g$id?$8126$sFNhI
     g$id?$11836$sFNhI
     (case-lambda
       ((g$x$8656$sFNhI)
        (if (g$stx?$8098$sFNhI g$x$8656$sFNhI)
          (begin
            '#f
            ((case-lambda
               ((g$expr$8657$sFNhI)
                (g$symbol?$5645$sFNhI
                  (if (annotation? g$expr$8657$sFNhI)
                    (annotation-stripped g$expr$8657$sFNhI)
                    g$expr$8657$sFNhI))))
             (g$stx-expr$8100$sFNhI g$x$8656$sFNhI)))
          '#f))))
   (g$id->sym$8127$sFNhI
     g$id->sym$11837$sFNhI
     (case-lambda
       ((g$x$8658$sFNhI)
        (begin
          (if (not (g$stx?$8098$sFNhI g$x$8658$sFNhI))
            (error 'id->sym '"BUG in ikarus: not an id" g$x$8658$sFNhI)
            (void))
          ((case-lambda
             ((g$expr$8659$sFNhI)
              ((case-lambda
                 ((g$sym$8660$sFNhI)
                  (if (g$symbol?$5645$sFNhI g$sym$8660$sFNhI)
                    g$sym$8660$sFNhI
                    (error
                      'id->sym
                      '"BUG in ikarus: not an id"
                      g$x$8658$sFNhI))))
               (if (annotation? g$expr$8659$sFNhI)
                 (annotation-stripped g$expr$8659$sFNhI)
                 g$expr$8659$sFNhI))))
           (g$stx-expr$8100$sFNhI g$x$8658$sFNhI))))))
   (g$same-marks?$8128$sFNhI
     g$same-marks?$11838$sFNhI
     (case-lambda
       ((g$x$8661$sFNhI g$y$8662$sFNhI)
        ((case-lambda
           ((g$t$8663$sFNhI)
            (if g$t$8663$sFNhI
              g$t$8663$sFNhI
              (begin
                '#f
                (if (pair? g$x$8661$sFNhI)
                  (if (pair? g$y$8662$sFNhI)
                    (if (eq? (car g$x$8661$sFNhI) (car g$y$8662$sFNhI))
                      (begin
                        '#f
                        (g$same-marks?$8128$sFNhI
                          (cdr g$x$8661$sFNhI)
                          (cdr g$y$8662$sFNhI)))
                      '#f)
                    '#f)
                  '#f)))))
         (if (null? g$x$8661$sFNhI) (begin '#f (null? g$y$8662$sFNhI)) '#f)))))
   (g$bound-id=?$8129$sFNhI
     g$bound-id=?$11839$sFNhI
     (case-lambda
       ((g$x$8664$sFNhI g$y$8665$sFNhI)
        (if (eq? (g$id->sym$8127$sFNhI g$x$8664$sFNhI)
                 (g$id->sym$8127$sFNhI g$y$8665$sFNhI))
          (begin
            '#f
            (g$same-marks?$8128$sFNhI
              (g$stx-mark*$8101$sFNhI g$x$8664$sFNhI)
              (g$stx-mark*$8101$sFNhI g$y$8665$sFNhI)))
          '#f))))
   (g$free-id=?$8130$sFNhI
     g$free-id=?$11840$sFNhI
     (case-lambda
       ((g$i$8666$sFNhI g$j$8667$sFNhI)
        ((case-lambda
           ((g$t0$8668$sFNhI g$t1$8669$sFNhI)
            (if ((case-lambda
                   ((g$t$8670$sFNhI)
                    (if g$t$8670$sFNhI
                      g$t$8670$sFNhI
                      (begin '#f g$t1$8669$sFNhI))))
                 g$t0$8668$sFNhI)
              (eq? g$t0$8668$sFNhI g$t1$8669$sFNhI)
              (eq? (g$id->sym$8127$sFNhI g$i$8666$sFNhI)
                   (g$id->sym$8127$sFNhI g$j$8667$sFNhI)))))
         (g$id->real-label$8140$sFNhI g$i$8666$sFNhI)
         (g$id->real-label$8140$sFNhI g$j$8667$sFNhI)))))
   (g$valid-bound-ids?$8131$sFNhI
     g$valid-bound-ids?$11841$sFNhI
     (case-lambda
       ((g$id*$8671$sFNhI)
        (if (g$for-all$5155$sFNhI g$id?$8126$sFNhI g$id*$8671$sFNhI)
          (begin '#f (g$distinct-bound-ids?$8132$sFNhI g$id*$8671$sFNhI))
          '#f))))
   (g$distinct-bound-ids?$8132$sFNhI
     g$distinct-bound-ids?$11842$sFNhI
     (case-lambda
       ((g$id*$8672$sFNhI)
        ((case-lambda
           ((g$t$8673$sFNhI)
            (if g$t$8673$sFNhI
              g$t$8673$sFNhI
              (begin
                '#f
                (if (not (g$bound-id-member?$8133$sFNhI
                           (car g$id*$8672$sFNhI)
                           (cdr g$id*$8672$sFNhI)))
                  (begin
                    '#f
                    (g$distinct-bound-ids?$8132$sFNhI (cdr g$id*$8672$sFNhI)))
                  '#f)))))
         (null? g$id*$8672$sFNhI)))))
   (g$bound-id-member?$8133$sFNhI
     g$bound-id-member?$11843$sFNhI
     (case-lambda
       ((g$id$8674$sFNhI g$id*$8675$sFNhI)
        (if (pair? g$id*$8675$sFNhI)
          (begin
            '#f
            ((case-lambda
               ((g$t$8676$sFNhI)
                (if g$t$8676$sFNhI
                  g$t$8676$sFNhI
                  (begin
                    '#f
                    (g$bound-id-member?$8133$sFNhI
                      g$id$8674$sFNhI
                      (cdr g$id*$8675$sFNhI))))))
             (g$bound-id=?$8129$sFNhI g$id$8674$sFNhI (car g$id*$8675$sFNhI))))
          '#f))))
   (g$self-evaluating?$8134$sFNhI
     g$self-evaluating?$11844$sFNhI
     (case-lambda
       ((g$x$8677$sFNhI)
        ((case-lambda
           ((g$t$8678$sFNhI)
            (if g$t$8678$sFNhI
              g$t$8678$sFNhI
              ((case-lambda
                 ((g$t$8679$sFNhI)
                  (if g$t$8679$sFNhI
                    g$t$8679$sFNhI
                    ((case-lambda
                       ((g$t$8680$sFNhI)
                        (if g$t$8680$sFNhI
                          g$t$8680$sFNhI
                          ((case-lambda
                             ((g$t$8681$sFNhI)
                              (if g$t$8681$sFNhI
                                g$t$8681$sFNhI
                                (begin
                                  '#f
                                  (g$bytevector?$5644$sFNhI g$x$8677$sFNhI)))))
                           (g$boolean?$5646$sFNhI g$x$8677$sFNhI)))))
                     (g$char?$5642$sFNhI g$x$8677$sFNhI)))))
               (string? g$x$8677$sFNhI)))))
         (number? g$x$8677$sFNhI)))))
   (g$strip-annotations$8135$sFNhI
     g$strip-annotations$11845$sFNhI
     (case-lambda
       ((g$x$8682$sFNhI)
        (if (pair? g$x$8682$sFNhI)
          (cons
            (g$strip-annotations$8135$sFNhI (car g$x$8682$sFNhI))
            (g$strip-annotations$8135$sFNhI (cdr g$x$8682$sFNhI)))
          (if (g$vector?$5643$sFNhI g$x$8682$sFNhI)
            (g$vector-map$5705$sFNhI
              g$strip-annotations$8135$sFNhI
              g$x$8682$sFNhI)
            (if (annotation? g$x$8682$sFNhI)
              (annotation-stripped g$x$8682$sFNhI)
              g$x$8682$sFNhI))))))
   (g$strip$8136$sFNhI
     g$strip$11846$sFNhI
     (case-lambda
       ((g$x$8683$sFNhI g$m*$8684$sFNhI)
        (if (g$top-marked?$8064$sFNhI g$m*$8684$sFNhI)
          (if ((case-lambda
                 ((g$t$8685$sFNhI)
                  (if g$t$8685$sFNhI
                    g$t$8685$sFNhI
                    ((case-lambda
                       ((g$t$8686$sFNhI)
                        (if g$t$8686$sFNhI
                          g$t$8686$sFNhI
                          (begin
                            '#f
                            (if (g$vector?$5643$sFNhI g$x$8683$sFNhI)
                              (if (> (vector-length g$x$8683$sFNhI) '0)
                                (begin
                                  '#f
                                  (annotation? (vector-ref g$x$8683$sFNhI '0)))
                                '#f)
                              '#f)))))
                     (if (pair? g$x$8683$sFNhI)
                       (begin '#f (annotation? (car g$x$8683$sFNhI)))
                       '#f)))))
               (annotation? g$x$8683$sFNhI))
            (g$strip-annotations$8135$sFNhI g$x$8683$sFNhI)
            g$x$8683$sFNhI)
          ((letrec ((g$f$8687$sFNhI
                      (case-lambda
                        ((g$x$8688$sFNhI)
                         (if (g$stx?$8098$sFNhI g$x$8688$sFNhI)
                           (g$strip$8136$sFNhI
                             (g$stx-expr$8100$sFNhI g$x$8688$sFNhI)
                             (g$stx-mark*$8101$sFNhI g$x$8688$sFNhI))
                           (if (annotation? g$x$8688$sFNhI)
                             (annotation-stripped g$x$8688$sFNhI)
                             (if (pair? g$x$8688$sFNhI)
                               ((case-lambda
                                  ((g$a$8689$sFNhI g$d$8690$sFNhI)
                                   (if (if (eq? g$a$8689$sFNhI
                                                (car g$x$8688$sFNhI))
                                         (begin
                                           '#f
                                           (eq? g$d$8690$sFNhI
                                                (cdr g$x$8688$sFNhI)))
                                         '#f)
                                     g$x$8688$sFNhI
                                     (cons g$a$8689$sFNhI g$d$8690$sFNhI))))
                                (g$f$8687$sFNhI (car g$x$8688$sFNhI))
                                (g$f$8687$sFNhI (cdr g$x$8688$sFNhI)))
                               (if (g$vector?$5643$sFNhI g$x$8688$sFNhI)
                                 ((case-lambda
                                    ((g$old$8691$sFNhI)
                                     ((case-lambda
                                        ((g$new$8692$sFNhI)
                                         (if (g$for-all$5155$sFNhI
                                               eq?
                                               g$old$8691$sFNhI
                                               g$new$8692$sFNhI)
                                           g$x$8688$sFNhI
                                           (g$list->vector$5640$sFNhI
                                             g$new$8692$sFNhI))))
                                      (g$map$5157$sFNhI
                                        g$f$8687$sFNhI
                                        g$old$8691$sFNhI))))
                                  (vector->list g$x$8688$sFNhI))
                                 g$x$8688$sFNhI))))))))
             g$f$8687$sFNhI)
           g$x$8683$sFNhI)))))
   (g$stx->datum$8137$sFNhI
     g$stx->datum$11847$sFNhI
     (case-lambda
       ((g$x$8693$sFNhI) (g$strip$8136$sFNhI g$x$8693$sFNhI '()))))
   (g$same-marks*?$8138$sFNhI
     g$same-marks*?$11848$sFNhI
     (case-lambda
       ((g$mark*$8694$sFNhI g$mark**$8695$sFNhI g$si$8696$sFNhI)
        (if (null? g$si$8696$sFNhI)
          '#f
          (if (g$same-marks?$8128$sFNhI
                g$mark*$8694$sFNhI
                (vector-ref g$mark**$8695$sFNhI (car g$si$8696$sFNhI)))
            (car g$si$8696$sFNhI)
            (g$same-marks*?$8138$sFNhI
              g$mark*$8694$sFNhI
              g$mark**$8695$sFNhI
              (cdr g$si$8696$sFNhI)))))))
   (g$id->label$8139$sFNhI
     g$id->label$11849$sFNhI
     (case-lambda
       ((g$id$8697$sFNhI)
        ((case-lambda
           ((g$t$8698$sFNhI)
            (if g$t$8698$sFNhI
              g$t$8698$sFNhI
              (begin
                '#f
                ((case-lambda
                   ((g$t$8699$sFNhI)
                    (if g$t$8699$sFNhI
                      ((case-lambda
                         ((g$env$8700$sFNhI)
                          ((case-lambda
                             ((g$rib$8701$sFNhI)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$gen-define-label+loc$8069$sFNhI
                                     g$id$8697$sFNhI
                                     g$rib$8701$sFNhI
                                     '#f)))
                                (case-lambda
                                  ((g$lab$8704$sFNhI g$_loc$8705$sFNhI)
                                   ((case-lambda
                                      ((g$_loc$8706$sFNhI g$lab$8707$sFNhI)
                                       (begin
                                         (g$extend-rib!$8089$sFNhI
                                           g$rib$8701$sFNhI
                                           g$id$8697$sFNhI
                                           g$lab$8707$sFNhI
                                           '#t)
                                         g$lab$8707$sFNhI)))
                                    g$_loc$8705$sFNhI
                                    g$lab$8704$sFNhI))))))
                           (g$interaction-env-rib$8483$sFNhI
                             g$env$8700$sFNhI))))
                       g$t$8699$sFNhI)
                      '#f)))
                 (g$top-level-context$8525$sFNhI))))))
         (g$id->real-label$8140$sFNhI g$id$8697$sFNhI)))))
   (g$id->real-label$8140$sFNhI
     g$id->real-label$11850$sFNhI
     (case-lambda
       ((g$id$8708$sFNhI)
        ((case-lambda
           ((g$sym$8709$sFNhI)
            ((letrec ((g$search$8710$sFNhI
                        (case-lambda
                          ((g$subst*$8711$sFNhI g$mark*$8712$sFNhI)
                           (if (null? g$subst*$8711$sFNhI)
                             '#f
                             (if (eq? (car g$subst*$8711$sFNhI) 'shift)
                               (g$search$8710$sFNhI
                                 (cdr g$subst*$8711$sFNhI)
                                 (cdr g$mark*$8712$sFNhI))
                               ((case-lambda
                                  ((g$rib$8713$sFNhI)
                                   ((case-lambda
                                      ((g$t$8714$sFNhI)
                                       (if g$t$8714$sFNhI
                                         ((case-lambda
                                            ((g$ht$8715$sFNhI)
                                             ((case-lambda
                                                ((g$si$8716$sFNhI)
                                                 ((case-lambda
                                                    ((g$i$8717$sFNhI)
                                                     (if g$i$8717$sFNhI
                                                       (vector-ref
                                                         (g$rib-label*$8078$sFNhI
                                                           g$rib$8713$sFNhI)
                                                         g$i$8717$sFNhI)
                                                       (g$search$8710$sFNhI
                                                         (cdr g$subst*$8711$sFNhI)
                                                         g$mark*$8712$sFNhI))))
                                                  (if g$si$8716$sFNhI
                                                    (begin
                                                      '#f
                                                      (g$same-marks*?$8138$sFNhI
                                                        g$mark*$8712$sFNhI
                                                        (g$rib-mark**$8077$sFNhI
                                                          g$rib$8713$sFNhI)
                                                        (g$reverse$5652$sFNhI
                                                          g$si$8716$sFNhI)))
                                                    '#f))))
                                              (g$hashtable-ref$5747$sFNhI
                                                g$ht$8715$sFNhI
                                                g$sym$8709$sFNhI
                                                '#f))))
                                          g$t$8714$sFNhI)
                                         ((case-lambda
                                            ((g$t$8718$sFNhI)
                                             (if g$t$8718$sFNhI
                                               g$t$8718$sFNhI
                                               (begin
                                                 '#f
                                                 ((letrec ((g$f$8719$sFNhI
                                                             (case-lambda
                                                               ((g$sym*$8720$sFNhI
                                                                  g$mark**$8721$sFNhI
                                                                  g$label*$8722$sFNhI)
                                                                (if (null?
                                                                      g$sym*$8720$sFNhI)
                                                                  (g$search$8710$sFNhI
                                                                    (cdr g$subst*$8711$sFNhI)
                                                                    g$mark*$8712$sFNhI)
                                                                  (if (if (eq? (car g$sym*$8720$sFNhI)
                                                                               g$sym$8709$sFNhI)
                                                                        (begin
                                                                          '#f
                                                                          (g$same-marks?$8128$sFNhI
                                                                            (car g$mark**$8721$sFNhI)
                                                                            g$mark*$8712$sFNhI))
                                                                        '#f)
                                                                    (car g$label*$8722$sFNhI)
                                                                    (g$f$8719$sFNhI
                                                                      (cdr g$sym*$8720$sFNhI)
                                                                      (cdr g$mark**$8721$sFNhI)
                                                                      (cdr g$label*$8722$sFNhI))))))))
                                                    g$f$8719$sFNhI)
                                                  (g$rib-sym*$8076$sFNhI
                                                    g$rib$8713$sFNhI)
                                                  (g$rib-mark**$8077$sFNhI
                                                    g$rib$8713$sFNhI)
                                                  (g$rib-label*$8078$sFNhI
                                                    g$rib$8713$sFNhI))))))
                                          (g$find-label$8088$sFNhI
                                            g$rib$8713$sFNhI
                                            g$sym$8709$sFNhI
                                            g$mark*$8712$sFNhI)))))
                                    (g$rib-sealed/freq$8079$sFNhI
                                      g$rib$8713$sFNhI))))
                                (car g$subst*$8711$sFNhI))))))))
               g$search$8710$sFNhI)
             (g$stx-subst*$8102$sFNhI g$id$8708$sFNhI)
             (g$stx-mark*$8101$sFNhI g$id$8708$sFNhI))))
         (g$id->sym$8127$sFNhI g$id$8708$sFNhI)))))
   (g$label->binding$8141$sFNhI
     g$label->binding$11851$sFNhI
     (case-lambda
       ((g$x$8723$sFNhI g$r$8724$sFNhI)
        (if (not g$x$8723$sFNhI)
          '(displaced-lexical)
          ((case-lambda
             ((g$t$8725$sFNhI)
              (if g$t$8725$sFNhI
                ((case-lambda
                   ((g$b$8726$sFNhI)
                    (if (if (pair? g$b$8726$sFNhI)
                          (begin '#f (eq? (car g$b$8726$sFNhI) '$core-rtd))
                          '#f)
                      (cons
                        '$rtd
                        (g$map$5157$sFNhI
                          g$bless$8368$sFNhI
                          (cdr g$b$8726$sFNhI)))
                      (if (if (pair? g$b$8726$sFNhI)
                            (begin '#f (eq? (car g$b$8726$sFNhI) 'global-rtd))
                            '#f)
                        ((case-lambda
                           ((g$lib$8727$sFNhI g$loc$8728$sFNhI)
                            (cons '$rtd (symbol-value g$loc$8728$sFNhI))))
                         (g$cadr$5654$sFNhI g$b$8726$sFNhI)
                         (g$cddr$5656$sFNhI g$b$8726$sFNhI))
                        g$b$8726$sFNhI))))
                 g$t$8725$sFNhI)
                ((case-lambda
                   ((g$t$8729$sFNhI)
                    (if g$t$8729$sFNhI
                      (cdr g$t$8729$sFNhI)
                      ((case-lambda
                         ((g$t$8730$sFNhI)
                          (if g$t$8730$sFNhI
                            ((case-lambda
                               ((g$env$8731$sFNhI)
                                ((case-lambda
                                   ((g$t$8732$sFNhI)
                                    (if g$t$8732$sFNhI
                                      ((case-lambda
                                         ((g$p$8733$sFNhI)
                                          (g$cons*$5159$sFNhI
                                            'lexical
                                            (cdr g$p$8733$sFNhI)
                                            '#f)))
                                       g$t$8732$sFNhI)
                                      '(displaced-lexical . #f))))
                                 (g$assq$5145$sFNhI
                                   g$x$8723$sFNhI
                                   (g$interaction-env-locs$8485$sFNhI
                                     g$env$8731$sFNhI)))))
                             g$t$8730$sFNhI)
                            '(displaced-lexical . #f))))
                       (g$top-level-context$8525$sFNhI)))))
                 (g$assq$5145$sFNhI g$x$8723$sFNhI g$r$8724$sFNhI)))))
           (g$imported-label->binding$7935$sFNhI g$x$8723$sFNhI))))))
   (g$make-binding$8142$sFNhI g$make-binding$11852$sFNhI cons)
   (g$binding-type$8143$sFNhI g$binding-type$11853$sFNhI car)
   (g$binding-value$8144$sFNhI g$binding-value$11854$sFNhI cdr)
   (g$raise-unbound-error$8145$sFNhI
     g$raise-unbound-error$11855$sFNhI
     (case-lambda
       ((g$id$8734$sFNhI)
        (g$syntax-violation*$8516$sFNhI
          '#f
          '"unbound identifier"
          g$id$8734$sFNhI
          (g$make-undefined-violation$6093$sFNhI)))))
   (g$syntax-type$8146$sFNhI
     g$syntax-type$11856$sFNhI
     (case-lambda
       ((g$e$8735$sFNhI g$r$8736$sFNhI)
        (if (g$id?$8126$sFNhI g$e$8735$sFNhI)
          ((case-lambda
             ((g$id$8737$sFNhI)
              ((case-lambda
                 ((g$label$8738$sFNhI)
                  ((case-lambda
                     ((g$b$8739$sFNhI)
                      ((case-lambda
                         ((g$type$8740$sFNhI)
                          (begin
                            (if (not g$label$8738$sFNhI)
                              (g$raise-unbound-error$8145$sFNhI g$id$8737$sFNhI)
                              (void))
                            ((case-lambda
                               ((g$t$8741$sFNhI)
                                (if (g$memv$5150$sFNhI
                                      g$t$8741$sFNhI
                                      '(lexical
                                         core-prim
                                         macro
                                         macro!
                                         global
                                         local-macro
                                         local-macro!
                                         global-macro
                                         global-macro!
                                         displaced-lexical
                                         syntax
                                         import
                                         export
                                         $module
                                         $core-rtd
                                         library
                                         mutable
                                         ctv
                                         local-ctv
                                         global-ctv))
                                  (values
                                    g$type$8740$sFNhI
                                    (g$binding-value$8144$sFNhI g$b$8739$sFNhI)
                                    g$id$8737$sFNhI)
                                  (values 'other '#f '#f))))
                             g$type$8740$sFNhI))))
                       (g$binding-type$8143$sFNhI g$b$8739$sFNhI))))
                   (g$label->binding$8141$sFNhI
                     g$label$8738$sFNhI
                     g$r$8736$sFNhI))))
               (g$id->label$8139$sFNhI g$id$8737$sFNhI))))
           g$e$8735$sFNhI)
          (if (g$syntax-pair?$8119$sFNhI g$e$8735$sFNhI)
            ((case-lambda
               ((g$id$8742$sFNhI)
                (if (g$id?$8126$sFNhI g$id$8742$sFNhI)
                  ((case-lambda
                     ((g$label$8743$sFNhI)
                      ((case-lambda
                         ((g$b$8744$sFNhI)
                          ((case-lambda
                             ((g$type$8745$sFNhI)
                              (begin
                                (if (not g$label$8743$sFNhI)
                                  (g$raise-unbound-error$8145$sFNhI
                                    g$id$8742$sFNhI)
                                  (void))
                                ((case-lambda
                                   ((g$t$8746$sFNhI)
                                    (if (g$memv$5150$sFNhI
                                          g$t$8746$sFNhI
                                          '(define define-syntax
                                             core-macro
                                             begin
                                             macro
                                             macro!
                                             local-macro
                                             local-macro!
                                             global-macro
                                             global-macro!
                                             module
                                             library
                                             set!
                                             let-syntax
                                             letrec-syntax
                                             import
                                             export
                                             $core-rtd
                                             ctv
                                             local-ctv
                                             global-ctv))
                                      (values
                                        g$type$8745$sFNhI
                                        (g$binding-value$8144$sFNhI
                                          g$b$8744$sFNhI)
                                        g$id$8742$sFNhI)
                                      (values 'call '#f '#f))))
                                 g$type$8745$sFNhI))))
                           (g$binding-type$8143$sFNhI g$b$8744$sFNhI))))
                       (g$label->binding$8141$sFNhI
                         g$label$8743$sFNhI
                         g$r$8736$sFNhI))))
                   (g$id->label$8139$sFNhI g$id$8742$sFNhI))
                  (values 'call '#f '#f))))
             (g$syntax-car$8123$sFNhI g$e$8735$sFNhI))
            ((case-lambda
               ((g$d$8747$sFNhI)
                (if (g$self-evaluating?$8134$sFNhI g$d$8747$sFNhI)
                  (values 'constant g$d$8747$sFNhI '#f)
                  (values 'other '#f '#f))))
             (g$stx->datum$8137$sFNhI g$e$8735$sFNhI)))))))
   (g$sanitize-binding$8154$sFNhI
     g$sanitize-binding$11857$sFNhI
     (case-lambda
       ((g$x$8748$sFNhI g$src$8749$sFNhI)
        (if (g$procedure?$5647$sFNhI g$x$8748$sFNhI)
          (g$cons*$5159$sFNhI 'local-macro g$x$8748$sFNhI g$src$8749$sFNhI)
          (if (if (pair? g$x$8748$sFNhI)
                (if (eq? (car g$x$8748$sFNhI) 'macro!)
                  (begin '#f (g$procedure?$5647$sFNhI (cdr g$x$8748$sFNhI)))
                  '#f)
                '#f)
            (g$cons*$5159$sFNhI
              'local-macro!
              (cdr g$x$8748$sFNhI)
              g$src$8749$sFNhI)
            (if (if (pair? g$x$8748$sFNhI)
                  (begin '#f (eq? (car g$x$8748$sFNhI) '$rtd))
                  '#f)
              g$x$8748$sFNhI
              (if (if (pair? g$x$8748$sFNhI)
                    (begin '#f (eq? (car g$x$8748$sFNhI) 'ctv))
                    '#f)
                (g$cons*$5159$sFNhI
                  'local-ctv
                  (cdr g$x$8748$sFNhI)
                  g$src$8749$sFNhI)
                (assertion-violation
                  'expand
                  '"invalid transformer"
                  g$x$8748$sFNhI))))))))
   (g$make-variable-transformer$8155$sFNhI
     g$make-variable-transformer$11858$sFNhI
     (case-lambda
       ((g$x$8750$sFNhI)
        (if (g$procedure?$5647$sFNhI g$x$8750$sFNhI)
          (cons 'macro! g$x$8750$sFNhI)
          (assertion-violation
            'make-variable-transformer
            '"not a procedure"
            g$x$8750$sFNhI)))))
   (g$make-compile-time-value$8156$sFNhI
     g$make-compile-time-value$11859$sFNhI
     (case-lambda ((g$x$8751$sFNhI) (cons 'ctv g$x$8751$sFNhI))))
   (g$variable-transformer?$8157$sFNhI
     g$variable-transformer?$11860$sFNhI
     (case-lambda
       ((g$x$8752$sFNhI)
        (if (pair? g$x$8752$sFNhI)
          (if (eq? (car g$x$8752$sFNhI) 'macro!)
            (begin '#f (g$procedure?$5647$sFNhI (cdr g$x$8752$sFNhI)))
            '#f)
          '#f))))
   (g$variable-transformer-procedure$8158$sFNhI
     g$variable-transformer-procedure$11861$sFNhI
     (case-lambda
       ((g$x$8753$sFNhI)
        (if (g$variable-transformer?$8157$sFNhI g$x$8753$sFNhI)
          (cdr g$x$8753$sFNhI)
          (assertion-violation
            'variable-transformer-procedure
            '"not a variable transformer"
            g$x$8753$sFNhI)))))
   (g$make-eval-transformer$8159$sFNhI
     g$make-eval-transformer$11862$sFNhI
     (case-lambda
       ((g$x$8754$sFNhI)
        (g$sanitize-binding$8154$sFNhI
          (eval-core (g$expanded->core$7674$sFNhI g$x$8754$sFNhI))
          g$x$8754$sFNhI))))
   (g$parse-define$8345$sFNhI
     g$parse-define$11863$sFNhI
     (case-lambda
       ((g$x$8755$sFNhI)
        ((case-lambda
           ((g$t$8756$sFNhI)
            ((case-lambda
               ((g$ls/false$8757$sFNhI)
                (if (if g$ls/false$8757$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8758$sFNhI
                               g$fmls$8759$sFNhI
                               g$b$8760$sFNhI
                               g$b*$8761$sFNhI)
                             (g$id?$8126$sFNhI g$id$8758$sFNhI)))
                          g$ls/false$8757$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8762$sFNhI
                         g$fmls$8763$sFNhI
                         g$b$8764$sFNhI
                         g$b*$8765$sFNhI)
                       (begin
                         (g$verify-formals$8425$sFNhI
                           g$fmls$8763$sFNhI
                           g$x$8755$sFNhI)
                         (values
                           g$id$8762$sFNhI
                           (cons
                             'defun
                             (cons
                               g$fmls$8763$sFNhI
                               (cons g$b$8764$sFNhI g$b*$8765$sFNhI)))))))
                    g$ls/false$8757$sFNhI)
                  ((case-lambda
                     ((g$t$8766$sFNhI)
                      ((case-lambda
                         ((g$ls/false$8767$sFNhI)
                          (if (if g$ls/false$8767$sFNhI
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id$8768$sFNhI g$val$8769$sFNhI)
                                       (g$id?$8126$sFNhI g$id$8768$sFNhI)))
                                    g$ls/false$8767$sFNhI))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id$8770$sFNhI g$val$8771$sFNhI)
                                 (values
                                   g$id$8770$sFNhI
                                   (cons 'expr g$val$8771$sFNhI))))
                              g$ls/false$8767$sFNhI)
                            ((case-lambda
                               ((g$t$8772$sFNhI)
                                ((case-lambda
                                   ((g$ls/false$8773$sFNhI)
                                    (if (if g$ls/false$8773$sFNhI
                                          (begin
                                            '#f
                                            (apply
                                              (case-lambda
                                                ((g$id$8774$sFNhI)
                                                 (g$id?$8126$sFNhI
                                                   g$id$8774$sFNhI)))
                                              g$ls/false$8773$sFNhI))
                                          '#f)
                                      (apply
                                        (case-lambda
                                          ((g$id$8775$sFNhI)
                                           (values
                                             g$id$8775$sFNhI
                                             (cons
                                               'expr
                                               (g$bless$8368$sFNhI '(void))))))
                                        g$ls/false$8773$sFNhI)
                                      (g$syntax-violation$8517$sFNhI
                                        '#f
                                        '"invalid syntax"
                                        g$t$8772$sFNhI))))
                                 (g$syntax-dispatch$8405$sFNhI
                                   g$t$8772$sFNhI
                                   '(_ any)))))
                             g$t$8766$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$8766$sFNhI
                         '(_ any any)))))
                   g$t$8756$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8756$sFNhI
               '(_ (any . any) any . each-any)))))
         g$x$8755$sFNhI))))
   (g$parse-define-syntax$8346$sFNhI
     g$parse-define-syntax$11864$sFNhI
     (case-lambda
       ((g$x$8776$sFNhI)
        ((case-lambda
           ((g$t$8777$sFNhI)
            ((case-lambda
               ((g$ls/false$8778$sFNhI)
                (if (if g$ls/false$8778$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8779$sFNhI g$val$8780$sFNhI)
                             (g$id?$8126$sFNhI g$id$8779$sFNhI)))
                          g$ls/false$8778$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8781$sFNhI g$val$8782$sFNhI)
                       (values g$id$8781$sFNhI g$val$8782$sFNhI)))
                    g$ls/false$8778$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8777$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$8777$sFNhI '(_ any any)))))
         g$x$8776$sFNhI))))
   (g$scheme-stx-hashtable$8347$sFNhI
     g$scheme-stx-hashtable$11865$sFNhI
     (g$make-eq-hashtable$5744$sFNhI))
   (g$scheme-stx$8348$sFNhI
     g$scheme-stx$11866$sFNhI
     (case-lambda
       ((g$sym$8783$sFNhI)
        ((case-lambda
           ((g$t$8784$sFNhI)
            (if g$t$8784$sFNhI
              g$t$8784$sFNhI
              (begin
                '#f
                ((case-lambda
                   ((g$subst$8785$sFNhI)
                    ((case-lambda
                       ((g$stx$8786$sFNhI)
                        ((case-lambda
                           ((g$stx$8787$sFNhI)
                            (begin
                              (g$hashtable-set!$5748$sFNhI
                                g$scheme-stx-hashtable$8347$sFNhI
                                g$sym$8783$sFNhI
                                g$stx$8787$sFNhI)
                              g$stx$8787$sFNhI)))
                         ((case-lambda
                            ((g$t$8788$sFNhI)
                             (if g$t$8788$sFNhI
                               ((case-lambda
                                  ((g$x$8789$sFNhI)
                                   ((case-lambda
                                      ((g$name$8790$sFNhI g$label$8791$sFNhI)
                                       (g$add-subst$8116$sFNhI
                                         (g$make-rib$8075$sFNhI
                                           (list g$name$8790$sFNhI)
                                           (list g$top-mark*$8063$sFNhI)
                                           (list g$label$8791$sFNhI)
                                           '#f
                                           '#f)
                                         g$stx$8786$sFNhI)))
                                    (car g$x$8789$sFNhI)
                                    (cdr g$x$8789$sFNhI))))
                                g$t$8788$sFNhI)
                               g$stx$8786$sFNhI)))
                          (g$assq$5145$sFNhI
                            g$sym$8783$sFNhI
                            g$subst$8785$sFNhI)))))
                     (g$make-stx$8099$sFNhI
                       g$sym$8783$sFNhI
                       g$top-mark*$8063$sFNhI
                       '()
                       '()))))
                 (g$library-subst$7893$sFNhI
                   (g$find-library-by-name$7929$sFNhI
                     '(psyntax system $all))))))))
         (g$hashtable-ref$5747$sFNhI
           g$scheme-stx-hashtable$8347$sFNhI
           g$sym$8783$sFNhI
           '#f)))))
   (g$lexical-var$8349$sFNhI g$lexical-var$11867$sFNhI car)
   (g$lexical-mutable?$8350$sFNhI g$lexical-mutable?$11868$sFNhI cdr)
   (g$set-lexical-mutable!$8351$sFNhI
     g$set-lexical-mutable!$11869$sFNhI
     set-cdr!)
   (g$add-lexical$8352$sFNhI
     g$add-lexical$11870$sFNhI
     (case-lambda
       ((g$lab$8792$sFNhI g$lex$8793$sFNhI g$r$8794$sFNhI)
        (cons
          (g$cons*$5159$sFNhI g$lab$8792$sFNhI 'lexical g$lex$8793$sFNhI '#f)
          g$r$8794$sFNhI))))
   (g$add-lexicals$8353$sFNhI
     g$add-lexicals$11871$sFNhI
     (case-lambda
       ((g$lab*$8795$sFNhI g$lex*$8796$sFNhI g$r$8797$sFNhI)
        (if (null? g$lab*$8795$sFNhI)
          g$r$8797$sFNhI
          (g$add-lexicals$8353$sFNhI
            (cdr g$lab*$8795$sFNhI)
            (cdr g$lex*$8796$sFNhI)
            (g$add-lexical$8352$sFNhI
              (car g$lab*$8795$sFNhI)
              (car g$lex*$8796$sFNhI)
              g$r$8797$sFNhI))))))
   (g$letrec-helper$8354$sFNhI
     g$letrec-helper$11872$sFNhI
     (case-lambda
       ((g$e$8798$sFNhI g$r$8799$sFNhI g$mr$8800$sFNhI g$build$8801$sFNhI)
        ((case-lambda
           ((g$t$8802$sFNhI)
            ((case-lambda
               ((g$ls/false$8803$sFNhI)
                (if g$ls/false$8803$sFNhI
                  (apply
                    (case-lambda
                      ((g$lhs*$8804$sFNhI
                         g$rhs*$8805$sFNhI
                         g$b$8806$sFNhI
                         g$b*$8807$sFNhI)
                       (if (not (g$valid-bound-ids?$8131$sFNhI
                                  g$lhs*$8804$sFNhI))
                         (g$invalid-fmls-error$8370$sFNhI
                           g$e$8798$sFNhI
                           g$lhs*$8804$sFNhI)
                         ((case-lambda
                            ((g$lex*$8808$sFNhI g$lab*$8809$sFNhI)
                             ((case-lambda
                                ((g$rib$8810$sFNhI g$r$8811$sFNhI)
                                 ((case-lambda
                                    ((g$body$8812$sFNhI g$rhs*$8813$sFNhI)
                                     (g$build$8801$sFNhI
                                       '#f
                                       g$lex*$8808$sFNhI
                                       g$rhs*$8813$sFNhI
                                       g$body$8812$sFNhI)))
                                  (g$chi-internal$8434$sFNhI
                                    (g$add-subst$8116$sFNhI
                                      g$rib$8810$sFNhI
                                      (cons g$b$8806$sFNhI g$b*$8807$sFNhI))
                                    g$r$8811$sFNhI
                                    g$mr$8800$sFNhI)
                                  (g$chi-expr*$8421$sFNhI
                                    (g$map$5157$sFNhI
                                      (case-lambda
                                        ((g$x$8814$sFNhI)
                                         (g$add-subst$8116$sFNhI
                                           g$rib$8810$sFNhI
                                           g$x$8814$sFNhI)))
                                      g$rhs*$8805$sFNhI)
                                    g$r$8811$sFNhI
                                    g$mr$8800$sFNhI))))
                              (g$make-full-rib$8094$sFNhI
                                g$lhs*$8804$sFNhI
                                g$lab*$8809$sFNhI)
                              (g$add-lexicals$8353$sFNhI
                                g$lab*$8809$sFNhI
                                g$lex*$8808$sFNhI
                                g$r$8799$sFNhI))))
                          (g$map$5157$sFNhI
                            g$gen-lexical$8065$sFNhI
                            g$lhs*$8804$sFNhI)
                          (g$map$5157$sFNhI
                            g$gen-label$8067$sFNhI
                            g$lhs*$8804$sFNhI)))))
                    g$ls/false$8803$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8802$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8802$sFNhI
               '(_ #(each (any any)) any . each-any)))))
         g$e$8798$sFNhI))))
   (g$letrec-transformer$8355$sFNhI
     g$letrec-transformer$11873$sFNhI
     (case-lambda
       ((g$e$8815$sFNhI g$r$8816$sFNhI g$mr$8817$sFNhI)
        (g$letrec-helper$8354$sFNhI
          g$e$8815$sFNhI
          g$r$8816$sFNhI
          g$mr$8817$sFNhI
          g$build-letrec$8057$sFNhI))))
   (g$letrec*-transformer$8356$sFNhI
     g$letrec*-transformer$11874$sFNhI
     (case-lambda
       ((g$e$8818$sFNhI g$r$8819$sFNhI g$mr$8820$sFNhI)
        (g$letrec-helper$8354$sFNhI
          g$e$8818$sFNhI
          g$r$8819$sFNhI
          g$mr$8820$sFNhI
          g$build-letrec*$8058$sFNhI))))
   (g$fluid-let-syntax-transformer$8357$sFNhI
     g$fluid-let-syntax-transformer$11875$sFNhI
     (case-lambda
       ((g$e$8821$sFNhI g$r$8822$sFNhI g$mr$8823$sFNhI)
        (letrec* ((g$lookup$8824$sFNhI
                    (case-lambda
                      ((g$x$8834$sFNhI)
                       ((case-lambda
                          ((g$t$8835$sFNhI)
                           (if g$t$8835$sFNhI
                             g$t$8835$sFNhI
                             (begin
                               '#f
                               (g$syntax-violation$8517$sFNhI
                                 '#f
                                 '"unbound identifier"
                                 g$e$8821$sFNhI
                                 g$x$8834$sFNhI)))))
                        (g$id->label$8139$sFNhI g$x$8834$sFNhI))))))
          ((case-lambda
             ((g$t$8825$sFNhI)
              ((case-lambda
                 ((g$ls/false$8826$sFNhI)
                  (if g$ls/false$8826$sFNhI
                    (apply
                      (case-lambda
                        ((g$lhs*$8827$sFNhI
                           g$rhs*$8828$sFNhI
                           g$b$8829$sFNhI
                           g$b*$8830$sFNhI)
                         (if (not (g$valid-bound-ids?$8131$sFNhI
                                    g$lhs*$8827$sFNhI))
                           (g$invalid-fmls-error$8370$sFNhI
                             g$e$8821$sFNhI
                             g$lhs*$8827$sFNhI)
                           ((case-lambda
                              ((g$lab*$8831$sFNhI g$rhs*$8832$sFNhI)
                               (g$chi-internal$8434$sFNhI
                                 (cons g$b$8829$sFNhI g$b*$8830$sFNhI)
                                 (append
                                   (g$map$5157$sFNhI
                                     cons
                                     g$lab*$8831$sFNhI
                                     g$rhs*$8832$sFNhI)
                                   g$r$8822$sFNhI)
                                 (append
                                   (g$map$5157$sFNhI
                                     cons
                                     g$lab*$8831$sFNhI
                                     g$rhs*$8832$sFNhI)
                                   g$mr$8823$sFNhI))))
                            (g$map$5157$sFNhI
                              g$lookup$8824$sFNhI
                              g$lhs*$8827$sFNhI)
                            (g$map$5157$sFNhI
                              (case-lambda
                                ((g$x$8833$sFNhI)
                                 (g$make-eval-transformer$8159$sFNhI
                                   (g$expand-transformer$8450$sFNhI
                                     g$x$8833$sFNhI
                                     g$mr$8823$sFNhI))))
                              g$rhs*$8828$sFNhI)))))
                      g$ls/false$8826$sFNhI)
                    (g$syntax-violation$8517$sFNhI
                      '#f
                      '"invalid syntax"
                      g$t$8825$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$8825$sFNhI
                 '(_ #(each (any any)) any . each-any)))))
           g$e$8821$sFNhI)))))
   (g$type-descriptor-transformer$8358$sFNhI
     g$type-descriptor-transformer$11876$sFNhI
     (case-lambda
       ((g$e$8836$sFNhI g$r$8837$sFNhI g$mr$8838$sFNhI)
        ((case-lambda
           ((g$t$8839$sFNhI)
            ((case-lambda
               ((g$ls/false$8840$sFNhI)
                (if (if g$ls/false$8840$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8841$sFNhI)
                             (g$id?$8126$sFNhI g$id$8841$sFNhI)))
                          g$ls/false$8840$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8842$sFNhI)
                       ((case-lambda
                          ((g$lab$8843$sFNhI)
                           ((case-lambda
                              ((g$b$8844$sFNhI)
                               ((case-lambda
                                  ((g$type$8845$sFNhI)
                                   (begin
                                     (if (not g$lab$8843$sFNhI)
                                       (g$raise-unbound-error$8145$sFNhI
                                         g$id$8842$sFNhI)
                                       (void))
                                     (if (not (if (eq? g$type$8845$sFNhI '$rtd)
                                                (begin
                                                  '#f
                                                  (not (list?
                                                         (g$binding-value$8144$sFNhI
                                                           g$b$8844$sFNhI))))
                                                '#f))
                                       (g$syntax-violation$8517$sFNhI
                                         '#f
                                         '"not a record type"
                                         g$e$8836$sFNhI)
                                       (void))
                                     (list
                                       'quote
                                       (g$binding-value$8144$sFNhI
                                         g$b$8844$sFNhI)))))
                                (g$binding-type$8143$sFNhI g$b$8844$sFNhI))))
                            (g$label->binding$8141$sFNhI
                              g$lab$8843$sFNhI
                              g$r$8837$sFNhI))))
                        (g$id->label$8139$sFNhI g$id$8842$sFNhI))))
                    g$ls/false$8840$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8839$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$8839$sFNhI '(_ any)))))
         g$e$8836$sFNhI))))
   (g$record-type-descriptor-transformer$8359$sFNhI
     g$record-type-descriptor-transformer$11877$sFNhI
     (case-lambda
       ((g$e$8846$sFNhI g$r$8847$sFNhI g$mr$8848$sFNhI)
        ((case-lambda
           ((g$t$8849$sFNhI)
            ((case-lambda
               ((g$ls/false$8850$sFNhI)
                (if (if g$ls/false$8850$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8851$sFNhI)
                             (g$id?$8126$sFNhI g$id$8851$sFNhI)))
                          g$ls/false$8850$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8852$sFNhI)
                       ((case-lambda
                          ((g$lab$8853$sFNhI)
                           ((case-lambda
                              ((g$b$8854$sFNhI)
                               ((case-lambda
                                  ((g$type$8855$sFNhI)
                                   (begin
                                     (if (not g$lab$8853$sFNhI)
                                       (g$raise-unbound-error$8145$sFNhI
                                         g$id$8852$sFNhI)
                                       (void))
                                     (if (not (if (eq? g$type$8855$sFNhI '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8144$sFNhI
                                                      g$b$8854$sFNhI)))
                                                '#f))
                                       (g$syntax-violation$8517$sFNhI
                                         '#f
                                         '"not a record type"
                                         g$e$8846$sFNhI)
                                       (void))
                                     (g$chi-expr$8423$sFNhI
                                       (car (g$binding-value$8144$sFNhI
                                              g$b$8854$sFNhI))
                                       g$r$8847$sFNhI
                                       g$mr$8848$sFNhI))))
                                (g$binding-type$8143$sFNhI g$b$8854$sFNhI))))
                            (g$label->binding$8141$sFNhI
                              g$lab$8853$sFNhI
                              g$r$8847$sFNhI))))
                        (g$id->label$8139$sFNhI g$id$8852$sFNhI))))
                    g$ls/false$8850$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8849$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$8849$sFNhI '(_ any)))))
         g$e$8846$sFNhI))))
   (g$record-constructor-descriptor-transformer$8360$sFNhI
     g$record-constructor-descriptor-transformer$11878$sFNhI
     (case-lambda
       ((g$e$8856$sFNhI g$r$8857$sFNhI g$mr$8858$sFNhI)
        ((case-lambda
           ((g$t$8859$sFNhI)
            ((case-lambda
               ((g$ls/false$8860$sFNhI)
                (if (if g$ls/false$8860$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$id$8861$sFNhI)
                             (g$id?$8126$sFNhI g$id$8861$sFNhI)))
                          g$ls/false$8860$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$id$8862$sFNhI)
                       ((case-lambda
                          ((g$lab$8863$sFNhI)
                           ((case-lambda
                              ((g$b$8864$sFNhI)
                               ((case-lambda
                                  ((g$type$8865$sFNhI)
                                   (begin
                                     (if (not g$lab$8863$sFNhI)
                                       (g$raise-unbound-error$8145$sFNhI
                                         g$id$8862$sFNhI)
                                       (void))
                                     (if (not (if (eq? g$type$8865$sFNhI '$rtd)
                                                (begin
                                                  '#f
                                                  (list?
                                                    (g$binding-value$8144$sFNhI
                                                      g$b$8864$sFNhI)))
                                                '#f))
                                       (g$syntax-violation$8517$sFNhI
                                         '#f
                                         '"invalid type"
                                         g$e$8856$sFNhI)
                                       (void))
                                     (g$chi-expr$8423$sFNhI
                                       (g$cadr$5654$sFNhI
                                         (g$binding-value$8144$sFNhI
                                           g$b$8864$sFNhI))
                                       g$r$8857$sFNhI
                                       g$mr$8858$sFNhI))))
                                (g$binding-type$8143$sFNhI g$b$8864$sFNhI))))
                            (g$label->binding$8141$sFNhI
                              g$lab$8863$sFNhI
                              g$r$8857$sFNhI))))
                        (g$id->label$8139$sFNhI g$id$8862$sFNhI))))
                    g$ls/false$8860$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8859$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$8859$sFNhI '(_ any)))))
         g$e$8856$sFNhI))))
   (g$when-macro$8361$sFNhI
     g$when-macro$11879$sFNhI
     (case-lambda
       ((g$e$8866$sFNhI)
        ((case-lambda
           ((g$t$8867$sFNhI)
            ((case-lambda
               ((g$ls/false$8868$sFNhI)
                (if g$ls/false$8868$sFNhI
                  (apply
                    (case-lambda
                      ((g$test$8869$sFNhI g$e$8870$sFNhI g$e*$8871$sFNhI)
                       (g$bless$8368$sFNhI
                         (list
                           'if
                           g$test$8869$sFNhI
                           (cons
                             'begin
                             (cons g$e$8870$sFNhI g$e*$8871$sFNhI))))))
                    g$ls/false$8868$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8867$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8867$sFNhI
               '(_ any any . each-any)))))
         g$e$8866$sFNhI))))
   (g$unless-macro$8362$sFNhI
     g$unless-macro$11880$sFNhI
     (case-lambda
       ((g$e$8872$sFNhI)
        ((case-lambda
           ((g$t$8873$sFNhI)
            ((case-lambda
               ((g$ls/false$8874$sFNhI)
                (if g$ls/false$8874$sFNhI
                  (apply
                    (case-lambda
                      ((g$test$8875$sFNhI g$e$8876$sFNhI g$e*$8877$sFNhI)
                       (g$bless$8368$sFNhI
                         (list
                           'if
                           (list 'not g$test$8875$sFNhI)
                           (cons
                             'begin
                             (cons g$e$8876$sFNhI g$e*$8877$sFNhI))))))
                    g$ls/false$8874$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8873$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8873$sFNhI
               '(_ any any . each-any)))))
         g$e$8872$sFNhI))))
   (g$if-transformer$8363$sFNhI
     g$if-transformer$11881$sFNhI
     (case-lambda
       ((g$e$8878$sFNhI g$r$8879$sFNhI g$mr$8880$sFNhI)
        ((case-lambda
           ((g$t$8881$sFNhI)
            ((case-lambda
               ((g$ls/false$8882$sFNhI)
                (if g$ls/false$8882$sFNhI
                  (apply
                    (case-lambda
                      ((g$e0$8883$sFNhI g$e1$8884$sFNhI g$e2$8885$sFNhI)
                       (list
                         'if
                         (g$chi-expr$8423$sFNhI
                           g$e0$8883$sFNhI
                           g$r$8879$sFNhI
                           g$mr$8880$sFNhI)
                         (g$chi-expr$8423$sFNhI
                           g$e1$8884$sFNhI
                           g$r$8879$sFNhI
                           g$mr$8880$sFNhI)
                         (g$chi-expr$8423$sFNhI
                           g$e2$8885$sFNhI
                           g$r$8879$sFNhI
                           g$mr$8880$sFNhI))))
                    g$ls/false$8882$sFNhI)
                  ((case-lambda
                     ((g$t$8886$sFNhI)
                      ((case-lambda
                         ((g$ls/false$8887$sFNhI)
                          (if g$ls/false$8887$sFNhI
                            (apply
                              (case-lambda
                                ((g$e0$8888$sFNhI g$e1$8889$sFNhI)
                                 (list
                                   'if
                                   (g$chi-expr$8423$sFNhI
                                     g$e0$8888$sFNhI
                                     g$r$8879$sFNhI
                                     g$mr$8880$sFNhI)
                                   (g$chi-expr$8423$sFNhI
                                     g$e1$8889$sFNhI
                                     g$r$8879$sFNhI
                                     g$mr$8880$sFNhI)
                                   (g$build-void$8056$sFNhI))))
                              g$ls/false$8887$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$8886$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$8886$sFNhI
                         '(_ any any)))))
                   g$t$8881$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$8881$sFNhI '(_ any any any)))))
         g$e$8878$sFNhI))))
   (g$case-macro$8364$sFNhI
     g$case-macro$11882$sFNhI
     (case-lambda
       ((g$e$8890$sFNhI)
        (letrec* ((g$build-last$8891$sFNhI
                    (case-lambda
                      ((g$cls$8911$sFNhI)
                       ((case-lambda
                          ((g$t$8912$sFNhI)
                           ((case-lambda
                              ((g$ls/false$8913$sFNhI)
                               (if g$ls/false$8913$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$e$8914$sFNhI g$e*$8915$sFNhI)
                                      (cons
                                        'begin
                                        (cons g$e$8914$sFNhI g$e*$8915$sFNhI))))
                                   g$ls/false$8913$sFNhI)
                                 ((case-lambda
                                    ((g$t$8916$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$8917$sFNhI)
                                         (if g$ls/false$8917$sFNhI
                                           (apply
                                             (case-lambda
                                               (()
                                                (g$build-one$8892$sFNhI
                                                  g$cls$8911$sFNhI
                                                  '(if #f #f))))
                                             g$ls/false$8917$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$8916$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$8916$sFNhI
                                        '_))))
                                  g$t$8912$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$8912$sFNhI
                              '(#(scheme-id else) any . each-any)))))
                        g$cls$8911$sFNhI))))
                  (g$build-one$8892$sFNhI
                    (case-lambda
                      ((g$cls$8904$sFNhI g$k$8905$sFNhI)
                       ((case-lambda
                          ((g$t$8906$sFNhI)
                           ((case-lambda
                              ((g$ls/false$8907$sFNhI)
                               (if g$ls/false$8907$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$d*$8908$sFNhI
                                        g$e$8909$sFNhI
                                        g$e*$8910$sFNhI)
                                      (list
                                        'if
                                        (list
                                          'memv
                                          't
                                          (list 'quote g$d*$8908$sFNhI))
                                        (cons
                                          'begin
                                          (cons g$e$8909$sFNhI g$e*$8910$sFNhI))
                                        g$k$8905$sFNhI)))
                                   g$ls/false$8907$sFNhI)
                                 (g$syntax-violation$8517$sFNhI
                                   '#f
                                   '"invalid syntax"
                                   g$t$8906$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$8906$sFNhI
                              '(each-any any . each-any)))))
                        g$cls$8904$sFNhI)))))
          ((case-lambda
             ((g$t$8893$sFNhI)
              ((case-lambda
                 ((g$ls/false$8894$sFNhI)
                  (if g$ls/false$8894$sFNhI
                    (apply
                      (case-lambda
                        ((g$expr$8895$sFNhI)
                         (g$bless$8368$sFNhI
                           (cons
                             'let
                             (cons
                               (list (list 't g$expr$8895$sFNhI))
                               '((if #f #f)))))))
                      g$ls/false$8894$sFNhI)
                    ((case-lambda
                       ((g$t$8896$sFNhI)
                        ((case-lambda
                           ((g$ls/false$8897$sFNhI)
                            (if g$ls/false$8897$sFNhI
                              (apply
                                (case-lambda
                                  ((g$expr$8898$sFNhI
                                     g$cls$8899$sFNhI
                                     g$cls*$8900$sFNhI)
                                   (g$bless$8368$sFNhI
                                     (list
                                       'let
                                       (list (list 't g$expr$8898$sFNhI))
                                       ((letrec ((g$f$8901$sFNhI
                                                   (case-lambda
                                                     ((g$cls$8902$sFNhI
                                                        g$cls*$8903$sFNhI)
                                                      (if (null?
                                                            g$cls*$8903$sFNhI)
                                                        (g$build-last$8891$sFNhI
                                                          g$cls$8902$sFNhI)
                                                        (g$build-one$8892$sFNhI
                                                          g$cls$8902$sFNhI
                                                          (g$f$8901$sFNhI
                                                            (car g$cls*$8903$sFNhI)
                                                            (cdr g$cls*$8903$sFNhI))))))))
                                          g$f$8901$sFNhI)
                                        g$cls$8899$sFNhI
                                        g$cls*$8900$sFNhI)))))
                                g$ls/false$8897$sFNhI)
                              (g$syntax-violation$8517$sFNhI
                                '#f
                                '"invalid syntax"
                                g$t$8896$sFNhI))))
                         (g$syntax-dispatch$8405$sFNhI
                           g$t$8896$sFNhI
                           '(_ any any . each-any)))))
                     g$t$8893$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI g$t$8893$sFNhI '(_ any)))))
           g$e$8890$sFNhI)))))
   (g$quote-transformer$8365$sFNhI
     g$quote-transformer$11883$sFNhI
     (case-lambda
       ((g$e$8918$sFNhI g$r$8919$sFNhI g$mr$8920$sFNhI)
        ((case-lambda
           ((g$t$8921$sFNhI)
            ((case-lambda
               ((g$ls/false$8922$sFNhI)
                (if g$ls/false$8922$sFNhI
                  (apply
                    (case-lambda
                      ((g$datum$8923$sFNhI)
                       (list
                         'quote
                         (g$stx->datum$8137$sFNhI g$datum$8923$sFNhI))))
                    g$ls/false$8922$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8921$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$8921$sFNhI '(_ any)))))
         g$e$8918$sFNhI))))
   (g$case-lambda-transformer$8366$sFNhI
     g$case-lambda-transformer$11884$sFNhI
     (case-lambda
       ((g$e$8924$sFNhI g$r$8925$sFNhI g$mr$8926$sFNhI)
        ((case-lambda
           ((g$t$8927$sFNhI)
            ((case-lambda
               ((g$ls/false$8928$sFNhI)
                (if g$ls/false$8928$sFNhI
                  (apply
                    (case-lambda
                      ((g$fmls*$8929$sFNhI g$b*$8930$sFNhI g$b**$8931$sFNhI)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause*$8427$sFNhI
                              g$e$8924$sFNhI
                              g$fmls*$8929$sFNhI
                              (g$map$5157$sFNhI
                                cons
                                g$b*$8930$sFNhI
                                g$b**$8931$sFNhI)
                              g$r$8925$sFNhI
                              g$mr$8926$sFNhI)))
                         (case-lambda
                           ((g$fmls*$8934$sFNhI g$body*$8935$sFNhI)
                            ((case-lambda
                               ((g$body*$8936$sFNhI g$fmls*$8937$sFNhI)
                                (g$build-case-lambda$8053$sFNhI
                                  '#f
                                  g$fmls*$8937$sFNhI
                                  g$body*$8936$sFNhI)))
                             g$body*$8935$sFNhI
                             g$fmls*$8934$sFNhI))))))
                    g$ls/false$8928$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8927$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8927$sFNhI
               '(_ . #(each (any any . each-any)))))))
         g$e$8924$sFNhI))))
   (g$lambda-transformer$8367$sFNhI
     g$lambda-transformer$11885$sFNhI
     (case-lambda
       ((g$e$8938$sFNhI g$r$8939$sFNhI g$mr$8940$sFNhI)
        ((case-lambda
           ((g$t$8941$sFNhI)
            ((case-lambda
               ((g$ls/false$8942$sFNhI)
                (if g$ls/false$8942$sFNhI
                  (apply
                    (case-lambda
                      ((g$fmls$8943$sFNhI g$b$8944$sFNhI g$b*$8945$sFNhI)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$chi-lambda-clause$8426$sFNhI
                              g$e$8938$sFNhI
                              g$fmls$8943$sFNhI
                              (cons g$b$8944$sFNhI g$b*$8945$sFNhI)
                              g$r$8939$sFNhI
                              g$mr$8940$sFNhI)))
                         (case-lambda
                           ((g$fmls$8948$sFNhI g$body$8949$sFNhI)
                            ((case-lambda
                               ((g$body$8950$sFNhI g$fmls$8951$sFNhI)
                                (g$build-lambda$8052$sFNhI
                                  '#f
                                  g$fmls$8951$sFNhI
                                  g$body$8950$sFNhI)))
                             g$body$8949$sFNhI
                             g$fmls$8948$sFNhI))))))
                    g$ls/false$8942$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8941$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8941$sFNhI
               '(_ any any . each-any)))))
         g$e$8938$sFNhI))))
   (g$bless$8368$sFNhI
     g$bless$11886$sFNhI
     (case-lambda
       ((g$x$8952$sFNhI)
        (g$mkstx$8114$sFNhI
          ((letrec ((g$f$8953$sFNhI
                      (case-lambda
                        ((g$x$8954$sFNhI)
                         (if (g$stx?$8098$sFNhI g$x$8954$sFNhI)
                           g$x$8954$sFNhI
                           (if (pair? g$x$8954$sFNhI)
                             (cons
                               (g$f$8953$sFNhI (car g$x$8954$sFNhI))
                               (g$f$8953$sFNhI (cdr g$x$8954$sFNhI)))
                             (if (g$symbol?$5645$sFNhI g$x$8954$sFNhI)
                               (g$scheme-stx$8348$sFNhI g$x$8954$sFNhI)
                               (if (g$vector?$5643$sFNhI g$x$8954$sFNhI)
                                 (g$vector-map$5705$sFNhI
                                   g$f$8953$sFNhI
                                   g$x$8954$sFNhI)
                                 g$x$8954$sFNhI))))))))
             g$f$8953$sFNhI)
           g$x$8952$sFNhI)
          '()
          '()
          '()))))
   (g$with-syntax-macro$8369$sFNhI
     g$with-syntax-macro$11887$sFNhI
     (case-lambda
       ((g$e$8955$sFNhI)
        ((case-lambda
           ((g$t$8956$sFNhI)
            ((case-lambda
               ((g$ls/false$8957$sFNhI)
                (if g$ls/false$8957$sFNhI
                  (apply
                    (case-lambda
                      ((g$pat*$8958$sFNhI
                         g$expr*$8959$sFNhI
                         g$b$8960$sFNhI
                         g$b*$8961$sFNhI)
                       ((case-lambda
                          ((g$idn*$8962$sFNhI)
                           (begin
                             (g$verify-formals$8425$sFNhI
                               (g$map$5157$sFNhI car g$idn*$8962$sFNhI)
                               g$e$8955$sFNhI)
                             ((case-lambda
                                ((g$t*$8963$sFNhI)
                                 (g$bless$8368$sFNhI
                                   (list
                                     'let
                                     (g$map$5157$sFNhI
                                       list
                                       g$t*$8963$sFNhI
                                       g$expr*$8959$sFNhI)
                                     ((letrec ((g$f$8964$sFNhI
                                                 (case-lambda
                                                   ((g$pat*$8965$sFNhI
                                                      g$t*$8966$sFNhI)
                                                    (if (null?
                                                          g$pat*$8965$sFNhI)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '#f
                                                          (cons
                                                            g$b$8960$sFNhI
                                                            g$b*$8961$sFNhI)))
                                                      (list
                                                        'syntax-case
                                                        (car g$t*$8966$sFNhI)
                                                        '()
                                                        (list
                                                          (car g$pat*$8965$sFNhI)
                                                          (g$f$8964$sFNhI
                                                            (cdr g$pat*$8965$sFNhI)
                                                            (cdr g$t*$8966$sFNhI)))
                                                        (list
                                                          '_
                                                          (list
                                                            'assertion-violation
                                                            ''with-syntax
                                                            '"pattern does not match value"
                                                            (list
                                                              'quote
                                                              (car g$pat*$8965$sFNhI))
                                                            (car g$t*$8966$sFNhI)))))))))
                                        g$f$8964$sFNhI)
                                      g$pat*$8958$sFNhI
                                      g$t*$8963$sFNhI)))))
                              (g$generate-temporaries$8507$sFNhI
                                g$expr*$8959$sFNhI)))))
                        ((letrec ((g$f$8967$sFNhI
                                    (case-lambda
                                      ((g$pat*$8968$sFNhI)
                                       (if (null? g$pat*$8968$sFNhI)
                                         '()
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$convert-pattern$8404$sFNhI
                                                (car g$pat*$8968$sFNhI)
                                                '())))
                                           (case-lambda
                                             ((g$pat$8971$sFNhI
                                                g$idn*$8972$sFNhI)
                                              ((case-lambda
                                                 ((g$idn*$8973$sFNhI
                                                    g$pat$8974$sFNhI)
                                                  (append
                                                    g$idn*$8973$sFNhI
                                                    (g$f$8967$sFNhI
                                                      (cdr g$pat*$8968$sFNhI)))))
                                               g$idn*$8972$sFNhI
                                               g$pat$8971$sFNhI)))))))))
                           g$f$8967$sFNhI)
                         g$pat*$8958$sFNhI))))
                    g$ls/false$8957$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$8956$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8956$sFNhI
               '(_ #(each (any any)) any . each-any)))))
         g$e$8955$sFNhI))))
   (g$invalid-fmls-error$8370$sFNhI
     g$invalid-fmls-error$11888$sFNhI
     (case-lambda
       ((g$stx$8975$sFNhI g$fmls$8976$sFNhI)
        ((case-lambda
           ((g$t$8977$sFNhI)
            ((case-lambda
               ((g$ls/false$8978$sFNhI)
                (if g$ls/false$8978$sFNhI
                  (apply
                    (case-lambda
                      ((g$id*$8979$sFNhI g$last$8980$sFNhI)
                       ((letrec ((g$f$8981$sFNhI
                                   (case-lambda
                                     ((g$id*$8982$sFNhI)
                                      (if (null? g$id*$8982$sFNhI)
                                        (values)
                                        (if (not (g$id?$8126$sFNhI
                                                   (car g$id*$8982$sFNhI)))
                                          (g$syntax-violation$8517$sFNhI
                                            '#f
                                            '"not an identifier"
                                            g$stx$8975$sFNhI
                                            (car g$id*$8982$sFNhI))
                                          (begin
                                            (g$f$8981$sFNhI
                                              (cdr g$id*$8982$sFNhI))
                                            (if (g$bound-id-member?$8133$sFNhI
                                                  (car g$id*$8982$sFNhI)
                                                  (cdr g$id*$8982$sFNhI))
                                              (g$syntax-violation$8517$sFNhI
                                                '#f
                                                '"duplicate binding"
                                                g$stx$8975$sFNhI
                                                (car g$id*$8982$sFNhI))
                                              (void)))))))))
                          g$f$8981$sFNhI)
                        (if (g$id?$8126$sFNhI g$last$8980$sFNhI)
                          (cons g$last$8980$sFNhI g$id*$8979$sFNhI)
                          (if (g$syntax-null?$8121$sFNhI g$last$8980$sFNhI)
                            g$id*$8979$sFNhI
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"not an identifier"
                              g$stx$8975$sFNhI
                              g$last$8980$sFNhI))))))
                    g$ls/false$8978$sFNhI)
                  ((case-lambda
                     ((g$t$8983$sFNhI)
                      ((case-lambda
                         ((g$ls/false$8984$sFNhI)
                          (if g$ls/false$8984$sFNhI
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8517$sFNhI
                                   '#f
                                   '"malformed binding form"
                                   g$stx$8975$sFNhI
                                   g$fmls$8976$sFNhI)))
                              g$ls/false$8984$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$8983$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI g$t$8983$sFNhI '_))))
                   g$t$8977$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8977$sFNhI
               '#(each+ any () any)))))
         g$fmls$8976$sFNhI))))
   (g$let-macro$8371$sFNhI
     g$let-macro$11889$sFNhI
     (case-lambda
       ((g$stx$8985$sFNhI)
        ((case-lambda
           ((g$t$8986$sFNhI)
            ((case-lambda
               ((g$ls/false$8987$sFNhI)
                (if g$ls/false$8987$sFNhI
                  (apply
                    (case-lambda
                      ((g$lhs*$8988$sFNhI
                         g$rhs*$8989$sFNhI
                         g$b$8990$sFNhI
                         g$b*$8991$sFNhI)
                       (if (g$valid-bound-ids?$8131$sFNhI g$lhs*$8988$sFNhI)
                         (g$bless$8368$sFNhI
                           (cons
                             (cons
                               'lambda
                               (cons
                                 g$lhs*$8988$sFNhI
                                 (cons g$b$8990$sFNhI g$b*$8991$sFNhI)))
                             g$rhs*$8989$sFNhI))
                         (g$invalid-fmls-error$8370$sFNhI
                           g$stx$8985$sFNhI
                           g$lhs*$8988$sFNhI))))
                    g$ls/false$8987$sFNhI)
                  ((case-lambda
                     ((g$t$8992$sFNhI)
                      ((case-lambda
                         ((g$ls/false$8993$sFNhI)
                          (if (if g$ls/false$8993$sFNhI
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$f$8994$sFNhI
                                         g$lhs*$8995$sFNhI
                                         g$rhs*$8996$sFNhI
                                         g$b$8997$sFNhI
                                         g$b*$8998$sFNhI)
                                       (g$id?$8126$sFNhI g$f$8994$sFNhI)))
                                    g$ls/false$8993$sFNhI))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$f$8999$sFNhI
                                   g$lhs*$9000$sFNhI
                                   g$rhs*$9001$sFNhI
                                   g$b$9002$sFNhI
                                   g$b*$9003$sFNhI)
                                 (if (g$valid-bound-ids?$8131$sFNhI
                                       g$lhs*$9000$sFNhI)
                                   (g$bless$8368$sFNhI
                                     (cons
                                       (list
                                         'letrec
                                         (list
                                           (list
                                             g$f$8999$sFNhI
                                             (cons
                                               'lambda
                                               (cons
                                                 g$lhs*$9000$sFNhI
                                                 (cons
                                                   g$b$9002$sFNhI
                                                   g$b*$9003$sFNhI)))))
                                         g$f$8999$sFNhI)
                                       g$rhs*$9001$sFNhI))
                                   (g$invalid-fmls-error$8370$sFNhI
                                     g$stx$8985$sFNhI
                                     g$lhs*$9000$sFNhI))))
                              g$ls/false$8993$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$8992$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$8992$sFNhI
                         '(_ any #(each (any any)) any . each-any)))))
                   g$t$8986$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$8986$sFNhI
               '(_ #(each (any any)) any . each-any)))))
         g$stx$8985$sFNhI))))
   (g$let-values-macro$8372$sFNhI
     g$let-values-macro$11890$sFNhI
     (case-lambda
       ((g$stx$9004$sFNhI)
        (letrec* ((g$rename$9005$sFNhI
                    (case-lambda
                      ((g$x$9056$sFNhI g$old*$9057$sFNhI g$new*$9058$sFNhI)
                       (begin
                         (if (not (g$id?$8126$sFNhI g$x$9056$sFNhI))
                           (g$syntax-violation$8517$sFNhI
                             '#f
                             '"not an indentifier"
                             g$stx$9004$sFNhI
                             g$x$9056$sFNhI)
                           (void))
                         (if (g$bound-id-member?$8133$sFNhI
                               g$x$9056$sFNhI
                               g$old*$9057$sFNhI)
                           (g$syntax-violation$8517$sFNhI
                             '#f
                             '"duplicate binding"
                             g$stx$9004$sFNhI
                             g$x$9056$sFNhI)
                           (void))
                         ((case-lambda
                            ((g$y$9059$sFNhI)
                             (values
                               g$y$9059$sFNhI
                               (cons g$x$9056$sFNhI g$old*$9057$sFNhI)
                               (cons g$y$9059$sFNhI g$new*$9058$sFNhI))))
                          (gensym
                            (g$syntax->datum$8520$sFNhI g$x$9056$sFNhI)))))))
                  (g$rename*$9006$sFNhI
                    (case-lambda
                      ((g$x*$9047$sFNhI g$old*$9048$sFNhI g$new*$9049$sFNhI)
                       (if (null? g$x*$9047$sFNhI)
                         (values '() g$old*$9048$sFNhI g$new*$9049$sFNhI)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$rename$9005$sFNhI
                                (car g$x*$9047$sFNhI)
                                g$old*$9048$sFNhI
                                g$new*$9049$sFNhI)))
                           (case-lambda
                             ((g$x$9050$sFNhI
                                g$old*$9051$sFNhI
                                g$new*$9052$sFNhI)
                              (call-with-values
                                (case-lambda
                                  (()
                                   (g$rename*$9006$sFNhI
                                     (cdr g$x*$9047$sFNhI)
                                     g$old*$9051$sFNhI
                                     g$new*$9052$sFNhI)))
                                (case-lambda
                                  ((g$x*$9053$sFNhI
                                     g$old*$9054$sFNhI
                                     g$new*$9055$sFNhI)
                                   (values
                                     (cons g$x$9050$sFNhI g$x*$9053$sFNhI)
                                     g$old*$9054$sFNhI
                                     g$new*$9055$sFNhI))))))))))))
          ((case-lambda
             ((g$t$9007$sFNhI)
              ((case-lambda
                 ((g$ls/false$9008$sFNhI)
                  (if g$ls/false$9008$sFNhI
                    (apply
                      (case-lambda
                        ((g$b$9009$sFNhI g$b*$9010$sFNhI)
                         (g$cons*$5159$sFNhI
                           (g$bless$8368$sFNhI 'let)
                           '()
                           g$b$9009$sFNhI
                           g$b*$9010$sFNhI)))
                      g$ls/false$9008$sFNhI)
                    ((case-lambda
                       ((g$t$9011$sFNhI)
                        ((case-lambda
                           ((g$ls/false$9012$sFNhI)
                            (if g$ls/false$9012$sFNhI
                              (apply
                                (case-lambda
                                  ((g$lhs*$9013$sFNhI
                                     g$rhs*$9014$sFNhI
                                     g$b$9015$sFNhI
                                     g$b*$9016$sFNhI)
                                   (g$bless$8368$sFNhI
                                     ((letrec ((g$f$9017$sFNhI
                                                 (case-lambda
                                                   ((g$lhs*$9018$sFNhI
                                                      g$rhs*$9019$sFNhI
                                                      g$old*$9020$sFNhI
                                                      g$new*$9021$sFNhI)
                                                    (if (null?
                                                          g$lhs*$9018$sFNhI)
                                                      (cons
                                                        'let
                                                        (cons
                                                          (g$map$5157$sFNhI
                                                            list
                                                            g$old*$9020$sFNhI
                                                            g$new*$9021$sFNhI)
                                                          (cons
                                                            g$b$9015$sFNhI
                                                            g$b*$9016$sFNhI)))
                                                      ((case-lambda
                                                         ((g$t$9022$sFNhI)
                                                          ((case-lambda
                                                             ((g$ls/false$9023$sFNhI)
                                                              (if g$ls/false$9023$sFNhI
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$9024$sFNhI)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$rename*$9006$sFNhI
                                                                            g$x*$9024$sFNhI
                                                                            g$old*$9020$sFNhI
                                                                            g$new*$9021$sFNhI)))
                                                                       (case-lambda
                                                                         ((g$y*$9028$sFNhI
                                                                            g$old*$9029$sFNhI
                                                                            g$new*$9030$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$new*$9031$sFNhI
                                                                                g$old*$9032$sFNhI
                                                                                g$y*$9033$sFNhI)
                                                                              (list
                                                                                'call-with-values
                                                                                (list
                                                                                  'lambda
                                                                                  '()
                                                                                  (car g$rhs*$9019$sFNhI))
                                                                                (list
                                                                                  'lambda
                                                                                  g$y*$9033$sFNhI
                                                                                  (g$f$9017$sFNhI
                                                                                    (cdr g$lhs*$9018$sFNhI)
                                                                                    (cdr g$rhs*$9019$sFNhI)
                                                                                    g$old*$9032$sFNhI
                                                                                    g$new*$9031$sFNhI)))))
                                                                           g$new*$9030$sFNhI
                                                                           g$old*$9029$sFNhI
                                                                           g$y*$9028$sFNhI))))))
                                                                  g$ls/false$9023$sFNhI)
                                                                ((case-lambda
                                                                   ((g$t$9034$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9035$sFNhI)
                                                                        (if g$ls/false$9035$sFNhI
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$9036$sFNhI
                                                                                 g$x$9037$sFNhI)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$rename$9005$sFNhI
                                                                                      g$x$9037$sFNhI
                                                                                      g$old*$9020$sFNhI
                                                                                      g$new*$9021$sFNhI)))
                                                                                 (case-lambda
                                                                                   ((g$y$9038$sFNhI
                                                                                      g$old*$9039$sFNhI
                                                                                      g$new*$9040$sFNhI)
                                                                                    (call-with-values
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (g$rename*$9006$sFNhI
                                                                                           g$x*$9036$sFNhI
                                                                                           g$old*$9039$sFNhI
                                                                                           g$new*$9040$sFNhI)))
                                                                                      (case-lambda
                                                                                        ((g$y*$9041$sFNhI
                                                                                           g$old*$9042$sFNhI
                                                                                           g$new*$9043$sFNhI)
                                                                                         (list
                                                                                           'call-with-values
                                                                                           (list
                                                                                             'lambda
                                                                                             '()
                                                                                             (car g$rhs*$9019$sFNhI))
                                                                                           (list
                                                                                             'lambda
                                                                                             (append
                                                                                               g$y*$9041$sFNhI
                                                                                               g$y$9038$sFNhI)
                                                                                             (g$f$9017$sFNhI
                                                                                               (cdr g$lhs*$9018$sFNhI)
                                                                                               (cdr g$rhs*$9019$sFNhI)
                                                                                               g$old*$9042$sFNhI
                                                                                               g$new*$9043$sFNhI)))))))))))
                                                                            g$ls/false$9035$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$t$9044$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9045$sFNhI)
                                                                                  (if g$ls/false$9045$sFNhI
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$9046$sFNhI)
                                                                                         (g$syntax-violation$8517$sFNhI
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$9004$sFNhI
                                                                                           g$others$9046$sFNhI)))
                                                                                      g$ls/false$9045$sFNhI)
                                                                                    (g$syntax-violation$8517$sFNhI
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9044$sFNhI))))
                                                                               (g$syntax-dispatch$8405$sFNhI
                                                                                 g$t$9044$sFNhI
                                                                                 'any))))
                                                                           g$t$9034$sFNhI))))
                                                                     (g$syntax-dispatch$8405$sFNhI
                                                                       g$t$9034$sFNhI
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$9022$sFNhI))))
                                                           (g$syntax-dispatch$8405$sFNhI
                                                             g$t$9022$sFNhI
                                                             'each-any))))
                                                       (car g$lhs*$9018$sFNhI)))))))
                                        g$f$9017$sFNhI)
                                      g$lhs*$9013$sFNhI
                                      g$rhs*$9014$sFNhI
                                      '()
                                      '()))))
                                g$ls/false$9012$sFNhI)
                              (g$syntax-violation$8517$sFNhI
                                '#f
                                '"invalid syntax"
                                g$t$9011$sFNhI))))
                         (g$syntax-dispatch$8405$sFNhI
                           g$t$9011$sFNhI
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$9007$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$9007$sFNhI
                 '(_ () any . each-any)))))
           g$stx$9004$sFNhI)))))
   (g$let*-values-macro$8373$sFNhI
     g$let*-values-macro$11891$sFNhI
     (case-lambda
       ((g$stx$9060$sFNhI)
        (letrec* ((g$check$9061$sFNhI
                    (case-lambda
                      ((g$x*$9085$sFNhI)
                       (if (not (null? g$x*$9085$sFNhI))
                         ((case-lambda
                            ((g$x$9086$sFNhI)
                             (begin
                               (if (not (g$id?$8126$sFNhI g$x$9086$sFNhI))
                                 (g$syntax-violation$8517$sFNhI
                                   '#f
                                   '"not an identifier"
                                   g$stx$9060$sFNhI
                                   g$x$9086$sFNhI)
                                 (void))
                               (g$check$9061$sFNhI (cdr g$x*$9085$sFNhI))
                               (if (g$bound-id-member?$8133$sFNhI
                                     g$x$9086$sFNhI
                                     (cdr g$x*$9085$sFNhI))
                                 (g$syntax-violation$8517$sFNhI
                                   '#f
                                   '"duplicate identifier"
                                   g$stx$9060$sFNhI
                                   g$x$9086$sFNhI)
                                 (void)))))
                          (car g$x*$9085$sFNhI))
                         (void))))))
          ((case-lambda
             ((g$t$9062$sFNhI)
              ((case-lambda
                 ((g$ls/false$9063$sFNhI)
                  (if g$ls/false$9063$sFNhI
                    (apply
                      (case-lambda
                        ((g$b$9064$sFNhI g$b*$9065$sFNhI)
                         (g$cons*$5159$sFNhI
                           (g$bless$8368$sFNhI 'let)
                           '()
                           g$b$9064$sFNhI
                           g$b*$9065$sFNhI)))
                      g$ls/false$9063$sFNhI)
                    ((case-lambda
                       ((g$t$9066$sFNhI)
                        ((case-lambda
                           ((g$ls/false$9067$sFNhI)
                            (if g$ls/false$9067$sFNhI
                              (apply
                                (case-lambda
                                  ((g$lhs*$9068$sFNhI
                                     g$rhs*$9069$sFNhI
                                     g$b$9070$sFNhI
                                     g$b*$9071$sFNhI)
                                   (g$bless$8368$sFNhI
                                     ((letrec ((g$f$9072$sFNhI
                                                 (case-lambda
                                                   ((g$lhs*$9073$sFNhI
                                                      g$rhs*$9074$sFNhI)
                                                    (if (null?
                                                          g$lhs*$9073$sFNhI)
                                                      (cons
                                                        'begin
                                                        (cons
                                                          g$b$9070$sFNhI
                                                          g$b*$9071$sFNhI))
                                                      ((case-lambda
                                                         ((g$t$9075$sFNhI)
                                                          ((case-lambda
                                                             ((g$ls/false$9076$sFNhI)
                                                              (if g$ls/false$9076$sFNhI
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x*$9077$sFNhI)
                                                                     (begin
                                                                       (g$check$9061$sFNhI
                                                                         g$x*$9077$sFNhI)
                                                                       (list
                                                                         'call-with-values
                                                                         (list
                                                                           'lambda
                                                                           '()
                                                                           (car g$rhs*$9074$sFNhI))
                                                                         (list
                                                                           'lambda
                                                                           g$x*$9077$sFNhI
                                                                           (g$f$9072$sFNhI
                                                                             (cdr g$lhs*$9073$sFNhI)
                                                                             (cdr g$rhs*$9074$sFNhI)))))))
                                                                  g$ls/false$9076$sFNhI)
                                                                ((case-lambda
                                                                   ((g$t$9078$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9079$sFNhI)
                                                                        (if g$ls/false$9079$sFNhI
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x*$9080$sFNhI
                                                                                 g$x$9081$sFNhI)
                                                                               (begin
                                                                                 (g$check$9061$sFNhI
                                                                                   (cons
                                                                                     g$x$9081$sFNhI
                                                                                     g$x*$9080$sFNhI))
                                                                                 (list
                                                                                   'call-with-values
                                                                                   (list
                                                                                     'lambda
                                                                                     '()
                                                                                     (car g$rhs*$9074$sFNhI))
                                                                                   (list
                                                                                     'lambda
                                                                                     (append
                                                                                       g$x*$9080$sFNhI
                                                                                       g$x$9081$sFNhI)
                                                                                     (g$f$9072$sFNhI
                                                                                       (cdr g$lhs*$9073$sFNhI)
                                                                                       (cdr g$rhs*$9074$sFNhI)))))))
                                                                            g$ls/false$9079$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$t$9082$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9083$sFNhI)
                                                                                  (if g$ls/false$9083$sFNhI
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$others$9084$sFNhI)
                                                                                         (g$syntax-violation$8517$sFNhI
                                                                                           '#f
                                                                                           '"malformed bindings"
                                                                                           g$stx$9060$sFNhI
                                                                                           g$others$9084$sFNhI)))
                                                                                      g$ls/false$9083$sFNhI)
                                                                                    (g$syntax-violation$8517$sFNhI
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9082$sFNhI))))
                                                                               (g$syntax-dispatch$8405$sFNhI
                                                                                 g$t$9082$sFNhI
                                                                                 'any))))
                                                                           g$t$9078$sFNhI))))
                                                                     (g$syntax-dispatch$8405$sFNhI
                                                                       g$t$9078$sFNhI
                                                                       '#(each+
                                                                          any
                                                                          ()
                                                                          any)))))
                                                                 g$t$9075$sFNhI))))
                                                           (g$syntax-dispatch$8405$sFNhI
                                                             g$t$9075$sFNhI
                                                             'each-any))))
                                                       (car g$lhs*$9073$sFNhI)))))))
                                        g$f$9072$sFNhI)
                                      g$lhs*$9068$sFNhI
                                      g$rhs*$9069$sFNhI))))
                                g$ls/false$9067$sFNhI)
                              (g$syntax-violation$8517$sFNhI
                                '#f
                                '"invalid syntax"
                                g$t$9066$sFNhI))))
                         (g$syntax-dispatch$8405$sFNhI
                           g$t$9066$sFNhI
                           '(_ #(each (any any)) any . each-any)))))
                     g$t$9062$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$9062$sFNhI
                 '(_ () any . each-any)))))
           g$stx$9060$sFNhI)))))
   (g$trace-lambda-macro$8374$sFNhI
     g$trace-lambda-macro$11892$sFNhI
     (case-lambda
       ((g$stx$9087$sFNhI)
        ((case-lambda
           ((g$t$9088$sFNhI)
            ((case-lambda
               ((g$ls/false$9089$sFNhI)
                (if g$ls/false$9089$sFNhI
                  (apply
                    (case-lambda
                      ((g$who$9090$sFNhI
                         g$fmls$9091$sFNhI
                         g$b$9092$sFNhI
                         g$b*$9093$sFNhI)
                       (if (g$valid-bound-ids?$8131$sFNhI g$fmls$9091$sFNhI)
                         (g$bless$8368$sFNhI
                           (list
                             'make-traced-procedure
                             (list 'quote g$who$9090$sFNhI)
                             (cons
                               'lambda
                               (cons
                                 g$fmls$9091$sFNhI
                                 (cons g$b$9092$sFNhI g$b*$9093$sFNhI)))))
                         (g$invalid-fmls-error$8370$sFNhI
                           g$stx$9087$sFNhI
                           g$fmls$9091$sFNhI))))
                    g$ls/false$9089$sFNhI)
                  ((case-lambda
                     ((g$t$9094$sFNhI)
                      ((case-lambda
                         ((g$ls/false$9095$sFNhI)
                          (if g$ls/false$9095$sFNhI
                            (apply
                              (case-lambda
                                ((g$who$9096$sFNhI
                                   g$fmls$9097$sFNhI
                                   g$last$9098$sFNhI
                                   g$b$9099$sFNhI
                                   g$b*$9100$sFNhI)
                                 (if (g$valid-bound-ids?$8131$sFNhI
                                       (cons
                                         g$last$9098$sFNhI
                                         g$fmls$9097$sFNhI))
                                   (g$bless$8368$sFNhI
                                     (list
                                       'make-traced-procedure
                                       (list 'quote g$who$9096$sFNhI)
                                       (cons
                                         'lambda
                                         (cons
                                           (append
                                             g$fmls$9097$sFNhI
                                             g$last$9098$sFNhI)
                                           (cons
                                             g$b$9099$sFNhI
                                             g$b*$9100$sFNhI)))))
                                   (g$invalid-fmls-error$8370$sFNhI
                                     g$stx$9087$sFNhI
                                     (append
                                       g$fmls$9097$sFNhI
                                       g$last$9098$sFNhI)))))
                              g$ls/false$9095$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$9094$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$9094$sFNhI
                         '(_ any #(each+ any () any) any . each-any)))))
                   g$t$9088$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$9088$sFNhI
               '(_ any each-any any . each-any)))))
         g$stx$9087$sFNhI))))
   (g$trace-define-macro$8375$sFNhI
     g$trace-define-macro$11893$sFNhI
     (case-lambda
       ((g$stx$9101$sFNhI)
        ((case-lambda
           ((g$t$9102$sFNhI)
            ((case-lambda
               ((g$ls/false$9103$sFNhI)
                (if g$ls/false$9103$sFNhI
                  (apply
                    (case-lambda
                      ((g$who$9104$sFNhI
                         g$fmls$9105$sFNhI
                         g$b$9106$sFNhI
                         g$b*$9107$sFNhI)
                       (if (g$valid-bound-ids?$8131$sFNhI g$fmls$9105$sFNhI)
                         (g$bless$8368$sFNhI
                           (list
                             'define
                             g$who$9104$sFNhI
                             (list
                               'make-traced-procedure
                               (list 'quote g$who$9104$sFNhI)
                               (cons
                                 'lambda
                                 (cons
                                   g$fmls$9105$sFNhI
                                   (cons g$b$9106$sFNhI g$b*$9107$sFNhI))))))
                         (g$invalid-fmls-error$8370$sFNhI
                           g$stx$9101$sFNhI
                           g$fmls$9105$sFNhI))))
                    g$ls/false$9103$sFNhI)
                  ((case-lambda
                     ((g$t$9108$sFNhI)
                      ((case-lambda
                         ((g$ls/false$9109$sFNhI)
                          (if g$ls/false$9109$sFNhI
                            (apply
                              (case-lambda
                                ((g$who$9110$sFNhI
                                   g$fmls$9111$sFNhI
                                   g$last$9112$sFNhI
                                   g$b$9113$sFNhI
                                   g$b*$9114$sFNhI)
                                 (if (g$valid-bound-ids?$8131$sFNhI
                                       (cons
                                         g$last$9112$sFNhI
                                         g$fmls$9111$sFNhI))
                                   (g$bless$8368$sFNhI
                                     (list
                                       'define
                                       g$who$9110$sFNhI
                                       (list
                                         'make-traced-procedure
                                         (list 'quote g$who$9110$sFNhI)
                                         (cons
                                           'lambda
                                           (cons
                                             (append
                                               g$fmls$9111$sFNhI
                                               g$last$9112$sFNhI)
                                             (cons
                                               g$b$9113$sFNhI
                                               g$b*$9114$sFNhI))))))
                                   (g$invalid-fmls-error$8370$sFNhI
                                     g$stx$9101$sFNhI
                                     (append
                                       g$fmls$9111$sFNhI
                                       g$last$9112$sFNhI)))))
                              g$ls/false$9109$sFNhI)
                            ((case-lambda
                               ((g$t$9115$sFNhI)
                                ((case-lambda
                                   ((g$ls/false$9116$sFNhI)
                                    (if g$ls/false$9116$sFNhI
                                      (apply
                                        (case-lambda
                                          ((g$who$9117$sFNhI g$expr$9118$sFNhI)
                                           (if (g$id?$8126$sFNhI
                                                 g$who$9117$sFNhI)
                                             (g$bless$8368$sFNhI
                                               (list
                                                 'define
                                                 g$who$9117$sFNhI
                                                 (list
                                                   'let
                                                   (list
                                                     (list
                                                       'v
                                                       g$expr$9118$sFNhI))
                                                   (cons
                                                     'if
                                                     (cons
                                                       '(procedure? v)
                                                       (cons
                                                         (cons
                                                           'make-traced-procedure
                                                           (cons
                                                             (list
                                                               'quote
                                                               g$who$9117$sFNhI)
                                                             '(v)))
                                                         '((assertion-violation
                                                             'trace-define
                                                             "not a procedure"
                                                             v))))))))
                                             (g$syntax-violation$8517$sFNhI
                                               '#f
                                               '"invalid name"
                                               g$stx$9101$sFNhI))))
                                        g$ls/false$9116$sFNhI)
                                      (g$syntax-violation$8517$sFNhI
                                        '#f
                                        '"invalid syntax"
                                        g$t$9115$sFNhI))))
                                 (g$syntax-dispatch$8405$sFNhI
                                   g$t$9115$sFNhI
                                   '(_ any any)))))
                             g$t$9108$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$9108$sFNhI
                         '(_ (any . #(each+ any () any)) any . each-any)))))
                   g$t$9102$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$9102$sFNhI
               '(_ (any . each-any) any . each-any)))))
         g$stx$9101$sFNhI))))
   (g$trace-define-syntax-macro$8376$sFNhI
     g$trace-define-syntax-macro$11894$sFNhI
     (case-lambda
       ((g$stx$9119$sFNhI)
        ((case-lambda
           ((g$t$9120$sFNhI)
            ((case-lambda
               ((g$ls/false$9121$sFNhI)
                (if g$ls/false$9121$sFNhI
                  (apply
                    (case-lambda
                      ((g$who$9122$sFNhI g$expr$9123$sFNhI)
                       (if (g$id?$8126$sFNhI g$who$9122$sFNhI)
                         (g$bless$8368$sFNhI
                           (list
                             'define-syntax
                             g$who$9122$sFNhI
                             (list
                               'make-traced-macro
                               (list 'quote g$who$9122$sFNhI)
                               g$expr$9123$sFNhI)))
                         (g$syntax-violation$8517$sFNhI
                           '#f
                           '"invalid name"
                           g$stx$9119$sFNhI))))
                    g$ls/false$9121$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9120$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9120$sFNhI '(_ any any)))))
         g$stx$9119$sFNhI))))
   (g$trace-let/rec-syntax$8377$sFNhI
     g$trace-let/rec-syntax$11895$sFNhI
     (case-lambda
       ((g$who$9124$sFNhI)
        (case-lambda
          ((g$stx$9125$sFNhI)
           ((case-lambda
              ((g$t$9126$sFNhI)
               ((case-lambda
                  ((g$ls/false$9127$sFNhI)
                   (if g$ls/false$9127$sFNhI
                     (apply
                       (case-lambda
                         ((g$lhs*$9128$sFNhI
                            g$rhs*$9129$sFNhI
                            g$b$9130$sFNhI
                            g$b*$9131$sFNhI)
                          (if (g$valid-bound-ids?$8131$sFNhI g$lhs*$9128$sFNhI)
                            ((case-lambda
                               ((g$rhs*$9132$sFNhI)
                                (g$bless$8368$sFNhI
                                  (cons
                                    g$who$9124$sFNhI
                                    (cons
                                      (g$map$5157$sFNhI
                                        list
                                        g$lhs*$9128$sFNhI
                                        g$rhs*$9132$sFNhI)
                                      (cons g$b$9130$sFNhI g$b*$9131$sFNhI))))))
                             (g$map$5157$sFNhI
                               (case-lambda
                                 ((g$lhs$9133$sFNhI g$rhs$9134$sFNhI)
                                  (list
                                    'make-traced-macro
                                    (list 'quote g$lhs$9133$sFNhI)
                                    g$rhs$9134$sFNhI)))
                               g$lhs*$9128$sFNhI
                               g$rhs*$9129$sFNhI))
                            (g$invalid-fmls-error$8370$sFNhI
                              g$stx$9125$sFNhI
                              g$lhs*$9128$sFNhI))))
                       g$ls/false$9127$sFNhI)
                     (g$syntax-violation$8517$sFNhI
                       '#f
                       '"invalid syntax"
                       g$t$9126$sFNhI))))
                (g$syntax-dispatch$8405$sFNhI
                  g$t$9126$sFNhI
                  '(_ #(each (any any)) any . each-any)))))
            g$stx$9125$sFNhI))))))
   (g$trace-let-syntax-macro$8378$sFNhI
     g$trace-let-syntax-macro$11896$sFNhI
     (g$trace-let/rec-syntax$8377$sFNhI 'let-syntax))
   (g$trace-letrec-syntax-macro$8379$sFNhI
     g$trace-letrec-syntax-macro$11897$sFNhI
     (g$trace-let/rec-syntax$8377$sFNhI 'letrec-syntax))
   (g$guard-macro$8380$sFNhI
     g$guard-macro$11898$sFNhI
     (case-lambda
       ((g$x$9135$sFNhI)
        (letrec* ((g$gen-clauses$9136$sFNhI
                    (case-lambda
                      ((g$con$9148$sFNhI
                         g$outerk$9149$sFNhI
                         g$clause*$9150$sFNhI)
                       (letrec* ((g$f$9151$sFNhI
                                   (case-lambda
                                     ((g$x$9179$sFNhI g$k$9180$sFNhI)
                                      ((case-lambda
                                         ((g$t$9181$sFNhI)
                                          ((case-lambda
                                             ((g$ls/false$9182$sFNhI)
                                              (if g$ls/false$9182$sFNhI
                                                (apply
                                                  (case-lambda
                                                    ((g$e$9183$sFNhI
                                                       g$p$9184$sFNhI)
                                                     ((case-lambda
                                                        ((g$t$9185$sFNhI)
                                                         (list
                                                           'let
                                                           (list
                                                             (list
                                                               g$t$9185$sFNhI
                                                               g$e$9183$sFNhI))
                                                           (list
                                                             'if
                                                             g$t$9185$sFNhI
                                                             (list
                                                               g$p$9184$sFNhI
                                                               g$t$9185$sFNhI)
                                                             g$k$9180$sFNhI))))
                                                      (gensym))))
                                                  g$ls/false$9182$sFNhI)
                                                ((case-lambda
                                                   ((g$t$9186$sFNhI)
                                                    ((case-lambda
                                                       ((g$ls/false$9187$sFNhI)
                                                        (if g$ls/false$9187$sFNhI
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9188$sFNhI)
                                                               ((case-lambda
                                                                  ((g$t$9189$sFNhI)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         g$t$9189$sFNhI
                                                                         g$e$9188$sFNhI))
                                                                     (list
                                                                       'if
                                                                       g$t$9189$sFNhI
                                                                       g$t$9189$sFNhI
                                                                       g$k$9180$sFNhI))))
                                                                (gensym))))
                                                            g$ls/false$9187$sFNhI)
                                                          ((case-lambda
                                                             ((g$t$9190$sFNhI)
                                                              ((case-lambda
                                                                 ((g$ls/false$9191$sFNhI)
                                                                  (if g$ls/false$9191$sFNhI
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$e$9192$sFNhI
                                                                           g$v$9193$sFNhI
                                                                           g$v*$9194$sFNhI)
                                                                         (list
                                                                           'if
                                                                           g$e$9192$sFNhI
                                                                           (cons
                                                                             'begin
                                                                             (cons
                                                                               g$v$9193$sFNhI
                                                                               g$v*$9194$sFNhI))
                                                                           g$k$9180$sFNhI)))
                                                                      g$ls/false$9191$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$t$9195$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9196$sFNhI)
                                                                            (if g$ls/false$9196$sFNhI
                                                                              (apply
                                                                                (case-lambda
                                                                                  (()
                                                                                   (g$syntax-violation$8517$sFNhI
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$x$9179$sFNhI)))
                                                                                g$ls/false$9196$sFNhI)
                                                                              (g$syntax-violation$8517$sFNhI
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9195$sFNhI))))
                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                           g$t$9195$sFNhI
                                                                           '_))))
                                                                     g$t$9190$sFNhI))))
                                                               (g$syntax-dispatch$8405$sFNhI
                                                                 g$t$9190$sFNhI
                                                                 '(any any
                                                                       .
                                                                       each-any)))))
                                                           g$t$9186$sFNhI))))
                                                     (g$syntax-dispatch$8405$sFNhI
                                                       g$t$9186$sFNhI
                                                       '(any)))))
                                                 g$t$9181$sFNhI))))
                                           (g$syntax-dispatch$8405$sFNhI
                                             g$t$9181$sFNhI
                                             '(any #(scheme-id =>) any)))))
                                       g$x$9179$sFNhI))))
                                 (g$f*$9152$sFNhI
                                   (case-lambda
                                     ((g$x*$9159$sFNhI)
                                      ((case-lambda
                                         ((g$t$9160$sFNhI)
                                          ((case-lambda
                                             ((g$ls/false$9161$sFNhI)
                                              (if g$ls/false$9161$sFNhI
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (values
                                                       (list
                                                         'raise
                                                         g$con$9148$sFNhI)
                                                       '#t)))
                                                  g$ls/false$9161$sFNhI)
                                                ((case-lambda
                                                   ((g$t$9162$sFNhI)
                                                    ((case-lambda
                                                       ((g$ls/false$9163$sFNhI)
                                                        (if g$ls/false$9163$sFNhI
                                                          (apply
                                                            (case-lambda
                                                              ((g$e$9164$sFNhI
                                                                 g$e*$9165$sFNhI)
                                                               (values
                                                                 (cons
                                                                   'begin
                                                                   (cons
                                                                     g$e$9164$sFNhI
                                                                     g$e*$9165$sFNhI))
                                                                 '#f)))
                                                            g$ls/false$9163$sFNhI)
                                                          ((case-lambda
                                                             ((g$t$9166$sFNhI)
                                                              ((case-lambda
                                                                 ((g$ls/false$9167$sFNhI)
                                                                  (if g$ls/false$9167$sFNhI
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$cls$9168$sFNhI
                                                                           g$cls*$9169$sFNhI)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$f*$9152$sFNhI
                                                                                g$cls*$9169$sFNhI)))
                                                                           (case-lambda
                                                                             ((g$e$9172$sFNhI
                                                                                g$g$9173$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$g$9174$sFNhI
                                                                                    g$e$9175$sFNhI)
                                                                                  (values
                                                                                    (g$f$9151$sFNhI
                                                                                      g$cls$9168$sFNhI
                                                                                      g$e$9175$sFNhI)
                                                                                    g$g$9174$sFNhI)))
                                                                               g$g$9173$sFNhI
                                                                               g$e$9172$sFNhI))))))
                                                                      g$ls/false$9167$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$t$9176$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9177$sFNhI)
                                                                            (if g$ls/false$9177$sFNhI
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$others$9178$sFNhI)
                                                                                   (g$syntax-violation$8517$sFNhI
                                                                                     '#f
                                                                                     '"invalid guard clause"
                                                                                     g$others$9178$sFNhI)))
                                                                                g$ls/false$9177$sFNhI)
                                                                              (g$syntax-violation$8517$sFNhI
                                                                                '#f
                                                                                '"invalid syntax"
                                                                                g$t$9176$sFNhI))))
                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                           g$t$9176$sFNhI
                                                                           'any))))
                                                                     g$t$9166$sFNhI))))
                                                               (g$syntax-dispatch$8405$sFNhI
                                                                 g$t$9166$sFNhI
                                                                 '(any .
                                                                       any)))))
                                                           g$t$9162$sFNhI))))
                                                     (g$syntax-dispatch$8405$sFNhI
                                                       g$t$9162$sFNhI
                                                       '((#(scheme-id else)
                                                          any
                                                          .
                                                          each-any))))))
                                                 g$t$9160$sFNhI))))
                                           (g$syntax-dispatch$8405$sFNhI
                                             g$t$9160$sFNhI
                                             '()))))
                                       g$x*$9159$sFNhI)))))
                         (call-with-values
                           (case-lambda
                             (() (g$f*$9152$sFNhI g$clause*$9150$sFNhI)))
                           (case-lambda
                             ((g$code$9155$sFNhI g$raisek$9156$sFNhI)
                              ((case-lambda
                                 ((g$raisek$9157$sFNhI g$code$9158$sFNhI)
                                  (if g$raisek$9157$sFNhI
                                    (list g$outerk$9149$sFNhI g$code$9158$sFNhI)
                                    g$code$9158$sFNhI)))
                               g$raisek$9156$sFNhI
                               g$code$9155$sFNhI)))))))))
          ((case-lambda
             ((g$t$9137$sFNhI)
              ((case-lambda
                 ((g$ls/false$9138$sFNhI)
                  (if (if g$ls/false$9138$sFNhI
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$con$9139$sFNhI
                                 g$clause*$9140$sFNhI
                                 g$b$9141$sFNhI
                                 g$b*$9142$sFNhI)
                               (g$id?$8126$sFNhI g$con$9139$sFNhI)))
                            g$ls/false$9138$sFNhI))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$con$9143$sFNhI
                           g$clause*$9144$sFNhI
                           g$b$9145$sFNhI
                           g$b*$9146$sFNhI)
                         ((case-lambda
                            ((g$outerk$9147$sFNhI)
                             (g$bless$8368$sFNhI
                               (list
                                 (list
                                   'call/cc
                                   (list
                                     'lambda
                                     (list g$outerk$9147$sFNhI)
                                     (list
                                       'lambda
                                       '()
                                       (list
                                         'with-exception-handler
                                         (list
                                           'lambda
                                           (list g$con$9143$sFNhI)
                                           (g$gen-clauses$9136$sFNhI
                                             g$con$9143$sFNhI
                                             g$outerk$9147$sFNhI
                                             g$clause*$9144$sFNhI))
                                         (cons
                                           'lambda
                                           (cons
                                             '()
                                             (cons
                                               '#f
                                               (cons
                                                 g$b$9145$sFNhI
                                                 g$b*$9146$sFNhI))))))))))))
                          (gensym))))
                      g$ls/false$9138$sFNhI)
                    (g$syntax-violation$8517$sFNhI
                      '#f
                      '"invalid syntax"
                      g$t$9137$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$9137$sFNhI
                 '(_ (any . each-any) any . each-any)))))
           g$x$9135$sFNhI)))))
   (g$define-enumeration-macro$8381$sFNhI
     g$define-enumeration-macro$11899$sFNhI
     (case-lambda
       ((g$stx$9197$sFNhI)
        (letrec* ((g$set?$9198$sFNhI
                    (case-lambda
                      ((g$x$9211$sFNhI)
                       ((case-lambda
                          ((g$t$9212$sFNhI)
                           (if g$t$9212$sFNhI
                             g$t$9212$sFNhI
                             (begin
                               '#f
                               (if (not (g$memq$5149$sFNhI
                                          (car g$x$9211$sFNhI)
                                          (cdr g$x$9211$sFNhI)))
                                 (begin
                                   '#f
                                   (g$set?$9198$sFNhI (cdr g$x$9211$sFNhI)))
                                 '#f)))))
                        (null? g$x$9211$sFNhI)))))
                  (g$remove-dups$9199$sFNhI
                    (case-lambda
                      ((g$ls$9210$sFNhI)
                       (if (null? g$ls$9210$sFNhI)
                         '()
                         (cons
                           (car g$ls$9210$sFNhI)
                           (g$remove-dups$9199$sFNhI
                             (g$remq$5164$sFNhI
                               (car g$ls$9210$sFNhI)
                               (cdr g$ls$9210$sFNhI)))))))))
          ((case-lambda
             ((g$t$9200$sFNhI)
              ((case-lambda
                 ((g$ls/false$9201$sFNhI)
                  (if (if g$ls/false$9201$sFNhI
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$name$9202$sFNhI
                                 g$id*$9203$sFNhI
                                 g$maker$9204$sFNhI)
                               (if (g$id?$8126$sFNhI g$name$9202$sFNhI)
                                 (if (g$id?$8126$sFNhI g$maker$9204$sFNhI)
                                   (begin
                                     '#f
                                     (g$for-all$5155$sFNhI
                                       g$id?$8126$sFNhI
                                       g$id*$9203$sFNhI))
                                   '#f)
                                 '#f)))
                            g$ls/false$9201$sFNhI))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$name$9205$sFNhI g$id*$9206$sFNhI g$maker$9207$sFNhI)
                         ((case-lambda
                            ((g$name*$9208$sFNhI g$mk$9209$sFNhI)
                             (g$bless$8368$sFNhI
                               (list
                                 'begin
                                 (list
                                   'define
                                   g$mk$9209$sFNhI
                                   (list
                                     'enum-set-constructor
                                     (list
                                       'make-enumeration
                                       (list 'quote g$name*$9208$sFNhI))))
                                 (list
                                   'define-syntax
                                   g$name$9205$sFNhI
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n)
                                         '(identifier? #'n)
                                         (list
                                           'if
                                           (list
                                             'memq
                                             '(syntax->datum #'n)
                                             (list 'quote g$name*$9208$sFNhI))
                                           '#''n
                                           (cons
                                             'syntax-violation
                                             (cons
                                               (list 'quote g$name$9205$sFNhI)
                                               '("not a member of set"
                                                 x
                                                 #'n))))))))
                                 (list
                                   'define-syntax
                                   g$maker$9207$sFNhI
                                   (list
                                     'lambda
                                     '(x)
                                     (list
                                       'syntax-case
                                       'x
                                       '()
                                       (list
                                         '(_ n* ...)
                                         (list
                                           'begin
                                           (cons
                                             'for-each
                                             (cons
                                               (list
                                                 'lambda
                                                 '(n)
                                                 (list
                                                   'unless
                                                   '(identifier? n)
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9207$sFNhI)
                                                       '("non-identifier argument"
                                                         x
                                                         n))))
                                                 (list
                                                   'unless
                                                   (list
                                                     'memq
                                                     '(syntax->datum n)
                                                     (list
                                                       'quote
                                                       g$name*$9208$sFNhI))
                                                   (cons
                                                     'syntax-violation
                                                     (cons
                                                       (list
                                                         'quote
                                                         g$maker$9207$sFNhI)
                                                       '("not a member of set"
                                                         x
                                                         n)))))
                                               '(#'(n* ...))))
                                           (list
                                             'syntax
                                             (cons
                                               g$mk$9209$sFNhI
                                               '('(n* ...)))))))))))))
                          (g$remove-dups$9199$sFNhI
                            (g$syntax->datum$8520$sFNhI g$id*$9206$sFNhI))
                          (gensym))))
                      g$ls/false$9201$sFNhI)
                    (g$syntax-violation$8517$sFNhI
                      '#f
                      '"invalid syntax"
                      g$t$9200$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$9200$sFNhI
                 '(_ any each-any any)))))
           g$stx$9197$sFNhI)))))
   (g$time-macro$8382$sFNhI
     g$time-macro$11900$sFNhI
     (case-lambda
       ((g$stx$9213$sFNhI)
        ((case-lambda
           ((g$t$9214$sFNhI)
            ((case-lambda
               ((g$ls/false$9215$sFNhI)
                (if g$ls/false$9215$sFNhI
                  (apply
                    (case-lambda
                      ((g$expr$9216$sFNhI)
                       ((case-lambda
                          ((g$str$9217$sFNhI)
                           (g$bless$8368$sFNhI
                             (list
                               'time-it
                               g$str$9217$sFNhI
                               (list 'lambda '() g$expr$9216$sFNhI)))))
                        (call-with-values
                          (case-lambda
                            (() (g$open-string-output-port$6776$sFNhI)))
                          (case-lambda
                            ((g$p$9220$sFNhI g$e$9221$sFNhI)
                             ((case-lambda
                                ((g$e$9222$sFNhI g$p$9223$sFNhI)
                                 (begin
                                   (write
                                     (g$syntax->datum$8520$sFNhI
                                       g$expr$9216$sFNhI)
                                     g$p$9223$sFNhI)
                                   (g$e$9222$sFNhI))))
                              g$e$9221$sFNhI
                              g$p$9220$sFNhI)))))))
                    g$ls/false$9215$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9214$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9214$sFNhI '(_ any)))))
         g$stx$9213$sFNhI))))
   (g$delay-macro$8383$sFNhI
     g$delay-macro$11901$sFNhI
     (case-lambda
       ((g$stx$9224$sFNhI)
        ((case-lambda
           ((g$t$9225$sFNhI)
            ((case-lambda
               ((g$ls/false$9226$sFNhI)
                (if g$ls/false$9226$sFNhI
                  (apply
                    (case-lambda
                      ((g$expr$9227$sFNhI)
                       (g$bless$8368$sFNhI
                         (list
                           'make-promise
                           (list 'lambda '() g$expr$9227$sFNhI)))))
                    g$ls/false$9226$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9225$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9225$sFNhI '(_ any)))))
         g$stx$9224$sFNhI))))
   (g$assert-macro$8384$sFNhI
     g$assert-macro$11902$sFNhI
     (case-lambda
       ((g$stx$9228$sFNhI)
        ((case-lambda
           ((g$t$9229$sFNhI)
            ((case-lambda
               ((g$ls/false$9230$sFNhI)
                (if g$ls/false$9230$sFNhI
                  (apply
                    (case-lambda
                      ((g$expr$9231$sFNhI)
                       ((case-lambda
                          ((g$pos$9232$sFNhI)
                           (g$bless$8368$sFNhI
                             (list
                               'unless
                               g$expr$9231$sFNhI
                               (list
                                 'assertion-error
                                 (list 'quote g$expr$9231$sFNhI)
                                 (list 'quote g$pos$9232$sFNhI))))))
                        ((case-lambda
                           ((g$t$9233$sFNhI)
                            (if g$t$9233$sFNhI
                              g$t$9233$sFNhI
                              (begin
                                '#f
                                (g$expression-position$8512$sFNhI
                                  g$expr$9231$sFNhI)))))
                         (g$expression-position$8512$sFNhI g$stx$9228$sFNhI)))))
                    g$ls/false$9230$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9229$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9229$sFNhI '(_ any)))))
         g$stx$9228$sFNhI))))
   (g$endianness-macro$8385$sFNhI
     g$endianness-macro$11903$sFNhI
     (case-lambda
       ((g$stx$9234$sFNhI)
        ((case-lambda
           ((g$t$9235$sFNhI)
            ((case-lambda
               ((g$ls/false$9236$sFNhI)
                (if g$ls/false$9236$sFNhI
                  (apply
                    (case-lambda
                      ((g$e$9237$sFNhI)
                       ((case-lambda
                          ((g$t$9238$sFNhI)
                           (if (g$memv$5150$sFNhI g$t$9238$sFNhI '(little))
                             (g$bless$8368$sFNhI ''little)
                             (if (g$memv$5150$sFNhI g$t$9238$sFNhI '(big))
                               (g$bless$8368$sFNhI ''big)
                               (g$syntax-violation$8517$sFNhI
                                 '#f
                                 '"endianness must be big or little"
                                 g$stx$9234$sFNhI)))))
                        (g$syntax->datum$8520$sFNhI g$e$9237$sFNhI))))
                    g$ls/false$9236$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9235$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9235$sFNhI '(_ any)))))
         g$stx$9234$sFNhI))))
   (g$identifier-syntax-macro$8386$sFNhI
     g$identifier-syntax-macro$11904$sFNhI
     (case-lambda
       ((g$stx$9239$sFNhI)
        ((case-lambda
           ((g$t$9240$sFNhI)
            ((case-lambda
               ((g$ls/false$9241$sFNhI)
                (if g$ls/false$9241$sFNhI
                  (apply
                    (case-lambda
                      ((g$expr$9242$sFNhI)
                       (g$bless$8368$sFNhI
                         (list
                           'lambda
                           '(x)
                           (list
                             'syntax-case
                             'x
                             '()
                             (list
                               'id
                               '(identifier? #'id)
                               (list 'syntax g$expr$9242$sFNhI))
                             (list
                               '(id e* ...)
                               '(identifier? #'id)
                               (cons
                                 'cons
                                 (cons
                                   (list 'syntax g$expr$9242$sFNhI)
                                   '(#'(e* ...))))))))))
                    g$ls/false$9241$sFNhI)
                  ((case-lambda
                     ((g$t$9243$sFNhI)
                      ((case-lambda
                         ((g$ls/false$9244$sFNhI)
                          (if (if g$ls/false$9244$sFNhI
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$id1$9245$sFNhI
                                         g$expr1$9246$sFNhI
                                         g$id2$9247$sFNhI
                                         g$expr2$9248$sFNhI
                                         g$expr3$9249$sFNhI)
                                       (if (g$id?$8126$sFNhI g$id1$9245$sFNhI)
                                         (if (g$id?$8126$sFNhI g$id2$9247$sFNhI)
                                           (begin
                                             '#f
                                             (g$id?$8126$sFNhI
                                               g$expr2$9248$sFNhI))
                                           '#f)
                                         '#f)))
                                    g$ls/false$9244$sFNhI))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$id1$9250$sFNhI
                                   g$expr1$9251$sFNhI
                                   g$id2$9252$sFNhI
                                   g$expr2$9253$sFNhI
                                   g$expr3$9254$sFNhI)
                                 (g$bless$8368$sFNhI
                                   (list
                                     'cons
                                     ''macro!
                                     (list
                                       'lambda
                                       '(x)
                                       (list
                                         'syntax-case
                                         'x
                                         '(set!)
                                         (list
                                           'id
                                           '(identifier? #'id)
                                           (list 'syntax g$expr1$9251$sFNhI))
                                         (list
                                           (list 'set! 'id g$expr2$9253$sFNhI)
                                           (list 'syntax g$expr3$9254$sFNhI))
                                         (list
                                           '(id e* ...)
                                           '(identifier? #'id)
                                           (list
                                             'syntax
                                             (cons
                                               g$expr1$9251$sFNhI
                                               '(e* ...))))))))))
                              g$ls/false$9244$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$9243$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$9243$sFNhI
                         '(_ (any any) ((#(scheme-id set!) any any) any))))))
                   g$t$9240$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9240$sFNhI '(_ any)))))
         g$stx$9239$sFNhI))))
   (g$do-macro$8387$sFNhI
     g$do-macro$11905$sFNhI
     (case-lambda
       ((g$stx$9255$sFNhI)
        (letrec* ((g$bind$9256$sFNhI
                    (case-lambda
                      ((g$x$9268$sFNhI)
                       ((case-lambda
                          ((g$t$9269$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9270$sFNhI)
                               (if g$ls/false$9270$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$x$9271$sFNhI g$init$9272$sFNhI)
                                      (list
                                        g$x$9271$sFNhI
                                        g$init$9272$sFNhI
                                        g$x$9271$sFNhI)))
                                   g$ls/false$9270$sFNhI)
                                 ((case-lambda
                                    ((g$t$9273$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9274$sFNhI)
                                         (if g$ls/false$9274$sFNhI
                                           (apply
                                             (case-lambda
                                               ((g$x$9275$sFNhI
                                                  g$init$9276$sFNhI
                                                  g$step$9277$sFNhI)
                                                (list
                                                  g$x$9275$sFNhI
                                                  g$init$9276$sFNhI
                                                  g$step$9277$sFNhI)))
                                             g$ls/false$9274$sFNhI)
                                           ((case-lambda
                                              ((g$t$9278$sFNhI)
                                               ((case-lambda
                                                  ((g$ls/false$9279$sFNhI)
                                                   (if g$ls/false$9279$sFNhI
                                                     (apply
                                                       (case-lambda
                                                         (()
                                                          (g$syntax-violation$8517$sFNhI
                                                            '#f
                                                            '"invalid binding"
                                                            g$stx$9255$sFNhI)))
                                                       g$ls/false$9279$sFNhI)
                                                     (g$syntax-violation$8517$sFNhI
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9278$sFNhI))))
                                                (g$syntax-dispatch$8405$sFNhI
                                                  g$t$9278$sFNhI
                                                  '_))))
                                            g$t$9273$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9273$sFNhI
                                        '(any any any)))))
                                  g$t$9269$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9269$sFNhI
                              '(any any)))))
                        g$x$9268$sFNhI)))))
          ((case-lambda
             ((g$t$9257$sFNhI)
              ((case-lambda
                 ((g$ls/false$9258$sFNhI)
                  (if g$ls/false$9258$sFNhI
                    (apply
                      (case-lambda
                        ((g$binding*$9259$sFNhI
                           g$test$9260$sFNhI
                           g$expr*$9261$sFNhI
                           g$command*$9262$sFNhI)
                         ((case-lambda
                            ((g$t$9263$sFNhI)
                             ((case-lambda
                                ((g$ls/false$9264$sFNhI)
                                 (if g$ls/false$9264$sFNhI
                                   (apply
                                     (case-lambda
                                       ((g$x*$9265$sFNhI
                                          g$init*$9266$sFNhI
                                          g$step*$9267$sFNhI)
                                        (if (g$valid-bound-ids?$8131$sFNhI
                                              g$x*$9265$sFNhI)
                                          (g$bless$8368$sFNhI
                                            (list
                                              'letrec
                                              (list
                                                (list
                                                  'loop
                                                  (list
                                                    'lambda
                                                    g$x*$9265$sFNhI
                                                    (list
                                                      'if
                                                      g$test$9260$sFNhI
                                                      (cons
                                                        'begin
                                                        (cons
                                                          '(if #f #f)
                                                          g$expr*$9261$sFNhI))
                                                      (cons
                                                        'begin
                                                        (append
                                                          g$command*$9262$sFNhI
                                                          (list
                                                            (cons
                                                              'loop
                                                              g$step*$9267$sFNhI))))))))
                                              (cons 'loop g$init*$9266$sFNhI)))
                                          (g$syntax-violation$8517$sFNhI
                                            '#f
                                            '"invalid bindings"
                                            g$stx$9255$sFNhI))))
                                     g$ls/false$9264$sFNhI)
                                   (g$syntax-violation$8517$sFNhI
                                     '#f
                                     '"invalid syntax"
                                     g$t$9263$sFNhI))))
                              (g$syntax-dispatch$8405$sFNhI
                                g$t$9263$sFNhI
                                '#(each (any any any))))))
                          (g$map$5157$sFNhI
                            g$bind$9256$sFNhI
                            g$binding*$9259$sFNhI))))
                      g$ls/false$9258$sFNhI)
                    (g$syntax-violation$8517$sFNhI
                      '#f
                      '"invalid syntax"
                      g$t$9257$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$9257$sFNhI
                 '(_ each-any (any . each-any) . each-any)))))
           g$stx$9255$sFNhI)))))
   (g$let*-macro$8388$sFNhI
     g$let*-macro$11906$sFNhI
     (case-lambda
       ((g$stx$9280$sFNhI)
        ((case-lambda
           ((g$t$9281$sFNhI)
            ((case-lambda
               ((g$ls/false$9282$sFNhI)
                (if (if g$ls/false$9282$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$lhs*$9283$sFNhI
                               g$rhs*$9284$sFNhI
                               g$b$9285$sFNhI
                               g$b*$9286$sFNhI)
                             (g$for-all$5155$sFNhI
                               g$id?$8126$sFNhI
                               g$lhs*$9283$sFNhI)))
                          g$ls/false$9282$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$lhs*$9287$sFNhI
                         g$rhs*$9288$sFNhI
                         g$b$9289$sFNhI
                         g$b*$9290$sFNhI)
                       (g$bless$8368$sFNhI
                         ((letrec ((g$f$9291$sFNhI
                                     (case-lambda
                                       ((g$x*$9292$sFNhI)
                                        (if (null? g$x*$9292$sFNhI)
                                          (cons
                                            'let
                                            (cons
                                              '()
                                              (cons
                                                g$b$9289$sFNhI
                                                g$b*$9290$sFNhI)))
                                          (if (null? (cdr g$x*$9292$sFNhI))
                                            (cons
                                              'let
                                              (cons
                                                (list (car g$x*$9292$sFNhI))
                                                (cons
                                                  g$b$9289$sFNhI
                                                  g$b*$9290$sFNhI)))
                                            (list
                                              'let
                                              (list (car g$x*$9292$sFNhI))
                                              (g$f$9291$sFNhI
                                                (cdr g$x*$9292$sFNhI)))))))))
                            g$f$9291$sFNhI)
                          (g$map$5157$sFNhI
                            list
                            g$lhs*$9287$sFNhI
                            g$rhs*$9288$sFNhI)))))
                    g$ls/false$9282$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9281$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$9281$sFNhI
               '(_ #(each (any any)) any . each-any)))))
         g$stx$9280$sFNhI))))
   (g$or-macro$8389$sFNhI
     g$or-macro$11907$sFNhI
     (case-lambda
       ((g$stx$9293$sFNhI)
        ((case-lambda
           ((g$t$9294$sFNhI)
            ((case-lambda
               ((g$ls/false$9295$sFNhI)
                (if g$ls/false$9295$sFNhI
                  (apply (case-lambda (() '#f)) g$ls/false$9295$sFNhI)
                  ((case-lambda
                     ((g$t$9296$sFNhI)
                      ((case-lambda
                         ((g$ls/false$9297$sFNhI)
                          (if g$ls/false$9297$sFNhI
                            (apply
                              (case-lambda
                                ((g$e$9298$sFNhI g$e*$9299$sFNhI)
                                 (g$bless$8368$sFNhI
                                   ((letrec ((g$f$9300$sFNhI
                                               (case-lambda
                                                 ((g$e$9301$sFNhI
                                                    g$e*$9302$sFNhI)
                                                  (if (null? g$e*$9302$sFNhI)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9301$sFNhI)
                                                    (list
                                                      'let
                                                      (list
                                                        (list
                                                          't
                                                          g$e$9301$sFNhI))
                                                      (list
                                                        'if
                                                        't
                                                        't
                                                        (g$f$9300$sFNhI
                                                          (car g$e*$9302$sFNhI)
                                                          (cdr g$e*$9302$sFNhI)))))))))
                                      g$f$9300$sFNhI)
                                    g$e$9298$sFNhI
                                    g$e*$9299$sFNhI))))
                              g$ls/false$9297$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$9296$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$9296$sFNhI
                         '(_ any . each-any)))))
                   g$t$9294$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9294$sFNhI '(_)))))
         g$stx$9293$sFNhI))))
   (g$and-macro$8390$sFNhI
     g$and-macro$11908$sFNhI
     (case-lambda
       ((g$stx$9303$sFNhI)
        ((case-lambda
           ((g$t$9304$sFNhI)
            ((case-lambda
               ((g$ls/false$9305$sFNhI)
                (if g$ls/false$9305$sFNhI
                  (apply (case-lambda (() '#t)) g$ls/false$9305$sFNhI)
                  ((case-lambda
                     ((g$t$9306$sFNhI)
                      ((case-lambda
                         ((g$ls/false$9307$sFNhI)
                          (if g$ls/false$9307$sFNhI
                            (apply
                              (case-lambda
                                ((g$e$9308$sFNhI g$e*$9309$sFNhI)
                                 (g$bless$8368$sFNhI
                                   ((letrec ((g$f$9310$sFNhI
                                               (case-lambda
                                                 ((g$e$9311$sFNhI
                                                    g$e*$9312$sFNhI)
                                                  (if (null? g$e*$9312$sFNhI)
                                                    (list
                                                      'begin
                                                      '#f
                                                      g$e$9311$sFNhI)
                                                    (cons
                                                      'if
                                                      (cons
                                                        g$e$9311$sFNhI
                                                        (cons
                                                          (g$f$9310$sFNhI
                                                            (car g$e*$9312$sFNhI)
                                                            (cdr g$e*$9312$sFNhI))
                                                          '(#f)))))))))
                                      g$f$9310$sFNhI)
                                    g$e$9308$sFNhI
                                    g$e*$9309$sFNhI))))
                              g$ls/false$9307$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$9306$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$9306$sFNhI
                         '(_ any . each-any)))))
                   g$t$9304$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9304$sFNhI '(_)))))
         g$stx$9303$sFNhI))))
   (g$cond-macro$8391$sFNhI
     g$cond-macro$11909$sFNhI
     (case-lambda
       ((g$stx$9313$sFNhI)
        ((case-lambda
           ((g$t$9314$sFNhI)
            ((case-lambda
               ((g$ls/false$9315$sFNhI)
                (if g$ls/false$9315$sFNhI
                  (apply
                    (case-lambda
                      ((g$cls$9316$sFNhI g$cls*$9317$sFNhI)
                       (g$bless$8368$sFNhI
                         ((letrec ((g$f$9318$sFNhI
                                     (case-lambda
                                       ((g$cls$9319$sFNhI g$cls*$9320$sFNhI)
                                        (if (null? g$cls*$9320$sFNhI)
                                          ((case-lambda
                                             ((g$t$9321$sFNhI)
                                              ((case-lambda
                                                 ((g$ls/false$9322$sFNhI)
                                                  (if g$ls/false$9322$sFNhI
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9323$sFNhI
                                                           g$e*$9324$sFNhI)
                                                         (cons
                                                           'begin
                                                           (cons
                                                             g$e$9323$sFNhI
                                                             g$e*$9324$sFNhI))))
                                                      g$ls/false$9322$sFNhI)
                                                    ((case-lambda
                                                       ((g$t$9325$sFNhI)
                                                        ((case-lambda
                                                           ((g$ls/false$9326$sFNhI)
                                                            (if g$ls/false$9326$sFNhI
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9327$sFNhI
                                                                     g$p$9328$sFNhI)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9327$sFNhI))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9328$sFNhI
                                                                         '(t))))))
                                                                g$ls/false$9326$sFNhI)
                                                              ((case-lambda
                                                                 ((g$t$9329$sFNhI)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9330$sFNhI)
                                                                      (if g$ls/false$9330$sFNhI
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9331$sFNhI)
                                                                             (cons
                                                                               'or
                                                                               (cons
                                                                                 g$e$9331$sFNhI
                                                                                 '((if #f
                                                                                     #f))))))
                                                                          g$ls/false$9330$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$t$9332$sFNhI)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9333$sFNhI)
                                                                                (if g$ls/false$9333$sFNhI
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9334$sFNhI
                                                                                         g$e*$9335$sFNhI)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9334$sFNhI
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9335$sFNhI))))
                                                                                    g$ls/false$9333$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$t$9336$sFNhI)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9337$sFNhI)
                                                                                          (if g$ls/false$9337$sFNhI
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8517$sFNhI
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9313$sFNhI)))
                                                                                              g$ls/false$9337$sFNhI)
                                                                                            (g$syntax-violation$8517$sFNhI
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9336$sFNhI))))
                                                                                       (g$syntax-dispatch$8405$sFNhI
                                                                                         g$t$9336$sFNhI
                                                                                         '_))))
                                                                                   g$t$9332$sFNhI))))
                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                               g$t$9332$sFNhI
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9329$sFNhI))))
                                                                   (g$syntax-dispatch$8405$sFNhI
                                                                     g$t$9329$sFNhI
                                                                     '(any)))))
                                                               g$t$9325$sFNhI))))
                                                         (g$syntax-dispatch$8405$sFNhI
                                                           g$t$9325$sFNhI
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9321$sFNhI))))
                                               (g$syntax-dispatch$8405$sFNhI
                                                 g$t$9321$sFNhI
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9319$sFNhI)
                                          ((case-lambda
                                             ((g$t$9338$sFNhI)
                                              ((case-lambda
                                                 ((g$ls/false$9339$sFNhI)
                                                  (if g$ls/false$9339$sFNhI
                                                    (apply
                                                      (case-lambda
                                                        ((g$e$9340$sFNhI
                                                           g$e*$9341$sFNhI)
                                                         (g$syntax-violation$8517$sFNhI
                                                           '#f
                                                           '"incorrect position of keyword else"
                                                           g$stx$9313$sFNhI)))
                                                      g$ls/false$9339$sFNhI)
                                                    ((case-lambda
                                                       ((g$t$9342$sFNhI)
                                                        ((case-lambda
                                                           ((g$ls/false$9343$sFNhI)
                                                            (if g$ls/false$9343$sFNhI
                                                              (apply
                                                                (case-lambda
                                                                  ((g$e$9344$sFNhI
                                                                     g$p$9345$sFNhI)
                                                                   (list
                                                                     'let
                                                                     (list
                                                                       (list
                                                                         't
                                                                         g$e$9344$sFNhI))
                                                                     (list
                                                                       'if
                                                                       't
                                                                       (cons
                                                                         g$p$9345$sFNhI
                                                                         '(t))
                                                                       (g$f$9318$sFNhI
                                                                         (car g$cls*$9320$sFNhI)
                                                                         (cdr g$cls*$9320$sFNhI))))))
                                                                g$ls/false$9343$sFNhI)
                                                              ((case-lambda
                                                                 ((g$t$9346$sFNhI)
                                                                  ((case-lambda
                                                                     ((g$ls/false$9347$sFNhI)
                                                                      (if g$ls/false$9347$sFNhI
                                                                        (apply
                                                                          (case-lambda
                                                                            ((g$e$9348$sFNhI)
                                                                             (list
                                                                               'or
                                                                               g$e$9348$sFNhI
                                                                               (g$f$9318$sFNhI
                                                                                 (car g$cls*$9320$sFNhI)
                                                                                 (cdr g$cls*$9320$sFNhI)))))
                                                                          g$ls/false$9347$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$t$9349$sFNhI)
                                                                            ((case-lambda
                                                                               ((g$ls/false$9350$sFNhI)
                                                                                (if g$ls/false$9350$sFNhI
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$e$9351$sFNhI
                                                                                         g$e*$9352$sFNhI)
                                                                                       (list
                                                                                         'if
                                                                                         g$e$9351$sFNhI
                                                                                         (cons
                                                                                           'begin
                                                                                           g$e*$9352$sFNhI)
                                                                                         (g$f$9318$sFNhI
                                                                                           (car g$cls*$9320$sFNhI)
                                                                                           (cdr g$cls*$9320$sFNhI)))))
                                                                                    g$ls/false$9350$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$t$9353$sFNhI)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$9354$sFNhI)
                                                                                          (if g$ls/false$9354$sFNhI
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8517$sFNhI
                                                                                                   '#f
                                                                                                   '"invalid last clause"
                                                                                                   g$stx$9313$sFNhI)))
                                                                                              g$ls/false$9354$sFNhI)
                                                                                            (g$syntax-violation$8517$sFNhI
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$9353$sFNhI))))
                                                                                       (g$syntax-dispatch$8405$sFNhI
                                                                                         g$t$9353$sFNhI
                                                                                         '_))))
                                                                                   g$t$9349$sFNhI))))
                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                               g$t$9349$sFNhI
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$t$9346$sFNhI))))
                                                                   (g$syntax-dispatch$8405$sFNhI
                                                                     g$t$9346$sFNhI
                                                                     '(any)))))
                                                               g$t$9342$sFNhI))))
                                                         (g$syntax-dispatch$8405$sFNhI
                                                           g$t$9342$sFNhI
                                                           '(any #(scheme-id =>)
                                                                 any)))))
                                                     g$t$9338$sFNhI))))
                                               (g$syntax-dispatch$8405$sFNhI
                                                 g$t$9338$sFNhI
                                                 '(#(scheme-id else)
                                                   any
                                                   .
                                                   each-any)))))
                                           g$cls$9319$sFNhI))))))
                            g$f$9318$sFNhI)
                          g$cls$9316$sFNhI
                          g$cls*$9317$sFNhI))))
                    g$ls/false$9315$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9314$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$9314$sFNhI
               '(_ any . each-any)))))
         g$stx$9313$sFNhI))))
   (g$do-include$8392$sFNhI
     g$do-include$11910$sFNhI
     (case-lambda
       ((g$stx$9355$sFNhI g$id$9356$sFNhI g$filename$9357$sFNhI)
        ((case-lambda
           ((g$filename$9358$sFNhI)
            (begin
              (if (not (if (string? g$filename$9358$sFNhI)
                         (begin '#f (g$id?$8126$sFNhI g$id$9356$sFNhI))
                         '#f))
                (g$syntax-violation$8517$sFNhI
                  '#f
                  '"invalid syntax"
                  g$stx$9355$sFNhI)
                (void))
              (cons
                (g$bless$8368$sFNhI 'begin)
                (g$with-input-from-file$6825$sFNhI
                  g$filename$9358$sFNhI
                  (case-lambda
                    (()
                     ((letrec ((g$f$9359$sFNhI
                                 (case-lambda
                                   ((g$ls$9360$sFNhI)
                                    ((case-lambda
                                       ((g$x$9361$sFNhI)
                                        (if (eof-object? g$x$9361$sFNhI)
                                          (g$reverse$5652$sFNhI g$ls$9360$sFNhI)
                                          (g$f$9359$sFNhI
                                            (cons
                                              (g$datum->stx$8109$sFNhI
                                                g$id$9356$sFNhI
                                                g$x$9361$sFNhI)
                                              g$ls$9360$sFNhI)))))
                                     (read-annotated))))))
                        g$f$9359$sFNhI)
                      '()))))))))
         (g$stx->datum$8137$sFNhI g$filename$9357$sFNhI)))))
   (g$include-macro$8393$sFNhI
     g$include-macro$11911$sFNhI
     (case-lambda
       ((g$e$9362$sFNhI)
        ((case-lambda
           ((g$t$9363$sFNhI)
            ((case-lambda
               ((g$ls/false$9364$sFNhI)
                (if g$ls/false$9364$sFNhI
                  (apply
                    (case-lambda
                      ((g$id$9365$sFNhI g$filename$9366$sFNhI)
                       (g$do-include$8392$sFNhI
                         g$e$9362$sFNhI
                         g$id$9365$sFNhI
                         g$filename$9366$sFNhI)))
                    g$ls/false$9364$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9363$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9363$sFNhI '(any any)))))
         g$e$9362$sFNhI))))
   (g$include-into-macro$8394$sFNhI
     g$include-into-macro$11912$sFNhI
     (case-lambda
       ((g$e$9367$sFNhI)
        ((case-lambda
           ((g$t$9368$sFNhI)
            ((case-lambda
               ((g$ls/false$9369$sFNhI)
                (if g$ls/false$9369$sFNhI
                  (apply
                    (case-lambda
                      ((g$id$9370$sFNhI g$filename$9371$sFNhI)
                       (g$do-include$8392$sFNhI
                         g$e$9367$sFNhI
                         g$id$9370$sFNhI
                         g$filename$9371$sFNhI)))
                    g$ls/false$9369$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9368$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$9368$sFNhI '(_ any any)))))
         g$e$9367$sFNhI))))
   (g$syntax-rules-macro$8395$sFNhI
     g$syntax-rules-macro$11913$sFNhI
     (case-lambda
       ((g$e$9372$sFNhI)
        ((case-lambda
           ((g$t$9373$sFNhI)
            ((case-lambda
               ((g$ls/false$9374$sFNhI)
                (if g$ls/false$9374$sFNhI
                  (apply
                    (case-lambda
                      ((g$lits$9375$sFNhI g$pat*$9376$sFNhI g$tmp*$9377$sFNhI)
                       (begin
                         (g$verify-literals$8408$sFNhI
                           g$lits$9375$sFNhI
                           g$e$9372$sFNhI)
                         (g$bless$8368$sFNhI
                           (list
                             'lambda
                             '(x)
                             (cons
                               'syntax-case
                               (cons
                                 'x
                                 (cons
                                   g$lits$9375$sFNhI
                                   (g$map$5157$sFNhI
                                     (case-lambda
                                       ((g$pat$9378$sFNhI g$tmp$9379$sFNhI)
                                        ((case-lambda
                                           ((g$t$9380$sFNhI)
                                            ((case-lambda
                                               ((g$ls/false$9381$sFNhI)
                                                (if g$ls/false$9381$sFNhI
                                                  (apply
                                                    (case-lambda
                                                      ((g$rest$9382$sFNhI)
                                                       (list
                                                         (cons
                                                           'g
                                                           g$rest$9382$sFNhI)
                                                         (list
                                                           'syntax
                                                           g$tmp$9379$sFNhI))))
                                                    g$ls/false$9381$sFNhI)
                                                  ((case-lambda
                                                     ((g$t$9383$sFNhI)
                                                      ((case-lambda
                                                         ((g$ls/false$9384$sFNhI)
                                                          (if g$ls/false$9384$sFNhI
                                                            (apply
                                                              (case-lambda
                                                                (()
                                                                 (g$syntax-violation$8517$sFNhI
                                                                   '#f
                                                                   '"invalid syntax-rules pattern"
                                                                   g$e$9372$sFNhI
                                                                   g$pat$9378$sFNhI)))
                                                              g$ls/false$9384$sFNhI)
                                                            (g$syntax-violation$8517$sFNhI
                                                              '#f
                                                              '"invalid syntax"
                                                              g$t$9383$sFNhI))))
                                                       (g$syntax-dispatch$8405$sFNhI
                                                         g$t$9383$sFNhI
                                                         '_))))
                                                   g$t$9380$sFNhI))))
                                             (g$syntax-dispatch$8405$sFNhI
                                               g$t$9380$sFNhI
                                               '(_ . any)))))
                                         g$pat$9378$sFNhI)))
                                     g$pat*$9376$sFNhI
                                     g$tmp*$9377$sFNhI)))))))))
                    g$ls/false$9374$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9373$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$9373$sFNhI
               '(_ each-any . #(each (any any)))))))
         g$e$9372$sFNhI))))
   (g$quasiquote-macro$8396$sFNhI
     g$quasiquote-macro$11914$sFNhI
     ((case-lambda
        (()
         (letrec* ((g$datum$9385$sFNhI
                     (case-lambda
                       ((g$x$9516$sFNhI)
                        (list
                          (g$scheme-stx$8348$sFNhI 'quote)
                          (g$mkstx$8114$sFNhI g$x$9516$sFNhI '() '() '())))))
                   (g$quasicons*$9401$sFNhI
                     (case-lambda
                       ((g$x$9512$sFNhI g$y$9513$sFNhI)
                        ((letrec ((g$f$9514$sFNhI
                                    (case-lambda
                                      ((g$x$9515$sFNhI)
                                       (if (null? g$x$9515$sFNhI)
                                         g$y$9513$sFNhI
                                         (g$quasicons$9402$sFNhI
                                           (car g$x$9515$sFNhI)
                                           (g$f$9514$sFNhI
                                             (cdr g$x$9515$sFNhI))))))))
                           g$f$9514$sFNhI)
                         g$x$9512$sFNhI))))
                   (g$quasicons$9402$sFNhI
                     (case-lambda
                       ((g$x$9493$sFNhI g$y$9494$sFNhI)
                        ((case-lambda
                           ((g$t$9495$sFNhI)
                            ((case-lambda
                               ((g$ls/false$9496$sFNhI)
                                (if g$ls/false$9496$sFNhI
                                  (apply
                                    (case-lambda
                                      ((g$dy$9497$sFNhI)
                                       ((case-lambda
                                          ((g$t$9498$sFNhI)
                                           ((case-lambda
                                              ((g$ls/false$9499$sFNhI)
                                               (if g$ls/false$9499$sFNhI
                                                 (apply
                                                   (case-lambda
                                                     ((g$dx$9500$sFNhI)
                                                      (list
                                                        (g$scheme-stx$8348$sFNhI
                                                          'quote)
                                                        (cons
                                                          g$dx$9500$sFNhI
                                                          g$dy$9497$sFNhI))))
                                                   g$ls/false$9499$sFNhI)
                                                 ((case-lambda
                                                    ((g$t$9501$sFNhI)
                                                     ((case-lambda
                                                        ((g$ls/false$9502$sFNhI)
                                                         (if g$ls/false$9502$sFNhI
                                                           (apply
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$t$9503$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9504$sFNhI)
                                                                        (if g$ls/false$9504$sFNhI
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (list
                                                                                 (g$scheme-stx$8348$sFNhI
                                                                                   'list)
                                                                                 g$x$9493$sFNhI)))
                                                                            g$ls/false$9504$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$t$9505$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9506$sFNhI)
                                                                                  (if g$ls/false$9506$sFNhI
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        (()
                                                                                         (list
                                                                                           (g$scheme-stx$8348$sFNhI
                                                                                             'cons)
                                                                                           g$x$9493$sFNhI
                                                                                           g$y$9494$sFNhI)))
                                                                                      g$ls/false$9506$sFNhI)
                                                                                    (g$syntax-violation$8517$sFNhI
                                                                                      '#f
                                                                                      '"invalid syntax"
                                                                                      g$t$9505$sFNhI))))
                                                                               (g$syntax-dispatch$8405$sFNhI
                                                                                 g$t$9505$sFNhI
                                                                                 '_))))
                                                                           g$t$9503$sFNhI))))
                                                                     (g$syntax-dispatch$8405$sFNhI
                                                                       g$t$9503$sFNhI
                                                                       '()))))
                                                                 g$dy$9497$sFNhI)))
                                                             g$ls/false$9502$sFNhI)
                                                           (g$syntax-violation$8517$sFNhI
                                                             '#f
                                                             '"invalid syntax"
                                                             g$t$9501$sFNhI))))
                                                      (g$syntax-dispatch$8405$sFNhI
                                                        g$t$9501$sFNhI
                                                        '_))))
                                                  g$t$9498$sFNhI))))
                                            (g$syntax-dispatch$8405$sFNhI
                                              g$t$9498$sFNhI
                                              '(#(scheme-id quote) any)))))
                                        g$x$9493$sFNhI)))
                                    g$ls/false$9496$sFNhI)
                                  ((case-lambda
                                     ((g$t$9507$sFNhI)
                                      ((case-lambda
                                         ((g$ls/false$9508$sFNhI)
                                          (if g$ls/false$9508$sFNhI
                                            (apply
                                              (case-lambda
                                                ((g$stuff$9509$sFNhI)
                                                 (g$cons*$5159$sFNhI
                                                   (g$scheme-stx$8348$sFNhI
                                                     'list)
                                                   g$x$9493$sFNhI
                                                   g$stuff$9509$sFNhI)))
                                              g$ls/false$9508$sFNhI)
                                            ((case-lambda
                                               ((g$t$9510$sFNhI)
                                                ((case-lambda
                                                   ((g$ls/false$9511$sFNhI)
                                                    (if g$ls/false$9511$sFNhI
                                                      (apply
                                                        (case-lambda
                                                          (()
                                                           (list
                                                             (g$scheme-stx$8348$sFNhI
                                                               'cons)
                                                             g$x$9493$sFNhI
                                                             g$y$9494$sFNhI)))
                                                        g$ls/false$9511$sFNhI)
                                                      (g$syntax-violation$8517$sFNhI
                                                        '#f
                                                        '"invalid syntax"
                                                        g$t$9510$sFNhI))))
                                                 (g$syntax-dispatch$8405$sFNhI
                                                   g$t$9510$sFNhI
                                                   '_))))
                                             g$t$9507$sFNhI))))
                                       (g$syntax-dispatch$8405$sFNhI
                                         g$t$9507$sFNhI
                                         '(#(scheme-id list) . each-any)))))
                                   g$t$9495$sFNhI))))
                             (g$syntax-dispatch$8405$sFNhI
                               g$t$9495$sFNhI
                               '(#(scheme-id quote) any)))))
                         g$y$9494$sFNhI))))
                   (g$quasiappend$9403$sFNhI
                     (case-lambda
                       ((g$x$9480$sFNhI g$y$9481$sFNhI)
                        ((case-lambda
                           ((g$ls$9482$sFNhI)
                            (if (null? g$ls$9482$sFNhI)
                              (list (g$scheme-stx$8348$sFNhI 'quote) '())
                              (if (null? (cdr g$ls$9482$sFNhI))
                                (car g$ls$9482$sFNhI)
                                (g$cons*$5159$sFNhI
                                  (g$scheme-stx$8348$sFNhI 'append)
                                  g$ls$9482$sFNhI)))))
                         ((letrec ((g$f$9483$sFNhI
                                     (case-lambda
                                       ((g$x$9484$sFNhI)
                                        (if (null? g$x$9484$sFNhI)
                                          ((case-lambda
                                             ((g$t$9485$sFNhI)
                                              ((case-lambda
                                                 ((g$ls/false$9486$sFNhI)
                                                  (if g$ls/false$9486$sFNhI
                                                    (apply
                                                      (case-lambda (() '()))
                                                      g$ls/false$9486$sFNhI)
                                                    ((case-lambda
                                                       ((g$t$9487$sFNhI)
                                                        ((case-lambda
                                                           ((g$ls/false$9488$sFNhI)
                                                            (if g$ls/false$9488$sFNhI
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (list
                                                                     g$y$9481$sFNhI)))
                                                                g$ls/false$9488$sFNhI)
                                                              (g$syntax-violation$8517$sFNhI
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9487$sFNhI))))
                                                         (g$syntax-dispatch$8405$sFNhI
                                                           g$t$9487$sFNhI
                                                           '_))))
                                                     g$t$9485$sFNhI))))
                                               (g$syntax-dispatch$8405$sFNhI
                                                 g$t$9485$sFNhI
                                                 '(#(scheme-id quote) ())))))
                                           g$y$9481$sFNhI)
                                          ((case-lambda
                                             ((g$t$9489$sFNhI)
                                              ((case-lambda
                                                 ((g$ls/false$9490$sFNhI)
                                                  (if g$ls/false$9490$sFNhI
                                                    (apply
                                                      (case-lambda
                                                        (()
                                                         (g$f$9483$sFNhI
                                                           (cdr g$x$9484$sFNhI))))
                                                      g$ls/false$9490$sFNhI)
                                                    ((case-lambda
                                                       ((g$t$9491$sFNhI)
                                                        ((case-lambda
                                                           ((g$ls/false$9492$sFNhI)
                                                            (if g$ls/false$9492$sFNhI
                                                              (apply
                                                                (case-lambda
                                                                  (()
                                                                   (cons
                                                                     (car g$x$9484$sFNhI)
                                                                     (g$f$9483$sFNhI
                                                                       (cdr g$x$9484$sFNhI)))))
                                                                g$ls/false$9492$sFNhI)
                                                              (g$syntax-violation$8517$sFNhI
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9491$sFNhI))))
                                                         (g$syntax-dispatch$8405$sFNhI
                                                           g$t$9491$sFNhI
                                                           '_))))
                                                     g$t$9489$sFNhI))))
                                               (g$syntax-dispatch$8405$sFNhI
                                                 g$t$9489$sFNhI
                                                 '(#(scheme-id quote) ())))))
                                           (car g$x$9484$sFNhI)))))))
                            g$f$9483$sFNhI)
                          g$x$9480$sFNhI)))))
                   (g$quasivector$9404$sFNhI
                     (case-lambda
                       ((g$x$9455$sFNhI)
                        ((case-lambda
                           ((g$pat-x$9456$sFNhI)
                            ((case-lambda
                               ((g$t$9457$sFNhI)
                                ((case-lambda
                                   ((g$ls/false$9458$sFNhI)
                                    (if g$ls/false$9458$sFNhI
                                      (apply
                                        (case-lambda
                                          ((g$x*$9459$sFNhI)
                                           (list
                                             (g$scheme-stx$8348$sFNhI 'quote)
                                             (g$list->vector$5640$sFNhI
                                               g$x*$9459$sFNhI))))
                                        g$ls/false$9458$sFNhI)
                                      ((case-lambda
                                         ((g$t$9460$sFNhI)
                                          ((case-lambda
                                             ((g$ls/false$9461$sFNhI)
                                              (if g$ls/false$9461$sFNhI
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     ((letrec ((g$f$9462$sFNhI
                                                                 (case-lambda
                                                                   ((g$x$9463$sFNhI
                                                                      g$k$9464$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$t$9465$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$ls/false$9466$sFNhI)
                                                                            (if g$ls/false$9466$sFNhI
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$x*$9467$sFNhI)
                                                                                   (g$k$9464$sFNhI
                                                                                     (g$map$5157$sFNhI
                                                                                       (case-lambda
                                                                                         ((g$x$9468$sFNhI)
                                                                                          (list
                                                                                            (g$scheme-stx$8348$sFNhI
                                                                                              'quote)
                                                                                            g$x$9468$sFNhI)))
                                                                                       g$x*$9467$sFNhI))))
                                                                                g$ls/false$9466$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$t$9469$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$9470$sFNhI)
                                                                                      (if g$ls/false$9470$sFNhI
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$x*$9471$sFNhI)
                                                                                             (g$k$9464$sFNhI
                                                                                               g$x*$9471$sFNhI)))
                                                                                          g$ls/false$9470$sFNhI)
                                                                                        ((case-lambda
                                                                                           ((g$t$9472$sFNhI)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$9473$sFNhI)
                                                                                                (if g$ls/false$9473$sFNhI
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$x$9474$sFNhI
                                                                                                         g$y$9475$sFNhI)
                                                                                                       (g$f$9462$sFNhI
                                                                                                         g$y$9475$sFNhI
                                                                                                         (case-lambda
                                                                                                           ((g$ls$9476$sFNhI)
                                                                                                            (g$k$9464$sFNhI
                                                                                                              (cons
                                                                                                                g$x$9474$sFNhI
                                                                                                                g$ls$9476$sFNhI)))))))
                                                                                                    g$ls/false$9473$sFNhI)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$9477$sFNhI)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$9478$sFNhI)
                                                                                                          (if g$ls/false$9478$sFNhI
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (list
                                                                                                                   (g$scheme-stx$8348$sFNhI
                                                                                                                     'list->vector)
                                                                                                                   g$pat-x$9456$sFNhI)))
                                                                                                              g$ls/false$9478$sFNhI)
                                                                                                            (g$syntax-violation$8517$sFNhI
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$9477$sFNhI))))
                                                                                                       (g$syntax-dispatch$8405$sFNhI
                                                                                                         g$t$9477$sFNhI
                                                                                                         '_))))
                                                                                                   g$t$9472$sFNhI))))
                                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                                               g$t$9472$sFNhI
                                                                                               '(#(scheme-id
                                                                                                   cons)
                                                                                                 any
                                                                                                 any)))))
                                                                                         g$t$9469$sFNhI))))
                                                                                   (g$syntax-dispatch$8405$sFNhI
                                                                                     g$t$9469$sFNhI
                                                                                     '(#(scheme-id
                                                                                         list)
                                                                                       .
                                                                                       each-any)))))
                                                                               g$t$9465$sFNhI))))
                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                           g$t$9465$sFNhI
                                                                           '(#(scheme-id
                                                                               quote)
                                                                             each-any)))))
                                                                     g$x$9463$sFNhI)))))
                                                        g$f$9462$sFNhI)
                                                      g$x$9455$sFNhI
                                                      (case-lambda
                                                        ((g$ls$9479$sFNhI)
                                                         (g$cons*$5159$sFNhI
                                                           (g$scheme-stx$8348$sFNhI
                                                             'vector)
                                                           g$ls$9479$sFNhI))))))
                                                  g$ls/false$9461$sFNhI)
                                                (g$syntax-violation$8517$sFNhI
                                                  '#f
                                                  '"invalid syntax"
                                                  g$t$9460$sFNhI))))
                                           (g$syntax-dispatch$8405$sFNhI
                                             g$t$9460$sFNhI
                                             '_))))
                                       g$t$9457$sFNhI))))
                                 (g$syntax-dispatch$8405$sFNhI
                                   g$t$9457$sFNhI
                                   '(#(scheme-id quote) each-any)))))
                             g$pat-x$9456$sFNhI)))
                         g$x$9455$sFNhI))))
                   (g$vquasi$9405$sFNhI
                     (case-lambda
                       ((g$p$9438$sFNhI g$lev$9439$sFNhI)
                        ((case-lambda
                           ((g$t$9440$sFNhI)
                            ((case-lambda
                               ((g$ls/false$9441$sFNhI)
                                (if g$ls/false$9441$sFNhI
                                  (apply
                                    (case-lambda
                                      ((g$p$9442$sFNhI g$q$9443$sFNhI)
                                       ((case-lambda
                                          ((g$t$9444$sFNhI)
                                           ((case-lambda
                                              ((g$ls/false$9445$sFNhI)
                                               (if g$ls/false$9445$sFNhI
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9446$sFNhI)
                                                      (if (= g$lev$9439$sFNhI
                                                             '0)
                                                        (g$quasicons*$9401$sFNhI
                                                          g$p$9446$sFNhI
                                                          (g$vquasi$9405$sFNhI
                                                            g$q$9443$sFNhI
                                                            g$lev$9439$sFNhI))
                                                        (g$quasicons$9402$sFNhI
                                                          (g$quasicons$9402$sFNhI
                                                            (g$datum$9385$sFNhI
                                                              'unquote)
                                                            (g$quasi$9406$sFNhI
                                                              g$p$9446$sFNhI
                                                              (- g$lev$9439$sFNhI
                                                                 '1)))
                                                          (g$vquasi$9405$sFNhI
                                                            g$q$9443$sFNhI
                                                            g$lev$9439$sFNhI)))))
                                                   g$ls/false$9445$sFNhI)
                                                 ((case-lambda
                                                    ((g$t$9447$sFNhI)
                                                     ((case-lambda
                                                        ((g$ls/false$9448$sFNhI)
                                                         (if g$ls/false$9448$sFNhI
                                                           (apply
                                                             (case-lambda
                                                               ((g$p$9449$sFNhI)
                                                                (if (= g$lev$9439$sFNhI
                                                                       '0)
                                                                  (g$quasiappend$9403$sFNhI
                                                                    g$p$9449$sFNhI
                                                                    (g$vquasi$9405$sFNhI
                                                                      g$q$9443$sFNhI
                                                                      g$lev$9439$sFNhI))
                                                                  (g$quasicons$9402$sFNhI
                                                                    (g$quasicons$9402$sFNhI
                                                                      (g$datum$9385$sFNhI
                                                                        'unquote-splicing)
                                                                      (g$quasi$9406$sFNhI
                                                                        g$p$9449$sFNhI
                                                                        (- g$lev$9439$sFNhI
                                                                           '1)))
                                                                    (g$vquasi$9405$sFNhI
                                                                      g$q$9443$sFNhI
                                                                      g$lev$9439$sFNhI)))))
                                                             g$ls/false$9448$sFNhI)
                                                           ((case-lambda
                                                              ((g$t$9450$sFNhI)
                                                               ((case-lambda
                                                                  ((g$ls/false$9451$sFNhI)
                                                                   (if g$ls/false$9451$sFNhI
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$p$9452$sFNhI)
                                                                          (g$quasicons$9402$sFNhI
                                                                            (g$quasi$9406$sFNhI
                                                                              g$p$9452$sFNhI
                                                                              g$lev$9439$sFNhI)
                                                                            (g$vquasi$9405$sFNhI
                                                                              g$q$9443$sFNhI
                                                                              g$lev$9439$sFNhI))))
                                                                       g$ls/false$9451$sFNhI)
                                                                     (g$syntax-violation$8517$sFNhI
                                                                       '#f
                                                                       '"invalid syntax"
                                                                       g$t$9450$sFNhI))))
                                                                (g$syntax-dispatch$8405$sFNhI
                                                                  g$t$9450$sFNhI
                                                                  'any))))
                                                            g$t$9447$sFNhI))))
                                                      (g$syntax-dispatch$8405$sFNhI
                                                        g$t$9447$sFNhI
                                                        '(#(scheme-id
                                                            unquote-splicing)
                                                          .
                                                          each-any)))))
                                                  g$t$9444$sFNhI))))
                                            (g$syntax-dispatch$8405$sFNhI
                                              g$t$9444$sFNhI
                                              '(#(scheme-id unquote)
                                                .
                                                each-any)))))
                                        g$p$9442$sFNhI)))
                                    g$ls/false$9441$sFNhI)
                                  ((case-lambda
                                     ((g$t$9453$sFNhI)
                                      ((case-lambda
                                         ((g$ls/false$9454$sFNhI)
                                          (if g$ls/false$9454$sFNhI
                                            (apply
                                              (case-lambda
                                                (()
                                                 (list
                                                   (g$scheme-stx$8348$sFNhI
                                                     'quote)
                                                   '())))
                                              g$ls/false$9454$sFNhI)
                                            (g$syntax-violation$8517$sFNhI
                                              '#f
                                              '"invalid syntax"
                                              g$t$9453$sFNhI))))
                                       (g$syntax-dispatch$8405$sFNhI
                                         g$t$9453$sFNhI
                                         '()))))
                                   g$t$9440$sFNhI))))
                             (g$syntax-dispatch$8405$sFNhI
                               g$t$9440$sFNhI
                               '(any . any)))))
                         g$p$9438$sFNhI))))
                   (g$quasi$9406$sFNhI
                     (case-lambda
                       ((g$p$9411$sFNhI g$lev$9412$sFNhI)
                        ((case-lambda
                           ((g$t$9413$sFNhI)
                            ((case-lambda
                               ((g$ls/false$9414$sFNhI)
                                (if g$ls/false$9414$sFNhI
                                  (apply
                                    (case-lambda
                                      ((g$p$9415$sFNhI)
                                       (if (= g$lev$9412$sFNhI '0)
                                         g$p$9415$sFNhI
                                         (g$quasicons$9402$sFNhI
                                           (g$datum$9385$sFNhI 'unquote)
                                           (g$quasi$9406$sFNhI
                                             (list g$p$9415$sFNhI)
                                             (- g$lev$9412$sFNhI '1))))))
                                    g$ls/false$9414$sFNhI)
                                  ((case-lambda
                                     ((g$t$9416$sFNhI)
                                      ((case-lambda
                                         ((g$ls/false$9417$sFNhI)
                                          (if g$ls/false$9417$sFNhI
                                            (apply
                                              (case-lambda
                                                ((g$p$9418$sFNhI g$q$9419$sFNhI)
                                                 (if (= g$lev$9412$sFNhI '0)
                                                   (g$quasicons*$9401$sFNhI
                                                     g$p$9418$sFNhI
                                                     (g$quasi$9406$sFNhI
                                                       g$q$9419$sFNhI
                                                       g$lev$9412$sFNhI))
                                                   (g$quasicons$9402$sFNhI
                                                     (g$quasicons$9402$sFNhI
                                                       (g$datum$9385$sFNhI
                                                         'unquote)
                                                       (g$quasi$9406$sFNhI
                                                         g$p$9418$sFNhI
                                                         (- g$lev$9412$sFNhI
                                                            '1)))
                                                     (g$quasi$9406$sFNhI
                                                       g$q$9419$sFNhI
                                                       g$lev$9412$sFNhI)))))
                                              g$ls/false$9417$sFNhI)
                                            ((case-lambda
                                               ((g$t$9420$sFNhI)
                                                ((case-lambda
                                                   ((g$ls/false$9421$sFNhI)
                                                    (if g$ls/false$9421$sFNhI
                                                      (apply
                                                        (case-lambda
                                                          ((g$p$9422$sFNhI
                                                             g$q$9423$sFNhI)
                                                           (if (= g$lev$9412$sFNhI
                                                                  '0)
                                                             (g$quasiappend$9403$sFNhI
                                                               g$p$9422$sFNhI
                                                               (g$quasi$9406$sFNhI
                                                                 g$q$9423$sFNhI
                                                                 g$lev$9412$sFNhI))
                                                             (g$quasicons$9402$sFNhI
                                                               (g$quasicons$9402$sFNhI
                                                                 (g$datum$9385$sFNhI
                                                                   'unquote-splicing)
                                                                 (g$quasi$9406$sFNhI
                                                                   g$p$9422$sFNhI
                                                                   (- g$lev$9412$sFNhI
                                                                      '1)))
                                                               (g$quasi$9406$sFNhI
                                                                 g$q$9423$sFNhI
                                                                 g$lev$9412$sFNhI)))))
                                                        g$ls/false$9421$sFNhI)
                                                      ((case-lambda
                                                         ((g$t$9424$sFNhI)
                                                          ((case-lambda
                                                             ((g$ls/false$9425$sFNhI)
                                                              (if g$ls/false$9425$sFNhI
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p$9426$sFNhI)
                                                                     (g$quasicons$9402$sFNhI
                                                                       (g$datum$9385$sFNhI
                                                                         'quasiquote)
                                                                       (g$quasi$9406$sFNhI
                                                                         (list
                                                                           g$p$9426$sFNhI)
                                                                         (+ g$lev$9412$sFNhI
                                                                            '1)))))
                                                                  g$ls/false$9425$sFNhI)
                                                                ((case-lambda
                                                                   ((g$t$9427$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9428$sFNhI)
                                                                        (if g$ls/false$9428$sFNhI
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p$9429$sFNhI
                                                                                 g$q$9430$sFNhI)
                                                                               (g$quasicons$9402$sFNhI
                                                                                 (g$quasi$9406$sFNhI
                                                                                   g$p$9429$sFNhI
                                                                                   g$lev$9412$sFNhI)
                                                                                 (g$quasi$9406$sFNhI
                                                                                   g$q$9430$sFNhI
                                                                                   g$lev$9412$sFNhI))))
                                                                            g$ls/false$9428$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$t$9431$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9432$sFNhI)
                                                                                  (if (if g$ls/false$9432$sFNhI
                                                                                        (begin
                                                                                          '#f
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$x$9433$sFNhI)
                                                                                               (not (g$stx?$8098$sFNhI
                                                                                                      g$x$9433$sFNhI))))
                                                                                            g$ls/false$9432$sFNhI))
                                                                                        '#f)
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$x$9434$sFNhI)
                                                                                         (g$quasivector$9404$sFNhI
                                                                                           (g$vquasi$9405$sFNhI
                                                                                             g$x$9434$sFNhI
                                                                                             g$lev$9412$sFNhI))))
                                                                                      g$ls/false$9432$sFNhI)
                                                                                    ((case-lambda
                                                                                       ((g$t$9435$sFNhI)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9436$sFNhI)
                                                                                            (if g$ls/false$9436$sFNhI
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9437$sFNhI)
                                                                                                   (list
                                                                                                     (g$scheme-stx$8348$sFNhI
                                                                                                       'quote)
                                                                                                     g$p$9437$sFNhI)))
                                                                                                g$ls/false$9436$sFNhI)
                                                                                              (g$syntax-violation$8517$sFNhI
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$9435$sFNhI))))
                                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                                           g$t$9435$sFNhI
                                                                                           'any))))
                                                                                     g$t$9431$sFNhI))))
                                                                               (g$syntax-dispatch$8405$sFNhI
                                                                                 g$t$9431$sFNhI
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$9427$sFNhI))))
                                                                     (g$syntax-dispatch$8405$sFNhI
                                                                       g$t$9427$sFNhI
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$9424$sFNhI))))
                                                           (g$syntax-dispatch$8405$sFNhI
                                                             g$t$9424$sFNhI
                                                             '(#(scheme-id
                                                                 quasiquote)
                                                               any)))))
                                                       g$t$9420$sFNhI))))
                                                 (g$syntax-dispatch$8405$sFNhI
                                                   g$t$9420$sFNhI
                                                   '((#(scheme-id
                                                        unquote-splicing)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9416$sFNhI))))
                                       (g$syntax-dispatch$8405$sFNhI
                                         g$t$9416$sFNhI
                                         '((#(scheme-id unquote) . each-any)
                                           .
                                           any)))))
                                   g$t$9413$sFNhI))))
                             (g$syntax-dispatch$8405$sFNhI
                               g$t$9413$sFNhI
                               '(#(scheme-id unquote) any)))))
                         g$p$9411$sFNhI)))))
           (case-lambda
             ((g$x$9407$sFNhI)
              ((case-lambda
                 ((g$t$9408$sFNhI)
                  ((case-lambda
                     ((g$ls/false$9409$sFNhI)
                      (if g$ls/false$9409$sFNhI
                        (apply
                          (case-lambda
                            ((g$e$9410$sFNhI)
                             (g$quasi$9406$sFNhI g$e$9410$sFNhI '0)))
                          g$ls/false$9409$sFNhI)
                        (g$syntax-violation$8517$sFNhI
                          '#f
                          '"invalid syntax"
                          g$t$9408$sFNhI))))
                   (g$syntax-dispatch$8405$sFNhI g$t$9408$sFNhI '(_ any)))))
               g$x$9407$sFNhI))))))))
   (g$quasisyntax-macro$8397$sFNhI
     g$quasisyntax-macro$11915$sFNhI
     ((case-lambda
        (()
         (letrec* ((g$quasi$9517$sFNhI
                     (case-lambda
                       ((g$p$9531$sFNhI g$lev$9532$sFNhI)
                        ((case-lambda
                           ((g$t$9533$sFNhI)
                            ((case-lambda
                               ((g$ls/false$9534$sFNhI)
                                (if g$ls/false$9534$sFNhI
                                  (apply
                                    (case-lambda
                                      ((g$p$9535$sFNhI)
                                       (if (= g$lev$9532$sFNhI '0)
                                         ((case-lambda
                                            ((g$g$9536$sFNhI)
                                             (values
                                               (list g$g$9536$sFNhI)
                                               (list g$p$9535$sFNhI)
                                               g$g$9536$sFNhI)))
                                          (gensym))
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$quasi$9517$sFNhI
                                                g$p$9535$sFNhI
                                                (- g$lev$9532$sFNhI '1))))
                                           (case-lambda
                                             ((g$lhs*$9540$sFNhI
                                                g$rhs*$9541$sFNhI
                                                g$p$9542$sFNhI)
                                              ((case-lambda
                                                 ((g$p$9543$sFNhI
                                                    g$rhs*$9544$sFNhI
                                                    g$lhs*$9545$sFNhI)
                                                  (values
                                                    g$lhs*$9545$sFNhI
                                                    g$rhs*$9544$sFNhI
                                                    (list
                                                      'unsyntax
                                                      g$p$9543$sFNhI))))
                                               g$p$9542$sFNhI
                                               g$rhs*$9541$sFNhI
                                               g$lhs*$9540$sFNhI)))))))
                                    g$ls/false$9534$sFNhI)
                                  ((case-lambda
                                     ((g$t$9546$sFNhI)
                                      ((case-lambda
                                         ((g$ls/false$9547$sFNhI)
                                          (if (if g$ls/false$9547$sFNhI
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      (()
                                                       (= g$lev$9532$sFNhI '0)))
                                                    g$ls/false$9547$sFNhI))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                (()
                                                 (g$syntax-violation$8517$sFNhI
                                                   '#f
                                                   '"incorrect use of unsyntax"
                                                   g$p$9531$sFNhI)))
                                              g$ls/false$9547$sFNhI)
                                            ((case-lambda
                                               ((g$t$9548$sFNhI)
                                                ((case-lambda
                                                   ((g$ls/false$9549$sFNhI)
                                                    (if g$ls/false$9549$sFNhI
                                                      (apply
                                                        (case-lambda
                                                          ((g$p*$9550$sFNhI
                                                             g$q$9551$sFNhI)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                (g$quasi$9517$sFNhI
                                                                  g$q$9551$sFNhI
                                                                  g$lev$9532$sFNhI)))
                                                             (case-lambda
                                                               ((g$lhs*$9555$sFNhI
                                                                  g$rhs*$9556$sFNhI
                                                                  g$q$9557$sFNhI)
                                                                ((case-lambda
                                                                   ((g$q$9558$sFNhI
                                                                      g$rhs*$9559$sFNhI
                                                                      g$lhs*$9560$sFNhI)
                                                                    (if (= g$lev$9532$sFNhI
                                                                           '0)
                                                                      ((case-lambda
                                                                         ((g$g*$9561$sFNhI)
                                                                          (values
                                                                            (append
                                                                              g$g*$9561$sFNhI
                                                                              g$lhs*$9560$sFNhI)
                                                                            (append
                                                                              g$p*$9550$sFNhI
                                                                              g$rhs*$9559$sFNhI)
                                                                            (append
                                                                              g$g*$9561$sFNhI
                                                                              g$q$9558$sFNhI))))
                                                                       (g$map$5157$sFNhI
                                                                         (case-lambda
                                                                           ((g$x$9562$sFNhI)
                                                                            (gensym)))
                                                                         g$p*$9550$sFNhI))
                                                                      (call-with-values
                                                                        (case-lambda
                                                                          (()
                                                                           (g$quasi$9517$sFNhI
                                                                             g$p*$9550$sFNhI
                                                                             (- g$lev$9532$sFNhI
                                                                                '1))))
                                                                        (case-lambda
                                                                          ((g$lhs2*$9566$sFNhI
                                                                             g$rhs2*$9567$sFNhI
                                                                             g$p*$9568$sFNhI)
                                                                           ((case-lambda
                                                                              ((g$p*$9569$sFNhI
                                                                                 g$rhs2*$9570$sFNhI
                                                                                 g$lhs2*$9571$sFNhI)
                                                                               (values
                                                                                 (append
                                                                                   g$lhs2*$9571$sFNhI
                                                                                   g$lhs*$9560$sFNhI)
                                                                                 (append
                                                                                   g$rhs2*$9570$sFNhI
                                                                                   g$rhs*$9559$sFNhI)
                                                                                 (cons
                                                                                   (cons
                                                                                     'unsyntax
                                                                                     g$p*$9569$sFNhI)
                                                                                   g$q$9558$sFNhI))))
                                                                            g$p*$9568$sFNhI
                                                                            g$rhs2*$9567$sFNhI
                                                                            g$lhs2*$9566$sFNhI)))))))
                                                                 g$q$9557$sFNhI
                                                                 g$rhs*$9556$sFNhI
                                                                 g$lhs*$9555$sFNhI))))))
                                                        g$ls/false$9549$sFNhI)
                                                      ((case-lambda
                                                         ((g$t$9572$sFNhI)
                                                          ((case-lambda
                                                             ((g$ls/false$9573$sFNhI)
                                                              (if g$ls/false$9573$sFNhI
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p*$9574$sFNhI
                                                                       g$q$9575$sFNhI)
                                                                     (call-with-values
                                                                       (case-lambda
                                                                         (()
                                                                          (g$quasi$9517$sFNhI
                                                                            g$q$9575$sFNhI
                                                                            g$lev$9532$sFNhI)))
                                                                       (case-lambda
                                                                         ((g$lhs*$9579$sFNhI
                                                                            g$rhs*$9580$sFNhI
                                                                            g$q$9581$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$q$9582$sFNhI
                                                                                g$rhs*$9583$sFNhI
                                                                                g$lhs*$9584$sFNhI)
                                                                              (if (= g$lev$9532$sFNhI
                                                                                     '0)
                                                                                ((case-lambda
                                                                                   ((g$g*$9585$sFNhI)
                                                                                    (values
                                                                                      (append
                                                                                        (g$map$5157$sFNhI
                                                                                          (case-lambda
                                                                                            ((g$g$9586$sFNhI)
                                                                                             (cons
                                                                                               g$g$9586$sFNhI
                                                                                               '(...))))
                                                                                          g$g*$9585$sFNhI)
                                                                                        g$lhs*$9584$sFNhI)
                                                                                      (append
                                                                                        g$p*$9574$sFNhI
                                                                                        g$rhs*$9583$sFNhI)
                                                                                      (append
                                                                                        (apply
                                                                                          append
                                                                                          (g$map$5157$sFNhI
                                                                                            (case-lambda
                                                                                              ((g$g$9587$sFNhI)
                                                                                               (cons
                                                                                                 g$g$9587$sFNhI
                                                                                                 '(...))))
                                                                                            g$g*$9585$sFNhI))
                                                                                        g$q$9582$sFNhI))))
                                                                                 (g$map$5157$sFNhI
                                                                                   (case-lambda
                                                                                     ((g$x$9588$sFNhI)
                                                                                      (gensym)))
                                                                                   g$p*$9574$sFNhI))
                                                                                (call-with-values
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$quasi$9517$sFNhI
                                                                                       g$p*$9574$sFNhI
                                                                                       (- g$lev$9532$sFNhI
                                                                                          '1))))
                                                                                  (case-lambda
                                                                                    ((g$lhs2*$9592$sFNhI
                                                                                       g$rhs2*$9593$sFNhI
                                                                                       g$p*$9594$sFNhI)
                                                                                     ((case-lambda
                                                                                        ((g$p*$9595$sFNhI
                                                                                           g$rhs2*$9596$sFNhI
                                                                                           g$lhs2*$9597$sFNhI)
                                                                                         (values
                                                                                           (append
                                                                                             g$lhs2*$9597$sFNhI
                                                                                             g$lhs*$9584$sFNhI)
                                                                                           (append
                                                                                             g$rhs2*$9596$sFNhI
                                                                                             g$rhs*$9583$sFNhI)
                                                                                           (cons
                                                                                             (cons
                                                                                               'unsyntax-splicing
                                                                                               g$p*$9595$sFNhI)
                                                                                             g$q$9582$sFNhI))))
                                                                                      g$p*$9594$sFNhI
                                                                                      g$rhs2*$9593$sFNhI
                                                                                      g$lhs2*$9592$sFNhI)))))))
                                                                           g$q$9581$sFNhI
                                                                           g$rhs*$9580$sFNhI
                                                                           g$lhs*$9579$sFNhI))))))
                                                                  g$ls/false$9573$sFNhI)
                                                                ((case-lambda
                                                                   ((g$t$9598$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$ls/false$9599$sFNhI)
                                                                        (if (if g$ls/false$9599$sFNhI
                                                                              (begin
                                                                                '#f
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (= g$lev$9532$sFNhI
                                                                                        '0)))
                                                                                  g$ls/false$9599$sFNhI))
                                                                              '#f)
                                                                          (apply
                                                                            (case-lambda
                                                                              (()
                                                                               (g$syntax-violation$8517$sFNhI
                                                                                 '#f
                                                                                 '"incorrect use of unsyntax-splicing"
                                                                                 g$p$9531$sFNhI)))
                                                                            g$ls/false$9599$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$t$9600$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$9601$sFNhI)
                                                                                  (if g$ls/false$9601$sFNhI
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p$9602$sFNhI)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$quasi$9517$sFNhI
                                                                                                g$p$9602$sFNhI
                                                                                                (+ g$lev$9532$sFNhI
                                                                                                   '1))))
                                                                                           (case-lambda
                                                                                             ((g$lhs*$9606$sFNhI
                                                                                                g$rhs*$9607$sFNhI
                                                                                                g$p$9608$sFNhI)
                                                                                              ((case-lambda
                                                                                                 ((g$p$9609$sFNhI
                                                                                                    g$rhs*$9610$sFNhI
                                                                                                    g$lhs*$9611$sFNhI)
                                                                                                  (values
                                                                                                    g$lhs*$9611$sFNhI
                                                                                                    g$rhs*$9610$sFNhI
                                                                                                    (list
                                                                                                      'quasisyntax
                                                                                                      g$p$9609$sFNhI))))
                                                                                               g$p$9608$sFNhI
                                                                                               g$rhs*$9607$sFNhI
                                                                                               g$lhs*$9606$sFNhI))))))
                                                                                      g$ls/false$9601$sFNhI)
                                                                                    ((case-lambda
                                                                                       ((g$t$9612$sFNhI)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$9613$sFNhI)
                                                                                            (if g$ls/false$9613$sFNhI
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p$9614$sFNhI
                                                                                                     g$q$9615$sFNhI)
                                                                                                   (call-with-values
                                                                                                     (case-lambda
                                                                                                       (()
                                                                                                        (g$quasi$9517$sFNhI
                                                                                                          g$p$9614$sFNhI
                                                                                                          g$lev$9532$sFNhI)))
                                                                                                     (case-lambda
                                                                                                       ((g$lhs*$9622$sFNhI
                                                                                                          g$rhs*$9623$sFNhI
                                                                                                          g$p$9624$sFNhI)
                                                                                                        (call-with-values
                                                                                                          (case-lambda
                                                                                                            (()
                                                                                                             (g$quasi$9517$sFNhI
                                                                                                               g$q$9615$sFNhI
                                                                                                               g$lev$9532$sFNhI)))
                                                                                                          (case-lambda
                                                                                                            ((g$lhs2*$9625$sFNhI
                                                                                                               g$rhs2*$9626$sFNhI
                                                                                                               g$q$9627$sFNhI)
                                                                                                             ((case-lambda
                                                                                                                ((g$q$9628$sFNhI
                                                                                                                   g$rhs2*$9629$sFNhI
                                                                                                                   g$lhs2*$9630$sFNhI
                                                                                                                   g$p$9631$sFNhI
                                                                                                                   g$rhs*$9632$sFNhI
                                                                                                                   g$lhs*$9633$sFNhI)
                                                                                                                 (values
                                                                                                                   (append
                                                                                                                     g$lhs2*$9630$sFNhI
                                                                                                                     g$lhs*$9633$sFNhI)
                                                                                                                   (append
                                                                                                                     g$rhs2*$9629$sFNhI
                                                                                                                     g$rhs*$9632$sFNhI)
                                                                                                                   (cons
                                                                                                                     g$p$9631$sFNhI
                                                                                                                     g$q$9628$sFNhI))))
                                                                                                              g$q$9627$sFNhI
                                                                                                              g$rhs2*$9626$sFNhI
                                                                                                              g$lhs2*$9625$sFNhI
                                                                                                              g$p$9624$sFNhI
                                                                                                              g$rhs*$9623$sFNhI
                                                                                                              g$lhs*$9622$sFNhI)))))))))
                                                                                                g$ls/false$9613$sFNhI)
                                                                                              ((case-lambda
                                                                                                 ((g$t$9634$sFNhI)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$9635$sFNhI)
                                                                                                      (if g$ls/false$9635$sFNhI
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$x*$9636$sFNhI)
                                                                                                             (call-with-values
                                                                                                               (case-lambda
                                                                                                                 (()
                                                                                                                  (g$quasi$9517$sFNhI
                                                                                                                    g$x*$9636$sFNhI
                                                                                                                    g$lev$9532$sFNhI)))
                                                                                                               (case-lambda
                                                                                                                 ((g$lhs*$9640$sFNhI
                                                                                                                    g$rhs*$9641$sFNhI
                                                                                                                    g$x*$9642$sFNhI)
                                                                                                                  ((case-lambda
                                                                                                                     ((g$x*$9643$sFNhI
                                                                                                                        g$rhs*$9644$sFNhI
                                                                                                                        g$lhs*$9645$sFNhI)
                                                                                                                      (values
                                                                                                                        g$lhs*$9645$sFNhI
                                                                                                                        g$rhs*$9644$sFNhI
                                                                                                                        (g$list->vector$5640$sFNhI
                                                                                                                          g$x*$9643$sFNhI))))
                                                                                                                   g$x*$9642$sFNhI
                                                                                                                   g$rhs*$9641$sFNhI
                                                                                                                   g$lhs*$9640$sFNhI))))))
                                                                                                          g$ls/false$9635$sFNhI)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$9646$sFNhI)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$9647$sFNhI)
                                                                                                                (if g$ls/false$9647$sFNhI
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (values
                                                                                                                         '()
                                                                                                                         '()
                                                                                                                         g$p$9531$sFNhI)))
                                                                                                                    g$ls/false$9647$sFNhI)
                                                                                                                  (g$syntax-violation$8517$sFNhI
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$9646$sFNhI))))
                                                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                                                               g$t$9646$sFNhI
                                                                                                               '_))))
                                                                                                         g$t$9634$sFNhI))))
                                                                                                   (g$syntax-dispatch$8405$sFNhI
                                                                                                     g$t$9634$sFNhI
                                                                                                     '#(vector
                                                                                                        each-any)))))
                                                                                               g$t$9612$sFNhI))))
                                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                                           g$t$9612$sFNhI
                                                                                           '(any .
                                                                                                 any)))))
                                                                                     g$t$9600$sFNhI))))
                                                                               (g$syntax-dispatch$8405$sFNhI
                                                                                 g$t$9600$sFNhI
                                                                                 '(#(scheme-id
                                                                                     quasisyntax)
                                                                                   any)))))
                                                                           g$t$9598$sFNhI))))
                                                                     (g$syntax-dispatch$8405$sFNhI
                                                                       g$t$9598$sFNhI
                                                                       '#(scheme-id
                                                                          unsyntax-splicing)))))
                                                                 g$t$9572$sFNhI))))
                                                           (g$syntax-dispatch$8405$sFNhI
                                                             g$t$9572$sFNhI
                                                             '((#(scheme-id
                                                                  unsyntax-splicing)
                                                                .
                                                                each-any)
                                                               .
                                                               any)))))
                                                       g$t$9548$sFNhI))))
                                                 (g$syntax-dispatch$8405$sFNhI
                                                   g$t$9548$sFNhI
                                                   '((#(scheme-id unsyntax)
                                                      .
                                                      each-any)
                                                     .
                                                     any)))))
                                             g$t$9546$sFNhI))))
                                       (g$syntax-dispatch$8405$sFNhI
                                         g$t$9546$sFNhI
                                         '#(scheme-id unsyntax)))))
                                   g$t$9533$sFNhI))))
                             (g$syntax-dispatch$8405$sFNhI
                               g$t$9533$sFNhI
                               '(#(scheme-id unsyntax) any)))))
                         g$p$9531$sFNhI)))))
           (case-lambda
             ((g$x$9518$sFNhI)
              ((case-lambda
                 ((g$t$9519$sFNhI)
                  ((case-lambda
                     ((g$ls/false$9520$sFNhI)
                      (if g$ls/false$9520$sFNhI
                        (apply
                          (case-lambda
                            ((g$e$9521$sFNhI)
                             (call-with-values
                               (case-lambda
                                 (() (g$quasi$9517$sFNhI g$e$9521$sFNhI '0)))
                               (case-lambda
                                 ((g$lhs*$9525$sFNhI
                                    g$rhs*$9526$sFNhI
                                    g$v$9527$sFNhI)
                                  ((case-lambda
                                     ((g$v$9528$sFNhI
                                        g$rhs*$9529$sFNhI
                                        g$lhs*$9530$sFNhI)
                                      (g$bless$8368$sFNhI
                                        (list
                                          'syntax-case
                                          (cons 'list g$rhs*$9529$sFNhI)
                                          '()
                                          (list
                                            g$lhs*$9530$sFNhI
                                            (list 'syntax g$v$9528$sFNhI))))))
                                   g$v$9527$sFNhI
                                   g$rhs*$9526$sFNhI
                                   g$lhs*$9525$sFNhI))))))
                          g$ls/false$9520$sFNhI)
                        (g$syntax-violation$8517$sFNhI
                          '#f
                          '"invalid syntax"
                          g$t$9519$sFNhI))))
                   (g$syntax-dispatch$8405$sFNhI g$t$9519$sFNhI '(_ any)))))
               g$x$9518$sFNhI))))))))
   (g$define-struct-macro$8398$sFNhI
     g$define-struct-macro$11916$sFNhI
     (case-lambda
       ((g$stx$9648$sFNhI)
        (g$syntax-violation$8517$sFNhI
          '#f
          '"define-struct not supported"
          g$stx$9648$sFNhI))))
   (g$define-record-type-macro$8399$sFNhI
     g$define-record-type-macro$11917$sFNhI
     (case-lambda
       ((g$x$9649$sFNhI)
        (letrec* ((g$id$9650$sFNhI
                    (case-lambda
                      ((g$ctxt$9902$sFNhI . g$str*$9903$sFNhI)
                       (g$datum->syntax$8519$sFNhI
                         g$ctxt$9902$sFNhI
                         (string->symbol
                           (apply
                             string-append
                             (g$map$5157$sFNhI
                               (case-lambda
                                 ((g$x$9904$sFNhI)
                                  (if (g$symbol?$5645$sFNhI g$x$9904$sFNhI)
                                    (symbol->string g$x$9904$sFNhI)
                                    (if (string? g$x$9904$sFNhI)
                                      g$x$9904$sFNhI
                                      (assertion-violation
                                        'define-record-type
                                        '"BUG")))))
                               g$str*$9903$sFNhI)))))))
                  (g$get-record-name$9651$sFNhI
                    (case-lambda
                      ((g$spec$9893$sFNhI)
                       ((case-lambda
                          ((g$t$9894$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9895$sFNhI)
                               (if g$ls/false$9895$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$foo$9896$sFNhI
                                        g$make-foo$9897$sFNhI
                                        g$foo?$9898$sFNhI)
                                      g$foo$9896$sFNhI))
                                   g$ls/false$9895$sFNhI)
                                 ((case-lambda
                                    ((g$t$9899$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9900$sFNhI)
                                         (if g$ls/false$9900$sFNhI
                                           (apply
                                             (case-lambda
                                               ((g$foo$9901$sFNhI)
                                                g$foo$9901$sFNhI))
                                             g$ls/false$9900$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$9899$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9899$sFNhI
                                        'any))))
                                  g$t$9894$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9894$sFNhI
                              '(any any any)))))
                        g$spec$9893$sFNhI))))
                  (g$get-record-constructor-name$9652$sFNhI
                    (case-lambda
                      ((g$spec$9883$sFNhI)
                       ((case-lambda
                          ((g$t$9884$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9885$sFNhI)
                               (if g$ls/false$9885$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$foo$9886$sFNhI
                                        g$make-foo$9887$sFNhI
                                        g$foo?$9888$sFNhI)
                                      g$make-foo$9887$sFNhI))
                                   g$ls/false$9885$sFNhI)
                                 ((case-lambda
                                    ((g$t$9889$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9890$sFNhI)
                                         (if (if g$ls/false$9890$sFNhI
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9891$sFNhI)
                                                      (g$id?$8126$sFNhI
                                                        g$foo$9891$sFNhI)))
                                                   g$ls/false$9890$sFNhI))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9892$sFNhI)
                                                (g$id$9650$sFNhI
                                                  g$foo$9892$sFNhI
                                                  '"make-"
                                                  (g$stx->datum$8137$sFNhI
                                                    g$foo$9892$sFNhI))))
                                             g$ls/false$9890$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$9889$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9889$sFNhI
                                        'any))))
                                  g$t$9884$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9884$sFNhI
                              '(any any any)))))
                        g$spec$9883$sFNhI))))
                  (g$get-record-predicate-name$9653$sFNhI
                    (case-lambda
                      ((g$spec$9873$sFNhI)
                       ((case-lambda
                          ((g$t$9874$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9875$sFNhI)
                               (if g$ls/false$9875$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$foo$9876$sFNhI
                                        g$make-foo$9877$sFNhI
                                        g$foo?$9878$sFNhI)
                                      g$foo?$9878$sFNhI))
                                   g$ls/false$9875$sFNhI)
                                 ((case-lambda
                                    ((g$t$9879$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9880$sFNhI)
                                         (if (if g$ls/false$9880$sFNhI
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$foo$9881$sFNhI)
                                                      (g$id?$8126$sFNhI
                                                        g$foo$9881$sFNhI)))
                                                   g$ls/false$9880$sFNhI))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$foo$9882$sFNhI)
                                                (g$id$9650$sFNhI
                                                  g$foo$9882$sFNhI
                                                  (g$stx->datum$8137$sFNhI
                                                    g$foo$9882$sFNhI)
                                                  '"?")))
                                             g$ls/false$9880$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$9879$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9879$sFNhI
                                        'any))))
                                  g$t$9874$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9874$sFNhI
                              '(any any any)))))
                        g$spec$9873$sFNhI))))
                  (g$get-clause$9654$sFNhI
                    (case-lambda
                      ((g$id$9864$sFNhI g$ls$9865$sFNhI)
                       ((case-lambda
                          ((g$t$9866$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9867$sFNhI)
                               (if g$ls/false$9867$sFNhI
                                 (apply
                                   (case-lambda (() '#f))
                                   g$ls/false$9867$sFNhI)
                                 ((case-lambda
                                    ((g$t$9868$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9869$sFNhI)
                                         (if g$ls/false$9869$sFNhI
                                           (apply
                                             (case-lambda
                                               ((g$x$9870$sFNhI
                                                  g$rest$9871$sFNhI
                                                  g$ls$9872$sFNhI)
                                                (if (g$free-id=?$8130$sFNhI
                                                      (g$bless$8368$sFNhI
                                                        g$id$9864$sFNhI)
                                                      g$x$9870$sFNhI)
                                                  (cons
                                                    g$x$9870$sFNhI
                                                    g$rest$9871$sFNhI)
                                                  (g$get-clause$9654$sFNhI
                                                    g$id$9864$sFNhI
                                                    g$ls$9872$sFNhI))))
                                             g$ls/false$9869$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$9868$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9868$sFNhI
                                        '((any . any) . any)))))
                                  g$t$9866$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI g$t$9866$sFNhI '()))))
                        g$ls$9865$sFNhI))))
                  (g$foo-rtd-code$9655$sFNhI
                    (case-lambda
                      ((g$name$9823$sFNhI
                         g$clause*$9824$sFNhI
                         g$parent-rtd-code$9825$sFNhI)
                       (letrec* ((g$convert-field-spec*$9826$sFNhI
                                   (case-lambda
                                     ((g$ls$9851$sFNhI)
                                      (g$list->vector$5640$sFNhI
                                        (g$map$5157$sFNhI
                                          (case-lambda
                                            ((g$x$9852$sFNhI)
                                             ((case-lambda
                                                ((g$t$9853$sFNhI)
                                                 ((case-lambda
                                                    ((g$ls/false$9854$sFNhI)
                                                     (if g$ls/false$9854$sFNhI
                                                       (apply
                                                         (case-lambda
                                                           ((g$name$9855$sFNhI
                                                              g$rest$9856$sFNhI)
                                                            (list
                                                              'mutable
                                                              g$name$9855$sFNhI)))
                                                         g$ls/false$9854$sFNhI)
                                                       ((case-lambda
                                                          ((g$t$9857$sFNhI)
                                                           ((case-lambda
                                                              ((g$ls/false$9858$sFNhI)
                                                               (if g$ls/false$9858$sFNhI
                                                                 (apply
                                                                   (case-lambda
                                                                     ((g$name$9859$sFNhI
                                                                        g$rest$9860$sFNhI)
                                                                      (list
                                                                        'immutable
                                                                        g$name$9859$sFNhI)))
                                                                   g$ls/false$9858$sFNhI)
                                                                 ((case-lambda
                                                                    ((g$t$9861$sFNhI)
                                                                     ((case-lambda
                                                                        ((g$ls/false$9862$sFNhI)
                                                                         (if g$ls/false$9862$sFNhI
                                                                           (apply
                                                                             (case-lambda
                                                                               ((g$name$9863$sFNhI)
                                                                                (list
                                                                                  'immutable
                                                                                  g$name$9863$sFNhI)))
                                                                             g$ls/false$9862$sFNhI)
                                                                           (g$syntax-violation$8517$sFNhI
                                                                             '#f
                                                                             '"invalid syntax"
                                                                             g$t$9861$sFNhI))))
                                                                      (g$syntax-dispatch$8405$sFNhI
                                                                        g$t$9861$sFNhI
                                                                        'any))))
                                                                  g$t$9857$sFNhI))))
                                                            (g$syntax-dispatch$8405$sFNhI
                                                              g$t$9857$sFNhI
                                                              '(#(scheme-id
                                                                  immutable)
                                                                any
                                                                .
                                                                any)))))
                                                        g$t$9853$sFNhI))))
                                                  (g$syntax-dispatch$8405$sFNhI
                                                    g$t$9853$sFNhI
                                                    '(#(scheme-id mutable)
                                                      any
                                                      .
                                                      any)))))
                                              g$x$9852$sFNhI)))
                                          g$ls$9851$sFNhI))))))
                         ((case-lambda
                            ((g$uid-code$9827$sFNhI
                               g$sealed?$9828$sFNhI
                               g$opaque?$9829$sFNhI
                               g$fields$9830$sFNhI)
                             (g$bless$8368$sFNhI
                               (list
                                 'make-record-type-descriptor
                                 (list 'quote g$name$9823$sFNhI)
                                 g$parent-rtd-code$9825$sFNhI
                                 g$uid-code$9827$sFNhI
                                 g$sealed?$9828$sFNhI
                                 g$opaque?$9829$sFNhI
                                 g$fields$9830$sFNhI))))
                          ((case-lambda
                             ((g$t$9831$sFNhI)
                              ((case-lambda
                                 ((g$ls/false$9832$sFNhI)
                                  (if g$ls/false$9832$sFNhI
                                    (apply
                                      (case-lambda (() (list 'quote (gensym))))
                                      g$ls/false$9832$sFNhI)
                                    ((case-lambda
                                       ((g$t$9833$sFNhI)
                                        ((case-lambda
                                           ((g$ls/false$9834$sFNhI)
                                            (if g$ls/false$9834$sFNhI
                                              (apply
                                                (case-lambda
                                                  ((g$uid$9835$sFNhI)
                                                   (list
                                                     'quote
                                                     g$uid$9835$sFNhI)))
                                                g$ls/false$9834$sFNhI)
                                              ((case-lambda
                                                 ((g$t$9836$sFNhI)
                                                  ((case-lambda
                                                     ((g$ls/false$9837$sFNhI)
                                                      (if g$ls/false$9837$sFNhI
                                                        (apply
                                                          (case-lambda (() '#f))
                                                          g$ls/false$9837$sFNhI)
                                                        (g$syntax-violation$8517$sFNhI
                                                          '#f
                                                          '"invalid syntax"
                                                          g$t$9836$sFNhI))))
                                                   (g$syntax-dispatch$8405$sFNhI
                                                     g$t$9836$sFNhI
                                                     '_))))
                                               g$t$9833$sFNhI))))
                                         (g$syntax-dispatch$8405$sFNhI
                                           g$t$9833$sFNhI
                                           '(_ any)))))
                                     g$t$9831$sFNhI))))
                               (g$syntax-dispatch$8405$sFNhI
                                 g$t$9831$sFNhI
                                 '(_)))))
                           (g$get-clause$9654$sFNhI
                             'nongenerative
                             g$clause*$9824$sFNhI))
                          ((case-lambda
                             ((g$t$9838$sFNhI)
                              ((case-lambda
                                 ((g$ls/false$9839$sFNhI)
                                  (if g$ls/false$9839$sFNhI
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9839$sFNhI)
                                    ((case-lambda
                                       ((g$t$9840$sFNhI)
                                        ((case-lambda
                                           ((g$ls/false$9841$sFNhI)
                                            (if g$ls/false$9841$sFNhI
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9841$sFNhI)
                                              (g$syntax-violation$8517$sFNhI
                                                '#f
                                                '"invalid syntax"
                                                g$t$9840$sFNhI))))
                                         (g$syntax-dispatch$8405$sFNhI
                                           g$t$9840$sFNhI
                                           '_))))
                                     g$t$9838$sFNhI))))
                               (g$syntax-dispatch$8405$sFNhI
                                 g$t$9838$sFNhI
                                 '(_ #(atom #t))))))
                           (g$get-clause$9654$sFNhI
                             'sealed
                             g$clause*$9824$sFNhI))
                          ((case-lambda
                             ((g$t$9842$sFNhI)
                              ((case-lambda
                                 ((g$ls/false$9843$sFNhI)
                                  (if g$ls/false$9843$sFNhI
                                    (apply
                                      (case-lambda (() '#t))
                                      g$ls/false$9843$sFNhI)
                                    ((case-lambda
                                       ((g$t$9844$sFNhI)
                                        ((case-lambda
                                           ((g$ls/false$9845$sFNhI)
                                            (if g$ls/false$9845$sFNhI
                                              (apply
                                                (case-lambda (() '#f))
                                                g$ls/false$9845$sFNhI)
                                              (g$syntax-violation$8517$sFNhI
                                                '#f
                                                '"invalid syntax"
                                                g$t$9844$sFNhI))))
                                         (g$syntax-dispatch$8405$sFNhI
                                           g$t$9844$sFNhI
                                           '_))))
                                     g$t$9842$sFNhI))))
                               (g$syntax-dispatch$8405$sFNhI
                                 g$t$9842$sFNhI
                                 '(_ #(atom #t))))))
                           (g$get-clause$9654$sFNhI
                             'opaque
                             g$clause*$9824$sFNhI))
                          ((case-lambda
                             ((g$t$9846$sFNhI)
                              ((case-lambda
                                 ((g$ls/false$9847$sFNhI)
                                  (if g$ls/false$9847$sFNhI
                                    (apply
                                      (case-lambda
                                        ((g$field-spec*$9848$sFNhI)
                                         (list
                                           'quote
                                           (g$convert-field-spec*$9826$sFNhI
                                             g$field-spec*$9848$sFNhI))))
                                      g$ls/false$9847$sFNhI)
                                    ((case-lambda
                                       ((g$t$9849$sFNhI)
                                        ((case-lambda
                                           ((g$ls/false$9850$sFNhI)
                                            (if g$ls/false$9850$sFNhI
                                              (apply
                                                (case-lambda (() ''#()))
                                                g$ls/false$9850$sFNhI)
                                              (g$syntax-violation$8517$sFNhI
                                                '#f
                                                '"invalid syntax"
                                                g$t$9849$sFNhI))))
                                         (g$syntax-dispatch$8405$sFNhI
                                           g$t$9849$sFNhI
                                           '_))))
                                     g$t$9846$sFNhI))))
                               (g$syntax-dispatch$8405$sFNhI
                                 g$t$9846$sFNhI
                                 '(_ . each-any)))))
                           (g$get-clause$9654$sFNhI
                             'fields
                             g$clause*$9824$sFNhI)))))))
                  (g$parent-rtd-code$9656$sFNhI
                    (case-lambda
                      ((g$clause*$9811$sFNhI)
                       ((case-lambda
                          ((g$t$9812$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9813$sFNhI)
                               (if g$ls/false$9813$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$name$9814$sFNhI)
                                      (list
                                        'record-type-descriptor
                                        g$name$9814$sFNhI)))
                                   g$ls/false$9813$sFNhI)
                                 ((case-lambda
                                    ((g$t$9815$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9816$sFNhI)
                                         (if g$ls/false$9816$sFNhI
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9817$sFNhI)
                                                    ((case-lambda
                                                       ((g$ls/false$9818$sFNhI)
                                                        (if g$ls/false$9818$sFNhI
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9819$sFNhI
                                                                 g$rcd$9820$sFNhI)
                                                               g$rtd$9819$sFNhI))
                                                            g$ls/false$9818$sFNhI)
                                                          ((case-lambda
                                                             ((g$t$9821$sFNhI)
                                                              ((case-lambda
                                                                 ((g$ls/false$9822$sFNhI)
                                                                  (if g$ls/false$9822$sFNhI
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9822$sFNhI)
                                                                    (g$syntax-violation$8517$sFNhI
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9821$sFNhI))))
                                                               (g$syntax-dispatch$8405$sFNhI
                                                                 g$t$9821$sFNhI
                                                                 '#(atom #f)))))
                                                           g$t$9817$sFNhI))))
                                                     (g$syntax-dispatch$8405$sFNhI
                                                       g$t$9817$sFNhI
                                                       '(_ any any)))))
                                                 (g$get-clause$9654$sFNhI
                                                   'parent-rtd
                                                   g$clause*$9811$sFNhI))))
                                             g$ls/false$9816$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$9815$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9815$sFNhI
                                        '#(atom #f)))))
                                  g$t$9812$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9812$sFNhI
                              '(_ any)))))
                        (g$get-clause$9654$sFNhI
                          'parent
                          g$clause*$9811$sFNhI)))))
                  (g$parent-rcd-code$9657$sFNhI
                    (case-lambda
                      ((g$clause*$9799$sFNhI)
                       ((case-lambda
                          ((g$t$9800$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9801$sFNhI)
                               (if g$ls/false$9801$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$name$9802$sFNhI)
                                      (list
                                        'record-constructor-descriptor
                                        g$name$9802$sFNhI)))
                                   g$ls/false$9801$sFNhI)
                                 ((case-lambda
                                    ((g$t$9803$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9804$sFNhI)
                                         (if g$ls/false$9804$sFNhI
                                           (apply
                                             (case-lambda
                                               (()
                                                ((case-lambda
                                                   ((g$t$9805$sFNhI)
                                                    ((case-lambda
                                                       ((g$ls/false$9806$sFNhI)
                                                        (if g$ls/false$9806$sFNhI
                                                          (apply
                                                            (case-lambda
                                                              ((g$rtd$9807$sFNhI
                                                                 g$rcd$9808$sFNhI)
                                                               g$rcd$9808$sFNhI))
                                                            g$ls/false$9806$sFNhI)
                                                          ((case-lambda
                                                             ((g$t$9809$sFNhI)
                                                              ((case-lambda
                                                                 ((g$ls/false$9810$sFNhI)
                                                                  (if g$ls/false$9810$sFNhI
                                                                    (apply
                                                                      (case-lambda
                                                                        (()
                                                                         '#f))
                                                                      g$ls/false$9810$sFNhI)
                                                                    (g$syntax-violation$8517$sFNhI
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9809$sFNhI))))
                                                               (g$syntax-dispatch$8405$sFNhI
                                                                 g$t$9809$sFNhI
                                                                 '#(atom #f)))))
                                                           g$t$9805$sFNhI))))
                                                     (g$syntax-dispatch$8405$sFNhI
                                                       g$t$9805$sFNhI
                                                       '(_ any any)))))
                                                 (g$get-clause$9654$sFNhI
                                                   'parent-rtd
                                                   g$clause*$9799$sFNhI))))
                                             g$ls/false$9804$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$9803$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9803$sFNhI
                                        '#(atom #f)))))
                                  g$t$9800$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9800$sFNhI
                              '(_ any)))))
                        (g$get-clause$9654$sFNhI
                          'parent
                          g$clause*$9799$sFNhI)))))
                  (g$foo-rcd-code$9658$sFNhI
                    (case-lambda
                      ((g$clause*$9795$sFNhI
                         g$foo-rtd$9796$sFNhI
                         g$protocol$9797$sFNhI
                         g$parent-rcd-code$9798$sFNhI)
                       (list
                         'make-record-constructor-descriptor
                         g$foo-rtd$9796$sFNhI
                         g$parent-rcd-code$9798$sFNhI
                         g$protocol$9797$sFNhI))))
                  (g$get-protocol-code$9659$sFNhI
                    (case-lambda
                      ((g$clause*$9789$sFNhI)
                       ((case-lambda
                          ((g$t$9790$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9791$sFNhI)
                               (if g$ls/false$9791$sFNhI
                                 (apply
                                   (case-lambda
                                     ((g$expr$9792$sFNhI) g$expr$9792$sFNhI))
                                   g$ls/false$9791$sFNhI)
                                 ((case-lambda
                                    ((g$t$9793$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9794$sFNhI)
                                         (if g$ls/false$9794$sFNhI
                                           (apply
                                             (case-lambda (() '#f))
                                             g$ls/false$9794$sFNhI)
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$t$9793$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9793$sFNhI
                                        '_))))
                                  g$t$9790$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9790$sFNhI
                              '(_ any)))))
                        (g$get-clause$9654$sFNhI
                          'protocol
                          g$clause*$9789$sFNhI)))))
                  (g$get-fields$9660$sFNhI
                    (case-lambda
                      ((g$clause*$9780$sFNhI)
                       ((case-lambda
                          ((g$t$9781$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9782$sFNhI)
                               (if g$ls/false$9782$sFNhI
                                 (apply
                                   (case-lambda (() '()))
                                   g$ls/false$9782$sFNhI)
                                 ((case-lambda
                                    ((g$t$9783$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9784$sFNhI)
                                         (if g$ls/false$9784$sFNhI
                                           (apply
                                             (case-lambda
                                               ((g$f*$9785$sFNhI)
                                                g$f*$9785$sFNhI))
                                             g$ls/false$9784$sFNhI)
                                           ((case-lambda
                                              ((g$t$9786$sFNhI)
                                               ((case-lambda
                                                  ((g$ls/false$9787$sFNhI)
                                                   (if g$ls/false$9787$sFNhI
                                                     (apply
                                                       (case-lambda
                                                         ((g$rest$9788$sFNhI)
                                                          (g$get-fields$9660$sFNhI
                                                            g$rest$9788$sFNhI)))
                                                       g$ls/false$9787$sFNhI)
                                                     (g$syntax-violation$8517$sFNhI
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$9786$sFNhI))))
                                                (g$syntax-dispatch$8405$sFNhI
                                                  g$t$9786$sFNhI
                                                  '(_ . any)))))
                                            g$t$9783$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9783$sFNhI
                                        '((#(scheme-id fields) . each-any)
                                          .
                                          _)))))
                                  g$t$9781$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI g$t$9781$sFNhI '()))))
                        g$clause*$9780$sFNhI))))
                  (g$get-mutator-indices$9661$sFNhI
                    (case-lambda
                      ((g$fields$9768$sFNhI)
                       ((letrec ((g$f$9769$sFNhI
                                   (case-lambda
                                     ((g$fields$9770$sFNhI g$i$9771$sFNhI)
                                      ((case-lambda
                                         ((g$t$9772$sFNhI)
                                          ((case-lambda
                                             ((g$ls/false$9773$sFNhI)
                                              (if g$ls/false$9773$sFNhI
                                                (apply
                                                  (case-lambda (() '()))
                                                  g$ls/false$9773$sFNhI)
                                                ((case-lambda
                                                   ((g$t$9774$sFNhI)
                                                    ((case-lambda
                                                       ((g$ls/false$9775$sFNhI)
                                                        (if g$ls/false$9775$sFNhI
                                                          (apply
                                                            (case-lambda
                                                              ((g$rest$9776$sFNhI)
                                                               (cons
                                                                 g$i$9771$sFNhI
                                                                 (g$f$9769$sFNhI
                                                                   g$rest$9776$sFNhI
                                                                   (+ g$i$9771$sFNhI
                                                                      '1)))))
                                                            g$ls/false$9775$sFNhI)
                                                          ((case-lambda
                                                             ((g$t$9777$sFNhI)
                                                              ((case-lambda
                                                                 ((g$ls/false$9778$sFNhI)
                                                                  (if g$ls/false$9778$sFNhI
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$rest$9779$sFNhI)
                                                                         (g$f$9769$sFNhI
                                                                           g$rest$9779$sFNhI
                                                                           (+ g$i$9771$sFNhI
                                                                              '1))))
                                                                      g$ls/false$9778$sFNhI)
                                                                    (g$syntax-violation$8517$sFNhI
                                                                      '#f
                                                                      '"invalid syntax"
                                                                      g$t$9777$sFNhI))))
                                                               (g$syntax-dispatch$8405$sFNhI
                                                                 g$t$9777$sFNhI
                                                                 '(_ . any)))))
                                                           g$t$9774$sFNhI))))
                                                     (g$syntax-dispatch$8405$sFNhI
                                                       g$t$9774$sFNhI
                                                       '((#(scheme-id mutable)
                                                          .
                                                          _)
                                                         .
                                                         any)))))
                                                 g$t$9772$sFNhI))))
                                           (g$syntax-dispatch$8405$sFNhI
                                             g$t$9772$sFNhI
                                             '()))))
                                       g$fields$9770$sFNhI)))))
                          g$f$9769$sFNhI)
                        g$fields$9768$sFNhI
                        '0))))
                  (g$get-mutators$9662$sFNhI
                    (case-lambda
                      ((g$foo$9747$sFNhI g$fields$9748$sFNhI)
                       (letrec* ((g$gen-name$9749$sFNhI
                                   (case-lambda
                                     ((g$x$9767$sFNhI)
                                      (g$datum->syntax$8519$sFNhI
                                        g$foo$9747$sFNhI
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8520$sFNhI
                                                g$foo$9747$sFNhI))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8520$sFNhI
                                                g$x$9767$sFNhI))
                                            '"-set!")))))))
                         ((letrec ((g$f$9750$sFNhI
                                     (case-lambda
                                       ((g$fields$9751$sFNhI)
                                        ((case-lambda
                                           ((g$t$9752$sFNhI)
                                            ((case-lambda
                                               ((g$ls/false$9753$sFNhI)
                                                (if g$ls/false$9753$sFNhI
                                                  (apply
                                                    (case-lambda (() '()))
                                                    g$ls/false$9753$sFNhI)
                                                  ((case-lambda
                                                     ((g$t$9754$sFNhI)
                                                      ((case-lambda
                                                         ((g$ls/false$9755$sFNhI)
                                                          (if g$ls/false$9755$sFNhI
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9756$sFNhI
                                                                   g$accessor$9757$sFNhI
                                                                   g$mutator$9758$sFNhI
                                                                   g$rest$9759$sFNhI)
                                                                 (cons
                                                                   g$mutator$9758$sFNhI
                                                                   (g$f$9750$sFNhI
                                                                     g$rest$9759$sFNhI))))
                                                              g$ls/false$9755$sFNhI)
                                                            ((case-lambda
                                                               ((g$t$9760$sFNhI)
                                                                ((case-lambda
                                                                   ((g$ls/false$9761$sFNhI)
                                                                    (if g$ls/false$9761$sFNhI
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9762$sFNhI
                                                                             g$rest$9763$sFNhI)
                                                                           (cons
                                                                             (g$gen-name$9749$sFNhI
                                                                               g$name$9762$sFNhI)
                                                                             (g$f$9750$sFNhI
                                                                               g$rest$9763$sFNhI))))
                                                                        g$ls/false$9761$sFNhI)
                                                                      ((case-lambda
                                                                         ((g$t$9764$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9765$sFNhI)
                                                                              (if g$ls/false$9765$sFNhI
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$rest$9766$sFNhI)
                                                                                     (g$f$9750$sFNhI
                                                                                       g$rest$9766$sFNhI)))
                                                                                  g$ls/false$9765$sFNhI)
                                                                                (g$syntax-violation$8517$sFNhI
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$9764$sFNhI))))
                                                                           (g$syntax-dispatch$8405$sFNhI
                                                                             g$t$9764$sFNhI
                                                                             '(_ .
                                                                                 any)))))
                                                                       g$t$9760$sFNhI))))
                                                                 (g$syntax-dispatch$8405$sFNhI
                                                                   g$t$9760$sFNhI
                                                                   '((#(scheme-id
                                                                        mutable)
                                                                      any)
                                                                     .
                                                                     any)))))
                                                             g$t$9754$sFNhI))))
                                                       (g$syntax-dispatch$8405$sFNhI
                                                         g$t$9754$sFNhI
                                                         '((#(scheme-id mutable)
                                                            any
                                                            any
                                                            any)
                                                           .
                                                           any)))))
                                                   g$t$9752$sFNhI))))
                                             (g$syntax-dispatch$8405$sFNhI
                                               g$t$9752$sFNhI
                                               '()))))
                                         g$fields$9751$sFNhI)))))
                            g$f$9750$sFNhI)
                          g$fields$9748$sFNhI)))))
                  (g$get-accessors$9663$sFNhI
                    (case-lambda
                      ((g$foo$9713$sFNhI g$fields$9714$sFNhI)
                       (letrec* ((g$gen-name$9715$sFNhI
                                   (case-lambda
                                     ((g$x$9746$sFNhI)
                                      (g$datum->syntax$8519$sFNhI
                                        g$foo$9713$sFNhI
                                        (string->symbol
                                          (string-append
                                            (symbol->string
                                              (g$syntax->datum$8520$sFNhI
                                                g$foo$9713$sFNhI))
                                            '"-"
                                            (symbol->string
                                              (g$syntax->datum$8520$sFNhI
                                                g$x$9746$sFNhI)))))))))
                         (g$map$5157$sFNhI
                           (case-lambda
                             ((g$field$9716$sFNhI)
                              ((case-lambda
                                 ((g$t$9717$sFNhI)
                                  ((case-lambda
                                     ((g$ls/false$9718$sFNhI)
                                      (if (if g$ls/false$9718$sFNhI
                                            (begin
                                              '#f
                                              (apply
                                                (case-lambda
                                                  ((g$name$9719$sFNhI
                                                     g$accessor$9720$sFNhI
                                                     g$mutator$9721$sFNhI)
                                                   (g$id?$8126$sFNhI
                                                     g$accessor$9720$sFNhI)))
                                                g$ls/false$9718$sFNhI))
                                            '#f)
                                        (apply
                                          (case-lambda
                                            ((g$name$9722$sFNhI
                                               g$accessor$9723$sFNhI
                                               g$mutator$9724$sFNhI)
                                             g$accessor$9723$sFNhI))
                                          g$ls/false$9718$sFNhI)
                                        ((case-lambda
                                           ((g$t$9725$sFNhI)
                                            ((case-lambda
                                               ((g$ls/false$9726$sFNhI)
                                                (if (if g$ls/false$9726$sFNhI
                                                      (begin
                                                        '#f
                                                        (apply
                                                          (case-lambda
                                                            ((g$name$9727$sFNhI
                                                               g$accessor$9728$sFNhI)
                                                             (g$id?$8126$sFNhI
                                                               g$accessor$9728$sFNhI)))
                                                          g$ls/false$9726$sFNhI))
                                                      '#f)
                                                  (apply
                                                    (case-lambda
                                                      ((g$name$9729$sFNhI
                                                         g$accessor$9730$sFNhI)
                                                       g$accessor$9730$sFNhI))
                                                    g$ls/false$9726$sFNhI)
                                                  ((case-lambda
                                                     ((g$t$9731$sFNhI)
                                                      ((case-lambda
                                                         ((g$ls/false$9732$sFNhI)
                                                          (if (if g$ls/false$9732$sFNhI
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$name$9733$sFNhI)
                                                                       (g$id?$8126$sFNhI
                                                                         g$name$9733$sFNhI)))
                                                                    g$ls/false$9732$sFNhI))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$name$9734$sFNhI)
                                                                 (g$gen-name$9715$sFNhI
                                                                   g$name$9734$sFNhI)))
                                                              g$ls/false$9732$sFNhI)
                                                            ((case-lambda
                                                               ((g$t$9735$sFNhI)
                                                                ((case-lambda
                                                                   ((g$ls/false$9736$sFNhI)
                                                                    (if (if g$ls/false$9736$sFNhI
                                                                          (begin
                                                                            '#f
                                                                            (apply
                                                                              (case-lambda
                                                                                ((g$name$9737$sFNhI)
                                                                                 (g$id?$8126$sFNhI
                                                                                   g$name$9737$sFNhI)))
                                                                              g$ls/false$9736$sFNhI))
                                                                          '#f)
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$name$9738$sFNhI)
                                                                           (g$gen-name$9715$sFNhI
                                                                             g$name$9738$sFNhI)))
                                                                        g$ls/false$9736$sFNhI)
                                                                      ((case-lambda
                                                                         ((g$t$9739$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$ls/false$9740$sFNhI)
                                                                              (if (if g$ls/false$9740$sFNhI
                                                                                    (begin
                                                                                      '#f
                                                                                      (apply
                                                                                        (case-lambda
                                                                                          ((g$name$9741$sFNhI)
                                                                                           (g$id?$8126$sFNhI
                                                                                             g$name$9741$sFNhI)))
                                                                                        g$ls/false$9740$sFNhI))
                                                                                    '#f)
                                                                                (apply
                                                                                  (case-lambda
                                                                                    ((g$name$9742$sFNhI)
                                                                                     (g$gen-name$9715$sFNhI
                                                                                       g$name$9742$sFNhI)))
                                                                                  g$ls/false$9740$sFNhI)
                                                                                ((case-lambda
                                                                                   ((g$t$9743$sFNhI)
                                                                                    ((case-lambda
                                                                                       ((g$ls/false$9744$sFNhI)
                                                                                        (if g$ls/false$9744$sFNhI
                                                                                          (apply
                                                                                            (case-lambda
                                                                                              ((g$others$9745$sFNhI)
                                                                                               (g$syntax-violation$8517$sFNhI
                                                                                                 '#f
                                                                                                 '"invalid field spec"
                                                                                                 g$field$9716$sFNhI)))
                                                                                            g$ls/false$9744$sFNhI)
                                                                                          (g$syntax-violation$8517$sFNhI
                                                                                            '#f
                                                                                            '"invalid syntax"
                                                                                            g$t$9743$sFNhI))))
                                                                                     (g$syntax-dispatch$8405$sFNhI
                                                                                       g$t$9743$sFNhI
                                                                                       'any))))
                                                                                 g$t$9739$sFNhI))))
                                                                           (g$syntax-dispatch$8405$sFNhI
                                                                             g$t$9739$sFNhI
                                                                             'any))))
                                                                       g$t$9735$sFNhI))))
                                                                 (g$syntax-dispatch$8405$sFNhI
                                                                   g$t$9735$sFNhI
                                                                   '(#(scheme-id
                                                                       immutable)
                                                                     any)))))
                                                             g$t$9731$sFNhI))))
                                                       (g$syntax-dispatch$8405$sFNhI
                                                         g$t$9731$sFNhI
                                                         '(#(scheme-id mutable)
                                                           any)))))
                                                   g$t$9725$sFNhI))))
                                             (g$syntax-dispatch$8405$sFNhI
                                               g$t$9725$sFNhI
                                               '(#(scheme-id immutable)
                                                 any
                                                 any)))))
                                         g$t$9717$sFNhI))))
                                   (g$syntax-dispatch$8405$sFNhI
                                     g$t$9717$sFNhI
                                     '(#(scheme-id mutable) any any any)))))
                               g$field$9716$sFNhI)))
                           g$fields$9714$sFNhI)))))
                  (g$enumerate$9664$sFNhI
                    (case-lambda
                      ((g$ls$9709$sFNhI)
                       ((letrec ((g$f$9710$sFNhI
                                   (case-lambda
                                     ((g$ls$9711$sFNhI g$i$9712$sFNhI)
                                      (if (null? g$ls$9711$sFNhI)
                                        '()
                                        (cons
                                          g$i$9712$sFNhI
                                          (g$f$9710$sFNhI
                                            (cdr g$ls$9711$sFNhI)
                                            (+ g$i$9712$sFNhI '1))))))))
                          g$f$9710$sFNhI)
                        g$ls$9709$sFNhI
                        '0))))
                  (g$do-define-record$9665$sFNhI
                    (case-lambda
                      ((g$namespec$9689$sFNhI g$clause*$9690$sFNhI)
                       ((case-lambda
                          ((g$foo$9691$sFNhI)
                           ((case-lambda
                              ((g$foo-rtd$9692$sFNhI)
                               ((case-lambda
                                  ((g$foo-rcd$9693$sFNhI)
                                   ((case-lambda
                                      ((g$protocol$9694$sFNhI)
                                       ((case-lambda
                                          ((g$make-foo$9695$sFNhI)
                                           ((case-lambda
                                              ((g$fields$9696$sFNhI)
                                               ((case-lambda
                                                  ((g$idx*$9697$sFNhI)
                                                   ((case-lambda
                                                      ((g$foo-x*$9698$sFNhI)
                                                       ((case-lambda
                                                          ((g$set-foo-x!*$9699$sFNhI)
                                                           ((case-lambda
                                                              ((g$set-foo-idx*$9700$sFNhI)
                                                               ((case-lambda
                                                                  ((g$foo?$9701$sFNhI)
                                                                   ((case-lambda
                                                                      ((g$foo-rtd-code$9702$sFNhI)
                                                                       ((case-lambda
                                                                          ((g$foo-rcd-code$9703$sFNhI)
                                                                           ((case-lambda
                                                                              ((g$protocol-code$9704$sFNhI)
                                                                               (g$bless$8368$sFNhI
                                                                                 (cons
                                                                                   'begin
                                                                                   (cons
                                                                                     (list
                                                                                       'define
                                                                                       g$foo-rtd$9692$sFNhI
                                                                                       g$foo-rtd-code$9702$sFNhI)
                                                                                     (cons
                                                                                       (list
                                                                                         'define
                                                                                         g$protocol$9694$sFNhI
                                                                                         g$protocol-code$9704$sFNhI)
                                                                                       (cons
                                                                                         (list
                                                                                           'define
                                                                                           g$foo-rcd$9693$sFNhI
                                                                                           g$foo-rcd-code$9703$sFNhI)
                                                                                         (cons
                                                                                           (list
                                                                                             'define-syntax
                                                                                             g$foo$9691$sFNhI
                                                                                             (list
                                                                                               'list
                                                                                               ''$rtd
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rtd$9692$sFNhI)
                                                                                               (list
                                                                                                 'syntax
                                                                                                 g$foo-rcd$9693$sFNhI)))
                                                                                           (cons
                                                                                             (list
                                                                                               'define
                                                                                               g$foo?$9701$sFNhI
                                                                                               (list
                                                                                                 'record-predicate
                                                                                                 g$foo-rtd$9692$sFNhI))
                                                                                             (cons
                                                                                               (list
                                                                                                 'define
                                                                                                 g$make-foo$9695$sFNhI
                                                                                                 (list
                                                                                                   'record-constructor
                                                                                                   g$foo-rcd$9693$sFNhI))
                                                                                               (append
                                                                                                 (g$map$5157$sFNhI
                                                                                                   (case-lambda
                                                                                                     ((g$foo-x$9705$sFNhI
                                                                                                        g$idx$9706$sFNhI)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$foo-x$9705$sFNhI
                                                                                                        (list
                                                                                                          'record-accessor
                                                                                                          g$foo-rtd$9692$sFNhI
                                                                                                          g$idx$9706$sFNhI))))
                                                                                                   g$foo-x*$9698$sFNhI
                                                                                                   g$idx*$9697$sFNhI)
                                                                                                 (g$map$5157$sFNhI
                                                                                                   (case-lambda
                                                                                                     ((g$set-foo-x!$9707$sFNhI
                                                                                                        g$idx$9708$sFNhI)
                                                                                                      (list
                                                                                                        'define
                                                                                                        g$set-foo-x!$9707$sFNhI
                                                                                                        (list
                                                                                                          'record-mutator
                                                                                                          g$foo-rtd$9692$sFNhI
                                                                                                          g$idx$9708$sFNhI))))
                                                                                                   g$set-foo-x!*$9699$sFNhI
                                                                                                   g$set-foo-idx*$9700$sFNhI))))))))))))
                                                                            (g$get-protocol-code$9659$sFNhI
                                                                              g$clause*$9690$sFNhI))))
                                                                        (g$foo-rcd-code$9658$sFNhI
                                                                          g$clause*$9690$sFNhI
                                                                          g$foo-rtd$9692$sFNhI
                                                                          g$protocol$9694$sFNhI
                                                                          (g$parent-rcd-code$9657$sFNhI
                                                                            g$clause*$9690$sFNhI)))))
                                                                    (g$foo-rtd-code$9655$sFNhI
                                                                      g$foo$9691$sFNhI
                                                                      g$clause*$9690$sFNhI
                                                                      (g$parent-rtd-code$9656$sFNhI
                                                                        g$clause*$9690$sFNhI)))))
                                                                (g$get-record-predicate-name$9653$sFNhI
                                                                  g$namespec$9689$sFNhI))))
                                                            (g$get-mutator-indices$9661$sFNhI
                                                              g$fields$9696$sFNhI))))
                                                        (g$get-mutators$9662$sFNhI
                                                          g$foo$9691$sFNhI
                                                          g$fields$9696$sFNhI))))
                                                    (g$get-accessors$9663$sFNhI
                                                      g$foo$9691$sFNhI
                                                      g$fields$9696$sFNhI))))
                                                (g$enumerate$9664$sFNhI
                                                  g$fields$9696$sFNhI))))
                                            (g$get-fields$9660$sFNhI
                                              g$clause*$9690$sFNhI))))
                                        (g$get-record-constructor-name$9652$sFNhI
                                          g$namespec$9689$sFNhI))))
                                    (gensym))))
                                (gensym))))
                            (gensym))))
                        (g$get-record-name$9651$sFNhI g$namespec$9689$sFNhI)))))
                  (g$verify-clauses$9666$sFNhI
                    (case-lambda
                      ((g$x$9671$sFNhI g$cls*$9672$sFNhI)
                       (letrec* ((g$valid-kwds$9673$sFNhI
                                   (g$map$5157$sFNhI
                                     g$bless$8368$sFNhI
                                     '(fields
                                        parent
                                        parent-rtd
                                        protocol
                                        sealed
                                        opaque
                                        nongenerative)))
                                 (g$free-id-member?$9674$sFNhI
                                   (case-lambda
                                     ((g$x$9686$sFNhI g$ls$9687$sFNhI)
                                      (if (pair? g$ls$9687$sFNhI)
                                        (begin
                                          '#f
                                          ((case-lambda
                                             ((g$t$9688$sFNhI)
                                              (if g$t$9688$sFNhI
                                                g$t$9688$sFNhI
                                                (begin
                                                  '#f
                                                  (g$free-id-member?$9674$sFNhI
                                                    g$x$9686$sFNhI
                                                    (cdr g$ls$9687$sFNhI))))))
                                           (g$free-id=?$8130$sFNhI
                                             g$x$9686$sFNhI
                                             (car g$ls$9687$sFNhI))))
                                        '#f)))))
                         ((letrec ((g$f$9675$sFNhI
                                     (case-lambda
                                       ((g$cls*$9676$sFNhI g$seen*$9677$sFNhI)
                                        (if (not (null? g$cls*$9676$sFNhI))
                                          ((case-lambda
                                             ((g$t$9678$sFNhI)
                                              ((case-lambda
                                                 ((g$ls/false$9679$sFNhI)
                                                  (if g$ls/false$9679$sFNhI
                                                    (apply
                                                      (case-lambda
                                                        ((g$kwd$9680$sFNhI
                                                           g$rest$9681$sFNhI)
                                                         (if ((case-lambda
                                                                ((g$t$9682$sFNhI)
                                                                 (if g$t$9682$sFNhI
                                                                   g$t$9682$sFNhI
                                                                   (begin
                                                                     '#f
                                                                     (not (g$free-id-member?$9674$sFNhI
                                                                            g$kwd$9680$sFNhI
                                                                            g$valid-kwds$9673$sFNhI))))))
                                                              (not (g$id?$8126$sFNhI
                                                                     g$kwd$9680$sFNhI)))
                                                           (g$syntax-violation$8517$sFNhI
                                                             '#f
                                                             '"not a valid define-record-type keyword"
                                                             g$kwd$9680$sFNhI)
                                                           (if (g$bound-id-member?$8133$sFNhI
                                                                 g$kwd$9680$sFNhI
                                                                 g$seen*$9677$sFNhI)
                                                             (g$syntax-violation$8517$sFNhI
                                                               '#f
                                                               '"duplicate use of keyword "
                                                               g$x$9671$sFNhI
                                                               g$kwd$9680$sFNhI)
                                                             (g$f$9675$sFNhI
                                                               (cdr g$cls*$9676$sFNhI)
                                                               (cons
                                                                 g$kwd$9680$sFNhI
                                                                 g$seen*$9677$sFNhI))))))
                                                      g$ls/false$9679$sFNhI)
                                                    ((case-lambda
                                                       ((g$t$9683$sFNhI)
                                                        ((case-lambda
                                                           ((g$ls/false$9684$sFNhI)
                                                            (if g$ls/false$9684$sFNhI
                                                              (apply
                                                                (case-lambda
                                                                  ((g$cls$9685$sFNhI)
                                                                   (g$syntax-violation$8517$sFNhI
                                                                     '#f
                                                                     '"malformed define-record-type clause"
                                                                     g$cls$9685$sFNhI)))
                                                                g$ls/false$9684$sFNhI)
                                                              (g$syntax-violation$8517$sFNhI
                                                                '#f
                                                                '"invalid syntax"
                                                                g$t$9683$sFNhI))))
                                                         (g$syntax-dispatch$8405$sFNhI
                                                           g$t$9683$sFNhI
                                                           'any))))
                                                     g$t$9678$sFNhI))))
                                               (g$syntax-dispatch$8405$sFNhI
                                                 g$t$9678$sFNhI
                                                 '(any . any)))))
                                           (car g$cls*$9676$sFNhI))
                                          (void))))))
                            g$f$9675$sFNhI)
                          g$cls*$9672$sFNhI
                          '()))))))
          ((case-lambda
             ((g$t$9667$sFNhI)
              ((case-lambda
                 ((g$ls/false$9668$sFNhI)
                  (if g$ls/false$9668$sFNhI
                    (apply
                      (case-lambda
                        ((g$namespec$9669$sFNhI g$clause*$9670$sFNhI)
                         (begin
                           (g$verify-clauses$9666$sFNhI
                             g$x$9649$sFNhI
                             g$clause*$9670$sFNhI)
                           (g$do-define-record$9665$sFNhI
                             g$namespec$9669$sFNhI
                             g$clause*$9670$sFNhI))))
                      g$ls/false$9668$sFNhI)
                    (g$syntax-violation$8517$sFNhI
                      '#f
                      '"invalid syntax"
                      g$t$9667$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$9667$sFNhI
                 '(_ any . each-any)))))
           g$x$9649$sFNhI)))))
   (g$define-condition-type-macro$8400$sFNhI
     g$define-condition-type-macro$11918$sFNhI
     (case-lambda
       ((g$x$9905$sFNhI)
        (letrec* ((g$mkname$9906$sFNhI
                    (case-lambda
                      ((g$name$9929$sFNhI g$suffix$9930$sFNhI)
                       (g$datum->syntax$8519$sFNhI
                         g$name$9929$sFNhI
                         (string->symbol
                           (string-append
                             (symbol->string
                               (g$syntax->datum$8520$sFNhI g$name$9929$sFNhI))
                             g$suffix$9930$sFNhI)))))))
          ((case-lambda
             ((g$t$9907$sFNhI)
              ((case-lambda
                 ((g$ls/false$9908$sFNhI)
                  (if (if g$ls/false$9908$sFNhI
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$ctxt$9909$sFNhI
                                 g$name$9910$sFNhI
                                 g$super$9911$sFNhI
                                 g$constructor$9912$sFNhI
                                 g$predicate$9913$sFNhI
                                 g$field*$9914$sFNhI
                                 g$accessor*$9915$sFNhI)
                               (if (g$id?$8126$sFNhI g$name$9910$sFNhI)
                                 (if (g$id?$8126$sFNhI g$super$9911$sFNhI)
                                   (if (g$id?$8126$sFNhI
                                         g$constructor$9912$sFNhI)
                                     (if (g$id?$8126$sFNhI
                                           g$predicate$9913$sFNhI)
                                       (if (g$for-all$5155$sFNhI
                                             g$id?$8126$sFNhI
                                             g$field*$9914$sFNhI)
                                         (begin
                                           '#f
                                           (g$for-all$5155$sFNhI
                                             g$id?$8126$sFNhI
                                             g$accessor*$9915$sFNhI))
                                         '#f)
                                       '#f)
                                     '#f)
                                   '#f)
                                 '#f)))
                            g$ls/false$9908$sFNhI))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$ctxt$9916$sFNhI
                           g$name$9917$sFNhI
                           g$super$9918$sFNhI
                           g$constructor$9919$sFNhI
                           g$predicate$9920$sFNhI
                           g$field*$9921$sFNhI
                           g$accessor*$9922$sFNhI)
                         ((case-lambda
                            ((g$aux-accessor*$9923$sFNhI)
                             (g$bless$8368$sFNhI
                               (cons
                                 'begin
                                 (cons
                                   (cons
                                     'define-record-type
                                     (cons
                                       (list
                                         g$name$9917$sFNhI
                                         g$constructor$9919$sFNhI
                                         (gensym))
                                       (cons
                                         (list 'parent g$super$9918$sFNhI)
                                         (cons
                                           (cons
                                             'fields
                                             (g$map$5157$sFNhI
                                               (case-lambda
                                                 ((g$field$9924$sFNhI
                                                    g$aux$9925$sFNhI)
                                                  (list
                                                    'immutable
                                                    g$field$9924$sFNhI
                                                    g$aux$9925$sFNhI)))
                                               g$field*$9921$sFNhI
                                               g$aux-accessor*$9923$sFNhI))
                                           '((nongenerative)
                                             (sealed #f)
                                             (opaque #f))))))
                                   (cons
                                     (list
                                       'define
                                       g$predicate$9920$sFNhI
                                       (list
                                         'condition-predicate
                                         (list
                                           'record-type-descriptor
                                           g$name$9917$sFNhI)))
                                     (g$map$5157$sFNhI
                                       (case-lambda
                                         ((g$accessor$9926$sFNhI
                                            g$aux$9927$sFNhI)
                                          (list
                                            'define
                                            g$accessor$9926$sFNhI
                                            (list
                                              'condition-accessor
                                              (list
                                                'record-type-descriptor
                                                g$name$9917$sFNhI)
                                              g$aux$9927$sFNhI))))
                                       g$accessor*$9922$sFNhI
                                       g$aux-accessor*$9923$sFNhI)))))))
                          (g$map$5157$sFNhI
                            (case-lambda ((g$x$9928$sFNhI) (gensym)))
                            g$accessor*$9922$sFNhI))))
                      g$ls/false$9908$sFNhI)
                    (g$syntax-violation$8517$sFNhI
                      '#f
                      '"invalid syntax"
                      g$t$9907$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI
                 g$t$9907$sFNhI
                 '(any any any any any . #(each (any any)))))))
           g$x$9905$sFNhI)))))
   (g$incorrect-usage-macro$8401$sFNhI
     g$incorrect-usage-macro$11919$sFNhI
     (case-lambda
       ((g$e$9931$sFNhI)
        (g$syntax-violation$8517$sFNhI
          '#f
          '"incorrect usage of auxiliary keyword"
          g$e$9931$sFNhI))))
   (g$parameterize-macro$8402$sFNhI
     g$parameterize-macro$11920$sFNhI
     (case-lambda
       ((g$e$9932$sFNhI)
        ((case-lambda
           ((g$t$9933$sFNhI)
            ((case-lambda
               ((g$ls/false$9934$sFNhI)
                (if g$ls/false$9934$sFNhI
                  (apply
                    (case-lambda
                      ((g$b$9935$sFNhI g$b*$9936$sFNhI)
                       (g$bless$8368$sFNhI
                         (cons
                           'let
                           (cons '() (cons g$b$9935$sFNhI g$b*$9936$sFNhI))))))
                    g$ls/false$9934$sFNhI)
                  ((case-lambda
                     ((g$t$9937$sFNhI)
                      ((case-lambda
                         ((g$ls/false$9938$sFNhI)
                          (if g$ls/false$9938$sFNhI
                            (apply
                              (case-lambda
                                ((g$olhs*$9939$sFNhI
                                   g$orhs*$9940$sFNhI
                                   g$b$9941$sFNhI
                                   g$b*$9942$sFNhI)
                                 ((case-lambda
                                    ((g$lhs*$9943$sFNhI g$rhs*$9944$sFNhI)
                                     (g$bless$8368$sFNhI
                                       (cons
                                         (list
                                           'lambda
                                           (append
                                             g$lhs*$9943$sFNhI
                                             g$rhs*$9944$sFNhI)
                                           (list
                                             'let
                                             (list
                                               (list
                                                 'swap
                                                 (cons
                                                   'lambda
                                                   (cons
                                                     '()
                                                     (g$map$5157$sFNhI
                                                       (case-lambda
                                                         ((g$lhs$9945$sFNhI
                                                            g$rhs$9946$sFNhI)
                                                          (list
                                                            'let
                                                            (list
                                                              (list
                                                                't
                                                                (list
                                                                  g$lhs$9945$sFNhI)))
                                                            (list
                                                              g$lhs$9945$sFNhI
                                                              g$rhs$9946$sFNhI)
                                                            (cons
                                                              'set!
                                                              (cons
                                                                g$rhs$9946$sFNhI
                                                                '(t))))))
                                                       g$lhs*$9943$sFNhI
                                                       g$rhs*$9944$sFNhI)))))
                                             (cons
                                               'dynamic-wind
                                               (cons
                                                 'swap
                                                 (cons
                                                   (cons
                                                     'lambda
                                                     (cons
                                                       '()
                                                       (cons
                                                         g$b$9941$sFNhI
                                                         g$b*$9942$sFNhI)))
                                                   '(swap))))))
                                         (append
                                           g$olhs*$9939$sFNhI
                                           g$orhs*$9940$sFNhI)))))
                                  (g$generate-temporaries$8507$sFNhI
                                    g$olhs*$9939$sFNhI)
                                  (g$generate-temporaries$8507$sFNhI
                                    g$orhs*$9940$sFNhI))))
                              g$ls/false$9938$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$9937$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$9937$sFNhI
                         '(_ #(each (any any)) any . each-any)))))
                   g$t$9933$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$9933$sFNhI
               '(_ () any . each-any)))))
         g$e$9932$sFNhI))))
   (g$foreign-call-transformer$8403$sFNhI
     g$foreign-call-transformer$11921$sFNhI
     (case-lambda
       ((g$e$9947$sFNhI g$r$9948$sFNhI g$mr$9949$sFNhI)
        ((case-lambda
           ((g$t$9950$sFNhI)
            ((case-lambda
               ((g$ls/false$9951$sFNhI)
                (if g$ls/false$9951$sFNhI
                  (apply
                    (case-lambda
                      ((g$name$9952$sFNhI g$arg*$9953$sFNhI)
                       (cons
                         'foreign-call
                         (cons
                           (g$chi-expr$8423$sFNhI
                             g$name$9952$sFNhI
                             g$r$9948$sFNhI
                             g$mr$9949$sFNhI)
                           (g$chi-expr*$8421$sFNhI
                             g$arg*$9953$sFNhI
                             g$r$9948$sFNhI
                             g$mr$9949$sFNhI)))))
                    g$ls/false$9951$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$9950$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$9950$sFNhI
               '(_ any . each-any)))))
         g$e$9947$sFNhI))))
   (g$convert-pattern$8404$sFNhI
     g$convert-pattern$11922$sFNhI
     (case-lambda
       ((g$pattern$9954$sFNhI g$keys$9955$sFNhI)
        (letrec* ((g$cvt*$9956$sFNhI
                    (case-lambda
                      ((g$p*$10036$sFNhI g$n$10037$sFNhI g$ids$10038$sFNhI)
                       (if (null? g$p*$10036$sFNhI)
                         (values '() g$ids$10038$sFNhI)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$cvt*$9956$sFNhI
                                (cdr g$p*$10036$sFNhI)
                                g$n$10037$sFNhI
                                g$ids$10038$sFNhI)))
                           (case-lambda
                             ((g$y$10041$sFNhI g$ids$10042$sFNhI)
                              ((case-lambda
                                 ((g$ids$10043$sFNhI g$y$10044$sFNhI)
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$cvt$9957$sFNhI
                                         (car g$p*$10036$sFNhI)
                                         g$n$10037$sFNhI
                                         g$ids$10043$sFNhI)))
                                    (case-lambda
                                      ((g$x$10047$sFNhI g$ids$10048$sFNhI)
                                       ((case-lambda
                                          ((g$ids$10049$sFNhI g$x$10050$sFNhI)
                                           (values
                                             (cons
                                               g$x$10050$sFNhI
                                               g$y$10044$sFNhI)
                                             g$ids$10049$sFNhI)))
                                        g$ids$10048$sFNhI
                                        g$x$10047$sFNhI))))))
                               g$ids$10042$sFNhI
                               g$y$10041$sFNhI))))))))
                  (g$cvt$9957$sFNhI
                    (case-lambda
                      ((g$p$9958$sFNhI g$n$9959$sFNhI g$ids$9960$sFNhI)
                       ((case-lambda
                          ((g$t$9961$sFNhI)
                           ((case-lambda
                              ((g$ls/false$9962$sFNhI)
                               (if (if g$ls/false$9962$sFNhI
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$id$9963$sFNhI)
                                            (g$id?$8126$sFNhI g$id$9963$sFNhI)))
                                         g$ls/false$9962$sFNhI))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$id$9964$sFNhI)
                                      (if (g$bound-id-member?$8133$sFNhI
                                            g$p$9958$sFNhI
                                            g$keys$9955$sFNhI)
                                        (values
                                          (vector 'free-id g$p$9958$sFNhI)
                                          g$ids$9960$sFNhI)
                                        (if (g$free-id=?$8130$sFNhI
                                              g$p$9958$sFNhI
                                              (g$scheme-stx$8348$sFNhI '_))
                                          (values '_ g$ids$9960$sFNhI)
                                          (values
                                            'any
                                            (cons
                                              (cons
                                                g$p$9958$sFNhI
                                                g$n$9959$sFNhI)
                                              g$ids$9960$sFNhI))))))
                                   g$ls/false$9962$sFNhI)
                                 ((case-lambda
                                    ((g$t$9965$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$9966$sFNhI)
                                         (if (if g$ls/false$9966$sFNhI
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$p$9967$sFNhI
                                                        g$dots$9968$sFNhI)
                                                      (g$ellipsis?$8406$sFNhI
                                                        g$dots$9968$sFNhI)))
                                                   g$ls/false$9966$sFNhI))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$p$9969$sFNhI
                                                  g$dots$9970$sFNhI)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$cvt$9957$sFNhI
                                                       g$p$9969$sFNhI
                                                       (+ g$n$9959$sFNhI '1)
                                                       g$ids$9960$sFNhI)))
                                                  (case-lambda
                                                    ((g$p$9973$sFNhI
                                                       g$ids$9974$sFNhI)
                                                     ((case-lambda
                                                        ((g$ids$9975$sFNhI
                                                           g$p$9976$sFNhI)
                                                         (values
                                                           (if (eq? g$p$9976$sFNhI
                                                                    'any)
                                                             'each-any
                                                             (vector
                                                               'each
                                                               g$p$9976$sFNhI))
                                                           g$ids$9975$sFNhI)))
                                                      g$ids$9974$sFNhI
                                                      g$p$9973$sFNhI))))))
                                             g$ls/false$9966$sFNhI)
                                           ((case-lambda
                                              ((g$t$9977$sFNhI)
                                               ((case-lambda
                                                  ((g$ls/false$9978$sFNhI)
                                                   (if (if g$ls/false$9978$sFNhI
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$x$9979$sFNhI
                                                                  g$dots$9980$sFNhI
                                                                  g$ys$9981$sFNhI
                                                                  g$z$9982$sFNhI)
                                                                (g$ellipsis?$8406$sFNhI
                                                                  g$dots$9980$sFNhI)))
                                                             g$ls/false$9978$sFNhI))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$9983$sFNhI
                                                            g$dots$9984$sFNhI
                                                            g$ys$9985$sFNhI
                                                            g$z$9986$sFNhI)
                                                          (call-with-values
                                                            (case-lambda
                                                              (()
                                                               (g$cvt$9957$sFNhI
                                                                 g$z$9986$sFNhI
                                                                 g$n$9959$sFNhI
                                                                 g$ids$9960$sFNhI)))
                                                            (case-lambda
                                                              ((g$z$9989$sFNhI
                                                                 g$ids$9990$sFNhI)
                                                               ((case-lambda
                                                                  ((g$ids$9991$sFNhI
                                                                     g$z$9992$sFNhI)
                                                                   (call-with-values
                                                                     (case-lambda
                                                                       (()
                                                                        (g$cvt*$9956$sFNhI
                                                                          g$ys$9985$sFNhI
                                                                          g$n$9959$sFNhI
                                                                          g$ids$9991$sFNhI)))
                                                                     (case-lambda
                                                                       ((g$ys$9995$sFNhI
                                                                          g$ids$9996$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$ids$9997$sFNhI
                                                                              g$ys$9998$sFNhI)
                                                                            (call-with-values
                                                                              (case-lambda
                                                                                (()
                                                                                 (g$cvt$9957$sFNhI
                                                                                   g$x$9983$sFNhI
                                                                                   (+ g$n$9959$sFNhI
                                                                                      '1)
                                                                                   g$ids$9997$sFNhI)))
                                                                              (case-lambda
                                                                                ((g$x$10001$sFNhI
                                                                                   g$ids$10002$sFNhI)
                                                                                 ((case-lambda
                                                                                    ((g$ids$10003$sFNhI
                                                                                       g$x$10004$sFNhI)
                                                                                     (values
                                                                                       (vector
                                                                                         'each+
                                                                                         g$x$10004$sFNhI
                                                                                         (g$reverse$5652$sFNhI
                                                                                           g$ys$9998$sFNhI)
                                                                                         g$z$9992$sFNhI)
                                                                                       g$ids$10003$sFNhI)))
                                                                                  g$ids$10002$sFNhI
                                                                                  g$x$10001$sFNhI))))))
                                                                         g$ids$9996$sFNhI
                                                                         g$ys$9995$sFNhI))))))
                                                                g$ids$9990$sFNhI
                                                                g$z$9989$sFNhI))))))
                                                       g$ls/false$9978$sFNhI)
                                                     ((case-lambda
                                                        ((g$t$10005$sFNhI)
                                                         ((case-lambda
                                                            ((g$ls/false$10006$sFNhI)
                                                             (if g$ls/false$10006$sFNhI
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$x$10007$sFNhI
                                                                      g$y$10008$sFNhI)
                                                                    (call-with-values
                                                                      (case-lambda
                                                                        (()
                                                                         (g$cvt$9957$sFNhI
                                                                           g$y$10008$sFNhI
                                                                           g$n$9959$sFNhI
                                                                           g$ids$9960$sFNhI)))
                                                                      (case-lambda
                                                                        ((g$y$10011$sFNhI
                                                                           g$ids$10012$sFNhI)
                                                                         ((case-lambda
                                                                            ((g$ids$10013$sFNhI
                                                                               g$y$10014$sFNhI)
                                                                             (call-with-values
                                                                               (case-lambda
                                                                                 (()
                                                                                  (g$cvt$9957$sFNhI
                                                                                    g$x$10007$sFNhI
                                                                                    g$n$9959$sFNhI
                                                                                    g$ids$10013$sFNhI)))
                                                                               (case-lambda
                                                                                 ((g$x$10017$sFNhI
                                                                                    g$ids$10018$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$ids$10019$sFNhI
                                                                                        g$x$10020$sFNhI)
                                                                                      (values
                                                                                        (cons
                                                                                          g$x$10020$sFNhI
                                                                                          g$y$10014$sFNhI)
                                                                                        g$ids$10019$sFNhI)))
                                                                                   g$ids$10018$sFNhI
                                                                                   g$x$10017$sFNhI))))))
                                                                          g$ids$10012$sFNhI
                                                                          g$y$10011$sFNhI))))))
                                                                 g$ls/false$10006$sFNhI)
                                                               ((case-lambda
                                                                  ((g$t$10021$sFNhI)
                                                                   ((case-lambda
                                                                      ((g$ls/false$10022$sFNhI)
                                                                       (if g$ls/false$10022$sFNhI
                                                                         (apply
                                                                           (case-lambda
                                                                             (()
                                                                              (values
                                                                                '()
                                                                                g$ids$9960$sFNhI)))
                                                                           g$ls/false$10022$sFNhI)
                                                                         ((case-lambda
                                                                            ((g$t$10023$sFNhI)
                                                                             ((case-lambda
                                                                                ((g$ls/false$10024$sFNhI)
                                                                                 (if (if g$ls/false$10024$sFNhI
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$p$10025$sFNhI)
                                                                                              (not (g$stx?$8098$sFNhI
                                                                                                     g$p$10025$sFNhI))))
                                                                                           g$ls/false$10024$sFNhI))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$p$10026$sFNhI)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$cvt$9957$sFNhI
                                                                                               g$p$10026$sFNhI
                                                                                               g$n$9959$sFNhI
                                                                                               g$ids$9960$sFNhI)))
                                                                                          (case-lambda
                                                                                            ((g$p$10029$sFNhI
                                                                                               g$ids$10030$sFNhI)
                                                                                             ((case-lambda
                                                                                                ((g$ids$10031$sFNhI
                                                                                                   g$p$10032$sFNhI)
                                                                                                 (values
                                                                                                   (vector
                                                                                                     'vector
                                                                                                     g$p$10032$sFNhI)
                                                                                                   g$ids$10031$sFNhI)))
                                                                                              g$ids$10030$sFNhI
                                                                                              g$p$10029$sFNhI))))))
                                                                                     g$ls/false$10024$sFNhI)
                                                                                   ((case-lambda
                                                                                      ((g$t$10033$sFNhI)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$10034$sFNhI)
                                                                                           (if g$ls/false$10034$sFNhI
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$datum$10035$sFNhI)
                                                                                                  (values
                                                                                                    (vector
                                                                                                      'atom
                                                                                                      (g$stx->datum$8137$sFNhI
                                                                                                        g$datum$10035$sFNhI))
                                                                                                    g$ids$9960$sFNhI)))
                                                                                               g$ls/false$10034$sFNhI)
                                                                                             (g$syntax-violation$8517$sFNhI
                                                                                               '#f
                                                                                               '"invalid syntax"
                                                                                               g$t$10033$sFNhI))))
                                                                                        (g$syntax-dispatch$8405$sFNhI
                                                                                          g$t$10033$sFNhI
                                                                                          'any))))
                                                                                    g$t$10023$sFNhI))))
                                                                              (g$syntax-dispatch$8405$sFNhI
                                                                                g$t$10023$sFNhI
                                                                                '#(vector
                                                                                   each-any)))))
                                                                          g$t$10021$sFNhI))))
                                                                    (g$syntax-dispatch$8405$sFNhI
                                                                      g$t$10021$sFNhI
                                                                      '()))))
                                                                g$t$10005$sFNhI))))
                                                          (g$syntax-dispatch$8405$sFNhI
                                                            g$t$10005$sFNhI
                                                            '(any . any)))))
                                                      g$t$9977$sFNhI))))
                                                (g$syntax-dispatch$8405$sFNhI
                                                  g$t$9977$sFNhI
                                                  '(any any
                                                        .
                                                        #(each+ any () any))))))
                                            g$t$9965$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$9965$sFNhI
                                        '(any any)))))
                                  g$t$9961$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$9961$sFNhI
                              'any))))
                        g$p$9958$sFNhI)))))
          (g$cvt$9957$sFNhI g$pattern$9954$sFNhI '0 '())))))
   (g$syntax-dispatch$8405$sFNhI
     g$syntax-dispatch$11923$sFNhI
     ((case-lambda
        (()
         (letrec* ((g$stx^$10051$sFNhI
                     (case-lambda
                       ((g$e$10161$sFNhI
                          g$m*$10162$sFNhI
                          g$s*$10163$sFNhI
                          g$ae*$10164$sFNhI)
                        (if (if (null? g$m*$10162$sFNhI)
                              (if (null? g$s*$10163$sFNhI)
                                (begin '#f (null? g$ae*$10164$sFNhI))
                                '#f)
                              '#f)
                          g$e$10161$sFNhI
                          (g$mkstx$8114$sFNhI
                            g$e$10161$sFNhI
                            g$m*$10162$sFNhI
                            g$s*$10163$sFNhI
                            g$ae*$10164$sFNhI)))))
                   (g$match-each$10052$sFNhI
                     (case-lambda
                       ((g$e$10145$sFNhI
                          g$p$10146$sFNhI
                          g$m*$10147$sFNhI
                          g$s*$10148$sFNhI
                          g$ae*$10149$sFNhI)
                        (if (pair? g$e$10145$sFNhI)
                          ((case-lambda
                             ((g$first$10150$sFNhI)
                              (if g$first$10150$sFNhI
                                (begin
                                  '#f
                                  ((case-lambda
                                     ((g$rest$10151$sFNhI)
                                      (if g$rest$10151$sFNhI
                                        (begin
                                          '#f
                                          (cons
                                            g$first$10150$sFNhI
                                            g$rest$10151$sFNhI))
                                        '#f)))
                                   (g$match-each$10052$sFNhI
                                     (cdr g$e$10145$sFNhI)
                                     g$p$10146$sFNhI
                                     g$m*$10147$sFNhI
                                     g$s*$10148$sFNhI
                                     g$ae*$10149$sFNhI)))
                                '#f)))
                           (g$match$10058$sFNhI
                             (car g$e$10145$sFNhI)
                             g$p$10146$sFNhI
                             g$m*$10147$sFNhI
                             g$s*$10148$sFNhI
                             g$ae*$10149$sFNhI
                             '()))
                          (if (null? g$e$10145$sFNhI)
                            '()
                            (if (g$stx?$8098$sFNhI g$e$10145$sFNhI)
                              (if (not (g$top-marked?$8064$sFNhI
                                         g$m*$10147$sFNhI))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8113$sFNhI
                                         g$m*$10147$sFNhI
                                         g$s*$10148$sFNhI
                                         g$ae*$10149$sFNhI
                                         g$e$10145$sFNhI)))
                                    (case-lambda
                                      ((g$m*$10155$sFNhI
                                         g$s*$10156$sFNhI
                                         g$ae*$10157$sFNhI)
                                       ((case-lambda
                                          ((g$ae*$10158$sFNhI
                                             g$s*$10159$sFNhI
                                             g$m*$10160$sFNhI)
                                           (g$match-each$10052$sFNhI
                                             (g$stx-expr$8100$sFNhI
                                               g$e$10145$sFNhI)
                                             g$p$10146$sFNhI
                                             g$m*$10160$sFNhI
                                             g$s*$10159$sFNhI
                                             g$ae*$10158$sFNhI)))
                                        g$ae*$10157$sFNhI
                                        g$s*$10156$sFNhI
                                        g$m*$10155$sFNhI)))))
                                '#f)
                              (if (annotation? g$e$10145$sFNhI)
                                (g$match-each$10052$sFNhI
                                  (annotation-expression g$e$10145$sFNhI)
                                  g$p$10146$sFNhI
                                  g$m*$10147$sFNhI
                                  g$s*$10148$sFNhI
                                  g$ae*$10149$sFNhI)
                                '#f)))))))
                   (g$match-each+$10053$sFNhI
                     (case-lambda
                       ((g$e$10113$sFNhI
                          g$x-pat$10114$sFNhI
                          g$y-pat$10115$sFNhI
                          g$z-pat$10116$sFNhI
                          g$m*$10117$sFNhI
                          g$s*$10118$sFNhI
                          g$ae*$10119$sFNhI
                          g$r$10120$sFNhI)
                        ((letrec ((g$f$10121$sFNhI
                                    (case-lambda
                                      ((g$e$10122$sFNhI
                                         g$m*$10123$sFNhI
                                         g$s*$10124$sFNhI
                                         g$ae*$10125$sFNhI)
                                       (if (pair? g$e$10122$sFNhI)
                                         (call-with-values
                                           (case-lambda
                                             (()
                                              (g$f$10121$sFNhI
                                                (cdr g$e$10122$sFNhI)
                                                g$m*$10123$sFNhI
                                                g$s*$10124$sFNhI
                                                g$ae*$10125$sFNhI)))
                                           (case-lambda
                                             ((g$xr*$10129$sFNhI
                                                g$y-pat$10130$sFNhI
                                                g$r$10131$sFNhI)
                                              ((case-lambda
                                                 ((g$r$10132$sFNhI
                                                    g$y-pat$10133$sFNhI
                                                    g$xr*$10134$sFNhI)
                                                  (if g$r$10132$sFNhI
                                                    (if (null?
                                                          g$y-pat$10133$sFNhI)
                                                      ((case-lambda
                                                         ((g$xr$10135$sFNhI)
                                                          (if g$xr$10135$sFNhI
                                                            (values
                                                              (cons
                                                                g$xr$10135$sFNhI
                                                                g$xr*$10134$sFNhI)
                                                              g$y-pat$10133$sFNhI
                                                              g$r$10132$sFNhI)
                                                            (values
                                                              '#f
                                                              '#f
                                                              '#f))))
                                                       (g$match$10058$sFNhI
                                                         (car g$e$10122$sFNhI)
                                                         g$x-pat$10114$sFNhI
                                                         g$m*$10123$sFNhI
                                                         g$s*$10124$sFNhI
                                                         g$ae*$10125$sFNhI
                                                         '()))
                                                      (values
                                                        '()
                                                        (cdr g$y-pat$10133$sFNhI)
                                                        (g$match$10058$sFNhI
                                                          (car g$e$10122$sFNhI)
                                                          (car g$y-pat$10133$sFNhI)
                                                          g$m*$10123$sFNhI
                                                          g$s*$10124$sFNhI
                                                          g$ae*$10125$sFNhI
                                                          g$r$10132$sFNhI)))
                                                    (values '#f '#f '#f))))
                                               g$r$10131$sFNhI
                                               g$y-pat$10130$sFNhI
                                               g$xr*$10129$sFNhI))))
                                         (if (g$stx?$8098$sFNhI g$e$10122$sFNhI)
                                           (if (g$top-marked?$8064$sFNhI
                                                 g$m*$10123$sFNhI)
                                             (values
                                               '()
                                               g$y-pat$10115$sFNhI
                                               (g$match$10058$sFNhI
                                                 g$e$10122$sFNhI
                                                 g$z-pat$10116$sFNhI
                                                 g$m*$10123$sFNhI
                                                 g$s*$10124$sFNhI
                                                 g$ae*$10125$sFNhI
                                                 g$r$10120$sFNhI))
                                             (call-with-values
                                               (case-lambda
                                                 (()
                                                  (g$join-wraps$8113$sFNhI
                                                    g$m*$10123$sFNhI
                                                    g$s*$10124$sFNhI
                                                    g$ae*$10125$sFNhI
                                                    g$e$10122$sFNhI)))
                                               (case-lambda
                                                 ((g$m*$10139$sFNhI
                                                    g$s*$10140$sFNhI
                                                    g$ae*$10141$sFNhI)
                                                  ((case-lambda
                                                     ((g$ae*$10142$sFNhI
                                                        g$s*$10143$sFNhI
                                                        g$m*$10144$sFNhI)
                                                      (g$f$10121$sFNhI
                                                        (g$stx-expr$8100$sFNhI
                                                          g$e$10122$sFNhI)
                                                        g$m*$10144$sFNhI
                                                        g$s*$10143$sFNhI
                                                        g$ae*$10142$sFNhI)))
                                                   g$ae*$10141$sFNhI
                                                   g$s*$10140$sFNhI
                                                   g$m*$10139$sFNhI)))))
                                           (if (annotation? g$e$10122$sFNhI)
                                             (g$f$10121$sFNhI
                                               (annotation-expression
                                                 g$e$10122$sFNhI)
                                               g$m*$10123$sFNhI
                                               g$s*$10124$sFNhI
                                               g$ae*$10125$sFNhI)
                                             (values
                                               '()
                                               g$y-pat$10115$sFNhI
                                               (g$match$10058$sFNhI
                                                 g$e$10122$sFNhI
                                                 g$z-pat$10116$sFNhI
                                                 g$m*$10123$sFNhI
                                                 g$s*$10124$sFNhI
                                                 g$ae*$10125$sFNhI
                                                 g$r$10120$sFNhI)))))))))
                           g$f$10121$sFNhI)
                         g$e$10113$sFNhI
                         g$m*$10117$sFNhI
                         g$s*$10118$sFNhI
                         g$ae*$10119$sFNhI))))
                   (g$match-each-any$10054$sFNhI
                     (case-lambda
                       ((g$e$10099$sFNhI
                          g$m*$10100$sFNhI
                          g$s*$10101$sFNhI
                          g$ae*$10102$sFNhI)
                        (if (pair? g$e$10099$sFNhI)
                          ((case-lambda
                             ((g$l$10103$sFNhI)
                              (if g$l$10103$sFNhI
                                (begin
                                  '#f
                                  (cons
                                    (g$stx^$10051$sFNhI
                                      (car g$e$10099$sFNhI)
                                      g$m*$10100$sFNhI
                                      g$s*$10101$sFNhI
                                      g$ae*$10102$sFNhI)
                                    g$l$10103$sFNhI))
                                '#f)))
                           (g$match-each-any$10054$sFNhI
                             (cdr g$e$10099$sFNhI)
                             g$m*$10100$sFNhI
                             g$s*$10101$sFNhI
                             g$ae*$10102$sFNhI))
                          (if (null? g$e$10099$sFNhI)
                            '()
                            (if (g$stx?$8098$sFNhI g$e$10099$sFNhI)
                              (if (not (g$top-marked?$8064$sFNhI
                                         g$m*$10100$sFNhI))
                                (begin
                                  '#f
                                  (call-with-values
                                    (case-lambda
                                      (()
                                       (g$join-wraps$8113$sFNhI
                                         g$m*$10100$sFNhI
                                         g$s*$10101$sFNhI
                                         g$ae*$10102$sFNhI
                                         g$e$10099$sFNhI)))
                                    (case-lambda
                                      ((g$m*$10107$sFNhI
                                         g$s*$10108$sFNhI
                                         g$ae*$10109$sFNhI)
                                       ((case-lambda
                                          ((g$ae*$10110$sFNhI
                                             g$s*$10111$sFNhI
                                             g$m*$10112$sFNhI)
                                           (g$match-each-any$10054$sFNhI
                                             (g$stx-expr$8100$sFNhI
                                               g$e$10099$sFNhI)
                                             g$m*$10112$sFNhI
                                             g$s*$10111$sFNhI
                                             g$ae*$10110$sFNhI)))
                                        g$ae*$10109$sFNhI
                                        g$s*$10108$sFNhI
                                        g$m*$10107$sFNhI)))))
                                '#f)
                              (if (annotation? g$e$10099$sFNhI)
                                (g$match-each-any$10054$sFNhI
                                  (annotation-expression g$e$10099$sFNhI)
                                  g$m*$10100$sFNhI
                                  g$s*$10101$sFNhI
                                  g$ae*$10102$sFNhI)
                                '#f)))))))
                   (g$match-empty$10055$sFNhI
                     (case-lambda
                       ((g$p$10096$sFNhI g$r$10097$sFNhI)
                        (if (null? g$p$10096$sFNhI)
                          g$r$10097$sFNhI
                          (if (eq? g$p$10096$sFNhI '_)
                            g$r$10097$sFNhI
                            (if (eq? g$p$10096$sFNhI 'any)
                              (cons '() g$r$10097$sFNhI)
                              (if (pair? g$p$10096$sFNhI)
                                (g$match-empty$10055$sFNhI
                                  (car g$p$10096$sFNhI)
                                  (g$match-empty$10055$sFNhI
                                    (cdr g$p$10096$sFNhI)
                                    g$r$10097$sFNhI))
                                (if (eq? g$p$10096$sFNhI 'each-any)
                                  (cons '() g$r$10097$sFNhI)
                                  ((case-lambda
                                     ((g$t$10098$sFNhI)
                                      (if (g$memv$5150$sFNhI
                                            g$t$10098$sFNhI
                                            '(each))
                                        (g$match-empty$10055$sFNhI
                                          (vector-ref g$p$10096$sFNhI '1)
                                          g$r$10097$sFNhI)
                                        (if (g$memv$5150$sFNhI
                                              g$t$10098$sFNhI
                                              '(each+))
                                          (g$match-empty$10055$sFNhI
                                            (vector-ref g$p$10096$sFNhI '1)
                                            (g$match-empty$10055$sFNhI
                                              (g$reverse$5652$sFNhI
                                                (vector-ref g$p$10096$sFNhI '2))
                                              (g$match-empty$10055$sFNhI
                                                (vector-ref g$p$10096$sFNhI '3)
                                                g$r$10097$sFNhI)))
                                          (if (g$memv$5150$sFNhI
                                                g$t$10098$sFNhI
                                                '(free-id atom))
                                            g$r$10097$sFNhI
                                            (if (g$memv$5150$sFNhI
                                                  g$t$10098$sFNhI
                                                  '(scheme-id atom))
                                              g$r$10097$sFNhI
                                              (if (g$memv$5150$sFNhI
                                                    g$t$10098$sFNhI
                                                    '(vector))
                                                (g$match-empty$10055$sFNhI
                                                  (vector-ref
                                                    g$p$10096$sFNhI
                                                    '1)
                                                  g$r$10097$sFNhI)
                                                (assertion-violation
                                                  'syntax-dispatch
                                                  '"invalid pattern"
                                                  g$p$10096$sFNhI))))))))
                                   (vector-ref g$p$10096$sFNhI '0))))))))))
                   (g$combine$10056$sFNhI
                     (case-lambda
                       ((g$r*$10094$sFNhI g$r$10095$sFNhI)
                        (if (null? (car g$r*$10094$sFNhI))
                          g$r$10095$sFNhI
                          (cons
                            (g$map$5157$sFNhI car g$r*$10094$sFNhI)
                            (g$combine$10056$sFNhI
                              (g$map$5157$sFNhI cdr g$r*$10094$sFNhI)
                              g$r$10095$sFNhI))))))
                   (g$match*$10057$sFNhI
                     (case-lambda
                       ((g$e$10076$sFNhI
                          g$p$10077$sFNhI
                          g$m*$10078$sFNhI
                          g$s*$10079$sFNhI
                          g$ae*$10080$sFNhI
                          g$r$10081$sFNhI)
                        (if (null? g$p$10077$sFNhI)
                          (if (null? g$e$10076$sFNhI)
                            (begin '#f g$r$10081$sFNhI)
                            '#f)
                          (if (pair? g$p$10077$sFNhI)
                            (if (pair? g$e$10076$sFNhI)
                              (begin
                                '#f
                                (g$match$10058$sFNhI
                                  (car g$e$10076$sFNhI)
                                  (car g$p$10077$sFNhI)
                                  g$m*$10078$sFNhI
                                  g$s*$10079$sFNhI
                                  g$ae*$10080$sFNhI
                                  (g$match$10058$sFNhI
                                    (cdr g$e$10076$sFNhI)
                                    (cdr g$p$10077$sFNhI)
                                    g$m*$10078$sFNhI
                                    g$s*$10079$sFNhI
                                    g$ae*$10080$sFNhI
                                    g$r$10081$sFNhI)))
                              '#f)
                            (if (eq? g$p$10077$sFNhI 'each-any)
                              ((case-lambda
                                 ((g$l$10082$sFNhI)
                                  (if g$l$10082$sFNhI
                                    (begin
                                      '#f
                                      (cons g$l$10082$sFNhI g$r$10081$sFNhI))
                                    '#f)))
                               (g$match-each-any$10054$sFNhI
                                 g$e$10076$sFNhI
                                 g$m*$10078$sFNhI
                                 g$s*$10079$sFNhI
                                 g$ae*$10080$sFNhI))
                              ((case-lambda
                                 ((g$t$10083$sFNhI)
                                  (if (g$memv$5150$sFNhI
                                        g$t$10083$sFNhI
                                        '(each))
                                    (if (null? g$e$10076$sFNhI)
                                      (g$match-empty$10055$sFNhI
                                        (vector-ref g$p$10077$sFNhI '1)
                                        g$r$10081$sFNhI)
                                      ((case-lambda
                                         ((g$r*$10084$sFNhI)
                                          (if g$r*$10084$sFNhI
                                            (begin
                                              '#f
                                              (g$combine$10056$sFNhI
                                                g$r*$10084$sFNhI
                                                g$r$10081$sFNhI))
                                            '#f)))
                                       (g$match-each$10052$sFNhI
                                         g$e$10076$sFNhI
                                         (vector-ref g$p$10077$sFNhI '1)
                                         g$m*$10078$sFNhI
                                         g$s*$10079$sFNhI
                                         g$ae*$10080$sFNhI)))
                                    (if (g$memv$5150$sFNhI
                                          g$t$10083$sFNhI
                                          '(free-id))
                                      (if (g$symbol?$5645$sFNhI g$e$10076$sFNhI)
                                        (if (g$top-marked?$8064$sFNhI
                                              g$m*$10078$sFNhI)
                                          (if (g$free-id=?$8130$sFNhI
                                                (g$stx^$10051$sFNhI
                                                  g$e$10076$sFNhI
                                                  g$m*$10078$sFNhI
                                                  g$s*$10079$sFNhI
                                                  g$ae*$10080$sFNhI)
                                                (vector-ref g$p$10077$sFNhI '1))
                                            (begin '#f g$r$10081$sFNhI)
                                            '#f)
                                          '#f)
                                        '#f)
                                      (if (g$memv$5150$sFNhI
                                            g$t$10083$sFNhI
                                            '(scheme-id))
                                        (if (g$symbol?$5645$sFNhI
                                              g$e$10076$sFNhI)
                                          (if (g$top-marked?$8064$sFNhI
                                                g$m*$10078$sFNhI)
                                            (if (g$free-id=?$8130$sFNhI
                                                  (g$stx^$10051$sFNhI
                                                    g$e$10076$sFNhI
                                                    g$m*$10078$sFNhI
                                                    g$s*$10079$sFNhI
                                                    g$ae*$10080$sFNhI)
                                                  (g$scheme-stx$8348$sFNhI
                                                    (vector-ref
                                                      g$p$10077$sFNhI
                                                      '1)))
                                              (begin '#f g$r$10081$sFNhI)
                                              '#f)
                                            '#f)
                                          '#f)
                                        (if (g$memv$5150$sFNhI
                                              g$t$10083$sFNhI
                                              '(each+))
                                          (call-with-values
                                            (case-lambda
                                              (()
                                               (g$match-each+$10053$sFNhI
                                                 g$e$10076$sFNhI
                                                 (vector-ref g$p$10077$sFNhI '1)
                                                 (vector-ref g$p$10077$sFNhI '2)
                                                 (vector-ref g$p$10077$sFNhI '3)
                                                 g$m*$10078$sFNhI
                                                 g$s*$10079$sFNhI
                                                 g$ae*$10080$sFNhI
                                                 g$r$10081$sFNhI)))
                                            (case-lambda
                                              ((g$xr*$10088$sFNhI
                                                 g$y-pat$10089$sFNhI
                                                 g$r$10090$sFNhI)
                                               ((case-lambda
                                                  ((g$r$10091$sFNhI
                                                     g$y-pat$10092$sFNhI
                                                     g$xr*$10093$sFNhI)
                                                   (if g$r$10091$sFNhI
                                                     (if (null?
                                                           g$y-pat$10092$sFNhI)
                                                       (begin
                                                         '#f
                                                         (if (null?
                                                               g$xr*$10093$sFNhI)
                                                           (g$match-empty$10055$sFNhI
                                                             (vector-ref
                                                               g$p$10077$sFNhI
                                                               '1)
                                                             g$r$10091$sFNhI)
                                                           (g$combine$10056$sFNhI
                                                             g$xr*$10093$sFNhI
                                                             g$r$10091$sFNhI)))
                                                       '#f)
                                                     '#f)))
                                                g$r$10090$sFNhI
                                                g$y-pat$10089$sFNhI
                                                g$xr*$10088$sFNhI))))
                                          (if (g$memv$5150$sFNhI
                                                g$t$10083$sFNhI
                                                '(atom))
                                            (if (equal?
                                                  (vector-ref
                                                    g$p$10077$sFNhI
                                                    '1)
                                                  (g$strip$8136$sFNhI
                                                    g$e$10076$sFNhI
                                                    g$m*$10078$sFNhI))
                                              (begin '#f g$r$10081$sFNhI)
                                              '#f)
                                            (if (g$memv$5150$sFNhI
                                                  g$t$10083$sFNhI
                                                  '(vector))
                                              (if (g$vector?$5643$sFNhI
                                                    g$e$10076$sFNhI)
                                                (begin
                                                  '#f
                                                  (g$match$10058$sFNhI
                                                    (vector->list
                                                      g$e$10076$sFNhI)
                                                    (vector-ref
                                                      g$p$10077$sFNhI
                                                      '1)
                                                    g$m*$10078$sFNhI
                                                    g$s*$10079$sFNhI
                                                    g$ae*$10080$sFNhI
                                                    g$r$10081$sFNhI))
                                                '#f)
                                              (assertion-violation
                                                'syntax-dispatch
                                                '"invalid pattern"
                                                g$p$10077$sFNhI)))))))))
                               (vector-ref g$p$10077$sFNhI '0))))))))
                   (g$match$10058$sFNhI
                     (case-lambda
                       ((g$e$10061$sFNhI
                          g$p$10062$sFNhI
                          g$m*$10063$sFNhI
                          g$s*$10064$sFNhI
                          g$ae*$10065$sFNhI
                          g$r$10066$sFNhI)
                        (if (not g$r$10066$sFNhI)
                          '#f
                          (if (eq? g$p$10062$sFNhI '_)
                            g$r$10066$sFNhI
                            (if (eq? g$p$10062$sFNhI 'any)
                              (cons
                                (g$stx^$10051$sFNhI
                                  g$e$10061$sFNhI
                                  g$m*$10063$sFNhI
                                  g$s*$10064$sFNhI
                                  g$ae*$10065$sFNhI)
                                g$r$10066$sFNhI)
                              (if (g$stx?$8098$sFNhI g$e$10061$sFNhI)
                                (if (not (g$top-marked?$8064$sFNhI
                                           g$m*$10063$sFNhI))
                                  (begin
                                    '#f
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$join-wraps$8113$sFNhI
                                           g$m*$10063$sFNhI
                                           g$s*$10064$sFNhI
                                           g$ae*$10065$sFNhI
                                           g$e$10061$sFNhI)))
                                      (case-lambda
                                        ((g$m*$10070$sFNhI
                                           g$s*$10071$sFNhI
                                           g$ae*$10072$sFNhI)
                                         ((case-lambda
                                            ((g$ae*$10073$sFNhI
                                               g$s*$10074$sFNhI
                                               g$m*$10075$sFNhI)
                                             (g$match$10058$sFNhI
                                               (g$stx-expr$8100$sFNhI
                                                 g$e$10061$sFNhI)
                                               g$p$10062$sFNhI
                                               g$m*$10075$sFNhI
                                               g$s*$10074$sFNhI
                                               g$ae*$10073$sFNhI
                                               g$r$10066$sFNhI)))
                                          g$ae*$10072$sFNhI
                                          g$s*$10071$sFNhI
                                          g$m*$10070$sFNhI)))))
                                  '#f)
                                (if (annotation? g$e$10061$sFNhI)
                                  (g$match$10058$sFNhI
                                    (annotation-expression g$e$10061$sFNhI)
                                    g$p$10062$sFNhI
                                    g$m*$10063$sFNhI
                                    g$s*$10064$sFNhI
                                    g$ae*$10065$sFNhI
                                    g$r$10066$sFNhI)
                                  (g$match*$10057$sFNhI
                                    g$e$10061$sFNhI
                                    g$p$10062$sFNhI
                                    g$m*$10063$sFNhI
                                    g$s*$10064$sFNhI
                                    g$ae*$10065$sFNhI
                                    g$r$10066$sFNhI))))))))))
           (case-lambda
             ((g$e$10059$sFNhI g$p$10060$sFNhI)
              (g$match$10058$sFNhI
                g$e$10059$sFNhI
                g$p$10060$sFNhI
                '()
                '()
                '()
                '()))))))))
   (g$ellipsis?$8406$sFNhI
     g$ellipsis?$11924$sFNhI
     (case-lambda
       ((g$x$10165$sFNhI)
        (if (g$id?$8126$sFNhI g$x$10165$sFNhI)
          (begin
            '#f
            (g$free-id=?$8130$sFNhI
              g$x$10165$sFNhI
              (g$scheme-stx$8348$sFNhI '...)))
          '#f))))
   (g$underscore?$8407$sFNhI
     g$underscore?$11925$sFNhI
     (case-lambda
       ((g$x$10166$sFNhI)
        (if (g$id?$8126$sFNhI g$x$10166$sFNhI)
          (begin
            '#f
            (g$free-id=?$8130$sFNhI
              g$x$10166$sFNhI
              (g$scheme-stx$8348$sFNhI '_)))
          '#f))))
   (g$verify-literals$8408$sFNhI
     g$verify-literals$11926$sFNhI
     (case-lambda
       ((g$lits$10167$sFNhI g$expr$10168$sFNhI)
        (g$for-each$5158$sFNhI
          (case-lambda
            ((g$x$10169$sFNhI)
             (if ((case-lambda
                    ((g$t$10170$sFNhI)
                     (if g$t$10170$sFNhI
                       g$t$10170$sFNhI
                       ((case-lambda
                          ((g$t$10171$sFNhI)
                           (if g$t$10171$sFNhI
                             g$t$10171$sFNhI
                             (begin
                               '#f
                               (g$underscore?$8407$sFNhI g$x$10169$sFNhI)))))
                        (g$ellipsis?$8406$sFNhI g$x$10169$sFNhI)))))
                  (not (g$id?$8126$sFNhI g$x$10169$sFNhI)))
               (g$syntax-violation$8517$sFNhI
                 '#f
                 '"invalid literal"
                 g$expr$10168$sFNhI
                 g$x$10169$sFNhI)
               (void))))
          g$lits$10167$sFNhI))))
   (g$syntax-case-transformer$8409$sFNhI
     g$syntax-case-transformer$11927$sFNhI
     ((case-lambda
        (()
         (letrec* ((g$build-dispatch-call$10172$sFNhI
                     (case-lambda
                       ((g$pvars$10229$sFNhI
                          g$expr$10230$sFNhI
                          g$y$10231$sFNhI
                          g$r$10232$sFNhI
                          g$mr$10233$sFNhI)
                        ((case-lambda
                           ((g$ids$10234$sFNhI g$levels$10235$sFNhI)
                            ((case-lambda
                               ((g$labels$10236$sFNhI g$new-vars$10237$sFNhI)
                                ((case-lambda
                                   ((g$body$10238$sFNhI)
                                    (list
                                      '(primitive apply)
                                      (g$build-lambda$8052$sFNhI
                                        '#f
                                        g$new-vars$10237$sFNhI
                                        g$body$10238$sFNhI)
                                      g$y$10231$sFNhI)))
                                 (g$chi-expr$8423$sFNhI
                                   (g$add-subst$8116$sFNhI
                                     (g$make-full-rib$8094$sFNhI
                                       g$ids$10234$sFNhI
                                       g$labels$10236$sFNhI)
                                     g$expr$10230$sFNhI)
                                   (append
                                     (g$map$5157$sFNhI
                                       (case-lambda
                                         ((g$label$10239$sFNhI
                                            g$var$10240$sFNhI
                                            g$level$10241$sFNhI)
                                          (cons
                                            g$label$10239$sFNhI
                                            (g$make-binding$8142$sFNhI
                                              'syntax
                                              (cons
                                                g$var$10240$sFNhI
                                                g$level$10241$sFNhI)))))
                                       g$labels$10236$sFNhI
                                       g$new-vars$10237$sFNhI
                                       (g$map$5157$sFNhI
                                         cdr
                                         g$pvars$10229$sFNhI))
                                     g$r$10232$sFNhI)
                                   g$mr$10233$sFNhI))))
                             (g$map$5157$sFNhI
                               g$gen-label$8067$sFNhI
                               g$ids$10234$sFNhI)
                             (g$map$5157$sFNhI
                               g$gen-lexical$8065$sFNhI
                               g$ids$10234$sFNhI))))
                         (g$map$5157$sFNhI car g$pvars$10229$sFNhI)
                         (g$map$5157$sFNhI cdr g$pvars$10229$sFNhI)))))
                   (g$invalid-ids-error$10173$sFNhI
                     (case-lambda
                       ((g$id*$10223$sFNhI g$e$10224$sFNhI g$class$10225$sFNhI)
                        ((letrec ((g$find$10226$sFNhI
                                    (case-lambda
                                      ((g$id*$10227$sFNhI g$ok*$10228$sFNhI)
                                       (if (null? g$id*$10227$sFNhI)
                                         (g$syntax-violation$8517$sFNhI
                                           '#f
                                           '"invalid syntax"
                                           g$e$10224$sFNhI)
                                         (if (g$id?$8126$sFNhI
                                               (car g$id*$10227$sFNhI))
                                           (if (g$bound-id-member?$8133$sFNhI
                                                 (car g$id*$10227$sFNhI)
                                                 g$ok*$10228$sFNhI)
                                             (g$syntax-error$8514$sFNhI
                                               (car g$id*$10227$sFNhI)
                                               '"duplicate "
                                               g$class$10225$sFNhI)
                                             (g$find$10226$sFNhI
                                               (cdr g$id*$10227$sFNhI)
                                               (cons
                                                 (car g$id*$10227$sFNhI)
                                                 g$ok*$10228$sFNhI)))
                                           (g$syntax-error$8514$sFNhI
                                             (car g$id*$10227$sFNhI)
                                             '"invalid "
                                             g$class$10225$sFNhI)))))))
                           g$find$10226$sFNhI)
                         g$id*$10223$sFNhI
                         '()))))
                   (g$gen-clause$10174$sFNhI
                     (case-lambda
                       ((g$x$10203$sFNhI
                          g$keys$10204$sFNhI
                          g$clauses$10205$sFNhI
                          g$r$10206$sFNhI
                          g$mr$10207$sFNhI
                          g$pat$10208$sFNhI
                          g$fender$10209$sFNhI
                          g$expr$10210$sFNhI)
                        (call-with-values
                          (case-lambda
                            (()
                             (g$convert-pattern$8404$sFNhI
                               g$pat$10208$sFNhI
                               g$keys$10204$sFNhI)))
                          (case-lambda
                            ((g$p$10213$sFNhI g$pvars$10214$sFNhI)
                             ((case-lambda
                                ((g$pvars$10215$sFNhI g$p$10216$sFNhI)
                                 (if (not (g$distinct-bound-ids?$8132$sFNhI
                                            (g$map$5157$sFNhI
                                              car
                                              g$pvars$10215$sFNhI)))
                                   (g$invalid-ids-error$10173$sFNhI
                                     (g$map$5157$sFNhI car g$pvars$10215$sFNhI)
                                     g$pat$10208$sFNhI
                                     '"pattern variable")
                                   (if (not (g$for-all$5155$sFNhI
                                              (case-lambda
                                                ((g$x$10217$sFNhI)
                                                 (not (g$ellipsis?$8406$sFNhI
                                                        (car g$x$10217$sFNhI)))))
                                              g$pvars$10215$sFNhI))
                                     (g$syntax-violation$8517$sFNhI
                                       '#f
                                       '"misplaced ellipsis in syntax-case pattern"
                                       g$pat$10208$sFNhI)
                                     ((case-lambda
                                        ((g$y$10218$sFNhI)
                                         ((case-lambda
                                            ((g$test$10219$sFNhI)
                                             ((case-lambda
                                                ((g$conseq$10220$sFNhI)
                                                 ((case-lambda
                                                    ((g$altern$10221$sFNhI)
                                                     (list
                                                       (g$build-lambda$8052$sFNhI
                                                         '#f
                                                         (list g$y$10218$sFNhI)
                                                         (list
                                                           'if
                                                           g$test$10219$sFNhI
                                                           g$conseq$10220$sFNhI
                                                           g$altern$10221$sFNhI))
                                                       (list
                                                         '(primitive
                                                            syntax-dispatch)
                                                         g$x$10203$sFNhI
                                                         (list
                                                           'quote
                                                           g$p$10216$sFNhI)))))
                                                  (g$gen-syntax-case$10175$sFNhI
                                                    g$x$10203$sFNhI
                                                    g$keys$10204$sFNhI
                                                    g$clauses$10205$sFNhI
                                                    g$r$10206$sFNhI
                                                    g$mr$10207$sFNhI))))
                                              (g$build-dispatch-call$10172$sFNhI
                                                g$pvars$10215$sFNhI
                                                g$expr$10210$sFNhI
                                                g$y$10218$sFNhI
                                                g$r$10206$sFNhI
                                                g$mr$10207$sFNhI))))
                                          (if (eq? g$fender$10209$sFNhI '#t)
                                            g$y$10218$sFNhI
                                            ((case-lambda
                                               ((g$call$10222$sFNhI)
                                                (list
                                                  'if
                                                  g$y$10218$sFNhI
                                                  g$call$10222$sFNhI
                                                  (list 'quote '#f))))
                                             (g$build-dispatch-call$10172$sFNhI
                                               g$pvars$10215$sFNhI
                                               g$fender$10209$sFNhI
                                               g$y$10218$sFNhI
                                               g$r$10206$sFNhI
                                               g$mr$10207$sFNhI))))))
                                      (g$gen-lexical$8065$sFNhI 'tmp))))))
                              g$pvars$10214$sFNhI
                              g$p$10213$sFNhI)))))))
                   (g$gen-syntax-case$10175$sFNhI
                     (case-lambda
                       ((g$x$10186$sFNhI
                          g$keys$10187$sFNhI
                          g$clauses$10188$sFNhI
                          g$r$10189$sFNhI
                          g$mr$10190$sFNhI)
                        (if (null? g$clauses$10188$sFNhI)
                          (list '(primitive syntax-error) g$x$10186$sFNhI)
                          ((case-lambda
                             ((g$t$10191$sFNhI)
                              ((case-lambda
                                 ((g$ls/false$10192$sFNhI)
                                  (if g$ls/false$10192$sFNhI
                                    (apply
                                      (case-lambda
                                        ((g$pat$10193$sFNhI g$expr$10194$sFNhI)
                                         (if (if (g$id?$8126$sFNhI
                                                   g$pat$10193$sFNhI)
                                               (if (not (g$bound-id-member?$8133$sFNhI
                                                          g$pat$10193$sFNhI
                                                          g$keys$10187$sFNhI))
                                                 (begin
                                                   '#f
                                                   (not (g$ellipsis?$8406$sFNhI
                                                          g$pat$10193$sFNhI)))
                                                 '#f)
                                               '#f)
                                           (if (g$free-id=?$8130$sFNhI
                                                 g$pat$10193$sFNhI
                                                 (g$scheme-stx$8348$sFNhI '_))
                                             (g$chi-expr$8423$sFNhI
                                               g$expr$10194$sFNhI
                                               g$r$10189$sFNhI
                                               g$mr$10190$sFNhI)
                                             ((case-lambda
                                                ((g$lab$10195$sFNhI
                                                   g$lex$10196$sFNhI)
                                                 ((case-lambda
                                                    ((g$body$10197$sFNhI)
                                                     (list
                                                       (g$build-lambda$8052$sFNhI
                                                         '#f
                                                         (list
                                                           g$lex$10196$sFNhI)
                                                         g$body$10197$sFNhI)
                                                       g$x$10186$sFNhI)))
                                                  (g$chi-expr$8423$sFNhI
                                                    (g$add-subst$8116$sFNhI
                                                      (g$make-full-rib$8094$sFNhI
                                                        (list g$pat$10193$sFNhI)
                                                        (list
                                                          g$lab$10195$sFNhI))
                                                      g$expr$10194$sFNhI)
                                                    (cons
                                                      (cons
                                                        g$lab$10195$sFNhI
                                                        (g$make-binding$8142$sFNhI
                                                          'syntax
                                                          (cons
                                                            g$lex$10196$sFNhI
                                                            '0)))
                                                      g$r$10189$sFNhI)
                                                    g$mr$10190$sFNhI))))
                                              (g$gen-label$8067$sFNhI
                                                g$pat$10193$sFNhI)
                                              (g$gen-lexical$8065$sFNhI
                                                g$pat$10193$sFNhI)))
                                           (g$gen-clause$10174$sFNhI
                                             g$x$10186$sFNhI
                                             g$keys$10187$sFNhI
                                             (cdr g$clauses$10188$sFNhI)
                                             g$r$10189$sFNhI
                                             g$mr$10190$sFNhI
                                             g$pat$10193$sFNhI
                                             '#t
                                             g$expr$10194$sFNhI))))
                                      g$ls/false$10192$sFNhI)
                                    ((case-lambda
                                       ((g$t$10198$sFNhI)
                                        ((case-lambda
                                           ((g$ls/false$10199$sFNhI)
                                            (if g$ls/false$10199$sFNhI
                                              (apply
                                                (case-lambda
                                                  ((g$pat$10200$sFNhI
                                                     g$fender$10201$sFNhI
                                                     g$expr$10202$sFNhI)
                                                   (g$gen-clause$10174$sFNhI
                                                     g$x$10186$sFNhI
                                                     g$keys$10187$sFNhI
                                                     (cdr g$clauses$10188$sFNhI)
                                                     g$r$10189$sFNhI
                                                     g$mr$10190$sFNhI
                                                     g$pat$10200$sFNhI
                                                     g$fender$10201$sFNhI
                                                     g$expr$10202$sFNhI)))
                                                g$ls/false$10199$sFNhI)
                                              (g$syntax-violation$8517$sFNhI
                                                '#f
                                                '"invalid syntax"
                                                g$t$10198$sFNhI))))
                                         (g$syntax-dispatch$8405$sFNhI
                                           g$t$10198$sFNhI
                                           '(any any any)))))
                                     g$t$10191$sFNhI))))
                               (g$syntax-dispatch$8405$sFNhI
                                 g$t$10191$sFNhI
                                 '(any any)))))
                           (car g$clauses$10188$sFNhI)))))))
           (case-lambda
             ((g$e$10176$sFNhI g$r$10177$sFNhI g$mr$10178$sFNhI)
              ((case-lambda
                 ((g$t$10179$sFNhI)
                  ((case-lambda
                     ((g$ls/false$10180$sFNhI)
                      (if g$ls/false$10180$sFNhI
                        (apply
                          (case-lambda
                            ((g$expr$10181$sFNhI
                               g$keys$10182$sFNhI
                               g$clauses$10183$sFNhI)
                             (begin
                               (g$verify-literals$8408$sFNhI
                                 g$keys$10182$sFNhI
                                 g$e$10176$sFNhI)
                               ((case-lambda
                                  ((g$x$10184$sFNhI)
                                   ((case-lambda
                                      ((g$body$10185$sFNhI)
                                       (list
                                         (g$build-lambda$8052$sFNhI
                                           '#f
                                           (list g$x$10184$sFNhI)
                                           g$body$10185$sFNhI)
                                         (g$chi-expr$8423$sFNhI
                                           g$expr$10181$sFNhI
                                           g$r$10177$sFNhI
                                           g$mr$10178$sFNhI))))
                                    (g$gen-syntax-case$10175$sFNhI
                                      g$x$10184$sFNhI
                                      g$keys$10182$sFNhI
                                      g$clauses$10183$sFNhI
                                      g$r$10177$sFNhI
                                      g$mr$10178$sFNhI))))
                                (g$gen-lexical$8065$sFNhI 'tmp)))))
                          g$ls/false$10180$sFNhI)
                        (g$syntax-violation$8517$sFNhI
                          '#f
                          '"invalid syntax"
                          g$t$10179$sFNhI))))
                   (g$syntax-dispatch$8405$sFNhI
                     g$t$10179$sFNhI
                     '(_ any each-any . each-any)))))
               g$e$10176$sFNhI))))))))
   (g$ellipsis-map$8410$sFNhI
     g$ellipsis-map$11928$sFNhI
     (case-lambda
       ((g$proc$10242$sFNhI g$ls$10243$sFNhI . g$ls*$10244$sFNhI)
        (letrec* ((g$who$10245$sFNhI '...))
          (begin
            (if (not (list? g$ls$10243$sFNhI))
              (assertion-violation
                g$who$10245$sFNhI
                '"not a list"
                g$ls$10243$sFNhI)
              (void))
            (if (not (null? g$ls*$10244$sFNhI))
              ((case-lambda
                 ((g$n$10246$sFNhI)
                  (g$for-each$5158$sFNhI
                    (case-lambda
                      ((g$x$10247$sFNhI)
                       (begin
                         (if (not (list? g$x$10247$sFNhI))
                           (assertion-violation
                             g$who$10245$sFNhI
                             '"not a list"
                             g$x$10247$sFNhI)
                           (void))
                         (if (not (= (length g$x$10247$sFNhI) g$n$10246$sFNhI))
                           (assertion-violation
                             g$who$10245$sFNhI
                             '"length mismatch"
                             g$ls$10243$sFNhI
                             g$x$10247$sFNhI)
                           (void)))))
                    g$ls*$10244$sFNhI)))
               (length g$ls$10243$sFNhI))
              (void))
            (apply
              g$map$5157$sFNhI
              g$proc$10242$sFNhI
              g$ls$10243$sFNhI
              g$ls*$10244$sFNhI))))))
   (g$syntax-transformer$8411$sFNhI
     g$syntax-transformer$11929$sFNhI
     ((case-lambda
        (()
         (letrec* ((g$gen-syntax$10248$sFNhI
                     (case-lambda
                       ((g$src$10308$sFNhI
                          g$e$10309$sFNhI
                          g$r$10310$sFNhI
                          g$maps$10311$sFNhI
                          g$ellipsis?$10312$sFNhI
                          g$vec?$10313$sFNhI)
                        ((case-lambda
                           ((g$t$10314$sFNhI)
                            ((case-lambda
                               ((g$ls/false$10315$sFNhI)
                                (if (if g$ls/false$10315$sFNhI
                                      (begin
                                        '#f
                                        (apply
                                          (case-lambda
                                            ((g$dots$10316$sFNhI)
                                             (g$ellipsis?$10312$sFNhI
                                               g$dots$10316$sFNhI)))
                                          g$ls/false$10315$sFNhI))
                                      '#f)
                                  (apply
                                    (case-lambda
                                      ((g$dots$10317$sFNhI)
                                       (g$syntax-violation$8517$sFNhI
                                         '#f
                                         '"misplaced ellipsis in syntax form"
                                         g$src$10308$sFNhI)))
                                    g$ls/false$10315$sFNhI)
                                  ((case-lambda
                                     ((g$t$10318$sFNhI)
                                      ((case-lambda
                                         ((g$ls/false$10319$sFNhI)
                                          (if (if g$ls/false$10319$sFNhI
                                                (begin
                                                  '#f
                                                  (apply
                                                    (case-lambda
                                                      ((g$id$10320$sFNhI)
                                                       (g$id?$8126$sFNhI
                                                         g$id$10320$sFNhI)))
                                                    g$ls/false$10319$sFNhI))
                                                '#f)
                                            (apply
                                              (case-lambda
                                                ((g$id$10321$sFNhI)
                                                 ((case-lambda
                                                    ((g$label$10322$sFNhI)
                                                     ((case-lambda
                                                        ((g$b$10323$sFNhI)
                                                         (if (eq? (g$binding-type$8143$sFNhI
                                                                    g$b$10323$sFNhI)
                                                                  'syntax)
                                                           (call-with-values
                                                             (case-lambda
                                                               (()
                                                                ((case-lambda
                                                                   ((g$var.lev$10326$sFNhI)
                                                                    (g$gen-ref$10249$sFNhI
                                                                      g$src$10308$sFNhI
                                                                      (car g$var.lev$10326$sFNhI)
                                                                      (cdr g$var.lev$10326$sFNhI)
                                                                      g$maps$10311$sFNhI)))
                                                                 (g$binding-value$8144$sFNhI
                                                                   g$b$10323$sFNhI))))
                                                             (case-lambda
                                                               ((g$var$10327$sFNhI
                                                                  g$maps$10328$sFNhI)
                                                                ((case-lambda
                                                                   ((g$maps$10329$sFNhI
                                                                      g$var$10330$sFNhI)
                                                                    (values
                                                                      (list
                                                                        'ref
                                                                        g$var$10330$sFNhI)
                                                                      g$maps$10329$sFNhI)))
                                                                 g$maps$10328$sFNhI
                                                                 g$var$10327$sFNhI))))
                                                           (values
                                                             (list
                                                               'quote
                                                               g$e$10309$sFNhI)
                                                             g$maps$10311$sFNhI))))
                                                      (g$label->binding$8141$sFNhI
                                                        g$label$10322$sFNhI
                                                        g$r$10310$sFNhI))))
                                                  (g$id->label$8139$sFNhI
                                                    g$e$10309$sFNhI))))
                                              g$ls/false$10319$sFNhI)
                                            ((case-lambda
                                               ((g$t$10331$sFNhI)
                                                ((case-lambda
                                                   ((g$ls/false$10332$sFNhI)
                                                    (if (if g$ls/false$10332$sFNhI
                                                          (begin
                                                            '#f
                                                            (apply
                                                              (case-lambda
                                                                ((g$dots$10333$sFNhI
                                                                   g$e$10334$sFNhI)
                                                                 (g$ellipsis?$10312$sFNhI
                                                                   g$dots$10333$sFNhI)))
                                                              g$ls/false$10332$sFNhI))
                                                          '#f)
                                                      (apply
                                                        (case-lambda
                                                          ((g$dots$10335$sFNhI
                                                             g$e$10336$sFNhI)
                                                           (if g$vec?$10313$sFNhI
                                                             (g$syntax-violation$8517$sFNhI
                                                               '#f
                                                               '"misplaced ellipsis in syntax form"
                                                               g$src$10308$sFNhI)
                                                             (g$gen-syntax$10248$sFNhI
                                                               g$src$10308$sFNhI
                                                               g$e$10336$sFNhI
                                                               g$r$10310$sFNhI
                                                               g$maps$10311$sFNhI
                                                               (case-lambda
                                                                 ((g$x$10337$sFNhI)
                                                                  '#f))
                                                               '#f))))
                                                        g$ls/false$10332$sFNhI)
                                                      ((case-lambda
                                                         ((g$t$10338$sFNhI)
                                                          ((case-lambda
                                                             ((g$ls/false$10339$sFNhI)
                                                              (if (if g$ls/false$10339$sFNhI
                                                                    (begin
                                                                      '#f
                                                                      (apply
                                                                        (case-lambda
                                                                          ((g$x$10340$sFNhI
                                                                             g$dots$10341$sFNhI
                                                                             g$y$10342$sFNhI)
                                                                           (g$ellipsis?$10312$sFNhI
                                                                             g$dots$10341$sFNhI)))
                                                                        g$ls/false$10339$sFNhI))
                                                                    '#f)
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$x$10343$sFNhI
                                                                       g$dots$10344$sFNhI
                                                                       g$y$10345$sFNhI)
                                                                     ((letrec ((g$f$10346$sFNhI
                                                                                 (case-lambda
                                                                                   ((g$y$10347$sFNhI
                                                                                      g$k$10348$sFNhI)
                                                                                    ((case-lambda
                                                                                       ((g$t$10349$sFNhI)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10350$sFNhI)
                                                                                            (if g$ls/false$10350$sFNhI
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (g$k$10348$sFNhI
                                                                                                     g$maps$10311$sFNhI)))
                                                                                                g$ls/false$10350$sFNhI)
                                                                                              ((case-lambda
                                                                                                 ((g$t$10351$sFNhI)
                                                                                                  ((case-lambda
                                                                                                     ((g$ls/false$10352$sFNhI)
                                                                                                      (if (if g$ls/false$10352$sFNhI
                                                                                                            (begin
                                                                                                              '#f
                                                                                                              (apply
                                                                                                                (case-lambda
                                                                                                                  ((g$dots$10353$sFNhI
                                                                                                                     g$y$10354$sFNhI)
                                                                                                                   (g$ellipsis?$10312$sFNhI
                                                                                                                     g$dots$10353$sFNhI)))
                                                                                                                g$ls/false$10352$sFNhI))
                                                                                                            '#f)
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$dots$10355$sFNhI
                                                                                                               g$y$10356$sFNhI)
                                                                                                             (g$f$10346$sFNhI
                                                                                                               g$y$10356$sFNhI
                                                                                                               (case-lambda
                                                                                                                 ((g$maps$10357$sFNhI)
                                                                                                                  (call-with-values
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (g$k$10348$sFNhI
                                                                                                                         (cons
                                                                                                                           '()
                                                                                                                           g$maps$10357$sFNhI))))
                                                                                                                    (case-lambda
                                                                                                                      ((g$x$10360$sFNhI
                                                                                                                         g$maps$10361$sFNhI)
                                                                                                                       ((case-lambda
                                                                                                                          ((g$maps$10362$sFNhI
                                                                                                                             g$x$10363$sFNhI)
                                                                                                                           (if (null?
                                                                                                                                 (car g$maps$10362$sFNhI))
                                                                                                                             (g$syntax-violation$8517$sFNhI
                                                                                                                               '#f
                                                                                                                               '"extra ellipsis in syntax form"
                                                                                                                               g$src$10308$sFNhI)
                                                                                                                             (values
                                                                                                                               (g$gen-mappend$10251$sFNhI
                                                                                                                                 g$x$10363$sFNhI
                                                                                                                                 (car g$maps$10362$sFNhI))
                                                                                                                               (cdr g$maps$10362$sFNhI)))))
                                                                                                                        g$maps$10361$sFNhI
                                                                                                                        g$x$10360$sFNhI)))))))))
                                                                                                          g$ls/false$10352$sFNhI)
                                                                                                        ((case-lambda
                                                                                                           ((g$t$10364$sFNhI)
                                                                                                            ((case-lambda
                                                                                                               ((g$ls/false$10365$sFNhI)
                                                                                                                (if g$ls/false$10365$sFNhI
                                                                                                                  (apply
                                                                                                                    (case-lambda
                                                                                                                      (()
                                                                                                                       (call-with-values
                                                                                                                         (case-lambda
                                                                                                                           (()
                                                                                                                            (g$gen-syntax$10248$sFNhI
                                                                                                                              g$src$10308$sFNhI
                                                                                                                              g$y$10347$sFNhI
                                                                                                                              g$r$10310$sFNhI
                                                                                                                              g$maps$10311$sFNhI
                                                                                                                              g$ellipsis?$10312$sFNhI
                                                                                                                              g$vec?$10313$sFNhI)))
                                                                                                                         (case-lambda
                                                                                                                           ((g$y$10368$sFNhI
                                                                                                                              g$maps$10369$sFNhI)
                                                                                                                            ((case-lambda
                                                                                                                               ((g$maps$10370$sFNhI
                                                                                                                                  g$y$10371$sFNhI)
                                                                                                                                (call-with-values
                                                                                                                                  (case-lambda
                                                                                                                                    (()
                                                                                                                                     (g$k$10348$sFNhI
                                                                                                                                       g$maps$10370$sFNhI)))
                                                                                                                                  (case-lambda
                                                                                                                                    ((g$x$10374$sFNhI
                                                                                                                                       g$maps$10375$sFNhI)
                                                                                                                                     ((case-lambda
                                                                                                                                        ((g$maps$10376$sFNhI
                                                                                                                                           g$x$10377$sFNhI)
                                                                                                                                         (values
                                                                                                                                           (g$gen-append$10250$sFNhI
                                                                                                                                             g$x$10377$sFNhI
                                                                                                                                             g$y$10371$sFNhI)
                                                                                                                                           g$maps$10376$sFNhI)))
                                                                                                                                      g$maps$10375$sFNhI
                                                                                                                                      g$x$10374$sFNhI))))))
                                                                                                                             g$maps$10369$sFNhI
                                                                                                                             g$y$10368$sFNhI))))))
                                                                                                                    g$ls/false$10365$sFNhI)
                                                                                                                  (g$syntax-violation$8517$sFNhI
                                                                                                                    '#f
                                                                                                                    '"invalid syntax"
                                                                                                                    g$t$10364$sFNhI))))
                                                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                                                               g$t$10364$sFNhI
                                                                                                               '_))))
                                                                                                         g$t$10351$sFNhI))))
                                                                                                   (g$syntax-dispatch$8405$sFNhI
                                                                                                     g$t$10351$sFNhI
                                                                                                     '(any .
                                                                                                           any)))))
                                                                                               g$t$10349$sFNhI))))
                                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                                           g$t$10349$sFNhI
                                                                                           '()))))
                                                                                     g$y$10347$sFNhI)))))
                                                                        g$f$10346$sFNhI)
                                                                      g$y$10345$sFNhI
                                                                      (case-lambda
                                                                        ((g$maps$10378$sFNhI)
                                                                         (call-with-values
                                                                           (case-lambda
                                                                             (()
                                                                              (g$gen-syntax$10248$sFNhI
                                                                                g$src$10308$sFNhI
                                                                                g$x$10343$sFNhI
                                                                                g$r$10310$sFNhI
                                                                                (cons
                                                                                  '()
                                                                                  g$maps$10378$sFNhI)
                                                                                g$ellipsis?$10312$sFNhI
                                                                                '#f)))
                                                                           (case-lambda
                                                                             ((g$x$10381$sFNhI
                                                                                g$maps$10382$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$maps$10383$sFNhI
                                                                                    g$x$10384$sFNhI)
                                                                                  (if (null?
                                                                                        (car g$maps$10383$sFNhI))
                                                                                    (g$syntax-violation$8517$sFNhI
                                                                                      '#f
                                                                                      '"extra ellipsis in syntax form"
                                                                                      g$src$10308$sFNhI)
                                                                                    (values
                                                                                      (g$gen-map$10252$sFNhI
                                                                                        g$x$10384$sFNhI
                                                                                        (car g$maps$10383$sFNhI))
                                                                                      (cdr g$maps$10383$sFNhI)))))
                                                                               g$maps$10382$sFNhI
                                                                               g$x$10381$sFNhI)))))))))
                                                                  g$ls/false$10339$sFNhI)
                                                                ((case-lambda
                                                                   ((g$t$10385$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$ls/false$10386$sFNhI)
                                                                        (if g$ls/false$10386$sFNhI
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$x$10387$sFNhI
                                                                                 g$y$10388$sFNhI)
                                                                               (call-with-values
                                                                                 (case-lambda
                                                                                   (()
                                                                                    (g$gen-syntax$10248$sFNhI
                                                                                      g$src$10308$sFNhI
                                                                                      g$x$10387$sFNhI
                                                                                      g$r$10310$sFNhI
                                                                                      g$maps$10311$sFNhI
                                                                                      g$ellipsis?$10312$sFNhI
                                                                                      '#f)))
                                                                                 (case-lambda
                                                                                   ((g$xnew$10391$sFNhI
                                                                                      g$maps$10392$sFNhI)
                                                                                    ((case-lambda
                                                                                       ((g$maps$10393$sFNhI
                                                                                          g$xnew$10394$sFNhI)
                                                                                        (call-with-values
                                                                                          (case-lambda
                                                                                            (()
                                                                                             (g$gen-syntax$10248$sFNhI
                                                                                               g$src$10308$sFNhI
                                                                                               g$y$10388$sFNhI
                                                                                               g$r$10310$sFNhI
                                                                                               g$maps$10393$sFNhI
                                                                                               g$ellipsis?$10312$sFNhI
                                                                                               g$vec?$10313$sFNhI)))
                                                                                          (case-lambda
                                                                                            ((g$ynew$10397$sFNhI
                                                                                               g$maps$10398$sFNhI)
                                                                                             ((case-lambda
                                                                                                ((g$maps$10399$sFNhI
                                                                                                   g$ynew$10400$sFNhI)
                                                                                                 (values
                                                                                                   (g$gen-cons$10253$sFNhI
                                                                                                     g$e$10309$sFNhI
                                                                                                     g$x$10387$sFNhI
                                                                                                     g$y$10388$sFNhI
                                                                                                     g$xnew$10394$sFNhI
                                                                                                     g$ynew$10400$sFNhI)
                                                                                                   g$maps$10399$sFNhI)))
                                                                                              g$maps$10398$sFNhI
                                                                                              g$ynew$10397$sFNhI))))))
                                                                                     g$maps$10392$sFNhI
                                                                                     g$xnew$10391$sFNhI))))))
                                                                            g$ls/false$10386$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$t$10401$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$ls/false$10402$sFNhI)
                                                                                  (if g$ls/false$10402$sFNhI
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$ls$10403$sFNhI)
                                                                                         (call-with-values
                                                                                           (case-lambda
                                                                                             (()
                                                                                              (g$gen-syntax$10248$sFNhI
                                                                                                g$src$10308$sFNhI
                                                                                                g$ls$10403$sFNhI
                                                                                                g$r$10310$sFNhI
                                                                                                g$maps$10311$sFNhI
                                                                                                g$ellipsis?$10312$sFNhI
                                                                                                '#t)))
                                                                                           (case-lambda
                                                                                             ((g$lsnew$10406$sFNhI
                                                                                                g$maps$10407$sFNhI)
                                                                                              ((case-lambda
                                                                                                 ((g$maps$10408$sFNhI
                                                                                                    g$lsnew$10409$sFNhI)
                                                                                                  (values
                                                                                                    (g$gen-vector$10254$sFNhI
                                                                                                      g$e$10309$sFNhI
                                                                                                      g$ls$10403$sFNhI
                                                                                                      g$lsnew$10409$sFNhI)
                                                                                                    g$maps$10408$sFNhI)))
                                                                                               g$maps$10407$sFNhI
                                                                                               g$lsnew$10406$sFNhI))))))
                                                                                      g$ls/false$10402$sFNhI)
                                                                                    ((case-lambda
                                                                                       ((g$t$10410$sFNhI)
                                                                                        ((case-lambda
                                                                                           ((g$ls/false$10411$sFNhI)
                                                                                            (if g$ls/false$10411$sFNhI
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  (()
                                                                                                   (values
                                                                                                     (list
                                                                                                       'quote
                                                                                                       g$e$10309$sFNhI)
                                                                                                     g$maps$10311$sFNhI)))
                                                                                                g$ls/false$10411$sFNhI)
                                                                                              (g$syntax-violation$8517$sFNhI
                                                                                                '#f
                                                                                                '"invalid syntax"
                                                                                                g$t$10410$sFNhI))))
                                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                                           g$t$10410$sFNhI
                                                                                           '_))))
                                                                                     g$t$10401$sFNhI))))
                                                                               (g$syntax-dispatch$8405$sFNhI
                                                                                 g$t$10401$sFNhI
                                                                                 '#(vector
                                                                                    each-any)))))
                                                                           g$t$10385$sFNhI))))
                                                                     (g$syntax-dispatch$8405$sFNhI
                                                                       g$t$10385$sFNhI
                                                                       '(any .
                                                                             any)))))
                                                                 g$t$10338$sFNhI))))
                                                           (g$syntax-dispatch$8405$sFNhI
                                                             g$t$10338$sFNhI
                                                             '(any any
                                                                   .
                                                                   any)))))
                                                       g$t$10331$sFNhI))))
                                                 (g$syntax-dispatch$8405$sFNhI
                                                   g$t$10331$sFNhI
                                                   '(any any)))))
                                             g$t$10318$sFNhI))))
                                       (g$syntax-dispatch$8405$sFNhI
                                         g$t$10318$sFNhI
                                         'any))))
                                   g$t$10314$sFNhI))))
                             (g$syntax-dispatch$8405$sFNhI
                               g$t$10314$sFNhI
                               'any))))
                         g$e$10309$sFNhI))))
                   (g$gen-ref$10249$sFNhI
                     (case-lambda
                       ((g$src$10295$sFNhI
                          g$var$10296$sFNhI
                          g$level$10297$sFNhI
                          g$maps$10298$sFNhI)
                        (if (= g$level$10297$sFNhI '0)
                          (values g$var$10296$sFNhI g$maps$10298$sFNhI)
                          (if (null? g$maps$10298$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"missing ellipsis in syntax form"
                              g$src$10295$sFNhI)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$gen-ref$10249$sFNhI
                                   g$src$10295$sFNhI
                                   g$var$10296$sFNhI
                                   (- g$level$10297$sFNhI '1)
                                   (cdr g$maps$10298$sFNhI))))
                              (case-lambda
                                ((g$outer-var$10301$sFNhI
                                   g$outer-maps$10302$sFNhI)
                                 ((case-lambda
                                    ((g$outer-maps$10303$sFNhI
                                       g$outer-var$10304$sFNhI)
                                     ((case-lambda
                                        ((g$t$10305$sFNhI)
                                         (if g$t$10305$sFNhI
                                           ((case-lambda
                                              ((g$b$10306$sFNhI)
                                               (values
                                                 (cdr g$b$10306$sFNhI)
                                                 g$maps$10298$sFNhI)))
                                            g$t$10305$sFNhI)
                                           ((case-lambda
                                              ((g$inner-var$10307$sFNhI)
                                               (values
                                                 g$inner-var$10307$sFNhI
                                                 (cons
                                                   (cons
                                                     (cons
                                                       g$outer-var$10304$sFNhI
                                                       g$inner-var$10307$sFNhI)
                                                     (car g$maps$10298$sFNhI))
                                                   g$outer-maps$10303$sFNhI))))
                                            (g$gen-lexical$8065$sFNhI 'tmp)))))
                                      (g$assq$5145$sFNhI
                                        g$outer-var$10304$sFNhI
                                        (car g$maps$10298$sFNhI)))))
                                  g$outer-maps$10302$sFNhI
                                  g$outer-var$10301$sFNhI)))))))))
                   (g$gen-append$10250$sFNhI
                     (case-lambda
                       ((g$x$10293$sFNhI g$y$10294$sFNhI)
                        (if (equal? g$y$10294$sFNhI ''())
                          g$x$10293$sFNhI
                          (list 'append g$x$10293$sFNhI g$y$10294$sFNhI)))))
                   (g$gen-mappend$10251$sFNhI
                     (case-lambda
                       ((g$e$10291$sFNhI g$map-env$10292$sFNhI)
                        (list
                          'apply
                          '(primitive append)
                          (g$gen-map$10252$sFNhI
                            g$e$10291$sFNhI
                            g$map-env$10292$sFNhI)))))
                   (g$gen-map$10252$sFNhI
                     (case-lambda
                       ((g$e$10282$sFNhI g$map-env$10283$sFNhI)
                        ((case-lambda
                           ((g$formals$10284$sFNhI g$actuals$10285$sFNhI)
                            (if (eq? (car g$e$10282$sFNhI) 'ref)
                              (car g$actuals$10285$sFNhI)
                              (if (g$for-all$5155$sFNhI
                                    (case-lambda
                                      ((g$x$10286$sFNhI)
                                       (if (eq? (car g$x$10286$sFNhI) 'ref)
                                         (begin
                                           '#f
                                           (g$memq$5149$sFNhI
                                             (g$cadr$5654$sFNhI g$x$10286$sFNhI)
                                             g$formals$10284$sFNhI))
                                         '#f)))
                                    (cdr g$e$10282$sFNhI))
                                ((case-lambda
                                   ((g$args$10287$sFNhI)
                                    (cons
                                      'map
                                      (cons
                                        (list 'primitive (car g$e$10282$sFNhI))
                                        g$args$10287$sFNhI))))
                                 (g$map$5157$sFNhI
                                   ((case-lambda
                                      ((g$r$10288$sFNhI)
                                       (case-lambda
                                         ((g$x$10289$sFNhI)
                                          (cdr (g$assq$5145$sFNhI
                                                 (g$cadr$5654$sFNhI
                                                   g$x$10289$sFNhI)
                                                 g$r$10288$sFNhI))))))
                                    (g$map$5157$sFNhI
                                      cons
                                      g$formals$10284$sFNhI
                                      g$actuals$10285$sFNhI))
                                   (cdr g$e$10282$sFNhI)))
                                (g$cons*$5159$sFNhI
                                  'map
                                  (list
                                    'lambda
                                    g$formals$10284$sFNhI
                                    g$e$10282$sFNhI)
                                  g$actuals$10285$sFNhI)))))
                         (g$map$5157$sFNhI cdr g$map-env$10283$sFNhI)
                         (g$map$5157$sFNhI
                           (case-lambda
                             ((g$x$10290$sFNhI)
                              (list 'ref (car g$x$10290$sFNhI))))
                           g$map-env$10283$sFNhI)))))
                   (g$gen-cons$10253$sFNhI
                     (case-lambda
                       ((g$e$10274$sFNhI
                          g$x$10275$sFNhI
                          g$y$10276$sFNhI
                          g$xnew$10277$sFNhI
                          g$ynew$10278$sFNhI)
                        ((case-lambda
                           ((g$t$10279$sFNhI)
                            (if (g$memv$5150$sFNhI g$t$10279$sFNhI '(quote))
                              (if (eq? (car g$xnew$10277$sFNhI) 'quote)
                                ((case-lambda
                                   ((g$xnew$10280$sFNhI g$ynew$10281$sFNhI)
                                    (if (if (eq? g$xnew$10280$sFNhI
                                                 g$x$10275$sFNhI)
                                          (begin
                                            '#f
                                            (eq? g$ynew$10281$sFNhI
                                                 g$y$10276$sFNhI))
                                          '#f)
                                      (list 'quote g$e$10274$sFNhI)
                                      (list
                                        'quote
                                        (cons
                                          g$xnew$10280$sFNhI
                                          g$ynew$10281$sFNhI)))))
                                 (g$cadr$5654$sFNhI g$xnew$10277$sFNhI)
                                 (g$cadr$5654$sFNhI g$ynew$10278$sFNhI))
                                (if (null?
                                      (g$cadr$5654$sFNhI g$ynew$10278$sFNhI))
                                  (list 'list g$xnew$10277$sFNhI)
                                  (list
                                    'cons
                                    g$xnew$10277$sFNhI
                                    g$ynew$10278$sFNhI)))
                              (if (g$memv$5150$sFNhI g$t$10279$sFNhI '(list))
                                (cons
                                  'list
                                  (cons
                                    g$xnew$10277$sFNhI
                                    (cdr g$ynew$10278$sFNhI)))
                                (list
                                  'cons
                                  g$xnew$10277$sFNhI
                                  g$ynew$10278$sFNhI)))))
                         (car g$ynew$10278$sFNhI)))))
                   (g$gen-vector$10254$sFNhI
                     (case-lambda
                       ((g$e$10271$sFNhI g$ls$10272$sFNhI g$lsnew$10273$sFNhI)
                        (if (eq? (car g$lsnew$10273$sFNhI) 'quote)
                          (if (eq? (g$cadr$5654$sFNhI g$lsnew$10273$sFNhI)
                                   g$ls$10272$sFNhI)
                            (list 'quote g$e$10271$sFNhI)
                            (list
                              'quote
                              (g$list->vector$5640$sFNhI
                                (g$cadr$5654$sFNhI g$lsnew$10273$sFNhI))))
                          (if (eq? (car g$lsnew$10273$sFNhI) 'list)
                            (cons 'vector (cdr g$lsnew$10273$sFNhI))
                            (list 'list->vector g$lsnew$10273$sFNhI))))))
                   (g$regen$10255$sFNhI
                     (case-lambda
                       ((g$x$10268$sFNhI)
                        ((case-lambda
                           ((g$t$10269$sFNhI)
                            (if (g$memv$5150$sFNhI g$t$10269$sFNhI '(ref))
                              (g$cadr$5654$sFNhI g$x$10268$sFNhI)
                              (if (g$memv$5150$sFNhI
                                    g$t$10269$sFNhI
                                    '(primitive))
                                (list
                                  'primitive
                                  (g$cadr$5654$sFNhI g$x$10268$sFNhI))
                                (if (g$memv$5150$sFNhI g$t$10269$sFNhI '(quote))
                                  (list
                                    'quote
                                    (g$cadr$5654$sFNhI g$x$10268$sFNhI))
                                  (if (g$memv$5150$sFNhI
                                        g$t$10269$sFNhI
                                        '(lambda))
                                    (g$build-lambda$8052$sFNhI
                                      '#f
                                      (g$cadr$5654$sFNhI g$x$10268$sFNhI)
                                      (g$regen$10255$sFNhI
                                        (g$caddr$5660$sFNhI g$x$10268$sFNhI)))
                                    (if (g$memv$5150$sFNhI
                                          g$t$10269$sFNhI
                                          '(map))
                                      ((case-lambda
                                         ((g$ls$10270$sFNhI)
                                          (cons
                                            '(primitive ellipsis-map)
                                            g$ls$10270$sFNhI)))
                                       (g$map$5157$sFNhI
                                         g$regen$10255$sFNhI
                                         (cdr g$x$10268$sFNhI)))
                                      (cons
                                        (list 'primitive (car g$x$10268$sFNhI))
                                        (g$map$5157$sFNhI
                                          g$regen$10255$sFNhI
                                          (cdr g$x$10268$sFNhI))))))))))
                         (car g$x$10268$sFNhI))))))
           (case-lambda
             ((g$e$10256$sFNhI g$r$10257$sFNhI g$mr$10258$sFNhI)
              ((case-lambda
                 ((g$t$10259$sFNhI)
                  ((case-lambda
                     ((g$ls/false$10260$sFNhI)
                      (if g$ls/false$10260$sFNhI
                        (apply
                          (case-lambda
                            ((g$x$10261$sFNhI)
                             (call-with-values
                               (case-lambda
                                 (()
                                  (g$gen-syntax$10248$sFNhI
                                    g$e$10256$sFNhI
                                    g$x$10261$sFNhI
                                    g$r$10257$sFNhI
                                    '()
                                    g$ellipsis?$8406$sFNhI
                                    '#f)))
                               (case-lambda
                                 ((g$e$10264$sFNhI g$maps$10265$sFNhI)
                                  ((case-lambda
                                     ((g$maps$10266$sFNhI g$e$10267$sFNhI)
                                      (g$regen$10255$sFNhI g$e$10267$sFNhI)))
                                   g$maps$10265$sFNhI
                                   g$e$10264$sFNhI))))))
                          g$ls/false$10260$sFNhI)
                        (g$syntax-violation$8517$sFNhI
                          '#f
                          '"invalid syntax"
                          g$t$10259$sFNhI))))
                   (g$syntax-dispatch$8405$sFNhI g$t$10259$sFNhI '(_ any)))))
               g$e$10256$sFNhI))))))))
   (g$core-macro-transformer$8412$sFNhI
     g$core-macro-transformer$11930$sFNhI
     (case-lambda
       ((g$name$10412$sFNhI)
        ((case-lambda
           ((g$t$10413$sFNhI)
            (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(quote))
              g$quote-transformer$8365$sFNhI
              (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(lambda))
                g$lambda-transformer$8367$sFNhI
                (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(case-lambda))
                  g$case-lambda-transformer$8366$sFNhI
                  (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(letrec))
                    g$letrec-transformer$8355$sFNhI
                    (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(letrec*))
                      g$letrec*-transformer$8356$sFNhI
                      (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(if))
                        g$if-transformer$8363$sFNhI
                        (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(foreign-call))
                          g$foreign-call-transformer$8403$sFNhI
                          (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(syntax-case))
                            g$syntax-case-transformer$8409$sFNhI
                            (if (g$memv$5150$sFNhI g$t$10413$sFNhI '(syntax))
                              g$syntax-transformer$8411$sFNhI
                              (if (g$memv$5150$sFNhI
                                    g$t$10413$sFNhI
                                    '(type-descriptor))
                                g$type-descriptor-transformer$8358$sFNhI
                                (if (g$memv$5150$sFNhI
                                      g$t$10413$sFNhI
                                      '(record-type-descriptor))
                                  g$record-type-descriptor-transformer$8359$sFNhI
                                  (if (g$memv$5150$sFNhI
                                        g$t$10413$sFNhI
                                        '(record-constructor-descriptor))
                                    g$record-constructor-descriptor-transformer$8360$sFNhI
                                    (if (g$memv$5150$sFNhI
                                          g$t$10413$sFNhI
                                          '(fluid-let-syntax))
                                      g$fluid-let-syntax-transformer$8357$sFNhI
                                      (assertion-violation
                                        'macro-transformer
                                        '"BUG: cannot find transformer"
                                        g$name$10412$sFNhI))))))))))))))))
         g$name$10412$sFNhI))))
   (g$file-options-macro$8413$sFNhI
     g$file-options-macro$11931$sFNhI
     (case-lambda
       ((g$x$10414$sFNhI)
        (letrec* ((g$valid-option?$10415$sFNhI
                    (case-lambda
                      ((g$x$10420$sFNhI)
                       (if (g$id?$8126$sFNhI g$x$10420$sFNhI)
                         (begin
                           '#f
                           (g$memq$5149$sFNhI
                             (g$id->sym$8127$sFNhI g$x$10420$sFNhI)
                             '(no-fail no-create no-truncate)))
                         '#f)))))
          ((case-lambda
             ((g$t$10416$sFNhI)
              ((case-lambda
                 ((g$ls/false$10417$sFNhI)
                  (if (if g$ls/false$10417$sFNhI
                        (begin
                          '#f
                          (apply
                            (case-lambda
                              ((g$opt*$10418$sFNhI)
                               (if (g$for-all$5155$sFNhI
                                     g$valid-option?$10415$sFNhI
                                     g$opt*$10418$sFNhI)
                                 (begin
                                   '#f
                                   (g$file-options-spec$7428$sFNhI
                                     (g$map$5157$sFNhI
                                       g$id->sym$8127$sFNhI
                                       g$opt*$10418$sFNhI)))
                                 '#f)))
                            g$ls/false$10417$sFNhI))
                        '#f)
                    (apply
                      (case-lambda
                        ((g$opt*$10419$sFNhI)
                         (g$bless$8368$sFNhI
                           (list
                             'quote
                             (g$file-options-spec$7428$sFNhI
                               (g$map$5157$sFNhI
                                 g$id->sym$8127$sFNhI
                                 g$opt*$10419$sFNhI))))))
                      g$ls/false$10417$sFNhI)
                    (g$syntax-violation$8517$sFNhI
                      '#f
                      '"invalid syntax"
                      g$t$10416$sFNhI))))
               (g$syntax-dispatch$8405$sFNhI g$t$10416$sFNhI '(_ . each-any)))))
           g$x$10414$sFNhI)))))
   (g$symbol-macro$8414$sFNhI
     g$symbol-macro$11932$sFNhI
     (case-lambda
       ((g$x$10421$sFNhI g$set$10422$sFNhI)
        ((case-lambda
           ((g$t$10423$sFNhI)
            ((case-lambda
               ((g$ls/false$10424$sFNhI)
                (if (if g$ls/false$10424$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$name$10425$sFNhI)
                             (if (g$id?$8126$sFNhI g$name$10425$sFNhI)
                               (begin
                                 '#f
                                 (g$memq$5149$sFNhI
                                   (g$id->sym$8127$sFNhI g$name$10425$sFNhI)
                                   g$set$10422$sFNhI))
                               '#f)))
                          g$ls/false$10424$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$name$10426$sFNhI)
                       (g$bless$8368$sFNhI (list 'quote g$name$10426$sFNhI))))
                    g$ls/false$10424$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$10423$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$10423$sFNhI '(_ any)))))
         g$x$10421$sFNhI))))
   (g$macro-transformer$8415$sFNhI
     g$macro-transformer$11933$sFNhI
     (case-lambda
       ((g$x$10427$sFNhI)
        (if (g$procedure?$5647$sFNhI g$x$10427$sFNhI)
          g$x$10427$sFNhI
          (if (g$symbol?$5645$sFNhI g$x$10427$sFNhI)
            ((case-lambda
               ((g$t$10428$sFNhI)
                (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(define-record-type))
                  g$define-record-type-macro$8399$sFNhI
                  (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(define-struct))
                    g$define-struct-macro$8398$sFNhI
                    (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(include))
                      g$include-macro$8393$sFNhI
                      (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(cond))
                        g$cond-macro$8391$sFNhI
                        (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(let))
                          g$let-macro$8371$sFNhI
                          (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(do))
                            g$do-macro$8387$sFNhI
                            (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(or))
                              g$or-macro$8389$sFNhI
                              (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(and))
                                g$and-macro$8390$sFNhI
                                (if (g$memv$5150$sFNhI g$t$10428$sFNhI '(let*))
                                  g$let*-macro$8388$sFNhI
                                  (if (g$memv$5150$sFNhI
                                        g$t$10428$sFNhI
                                        '(let-values))
                                    g$let-values-macro$8372$sFNhI
                                    (if (g$memv$5150$sFNhI
                                          g$t$10428$sFNhI
                                          '(let*-values))
                                      g$let*-values-macro$8373$sFNhI
                                      (if (g$memv$5150$sFNhI
                                            g$t$10428$sFNhI
                                            '(syntax-rules))
                                        g$syntax-rules-macro$8395$sFNhI
                                        (if (g$memv$5150$sFNhI
                                              g$t$10428$sFNhI
                                              '(quasiquote))
                                          g$quasiquote-macro$8396$sFNhI
                                          (if (g$memv$5150$sFNhI
                                                g$t$10428$sFNhI
                                                '(quasisyntax))
                                            g$quasisyntax-macro$8397$sFNhI
                                            (if (g$memv$5150$sFNhI
                                                  g$t$10428$sFNhI
                                                  '(with-syntax))
                                              g$with-syntax-macro$8369$sFNhI
                                              (if (g$memv$5150$sFNhI
                                                    g$t$10428$sFNhI
                                                    '(when))
                                                g$when-macro$8361$sFNhI
                                                (if (g$memv$5150$sFNhI
                                                      g$t$10428$sFNhI
                                                      '(unless))
                                                  g$unless-macro$8362$sFNhI
                                                  (if (g$memv$5150$sFNhI
                                                        g$t$10428$sFNhI
                                                        '(case))
                                                    g$case-macro$8364$sFNhI
                                                    (if (g$memv$5150$sFNhI
                                                          g$t$10428$sFNhI
                                                          '(identifier-syntax))
                                                      g$identifier-syntax-macro$8386$sFNhI
                                                      (if (g$memv$5150$sFNhI
                                                            g$t$10428$sFNhI
                                                            '(time))
                                                        g$time-macro$8382$sFNhI
                                                        (if (g$memv$5150$sFNhI
                                                              g$t$10428$sFNhI
                                                              '(delay))
                                                          g$delay-macro$8383$sFNhI
                                                          (if (g$memv$5150$sFNhI
                                                                g$t$10428$sFNhI
                                                                '(assert))
                                                            g$assert-macro$8384$sFNhI
                                                            (if (g$memv$5150$sFNhI
                                                                  g$t$10428$sFNhI
                                                                  '(endianness))
                                                              g$endianness-macro$8385$sFNhI
                                                              (if (g$memv$5150$sFNhI
                                                                    g$t$10428$sFNhI
                                                                    '(guard))
                                                                g$guard-macro$8380$sFNhI
                                                                (if (g$memv$5150$sFNhI
                                                                      g$t$10428$sFNhI
                                                                      '(define-enumeration))
                                                                  g$define-enumeration-macro$8381$sFNhI
                                                                  (if (g$memv$5150$sFNhI
                                                                        g$t$10428$sFNhI
                                                                        '(trace-lambda))
                                                                    g$trace-lambda-macro$8374$sFNhI
                                                                    (if (g$memv$5150$sFNhI
                                                                          g$t$10428$sFNhI
                                                                          '(trace-define))
                                                                      g$trace-define-macro$8375$sFNhI
                                                                      (if (g$memv$5150$sFNhI
                                                                            g$t$10428$sFNhI
                                                                            '(trace-define-syntax))
                                                                        g$trace-define-syntax-macro$8376$sFNhI
                                                                        (if (g$memv$5150$sFNhI
                                                                              g$t$10428$sFNhI
                                                                              '(trace-let-syntax))
                                                                          g$trace-let-syntax-macro$8378$sFNhI
                                                                          (if (g$memv$5150$sFNhI
                                                                                g$t$10428$sFNhI
                                                                                '(trace-letrec-syntax))
                                                                            g$trace-letrec-syntax-macro$8379$sFNhI
                                                                            (if (g$memv$5150$sFNhI
                                                                                  g$t$10428$sFNhI
                                                                                  '(define-condition-type))
                                                                              g$define-condition-type-macro$8400$sFNhI
                                                                              (if (g$memv$5150$sFNhI
                                                                                    g$t$10428$sFNhI
                                                                                    '(parameterize))
                                                                                g$parameterize-macro$8402$sFNhI
                                                                                (if (g$memv$5150$sFNhI
                                                                                      g$t$10428$sFNhI
                                                                                      '(include-into))
                                                                                  g$include-into-macro$8394$sFNhI
                                                                                  (if (g$memv$5150$sFNhI
                                                                                        g$t$10428$sFNhI
                                                                                        '(eol-style))
                                                                                    (case-lambda
                                                                                      ((g$x$10429$sFNhI)
                                                                                       (g$symbol-macro$8414$sFNhI
                                                                                         g$x$10429$sFNhI
                                                                                         '(none
                                                                                            lf
                                                                                            cr
                                                                                            crlf
                                                                                            nel
                                                                                            crnel
                                                                                            ls))))
                                                                                    (if (g$memv$5150$sFNhI
                                                                                          g$t$10428$sFNhI
                                                                                          '(error-handling-mode))
                                                                                      (case-lambda
                                                                                        ((g$x$10430$sFNhI)
                                                                                         (g$symbol-macro$8414$sFNhI
                                                                                           g$x$10430$sFNhI
                                                                                           '(ignore
                                                                                              raise
                                                                                              replace))))
                                                                                      (if (g$memv$5150$sFNhI
                                                                                            g$t$10428$sFNhI
                                                                                            '(buffer-mode))
                                                                                        (case-lambda
                                                                                          ((g$x$10431$sFNhI)
                                                                                           (g$symbol-macro$8414$sFNhI
                                                                                             g$x$10431$sFNhI
                                                                                             '(none
                                                                                                line
                                                                                                block))))
                                                                                        (if (g$memv$5150$sFNhI
                                                                                              g$t$10428$sFNhI
                                                                                              '(file-options))
                                                                                          g$file-options-macro$8413$sFNhI
                                                                                          (if (g$memv$5150$sFNhI
                                                                                                g$t$10428$sFNhI
                                                                                                '(... =>
                                                                                                      _
                                                                                                      else
                                                                                                      unquote
                                                                                                      unquote-splicing
                                                                                                      unsyntax
                                                                                                      unsyntax-splicing
                                                                                                      fields
                                                                                                      mutable
                                                                                                      immutable
                                                                                                      parent
                                                                                                      protocol
                                                                                                      sealed
                                                                                                      opaque
                                                                                                      nongenerative
                                                                                                      parent-rtd))
                                                                                            g$incorrect-usage-macro$8401$sFNhI
                                                                                            (error
                                                                                              'macro-transformer
                                                                                              '"BUG: invalid macro"
                                                                                              g$x$10427$sFNhI)))))))))))))))))))))))))))))))))))))))))
             g$x$10427$sFNhI)
            (error
              'core-macro-transformer
              '"BUG: invalid macro"
              g$x$10427$sFNhI))))))
   (g$local-macro-transformer$8416$sFNhI
     g$local-macro-transformer$11934$sFNhI
     (case-lambda ((g$x$10432$sFNhI) (car g$x$10432$sFNhI))))
   (g$do-macro-call$8417$sFNhI
     g$do-macro-call$11935$sFNhI
     (case-lambda
       ((g$transformer$10433$sFNhI g$expr$10434$sFNhI g$r$10435$sFNhI)
        (letrec* ((g$return$10436$sFNhI
                    (case-lambda
                      ((g$x$10444$sFNhI)
                       (begin
                         ((letrec ((g$f$10445$sFNhI
                                     (case-lambda
                                       ((g$x$10446$sFNhI)
                                        (if (not (g$stx?$8098$sFNhI
                                                   g$x$10446$sFNhI))
                                          (if (pair? g$x$10446$sFNhI)
                                            (begin
                                              (g$f$10445$sFNhI
                                                (car g$x$10446$sFNhI))
                                              (g$f$10445$sFNhI
                                                (cdr g$x$10446$sFNhI)))
                                            (if (g$vector?$5643$sFNhI
                                                  g$x$10446$sFNhI)
                                              (g$vector-for-each$5706$sFNhI
                                                g$f$10445$sFNhI
                                                g$x$10446$sFNhI)
                                              (if (g$symbol?$5645$sFNhI
                                                    g$x$10446$sFNhI)
                                                (g$syntax-violation$8517$sFNhI
                                                  '#f
                                                  '"raw symbol encountered in output of macro"
                                                  g$expr$10434$sFNhI
                                                  g$x$10446$sFNhI)
                                                (void))))
                                          (void))))))
                            g$f$10445$sFNhI)
                          g$x$10444$sFNhI)
                         (g$add-mark$8115$sFNhI
                           (g$gen-mark$8110$sFNhI)
                           g$x$10444$sFNhI
                           g$expr$10434$sFNhI))))))
          ((case-lambda
             ((g$x$10437$sFNhI)
              (if (g$procedure?$5647$sFNhI g$x$10437$sFNhI)
                (g$return$10436$sFNhI
                  (g$x$10437$sFNhI
                    (case-lambda
                      ((g$id$10438$sFNhI)
                       (begin
                         (if (not (g$id?$8126$sFNhI g$id$10438$sFNhI))
                           (assertion-violation
                             'rho
                             '"not an identifier"
                             g$id$10438$sFNhI)
                           (void))
                         ((case-lambda
                            ((g$label$10439$sFNhI)
                             ((case-lambda
                                ((g$binding$10440$sFNhI)
                                 ((case-lambda
                                    ((g$t$10441$sFNhI)
                                     (if (g$memv$5150$sFNhI
                                           g$t$10441$sFNhI
                                           '(local-ctv))
                                       (g$cadr$5654$sFNhI g$binding$10440$sFNhI)
                                       (if (g$memv$5150$sFNhI
                                             g$t$10441$sFNhI
                                             '(global-ctv))
                                         ((case-lambda
                                            ((g$lib$10442$sFNhI
                                               g$loc$10443$sFNhI)
                                             (begin
                                               (g$visit-library$7937$sFNhI
                                                 g$lib$10442$sFNhI)
                                               (symbol-value
                                                 g$loc$10443$sFNhI))))
                                          (g$cadr$5654$sFNhI
                                            g$binding$10440$sFNhI)
                                          (g$cddr$5656$sFNhI
                                            g$binding$10440$sFNhI))
                                         '#f))))
                                  (car g$binding$10440$sFNhI))))
                              (g$label->binding$8141$sFNhI
                                g$label$10439$sFNhI
                                g$r$10435$sFNhI))))
                          (g$id->label$8139$sFNhI g$id$10438$sFNhI)))))))
                (g$return$10436$sFNhI g$x$10437$sFNhI))))
           (g$transformer$10433$sFNhI
             (g$add-mark$8115$sFNhI
               g$anti-mark$8111$sFNhI
               g$expr$10434$sFNhI
               '#f)))))))
   (g$chi-macro$8418$sFNhI
     g$chi-macro$11936$sFNhI
     (case-lambda
       ((g$p$10447$sFNhI g$e$10448$sFNhI g$r$10449$sFNhI)
        (g$do-macro-call$8417$sFNhI
          (g$macro-transformer$8415$sFNhI g$p$10447$sFNhI)
          g$e$10448$sFNhI
          g$r$10449$sFNhI))))
   (g$chi-local-macro$8419$sFNhI
     g$chi-local-macro$11937$sFNhI
     (case-lambda
       ((g$p$10450$sFNhI g$e$10451$sFNhI g$r$10452$sFNhI)
        (g$do-macro-call$8417$sFNhI
          (g$local-macro-transformer$8416$sFNhI g$p$10450$sFNhI)
          g$e$10451$sFNhI
          g$r$10452$sFNhI))))
   (g$chi-global-macro$8420$sFNhI
     g$chi-global-macro$11938$sFNhI
     (case-lambda
       ((g$p$10453$sFNhI g$e$10454$sFNhI g$r$10455$sFNhI)
        ((case-lambda
           ((g$lib$10456$sFNhI g$loc$10457$sFNhI)
            (begin
              (g$visit-library$7937$sFNhI g$lib$10456$sFNhI)
              ((case-lambda
                 ((g$x$10458$sFNhI)
                  ((case-lambda
                     ((g$transformer$10459$sFNhI)
                      (g$do-macro-call$8417$sFNhI
                        g$transformer$10459$sFNhI
                        g$e$10454$sFNhI
                        g$r$10455$sFNhI)))
                   (if (g$procedure?$5647$sFNhI g$x$10458$sFNhI)
                     g$x$10458$sFNhI
                     (assertion-violation
                       'chi-global-macro
                       '"BUG: not a procedure"
                       g$x$10458$sFNhI)))))
               (symbol-value g$loc$10457$sFNhI)))))
         (car g$p$10453$sFNhI)
         (cdr g$p$10453$sFNhI)))))
   (g$chi-expr*$8421$sFNhI
     g$chi-expr*$11939$sFNhI
     (case-lambda
       ((g$e*$10460$sFNhI g$r$10461$sFNhI g$mr$10462$sFNhI)
        (if (null? g$e*$10460$sFNhI)
          '()
          ((case-lambda
             ((g$e$10463$sFNhI)
              (cons
                g$e$10463$sFNhI
                (g$chi-expr*$8421$sFNhI
                  (cdr g$e*$10460$sFNhI)
                  g$r$10461$sFNhI
                  g$mr$10462$sFNhI))))
           (g$chi-expr$8423$sFNhI
             (car g$e*$10460$sFNhI)
             g$r$10461$sFNhI
             g$mr$10462$sFNhI))))))
   (g$chi-application$8422$sFNhI
     g$chi-application$11940$sFNhI
     (case-lambda
       ((g$e$10464$sFNhI g$r$10465$sFNhI g$mr$10466$sFNhI)
        ((case-lambda
           ((g$t$10467$sFNhI)
            ((case-lambda
               ((g$ls/false$10468$sFNhI)
                (if g$ls/false$10468$sFNhI
                  (apply
                    (case-lambda
                      ((g$rator$10469$sFNhI g$rands$10470$sFNhI)
                       ((case-lambda
                          ((g$rator$10471$sFNhI)
                           (cons
                             g$rator$10471$sFNhI
                             (g$chi-expr*$8421$sFNhI
                               g$rands$10470$sFNhI
                               g$r$10465$sFNhI
                               g$mr$10466$sFNhI))))
                        (g$chi-expr$8423$sFNhI
                          g$rator$10469$sFNhI
                          g$r$10465$sFNhI
                          g$mr$10466$sFNhI))))
                    g$ls/false$10468$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$10467$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$10467$sFNhI '(any . each-any)))))
         g$e$10464$sFNhI))))
   (g$chi-expr$8423$sFNhI
     g$chi-expr$11941$sFNhI
     (case-lambda
       ((g$e$10472$sFNhI g$r$10473$sFNhI g$mr$10474$sFNhI)
        (call-with-values
          (case-lambda
            (() (g$syntax-type$8146$sFNhI g$e$10472$sFNhI g$r$10473$sFNhI)))
          (case-lambda
            ((g$type$10478$sFNhI g$value$10479$sFNhI g$kwd$10480$sFNhI)
             ((case-lambda
                ((g$kwd$10481$sFNhI g$value$10482$sFNhI g$type$10483$sFNhI)
                 ((case-lambda
                    ((g$t$10484$sFNhI)
                     (if (g$memv$5150$sFNhI g$t$10484$sFNhI '(core-macro))
                       ((case-lambda
                          ((g$transformer$10485$sFNhI)
                           (g$transformer$10485$sFNhI
                             g$e$10472$sFNhI
                             g$r$10473$sFNhI
                             g$mr$10474$sFNhI)))
                        (g$core-macro-transformer$8412$sFNhI
                          g$value$10482$sFNhI))
                       (if (g$memv$5150$sFNhI g$t$10484$sFNhI '(global))
                         ((case-lambda
                            ((g$lib$10486$sFNhI)
                             ((case-lambda
                                ((g$loc$10487$sFNhI)
                                 (begin
                                   ((g$inv-collector$8457$sFNhI)
                                    g$lib$10486$sFNhI)
                                   g$loc$10487$sFNhI)))
                              (cdr g$value$10482$sFNhI))))
                          (car g$value$10482$sFNhI))
                         (if (g$memv$5150$sFNhI g$t$10484$sFNhI '(core-prim))
                           ((case-lambda
                              ((g$name$10488$sFNhI)
                               (list 'primitive g$name$10488$sFNhI)))
                            g$value$10482$sFNhI)
                           (if (g$memv$5150$sFNhI g$t$10484$sFNhI '(call))
                             (g$chi-application$8422$sFNhI
                               g$e$10472$sFNhI
                               g$r$10473$sFNhI
                               g$mr$10474$sFNhI)
                             (if (g$memv$5150$sFNhI g$t$10484$sFNhI '(lexical))
                               ((case-lambda
                                  ((g$lex$10489$sFNhI) g$lex$10489$sFNhI))
                                (g$lexical-var$8349$sFNhI g$value$10482$sFNhI))
                               (if (g$memv$5150$sFNhI
                                     g$t$10484$sFNhI
                                     '(global-macro global-macro!))
                                 (g$chi-expr$8423$sFNhI
                                   (g$chi-global-macro$8420$sFNhI
                                     g$value$10482$sFNhI
                                     g$e$10472$sFNhI
                                     g$r$10473$sFNhI)
                                   g$r$10473$sFNhI
                                   g$mr$10474$sFNhI)
                                 (if (g$memv$5150$sFNhI
                                       g$t$10484$sFNhI
                                       '(local-macro local-macro!))
                                   (g$chi-expr$8423$sFNhI
                                     (g$chi-local-macro$8419$sFNhI
                                       g$value$10482$sFNhI
                                       g$e$10472$sFNhI
                                       g$r$10473$sFNhI)
                                     g$r$10473$sFNhI
                                     g$mr$10474$sFNhI)
                                   (if (g$memv$5150$sFNhI
                                         g$t$10484$sFNhI
                                         '(macro macro!))
                                     (g$chi-expr$8423$sFNhI
                                       (g$chi-macro$8418$sFNhI
                                         g$value$10482$sFNhI
                                         g$e$10472$sFNhI
                                         g$r$10473$sFNhI)
                                       g$r$10473$sFNhI
                                       g$mr$10474$sFNhI)
                                     (if (g$memv$5150$sFNhI
                                           g$t$10484$sFNhI
                                           '(constant))
                                       ((case-lambda
                                          ((g$datum$10490$sFNhI)
                                           (list 'quote g$datum$10490$sFNhI)))
                                        g$value$10482$sFNhI)
                                       (if (g$memv$5150$sFNhI
                                             g$t$10484$sFNhI
                                             '(set!))
                                         (g$chi-set!$8424$sFNhI
                                           g$e$10472$sFNhI
                                           g$r$10473$sFNhI
                                           g$mr$10474$sFNhI)
                                         (if (g$memv$5150$sFNhI
                                               g$t$10484$sFNhI
                                               '(begin))
                                           ((case-lambda
                                              ((g$t$10491$sFNhI)
                                               ((case-lambda
                                                  ((g$ls/false$10492$sFNhI)
                                                   (if g$ls/false$10492$sFNhI
                                                     (apply
                                                       (case-lambda
                                                         ((g$x$10493$sFNhI
                                                            g$x*$10494$sFNhI)
                                                          (g$build-sequence$8055$sFNhI
                                                            '#f
                                                            (g$chi-expr*$8421$sFNhI
                                                              (cons
                                                                g$x$10493$sFNhI
                                                                g$x*$10494$sFNhI)
                                                              g$r$10473$sFNhI
                                                              g$mr$10474$sFNhI))))
                                                       g$ls/false$10492$sFNhI)
                                                     (g$syntax-violation$8517$sFNhI
                                                       '#f
                                                       '"invalid syntax"
                                                       g$t$10491$sFNhI))))
                                                (g$syntax-dispatch$8405$sFNhI
                                                  g$t$10491$sFNhI
                                                  '(_ any . each-any)))))
                                            g$e$10472$sFNhI)
                                           (if (g$memv$5150$sFNhI
                                                 g$t$10484$sFNhI
                                                 '(let-syntax letrec-syntax))
                                             ((case-lambda
                                                ((g$t$10495$sFNhI)
                                                 ((case-lambda
                                                    ((g$ls/false$10496$sFNhI)
                                                     (if (if g$ls/false$10496$sFNhI
                                                           (begin
                                                             '#f
                                                             (apply
                                                               (case-lambda
                                                                 ((g$xlhs*$10497$sFNhI
                                                                    g$xrhs*$10498$sFNhI
                                                                    g$xbody$10499$sFNhI
                                                                    g$xbody*$10500$sFNhI)
                                                                  (if (not (g$valid-bound-ids?$8131$sFNhI
                                                                             g$xlhs*$10497$sFNhI))
                                                                    (g$syntax-violation$8517$sFNhI
                                                                      '#f
                                                                      '"invalid identifiers"
                                                                      g$e$10472$sFNhI)
                                                                    (void))))
                                                               g$ls/false$10496$sFNhI))
                                                           '#f)
                                                       (apply
                                                         (case-lambda
                                                           ((g$xlhs*$10501$sFNhI
                                                              g$xrhs*$10502$sFNhI
                                                              g$xbody$10503$sFNhI
                                                              g$xbody*$10504$sFNhI)
                                                            ((case-lambda
                                                               ((g$xlab*$10505$sFNhI)
                                                                ((case-lambda
                                                                   ((g$xrib$10506$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$xb*$10507$sFNhI)
                                                                        (g$build-sequence$8055$sFNhI
                                                                          '#f
                                                                          (g$chi-expr*$8421$sFNhI
                                                                            (g$map$5157$sFNhI
                                                                              (case-lambda
                                                                                ((g$x$10508$sFNhI)
                                                                                 (g$add-subst$8116$sFNhI
                                                                                   g$xrib$10506$sFNhI
                                                                                   g$x$10508$sFNhI)))
                                                                              (cons
                                                                                g$xbody$10503$sFNhI
                                                                                g$xbody*$10504$sFNhI))
                                                                            (append
                                                                              (g$map$5157$sFNhI
                                                                                cons
                                                                                g$xlab*$10505$sFNhI
                                                                                g$xb*$10507$sFNhI)
                                                                              g$r$10473$sFNhI)
                                                                            (append
                                                                              (g$map$5157$sFNhI
                                                                                cons
                                                                                g$xlab*$10505$sFNhI
                                                                                g$xb*$10507$sFNhI)
                                                                              g$mr$10474$sFNhI)))))
                                                                     (g$map$5157$sFNhI
                                                                       (case-lambda
                                                                         ((g$x$10509$sFNhI)
                                                                          (g$make-eval-transformer$8159$sFNhI
                                                                            (g$expand-transformer$8450$sFNhI
                                                                              (if (eq? g$type$10483$sFNhI
                                                                                       'let-syntax)
                                                                                g$x$10509$sFNhI
                                                                                (g$add-subst$8116$sFNhI
                                                                                  g$xrib$10506$sFNhI
                                                                                  g$x$10509$sFNhI))
                                                                              g$mr$10474$sFNhI))))
                                                                       g$xrhs*$10502$sFNhI))))
                                                                 (g$make-full-rib$8094$sFNhI
                                                                   g$xlhs*$10501$sFNhI
                                                                   g$xlab*$10505$sFNhI))))
                                                             (g$map$5157$sFNhI
                                                               g$gen-label$8067$sFNhI
                                                               g$xlhs*$10501$sFNhI))))
                                                         g$ls/false$10496$sFNhI)
                                                       (g$syntax-violation$8517$sFNhI
                                                         '#f
                                                         '"invalid syntax"
                                                         g$t$10495$sFNhI))))
                                                  (g$syntax-dispatch$8405$sFNhI
                                                    g$t$10495$sFNhI
                                                    '(_ #(each (any any))
                                                        any
                                                        .
                                                        each-any)))))
                                              g$e$10472$sFNhI)
                                             (if (g$memv$5150$sFNhI
                                                   g$t$10484$sFNhI
                                                   '(displaced-lexical))
                                               (g$syntax-violation$8517$sFNhI
                                                 '#f
                                                 '"identifier out of context"
                                                 g$e$10472$sFNhI)
                                               (if (g$memv$5150$sFNhI
                                                     g$t$10484$sFNhI
                                                     '(syntax))
                                                 (g$syntax-violation$8517$sFNhI
                                                   '#f
                                                   '"reference to pattern variable outside a syntax form"
                                                   g$e$10472$sFNhI)
                                                 (if (g$memv$5150$sFNhI
                                                       g$t$10484$sFNhI
                                                       '(define define-syntax
                                                          module
                                                          import
                                                          library))
                                                   (g$syntax-violation$8517$sFNhI
                                                     '#f
                                                     (string-append
                                                       ((case-lambda
                                                          ((g$t$10510$sFNhI)
                                                           (if (g$memv$5150$sFNhI
                                                                 g$t$10510$sFNhI
                                                                 '(define))
                                                             '"a definition"
                                                             (if (g$memv$5150$sFNhI
                                                                   g$t$10510$sFNhI
                                                                   '(define-syntax))
                                                               '"a define-syntax"
                                                               (if (g$memv$5150$sFNhI
                                                                     g$t$10510$sFNhI
                                                                     '(module))
                                                                 '"a module definition"
                                                                 (if (g$memv$5150$sFNhI
                                                                       g$t$10510$sFNhI
                                                                       '(library))
                                                                   '"a library definition"
                                                                   (if (g$memv$5150$sFNhI
                                                                         g$t$10510$sFNhI
                                                                         '(import))
                                                                     '"an import declaration"
                                                                     (if (g$memv$5150$sFNhI
                                                                           g$t$10510$sFNhI
                                                                           '(export))
                                                                       '"an export declaration"
                                                                       '"a non-expression"))))))))
                                                        g$type$10483$sFNhI)
                                                       '" was found where an expression was expected")
                                                     g$e$10472$sFNhI)
                                                   (if (g$memv$5150$sFNhI
                                                         g$t$10484$sFNhI
                                                         '(mutable))
                                                     (g$syntax-violation$8517$sFNhI
                                                       '#f
                                                       '"attempt to reference an unexportable variable"
                                                       g$e$10472$sFNhI)
                                                     (g$syntax-violation$8517$sFNhI
                                                       '#f
                                                       '"invalid expression"
                                                       g$e$10472$sFNhI)))))))))))))))))))
                  g$type$10483$sFNhI)))
              g$kwd$10480$sFNhI
              g$value$10479$sFNhI
              g$type$10478$sFNhI)))))))
   (g$chi-set!$8424$sFNhI
     g$chi-set!$11942$sFNhI
     (case-lambda
       ((g$e$10511$sFNhI g$r$10512$sFNhI g$mr$10513$sFNhI)
        ((case-lambda
           ((g$t$10514$sFNhI)
            ((case-lambda
               ((g$ls/false$10515$sFNhI)
                (if (if g$ls/false$10515$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$x$10516$sFNhI g$v$10517$sFNhI)
                             (g$id?$8126$sFNhI g$x$10516$sFNhI)))
                          g$ls/false$10515$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$x$10518$sFNhI g$v$10519$sFNhI)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$syntax-type$8146$sFNhI
                              g$x$10518$sFNhI
                              g$r$10512$sFNhI)))
                         (case-lambda
                           ((g$type$10523$sFNhI
                              g$value$10524$sFNhI
                              g$kwd$10525$sFNhI)
                            ((case-lambda
                               ((g$kwd$10526$sFNhI
                                  g$value$10527$sFNhI
                                  g$type$10528$sFNhI)
                                ((case-lambda
                                   ((g$t$10529$sFNhI)
                                    (if (g$memv$5150$sFNhI
                                          g$t$10529$sFNhI
                                          '(lexical))
                                      (begin
                                        (g$set-lexical-mutable!$8351$sFNhI
                                          g$value$10527$sFNhI
                                          '#t)
                                        (list
                                          'set!
                                          (g$lexical-var$8349$sFNhI
                                            g$value$10527$sFNhI)
                                          (g$chi-expr$8423$sFNhI
                                            g$v$10519$sFNhI
                                            g$r$10512$sFNhI
                                            g$mr$10513$sFNhI)))
                                      (if (g$memv$5150$sFNhI
                                            g$t$10529$sFNhI
                                            '(core-prim))
                                        (g$syntax-violation$8517$sFNhI
                                          '#f
                                          '"cannot modify imported core primitive"
                                          g$e$10511$sFNhI)
                                        (if (g$memv$5150$sFNhI
                                              g$t$10529$sFNhI
                                              '(global))
                                          (g$syntax-violation$8517$sFNhI
                                            '#f
                                            '"attempt to modify imported binding"
                                            g$e$10511$sFNhI)
                                          (if (g$memv$5150$sFNhI
                                                g$t$10529$sFNhI
                                                '(global-macro!))
                                            (g$chi-expr$8423$sFNhI
                                              (g$chi-global-macro$8420$sFNhI
                                                g$value$10527$sFNhI
                                                g$e$10511$sFNhI
                                                g$r$10512$sFNhI)
                                              g$r$10512$sFNhI
                                              g$mr$10513$sFNhI)
                                            (if (g$memv$5150$sFNhI
                                                  g$t$10529$sFNhI
                                                  '(local-macro!))
                                              (g$chi-expr$8423$sFNhI
                                                (g$chi-local-macro$8419$sFNhI
                                                  g$value$10527$sFNhI
                                                  g$e$10511$sFNhI
                                                  g$r$10512$sFNhI)
                                                g$r$10512$sFNhI
                                                g$mr$10513$sFNhI)
                                              (if (g$memv$5150$sFNhI
                                                    g$t$10529$sFNhI
                                                    '(mutable))
                                                (g$syntax-violation$8517$sFNhI
                                                  '#f
                                                  '"attempt to assign to an unexportable variable"
                                                  g$e$10511$sFNhI)
                                                (g$syntax-violation$8517$sFNhI
                                                  '#f
                                                  '"invalid syntax"
                                                  g$e$10511$sFNhI)))))))))
                                 g$type$10528$sFNhI)))
                             g$kwd$10525$sFNhI
                             g$value$10524$sFNhI
                             g$type$10523$sFNhI))))))
                    g$ls/false$10515$sFNhI)
                  (g$syntax-violation$8517$sFNhI
                    '#f
                    '"invalid syntax"
                    g$t$10514$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$10514$sFNhI '(_ any any)))))
         g$e$10511$sFNhI))))
   (g$verify-formals$8425$sFNhI
     g$verify-formals$11943$sFNhI
     (case-lambda
       ((g$fmls$10530$sFNhI g$stx$10531$sFNhI)
        ((case-lambda
           ((g$t$10532$sFNhI)
            ((case-lambda
               ((g$ls/false$10533$sFNhI)
                (if g$ls/false$10533$sFNhI
                  (apply
                    (case-lambda
                      ((g$x*$10534$sFNhI)
                       (if (not (g$valid-bound-ids?$8131$sFNhI
                                  g$x*$10534$sFNhI))
                         (g$invalid-fmls-error$8370$sFNhI
                           g$stx$10531$sFNhI
                           g$fmls$10530$sFNhI)
                         (void))))
                    g$ls/false$10533$sFNhI)
                  ((case-lambda
                     ((g$t$10535$sFNhI)
                      ((case-lambda
                         ((g$ls/false$10536$sFNhI)
                          (if g$ls/false$10536$sFNhI
                            (apply
                              (case-lambda
                                ((g$x*$10537$sFNhI g$x$10538$sFNhI)
                                 (if (not (g$valid-bound-ids?$8131$sFNhI
                                            (cons
                                              g$x$10538$sFNhI
                                              g$x*$10537$sFNhI)))
                                   (g$invalid-fmls-error$8370$sFNhI
                                     g$stx$10531$sFNhI
                                     g$fmls$10530$sFNhI)
                                   (void))))
                              g$ls/false$10536$sFNhI)
                            ((case-lambda
                               ((g$t$10539$sFNhI)
                                ((case-lambda
                                   ((g$ls/false$10540$sFNhI)
                                    (if g$ls/false$10540$sFNhI
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$stx$10531$sFNhI)))
                                        g$ls/false$10540$sFNhI)
                                      (g$syntax-violation$8517$sFNhI
                                        '#f
                                        '"invalid syntax"
                                        g$t$10539$sFNhI))))
                                 (g$syntax-dispatch$8405$sFNhI
                                   g$t$10539$sFNhI
                                   '_))))
                             g$t$10535$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$10535$sFNhI
                         '#(each+ any () any)))))
                   g$t$10532$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$10532$sFNhI 'each-any))))
         g$fmls$10530$sFNhI))))
   (g$chi-lambda-clause$8426$sFNhI
     g$chi-lambda-clause$11944$sFNhI
     (case-lambda
       ((g$stx$10541$sFNhI
          g$fmls$10542$sFNhI
          g$body*$10543$sFNhI
          g$r$10544$sFNhI
          g$mr$10545$sFNhI)
        ((case-lambda
           ((g$t$10546$sFNhI)
            ((case-lambda
               ((g$ls/false$10547$sFNhI)
                (if g$ls/false$10547$sFNhI
                  (apply
                    (case-lambda
                      ((g$x*$10548$sFNhI)
                       (begin
                         (g$verify-formals$8425$sFNhI
                           g$fmls$10542$sFNhI
                           g$stx$10541$sFNhI)
                         ((case-lambda
                            ((g$lex*$10549$sFNhI g$lab*$10550$sFNhI)
                             (values
                               g$lex*$10549$sFNhI
                               (g$chi-internal$8434$sFNhI
                                 (g$add-subst$8116$sFNhI
                                   (g$make-full-rib$8094$sFNhI
                                     g$x*$10548$sFNhI
                                     g$lab*$10550$sFNhI)
                                   g$body*$10543$sFNhI)
                                 (g$add-lexicals$8353$sFNhI
                                   g$lab*$10550$sFNhI
                                   g$lex*$10549$sFNhI
                                   g$r$10544$sFNhI)
                                 g$mr$10545$sFNhI))))
                          (g$map$5157$sFNhI
                            g$gen-lexical$8065$sFNhI
                            g$x*$10548$sFNhI)
                          (g$map$5157$sFNhI
                            g$gen-label$8067$sFNhI
                            g$x*$10548$sFNhI)))))
                    g$ls/false$10547$sFNhI)
                  ((case-lambda
                     ((g$t$10551$sFNhI)
                      ((case-lambda
                         ((g$ls/false$10552$sFNhI)
                          (if g$ls/false$10552$sFNhI
                            (apply
                              (case-lambda
                                ((g$x*$10553$sFNhI g$x$10554$sFNhI)
                                 (begin
                                   (g$verify-formals$8425$sFNhI
                                     g$fmls$10542$sFNhI
                                     g$stx$10541$sFNhI)
                                   ((case-lambda
                                      ((g$lex*$10555$sFNhI
                                         g$lab*$10556$sFNhI
                                         g$lex$10557$sFNhI
                                         g$lab$10558$sFNhI)
                                       (values
                                         (append
                                           g$lex*$10555$sFNhI
                                           g$lex$10557$sFNhI)
                                         (g$chi-internal$8434$sFNhI
                                           (g$add-subst$8116$sFNhI
                                             (g$make-full-rib$8094$sFNhI
                                               (cons
                                                 g$x$10554$sFNhI
                                                 g$x*$10553$sFNhI)
                                               (cons
                                                 g$lab$10558$sFNhI
                                                 g$lab*$10556$sFNhI))
                                             g$body*$10543$sFNhI)
                                           (g$add-lexicals$8353$sFNhI
                                             (cons
                                               g$lab$10558$sFNhI
                                               g$lab*$10556$sFNhI)
                                             (cons
                                               g$lex$10557$sFNhI
                                               g$lex*$10555$sFNhI)
                                             g$r$10544$sFNhI)
                                           g$mr$10545$sFNhI))))
                                    (g$map$5157$sFNhI
                                      g$gen-lexical$8065$sFNhI
                                      g$x*$10553$sFNhI)
                                    (g$map$5157$sFNhI
                                      g$gen-label$8067$sFNhI
                                      g$x*$10553$sFNhI)
                                    (g$gen-lexical$8065$sFNhI g$x$10554$sFNhI)
                                    (g$gen-label$8067$sFNhI g$x$10554$sFNhI)))))
                              g$ls/false$10552$sFNhI)
                            ((case-lambda
                               ((g$t$10559$sFNhI)
                                ((case-lambda
                                   ((g$ls/false$10560$sFNhI)
                                    (if g$ls/false$10560$sFNhI
                                      (apply
                                        (case-lambda
                                          (()
                                           (g$syntax-violation$8517$sFNhI
                                             '#f
                                             '"invalid syntax"
                                             g$fmls$10542$sFNhI)))
                                        g$ls/false$10560$sFNhI)
                                      (g$syntax-violation$8517$sFNhI
                                        '#f
                                        '"invalid syntax"
                                        g$t$10559$sFNhI))))
                                 (g$syntax-dispatch$8405$sFNhI
                                   g$t$10559$sFNhI
                                   '_))))
                             g$t$10551$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$10551$sFNhI
                         '#(each+ any () any)))))
                   g$t$10546$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$10546$sFNhI 'each-any))))
         g$fmls$10542$sFNhI))))
   (g$chi-lambda-clause*$8427$sFNhI
     g$chi-lambda-clause*$11945$sFNhI
     (case-lambda
       ((g$stx$10561$sFNhI
          g$fmls*$10562$sFNhI
          g$body**$10563$sFNhI
          g$r$10564$sFNhI
          g$mr$10565$sFNhI)
        (if (null? g$fmls*$10562$sFNhI)
          (values '() '())
          (call-with-values
            (case-lambda
              (()
               (g$chi-lambda-clause$8426$sFNhI
                 g$stx$10561$sFNhI
                 (car g$fmls*$10562$sFNhI)
                 (car g$body**$10563$sFNhI)
                 g$r$10564$sFNhI
                 g$mr$10565$sFNhI)))
            (case-lambda
              ((g$a$10568$sFNhI g$b$10569$sFNhI)
               ((case-lambda
                  ((g$b$10570$sFNhI g$a$10571$sFNhI)
                   (call-with-values
                     (case-lambda
                       (()
                        (g$chi-lambda-clause*$8427$sFNhI
                          g$stx$10561$sFNhI
                          (cdr g$fmls*$10562$sFNhI)
                          (cdr g$body**$10563$sFNhI)
                          g$r$10564$sFNhI
                          g$mr$10565$sFNhI)))
                     (case-lambda
                       ((g$a*$10574$sFNhI g$b*$10575$sFNhI)
                        ((case-lambda
                           ((g$b*$10576$sFNhI g$a*$10577$sFNhI)
                            (values
                              (cons g$a$10571$sFNhI g$a*$10577$sFNhI)
                              (cons g$b$10570$sFNhI g$b*$10576$sFNhI))))
                         g$b*$10575$sFNhI
                         g$a*$10574$sFNhI))))))
                g$b$10569$sFNhI
                g$a$10568$sFNhI))))))))
   (g$chi-defun$8428$sFNhI
     g$chi-defun$11946$sFNhI
     (case-lambda
       ((g$x$10578$sFNhI g$r$10579$sFNhI g$mr$10580$sFNhI)
        ((case-lambda
           ((g$fmls$10581$sFNhI g$body*$10582$sFNhI)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-lambda-clause$8426$sFNhI
                   g$fmls$10581$sFNhI
                   g$fmls$10581$sFNhI
                   g$body*$10582$sFNhI
                   g$r$10579$sFNhI
                   g$mr$10580$sFNhI)))
              (case-lambda
                ((g$fmls$10585$sFNhI g$body$10586$sFNhI)
                 ((case-lambda
                    ((g$body$10587$sFNhI g$fmls$10588$sFNhI)
                     (g$build-lambda$8052$sFNhI
                       '#f
                       g$fmls$10588$sFNhI
                       g$body$10587$sFNhI)))
                  g$body$10586$sFNhI
                  g$fmls$10585$sFNhI))))))
         (car g$x$10578$sFNhI)
         (cdr g$x$10578$sFNhI)))))
   (g$chi-rhs$8429$sFNhI
     g$chi-rhs$11947$sFNhI
     (case-lambda
       ((g$rhs$10589$sFNhI g$r$10590$sFNhI g$mr$10591$sFNhI)
        ((case-lambda
           ((g$t$10592$sFNhI)
            (if (g$memv$5150$sFNhI g$t$10592$sFNhI '(defun))
              (g$chi-defun$8428$sFNhI
                (cdr g$rhs$10589$sFNhI)
                g$r$10590$sFNhI
                g$mr$10591$sFNhI)
              (if (g$memv$5150$sFNhI g$t$10592$sFNhI '(expr))
                ((case-lambda
                   ((g$expr$10593$sFNhI)
                    (g$chi-expr$8423$sFNhI
                      g$expr$10593$sFNhI
                      g$r$10590$sFNhI
                      g$mr$10591$sFNhI)))
                 (cdr g$rhs$10589$sFNhI))
                (if (g$memv$5150$sFNhI g$t$10592$sFNhI '(top-expr))
                  ((case-lambda
                     ((g$expr$10594$sFNhI)
                      (g$build-sequence$8055$sFNhI
                        '#f
                        (list
                          (g$chi-expr$8423$sFNhI
                            g$expr$10594$sFNhI
                            g$r$10590$sFNhI
                            g$mr$10591$sFNhI)
                          (g$build-void$8056$sFNhI)))))
                   (cdr g$rhs$10589$sFNhI))
                  (assertion-violation
                    'chi-rhs
                    '"BUG: invalid rhs"
                    g$rhs$10589$sFNhI))))))
         (car g$rhs$10589$sFNhI)))))
   (g$expand-interaction-rhs*/init*$8430$sFNhI
     g$expand-interaction-rhs*/init*$11948$sFNhI
     (case-lambda
       ((g$lhs*$10595$sFNhI
          g$rhs*$10596$sFNhI
          g$init*$10597$sFNhI
          g$r$10598$sFNhI
          g$mr$10599$sFNhI)
        ((letrec ((g$f$10600$sFNhI
                    (case-lambda
                      ((g$lhs*$10601$sFNhI g$rhs*$10602$sFNhI)
                       (if (null? g$lhs*$10601$sFNhI)
                         (g$map$5157$sFNhI
                           (case-lambda
                             ((g$x$10603$sFNhI)
                              (g$chi-expr$8423$sFNhI
                                g$x$10603$sFNhI
                                g$r$10598$sFNhI
                                g$mr$10599$sFNhI)))
                           g$init*$10597$sFNhI)
                         ((case-lambda
                            ((g$lhs$10604$sFNhI g$rhs$10605$sFNhI)
                             ((case-lambda
                                ((g$t$10606$sFNhI)
                                 (if (g$memv$5150$sFNhI
                                       g$t$10606$sFNhI
                                       '(defun))
                                   ((case-lambda
                                      ((g$rhs$10607$sFNhI)
                                       (cons
                                         (list
                                           'set!
                                           g$lhs$10604$sFNhI
                                           g$rhs$10607$sFNhI)
                                         (g$f$10600$sFNhI
                                           (cdr g$lhs*$10601$sFNhI)
                                           (cdr g$rhs*$10602$sFNhI)))))
                                    (g$chi-defun$8428$sFNhI
                                      (cdr g$rhs$10605$sFNhI)
                                      g$r$10598$sFNhI
                                      g$mr$10599$sFNhI))
                                   (if (g$memv$5150$sFNhI
                                         g$t$10606$sFNhI
                                         '(expr))
                                     ((case-lambda
                                        ((g$rhs$10608$sFNhI)
                                         (cons
                                           (list
                                             'set!
                                             g$lhs$10604$sFNhI
                                             g$rhs$10608$sFNhI)
                                           (g$f$10600$sFNhI
                                             (cdr g$lhs*$10601$sFNhI)
                                             (cdr g$rhs*$10602$sFNhI)))))
                                      (g$chi-expr$8423$sFNhI
                                        (cdr g$rhs$10605$sFNhI)
                                        g$r$10598$sFNhI
                                        g$mr$10599$sFNhI))
                                     (if (g$memv$5150$sFNhI
                                           g$t$10606$sFNhI
                                           '(top-expr))
                                       ((case-lambda
                                          ((g$e$10609$sFNhI)
                                           (cons
                                             g$e$10609$sFNhI
                                             (g$f$10600$sFNhI
                                               (cdr g$lhs*$10601$sFNhI)
                                               (cdr g$rhs*$10602$sFNhI)))))
                                        (g$chi-expr$8423$sFNhI
                                          (cdr g$rhs$10605$sFNhI)
                                          g$r$10598$sFNhI
                                          g$mr$10599$sFNhI))
                                       (error
                                         'expand-interaction
                                         '"invallid"
                                         g$rhs$10605$sFNhI))))))
                              (car g$rhs$10605$sFNhI))))
                          (car g$lhs*$10601$sFNhI)
                          (car g$rhs*$10602$sFNhI)))))))
           g$f$10600$sFNhI)
         g$lhs*$10595$sFNhI
         g$rhs*$10596$sFNhI))))
   (g$chi-rhs*$8431$sFNhI
     g$chi-rhs*$11949$sFNhI
     (case-lambda
       ((g$rhs*$10610$sFNhI g$r$10611$sFNhI g$mr$10612$sFNhI)
        ((letrec ((g$f$10613$sFNhI
                    (case-lambda
                      ((g$ls$10614$sFNhI)
                       (if (null? g$ls$10614$sFNhI)
                         '()
                         ((case-lambda
                            ((g$a$10615$sFNhI)
                             (cons
                               g$a$10615$sFNhI
                               (g$f$10613$sFNhI (cdr g$ls$10614$sFNhI)))))
                          (g$chi-rhs$8429$sFNhI
                            (car g$ls$10614$sFNhI)
                            g$r$10611$sFNhI
                            g$mr$10612$sFNhI)))))))
           g$f$10613$sFNhI)
         g$rhs*$10610$sFNhI))))
   (g$find-bound=?$8432$sFNhI
     g$find-bound=?$11950$sFNhI
     (case-lambda
       ((g$x$10616$sFNhI g$lhs*$10617$sFNhI g$rhs*$10618$sFNhI)
        (if (null? g$lhs*$10617$sFNhI)
          '#f
          (if (g$bound-id=?$8129$sFNhI g$x$10616$sFNhI (car g$lhs*$10617$sFNhI))
            (car g$rhs*$10618$sFNhI)
            (g$find-bound=?$8432$sFNhI
              g$x$10616$sFNhI
              (cdr g$lhs*$10617$sFNhI)
              (cdr g$rhs*$10618$sFNhI)))))))
   (g$find-dups$8433$sFNhI
     g$find-dups$11951$sFNhI
     (case-lambda
       ((g$ls$10619$sFNhI)
        ((letrec ((g$f$10620$sFNhI
                    (case-lambda
                      ((g$ls$10621$sFNhI g$dups$10622$sFNhI)
                       (if (null? g$ls$10621$sFNhI)
                         g$dups$10622$sFNhI
                         ((case-lambda
                            ((g$t$10623$sFNhI)
                             (if g$t$10623$sFNhI
                               ((case-lambda
                                  ((g$x$10624$sFNhI)
                                   (g$f$10620$sFNhI
                                     (cdr g$ls$10621$sFNhI)
                                     (cons
                                       (list
                                         (car g$ls$10621$sFNhI)
                                         g$x$10624$sFNhI)
                                       g$dups$10622$sFNhI))))
                                g$t$10623$sFNhI)
                               (g$f$10620$sFNhI
                                 (cdr g$ls$10621$sFNhI)
                                 g$dups$10622$sFNhI))))
                          (g$find-bound=?$8432$sFNhI
                            (car g$ls$10621$sFNhI)
                            (cdr g$ls$10621$sFNhI)
                            (cdr g$ls$10621$sFNhI))))))))
           g$f$10620$sFNhI)
         g$ls$10619$sFNhI
         '()))))
   (g$chi-internal$8434$sFNhI
     g$chi-internal$11952$sFNhI
     (case-lambda
       ((g$e*$10625$sFNhI g$r$10626$sFNhI g$mr$10627$sFNhI)
        ((case-lambda
           ((g$rib$10628$sFNhI)
            (call-with-values
              (case-lambda
                (()
                 (g$chi-body*$8449$sFNhI
                   (g$map$5157$sFNhI
                     (case-lambda
                       ((g$x$10637$sFNhI)
                        (g$add-subst$8116$sFNhI
                          g$rib$10628$sFNhI
                          g$x$10637$sFNhI)))
                     (g$syntax->list$8125$sFNhI g$e*$10625$sFNhI))
                   g$r$10626$sFNhI
                   g$mr$10627$sFNhI
                   '()
                   '()
                   '()
                   '()
                   '()
                   g$rib$10628$sFNhI
                   '#f
                   '#t)))
              (case-lambda
                ((g$e*$10638$sFNhI
                   g$r$10639$sFNhI
                   g$mr$10640$sFNhI
                   g$lex*$10641$sFNhI
                   g$rhs*$10642$sFNhI
                   g$mod**$10643$sFNhI
                   g$kwd*$10644$sFNhI
                   g$_exp*$10645$sFNhI)
                 ((case-lambda
                    ((g$_exp*$10646$sFNhI
                       g$kwd*$10647$sFNhI
                       g$mod**$10648$sFNhI
                       g$rhs*$10649$sFNhI
                       g$lex*$10650$sFNhI
                       g$mr$10651$sFNhI
                       g$r$10652$sFNhI
                       g$e*$10653$sFNhI)
                     (begin
                       (if (null? g$e*$10653$sFNhI)
                         (g$syntax-violation$8517$sFNhI
                           '#f
                           '"no expression in body"
                           g$e*$10653$sFNhI)
                         (void))
                       ((case-lambda
                          ((g$init*$10654$sFNhI)
                           ((case-lambda
                              ((g$rhs*$10655$sFNhI)
                               (g$build-letrec*$8058$sFNhI
                                 '#f
                                 (g$reverse$5652$sFNhI g$lex*$10650$sFNhI)
                                 (g$reverse$5652$sFNhI g$rhs*$10655$sFNhI)
                                 (g$build-sequence$8055$sFNhI
                                   '#f
                                   g$init*$10654$sFNhI))))
                            (g$chi-rhs*$8431$sFNhI
                              g$rhs*$10649$sFNhI
                              g$r$10652$sFNhI
                              g$mr$10651$sFNhI))))
                        (g$chi-expr*$8421$sFNhI
                          (append
                            (apply
                              append
                              (g$reverse$5652$sFNhI g$mod**$10648$sFNhI))
                            g$e*$10653$sFNhI)
                          g$r$10652$sFNhI
                          g$mr$10651$sFNhI)))))
                  g$_exp*$10645$sFNhI
                  g$kwd*$10644$sFNhI
                  g$mod**$10643$sFNhI
                  g$rhs*$10642$sFNhI
                  g$lex*$10641$sFNhI
                  g$mr$10640$sFNhI
                  g$r$10639$sFNhI
                  g$e*$10638$sFNhI))))))
         (g$make-empty-rib$8086$sFNhI)))))
   (g$parse-module$8435$sFNhI
     g$parse-module$11953$sFNhI
     (case-lambda
       ((g$e$10656$sFNhI)
        ((case-lambda
           ((g$t$10657$sFNhI)
            ((case-lambda
               ((g$ls/false$10658$sFNhI)
                (if g$ls/false$10658$sFNhI
                  (apply
                    (case-lambda
                      ((g$export*$10659$sFNhI g$b*$10660$sFNhI)
                       (begin
                         (if (not (g$for-all$5155$sFNhI
                                    g$id?$8126$sFNhI
                                    g$export*$10659$sFNhI))
                           (g$syntax-violation$8517$sFNhI
                             '#f
                             '"module exports must be identifiers"
                             g$e$10656$sFNhI)
                           (void))
                         (values
                           '#f
                           (g$list->vector$5640$sFNhI g$export*$10659$sFNhI)
                           g$b*$10660$sFNhI))))
                    g$ls/false$10658$sFNhI)
                  ((case-lambda
                     ((g$t$10661$sFNhI)
                      ((case-lambda
                         ((g$ls/false$10662$sFNhI)
                          (if g$ls/false$10662$sFNhI
                            (apply
                              (case-lambda
                                ((g$name$10663$sFNhI
                                   g$export*$10664$sFNhI
                                   g$b*$10665$sFNhI)
                                 (begin
                                   (if (not (g$id?$8126$sFNhI
                                              g$name$10663$sFNhI))
                                     (g$syntax-violation$8517$sFNhI
                                       '#f
                                       '"module name must be an identifier"
                                       g$e$10656$sFNhI)
                                     (void))
                                   (if (not (g$for-all$5155$sFNhI
                                              g$id?$8126$sFNhI
                                              g$export*$10664$sFNhI))
                                     (g$syntax-violation$8517$sFNhI
                                       '#f
                                       '"module exports must be identifiers"
                                       g$e$10656$sFNhI)
                                     (void))
                                   (values
                                     g$name$10663$sFNhI
                                     (g$list->vector$5640$sFNhI
                                       g$export*$10664$sFNhI)
                                     g$b*$10665$sFNhI))))
                              g$ls/false$10662$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$10661$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$10661$sFNhI
                         '(_ any each-any . each-any)))))
                   g$t$10657$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$10657$sFNhI
               '(_ each-any . each-any)))))
         g$e$10656$sFNhI))))
   (g$9390$8436$sFNhI
     g$9390$11954$sFNhI
     (make-record-type-descriptor
       'module-interface
       '#f
       'g$9393$sFNhI
       '#t
       '#t
       '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))
   (g$9392$8437$sFNhI g$9392$11955$sFNhI '#f)
   (g$9391$8438$sFNhI
     g$9391$11956$sFNhI
     (make-record-constructor-descriptor
       g$9390$8436$sFNhI
       '#f
       g$9392$8437$sFNhI))
   (g$module-interface?$8439$sFNhI
     g$module-interface?$11957$sFNhI
     (record-predicate g$9390$8436$sFNhI))
   (g$make-module-interface$8440$sFNhI
     g$make-module-interface$11958$sFNhI
     (record-constructor g$9391$8438$sFNhI))
   (g$module-interface-first-mark$8441$sFNhI
     g$module-interface-first-mark$11959$sFNhI
     (record-accessor g$9390$8436$sFNhI '0))
   (g$module-interface-exp-id-vec$8442$sFNhI
     g$module-interface-exp-id-vec$11960$sFNhI
     (record-accessor g$9390$8436$sFNhI '1))
   (g$module-interface-exp-lab-vec$8443$sFNhI
     g$module-interface-exp-lab-vec$11961$sFNhI
     (record-accessor g$9390$8436$sFNhI '2))
   (g$set-module-interface-first-mark!$8444$sFNhI
     g$set-module-interface-first-mark!$11962$sFNhI
     (record-mutator g$9390$8436$sFNhI '0))
   (g$set-module-interface-exp-id-vec!$8445$sFNhI
     g$set-module-interface-exp-id-vec!$11963$sFNhI
     (record-mutator g$9390$8436$sFNhI '1))
   (g$set-module-interface-exp-lab-vec!$8446$sFNhI
     g$set-module-interface-exp-lab-vec!$11964$sFNhI
     (record-mutator g$9390$8436$sFNhI '2))
   (g$module-interface-exp-id*$8447$sFNhI
     g$module-interface-exp-id*$11965$sFNhI
     (case-lambda
       ((g$iface$10666$sFNhI g$id$10667$sFNhI)
        (letrec* ((g$diff-marks$10668$sFNhI
                    (case-lambda
                      ((g$ls$10672$sFNhI g$x$10673$sFNhI)
                       (begin
                         (if (null? g$ls$10672$sFNhI)
                           (error 'diff-marks '"BUG: should not happen")
                           (void))
                         ((case-lambda
                            ((g$a$10674$sFNhI)
                             (if (eq? g$a$10674$sFNhI g$x$10673$sFNhI)
                               '()
                               (cons
                                 g$a$10674$sFNhI
                                 (g$diff-marks$10668$sFNhI
                                   (cdr g$ls$10672$sFNhI)
                                   g$x$10673$sFNhI)))))
                          (car g$ls$10672$sFNhI)))))))
          ((case-lambda
             ((g$diff$10669$sFNhI g$id-vec$10670$sFNhI)
              (if (null? g$diff$10669$sFNhI)
                g$id-vec$10670$sFNhI
                (g$vector-map$5705$sFNhI
                  (case-lambda
                    ((g$x$10671$sFNhI)
                     (g$make-stx$8099$sFNhI
                       (g$stx-expr$8100$sFNhI g$x$10671$sFNhI)
                       (append
                         g$diff$10669$sFNhI
                         (g$stx-mark*$8101$sFNhI g$x$10671$sFNhI))
                       '()
                       '())))
                  g$id-vec$10670$sFNhI))))
           (g$diff-marks$10668$sFNhI
             (g$stx-mark*$8101$sFNhI g$id$10667$sFNhI)
             (g$module-interface-first-mark$8441$sFNhI g$iface$10666$sFNhI))
           (g$module-interface-exp-id-vec$8442$sFNhI g$iface$10666$sFNhI))))))
   (g$chi-internal-module$8448$sFNhI
     g$chi-internal-module$11966$sFNhI
     (case-lambda
       ((g$e$10675$sFNhI
          g$r$10676$sFNhI
          g$mr$10677$sFNhI
          g$lex*$10678$sFNhI
          g$rhs*$10679$sFNhI
          g$mod**$10680$sFNhI
          g$kwd*$10681$sFNhI)
        (call-with-values
          (case-lambda (() (g$parse-module$8435$sFNhI g$e$10675$sFNhI)))
          (case-lambda
            ((g$name$10685$sFNhI g$exp-id*$10686$sFNhI g$e*$10687$sFNhI)
             ((case-lambda
                ((g$e*$10688$sFNhI g$exp-id*$10689$sFNhI g$name$10690$sFNhI)
                 ((case-lambda
                    ((g$rib$10691$sFNhI)
                     ((case-lambda
                        ((g$e*$10692$sFNhI)
                         (call-with-values
                           (case-lambda
                             (()
                              (g$chi-body*$8449$sFNhI
                                g$e*$10692$sFNhI
                                g$r$10676$sFNhI
                                g$mr$10677$sFNhI
                                g$lex*$10678$sFNhI
                                g$rhs*$10679$sFNhI
                                g$mod**$10680$sFNhI
                                g$kwd*$10681$sFNhI
                                '()
                                g$rib$10691$sFNhI
                                '#f
                                '#t)))
                           (case-lambda
                             ((g$e*$10701$sFNhI
                                g$r$10702$sFNhI
                                g$mr$10703$sFNhI
                                g$lex*$10704$sFNhI
                                g$rhs*$10705$sFNhI
                                g$mod**$10706$sFNhI
                                g$kwd*$10707$sFNhI
                                g$_exp*$10708$sFNhI)
                              ((case-lambda
                                 ((g$_exp*$10709$sFNhI
                                    g$kwd*$10710$sFNhI
                                    g$mod**$10711$sFNhI
                                    g$rhs*$10712$sFNhI
                                    g$lex*$10713$sFNhI
                                    g$mr$10714$sFNhI
                                    g$r$10715$sFNhI
                                    g$e*$10716$sFNhI)
                                  ((case-lambda
                                     ((g$exp-lab*$10717$sFNhI
                                        g$mod**$10718$sFNhI)
                                      (if (not g$name$10690$sFNhI)
                                        (values
                                          g$lex*$10713$sFNhI
                                          g$rhs*$10712$sFNhI
                                          g$exp-id*$10689$sFNhI
                                          g$exp-lab*$10717$sFNhI
                                          g$r$10715$sFNhI
                                          g$mr$10714$sFNhI
                                          g$mod**$10718$sFNhI
                                          g$kwd*$10710$sFNhI)
                                        ((case-lambda
                                           ((g$lab$10719$sFNhI
                                              g$iface$10720$sFNhI)
                                            (values
                                              g$lex*$10713$sFNhI
                                              g$rhs*$10712$sFNhI
                                              (vector g$name$10690$sFNhI)
                                              (vector g$lab$10719$sFNhI)
                                              (cons
                                                (cons
                                                  g$lab$10719$sFNhI
                                                  (cons
                                                    '$module
                                                    g$iface$10720$sFNhI))
                                                g$r$10715$sFNhI)
                                              (cons
                                                (cons
                                                  g$lab$10719$sFNhI
                                                  (cons
                                                    '$module
                                                    g$iface$10720$sFNhI))
                                                g$mr$10714$sFNhI)
                                              g$mod**$10718$sFNhI
                                              g$kwd*$10710$sFNhI)))
                                         (g$gen-label$8067$sFNhI 'module)
                                         (g$make-module-interface$8440$sFNhI
                                           (car (g$stx-mark*$8101$sFNhI
                                                  g$name$10690$sFNhI))
                                           (g$vector-map$5705$sFNhI
                                             (case-lambda
                                               ((g$x$10721$sFNhI)
                                                (g$make-stx$8099$sFNhI
                                                  (g$stx-expr$8100$sFNhI
                                                    g$x$10721$sFNhI)
                                                  (g$stx-mark*$8101$sFNhI
                                                    g$x$10721$sFNhI)
                                                  '()
                                                  '())))
                                             g$exp-id*$10689$sFNhI)
                                           g$exp-lab*$10717$sFNhI)))))
                                   (g$vector-map$5705$sFNhI
                                     (case-lambda
                                       ((g$x$10722$sFNhI)
                                        ((case-lambda
                                           ((g$t$10723$sFNhI)
                                            (if g$t$10723$sFNhI
                                              g$t$10723$sFNhI
                                              (begin
                                                '#f
                                                (g$syntax-violation$8517$sFNhI
                                                  '#f
                                                  '"cannot find module export"
                                                  g$x$10722$sFNhI)))))
                                         (g$id->label$8139$sFNhI
                                           (g$make-stx$8099$sFNhI
                                             (g$id->sym$8127$sFNhI
                                               g$x$10722$sFNhI)
                                             (g$stx-mark*$8101$sFNhI
                                               g$x$10722$sFNhI)
                                             (list g$rib$10691$sFNhI)
                                             '())))))
                                     g$exp-id*$10689$sFNhI)
                                   (cons
                                     g$e*$10716$sFNhI
                                     g$mod**$10711$sFNhI))))
                               g$_exp*$10708$sFNhI
                               g$kwd*$10707$sFNhI
                               g$mod**$10706$sFNhI
                               g$rhs*$10705$sFNhI
                               g$lex*$10704$sFNhI
                               g$mr$10703$sFNhI
                               g$r$10702$sFNhI
                               g$e*$10701$sFNhI))))))
                      (g$map$5157$sFNhI
                        (case-lambda
                          ((g$x$10724$sFNhI)
                           (g$add-subst$8116$sFNhI
                             g$rib$10691$sFNhI
                             g$x$10724$sFNhI)))
                        (g$syntax->list$8125$sFNhI g$e*$10688$sFNhI)))))
                  (g$make-empty-rib$8086$sFNhI))))
              g$e*$10687$sFNhI
              g$exp-id*$10686$sFNhI
              g$name$10685$sFNhI)))))))
   (g$chi-body*$8449$sFNhI
     g$chi-body*$11967$sFNhI
     (case-lambda
       ((g$e*$10725$sFNhI
          g$r$10726$sFNhI
          g$mr$10727$sFNhI
          g$lex*$10728$sFNhI
          g$rhs*$10729$sFNhI
          g$mod**$10730$sFNhI
          g$kwd*$10731$sFNhI
          g$exp*$10732$sFNhI
          g$rib$10733$sFNhI
          g$mix?$10734$sFNhI
          g$sd?$10735$sFNhI)
        (if (null? g$e*$10725$sFNhI)
          (values
            g$e*$10725$sFNhI
            g$r$10726$sFNhI
            g$mr$10727$sFNhI
            g$lex*$10728$sFNhI
            g$rhs*$10729$sFNhI
            g$mod**$10730$sFNhI
            g$kwd*$10731$sFNhI
            g$exp*$10732$sFNhI)
          ((case-lambda
             ((g$e$10736$sFNhI)
              (call-with-values
                (case-lambda
                  (()
                   (g$syntax-type$8146$sFNhI g$e$10736$sFNhI g$r$10726$sFNhI)))
                (case-lambda
                  ((g$type$10740$sFNhI g$value$10741$sFNhI g$kwd$10742$sFNhI)
                   ((case-lambda
                      ((g$kwd$10743$sFNhI
                         g$value$10744$sFNhI
                         g$type$10745$sFNhI)
                       ((case-lambda
                          ((g$kwd*$10746$sFNhI)
                           ((case-lambda
                              ((g$t$10747$sFNhI)
                               (if (g$memv$5150$sFNhI g$t$10747$sFNhI '(define))
                                 (call-with-values
                                   (case-lambda
                                     (()
                                      (g$parse-define$8345$sFNhI
                                        g$e$10736$sFNhI)))
                                   (case-lambda
                                     ((g$id$10750$sFNhI g$rhs$10751$sFNhI)
                                      ((case-lambda
                                         ((g$rhs$10752$sFNhI g$id$10753$sFNhI)
                                          (begin
                                            (if (g$bound-id-member?$8133$sFNhI
                                                  g$id$10753$sFNhI
                                                  g$kwd*$10746$sFNhI)
                                              (g$syntax-violation$8517$sFNhI
                                                '#f
                                                '"cannot redefine keyword"
                                                g$e$10736$sFNhI)
                                              (void))
                                            (call-with-values
                                              (case-lambda
                                                (()
                                                 (g$gen-define-label+loc$8069$sFNhI
                                                   g$id$10753$sFNhI
                                                   g$rib$10733$sFNhI
                                                   g$sd?$10735$sFNhI)))
                                              (case-lambda
                                                ((g$lab$10756$sFNhI
                                                   g$lex$10757$sFNhI)
                                                 ((case-lambda
                                                    ((g$lex$10758$sFNhI
                                                       g$lab$10759$sFNhI)
                                                     (begin
                                                       (g$extend-rib!$8089$sFNhI
                                                         g$rib$10733$sFNhI
                                                         g$id$10753$sFNhI
                                                         g$lab$10759$sFNhI
                                                         g$sd?$10735$sFNhI)
                                                       (g$chi-body*$8449$sFNhI
                                                         (cdr g$e*$10725$sFNhI)
                                                         (g$add-lexical$8352$sFNhI
                                                           g$lab$10759$sFNhI
                                                           g$lex$10758$sFNhI
                                                           g$r$10726$sFNhI)
                                                         g$mr$10727$sFNhI
                                                         (cons
                                                           g$lex$10758$sFNhI
                                                           g$lex*$10728$sFNhI)
                                                         (cons
                                                           g$rhs$10752$sFNhI
                                                           g$rhs*$10729$sFNhI)
                                                         g$mod**$10730$sFNhI
                                                         g$kwd*$10746$sFNhI
                                                         g$exp*$10732$sFNhI
                                                         g$rib$10733$sFNhI
                                                         g$mix?$10734$sFNhI
                                                         g$sd?$10735$sFNhI))))
                                                  g$lex$10757$sFNhI
                                                  g$lab$10756$sFNhI)))))))
                                       g$rhs$10751$sFNhI
                                       g$id$10750$sFNhI))))
                                 (if (g$memv$5150$sFNhI
                                       g$t$10747$sFNhI
                                       '(define-syntax))
                                   (call-with-values
                                     (case-lambda
                                       (()
                                        (g$parse-define-syntax$8346$sFNhI
                                          g$e$10736$sFNhI)))
                                     (case-lambda
                                       ((g$id$10762$sFNhI g$rhs$10763$sFNhI)
                                        ((case-lambda
                                           ((g$rhs$10764$sFNhI g$id$10765$sFNhI)
                                            (begin
                                              (if (g$bound-id-member?$8133$sFNhI
                                                    g$id$10765$sFNhI
                                                    g$kwd*$10746$sFNhI)
                                                (g$syntax-violation$8517$sFNhI
                                                  '#f
                                                  '"cannot redefine keyword"
                                                  g$e$10736$sFNhI)
                                                (void))
                                              ((case-lambda
                                                 ((g$lab$10766$sFNhI)
                                                  ((case-lambda
                                                     ((g$expanded-rhs$10767$sFNhI)
                                                      (begin
                                                        (g$extend-rib!$8089$sFNhI
                                                          g$rib$10733$sFNhI
                                                          g$id$10765$sFNhI
                                                          g$lab$10766$sFNhI
                                                          g$sd?$10735$sFNhI)
                                                        ((case-lambda
                                                           ((g$b$10768$sFNhI)
                                                            (g$chi-body*$8449$sFNhI
                                                              (cdr g$e*$10725$sFNhI)
                                                              (cons
                                                                (cons
                                                                  g$lab$10766$sFNhI
                                                                  g$b$10768$sFNhI)
                                                                g$r$10726$sFNhI)
                                                              (cons
                                                                (cons
                                                                  g$lab$10766$sFNhI
                                                                  g$b$10768$sFNhI)
                                                                g$mr$10727$sFNhI)
                                                              g$lex*$10728$sFNhI
                                                              g$rhs*$10729$sFNhI
                                                              g$mod**$10730$sFNhI
                                                              g$kwd*$10746$sFNhI
                                                              g$exp*$10732$sFNhI
                                                              g$rib$10733$sFNhI
                                                              g$mix?$10734$sFNhI
                                                              g$sd?$10735$sFNhI)))
                                                         (g$make-eval-transformer$8159$sFNhI
                                                           g$expanded-rhs$10767$sFNhI)))))
                                                   (g$expand-transformer$8450$sFNhI
                                                     g$rhs$10764$sFNhI
                                                     g$mr$10727$sFNhI))))
                                               (g$gen-define-label$8070$sFNhI
                                                 g$id$10765$sFNhI
                                                 g$rib$10733$sFNhI
                                                 g$sd?$10735$sFNhI)))))
                                         g$rhs$10763$sFNhI
                                         g$id$10762$sFNhI))))
                                   (if (g$memv$5150$sFNhI
                                         g$t$10747$sFNhI
                                         '(let-syntax letrec-syntax))
                                     ((case-lambda
                                        ((g$t$10769$sFNhI)
                                         ((case-lambda
                                            ((g$ls/false$10770$sFNhI)
                                             (if (if g$ls/false$10770$sFNhI
                                                   (begin
                                                     '#f
                                                     (apply
                                                       (case-lambda
                                                         ((g$xlhs*$10771$sFNhI
                                                            g$xrhs*$10772$sFNhI
                                                            g$xbody*$10773$sFNhI)
                                                          (if (not (g$valid-bound-ids?$8131$sFNhI
                                                                     g$xlhs*$10771$sFNhI))
                                                            (g$syntax-violation$8517$sFNhI
                                                              '#f
                                                              '"invalid identifiers"
                                                              g$e$10736$sFNhI)
                                                            (void))))
                                                       g$ls/false$10770$sFNhI))
                                                   '#f)
                                               (apply
                                                 (case-lambda
                                                   ((g$xlhs*$10774$sFNhI
                                                      g$xrhs*$10775$sFNhI
                                                      g$xbody*$10776$sFNhI)
                                                    ((case-lambda
                                                       ((g$xlab*$10777$sFNhI)
                                                        ((case-lambda
                                                           ((g$xrib$10778$sFNhI)
                                                            ((case-lambda
                                                               ((g$xb*$10779$sFNhI)
                                                                (g$chi-body*$8449$sFNhI
                                                                  (append
                                                                    (g$map$5157$sFNhI
                                                                      (case-lambda
                                                                        ((g$x$10780$sFNhI)
                                                                         (g$add-subst$8116$sFNhI
                                                                           g$xrib$10778$sFNhI
                                                                           g$x$10780$sFNhI)))
                                                                      g$xbody*$10776$sFNhI)
                                                                    (cdr g$e*$10725$sFNhI))
                                                                  (append
                                                                    (g$map$5157$sFNhI
                                                                      cons
                                                                      g$xlab*$10777$sFNhI
                                                                      g$xb*$10779$sFNhI)
                                                                    g$r$10726$sFNhI)
                                                                  (append
                                                                    (g$map$5157$sFNhI
                                                                      cons
                                                                      g$xlab*$10777$sFNhI
                                                                      g$xb*$10779$sFNhI)
                                                                    g$mr$10727$sFNhI)
                                                                  g$lex*$10728$sFNhI
                                                                  g$rhs*$10729$sFNhI
                                                                  g$mod**$10730$sFNhI
                                                                  g$kwd*$10746$sFNhI
                                                                  g$exp*$10732$sFNhI
                                                                  g$rib$10733$sFNhI
                                                                  g$mix?$10734$sFNhI
                                                                  g$sd?$10735$sFNhI)))
                                                             (g$map$5157$sFNhI
                                                               (case-lambda
                                                                 ((g$x$10781$sFNhI)
                                                                  (g$make-eval-transformer$8159$sFNhI
                                                                    (g$expand-transformer$8450$sFNhI
                                                                      (if (eq? g$type$10745$sFNhI
                                                                               'let-syntax)
                                                                        g$x$10781$sFNhI
                                                                        (g$add-subst$8116$sFNhI
                                                                          g$xrib$10778$sFNhI
                                                                          g$x$10781$sFNhI))
                                                                      g$mr$10727$sFNhI))))
                                                               g$xrhs*$10775$sFNhI))))
                                                         (g$make-full-rib$8094$sFNhI
                                                           g$xlhs*$10774$sFNhI
                                                           g$xlab*$10777$sFNhI))))
                                                     (g$map$5157$sFNhI
                                                       g$gen-label$8067$sFNhI
                                                       g$xlhs*$10774$sFNhI))))
                                                 g$ls/false$10770$sFNhI)
                                               (g$syntax-violation$8517$sFNhI
                                                 '#f
                                                 '"invalid syntax"
                                                 g$t$10769$sFNhI))))
                                          (g$syntax-dispatch$8405$sFNhI
                                            g$t$10769$sFNhI
                                            '(_ #(each (any any))
                                                .
                                                each-any)))))
                                      g$e$10736$sFNhI)
                                     (if (g$memv$5150$sFNhI
                                           g$t$10747$sFNhI
                                           '(begin))
                                       ((case-lambda
                                          ((g$t$10782$sFNhI)
                                           ((case-lambda
                                              ((g$ls/false$10783$sFNhI)
                                               (if g$ls/false$10783$sFNhI
                                                 (apply
                                                   (case-lambda
                                                     ((g$x*$10784$sFNhI)
                                                      (g$chi-body*$8449$sFNhI
                                                        (append
                                                          g$x*$10784$sFNhI
                                                          (cdr g$e*$10725$sFNhI))
                                                        g$r$10726$sFNhI
                                                        g$mr$10727$sFNhI
                                                        g$lex*$10728$sFNhI
                                                        g$rhs*$10729$sFNhI
                                                        g$mod**$10730$sFNhI
                                                        g$kwd*$10746$sFNhI
                                                        g$exp*$10732$sFNhI
                                                        g$rib$10733$sFNhI
                                                        g$mix?$10734$sFNhI
                                                        g$sd?$10735$sFNhI)))
                                                   g$ls/false$10783$sFNhI)
                                                 (g$syntax-violation$8517$sFNhI
                                                   '#f
                                                   '"invalid syntax"
                                                   g$t$10782$sFNhI))))
                                            (g$syntax-dispatch$8405$sFNhI
                                              g$t$10782$sFNhI
                                              '(_ . each-any)))))
                                        g$e$10736$sFNhI)
                                       (if (g$memv$5150$sFNhI
                                             g$t$10747$sFNhI
                                             '(global-macro global-macro!))
                                         (g$chi-body*$8449$sFNhI
                                           (cons
                                             (g$add-subst$8116$sFNhI
                                               g$rib$10733$sFNhI
                                               (g$chi-global-macro$8420$sFNhI
                                                 g$value$10744$sFNhI
                                                 g$e$10736$sFNhI
                                                 g$r$10726$sFNhI))
                                             (cdr g$e*$10725$sFNhI))
                                           g$r$10726$sFNhI
                                           g$mr$10727$sFNhI
                                           g$lex*$10728$sFNhI
                                           g$rhs*$10729$sFNhI
                                           g$mod**$10730$sFNhI
                                           g$kwd*$10746$sFNhI
                                           g$exp*$10732$sFNhI
                                           g$rib$10733$sFNhI
                                           g$mix?$10734$sFNhI
                                           g$sd?$10735$sFNhI)
                                         (if (g$memv$5150$sFNhI
                                               g$t$10747$sFNhI
                                               '(local-macro local-macro!))
                                           (g$chi-body*$8449$sFNhI
                                             (cons
                                               (g$add-subst$8116$sFNhI
                                                 g$rib$10733$sFNhI
                                                 (g$chi-local-macro$8419$sFNhI
                                                   g$value$10744$sFNhI
                                                   g$e$10736$sFNhI
                                                   g$r$10726$sFNhI))
                                               (cdr g$e*$10725$sFNhI))
                                             g$r$10726$sFNhI
                                             g$mr$10727$sFNhI
                                             g$lex*$10728$sFNhI
                                             g$rhs*$10729$sFNhI
                                             g$mod**$10730$sFNhI
                                             g$kwd*$10746$sFNhI
                                             g$exp*$10732$sFNhI
                                             g$rib$10733$sFNhI
                                             g$mix?$10734$sFNhI
                                             g$sd?$10735$sFNhI)
                                           (if (g$memv$5150$sFNhI
                                                 g$t$10747$sFNhI
                                                 '(macro macro!))
                                             (g$chi-body*$8449$sFNhI
                                               (cons
                                                 (g$add-subst$8116$sFNhI
                                                   g$rib$10733$sFNhI
                                                   (g$chi-macro$8418$sFNhI
                                                     g$value$10744$sFNhI
                                                     g$e$10736$sFNhI
                                                     g$r$10726$sFNhI))
                                                 (cdr g$e*$10725$sFNhI))
                                               g$r$10726$sFNhI
                                               g$mr$10727$sFNhI
                                               g$lex*$10728$sFNhI
                                               g$rhs*$10729$sFNhI
                                               g$mod**$10730$sFNhI
                                               g$kwd*$10746$sFNhI
                                               g$exp*$10732$sFNhI
                                               g$rib$10733$sFNhI
                                               g$mix?$10734$sFNhI
                                               g$sd?$10735$sFNhI)
                                             (if (g$memv$5150$sFNhI
                                                   g$t$10747$sFNhI
                                                   '(module))
                                               (call-with-values
                                                 (case-lambda
                                                   (()
                                                    (g$chi-internal-module$8448$sFNhI
                                                      g$e$10736$sFNhI
                                                      g$r$10726$sFNhI
                                                      g$mr$10727$sFNhI
                                                      g$lex*$10728$sFNhI
                                                      g$rhs*$10729$sFNhI
                                                      g$mod**$10730$sFNhI
                                                      g$kwd*$10746$sFNhI)))
                                                 (case-lambda
                                                   ((g$lex*$10793$sFNhI
                                                      g$rhs*$10794$sFNhI
                                                      g$m-exp-id*$10795$sFNhI
                                                      g$m-exp-lab*$10796$sFNhI
                                                      g$r$10797$sFNhI
                                                      g$mr$10798$sFNhI
                                                      g$mod**$10799$sFNhI
                                                      g$kwd*$10800$sFNhI)
                                                    ((case-lambda
                                                       ((g$kwd*$10801$sFNhI
                                                          g$mod**$10802$sFNhI
                                                          g$mr$10803$sFNhI
                                                          g$r$10804$sFNhI
                                                          g$m-exp-lab*$10805$sFNhI
                                                          g$m-exp-id*$10806$sFNhI
                                                          g$rhs*$10807$sFNhI
                                                          g$lex*$10808$sFNhI)
                                                        (begin
                                                          (g$vector-for-each$5706$sFNhI
                                                            (case-lambda
                                                              ((g$id$10809$sFNhI
                                                                 g$lab$10810$sFNhI)
                                                               (g$extend-rib!$8089$sFNhI
                                                                 g$rib$10733$sFNhI
                                                                 g$id$10809$sFNhI
                                                                 g$lab$10810$sFNhI
                                                                 g$sd?$10735$sFNhI)))
                                                            g$m-exp-id*$10806$sFNhI
                                                            g$m-exp-lab*$10805$sFNhI)
                                                          (g$chi-body*$8449$sFNhI
                                                            (cdr g$e*$10725$sFNhI)
                                                            g$r$10804$sFNhI
                                                            g$mr$10803$sFNhI
                                                            g$lex*$10808$sFNhI
                                                            g$rhs*$10807$sFNhI
                                                            g$mod**$10802$sFNhI
                                                            g$kwd*$10801$sFNhI
                                                            g$exp*$10732$sFNhI
                                                            g$rib$10733$sFNhI
                                                            g$mix?$10734$sFNhI
                                                            g$sd?$10735$sFNhI))))
                                                     g$kwd*$10800$sFNhI
                                                     g$mod**$10799$sFNhI
                                                     g$mr$10798$sFNhI
                                                     g$r$10797$sFNhI
                                                     g$m-exp-lab*$10796$sFNhI
                                                     g$m-exp-id*$10795$sFNhI
                                                     g$rhs*$10794$sFNhI
                                                     g$lex*$10793$sFNhI))))
                                               (if (g$memv$5150$sFNhI
                                                     g$t$10747$sFNhI
                                                     '(library))
                                                 (begin
                                                   (g$library-expander$8501$sFNhI
                                                     (g$stx->datum$8137$sFNhI
                                                       g$e$10736$sFNhI))
                                                   (g$chi-body*$8449$sFNhI
                                                     (cdr g$e*$10725$sFNhI)
                                                     g$r$10726$sFNhI
                                                     g$mr$10727$sFNhI
                                                     g$lex*$10728$sFNhI
                                                     g$rhs*$10729$sFNhI
                                                     g$mod**$10730$sFNhI
                                                     g$kwd*$10746$sFNhI
                                                     g$exp*$10732$sFNhI
                                                     g$rib$10733$sFNhI
                                                     g$mix?$10734$sFNhI
                                                     g$sd?$10735$sFNhI))
                                                 (if (g$memv$5150$sFNhI
                                                       g$t$10747$sFNhI
                                                       '(export))
                                                   ((case-lambda
                                                      ((g$t$10811$sFNhI)
                                                       ((case-lambda
                                                          ((g$ls/false$10812$sFNhI)
                                                           (if g$ls/false$10812$sFNhI
                                                             (apply
                                                               (case-lambda
                                                                 ((g$exp-decl*$10813$sFNhI)
                                                                  (g$chi-body*$8449$sFNhI
                                                                    (cdr g$e*$10725$sFNhI)
                                                                    g$r$10726$sFNhI
                                                                    g$mr$10727$sFNhI
                                                                    g$lex*$10728$sFNhI
                                                                    g$rhs*$10729$sFNhI
                                                                    g$mod**$10730$sFNhI
                                                                    g$kwd*$10746$sFNhI
                                                                    (append
                                                                      g$exp-decl*$10813$sFNhI
                                                                      g$exp*$10732$sFNhI)
                                                                    g$rib$10733$sFNhI
                                                                    g$mix?$10734$sFNhI
                                                                    g$sd?$10735$sFNhI)))
                                                               g$ls/false$10812$sFNhI)
                                                             (g$syntax-violation$8517$sFNhI
                                                               '#f
                                                               '"invalid syntax"
                                                               g$t$10811$sFNhI))))
                                                        (g$syntax-dispatch$8405$sFNhI
                                                          g$t$10811$sFNhI
                                                          '(_ . each-any)))))
                                                    g$e$10736$sFNhI)
                                                   (if (g$memv$5150$sFNhI
                                                         g$t$10747$sFNhI
                                                         '(import))
                                                     ((case-lambda
                                                        (()
                                                         (letrec* ((g$module-import?$10814$sFNhI
                                                                     (case-lambda
                                                                       ((g$e$10856$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$t$10857$sFNhI)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10858$sFNhI)
                                                                                (if (if g$ls/false$10858$sFNhI
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10859$sFNhI)
                                                                                             (g$id?$8126$sFNhI
                                                                                               g$id$10859$sFNhI)))
                                                                                          g$ls/false$10858$sFNhI))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10860$sFNhI)
                                                                                       '#t))
                                                                                    g$ls/false$10858$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$t$10861$sFNhI)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10862$sFNhI)
                                                                                          (if g$ls/false$10862$sFNhI
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                ((g$imp*$10863$sFNhI)
                                                                                                 '#f))
                                                                                              g$ls/false$10862$sFNhI)
                                                                                            ((case-lambda
                                                                                               ((g$t$10864$sFNhI)
                                                                                                ((case-lambda
                                                                                                   ((g$ls/false$10865$sFNhI)
                                                                                                    (if g$ls/false$10865$sFNhI
                                                                                                      (apply
                                                                                                        (case-lambda
                                                                                                          (()
                                                                                                           (g$syntax-violation$8517$sFNhI
                                                                                                             '#f
                                                                                                             '"malformed import form"
                                                                                                             g$e$10856$sFNhI)))
                                                                                                        g$ls/false$10865$sFNhI)
                                                                                                      (g$syntax-violation$8517$sFNhI
                                                                                                        '#f
                                                                                                        '"invalid syntax"
                                                                                                        g$t$10864$sFNhI))))
                                                                                                 (g$syntax-dispatch$8405$sFNhI
                                                                                                   g$t$10864$sFNhI
                                                                                                   '_))))
                                                                                             g$t$10861$sFNhI))))
                                                                                       (g$syntax-dispatch$8405$sFNhI
                                                                                         g$t$10861$sFNhI
                                                                                         '(_ .
                                                                                             each-any)))))
                                                                                   g$t$10857$sFNhI))))
                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                               g$t$10857$sFNhI
                                                                               '(_ any)))))
                                                                         g$e$10856$sFNhI))))
                                                                   (g$module-import$10815$sFNhI
                                                                     (case-lambda
                                                                       ((g$e$10839$sFNhI
                                                                          g$r$10840$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$t$10841$sFNhI)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10842$sFNhI)
                                                                                (if (if g$ls/false$10842$sFNhI
                                                                                      (begin
                                                                                        '#f
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$id$10843$sFNhI)
                                                                                             (g$id?$8126$sFNhI
                                                                                               g$id$10843$sFNhI)))
                                                                                          g$ls/false$10842$sFNhI))
                                                                                      '#f)
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$id$10844$sFNhI)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$syntax-type$8146$sFNhI
                                                                                              g$id$10844$sFNhI
                                                                                              g$r$10840$sFNhI)))
                                                                                         (case-lambda
                                                                                           ((g$type$10848$sFNhI
                                                                                              g$value$10849$sFNhI
                                                                                              g$kwd$10850$sFNhI)
                                                                                            ((case-lambda
                                                                                               ((g$kwd$10851$sFNhI
                                                                                                  g$value$10852$sFNhI
                                                                                                  g$type$10853$sFNhI)
                                                                                                ((case-lambda
                                                                                                   ((g$t$10854$sFNhI)
                                                                                                    (if (g$memv$5150$sFNhI
                                                                                                          g$t$10854$sFNhI
                                                                                                          '($module))
                                                                                                      ((case-lambda
                                                                                                         ((g$iface$10855$sFNhI)
                                                                                                          (values
                                                                                                            (g$module-interface-exp-id*$8447$sFNhI
                                                                                                              g$iface$10855$sFNhI
                                                                                                              g$id$10844$sFNhI)
                                                                                                            (g$module-interface-exp-lab-vec$8443$sFNhI
                                                                                                              g$iface$10855$sFNhI))))
                                                                                                       g$value$10852$sFNhI)
                                                                                                      (g$syntax-violation$8517$sFNhI
                                                                                                        '#f
                                                                                                        '"invalid import"
                                                                                                        g$e$10839$sFNhI))))
                                                                                                 g$type$10853$sFNhI)))
                                                                                             g$kwd$10850$sFNhI
                                                                                             g$value$10849$sFNhI
                                                                                             g$type$10848$sFNhI))))))
                                                                                    g$ls/false$10842$sFNhI)
                                                                                  (g$syntax-violation$8517$sFNhI
                                                                                    '#f
                                                                                    '"invalid syntax"
                                                                                    g$t$10841$sFNhI))))
                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                               g$t$10841$sFNhI
                                                                               '(_ any)))))
                                                                         g$e$10839$sFNhI))))
                                                                   (g$library-import$10816$sFNhI
                                                                     (case-lambda
                                                                       ((g$e$10825$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$t$10826$sFNhI)
                                                                            ((case-lambda
                                                                               ((g$ls/false$10827$sFNhI)
                                                                                (if g$ls/false$10827$sFNhI
                                                                                  (apply
                                                                                    (case-lambda
                                                                                      ((g$ctxt$10828$sFNhI
                                                                                         g$imp*$10829$sFNhI)
                                                                                       (call-with-values
                                                                                         (case-lambda
                                                                                           (()
                                                                                            (g$parse-import-spec*$8454$sFNhI
                                                                                              (g$syntax->datum$8520$sFNhI
                                                                                                g$imp*$10829$sFNhI))))
                                                                                         (case-lambda
                                                                                           ((g$subst-names$10832$sFNhI
                                                                                              g$subst-labels$10833$sFNhI)
                                                                                            ((case-lambda
                                                                                               ((g$subst-labels$10834$sFNhI
                                                                                                  g$subst-names$10835$sFNhI)
                                                                                                (values
                                                                                                  (g$vector-map$5705$sFNhI
                                                                                                    (case-lambda
                                                                                                      ((g$name$10836$sFNhI)
                                                                                                       (g$datum->stx$8109$sFNhI
                                                                                                         g$ctxt$10828$sFNhI
                                                                                                         g$name$10836$sFNhI)))
                                                                                                    g$subst-names$10835$sFNhI)
                                                                                                  g$subst-labels$10834$sFNhI)))
                                                                                             g$subst-labels$10833$sFNhI
                                                                                             g$subst-names$10832$sFNhI))))))
                                                                                    g$ls/false$10827$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$t$10837$sFNhI)
                                                                                      ((case-lambda
                                                                                         ((g$ls/false$10838$sFNhI)
                                                                                          (if g$ls/false$10838$sFNhI
                                                                                            (apply
                                                                                              (case-lambda
                                                                                                (()
                                                                                                 (g$syntax-violation$8517$sFNhI
                                                                                                   '#f
                                                                                                   '"invalid import form"
                                                                                                   g$e$10825$sFNhI)))
                                                                                              g$ls/false$10838$sFNhI)
                                                                                            (g$syntax-violation$8517$sFNhI
                                                                                              '#f
                                                                                              '"invalid syntax"
                                                                                              g$t$10837$sFNhI))))
                                                                                       (g$syntax-dispatch$8405$sFNhI
                                                                                         g$t$10837$sFNhI
                                                                                         '_))))
                                                                                   g$t$10826$sFNhI))))
                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                               g$t$10826$sFNhI
                                                                               '(any .
                                                                                     each-any)))))
                                                                         g$e$10825$sFNhI)))))
                                                           (begin
                                                             (call-with-values
                                                               (case-lambda
                                                                 (()
                                                                  (if (g$module-import?$10814$sFNhI
                                                                        g$e$10736$sFNhI)
                                                                    (g$module-import$10815$sFNhI
                                                                      g$e$10736$sFNhI
                                                                      g$r$10726$sFNhI)
                                                                    (g$library-import$10816$sFNhI
                                                                      g$e$10736$sFNhI))))
                                                               (case-lambda
                                                                 ((g$id*$10819$sFNhI
                                                                    g$lab*$10820$sFNhI)
                                                                  ((case-lambda
                                                                     ((g$lab*$10821$sFNhI
                                                                        g$id*$10822$sFNhI)
                                                                      (g$vector-for-each$5706$sFNhI
                                                                        (case-lambda
                                                                          ((g$id$10823$sFNhI
                                                                             g$lab$10824$sFNhI)
                                                                           (g$extend-rib!$8089$sFNhI
                                                                             g$rib$10733$sFNhI
                                                                             g$id$10823$sFNhI
                                                                             g$lab$10824$sFNhI
                                                                             g$sd?$10735$sFNhI)))
                                                                        g$id*$10822$sFNhI
                                                                        g$lab*$10821$sFNhI)))
                                                                   g$lab*$10820$sFNhI
                                                                   g$id*$10819$sFNhI))))
                                                             (g$chi-body*$8449$sFNhI
                                                               (cdr g$e*$10725$sFNhI)
                                                               g$r$10726$sFNhI
                                                               g$mr$10727$sFNhI
                                                               g$lex*$10728$sFNhI
                                                               g$rhs*$10729$sFNhI
                                                               g$mod**$10730$sFNhI
                                                               g$kwd*$10746$sFNhI
                                                               g$exp*$10732$sFNhI
                                                               g$rib$10733$sFNhI
                                                               g$mix?$10734$sFNhI
                                                               g$sd?$10735$sFNhI))))))
                                                     (if g$mix?$10734$sFNhI
                                                       (g$chi-body*$8449$sFNhI
                                                         (cdr g$e*$10725$sFNhI)
                                                         g$r$10726$sFNhI
                                                         g$mr$10727$sFNhI
                                                         (cons
                                                           (g$gen-lexical$8065$sFNhI
                                                             'dummy)
                                                           g$lex*$10728$sFNhI)
                                                         (cons
                                                           (cons
                                                             'top-expr
                                                             g$e$10736$sFNhI)
                                                           g$rhs*$10729$sFNhI)
                                                         g$mod**$10730$sFNhI
                                                         g$kwd*$10746$sFNhI
                                                         g$exp*$10732$sFNhI
                                                         g$rib$10733$sFNhI
                                                         '#t
                                                         g$sd?$10735$sFNhI)
                                                       (values
                                                         g$e*$10725$sFNhI
                                                         g$r$10726$sFNhI
                                                         g$mr$10727$sFNhI
                                                         g$lex*$10728$sFNhI
                                                         g$rhs*$10729$sFNhI
                                                         g$mod**$10730$sFNhI
                                                         g$kwd*$10746$sFNhI
                                                         g$exp*$10732$sFNhI)))))))))))))))
                            g$type$10745$sFNhI)))
                        (if (g$id?$8126$sFNhI g$kwd$10743$sFNhI)
                          (cons g$kwd$10743$sFNhI g$kwd*$10731$sFNhI)
                          g$kwd*$10731$sFNhI))))
                    g$kwd$10742$sFNhI
                    g$value$10741$sFNhI
                    g$type$10740$sFNhI))))))
           (car g$e*$10725$sFNhI))))))
   (g$expand-transformer$8450$sFNhI
     g$expand-transformer$11968$sFNhI
     (case-lambda
       ((g$expr$10866$sFNhI g$r$10867$sFNhI)
        ((case-lambda
           ((g$rtc$10868$sFNhI)
            ((case-lambda
               ((g$expanded-rhs$10869$sFNhI)
                (begin
                  (g$for-each$5158$sFNhI
                    ((case-lambda
                       ((g$mark-visit$10870$sFNhI)
                        (case-lambda
                          ((g$x$10871$sFNhI)
                           (begin
                             (g$invoke-library$7936$sFNhI g$x$10871$sFNhI)
                             (g$mark-visit$10870$sFNhI g$x$10871$sFNhI))))))
                     (g$vis-collector$8458$sFNhI))
                    (g$rtc$10868$sFNhI))
                  g$expanded-rhs$10869$sFNhI)))
             ((case-lambda
                ((g$inv-collector$10876$sFNhI
                   g$vis-collector$10877$sFNhI
                   g$inv-collector$10878$sFNhI
                   g$vis-collector$10879$sFNhI)
                 ((case-lambda
                    ((g$swap$10880$sFNhI)
                     (dynamic-wind
                       g$swap$10880$sFNhI
                       (case-lambda
                         (()
                          (g$chi-expr$8423$sFNhI
                            g$expr$10866$sFNhI
                            g$r$10867$sFNhI
                            g$r$10867$sFNhI)))
                       g$swap$10880$sFNhI)))
                  (case-lambda
                    (()
                     (begin
                       ((case-lambda
                          ((g$t$10881$sFNhI)
                           (begin
                             (g$inv-collector$10876$sFNhI
                               g$inv-collector$10878$sFNhI)
                             (set! g$inv-collector$10878$sFNhI
                               g$t$10881$sFNhI))))
                        (g$inv-collector$10876$sFNhI))
                       ((case-lambda
                          ((g$t$10882$sFNhI)
                           (begin
                             (g$vis-collector$10877$sFNhI
                               g$vis-collector$10879$sFNhI)
                             (set! g$vis-collector$10879$sFNhI
                               g$t$10882$sFNhI))))
                        (g$vis-collector$10877$sFNhI))))))))
              g$inv-collector$8457$sFNhI
              g$vis-collector$8458$sFNhI
              g$rtc$10868$sFNhI
              (case-lambda ((g$x$10883$sFNhI) (values)))))))
         (g$make-collector$8456$sFNhI)))))
   (g$parse-exports$8451$sFNhI
     g$parse-exports$11969$sFNhI
     (case-lambda
       ((g$exp*$10884$sFNhI)
        ((letrec ((g$f$10885$sFNhI
                    (case-lambda
                      ((g$exp*$10886$sFNhI
                         g$int*$10887$sFNhI
                         g$ext*$10888$sFNhI)
                       (if (null? g$exp*$10886$sFNhI)
                         (begin
                           (if (not (g$valid-bound-ids?$8131$sFNhI
                                      g$ext*$10888$sFNhI))
                             (g$syntax-violation$8517$sFNhI
                               'export
                               '"invalid exports"
                               (g$find-dups$8433$sFNhI g$ext*$10888$sFNhI))
                             (void))
                           (values
                             (g$map$5157$sFNhI
                               g$syntax->datum$8520$sFNhI
                               g$ext*$10888$sFNhI)
                             g$int*$10887$sFNhI))
                         ((case-lambda
                            ((g$t$10889$sFNhI)
                             ((case-lambda
                                ((g$ls/false$10890$sFNhI)
                                 (if g$ls/false$10890$sFNhI
                                   (apply
                                     (case-lambda
                                       ((g$rename$10891$sFNhI
                                          g$i*$10892$sFNhI
                                          g$e*$10893$sFNhI)
                                        (begin
                                          (if (not (if (eq? (g$syntax->datum$8520$sFNhI
                                                              g$rename$10891$sFNhI)
                                                            'rename)
                                                     (if (g$for-all$5155$sFNhI
                                                           g$id?$8126$sFNhI
                                                           g$i*$10892$sFNhI)
                                                       (begin
                                                         '#f
                                                         (g$for-all$5155$sFNhI
                                                           g$id?$8126$sFNhI
                                                           g$e*$10893$sFNhI))
                                                       '#f)
                                                     '#f))
                                            (g$syntax-violation$8517$sFNhI
                                              'export
                                              '"invalid export specifier"
                                              (car g$exp*$10886$sFNhI))
                                            (void))
                                          (g$f$10885$sFNhI
                                            (cdr g$exp*$10886$sFNhI)
                                            (append
                                              g$i*$10892$sFNhI
                                              g$int*$10887$sFNhI)
                                            (append
                                              g$e*$10893$sFNhI
                                              g$ext*$10888$sFNhI)))))
                                     g$ls/false$10890$sFNhI)
                                   ((case-lambda
                                      ((g$t$10894$sFNhI)
                                       ((case-lambda
                                          ((g$ls/false$10895$sFNhI)
                                           (if g$ls/false$10895$sFNhI
                                             (apply
                                               (case-lambda
                                                 ((g$ie$10896$sFNhI)
                                                  (begin
                                                    (if (not (g$id?$8126$sFNhI
                                                               g$ie$10896$sFNhI))
                                                      (g$syntax-violation$8517$sFNhI
                                                        'export
                                                        '"invalid export"
                                                        g$ie$10896$sFNhI)
                                                      (void))
                                                    (g$f$10885$sFNhI
                                                      (cdr g$exp*$10886$sFNhI)
                                                      (cons
                                                        g$ie$10896$sFNhI
                                                        g$int*$10887$sFNhI)
                                                      (cons
                                                        g$ie$10896$sFNhI
                                                        g$ext*$10888$sFNhI)))))
                                               g$ls/false$10895$sFNhI)
                                             (g$syntax-violation$8517$sFNhI
                                               '#f
                                               '"invalid syntax"
                                               g$t$10894$sFNhI))))
                                        (g$syntax-dispatch$8405$sFNhI
                                          g$t$10894$sFNhI
                                          'any))))
                                    g$t$10889$sFNhI))))
                              (g$syntax-dispatch$8405$sFNhI
                                g$t$10889$sFNhI
                                '(any . #(each (any any)))))))
                          (car g$exp*$10886$sFNhI)))))))
           g$f$10885$sFNhI)
         g$exp*$10884$sFNhI
         '()
         '()))))
   (g$parse-library-name$8452$sFNhI
     g$parse-library-name$11970$sFNhI
     (case-lambda
       ((g$spec$10897$sFNhI)
        (letrec* ((g$parse$10898$sFNhI
                    (case-lambda
                      ((g$x$10905$sFNhI)
                       ((case-lambda
                          ((g$t$10906$sFNhI)
                           ((case-lambda
                              ((g$ls/false$10907$sFNhI)
                               (if (if g$ls/false$10907$sFNhI
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$v*$10908$sFNhI)
                                            (g$for-all$5155$sFNhI
                                              (case-lambda
                                                ((g$x$10909$sFNhI)
                                                 ((case-lambda
                                                    ((g$x$10910$sFNhI)
                                                     (if (integer?
                                                           g$x$10910$sFNhI)
                                                       (begin
                                                         '#f
                                                         (exact?
                                                           g$x$10910$sFNhI))
                                                       '#f)))
                                                  (g$syntax->datum$8520$sFNhI
                                                    g$x$10909$sFNhI))))
                                              g$v*$10908$sFNhI)))
                                         g$ls/false$10907$sFNhI))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$v*$10911$sFNhI)
                                      (values
                                        '()
                                        (g$map$5157$sFNhI
                                          g$syntax->datum$8520$sFNhI
                                          g$v*$10911$sFNhI))))
                                   g$ls/false$10907$sFNhI)
                                 ((case-lambda
                                    ((g$t$10912$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$10913$sFNhI)
                                         (if (if g$ls/false$10913$sFNhI
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$x$10914$sFNhI
                                                        g$rest$10915$sFNhI)
                                                      (g$symbol?$5645$sFNhI
                                                        (g$syntax->datum$8520$sFNhI
                                                          g$x$10914$sFNhI))))
                                                   g$ls/false$10913$sFNhI))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$x$10916$sFNhI
                                                  g$rest$10917$sFNhI)
                                                (call-with-values
                                                  (case-lambda
                                                    (()
                                                     (g$parse$10898$sFNhI
                                                       g$rest$10917$sFNhI)))
                                                  (case-lambda
                                                    ((g$x*$10920$sFNhI
                                                       g$v*$10921$sFNhI)
                                                     ((case-lambda
                                                        ((g$v*$10922$sFNhI
                                                           g$x*$10923$sFNhI)
                                                         (values
                                                           (cons
                                                             (g$syntax->datum$8520$sFNhI
                                                               g$x$10916$sFNhI)
                                                             g$x*$10923$sFNhI)
                                                           g$v*$10922$sFNhI)))
                                                      g$v*$10921$sFNhI
                                                      g$x*$10920$sFNhI))))))
                                             g$ls/false$10913$sFNhI)
                                           ((case-lambda
                                              ((g$t$10924$sFNhI)
                                               ((case-lambda
                                                  ((g$ls/false$10925$sFNhI)
                                                   (if g$ls/false$10925$sFNhI
                                                     (apply
                                                       (case-lambda
                                                         (() (values '() '())))
                                                       g$ls/false$10925$sFNhI)
                                                     ((case-lambda
                                                        ((g$t$10926$sFNhI)
                                                         ((case-lambda
                                                            ((g$ls/false$10927$sFNhI)
                                                             (if g$ls/false$10927$sFNhI
                                                               (apply
                                                                 (case-lambda
                                                                   (()
                                                                    (g$syntax-violation$8517$sFNhI
                                                                      '#f
                                                                      '"invalid library name"
                                                                      g$spec$10897$sFNhI)))
                                                                 g$ls/false$10927$sFNhI)
                                                               (g$syntax-violation$8517$sFNhI
                                                                 '#f
                                                                 '"invalid syntax"
                                                                 g$t$10926$sFNhI))))
                                                          (g$syntax-dispatch$8405$sFNhI
                                                            g$t$10926$sFNhI
                                                            '_))))
                                                      g$t$10924$sFNhI))))
                                                (g$syntax-dispatch$8405$sFNhI
                                                  g$t$10924$sFNhI
                                                  '()))))
                                            g$t$10912$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$10912$sFNhI
                                        '(any . any)))))
                                  g$t$10906$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$10906$sFNhI
                              '(each-any)))))
                        g$x$10905$sFNhI)))))
          (call-with-values
            (case-lambda (() (g$parse$10898$sFNhI g$spec$10897$sFNhI)))
            (case-lambda
              ((g$name*$10901$sFNhI g$ver*$10902$sFNhI)
               ((case-lambda
                  ((g$ver*$10903$sFNhI g$name*$10904$sFNhI)
                   (begin
                     (if (null? g$name*$10904$sFNhI)
                       (g$syntax-violation$8517$sFNhI
                         '#f
                         '"empty library name"
                         g$spec$10897$sFNhI)
                       (void))
                     (values g$name*$10904$sFNhI g$ver*$10903$sFNhI))))
                g$ver*$10902$sFNhI
                g$name*$10901$sFNhI))))))))
   (g$parse-library$8453$sFNhI
     g$parse-library$11971$sFNhI
     (case-lambda
       ((g$e$10928$sFNhI)
        ((case-lambda
           ((g$t$10929$sFNhI)
            ((case-lambda
               ((g$ls/false$10930$sFNhI)
                (if (if g$ls/false$10930$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$library$10931$sFNhI
                               g$name*$10932$sFNhI
                               g$export$10933$sFNhI
                               g$exp*$10934$sFNhI
                               g$import$10935$sFNhI
                               g$imp*$10936$sFNhI
                               g$b*$10937$sFNhI)
                             (if (eq? (g$syntax->datum$8520$sFNhI
                                        g$export$10933$sFNhI)
                                      'export)
                               (if (eq? (g$syntax->datum$8520$sFNhI
                                          g$import$10935$sFNhI)
                                        'import)
                                 (begin
                                   '#f
                                   (eq? (g$syntax->datum$8520$sFNhI
                                          g$library$10931$sFNhI)
                                        'library))
                                 '#f)
                               '#f)))
                          g$ls/false$10930$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$library$10938$sFNhI
                         g$name*$10939$sFNhI
                         g$export$10940$sFNhI
                         g$exp*$10941$sFNhI
                         g$import$10942$sFNhI
                         g$imp*$10943$sFNhI
                         g$b*$10944$sFNhI)
                       (values
                         g$name*$10939$sFNhI
                         g$exp*$10941$sFNhI
                         g$imp*$10943$sFNhI
                         g$b*$10944$sFNhI)))
                    g$ls/false$10930$sFNhI)
                  ((case-lambda
                     ((g$t$10945$sFNhI)
                      ((case-lambda
                         ((g$ls/false$10946$sFNhI)
                          (if g$ls/false$10946$sFNhI
                            (apply
                              (case-lambda
                                (()
                                 (g$syntax-violation$8517$sFNhI
                                   '#f
                                   '"malformed library"
                                   g$e$10928$sFNhI)))
                              g$ls/false$10946$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$10945$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI g$t$10945$sFNhI '_))))
                   g$t$10929$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$10929$sFNhI
               '(any each-any (any . each-any) (any . each-any) . each-any)))))
         g$e$10928$sFNhI))))
   (g$parse-import-spec*$8454$sFNhI
     g$parse-import-spec*$11972$sFNhI
     (case-lambda
       ((g$imp*$10947$sFNhI)
        (letrec* ((g$idsyn?$10948$sFNhI
                    (case-lambda
                      ((g$x$11208$sFNhI)
                       (g$symbol?$5645$sFNhI
                         (g$syntax->datum$8520$sFNhI g$x$11208$sFNhI)))))
                  (g$dup-error$10949$sFNhI
                    (case-lambda
                      ((g$name$11207$sFNhI)
                       (g$syntax-violation$8517$sFNhI
                         'import
                         '"two imports with different bindings"
                         g$name$11207$sFNhI))))
                  (g$merge-substs$10950$sFNhI
                    (case-lambda
                      ((g$s$11198$sFNhI g$subst$11199$sFNhI)
                       (letrec* ((g$insert-to-subst$11200$sFNhI
                                   (case-lambda
                                     ((g$a$11201$sFNhI g$subst$11202$sFNhI)
                                      ((case-lambda
                                         ((g$name$11203$sFNhI
                                            g$label$11204$sFNhI)
                                          ((case-lambda
                                             ((g$t$11205$sFNhI)
                                              (if g$t$11205$sFNhI
                                                ((case-lambda
                                                   ((g$x$11206$sFNhI)
                                                    (if (eq? (cdr g$x$11206$sFNhI)
                                                             g$label$11204$sFNhI)
                                                      g$subst$11202$sFNhI
                                                      (g$dup-error$10949$sFNhI
                                                        g$name$11203$sFNhI))))
                                                 g$t$11205$sFNhI)
                                                (cons
                                                  g$a$11201$sFNhI
                                                  g$subst$11202$sFNhI))))
                                           (g$assq$5145$sFNhI
                                             g$name$11203$sFNhI
                                             g$subst$11202$sFNhI))))
                                       (car g$a$11201$sFNhI)
                                       (cdr g$a$11201$sFNhI))))))
                         (if (null? g$s$11198$sFNhI)
                           g$subst$11199$sFNhI
                           (g$insert-to-subst$11200$sFNhI
                             (car g$s$11198$sFNhI)
                             (g$merge-substs$10950$sFNhI
                               (cdr g$s$11198$sFNhI)
                               g$subst$11199$sFNhI)))))))
                  (g$exclude*$10951$sFNhI
                    (case-lambda
                      ((g$sym*$11174$sFNhI g$subst$11175$sFNhI)
                       (letrec* ((g$exclude$11176$sFNhI
                                   (case-lambda
                                     ((g$sym$11189$sFNhI g$subst$11190$sFNhI)
                                      (if (null? g$subst$11190$sFNhI)
                                        (g$syntax-violation$8517$sFNhI
                                          'import
                                          '"cannot rename unbound identifier"
                                          g$sym$11189$sFNhI)
                                        (if (eq? g$sym$11189$sFNhI
                                                 (g$caar$5653$sFNhI
                                                   g$subst$11190$sFNhI))
                                          (values
                                            (g$cdar$5655$sFNhI
                                              g$subst$11190$sFNhI)
                                            (cdr g$subst$11190$sFNhI))
                                          ((case-lambda
                                             ((g$a$11191$sFNhI)
                                              (call-with-values
                                                (case-lambda
                                                  (()
                                                   (g$exclude$11176$sFNhI
                                                     g$sym$11189$sFNhI
                                                     (cdr g$subst$11190$sFNhI))))
                                                (case-lambda
                                                  ((g$old$11194$sFNhI
                                                     g$subst$11195$sFNhI)
                                                   ((case-lambda
                                                      ((g$subst$11196$sFNhI
                                                         g$old$11197$sFNhI)
                                                       (values
                                                         g$old$11197$sFNhI
                                                         (cons
                                                           g$a$11191$sFNhI
                                                           g$subst$11196$sFNhI))))
                                                    g$subst$11195$sFNhI
                                                    g$old$11194$sFNhI))))))
                                           (car g$subst$11190$sFNhI))))))))
                         (if (null? g$sym*$11174$sFNhI)
                           (values '() g$subst$11175$sFNhI)
                           (call-with-values
                             (case-lambda
                               (()
                                (g$exclude$11176$sFNhI
                                  (car g$sym*$11174$sFNhI)
                                  g$subst$11175$sFNhI)))
                             (case-lambda
                               ((g$old$11179$sFNhI g$subst$11180$sFNhI)
                                ((case-lambda
                                   ((g$subst$11181$sFNhI g$old$11182$sFNhI)
                                    (call-with-values
                                      (case-lambda
                                        (()
                                         (g$exclude*$10951$sFNhI
                                           (cdr g$sym*$11174$sFNhI)
                                           g$subst$11181$sFNhI)))
                                      (case-lambda
                                        ((g$old*$11185$sFNhI
                                           g$subst$11186$sFNhI)
                                         ((case-lambda
                                            ((g$subst$11187$sFNhI
                                               g$old*$11188$sFNhI)
                                             (values
                                               (cons
                                                 g$old$11182$sFNhI
                                                 g$old*$11188$sFNhI)
                                               g$subst$11187$sFNhI)))
                                          g$subst$11186$sFNhI
                                          g$old*$11185$sFNhI))))))
                                 g$subst$11180$sFNhI
                                 g$old$11179$sFNhI)))))))))
                  (g$find*$10952$sFNhI
                    (case-lambda
                      ((g$sym*$11170$sFNhI g$subst$11171$sFNhI)
                       (g$map$5157$sFNhI
                         (case-lambda
                           ((g$x$11172$sFNhI)
                            ((case-lambda
                               ((g$t$11173$sFNhI)
                                (if g$t$11173$sFNhI
                                  (cdr g$t$11173$sFNhI)
                                  (g$syntax-violation$8517$sFNhI
                                    'import
                                    '"cannot find identifier"
                                    g$x$11172$sFNhI))))
                             (g$assq$5145$sFNhI
                               g$x$11172$sFNhI
                               g$subst$11171$sFNhI))))
                         g$sym*$11170$sFNhI))))
                  (g$rem*$10953$sFNhI
                    (case-lambda
                      ((g$sym*$11166$sFNhI g$subst$11167$sFNhI)
                       ((letrec ((g$f$11168$sFNhI
                                   (case-lambda
                                     ((g$subst$11169$sFNhI)
                                      (if (null? g$subst$11169$sFNhI)
                                        '()
                                        (if (g$memq$5149$sFNhI
                                              (g$caar$5653$sFNhI
                                                g$subst$11169$sFNhI)
                                              g$sym*$11166$sFNhI)
                                          (g$f$11168$sFNhI
                                            (cdr g$subst$11169$sFNhI))
                                          (cons
                                            (car g$subst$11169$sFNhI)
                                            (g$f$11168$sFNhI
                                              (cdr g$subst$11169$sFNhI)))))))))
                          g$f$11168$sFNhI)
                        g$subst$11167$sFNhI))))
                  (g$remove-dups$10954$sFNhI
                    (case-lambda
                      ((g$ls$11165$sFNhI)
                       (if (null? g$ls$11165$sFNhI)
                         '()
                         (if (g$memq$5149$sFNhI
                               (car g$ls$11165$sFNhI)
                               (cdr g$ls$11165$sFNhI))
                           (g$remove-dups$10954$sFNhI (cdr g$ls$11165$sFNhI))
                           (cons
                             (car g$ls$11165$sFNhI)
                             (g$remove-dups$10954$sFNhI
                               (cdr g$ls$11165$sFNhI))))))))
                  (g$parse-library-name$10955$sFNhI
                    (case-lambda
                      ((g$spec$11049$sFNhI)
                       (letrec* ((g$subversion?$11050$sFNhI
                                   (case-lambda
                                     ((g$x$11163$sFNhI)
                                      ((case-lambda
                                         ((g$x$11164$sFNhI)
                                          (if (integer? g$x$11164$sFNhI)
                                            (if (exact? g$x$11164$sFNhI)
                                              (begin
                                                '#f
                                                (>= g$x$11164$sFNhI '0))
                                              '#f)
                                            '#f)))
                                       (g$syntax->datum$8520$sFNhI
                                         g$x$11163$sFNhI)))))
                                 (g$subversion-pred$11051$sFNhI
                                   (case-lambda
                                     ((g$x*$11115$sFNhI)
                                      ((case-lambda
                                         ((g$t$11116$sFNhI)
                                          ((case-lambda
                                             ((g$ls/false$11117$sFNhI)
                                              (if (if g$ls/false$11117$sFNhI
                                                    (begin
                                                      '#f
                                                      (apply
                                                        (case-lambda
                                                          ((g$n$11118$sFNhI)
                                                           (g$subversion?$11050$sFNhI
                                                             g$n$11118$sFNhI)))
                                                        g$ls/false$11117$sFNhI))
                                                    '#f)
                                                (apply
                                                  (case-lambda
                                                    ((g$n$11119$sFNhI)
                                                     (case-lambda
                                                       ((g$x$11120$sFNhI)
                                                        (= g$x$11120$sFNhI
                                                           (g$syntax->datum$8520$sFNhI
                                                             g$n$11119$sFNhI))))))
                                                  g$ls/false$11117$sFNhI)
                                                ((case-lambda
                                                   ((g$t$11121$sFNhI)
                                                    ((case-lambda
                                                       ((g$ls/false$11122$sFNhI)
                                                        (if (if g$ls/false$11122$sFNhI
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$p?$11123$sFNhI
                                                                       g$sub*$11124$sFNhI)
                                                                     (eq? (g$syntax->datum$8520$sFNhI
                                                                            g$p?$11123$sFNhI)
                                                                          'and)))
                                                                  g$ls/false$11122$sFNhI))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$p?$11125$sFNhI
                                                                 g$sub*$11126$sFNhI)
                                                               ((case-lambda
                                                                  ((g$p*$11127$sFNhI)
                                                                   (case-lambda
                                                                     ((g$x$11128$sFNhI)
                                                                      (g$for-all$5155$sFNhI
                                                                        (case-lambda
                                                                          ((g$p$11129$sFNhI)
                                                                           (g$p$11129$sFNhI
                                                                             g$x$11128$sFNhI)))
                                                                        g$p*$11127$sFNhI)))))
                                                                (g$map$5157$sFNhI
                                                                  g$subversion-pred$11051$sFNhI
                                                                  g$sub*$11126$sFNhI))))
                                                            g$ls/false$11122$sFNhI)
                                                          ((case-lambda
                                                             ((g$t$11130$sFNhI)
                                                              ((case-lambda
                                                                 ((g$ls/false$11131$sFNhI)
                                                                  (if (if g$ls/false$11131$sFNhI
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$p?$11132$sFNhI
                                                                                 g$sub*$11133$sFNhI)
                                                                               (eq? (g$syntax->datum$8520$sFNhI
                                                                                      g$p?$11132$sFNhI)
                                                                                    'or)))
                                                                            g$ls/false$11131$sFNhI))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$p?$11134$sFNhI
                                                                           g$sub*$11135$sFNhI)
                                                                         ((case-lambda
                                                                            ((g$p*$11136$sFNhI)
                                                                             (case-lambda
                                                                               ((g$x$11137$sFNhI)
                                                                                (g$exists$5156$sFNhI
                                                                                  (case-lambda
                                                                                    ((g$p$11138$sFNhI)
                                                                                     (g$p$11138$sFNhI
                                                                                       g$x$11137$sFNhI)))
                                                                                  g$p*$11136$sFNhI)))))
                                                                          (g$map$5157$sFNhI
                                                                            g$subversion-pred$11051$sFNhI
                                                                            g$sub*$11135$sFNhI))))
                                                                      g$ls/false$11131$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$t$11139$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$ls/false$11140$sFNhI)
                                                                            (if (if g$ls/false$11140$sFNhI
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$p?$11141$sFNhI
                                                                                           g$sub$11142$sFNhI)
                                                                                         (eq? (g$syntax->datum$8520$sFNhI
                                                                                                g$p?$11141$sFNhI)
                                                                                              'not)))
                                                                                      g$ls/false$11140$sFNhI))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$p?$11143$sFNhI
                                                                                     g$sub$11144$sFNhI)
                                                                                   ((case-lambda
                                                                                      ((g$p$11145$sFNhI)
                                                                                       (case-lambda
                                                                                         ((g$x$11146$sFNhI)
                                                                                          (not (g$p$11145$sFNhI
                                                                                                 g$x$11146$sFNhI))))))
                                                                                    (g$subversion-pred$11051$sFNhI
                                                                                      g$sub$11144$sFNhI))))
                                                                                g$ls/false$11140$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$t$11147$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$11148$sFNhI)
                                                                                      (if (if g$ls/false$11148$sFNhI
                                                                                            (begin
                                                                                              '#f
                                                                                              (apply
                                                                                                (case-lambda
                                                                                                  ((g$p?$11149$sFNhI
                                                                                                     g$n$11150$sFNhI)
                                                                                                   (if (eq? (g$syntax->datum$8520$sFNhI
                                                                                                              g$p?$11149$sFNhI)
                                                                                                            '<=)
                                                                                                     (begin
                                                                                                       '#f
                                                                                                       (g$subversion?$11050$sFNhI
                                                                                                         g$n$11150$sFNhI))
                                                                                                     '#f)))
                                                                                                g$ls/false$11148$sFNhI))
                                                                                            '#f)
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$p?$11151$sFNhI
                                                                                               g$n$11152$sFNhI)
                                                                                             (case-lambda
                                                                                               ((g$x$11153$sFNhI)
                                                                                                (<= g$x$11153$sFNhI
                                                                                                    (g$syntax->datum$8520$sFNhI
                                                                                                      g$n$11152$sFNhI))))))
                                                                                          g$ls/false$11148$sFNhI)
                                                                                        ((case-lambda
                                                                                           ((g$t$11154$sFNhI)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$11155$sFNhI)
                                                                                                (if (if g$ls/false$11155$sFNhI
                                                                                                      (begin
                                                                                                        '#f
                                                                                                        (apply
                                                                                                          (case-lambda
                                                                                                            ((g$p?$11156$sFNhI
                                                                                                               g$n$11157$sFNhI)
                                                                                                             (if (eq? (g$syntax->datum$8520$sFNhI
                                                                                                                        g$p?$11156$sFNhI)
                                                                                                                      '>=)
                                                                                                               (begin
                                                                                                                 '#f
                                                                                                                 (g$subversion?$11050$sFNhI
                                                                                                                   g$n$11157$sFNhI))
                                                                                                               '#f)))
                                                                                                          g$ls/false$11155$sFNhI))
                                                                                                      '#f)
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      ((g$p?$11158$sFNhI
                                                                                                         g$n$11159$sFNhI)
                                                                                                       (case-lambda
                                                                                                         ((g$x$11160$sFNhI)
                                                                                                          (>= g$x$11160$sFNhI
                                                                                                              (g$syntax->datum$8520$sFNhI
                                                                                                                g$n$11159$sFNhI))))))
                                                                                                    g$ls/false$11155$sFNhI)
                                                                                                  ((case-lambda
                                                                                                     ((g$t$11161$sFNhI)
                                                                                                      ((case-lambda
                                                                                                         ((g$ls/false$11162$sFNhI)
                                                                                                          (if g$ls/false$11162$sFNhI
                                                                                                            (apply
                                                                                                              (case-lambda
                                                                                                                (()
                                                                                                                 (g$syntax-violation$8517$sFNhI
                                                                                                                   'import
                                                                                                                   '"invalid sub-version spec"
                                                                                                                   g$spec$11049$sFNhI
                                                                                                                   g$x*$11115$sFNhI)))
                                                                                                              g$ls/false$11162$sFNhI)
                                                                                                            (g$syntax-violation$8517$sFNhI
                                                                                                              '#f
                                                                                                              '"invalid syntax"
                                                                                                              g$t$11161$sFNhI))))
                                                                                                       (g$syntax-dispatch$8405$sFNhI
                                                                                                         g$t$11161$sFNhI
                                                                                                         '_))))
                                                                                                   g$t$11154$sFNhI))))
                                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                                               g$t$11154$sFNhI
                                                                                               '(any any)))))
                                                                                         g$t$11147$sFNhI))))
                                                                                   (g$syntax-dispatch$8405$sFNhI
                                                                                     g$t$11147$sFNhI
                                                                                     '(any any)))))
                                                                               g$t$11139$sFNhI))))
                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                           g$t$11139$sFNhI
                                                                           '(any any)))))
                                                                     g$t$11130$sFNhI))))
                                                               (g$syntax-dispatch$8405$sFNhI
                                                                 g$t$11130$sFNhI
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$11121$sFNhI))))
                                                     (g$syntax-dispatch$8405$sFNhI
                                                       g$t$11121$sFNhI
                                                       '(any . each-any)))))
                                                 g$t$11116$sFNhI))))
                                           (g$syntax-dispatch$8405$sFNhI
                                             g$t$11116$sFNhI
                                             'any))))
                                       g$x*$11115$sFNhI))))
                                 (g$version-pred$11052$sFNhI
                                   (case-lambda
                                     ((g$x*$11075$sFNhI)
                                      ((case-lambda
                                         ((g$t$11076$sFNhI)
                                          ((case-lambda
                                             ((g$ls/false$11077$sFNhI)
                                              (if g$ls/false$11077$sFNhI
                                                (apply
                                                  (case-lambda
                                                    (()
                                                     (case-lambda
                                                       ((g$x$11078$sFNhI)
                                                        '#t))))
                                                  g$ls/false$11077$sFNhI)
                                                ((case-lambda
                                                   ((g$t$11079$sFNhI)
                                                    ((case-lambda
                                                       ((g$ls/false$11080$sFNhI)
                                                        (if (if g$ls/false$11080$sFNhI
                                                              (begin
                                                                '#f
                                                                (apply
                                                                  (case-lambda
                                                                    ((g$c$11081$sFNhI
                                                                       g$ver*$11082$sFNhI)
                                                                     (eq? (g$syntax->datum$8520$sFNhI
                                                                            g$c$11081$sFNhI)
                                                                          'and)))
                                                                  g$ls/false$11080$sFNhI))
                                                              '#f)
                                                          (apply
                                                            (case-lambda
                                                              ((g$c$11083$sFNhI
                                                                 g$ver*$11084$sFNhI)
                                                               ((case-lambda
                                                                  ((g$p*$11085$sFNhI)
                                                                   (case-lambda
                                                                     ((g$x$11086$sFNhI)
                                                                      (g$for-all$5155$sFNhI
                                                                        (case-lambda
                                                                          ((g$p$11087$sFNhI)
                                                                           (g$p$11087$sFNhI
                                                                             g$x$11086$sFNhI)))
                                                                        g$p*$11085$sFNhI)))))
                                                                (g$map$5157$sFNhI
                                                                  g$version-pred$11052$sFNhI
                                                                  g$ver*$11084$sFNhI))))
                                                            g$ls/false$11080$sFNhI)
                                                          ((case-lambda
                                                             ((g$t$11088$sFNhI)
                                                              ((case-lambda
                                                                 ((g$ls/false$11089$sFNhI)
                                                                  (if (if g$ls/false$11089$sFNhI
                                                                        (begin
                                                                          '#f
                                                                          (apply
                                                                            (case-lambda
                                                                              ((g$c$11090$sFNhI
                                                                                 g$ver*$11091$sFNhI)
                                                                               (eq? (g$syntax->datum$8520$sFNhI
                                                                                      g$c$11090$sFNhI)
                                                                                    'or)))
                                                                            g$ls/false$11089$sFNhI))
                                                                        '#f)
                                                                    (apply
                                                                      (case-lambda
                                                                        ((g$c$11092$sFNhI
                                                                           g$ver*$11093$sFNhI)
                                                                         ((case-lambda
                                                                            ((g$p*$11094$sFNhI)
                                                                             (case-lambda
                                                                               ((g$x$11095$sFNhI)
                                                                                (g$exists$5156$sFNhI
                                                                                  (case-lambda
                                                                                    ((g$p$11096$sFNhI)
                                                                                     (g$p$11096$sFNhI
                                                                                       g$x$11095$sFNhI)))
                                                                                  g$p*$11094$sFNhI)))))
                                                                          (g$map$5157$sFNhI
                                                                            g$version-pred$11052$sFNhI
                                                                            g$ver*$11093$sFNhI))))
                                                                      g$ls/false$11089$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$t$11097$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$ls/false$11098$sFNhI)
                                                                            (if (if g$ls/false$11098$sFNhI
                                                                                  (begin
                                                                                    '#f
                                                                                    (apply
                                                                                      (case-lambda
                                                                                        ((g$c$11099$sFNhI
                                                                                           g$ver$11100$sFNhI)
                                                                                         (eq? (g$syntax->datum$8520$sFNhI
                                                                                                g$c$11099$sFNhI)
                                                                                              'not)))
                                                                                      g$ls/false$11098$sFNhI))
                                                                                  '#f)
                                                                              (apply
                                                                                (case-lambda
                                                                                  ((g$c$11101$sFNhI
                                                                                     g$ver$11102$sFNhI)
                                                                                   ((case-lambda
                                                                                      ((g$p$11103$sFNhI)
                                                                                       (case-lambda
                                                                                         ((g$x$11104$sFNhI)
                                                                                          (not (g$p$11103$sFNhI
                                                                                                 g$x$11104$sFNhI))))))
                                                                                    (g$version-pred$11052$sFNhI
                                                                                      g$ver$11102$sFNhI))))
                                                                                g$ls/false$11098$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$t$11105$sFNhI)
                                                                                  ((case-lambda
                                                                                     ((g$ls/false$11106$sFNhI)
                                                                                      (if g$ls/false$11106$sFNhI
                                                                                        (apply
                                                                                          (case-lambda
                                                                                            ((g$sub*$11107$sFNhI)
                                                                                             ((case-lambda
                                                                                                ((g$p*$11108$sFNhI)
                                                                                                 (case-lambda
                                                                                                   ((g$x$11109$sFNhI)
                                                                                                    ((letrec ((g$f$11110$sFNhI
                                                                                                                (case-lambda
                                                                                                                  ((g$p*$11111$sFNhI
                                                                                                                     g$x$11112$sFNhI)
                                                                                                                   (if (null?
                                                                                                                         g$p*$11111$sFNhI)
                                                                                                                     '#t
                                                                                                                     (if (null?
                                                                                                                           g$x$11112$sFNhI)
                                                                                                                       '#f
                                                                                                                       (if ((car g$p*$11111$sFNhI)
                                                                                                                            (car g$x$11112$sFNhI))
                                                                                                                         (begin
                                                                                                                           '#f
                                                                                                                           (g$f$11110$sFNhI
                                                                                                                             (cdr g$p*$11111$sFNhI)
                                                                                                                             (cdr g$x$11112$sFNhI)))
                                                                                                                         '#f)))))))
                                                                                                       g$f$11110$sFNhI)
                                                                                                     g$p*$11108$sFNhI
                                                                                                     g$x$11109$sFNhI)))))
                                                                                              (g$map$5157$sFNhI
                                                                                                g$subversion-pred$11051$sFNhI
                                                                                                g$sub*$11107$sFNhI))))
                                                                                          g$ls/false$11106$sFNhI)
                                                                                        ((case-lambda
                                                                                           ((g$t$11113$sFNhI)
                                                                                            ((case-lambda
                                                                                               ((g$ls/false$11114$sFNhI)
                                                                                                (if g$ls/false$11114$sFNhI
                                                                                                  (apply
                                                                                                    (case-lambda
                                                                                                      (()
                                                                                                       (g$syntax-violation$8517$sFNhI
                                                                                                         'import
                                                                                                         '"invalid version spec"
                                                                                                         g$spec$11049$sFNhI
                                                                                                         g$x*$11075$sFNhI)))
                                                                                                    g$ls/false$11114$sFNhI)
                                                                                                  (g$syntax-violation$8517$sFNhI
                                                                                                    '#f
                                                                                                    '"invalid syntax"
                                                                                                    g$t$11113$sFNhI))))
                                                                                             (g$syntax-dispatch$8405$sFNhI
                                                                                               g$t$11113$sFNhI
                                                                                               '_))))
                                                                                         g$t$11105$sFNhI))))
                                                                                   (g$syntax-dispatch$8405$sFNhI
                                                                                     g$t$11105$sFNhI
                                                                                     'each-any))))
                                                                               g$t$11097$sFNhI))))
                                                                         (g$syntax-dispatch$8405$sFNhI
                                                                           g$t$11097$sFNhI
                                                                           '(any any)))))
                                                                     g$t$11088$sFNhI))))
                                                               (g$syntax-dispatch$8405$sFNhI
                                                                 g$t$11088$sFNhI
                                                                 '(any .
                                                                       each-any)))))
                                                           g$t$11079$sFNhI))))
                                                     (g$syntax-dispatch$8405$sFNhI
                                                       g$t$11079$sFNhI
                                                       '(any . each-any)))))
                                                 g$t$11076$sFNhI))))
                                           (g$syntax-dispatch$8405$sFNhI
                                             g$t$11076$sFNhI
                                             '()))))
                                       g$x*$11075$sFNhI)))))
                         ((letrec ((g$f$11053$sFNhI
                                     (case-lambda
                                       ((g$x$11054$sFNhI)
                                        ((case-lambda
                                           ((g$t$11055$sFNhI)
                                            ((case-lambda
                                               ((g$ls/false$11056$sFNhI)
                                                (if g$ls/false$11056$sFNhI
                                                  (apply
                                                    (case-lambda
                                                      ((g$version-spec*$11057$sFNhI)
                                                       (values
                                                         '()
                                                         (g$version-pred$11052$sFNhI
                                                           g$version-spec*$11057$sFNhI))))
                                                    g$ls/false$11056$sFNhI)
                                                  ((case-lambda
                                                     ((g$t$11058$sFNhI)
                                                      ((case-lambda
                                                         ((g$ls/false$11059$sFNhI)
                                                          (if (if g$ls/false$11059$sFNhI
                                                                (begin
                                                                  '#f
                                                                  (apply
                                                                    (case-lambda
                                                                      ((g$x$11060$sFNhI
                                                                         g$x*$11061$sFNhI)
                                                                       (g$idsyn?$10948$sFNhI
                                                                         g$x$11060$sFNhI)))
                                                                    g$ls/false$11059$sFNhI))
                                                                '#f)
                                                            (apply
                                                              (case-lambda
                                                                ((g$x$11062$sFNhI
                                                                   g$x*$11063$sFNhI)
                                                                 (call-with-values
                                                                   (case-lambda
                                                                     (()
                                                                      (g$f$11053$sFNhI
                                                                        g$x*$11063$sFNhI)))
                                                                   (case-lambda
                                                                     ((g$name$11066$sFNhI
                                                                        g$pred$11067$sFNhI)
                                                                      ((case-lambda
                                                                         ((g$pred$11068$sFNhI
                                                                            g$name$11069$sFNhI)
                                                                          (values
                                                                            (cons
                                                                              (g$syntax->datum$8520$sFNhI
                                                                                g$x$11062$sFNhI)
                                                                              g$name$11069$sFNhI)
                                                                            g$pred$11068$sFNhI)))
                                                                       g$pred$11067$sFNhI
                                                                       g$name$11066$sFNhI))))))
                                                              g$ls/false$11059$sFNhI)
                                                            ((case-lambda
                                                               ((g$t$11070$sFNhI)
                                                                ((case-lambda
                                                                   ((g$ls/false$11071$sFNhI)
                                                                    (if g$ls/false$11071$sFNhI
                                                                      (apply
                                                                        (case-lambda
                                                                          (()
                                                                           (values
                                                                             '()
                                                                             (case-lambda
                                                                               ((g$x$11072$sFNhI)
                                                                                '#t)))))
                                                                        g$ls/false$11071$sFNhI)
                                                                      ((case-lambda
                                                                         ((g$t$11073$sFNhI)
                                                                          ((case-lambda
                                                                             ((g$ls/false$11074$sFNhI)
                                                                              (if g$ls/false$11074$sFNhI
                                                                                (apply
                                                                                  (case-lambda
                                                                                    (()
                                                                                     (g$syntax-violation$8517$sFNhI
                                                                                       '#f
                                                                                       '"invalid import spec"
                                                                                       g$spec$11049$sFNhI)))
                                                                                  g$ls/false$11074$sFNhI)
                                                                                (g$syntax-violation$8517$sFNhI
                                                                                  '#f
                                                                                  '"invalid syntax"
                                                                                  g$t$11073$sFNhI))))
                                                                           (g$syntax-dispatch$8405$sFNhI
                                                                             g$t$11073$sFNhI
                                                                             '_))))
                                                                       g$t$11070$sFNhI))))
                                                                 (g$syntax-dispatch$8405$sFNhI
                                                                   g$t$11070$sFNhI
                                                                   '()))))
                                                             g$t$11058$sFNhI))))
                                                       (g$syntax-dispatch$8405$sFNhI
                                                         g$t$11058$sFNhI
                                                         '(any . any)))))
                                                   g$t$11055$sFNhI))))
                                             (g$syntax-dispatch$8405$sFNhI
                                               g$t$11055$sFNhI
                                               '(each-any)))))
                                         g$x$11054$sFNhI)))))
                            g$f$11053$sFNhI)
                          g$spec$11049$sFNhI)))))
                  (g$import-library$10956$sFNhI
                    (case-lambda
                      ((g$spec*$11041$sFNhI)
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-library-name$10955$sFNhI
                              g$spec*$11041$sFNhI)))
                         (case-lambda
                           ((g$name$11044$sFNhI g$pred$11045$sFNhI)
                            ((case-lambda
                               ((g$pred$11046$sFNhI g$name$11047$sFNhI)
                                (begin
                                  (if (null? g$name$11047$sFNhI)
                                    (g$syntax-violation$8517$sFNhI
                                      'import
                                      '"empty library name"
                                      g$spec*$11041$sFNhI)
                                    (void))
                                  ((case-lambda
                                     ((g$lib$11048$sFNhI)
                                      (begin
                                        (if (not g$lib$11048$sFNhI)
                                          (g$syntax-violation$8517$sFNhI
                                            'import
                                            '"cannot find library with required name"
                                            g$name$11047$sFNhI)
                                          (void))
                                        (if (not (g$pred$11046$sFNhI
                                                   (g$library-version$7889$sFNhI
                                                     g$lib$11048$sFNhI)))
                                          (g$syntax-violation$8517$sFNhI
                                            'import
                                            '"library does not satisfy version specification"
                                            g$spec*$11041$sFNhI
                                            g$lib$11048$sFNhI)
                                          (void))
                                        ((g$imp-collector$8459$sFNhI)
                                         g$lib$11048$sFNhI)
                                        (g$library-subst$7893$sFNhI
                                          g$lib$11048$sFNhI))))
                                   (g$find-library-by-name$7929$sFNhI
                                     g$name$11047$sFNhI)))))
                             g$pred$11045$sFNhI
                             g$name$11044$sFNhI)))))))
                  (g$get-import$10957$sFNhI
                    (case-lambda
                      ((g$spec$10970$sFNhI)
                       ((case-lambda
                          ((g$t$10971$sFNhI)
                           ((case-lambda
                              ((g$ls/false$10972$sFNhI)
                               (if (if g$ls/false$10972$sFNhI
                                     (begin
                                       '#f
                                       (apply
                                         (case-lambda
                                           ((g$x$10973$sFNhI g$x*$10974$sFNhI)
                                            (not (g$memq$5149$sFNhI
                                                   (g$syntax->datum$8520$sFNhI
                                                     g$x$10973$sFNhI)
                                                   '(for rename
                                                         except
                                                         only
                                                         prefix
                                                         library)))))
                                         g$ls/false$10972$sFNhI))
                                     '#f)
                                 (apply
                                   (case-lambda
                                     ((g$x$10975$sFNhI g$x*$10976$sFNhI)
                                      (g$import-library$10956$sFNhI
                                        (cons
                                          g$x$10975$sFNhI
                                          g$x*$10976$sFNhI))))
                                   g$ls/false$10972$sFNhI)
                                 ((case-lambda
                                    ((g$t$10977$sFNhI)
                                     ((case-lambda
                                        ((g$ls/false$10978$sFNhI)
                                         (if (if g$ls/false$10978$sFNhI
                                               (begin
                                                 '#f
                                                 (apply
                                                   (case-lambda
                                                     ((g$rename$10979$sFNhI
                                                        g$isp$10980$sFNhI
                                                        g$old*$10981$sFNhI
                                                        g$new*$10982$sFNhI)
                                                      (if (eq? (g$syntax->datum$8520$sFNhI
                                                                 g$rename$10979$sFNhI)
                                                               'rename)
                                                        (if (g$for-all$5155$sFNhI
                                                              g$idsyn?$10948$sFNhI
                                                              g$old*$10981$sFNhI)
                                                          (begin
                                                            '#f
                                                            (g$for-all$5155$sFNhI
                                                              g$idsyn?$10948$sFNhI
                                                              g$new*$10982$sFNhI))
                                                          '#f)
                                                        '#f)))
                                                   g$ls/false$10978$sFNhI))
                                               '#f)
                                           (apply
                                             (case-lambda
                                               ((g$rename$10983$sFNhI
                                                  g$isp$10984$sFNhI
                                                  g$old*$10985$sFNhI
                                                  g$new*$10986$sFNhI)
                                                ((case-lambda
                                                   ((g$subst$10987$sFNhI
                                                      g$old*$10988$sFNhI
                                                      g$new*$10989$sFNhI)
                                                    ((case-lambda
                                                       ((g$old-label*$10990$sFNhI)
                                                        ((case-lambda
                                                           ((g$subst$10991$sFNhI)
                                                            (g$merge-substs$10950$sFNhI
                                                              (g$map$5157$sFNhI
                                                                cons
                                                                g$new*$10989$sFNhI
                                                                g$old-label*$10990$sFNhI)
                                                              g$subst$10991$sFNhI)))
                                                         (g$rem*$10953$sFNhI
                                                           g$old*$10988$sFNhI
                                                           g$subst$10987$sFNhI))))
                                                     (g$find*$10952$sFNhI
                                                       g$old*$10988$sFNhI
                                                       g$subst$10987$sFNhI))))
                                                 (g$get-import$10957$sFNhI
                                                   g$isp$10984$sFNhI)
                                                 (g$map$5157$sFNhI
                                                   g$syntax->datum$8520$sFNhI
                                                   g$old*$10985$sFNhI)
                                                 (g$map$5157$sFNhI
                                                   g$syntax->datum$8520$sFNhI
                                                   g$new*$10986$sFNhI))))
                                             g$ls/false$10978$sFNhI)
                                           ((case-lambda
                                              ((g$t$10992$sFNhI)
                                               ((case-lambda
                                                  ((g$ls/false$10993$sFNhI)
                                                   (if (if g$ls/false$10993$sFNhI
                                                         (begin
                                                           '#f
                                                           (apply
                                                             (case-lambda
                                                               ((g$except$10994$sFNhI
                                                                  g$isp$10995$sFNhI
                                                                  g$sym*$10996$sFNhI)
                                                                (if (eq? (g$syntax->datum$8520$sFNhI
                                                                           g$except$10994$sFNhI)
                                                                         'except)
                                                                  (begin
                                                                    '#f
                                                                    (g$for-all$5155$sFNhI
                                                                      g$idsyn?$10948$sFNhI
                                                                      g$sym*$10996$sFNhI))
                                                                  '#f)))
                                                             g$ls/false$10993$sFNhI))
                                                         '#f)
                                                     (apply
                                                       (case-lambda
                                                         ((g$except$10997$sFNhI
                                                            g$isp$10998$sFNhI
                                                            g$sym*$10999$sFNhI)
                                                          ((case-lambda
                                                             ((g$subst$11000$sFNhI)
                                                              (g$rem*$10953$sFNhI
                                                                (g$map$5157$sFNhI
                                                                  g$syntax->datum$8520$sFNhI
                                                                  g$sym*$10999$sFNhI)
                                                                g$subst$11000$sFNhI)))
                                                           (g$get-import$10957$sFNhI
                                                             g$isp$10998$sFNhI))))
                                                       g$ls/false$10993$sFNhI)
                                                     ((case-lambda
                                                        ((g$t$11001$sFNhI)
                                                         ((case-lambda
                                                            ((g$ls/false$11002$sFNhI)
                                                             (if (if g$ls/false$11002$sFNhI
                                                                   (begin
                                                                     '#f
                                                                     (apply
                                                                       (case-lambda
                                                                         ((g$only$11003$sFNhI
                                                                            g$isp$11004$sFNhI
                                                                            g$sym*$11005$sFNhI)
                                                                          (if (eq? (g$syntax->datum$8520$sFNhI
                                                                                     g$only$11003$sFNhI)
                                                                                   'only)
                                                                            (begin
                                                                              '#f
                                                                              (g$for-all$5155$sFNhI
                                                                                g$idsyn?$10948$sFNhI
                                                                                g$sym*$11005$sFNhI))
                                                                            '#f)))
                                                                       g$ls/false$11002$sFNhI))
                                                                   '#f)
                                                               (apply
                                                                 (case-lambda
                                                                   ((g$only$11006$sFNhI
                                                                      g$isp$11007$sFNhI
                                                                      g$sym*$11008$sFNhI)
                                                                    ((case-lambda
                                                                       ((g$subst$11009$sFNhI
                                                                          g$sym*$11010$sFNhI)
                                                                        ((case-lambda
                                                                           ((g$sym*$11011$sFNhI)
                                                                            ((case-lambda
                                                                               ((g$lab*$11012$sFNhI)
                                                                                (g$map$5157$sFNhI
                                                                                  cons
                                                                                  g$sym*$11011$sFNhI
                                                                                  g$lab*$11012$sFNhI)))
                                                                             (g$find*$10952$sFNhI
                                                                               g$sym*$11011$sFNhI
                                                                               g$subst$11009$sFNhI))))
                                                                         (g$remove-dups$10954$sFNhI
                                                                           g$sym*$11010$sFNhI))))
                                                                     (g$get-import$10957$sFNhI
                                                                       g$isp$11007$sFNhI)
                                                                     (g$map$5157$sFNhI
                                                                       g$syntax->datum$8520$sFNhI
                                                                       g$sym*$11008$sFNhI))))
                                                                 g$ls/false$11002$sFNhI)
                                                               ((case-lambda
                                                                  ((g$t$11013$sFNhI)
                                                                   ((case-lambda
                                                                      ((g$ls/false$11014$sFNhI)
                                                                       (if (if g$ls/false$11014$sFNhI
                                                                             (begin
                                                                               '#f
                                                                               (apply
                                                                                 (case-lambda
                                                                                   ((g$prefix$11015$sFNhI
                                                                                      g$isp$11016$sFNhI
                                                                                      g$p$11017$sFNhI)
                                                                                    (if (eq? (g$syntax->datum$8520$sFNhI
                                                                                               g$prefix$11015$sFNhI)
                                                                                             'prefix)
                                                                                      (begin
                                                                                        '#f
                                                                                        (g$idsyn?$10948$sFNhI
                                                                                          g$p$11017$sFNhI))
                                                                                      '#f)))
                                                                                 g$ls/false$11014$sFNhI))
                                                                             '#f)
                                                                         (apply
                                                                           (case-lambda
                                                                             ((g$prefix$11018$sFNhI
                                                                                g$isp$11019$sFNhI
                                                                                g$p$11020$sFNhI)
                                                                              ((case-lambda
                                                                                 ((g$subst$11021$sFNhI
                                                                                    g$prefix$11022$sFNhI)
                                                                                  (g$map$5157$sFNhI
                                                                                    (case-lambda
                                                                                      ((g$x$11023$sFNhI)
                                                                                       (cons
                                                                                         (string->symbol
                                                                                           (string-append
                                                                                             g$prefix$11022$sFNhI
                                                                                             (symbol->string
                                                                                               (car g$x$11023$sFNhI))))
                                                                                         (cdr g$x$11023$sFNhI))))
                                                                                    g$subst$11021$sFNhI)))
                                                                               (g$get-import$10957$sFNhI
                                                                                 g$isp$11019$sFNhI)
                                                                               (symbol->string
                                                                                 (g$syntax->datum$8520$sFNhI
                                                                                   g$p$11020$sFNhI)))))
                                                                           g$ls/false$11014$sFNhI)
                                                                         ((case-lambda
                                                                            ((g$t$11024$sFNhI)
                                                                             ((case-lambda
                                                                                ((g$ls/false$11025$sFNhI)
                                                                                 (if (if g$ls/false$11025$sFNhI
                                                                                       (begin
                                                                                         '#f
                                                                                         (apply
                                                                                           (case-lambda
                                                                                             ((g$library$11026$sFNhI
                                                                                                g$spec*$11027$sFNhI)
                                                                                              (eq? (g$syntax->datum$8520$sFNhI
                                                                                                     g$library$11026$sFNhI)
                                                                                                   'library)))
                                                                                           g$ls/false$11025$sFNhI))
                                                                                       '#f)
                                                                                   (apply
                                                                                     (case-lambda
                                                                                       ((g$library$11028$sFNhI
                                                                                          g$spec*$11029$sFNhI)
                                                                                        (g$import-library$10956$sFNhI
                                                                                          g$spec*$11029$sFNhI)))
                                                                                     g$ls/false$11025$sFNhI)
                                                                                   ((case-lambda
                                                                                      ((g$t$11030$sFNhI)
                                                                                       ((case-lambda
                                                                                          ((g$ls/false$11031$sFNhI)
                                                                                           (if (if g$ls/false$11031$sFNhI
                                                                                                 (begin
                                                                                                   '#f
                                                                                                   (apply
                                                                                                     (case-lambda
                                                                                                       ((g$for$11032$sFNhI
                                                                                                          g$isp$11033$sFNhI
                                                                                                          g$rest$11034$sFNhI)
                                                                                                        (eq? (g$syntax->datum$8520$sFNhI
                                                                                                               g$for$11032$sFNhI)
                                                                                                             'for)))
                                                                                                     g$ls/false$11031$sFNhI))
                                                                                                 '#f)
                                                                                             (apply
                                                                                               (case-lambda
                                                                                                 ((g$for$11035$sFNhI
                                                                                                    g$isp$11036$sFNhI
                                                                                                    g$rest$11037$sFNhI)
                                                                                                  (g$get-import$10957$sFNhI
                                                                                                    g$isp$11036$sFNhI)))
                                                                                               g$ls/false$11031$sFNhI)
                                                                                             ((case-lambda
                                                                                                ((g$t$11038$sFNhI)
                                                                                                 ((case-lambda
                                                                                                    ((g$ls/false$11039$sFNhI)
                                                                                                     (if g$ls/false$11039$sFNhI
                                                                                                       (apply
                                                                                                         (case-lambda
                                                                                                           ((g$spec$11040$sFNhI)
                                                                                                            (g$syntax-violation$8517$sFNhI
                                                                                                              'import
                                                                                                              '"invalid import spec"
                                                                                                              g$spec$11040$sFNhI)))
                                                                                                         g$ls/false$11039$sFNhI)
                                                                                                       (g$syntax-violation$8517$sFNhI
                                                                                                         '#f
                                                                                                         '"invalid syntax"
                                                                                                         g$t$11038$sFNhI))))
                                                                                                  (g$syntax-dispatch$8405$sFNhI
                                                                                                    g$t$11038$sFNhI
                                                                                                    'any))))
                                                                                              g$t$11030$sFNhI))))
                                                                                        (g$syntax-dispatch$8405$sFNhI
                                                                                          g$t$11030$sFNhI
                                                                                          '(any any
                                                                                                .
                                                                                                any)))))
                                                                                    g$t$11024$sFNhI))))
                                                                              (g$syntax-dispatch$8405$sFNhI
                                                                                g$t$11024$sFNhI
                                                                                '(any each-any)))))
                                                                          g$t$11013$sFNhI))))
                                                                    (g$syntax-dispatch$8405$sFNhI
                                                                      g$t$11013$sFNhI
                                                                      '(any any
                                                                            any)))))
                                                                g$t$11001$sFNhI))))
                                                          (g$syntax-dispatch$8405$sFNhI
                                                            g$t$11001$sFNhI
                                                            '(any any
                                                                  .
                                                                  each-any)))))
                                                      g$t$10992$sFNhI))))
                                                (g$syntax-dispatch$8405$sFNhI
                                                  g$t$10992$sFNhI
                                                  '(any any . each-any)))))
                                            g$t$10977$sFNhI))))
                                      (g$syntax-dispatch$8405$sFNhI
                                        g$t$10977$sFNhI
                                        '(any any . #(each (any any)))))))
                                  g$t$10971$sFNhI))))
                            (g$syntax-dispatch$8405$sFNhI
                              g$t$10971$sFNhI
                              '(any . each-any)))))
                        g$spec$10970$sFNhI))))
                  (g$add-imports!$10958$sFNhI
                    (case-lambda
                      ((g$imp$10962$sFNhI g$h$10963$sFNhI)
                       ((case-lambda
                          ((g$subst$10964$sFNhI)
                           (g$for-each$5158$sFNhI
                             (case-lambda
                               ((g$x$10965$sFNhI)
                                ((case-lambda
                                   ((g$name$10966$sFNhI g$label$10967$sFNhI)
                                    ((case-lambda
                                       ((g$t$10968$sFNhI)
                                        (if g$t$10968$sFNhI
                                          ((case-lambda
                                             ((g$l$10969$sFNhI)
                                              (if (not (eq? g$l$10969$sFNhI
                                                            g$label$10967$sFNhI))
                                                (g$dup-error$10949$sFNhI
                                                  g$name$10966$sFNhI)
                                                (void))))
                                           g$t$10968$sFNhI)
                                          (g$hashtable-set!$5748$sFNhI
                                            g$h$10963$sFNhI
                                            g$name$10966$sFNhI
                                            g$label$10967$sFNhI))))
                                     (g$hashtable-ref$5747$sFNhI
                                       g$h$10963$sFNhI
                                       g$name$10966$sFNhI
                                       '#f))))
                                 (car g$x$10965$sFNhI)
                                 (cdr g$x$10965$sFNhI))))
                             g$subst$10964$sFNhI)))
                        (g$get-import$10957$sFNhI g$imp$10962$sFNhI))))))
          ((letrec ((g$f$10959$sFNhI
                      (case-lambda
                        ((g$imp*$10960$sFNhI g$h$10961$sFNhI)
                         (if (null? g$imp*$10960$sFNhI)
                           (hashtable-entries g$h$10961$sFNhI)
                           (begin
                             (g$add-imports!$10958$sFNhI
                               (car g$imp*$10960$sFNhI)
                               g$h$10961$sFNhI)
                             (g$f$10959$sFNhI
                               (cdr g$imp*$10960$sFNhI)
                               g$h$10961$sFNhI)))))))
             g$f$10959$sFNhI)
           g$imp*$10947$sFNhI
           (g$make-eq-hashtable$5744$sFNhI))))))
   (g$make-top-rib$8455$sFNhI
     g$make-top-rib$11973$sFNhI
     (case-lambda
       ((g$names$11209$sFNhI g$labels$11210$sFNhI)
        ((case-lambda
           ((g$rib$11211$sFNhI)
            (begin
              (g$vector-for-each$5706$sFNhI
                (case-lambda
                  ((g$name$11212$sFNhI g$label$11213$sFNhI)
                   (begin
                     (if (not (g$symbol?$5645$sFNhI g$name$11212$sFNhI))
                       (error
                         'make-top-rib
                         '"BUG: not a symbol"
                         g$name$11212$sFNhI)
                       (void))
                     (g$extend-rib/nc!$8090$sFNhI
                       g$rib$11211$sFNhI
                       (g$make-stx$8099$sFNhI
                         g$name$11212$sFNhI
                         g$top-mark*$8063$sFNhI
                         '()
                         '())
                       g$label$11213$sFNhI))))
                g$names$11209$sFNhI
                g$labels$11210$sFNhI)
              g$rib$11211$sFNhI)))
         (g$make-cache-rib$8087$sFNhI)))))
   (g$make-collector$8456$sFNhI
     g$make-collector$11974$sFNhI
     (case-lambda
       (()
        ((case-lambda
           ((g$ls$11214$sFNhI)
            (case-lambda
              (() g$ls$11214$sFNhI)
              ((g$x$11215$sFNhI)
               (set! g$ls$11214$sFNhI
                 (g$set-cons$8060$sFNhI g$x$11215$sFNhI g$ls$11214$sFNhI))))))
         '()))))
   (g$inv-collector$8457$sFNhI
     g$inv-collector$11975$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda
         (g$args$11216$sFNhI
          (assertion-violation 'inv-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11217$sFNhI)
          (begin
            (if (not (g$procedure?$5647$sFNhI g$x$11217$sFNhI))
              (assertion-violation
                'inv-collector
                '"BUG: not a procedure"
                g$x$11217$sFNhI)
              (void))
            g$x$11217$sFNhI)))))
   (g$vis-collector$8458$sFNhI
     g$vis-collector$11976$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda
         (g$args$11218$sFNhI
          (assertion-violation 'vis-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11219$sFNhI)
          (begin
            (if (not (g$procedure?$5647$sFNhI g$x$11219$sFNhI))
              (assertion-violation
                'vis-collector
                '"BUG: not a procedure"
                g$x$11219$sFNhI)
              (void))
            g$x$11219$sFNhI)))))
   (g$imp-collector$8459$sFNhI
     g$imp-collector$11977$sFNhI
     (g$make-parameter$7426$sFNhI
       (case-lambda
         (g$args$11220$sFNhI
          (assertion-violation 'imp-collector '"BUG: not initialized")))
       (case-lambda
         ((g$x$11221$sFNhI)
          (begin
            (if (not (g$procedure?$5647$sFNhI g$x$11221$sFNhI))
              (assertion-violation
                'imp-collector
                '"BUG: not a procedure"
                g$x$11221$sFNhI)
              (void))
            g$x$11221$sFNhI)))))
   (g$chi-library-internal$8460$sFNhI
     g$chi-library-internal$11978$sFNhI
     (case-lambda
       ((g$e*$11222$sFNhI g$rib$11223$sFNhI g$mix?$11224$sFNhI)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8449$sFNhI
               g$e*$11222$sFNhI
               '()
               '()
               '()
               '()
               '()
               '()
               '()
               g$rib$11223$sFNhI
               g$mix?$11224$sFNhI
               '#t)))
          (case-lambda
            ((g$e*$11233$sFNhI
               g$r$11234$sFNhI
               g$mr$11235$sFNhI
               g$lex*$11236$sFNhI
               g$rhs*$11237$sFNhI
               g$mod**$11238$sFNhI
               g$_kwd*$11239$sFNhI
               g$exp*$11240$sFNhI)
             ((case-lambda
                ((g$exp*$11241$sFNhI
                   g$_kwd*$11242$sFNhI
                   g$mod**$11243$sFNhI
                   g$rhs*$11244$sFNhI
                   g$lex*$11245$sFNhI
                   g$mr$11246$sFNhI
                   g$r$11247$sFNhI
                   g$e*$11248$sFNhI)
                 (values
                   (append
                     (apply append (g$reverse$5652$sFNhI g$mod**$11243$sFNhI))
                     g$e*$11248$sFNhI)
                   g$r$11247$sFNhI
                   g$mr$11246$sFNhI
                   (g$reverse$5652$sFNhI g$lex*$11245$sFNhI)
                   (g$reverse$5652$sFNhI g$rhs*$11244$sFNhI)
                   g$exp*$11241$sFNhI)))
              g$exp*$11240$sFNhI
              g$_kwd*$11239$sFNhI
              g$mod**$11238$sFNhI
              g$rhs*$11237$sFNhI
              g$lex*$11236$sFNhI
              g$mr$11235$sFNhI
              g$r$11234$sFNhI
              g$e*$11233$sFNhI)))))))
   (g$chi-interaction-expr$8461$sFNhI
     g$chi-interaction-expr$11979$sFNhI
     (case-lambda
       ((g$e$11249$sFNhI g$rib$11250$sFNhI g$r$11251$sFNhI)
        (call-with-values
          (case-lambda
            (()
             (g$chi-body*$8449$sFNhI
               (list g$e$11249$sFNhI)
               g$r$11251$sFNhI
               g$r$11251$sFNhI
               '()
               '()
               '()
               '()
               '()
               g$rib$11250$sFNhI
               '#t
               '#f)))
          (case-lambda
            ((g$e*$11260$sFNhI
               g$r$11261$sFNhI
               g$mr$11262$sFNhI
               g$lex*$11263$sFNhI
               g$rhs*$11264$sFNhI
               g$mod**$11265$sFNhI
               g$_kwd*$11266$sFNhI
               g$_exp*$11267$sFNhI)
             ((case-lambda
                ((g$_exp*$11268$sFNhI
                   g$_kwd*$11269$sFNhI
                   g$mod**$11270$sFNhI
                   g$rhs*$11271$sFNhI
                   g$lex*$11272$sFNhI
                   g$mr$11273$sFNhI
                   g$r$11274$sFNhI
                   g$e*$11275$sFNhI)
                 ((case-lambda
                    ((g$e*$11276$sFNhI)
                     ((case-lambda
                        ((g$e$11277$sFNhI)
                         (values g$e$11277$sFNhI g$r$11274$sFNhI)))
                      (if (null? g$e*$11276$sFNhI)
                        (g$build-void$8056$sFNhI)
                        (if (null? (cdr g$e*$11276$sFNhI))
                          (car g$e*$11276$sFNhI)
                          (g$build-sequence$8055$sFNhI
                            '#f
                            g$e*$11276$sFNhI))))))
                  (g$expand-interaction-rhs*/init*$8430$sFNhI
                    (g$reverse$5652$sFNhI g$lex*$11272$sFNhI)
                    (g$reverse$5652$sFNhI g$rhs*$11271$sFNhI)
                    (append
                      (apply append (g$reverse$5652$sFNhI g$mod**$11270$sFNhI))
                      g$e*$11275$sFNhI)
                    g$r$11274$sFNhI
                    g$mr$11273$sFNhI))))
              g$_exp*$11267$sFNhI
              g$_kwd*$11266$sFNhI
              g$mod**$11265$sFNhI
              g$rhs*$11264$sFNhI
              g$lex*$11263$sFNhI
              g$mr$11262$sFNhI
              g$r$11261$sFNhI
              g$e*$11260$sFNhI)))))))
   (g$library-body-expander$8462$sFNhI
     g$library-body-expander$11980$sFNhI
     (case-lambda
       ((g$name$11278$sFNhI
          g$main-exp*$11279$sFNhI
          g$imp*$11280$sFNhI
          g$b*$11281$sFNhI
          g$mix?$11282$sFNhI)
        (letrec* ((g$itc$11283$sFNhI (g$make-collector$8456$sFNhI)))
          ((case-lambda
             ((g$imp-collector$11288$sFNhI
                g$top-level-context$11289$sFNhI
                g$imp-collector$11290$sFNhI
                g$top-level-context$11291$sFNhI)
              ((case-lambda
                 ((g$swap$11292$sFNhI)
                  (dynamic-wind
                    g$swap$11292$sFNhI
                    (case-lambda
                      (()
                       (call-with-values
                         (case-lambda
                           (()
                            (g$parse-import-spec*$8454$sFNhI
                              g$imp*$11280$sFNhI)))
                         (case-lambda
                           ((g$subst-names$11295$sFNhI
                              g$subst-labels$11296$sFNhI)
                            ((case-lambda
                               ((g$subst-labels$11297$sFNhI
                                  g$subst-names$11298$sFNhI)
                                ((case-lambda
                                   ((g$rib$11299$sFNhI)
                                    (letrec* ((g$wrap$11300$sFNhI
                                                (case-lambda
                                                  ((g$x$11362$sFNhI)
                                                   (g$make-stx$8099$sFNhI
                                                     g$x$11362$sFNhI
                                                     g$top-mark*$8063$sFNhI
                                                     (list g$rib$11299$sFNhI)
                                                     '())))))
                                      ((case-lambda
                                         ((g$b*$11301$sFNhI
                                            g$main-exp*$11302$sFNhI
                                            g$rtc$11303$sFNhI
                                            g$vtc$11304$sFNhI)
                                          ((case-lambda
                                             ((g$inv-collector$11309$sFNhI
                                                g$vis-collector$11310$sFNhI
                                                g$inv-collector$11311$sFNhI
                                                g$vis-collector$11312$sFNhI)
                                              ((case-lambda
                                                 ((g$swap$11313$sFNhI)
                                                  (dynamic-wind
                                                    g$swap$11313$sFNhI
                                                    (case-lambda
                                                      (()
                                                       (call-with-values
                                                         (case-lambda
                                                           (()
                                                            (g$chi-library-internal$8460$sFNhI
                                                              g$b*$11301$sFNhI
                                                              g$rib$11299$sFNhI
                                                              g$mix?$11282$sFNhI)))
                                                         (case-lambda
                                                           ((g$init*$11320$sFNhI
                                                              g$r$11321$sFNhI
                                                              g$mr$11322$sFNhI
                                                              g$lex*$11323$sFNhI
                                                              g$rhs*$11324$sFNhI
                                                              g$internal-exp*$11325$sFNhI)
                                                            ((case-lambda
                                                               ((g$internal-exp*$11326$sFNhI
                                                                  g$rhs*$11327$sFNhI
                                                                  g$lex*$11328$sFNhI
                                                                  g$mr$11329$sFNhI
                                                                  g$r$11330$sFNhI
                                                                  g$init*$11331$sFNhI)
                                                                (call-with-values
                                                                  (case-lambda
                                                                    (()
                                                                     (g$parse-exports$8451$sFNhI
                                                                       (append
                                                                         g$main-exp*$11302$sFNhI
                                                                         g$internal-exp*$11326$sFNhI))))
                                                                  (case-lambda
                                                                    ((g$exp-name*$11334$sFNhI
                                                                       g$exp-id*$11335$sFNhI)
                                                                     ((case-lambda
                                                                        ((g$exp-id*$11336$sFNhI
                                                                           g$exp-name*$11337$sFNhI)
                                                                         (begin
                                                                           (g$seal-rib!$8092$sFNhI
                                                                             g$rib$11299$sFNhI)
                                                                           ((case-lambda
                                                                              ((g$init*$11338$sFNhI)
                                                                               ((case-lambda
                                                                                  ((g$rhs*$11339$sFNhI)
                                                                                   (begin
                                                                                     (g$unseal-rib!$8093$sFNhI
                                                                                       g$rib$11299$sFNhI)
                                                                                     ((case-lambda
                                                                                        ((g$loc*$11340$sFNhI
                                                                                           g$export-subst$11341$sFNhI)
                                                                                         (letrec* ((g$errstr$11342$sFNhI
                                                                                                     '"attempt to export mutated variable"))
                                                                                           (call-with-values
                                                                                             (case-lambda
                                                                                               (()
                                                                                                (g$make-export-env/macros$8506$sFNhI
                                                                                                  g$lex*$11328$sFNhI
                                                                                                  g$loc*$11340$sFNhI
                                                                                                  g$r$11330$sFNhI)))
                                                                                             (case-lambda
                                                                                               ((g$export-env$11346$sFNhI
                                                                                                  g$global*$11347$sFNhI
                                                                                                  g$macro*$11348$sFNhI)
                                                                                                ((case-lambda
                                                                                                   ((g$macro*$11349$sFNhI
                                                                                                      g$global*$11350$sFNhI
                                                                                                      g$export-env$11351$sFNhI)
                                                                                                    (begin
                                                                                                      (g$for-each$5158$sFNhI
                                                                                                        (case-lambda
                                                                                                          ((g$s$11352$sFNhI)
                                                                                                           ((case-lambda
                                                                                                              ((g$name$11353$sFNhI
                                                                                                                 g$label$11354$sFNhI)
                                                                                                               ((case-lambda
                                                                                                                  ((g$p$11355$sFNhI)
                                                                                                                   (if g$p$11355$sFNhI
                                                                                                                     ((case-lambda
                                                                                                                        ((g$b$11356$sFNhI)
                                                                                                                         ((case-lambda
                                                                                                                            ((g$type$11357$sFNhI)
                                                                                                                             (if (eq? g$type$11357$sFNhI
                                                                                                                                      'mutable)
                                                                                                                               (g$syntax-violation$8517$sFNhI
                                                                                                                                 'export
                                                                                                                                 g$errstr$11342$sFNhI
                                                                                                                                 g$name$11353$sFNhI)
                                                                                                                               (void))))
                                                                                                                          (car g$b$11356$sFNhI))))
                                                                                                                      (cdr g$p$11355$sFNhI))
                                                                                                                     (void))))
                                                                                                                (g$assq$5145$sFNhI
                                                                                                                  g$label$11354$sFNhI
                                                                                                                  g$export-env$11351$sFNhI))))
                                                                                                            (car g$s$11352$sFNhI)
                                                                                                            (cdr g$s$11352$sFNhI))))
                                                                                                        g$export-subst$11341$sFNhI)
                                                                                                      ((case-lambda
                                                                                                         ((g$invoke-body$11358$sFNhI
                                                                                                            g$invoke-definitions$11359$sFNhI)
                                                                                                          (values
                                                                                                            (g$itc$11283$sFNhI)
                                                                                                            (g$rtc$11303$sFNhI)
                                                                                                            (g$vtc$11304$sFNhI)
                                                                                                            (g$build-sequence$8055$sFNhI
                                                                                                              '#f
                                                                                                              (append
                                                                                                                g$invoke-definitions$11359$sFNhI
                                                                                                                (list
                                                                                                                  g$invoke-body$11358$sFNhI)))
                                                                                                            g$macro*$11349$sFNhI
                                                                                                            g$export-subst$11341$sFNhI
                                                                                                            g$export-env$11351$sFNhI)))
                                                                                                       (g$build-library-letrec*$8059$sFNhI
                                                                                                         '#f
                                                                                                         g$name$11278$sFNhI
                                                                                                         g$lex*$11328$sFNhI
                                                                                                         g$loc*$11340$sFNhI
                                                                                                         g$rhs*$11339$sFNhI
                                                                                                         (if (null?
                                                                                                               g$init*$11338$sFNhI)
                                                                                                           (g$build-void$8056$sFNhI)
                                                                                                           (g$build-sequence$8055$sFNhI
                                                                                                             '#f
                                                                                                             g$init*$11338$sFNhI)))
                                                                                                       (g$map$5157$sFNhI
                                                                                                         g$build-global-define$8051$sFNhI
                                                                                                         (g$map$5157$sFNhI
                                                                                                           cdr
                                                                                                           g$global*$11350$sFNhI))))))
                                                                                                 g$macro*$11348$sFNhI
                                                                                                 g$global*$11347$sFNhI
                                                                                                 g$export-env$11346$sFNhI)))))))
                                                                                      (g$map$5157$sFNhI
                                                                                        g$gen-global$8066$sFNhI
                                                                                        g$lex*$11328$sFNhI)
                                                                                      (g$make-export-subst$8505$sFNhI
                                                                                        g$exp-name*$11337$sFNhI
                                                                                        g$exp-id*$11336$sFNhI)))))
                                                                                (g$chi-rhs*$8431$sFNhI
                                                                                  g$rhs*$11327$sFNhI
                                                                                  g$r$11330$sFNhI
                                                                                  g$mr$11329$sFNhI))))
                                                                            (g$chi-expr*$8421$sFNhI
                                                                              g$init*$11331$sFNhI
                                                                              g$r$11330$sFNhI
                                                                              g$mr$11329$sFNhI)))))
                                                                      g$exp-id*$11335$sFNhI
                                                                      g$exp-name*$11334$sFNhI))))))
                                                             g$internal-exp*$11325$sFNhI
                                                             g$rhs*$11324$sFNhI
                                                             g$lex*$11323$sFNhI
                                                             g$mr$11322$sFNhI
                                                             g$r$11321$sFNhI
                                                             g$init*$11320$sFNhI))))))
                                                    g$swap$11313$sFNhI)))
                                               (case-lambda
                                                 (()
                                                  (begin
                                                    ((case-lambda
                                                       ((g$t$11360$sFNhI)
                                                        (begin
                                                          (g$inv-collector$11309$sFNhI
                                                            g$inv-collector$11311$sFNhI)
                                                          (set! g$inv-collector$11311$sFNhI
                                                            g$t$11360$sFNhI))))
                                                     (g$inv-collector$11309$sFNhI))
                                                    ((case-lambda
                                                       ((g$t$11361$sFNhI)
                                                        (begin
                                                          (g$vis-collector$11310$sFNhI
                                                            g$vis-collector$11312$sFNhI)
                                                          (set! g$vis-collector$11312$sFNhI
                                                            g$t$11361$sFNhI))))
                                                     (g$vis-collector$11310$sFNhI))))))))
                                           g$inv-collector$8457$sFNhI
                                           g$vis-collector$8458$sFNhI
                                           g$rtc$11303$sFNhI
                                           g$vtc$11304$sFNhI)))
                                       (g$map$5157$sFNhI
                                         g$wrap$11300$sFNhI
                                         g$b*$11281$sFNhI)
                                       (g$map$5157$sFNhI
                                         g$wrap$11300$sFNhI
                                         g$main-exp*$11279$sFNhI)
                                       (g$make-collector$8456$sFNhI)
                                       (g$make-collector$8456$sFNhI)))))
                                 (g$make-top-rib$8455$sFNhI
                                   g$subst-names$11298$sFNhI
                                   g$subst-labels$11297$sFNhI))))
                             g$subst-labels$11296$sFNhI
                             g$subst-names$11295$sFNhI))))))
                    g$swap$11292$sFNhI)))
               (case-lambda
                 (()
                  (begin
                    ((case-lambda
                       ((g$t$11363$sFNhI)
                        (begin
                          (g$imp-collector$11288$sFNhI
                            g$imp-collector$11290$sFNhI)
                          (set! g$imp-collector$11290$sFNhI g$t$11363$sFNhI))))
                     (g$imp-collector$11288$sFNhI))
                    ((case-lambda
                       ((g$t$11364$sFNhI)
                        (begin
                          (g$top-level-context$11289$sFNhI
                            g$top-level-context$11291$sFNhI)
                          (set! g$top-level-context$11291$sFNhI
                            g$t$11364$sFNhI))))
                     (g$top-level-context$11289$sFNhI))))))))
           g$imp-collector$8459$sFNhI
           g$top-level-context$8525$sFNhI
           g$itc$11283$sFNhI
           '#f)))))
   (g$core-library-expander$8463$sFNhI
     g$core-library-expander$11981$sFNhI
     (case-lambda
       ((g$e$11365$sFNhI g$verify-name$11366$sFNhI)
        (call-with-values
          (case-lambda (() (g$parse-library$8453$sFNhI g$e$11365$sFNhI)))
          (case-lambda
            ((g$name*$11371$sFNhI
               g$exp*$11372$sFNhI
               g$imp*$11373$sFNhI
               g$b*$11374$sFNhI)
             ((case-lambda
                ((g$b*$11375$sFNhI
                   g$imp*$11376$sFNhI
                   g$exp*$11377$sFNhI
                   g$name*$11378$sFNhI)
                 (call-with-values
                   (case-lambda
                     (() (g$parse-library-name$8452$sFNhI g$name*$11378$sFNhI)))
                   (case-lambda
                     ((g$name$11381$sFNhI g$ver$11382$sFNhI)
                      ((case-lambda
                         ((g$ver$11383$sFNhI g$name$11384$sFNhI)
                          (begin
                            (g$verify-name$11366$sFNhI g$name$11384$sFNhI)
                            (call-with-values
                              (case-lambda
                                (()
                                 (g$library-body-expander$8462$sFNhI
                                   g$name$11384$sFNhI
                                   g$exp*$11377$sFNhI
                                   g$imp*$11376$sFNhI
                                   g$b*$11375$sFNhI
                                   '#f)))
                              (case-lambda
                                ((g$imp*$11392$sFNhI
                                   g$invoke-req*$11393$sFNhI
                                   g$visit-req*$11394$sFNhI
                                   g$invoke-code$11395$sFNhI
                                   g$visit-code$11396$sFNhI
                                   g$export-subst$11397$sFNhI
                                   g$export-env$11398$sFNhI)
                                 ((case-lambda
                                    ((g$export-env$11399$sFNhI
                                       g$export-subst$11400$sFNhI
                                       g$visit-code$11401$sFNhI
                                       g$invoke-code$11402$sFNhI
                                       g$visit-req*$11403$sFNhI
                                       g$invoke-req*$11404$sFNhI
                                       g$imp*$11405$sFNhI)
                                     (values
                                       g$name$11384$sFNhI
                                       g$ver$11383$sFNhI
                                       g$imp*$11405$sFNhI
                                       g$invoke-req*$11404$sFNhI
                                       g$visit-req*$11403$sFNhI
                                       g$invoke-code$11402$sFNhI
                                       g$visit-code$11401$sFNhI
                                       g$export-subst$11400$sFNhI
                                       g$export-env$11399$sFNhI)))
                                  g$export-env$11398$sFNhI
                                  g$export-subst$11397$sFNhI
                                  g$visit-code$11396$sFNhI
                                  g$invoke-code$11395$sFNhI
                                  g$visit-req*$11394$sFNhI
                                  g$invoke-req*$11393$sFNhI
                                  g$imp*$11392$sFNhI)))))))
                       g$ver$11382$sFNhI
                       g$name$11381$sFNhI))))))
              g$b*$11374$sFNhI
              g$imp*$11373$sFNhI
              g$exp*$11372$sFNhI
              g$name*$11371$sFNhI)))))))
   (g$parse-top-level-program$8464$sFNhI
     g$parse-top-level-program$11982$sFNhI
     (case-lambda
       ((g$e*$11406$sFNhI)
        ((case-lambda
           ((g$t$11407$sFNhI)
            ((case-lambda
               ((g$ls/false$11408$sFNhI)
                (if (if g$ls/false$11408$sFNhI
                      (begin
                        '#f
                        (apply
                          (case-lambda
                            ((g$import$11409$sFNhI
                               g$imp*$11410$sFNhI
                               g$b*$11411$sFNhI)
                             (eq? (g$syntax->datum$8520$sFNhI
                                    g$import$11409$sFNhI)
                                  'import)))
                          g$ls/false$11408$sFNhI))
                      '#f)
                  (apply
                    (case-lambda
                      ((g$import$11412$sFNhI
                         g$imp*$11413$sFNhI
                         g$b*$11414$sFNhI)
                       (values g$imp*$11413$sFNhI g$b*$11414$sFNhI)))
                    g$ls/false$11408$sFNhI)
                  ((case-lambda
                     ((g$t$11415$sFNhI)
                      ((case-lambda
                         ((g$ls/false$11416$sFNhI)
                          (if (if g$ls/false$11416$sFNhI
                                (begin
                                  '#f
                                  (apply
                                    (case-lambda
                                      ((g$import$11417$sFNhI
                                         g$x$11418$sFNhI
                                         g$y$11419$sFNhI)
                                       (eq? (g$syntax->datum$8520$sFNhI
                                              g$import$11417$sFNhI)
                                            'import)))
                                    g$ls/false$11416$sFNhI))
                                '#f)
                            (apply
                              (case-lambda
                                ((g$import$11420$sFNhI
                                   g$x$11421$sFNhI
                                   g$y$11422$sFNhI)
                                 (g$syntax-violation$8517$sFNhI
                                   'expander
                                   '"invalid syntax of top-level program"
                                   (g$syntax-car$8123$sFNhI g$e*$11406$sFNhI))))
                              g$ls/false$11416$sFNhI)
                            ((case-lambda
                               ((g$t$11423$sFNhI)
                                ((case-lambda
                                   ((g$ls/false$11424$sFNhI)
                                    (if g$ls/false$11424$sFNhI
                                      (apply
                                        (case-lambda
                                          (()
                                           (assertion-violation
                                             'expander
                                             '"top-level program is missing an (import ---) clause")))
                                        g$ls/false$11424$sFNhI)
                                      (g$syntax-violation$8517$sFNhI
                                        '#f
                                        '"invalid syntax"
                                        g$t$11423$sFNhI))))
                                 (g$syntax-dispatch$8405$sFNhI
                                   g$t$11423$sFNhI
                                   '_))))
                             g$t$11415$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI
                         g$t$11415$sFNhI
                         '((any . any) . any)))))
                   g$t$11407$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI
               g$t$11407$sFNhI
               '((any . each-any) . each-any)))))
         g$e*$11406$sFNhI))))
   (g$top-level-expander$8465$sFNhI
     g$top-level-expander$11983$sFNhI
     (case-lambda
       ((g$e*$11425$sFNhI)
        (call-with-values
          (case-lambda
            (() (g$parse-top-level-program$8464$sFNhI g$e*$11425$sFNhI)))
          (case-lambda
            ((g$imp*$11428$sFNhI g$b*$11429$sFNhI)
             ((case-lambda
                ((g$b*$11430$sFNhI g$imp*$11431$sFNhI)
                 (call-with-values
                   (case-lambda
                     (()
                      (g$library-body-expander$8462$sFNhI
                        '()
                        '()
                        g$imp*$11431$sFNhI
                        g$b*$11430$sFNhI
                        '#t)))
                   (case-lambda
                     ((g$imp*$11439$sFNhI
                        g$invoke-req*$11440$sFNhI
                        g$visit-req*$11441$sFNhI
                        g$invoke-code$11442$sFNhI
                        g$visit-code$11443$sFNhI
                        g$export-subst$11444$sFNhI
                        g$export-env$11445$sFNhI)
                      ((case-lambda
                         ((g$export-env$11446$sFNhI
                            g$export-subst$11447$sFNhI
                            g$visit-code$11448$sFNhI
                            g$invoke-code$11449$sFNhI
                            g$visit-req*$11450$sFNhI
                            g$invoke-req*$11451$sFNhI
                            g$imp*$11452$sFNhI)
                          (values
                            g$invoke-req*$11451$sFNhI
                            g$invoke-code$11449$sFNhI)))
                       g$export-env$11445$sFNhI
                       g$export-subst$11444$sFNhI
                       g$visit-code$11443$sFNhI
                       g$invoke-code$11442$sFNhI
                       g$visit-req*$11441$sFNhI
                       g$invoke-req*$11440$sFNhI
                       g$imp*$11439$sFNhI))))))
              g$b*$11429$sFNhI
              g$imp*$11428$sFNhI)))))))
   (g$9427$8466$sFNhI
     g$9427$11984$sFNhI
     (make-record-type-descriptor
       'env
       '#f
       'g$9430$sFNhI
       '#t
       '#t
       '#((mutable names) (mutable labels) (mutable itc))))
   (g$9429$8467$sFNhI g$9429$11985$sFNhI '#f)
   (g$9428$8468$sFNhI
     g$9428$11986$sFNhI
     (make-record-constructor-descriptor
       g$9427$8466$sFNhI
       '#f
       g$9429$8467$sFNhI))
   (g$env?$8469$sFNhI
     g$env?$11987$sFNhI
     (record-predicate g$9427$8466$sFNhI))
   (g$make-env$8470$sFNhI
     g$make-env$11988$sFNhI
     (record-constructor g$9428$8468$sFNhI))
   (g$env-names$8471$sFNhI
     g$env-names$11989$sFNhI
     (record-accessor g$9427$8466$sFNhI '0))
   (g$env-labels$8472$sFNhI
     g$env-labels$11990$sFNhI
     (record-accessor g$9427$8466$sFNhI '1))
   (g$env-itc$8473$sFNhI
     g$env-itc$11991$sFNhI
     (record-accessor g$9427$8466$sFNhI '2))
   (g$set-env-names!$8474$sFNhI
     g$set-env-names!$11992$sFNhI
     (record-mutator g$9427$8466$sFNhI '0))
   (g$set-env-labels!$8475$sFNhI
     g$set-env-labels!$11993$sFNhI
     (record-mutator g$9427$8466$sFNhI '1))
   (g$set-env-itc!$8476$sFNhI
     g$set-env-itc!$11994$sFNhI
     (record-mutator g$9427$8466$sFNhI '2))
   (g$rp$8477$sFNhI
     g$rp$11995$sFNhI
     (make-record-printer
       'env
       (case-lambda
         ((g$x$11453$sFNhI g$p$11454$sFNhI g$wr$11455$sFNhI)
          (display '"#<environment>" g$p$11454$sFNhI)))))
   (g$9446$8478$sFNhI
     g$9446$11996$sFNhI
     (make-record-type-descriptor
       'interaction-env
       '#f
       'g$9449$sFNhI
       '#t
       '#t
       '#((mutable rib) (mutable r) (mutable locs))))
   (g$9448$8479$sFNhI g$9448$11997$sFNhI '#f)
   (g$9447$8480$sFNhI
     g$9447$11998$sFNhI
     (make-record-constructor-descriptor
       g$9446$8478$sFNhI
       '#f
       g$9448$8479$sFNhI))
   (g$interaction-env?$8481$sFNhI
     g$interaction-env?$11999$sFNhI
     (record-predicate g$9446$8478$sFNhI))
   (g$make-interaction-env$8482$sFNhI
     g$make-interaction-env$12000$sFNhI
     (record-constructor g$9447$8480$sFNhI))
   (g$interaction-env-rib$8483$sFNhI
     g$interaction-env-rib$12001$sFNhI
     (record-accessor g$9446$8478$sFNhI '0))
   (g$interaction-env-r$8484$sFNhI
     g$interaction-env-r$12002$sFNhI
     (record-accessor g$9446$8478$sFNhI '1))
   (g$interaction-env-locs$8485$sFNhI
     g$interaction-env-locs$12003$sFNhI
     (record-accessor g$9446$8478$sFNhI '2))
   (g$set-interaction-env-rib!$8486$sFNhI
     g$set-interaction-env-rib!$12004$sFNhI
     (record-mutator g$9446$8478$sFNhI '0))
   (g$set-interaction-env-r!$8487$sFNhI
     g$set-interaction-env-r!$12005$sFNhI
     (record-mutator g$9446$8478$sFNhI '1))
   (g$set-interaction-env-locs!$8488$sFNhI
     g$set-interaction-env-locs!$12006$sFNhI
     (record-mutator g$9446$8478$sFNhI '2))
   (g$rp$8489$sFNhI
     g$rp$12007$sFNhI
     (make-record-printer
       'interaction-env
       (case-lambda
         ((g$x$11456$sFNhI g$p$11457$sFNhI g$wr$11458$sFNhI)
          (display '"#<environment>" g$p$11457$sFNhI)))))
   (g$interaction-environment-symbols$8490$sFNhI
     g$interaction-environment-symbols$12008$sFNhI
     (case-lambda
       (()
        (g$environment-symbols$8494$sFNhI
          (g$interaction-environment$8524$sFNhI)))))
   (g$environment-bindings$8491$sFNhI
     g$environment-bindings$12009$sFNhI
     (case-lambda
       ((g$e$11459$sFNhI)
        (vector->list
          (g$vector-map$5705$sFNhI
            (case-lambda
              ((g$name$11460$sFNhI g$label$11461$sFNhI)
               (g$parse-binding$8492$sFNhI
                 (cons
                   g$name$11460$sFNhI
                   (g$imported-label->binding$7935$sFNhI
                     g$label$11461$sFNhI)))))
            (g$env-names$8471$sFNhI g$e$11459$sFNhI)
            (g$env-labels$8472$sFNhI g$e$11459$sFNhI))))))
   (g$parse-binding$8492$sFNhI
     g$parse-binding$12010$sFNhI
     (case-lambda
       ((g$b$11462$sFNhI)
        (cons
          (car g$b$11462$sFNhI)
          ((case-lambda
             ((g$t$11463$sFNhI)
              (if (g$memv$5150$sFNhI g$t$11463$sFNhI '(core-prim global))
                'procedure
                (if (g$memv$5150$sFNhI
                      g$t$11463$sFNhI
                      '(core-macro macro global-macro))
                  'syntax
                  (if (g$memv$5150$sFNhI g$t$11463$sFNhI '($core-rtd))
                    'record
                    (if (eq? (car g$b$11462$sFNhI)
                             (g$cadr$5654$sFNhI g$b$11462$sFNhI))
                      'syntax
                      'unknown))))))
           (g$cadr$5654$sFNhI g$b$11462$sFNhI))))))
   (g$environment?$8493$sFNhI
     g$environment?$12011$sFNhI
     (case-lambda
       ((g$x$11464$sFNhI)
        ((case-lambda
           ((g$t$11465$sFNhI)
            (if g$t$11465$sFNhI
              g$t$11465$sFNhI
              (begin '#f (g$interaction-env?$8481$sFNhI g$x$11464$sFNhI)))))
         (g$env?$8469$sFNhI g$x$11464$sFNhI)))))
   (g$environment-symbols$8494$sFNhI
     g$environment-symbols$12012$sFNhI
     (case-lambda
       ((g$x$11466$sFNhI)
        (if (g$env?$8469$sFNhI g$x$11466$sFNhI)
          (vector->list (g$env-names$8471$sFNhI g$x$11466$sFNhI))
          (if (g$interaction-env?$8481$sFNhI g$x$11466$sFNhI)
            (g$map$5157$sFNhI
              values
              (g$rib-sym*$8076$sFNhI
                (g$interaction-env-rib$8483$sFNhI g$x$11466$sFNhI)))
            (assertion-violation
              'environment-symbols
              '"not an environment"
              g$x$11466$sFNhI))))))
   (g$environment$8495$sFNhI
     g$environment$12013$sFNhI
     (case-lambda
       (g$imp*$11467$sFNhI
        ((case-lambda
           ((g$itc$11468$sFNhI)
            ((case-lambda
               ((g$imp-collector$11471$sFNhI g$imp-collector$11472$sFNhI)
                ((case-lambda
                   ((g$swap$11473$sFNhI)
                    (dynamic-wind
                      g$swap$11473$sFNhI
                      (case-lambda
                        (()
                         (call-with-values
                           (case-lambda
                             (()
                              (g$parse-import-spec*$8454$sFNhI
                                g$imp*$11467$sFNhI)))
                           (case-lambda
                             ((g$subst-names$11476$sFNhI
                                g$subst-labels$11477$sFNhI)
                              ((case-lambda
                                 ((g$subst-labels$11478$sFNhI
                                    g$subst-names$11479$sFNhI)
                                  (g$make-env$8470$sFNhI
                                    g$subst-names$11479$sFNhI
                                    g$subst-labels$11478$sFNhI
                                    g$itc$11468$sFNhI)))
                               g$subst-labels$11477$sFNhI
                               g$subst-names$11476$sFNhI))))))
                      g$swap$11473$sFNhI)))
                 (case-lambda
                   (()
                    ((case-lambda
                       ((g$t$11480$sFNhI)
                        (begin
                          (g$imp-collector$11471$sFNhI
                            g$imp-collector$11472$sFNhI)
                          (set! g$imp-collector$11472$sFNhI g$t$11480$sFNhI))))
                     (g$imp-collector$11471$sFNhI)))))))
             g$imp-collector$8459$sFNhI
             g$itc$11468$sFNhI)))
         (g$make-collector$8456$sFNhI)))))
   (g$null-environment$8496$sFNhI
     g$null-environment$12014$sFNhI
     (case-lambda
       ((g$n$11481$sFNhI)
        (begin
          (if (not (eqv? g$n$11481$sFNhI '5))
            (assertion-violation 'null-environment '"not 5" g$n$11481$sFNhI)
            (void))
          (g$environment$8495$sFNhI '(psyntax null-environment-5))))))
   (g$scheme-report-environment$8497$sFNhI
     g$scheme-report-environment$12015$sFNhI
     (case-lambda
       ((g$n$11482$sFNhI)
        (begin
          (if (not (eqv? g$n$11482$sFNhI '5))
            (assertion-violation
              'scheme-report-environment
              '"not 5"
              g$n$11482$sFNhI)
            (void))
          (g$environment$8495$sFNhI '(psyntax scheme-report-environment-5))))))
   (g$expand$8498$sFNhI
     g$expand$12016$sFNhI
     (case-lambda
       ((g$x$11483$sFNhI g$env$11484$sFNhI)
        (if (g$env?$8469$sFNhI g$env$11484$sFNhI)
          ((case-lambda
             ((g$rib$11485$sFNhI)
              ((case-lambda
                 ((g$x$11486$sFNhI
                    g$itc$11487$sFNhI
                    g$rtc$11488$sFNhI
                    g$vtc$11489$sFNhI)
                  ((case-lambda
                     ((g$x$11490$sFNhI)
                      (begin
                        (g$seal-rib!$8092$sFNhI g$rib$11485$sFNhI)
                        (values g$x$11490$sFNhI (g$rtc$11488$sFNhI)))))
                   ((case-lambda
                      ((g$top-level-context$11499$sFNhI
                         g$inv-collector$11500$sFNhI
                         g$vis-collector$11501$sFNhI
                         g$imp-collector$11502$sFNhI
                         g$top-level-context$11503$sFNhI
                         g$inv-collector$11504$sFNhI
                         g$vis-collector$11505$sFNhI
                         g$imp-collector$11506$sFNhI)
                       ((case-lambda
                          ((g$swap$11507$sFNhI)
                           (dynamic-wind
                             g$swap$11507$sFNhI
                             (case-lambda
                               (()
                                (g$chi-expr$8423$sFNhI
                                  g$x$11486$sFNhI
                                  '()
                                  '())))
                             g$swap$11507$sFNhI)))
                        (case-lambda
                          (()
                           (begin
                             ((case-lambda
                                ((g$t$11508$sFNhI)
                                 (begin
                                   (g$top-level-context$11499$sFNhI
                                     g$top-level-context$11503$sFNhI)
                                   (set! g$top-level-context$11503$sFNhI
                                     g$t$11508$sFNhI))))
                              (g$top-level-context$11499$sFNhI))
                             ((case-lambda
                                ((g$t$11509$sFNhI)
                                 (begin
                                   (g$inv-collector$11500$sFNhI
                                     g$inv-collector$11504$sFNhI)
                                   (set! g$inv-collector$11504$sFNhI
                                     g$t$11509$sFNhI))))
                              (g$inv-collector$11500$sFNhI))
                             ((case-lambda
                                ((g$t$11510$sFNhI)
                                 (begin
                                   (g$vis-collector$11501$sFNhI
                                     g$vis-collector$11505$sFNhI)
                                   (set! g$vis-collector$11505$sFNhI
                                     g$t$11510$sFNhI))))
                              (g$vis-collector$11501$sFNhI))
                             ((case-lambda
                                ((g$t$11511$sFNhI)
                                 (begin
                                   (g$imp-collector$11502$sFNhI
                                     g$imp-collector$11506$sFNhI)
                                   (set! g$imp-collector$11506$sFNhI
                                     g$t$11511$sFNhI))))
                              (g$imp-collector$11502$sFNhI))))))))
                    g$top-level-context$8525$sFNhI
                    g$inv-collector$8457$sFNhI
                    g$vis-collector$8458$sFNhI
                    g$imp-collector$8459$sFNhI
                    '#f
                    g$rtc$11488$sFNhI
                    g$vtc$11489$sFNhI
                    g$itc$11487$sFNhI))))
               (g$make-stx$8099$sFNhI
                 g$x$11483$sFNhI
                 g$top-mark*$8063$sFNhI
                 (list g$rib$11485$sFNhI)
                 '())
               (g$env-itc$8473$sFNhI g$env$11484$sFNhI)
               (g$make-collector$8456$sFNhI)
               (g$make-collector$8456$sFNhI))))
           (g$make-top-rib$8455$sFNhI
             (g$env-names$8471$sFNhI g$env$11484$sFNhI)
             (g$env-labels$8472$sFNhI g$env$11484$sFNhI)))
          (if (g$interaction-env?$8481$sFNhI g$env$11484$sFNhI)
            ((case-lambda
               ((g$rib$11512$sFNhI g$r$11513$sFNhI g$rtc$11514$sFNhI)
                ((case-lambda
                   ((g$x$11515$sFNhI)
                    (call-with-values
                      (case-lambda
                        (()
                         ((case-lambda
                            ((g$top-level-context$11526$sFNhI
                               g$inv-collector$11527$sFNhI
                               g$vis-collector$11528$sFNhI
                               g$imp-collector$11529$sFNhI
                               g$top-level-context$11530$sFNhI
                               g$inv-collector$11531$sFNhI
                               g$vis-collector$11532$sFNhI
                               g$imp-collector$11533$sFNhI)
                             ((case-lambda
                                ((g$swap$11534$sFNhI)
                                 (dynamic-wind
                                   g$swap$11534$sFNhI
                                   (case-lambda
                                     (()
                                      (g$chi-interaction-expr$8461$sFNhI
                                        g$x$11515$sFNhI
                                        g$rib$11512$sFNhI
                                        g$r$11513$sFNhI)))
                                   g$swap$11534$sFNhI)))
                              (case-lambda
                                (()
                                 (begin
                                   ((case-lambda
                                      ((g$t$11535$sFNhI)
                                       (begin
                                         (g$top-level-context$11526$sFNhI
                                           g$top-level-context$11530$sFNhI)
                                         (set! g$top-level-context$11530$sFNhI
                                           g$t$11535$sFNhI))))
                                    (g$top-level-context$11526$sFNhI))
                                   ((case-lambda
                                      ((g$t$11536$sFNhI)
                                       (begin
                                         (g$inv-collector$11527$sFNhI
                                           g$inv-collector$11531$sFNhI)
                                         (set! g$inv-collector$11531$sFNhI
                                           g$t$11536$sFNhI))))
                                    (g$inv-collector$11527$sFNhI))
                                   ((case-lambda
                                      ((g$t$11537$sFNhI)
                                       (begin
                                         (g$vis-collector$11528$sFNhI
                                           g$vis-collector$11532$sFNhI)
                                         (set! g$vis-collector$11532$sFNhI
                                           g$t$11537$sFNhI))))
                                    (g$vis-collector$11528$sFNhI))
                                   ((case-lambda
                                      ((g$t$11538$sFNhI)
                                       (begin
                                         (g$imp-collector$11529$sFNhI
                                           g$imp-collector$11533$sFNhI)
                                         (set! g$imp-collector$11533$sFNhI
                                           g$t$11538$sFNhI))))
                                    (g$imp-collector$11529$sFNhI))))))))
                          g$top-level-context$8525$sFNhI
                          g$inv-collector$8457$sFNhI
                          g$vis-collector$8458$sFNhI
                          g$imp-collector$8459$sFNhI
                          g$env$11484$sFNhI
                          g$rtc$11514$sFNhI
                          (g$make-collector$8456$sFNhI)
                          (g$make-collector$8456$sFNhI))))
                      (case-lambda
                        ((g$e$11539$sFNhI g$r^$11540$sFNhI)
                         ((case-lambda
                            ((g$r^$11541$sFNhI g$e$11542$sFNhI)
                             (begin
                               (g$set-interaction-env-r!$8487$sFNhI
                                 g$env$11484$sFNhI
                                 g$r^$11541$sFNhI)
                               (values g$e$11542$sFNhI (g$rtc$11514$sFNhI)))))
                          g$r^$11540$sFNhI
                          g$e$11539$sFNhI))))))
                 (g$make-stx$8099$sFNhI
                   g$x$11483$sFNhI
                   g$top-mark*$8063$sFNhI
                   (list g$rib$11512$sFNhI)
                   '()))))
             (g$interaction-env-rib$8483$sFNhI g$env$11484$sFNhI)
             (g$interaction-env-r$8484$sFNhI g$env$11484$sFNhI)
             (g$make-collector$8456$sFNhI))
            (assertion-violation
              'expand
              '"not an environment"
              g$env$11484$sFNhI))))))
   (g$eval$8499$sFNhI
     g$eval$12017$sFNhI
     (case-lambda
       ((g$x$11543$sFNhI g$env$11544$sFNhI)
        (begin
          (if (not (g$environment?$8493$sFNhI g$env$11544$sFNhI))
            (error 'eval '"not an environment" g$env$11544$sFNhI)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8498$sFNhI g$x$11543$sFNhI g$env$11544$sFNhI)))
            (case-lambda
              ((g$x$11547$sFNhI g$invoke-req*$11548$sFNhI)
               ((case-lambda
                  ((g$invoke-req*$11549$sFNhI g$x$11550$sFNhI)
                   (begin
                     (g$for-each$5158$sFNhI
                       g$invoke-library$7936$sFNhI
                       g$invoke-req*$11549$sFNhI)
                     (eval-core
                       (g$expanded->core$7674$sFNhI g$x$11550$sFNhI)))))
                g$invoke-req*$11548$sFNhI
                g$x$11547$sFNhI))))))))
   (g$expand->core$8500$sFNhI
     g$expand->core$12018$sFNhI
     (case-lambda
       ((g$x$11551$sFNhI g$env$11552$sFNhI)
        (begin
          (if (not (g$environment?$8493$sFNhI g$env$11552$sFNhI))
            (error 'eval '"not an environment" g$env$11552$sFNhI)
            (void))
          (call-with-values
            (case-lambda
              (() (g$expand$8498$sFNhI g$x$11551$sFNhI g$env$11552$sFNhI)))
            (case-lambda
              ((g$x$11555$sFNhI g$invoke-req*$11556$sFNhI)
               ((case-lambda
                  ((g$invoke-req*$11557$sFNhI g$x$11558$sFNhI)
                   (begin
                     (g$for-each$5158$sFNhI
                       g$invoke-library$7936$sFNhI
                       g$invoke-req*$11557$sFNhI)
                     (g$expanded->core$7674$sFNhI g$x$11558$sFNhI))))
                g$invoke-req*$11556$sFNhI
                g$x$11555$sFNhI))))))))
   (g$library-expander$8501$sFNhI
     g$library-expander$12019$sFNhI
     (case-lambda
       ((g$x$11559$sFNhI g$filename$11560$sFNhI g$verify-name$11561$sFNhI)
        (letrec* ((g$build-visit-code$11562$sFNhI
                    (case-lambda
                      ((g$macro*$11605$sFNhI)
                       (if (null? g$macro*$11605$sFNhI)
                         (g$build-void$8056$sFNhI)
                         (g$build-sequence$8055$sFNhI
                           '#f
                           (g$map$5157$sFNhI
                             (case-lambda
                               ((g$x$11606$sFNhI)
                                ((case-lambda
                                   ((g$loc$11607$sFNhI g$src$11608$sFNhI)
                                    (list
                                      'set!
                                      g$loc$11607$sFNhI
                                      g$src$11608$sFNhI)))
                                 (car g$x$11606$sFNhI)
                                 (g$cddr$5656$sFNhI g$x$11606$sFNhI))))
                             g$macro*$11605$sFNhI))))))
                  (g$visit!$11563$sFNhI
                    (case-lambda
                      ((g$macro*$11601$sFNhI)
                       (g$for-each$5158$sFNhI
                         (case-lambda
                           ((g$x$11602$sFNhI)
                            ((case-lambda
                               ((g$loc$11603$sFNhI g$proc$11604$sFNhI)
                                (set-symbol-value!
                                  g$loc$11603$sFNhI
                                  g$proc$11604$sFNhI)))
                             (car g$x$11602$sFNhI)
                             (g$cadr$5654$sFNhI g$x$11602$sFNhI))))
                         g$macro*$11601$sFNhI)))))
          (call-with-values
            (case-lambda
              (()
               (g$core-library-expander$8463$sFNhI
                 g$x$11559$sFNhI
                 g$verify-name$11561$sFNhI)))
            (case-lambda
              ((g$name$11573$sFNhI
                 g$ver$11574$sFNhI
                 g$imp*$11575$sFNhI
                 g$inv*$11576$sFNhI
                 g$vis*$11577$sFNhI
                 g$invoke-code$11578$sFNhI
                 g$macro*$11579$sFNhI
                 g$export-subst$11580$sFNhI
                 g$export-env$11581$sFNhI)
               ((case-lambda
                  ((g$export-env$11582$sFNhI
                     g$export-subst$11583$sFNhI
                     g$macro*$11584$sFNhI
                     g$invoke-code$11585$sFNhI
                     g$vis*$11586$sFNhI
                     g$inv*$11587$sFNhI
                     g$imp*$11588$sFNhI
                     g$ver$11589$sFNhI
                     g$name$11590$sFNhI)
                   ((case-lambda
                      ((g$id$11591$sFNhI
                         g$name$11592$sFNhI
                         g$ver$11593$sFNhI
                         g$imp*$11594$sFNhI
                         g$vis*$11595$sFNhI
                         g$inv*$11596$sFNhI
                         g$visit-proc$11597$sFNhI
                         g$invoke-proc$11598$sFNhI
                         g$visit-code$11599$sFNhI
                         g$invoke-code$11600$sFNhI)
                       (begin
                         (g$install-library$7934$sFNhI
                           g$id$11591$sFNhI
                           g$name$11592$sFNhI
                           g$ver$11593$sFNhI
                           g$imp*$11594$sFNhI
                           g$vis*$11595$sFNhI
                           g$inv*$11596$sFNhI
                           g$export-subst$11583$sFNhI
                           g$export-env$11582$sFNhI
                           g$visit-proc$11597$sFNhI
                           g$invoke-proc$11598$sFNhI
                           g$visit-code$11599$sFNhI
                           g$invoke-code$11600$sFNhI
                           '#t
                           g$filename$11560$sFNhI)
                         (values
                           g$id$11591$sFNhI
                           g$name$11592$sFNhI
                           g$ver$11593$sFNhI
                           g$imp*$11594$sFNhI
                           g$vis*$11595$sFNhI
                           g$inv*$11596$sFNhI
                           g$invoke-code$11600$sFNhI
                           g$visit-code$11599$sFNhI
                           g$export-subst$11583$sFNhI
                           g$export-env$11582$sFNhI))))
                    (gensym)
                    g$name$11590$sFNhI
                    g$ver$11589$sFNhI
                    (g$map$5157$sFNhI
                      g$library-spec$7940$sFNhI
                      g$imp*$11588$sFNhI)
                    (g$map$5157$sFNhI
                      g$library-spec$7940$sFNhI
                      g$vis*$11586$sFNhI)
                    (g$map$5157$sFNhI
                      g$library-spec$7940$sFNhI
                      g$inv*$11587$sFNhI)
                    (case-lambda
                      (() (g$visit!$11563$sFNhI g$macro*$11584$sFNhI)))
                    (case-lambda
                      (()
                       (eval-core
                         (g$expanded->core$7674$sFNhI
                           g$invoke-code$11585$sFNhI))))
                    (g$build-visit-code$11562$sFNhI g$macro*$11584$sFNhI)
                    g$invoke-code$11585$sFNhI)))
                g$export-env$11581$sFNhI
                g$export-subst$11580$sFNhI
                g$macro*$11579$sFNhI
                g$invoke-code$11578$sFNhI
                g$vis*$11577$sFNhI
                g$inv*$11576$sFNhI
                g$imp*$11575$sFNhI
                g$ver$11574$sFNhI
                g$name$11573$sFNhI))))))
       ((g$x$11609$sFNhI g$filename$11610$sFNhI)
        (g$library-expander$8501$sFNhI
          g$x$11609$sFNhI
          g$filename$11610$sFNhI
          (case-lambda ((g$x$11611$sFNhI) (values)))))
       ((g$x$11612$sFNhI)
        (g$library-expander$8501$sFNhI
          g$x$11612$sFNhI
          '#f
          (case-lambda ((g$x$11613$sFNhI) (values)))))))
   (g$boot-library-expand$8502$sFNhI
     g$boot-library-expand$12020$sFNhI
     (case-lambda
       ((g$x$11614$sFNhI)
        (call-with-values
          (case-lambda (() (g$library-expander$8501$sFNhI g$x$11614$sFNhI)))
          (case-lambda
            ((g$id$11625$sFNhI
               g$name$11626$sFNhI
               g$ver$11627$sFNhI
               g$imp*$11628$sFNhI
               g$vis*$11629$sFNhI
               g$inv*$11630$sFNhI
               g$invoke-code$11631$sFNhI
               g$visit-code$11632$sFNhI
               g$export-subst$11633$sFNhI
               g$export-env$11634$sFNhI)
             ((case-lambda
                ((g$export-env$11635$sFNhI
                   g$export-subst$11636$sFNhI
                   g$visit-code$11637$sFNhI
                   g$invoke-code$11638$sFNhI
                   g$inv*$11639$sFNhI
                   g$vis*$11640$sFNhI
                   g$imp*$11641$sFNhI
                   g$ver$11642$sFNhI
                   g$name$11643$sFNhI
                   g$id$11644$sFNhI)
                 (values
                   g$name$11643$sFNhI
                   g$invoke-code$11638$sFNhI
                   g$export-subst$11636$sFNhI
                   g$export-env$11635$sFNhI)))
              g$export-env$11634$sFNhI
              g$export-subst$11633$sFNhI
              g$visit-code$11632$sFNhI
              g$invoke-code$11631$sFNhI
              g$inv*$11630$sFNhI
              g$vis*$11629$sFNhI
              g$imp*$11628$sFNhI
              g$ver$11627$sFNhI
              g$name$11626$sFNhI
              g$id$11625$sFNhI)))))))
   (g$rev-map-append$8503$sFNhI
     g$rev-map-append$12021$sFNhI
     (case-lambda
       ((g$f$11645$sFNhI g$ls$11646$sFNhI g$ac$11647$sFNhI)
        (if (null? g$ls$11646$sFNhI)
          g$ac$11647$sFNhI
          (g$rev-map-append$8503$sFNhI
            g$f$11645$sFNhI
            (cdr g$ls$11646$sFNhI)
            (cons
              (g$f$11645$sFNhI (car g$ls$11646$sFNhI))
              g$ac$11647$sFNhI))))))
   (g$build-exports$8504$sFNhI
     g$build-exports$12022$sFNhI
     (case-lambda
       ((g$lex*+loc*$11648$sFNhI g$init*$11649$sFNhI)
        (g$build-sequence$8055$sFNhI
          '#f
          (cons
            (g$build-void$8056$sFNhI)
            (g$rev-map-append$8503$sFNhI
              (case-lambda
                ((g$x$11650$sFNhI)
                 (list 'set! (cdr g$x$11650$sFNhI) (car g$x$11650$sFNhI))))
              g$lex*+loc*$11648$sFNhI
              g$init*$11649$sFNhI))))))
   (g$make-export-subst$8505$sFNhI
     g$make-export-subst$12023$sFNhI
     (case-lambda
       ((g$name*$11651$sFNhI g$id*$11652$sFNhI)
        (g$map$5157$sFNhI
          (case-lambda
            ((g$name$11653$sFNhI g$id$11654$sFNhI)
             ((case-lambda
                ((g$label$11655$sFNhI)
                 (begin
                   (if (not g$label$11655$sFNhI)
                     (g$syntax-violation$8517$sFNhI
                       '#f
                       '"cannot export unbound identifier"
                       g$id$11654$sFNhI)
                     (void))
                   (cons g$name$11653$sFNhI g$label$11655$sFNhI))))
              (g$id->label$8139$sFNhI g$id$11654$sFNhI))))
          g$name*$11651$sFNhI
          g$id*$11652$sFNhI))))
   (g$make-export-env/macros$8506$sFNhI
     g$make-export-env/macros$12024$sFNhI
     (case-lambda
       ((g$lex*$11656$sFNhI g$loc*$11657$sFNhI g$r$11658$sFNhI)
        (letrec* ((g$lookup$11659$sFNhI
                    (case-lambda
                      ((g$x$11675$sFNhI)
                       ((letrec ((g$f$11676$sFNhI
                                   (case-lambda
                                     ((g$x$11677$sFNhI
                                        g$lex*$11678$sFNhI
                                        g$loc*$11679$sFNhI)
                                      (if (pair? g$lex*$11678$sFNhI)
                                        (if (eq? g$x$11677$sFNhI
                                                 (car g$lex*$11678$sFNhI))
                                          (car g$loc*$11679$sFNhI)
                                          (g$f$11676$sFNhI
                                            g$x$11677$sFNhI
                                            (cdr g$lex*$11678$sFNhI)
                                            (cdr g$loc*$11679$sFNhI)))
                                        (assertion-violation
                                          'lookup-make-export
                                          '"BUG"))))))
                          g$f$11676$sFNhI)
                        g$x$11675$sFNhI
                        g$lex*$11656$sFNhI
                        g$loc*$11657$sFNhI)))))
          ((letrec ((g$f$11660$sFNhI
                      (case-lambda
                        ((g$r$11661$sFNhI
                           g$env$11662$sFNhI
                           g$global*$11663$sFNhI
                           g$macro*$11664$sFNhI)
                         (if (null? g$r$11661$sFNhI)
                           (values
                             g$env$11662$sFNhI
                             g$global*$11663$sFNhI
                             g$macro*$11664$sFNhI)
                           ((case-lambda
                              ((g$x$11665$sFNhI)
                               ((case-lambda
                                  ((g$label$11666$sFNhI g$b$11667$sFNhI)
                                   ((case-lambda
                                      ((g$t$11668$sFNhI)
                                       (if (g$memv$5150$sFNhI
                                             g$t$11668$sFNhI
                                             '(lexical))
                                         ((case-lambda
                                            ((g$v$11669$sFNhI)
                                             ((case-lambda
                                                ((g$loc$11670$sFNhI
                                                   g$type$11671$sFNhI)
                                                 (g$f$11660$sFNhI
                                                   (cdr g$r$11661$sFNhI)
                                                   (cons
                                                     (g$cons*$5159$sFNhI
                                                       g$label$11666$sFNhI
                                                       g$type$11671$sFNhI
                                                       g$loc$11670$sFNhI)
                                                     g$env$11662$sFNhI)
                                                   (cons
                                                     (cons
                                                       (g$lexical-var$8349$sFNhI
                                                         g$v$11669$sFNhI)
                                                       g$loc$11670$sFNhI)
                                                     g$global*$11663$sFNhI)
                                                   g$macro*$11664$sFNhI)))
                                              (g$lookup$11659$sFNhI
                                                (g$lexical-var$8349$sFNhI
                                                  g$v$11669$sFNhI))
                                              (if (g$lexical-mutable?$8350$sFNhI
                                                    g$v$11669$sFNhI)
                                                'mutable
                                                'global))))
                                          (g$binding-value$8144$sFNhI
                                            g$b$11667$sFNhI))
                                         (if (g$memv$5150$sFNhI
                                               g$t$11668$sFNhI
                                               '(local-macro))
                                           ((case-lambda
                                              ((g$loc$11672$sFNhI)
                                               (g$f$11660$sFNhI
                                                 (cdr g$r$11661$sFNhI)
                                                 (cons
                                                   (g$cons*$5159$sFNhI
                                                     g$label$11666$sFNhI
                                                     'global-macro
                                                     g$loc$11672$sFNhI)
                                                   g$env$11662$sFNhI)
                                                 g$global*$11663$sFNhI
                                                 (cons
                                                   (cons
                                                     g$loc$11672$sFNhI
                                                     (g$binding-value$8144$sFNhI
                                                       g$b$11667$sFNhI))
                                                   g$macro*$11664$sFNhI))))
                                            (gensym))
                                           (if (g$memv$5150$sFNhI
                                                 g$t$11668$sFNhI
                                                 '(local-macro!))
                                             ((case-lambda
                                                ((g$loc$11673$sFNhI)
                                                 (g$f$11660$sFNhI
                                                   (cdr g$r$11661$sFNhI)
                                                   (cons
                                                     (g$cons*$5159$sFNhI
                                                       g$label$11666$sFNhI
                                                       'global-macro!
                                                       g$loc$11673$sFNhI)
                                                     g$env$11662$sFNhI)
                                                   g$global*$11663$sFNhI
                                                   (cons
                                                     (cons
                                                       g$loc$11673$sFNhI
                                                       (g$binding-value$8144$sFNhI
                                                         g$b$11667$sFNhI))
                                                     g$macro*$11664$sFNhI))))
                                              (gensym))
                                             (if (g$memv$5150$sFNhI
                                                   g$t$11668$sFNhI
                                                   '(local-ctv))
                                               ((case-lambda
                                                  ((g$loc$11674$sFNhI)
                                                   (g$f$11660$sFNhI
                                                     (cdr g$r$11661$sFNhI)
                                                     (cons
                                                       (g$cons*$5159$sFNhI
                                                         g$label$11666$sFNhI
                                                         'global-ctv
                                                         g$loc$11674$sFNhI)
                                                       g$env$11662$sFNhI)
                                                     g$global*$11663$sFNhI
                                                     (cons
                                                       (cons
                                                         g$loc$11674$sFNhI
                                                         (g$binding-value$8144$sFNhI
                                                           g$b$11667$sFNhI))
                                                       g$macro*$11664$sFNhI))))
                                                (gensym))
                                               (if (g$memv$5150$sFNhI
                                                     g$t$11668$sFNhI
                                                     '($rtd $module))
                                                 (g$f$11660$sFNhI
                                                   (cdr g$r$11661$sFNhI)
                                                   (cons
                                                     g$x$11665$sFNhI
                                                     g$env$11662$sFNhI)
                                                   g$global*$11663$sFNhI
                                                   g$macro*$11664$sFNhI)
                                                 (assertion-violation
                                                   'expander
                                                   '"BUG: do not know how to export"
                                                   (g$binding-type$8143$sFNhI
                                                     g$b$11667$sFNhI)
                                                   (g$binding-value$8144$sFNhI
                                                     g$b$11667$sFNhI)))))))))
                                    (g$binding-type$8143$sFNhI
                                      g$b$11667$sFNhI))))
                                (car g$x$11665$sFNhI)
                                (cdr g$x$11665$sFNhI))))
                            (car g$r$11661$sFNhI)))))))
             g$f$11660$sFNhI)
           g$r$11658$sFNhI
           '()
           '()
           '())))))
   (g$generate-temporaries$8507$sFNhI
     g$generate-temporaries$12025$sFNhI
     (case-lambda
       ((g$ls$11680$sFNhI)
        ((case-lambda
           ((g$t$11681$sFNhI)
            ((case-lambda
               ((g$ls/false$11682$sFNhI)
                (if g$ls/false$11682$sFNhI
                  (apply
                    (case-lambda
                      ((g$ls$11683$sFNhI)
                       (g$map$5157$sFNhI
                         (case-lambda
                           ((g$x$11684$sFNhI)
                            (g$make-stx$8099$sFNhI
                              ((case-lambda
                                 ((g$x$11685$sFNhI)
                                  (if ((case-lambda
                                         ((g$t$11686$sFNhI)
                                          (if g$t$11686$sFNhI
                                            g$t$11686$sFNhI
                                            (begin
                                              '#f
                                              (string? g$x$11685$sFNhI)))))
                                       (g$symbol?$5645$sFNhI g$x$11685$sFNhI))
                                    (gensym g$x$11685$sFNhI)
                                    (gensym 't))))
                               (g$syntax->datum$8520$sFNhI g$x$11684$sFNhI))
                              g$top-mark*$8063$sFNhI
                              '()
                              '())))
                         g$ls$11683$sFNhI)))
                    g$ls/false$11682$sFNhI)
                  ((case-lambda
                     ((g$t$11687$sFNhI)
                      ((case-lambda
                         ((g$ls/false$11688$sFNhI)
                          (if g$ls/false$11688$sFNhI
                            (apply
                              (case-lambda
                                (()
                                 (assertion-violation
                                   'generate-temporaries
                                   '"not a list")))
                              g$ls/false$11688$sFNhI)
                            (g$syntax-violation$8517$sFNhI
                              '#f
                              '"invalid syntax"
                              g$t$11687$sFNhI))))
                       (g$syntax-dispatch$8405$sFNhI g$t$11687$sFNhI '_))))
                   g$t$11681$sFNhI))))
             (g$syntax-dispatch$8405$sFNhI g$t$11681$sFNhI 'each-any))))
         g$ls$11680$sFNhI))))
   (g$free-identifier=?$8508$sFNhI
     g$free-identifier=?$12026$sFNhI
     (case-lambda
       ((g$x$11689$sFNhI g$y$11690$sFNhI)
        (if (g$id?$8126$sFNhI g$x$11689$sFNhI)
          (if (g$id?$8126$sFNhI g$y$11690$sFNhI)
            (g$free-id=?$8130$sFNhI g$x$11689$sFNhI g$y$11690$sFNhI)
            (assertion-violation
              'free-identifier=?
              '"not an identifier"
              g$y$11690$sFNhI))
          (assertion-violation
            'free-identifier=?
            '"not an identifier"
            g$x$11689$sFNhI)))))
   (g$bound-identifier=?$8509$sFNhI
     g$bound-identifier=?$12027$sFNhI
     (case-lambda
       ((g$x$11691$sFNhI g$y$11692$sFNhI)
        (if (g$id?$8126$sFNhI g$x$11691$sFNhI)
          (if (g$id?$8126$sFNhI g$y$11692$sFNhI)
            (g$bound-id=?$8129$sFNhI g$x$11691$sFNhI g$y$11692$sFNhI)
            (assertion-violation
              'bound-identifier=?
              '"not an identifier"
              g$y$11692$sFNhI))
          (assertion-violation
            'bound-identifier=?
            '"not an identifier"
            g$x$11691$sFNhI)))))
   (g$make-source-condition$8510$sFNhI
     g$make-source-condition$12028$sFNhI
     (case-lambda
       ((g$x$11693$sFNhI)
        (letrec* ((g$12396$11694$sFNhI
                    (make-record-type-descriptor
                      '&source-information
                      &condition-rtd
                      'g$12399$sFNhI
                      '#f
                      '#f
                      '#((immutable file-name) (immutable character))))
                  (g$12398$11695$sFNhI '#f)
                  (g$12397$11696$sFNhI
                    (make-record-constructor-descriptor
                      g$12396$11694$sFNhI
                      &condition-rcd
                      g$12398$11695$sFNhI))
                  (g$12395$11697$sFNhI (record-predicate g$12396$11694$sFNhI))
                  (g$make-source-condition$11698$sFNhI
                    (record-constructor g$12397$11696$sFNhI))
                  (g$12393$11699$sFNhI (record-accessor g$12396$11694$sFNhI '0))
                  (g$12394$11700$sFNhI (record-accessor g$12396$11694$sFNhI '1))
                  (g$source-condition?$11701$sFNhI
                    (condition-predicate g$12396$11694$sFNhI))
                  (g$source-filename$11702$sFNhI
                    (condition-accessor
                      g$12396$11694$sFNhI
                      g$12393$11699$sFNhI))
                  (g$source-character$11703$sFNhI
                    (condition-accessor
                      g$12396$11694$sFNhI
                      g$12394$11700$sFNhI)))
          (if (pair? g$x$11693$sFNhI)
            (g$make-source-condition$11698$sFNhI
              (car g$x$11693$sFNhI)
              (cdr g$x$11693$sFNhI))
            (condition))))))
   (g$extract-position-condition$8511$sFNhI
     g$extract-position-condition$12029$sFNhI
     (case-lambda
       ((g$x$11704$sFNhI)
        (g$make-source-condition$8510$sFNhI
          (g$expression-position$8512$sFNhI g$x$11704$sFNhI)))))
   (g$expression-position$8512$sFNhI
     g$expression-position$12030$sFNhI
     (case-lambda
       ((g$x$11705$sFNhI)
        (if (g$stx?$8098$sFNhI g$x$11705$sFNhI)
          (begin
            '#f
            ((case-lambda
               ((g$x$11706$sFNhI)
                (if (annotation? g$x$11706$sFNhI)
                  (begin '#f (annotation-source g$x$11706$sFNhI))
                  '#f)))
             (g$stx-expr$8100$sFNhI g$x$11705$sFNhI)))
          '#f))))
   (g$assertion-error$8513$sFNhI
     g$assertion-error$12031$sFNhI
     (case-lambda
       ((g$expr$11707$sFNhI g$pos$11708$sFNhI)
        (raise
          (condition
            (g$make-assertion-violation$6043$sFNhI)
            (g$make-who-condition$6057$sFNhI 'assert)
            (g$make-message-condition$6011$sFNhI '"assertion failed")
            (g$make-irritants-condition$6049$sFNhI (list g$expr$11707$sFNhI))
            (g$make-source-condition$8510$sFNhI g$pos$11708$sFNhI))))))
   (g$syntax-error$8514$sFNhI
     g$syntax-error$12032$sFNhI
     (case-lambda
       ((g$x$11709$sFNhI . g$args$11710$sFNhI)
        (begin
          (if (not (g$for-all$5155$sFNhI string? g$args$11710$sFNhI))
            (assertion-violation
              'syntax-error
              '"invalid argument"
              g$args$11710$sFNhI)
            (void))
          (raise
            (condition
              (g$make-message-condition$6011$sFNhI
                (if (null? g$args$11710$sFNhI)
                  '"invalid syntax"
                  (apply string-append g$args$11710$sFNhI)))
              (g$make-syntax-violation$6083$sFNhI
                (g$syntax->datum$8520$sFNhI g$x$11709$sFNhI)
                '#f)
              (g$extract-position-condition$8511$sFNhI g$x$11709$sFNhI)
              (g$extract-trace$8515$sFNhI g$x$11709$sFNhI)))))))
   (g$extract-trace$8515$sFNhI
     g$extract-trace$12033$sFNhI
     (case-lambda
       ((g$x$11711$sFNhI)
        (letrec* ((g$12423$11712$sFNhI
                    (make-record-type-descriptor
                      '&trace
                      &condition-rtd
                      'g$12426$sFNhI
                      '#f
                      '#f
                      '#((immutable form))))
                  (g$12425$11713$sFNhI '#f)
                  (g$12424$11714$sFNhI
                    (make-record-constructor-descriptor
                      g$12423$11712$sFNhI
                      &condition-rcd
                      g$12425$11713$sFNhI))
                  (g$12422$11715$sFNhI (record-predicate g$12423$11712$sFNhI))
                  (g$make-trace$11716$sFNhI
                    (record-constructor g$12424$11714$sFNhI))
                  (g$12421$11717$sFNhI (record-accessor g$12423$11712$sFNhI '0))
                  (g$trace?$11718$sFNhI
                    (condition-predicate g$12423$11712$sFNhI))
                  (g$trace-form$11719$sFNhI
                    (condition-accessor
                      g$12423$11712$sFNhI
                      g$12421$11717$sFNhI)))
          ((letrec ((g$f$11720$sFNhI
                      (case-lambda
                        ((g$x$11721$sFNhI)
                         (if (g$stx?$8098$sFNhI g$x$11721$sFNhI)
                           (apply
                             condition
                             (g$make-trace$11716$sFNhI g$x$11721$sFNhI)
                             (g$map$5157$sFNhI
                               g$f$11720$sFNhI
                               (g$stx-ae*$8103$sFNhI g$x$11721$sFNhI)))
                           (if (annotation? g$x$11721$sFNhI)
                             (g$make-trace$11716$sFNhI
                               (g$make-stx$8099$sFNhI
                                 g$x$11721$sFNhI
                                 '()
                                 '()
                                 '()))
                             (condition)))))))
             g$f$11720$sFNhI)
           g$x$11711$sFNhI)))))
   (g$syntax-violation*$8516$sFNhI
     g$syntax-violation*$12034$sFNhI
     (case-lambda
       ((g$who$11722$sFNhI
          g$msg$11723$sFNhI
          g$form$11724$sFNhI
          g$condition-object$11725$sFNhI)
        (begin
          (if (not (string? g$msg$11723$sFNhI))
            (assertion-violation
              'syntax-violation
              '"message is not a string"
              g$msg$11723$sFNhI)
            (void))
          ((case-lambda
             ((g$who$11726$sFNhI)
              (raise
                (condition
                  (if g$who$11726$sFNhI
                    (g$make-who-condition$6057$sFNhI g$who$11726$sFNhI)
                    (condition))
                  (g$make-message-condition$6011$sFNhI g$msg$11723$sFNhI)
                  g$condition-object$11725$sFNhI
                  (g$extract-position-condition$8511$sFNhI g$form$11724$sFNhI)
                  (g$extract-trace$8515$sFNhI g$form$11724$sFNhI)))))
           (if ((case-lambda
                  ((g$t$11727$sFNhI)
                   (if g$t$11727$sFNhI
                     g$t$11727$sFNhI
                     (begin '#f (g$symbol?$5645$sFNhI g$who$11722$sFNhI)))))
                (string? g$who$11722$sFNhI))
             g$who$11722$sFNhI
             (if (not g$who$11722$sFNhI)
               ((case-lambda
                  ((g$t$11728$sFNhI)
                   ((case-lambda
                      ((g$ls/false$11729$sFNhI)
                       (if (if g$ls/false$11729$sFNhI
                             (begin
                               '#f
                               (apply
                                 (case-lambda
                                   ((g$id$11730$sFNhI)
                                    (g$id?$8126$sFNhI g$id$11730$sFNhI)))
                                 g$ls/false$11729$sFNhI))
                             '#f)
                         (apply
                           (case-lambda
                             ((g$id$11731$sFNhI)
                              (g$syntax->datum$8520$sFNhI g$id$11731$sFNhI)))
                           g$ls/false$11729$sFNhI)
                         ((case-lambda
                            ((g$t$11732$sFNhI)
                             ((case-lambda
                                ((g$ls/false$11733$sFNhI)
                                 (if (if g$ls/false$11733$sFNhI
                                       (begin
                                         '#f
                                         (apply
                                           (case-lambda
                                             ((g$id$11734$sFNhI
                                                g$rest$11735$sFNhI)
                                              (g$id?$8126$sFNhI
                                                g$id$11734$sFNhI)))
                                           g$ls/false$11733$sFNhI))
                                       '#f)
                                   (apply
                                     (case-lambda
                                       ((g$id$11736$sFNhI g$rest$11737$sFNhI)
                                        (g$syntax->datum$8520$sFNhI
                                          g$id$11736$sFNhI)))
                                     g$ls/false$11733$sFNhI)
                                   ((case-lambda
                                      ((g$t$11738$sFNhI)
                                       ((case-lambda
                                          ((g$ls/false$11739$sFNhI)
                                           (if g$ls/false$11739$sFNhI
                                             (apply
                                               (case-lambda (() '#f))
                                               g$ls/false$11739$sFNhI)
                                             (g$syntax-violation$8517$sFNhI
                                               '#f
                                               '"invalid syntax"
                                               g$t$11738$sFNhI))))
                                        (g$syntax-dispatch$8405$sFNhI
                                          g$t$11738$sFNhI
                                          '_))))
                                    g$t$11732$sFNhI))))
                              (g$syntax-dispatch$8405$sFNhI
                                g$t$11732$sFNhI
                                '(any . any)))))
                          g$t$11728$sFNhI))))
                    (g$syntax-dispatch$8405$sFNhI g$t$11728$sFNhI 'any))))
                g$form$11724$sFNhI)
               (assertion-violation
                 'syntax-violation
                 '"invalid who argument"
                 g$who$11722$sFNhI))))))))
   (g$syntax-violation$8517$sFNhI
     g$syntax-violation$12035$sFNhI
     (case-lambda
       ((g$who$11740$sFNhI g$msg$11741$sFNhI g$form$11742$sFNhI)
        (g$syntax-violation$8517$sFNhI
          g$who$11740$sFNhI
          g$msg$11741$sFNhI
          g$form$11742$sFNhI
          '#f))
       ((g$who$11743$sFNhI
          g$msg$11744$sFNhI
          g$form$11745$sFNhI
          g$subform$11746$sFNhI)
        (g$syntax-violation*$8516$sFNhI
          g$who$11743$sFNhI
          g$msg$11744$sFNhI
          g$form$11745$sFNhI
          (g$make-syntax-violation$6083$sFNhI
            (g$syntax->datum$8520$sFNhI g$form$11745$sFNhI)
            (g$syntax->datum$8520$sFNhI g$subform$11746$sFNhI))))))
   (g$identifier?$8518$sFNhI
     g$identifier?$12036$sFNhI
     (case-lambda ((g$x$11747$sFNhI) (g$id?$8126$sFNhI g$x$11747$sFNhI))))
   (g$datum->syntax$8519$sFNhI
     g$datum->syntax$12037$sFNhI
     (case-lambda
       ((g$id$11748$sFNhI g$datum$11749$sFNhI)
        (if (g$id?$8126$sFNhI g$id$11748$sFNhI)
          (g$datum->stx$8109$sFNhI g$id$11748$sFNhI g$datum$11749$sFNhI)
          (assertion-violation
            'datum->syntax
            '"not an identifier"
            g$id$11748$sFNhI)))))
   (g$syntax->datum$8520$sFNhI
     g$syntax->datum$12038$sFNhI
     (case-lambda
       ((g$x$11750$sFNhI) (g$stx->datum$8137$sFNhI g$x$11750$sFNhI))))
   (g$compile-r6rs-top-level$8521$sFNhI
     g$compile-r6rs-top-level$12039$sFNhI
     (case-lambda
       ((g$x*$11751$sFNhI)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8465$sFNhI g$x*$11751$sFNhI)))
          (case-lambda
            ((g$lib*$11754$sFNhI g$invoke-code$11755$sFNhI)
             ((case-lambda
                ((g$invoke-code$11756$sFNhI g$lib*$11757$sFNhI)
                 (case-lambda
                   (()
                    (begin
                      (g$for-each$5158$sFNhI
                        g$invoke-library$7936$sFNhI
                        g$lib*$11757$sFNhI)
                      (eval-core
                        (g$expanded->core$7674$sFNhI
                          g$invoke-code$11756$sFNhI)))))))
              g$invoke-code$11755$sFNhI
              g$lib*$11754$sFNhI)))))))
   (g$pre-compile-r6rs-top-level$8522$sFNhI
     g$pre-compile-r6rs-top-level$12040$sFNhI
     (case-lambda
       ((g$x*$11758$sFNhI)
        (call-with-values
          (case-lambda (() (g$top-level-expander$8465$sFNhI g$x*$11758$sFNhI)))
          (case-lambda
            ((g$lib*$11761$sFNhI g$invoke-code$11762$sFNhI)
             ((case-lambda
                ((g$invoke-code$11763$sFNhI g$lib*$11764$sFNhI)
                 (begin
                   (g$for-each$5158$sFNhI
                     g$invoke-library$7936$sFNhI
                     g$lib*$11764$sFNhI)
                   (compile-core
                     (g$expanded->core$7674$sFNhI g$invoke-code$11763$sFNhI)))))
              g$invoke-code$11762$sFNhI
              g$lib*$11761$sFNhI)))))))
   (g$new-interaction-environment$8523$sFNhI
     g$new-interaction-environment$12041$sFNhI
     (case-lambda
       (()
        ((case-lambda
           ((g$lib$11765$sFNhI g$rib$11766$sFNhI)
            (begin
              ((case-lambda
                 ((g$subst$11767$sFNhI)
                  (begin
                    (g$set-rib-sym*!$8081$sFNhI
                      g$rib$11766$sFNhI
                      (g$map$5157$sFNhI car g$subst$11767$sFNhI))
                    (g$set-rib-mark**!$8082$sFNhI
                      g$rib$11766$sFNhI
                      (g$map$5157$sFNhI
                        (case-lambda ((g$x$11768$sFNhI) g$top-mark*$8063$sFNhI))
                        g$subst$11767$sFNhI))
                    (g$set-rib-label*!$8083$sFNhI
                      g$rib$11766$sFNhI
                      (g$map$5157$sFNhI cdr g$subst$11767$sFNhI)))))
               (g$library-subst$7893$sFNhI g$lib$11765$sFNhI))
              (g$make-interaction-env$8482$sFNhI g$rib$11766$sFNhI '() '()))))
         (g$find-library-by-name$7929$sFNhI '(ironscheme))
         (g$make-empty-rib$8086$sFNhI)))))
   (g$interaction-environment$8524$sFNhI
     g$interaction-environment$12042$sFNhI
     ((case-lambda
        ((g$e$11769$sFNhI)
         (case-lambda
           (()
            ((case-lambda
               ((g$t$11770$sFNhI)
                (if g$t$11770$sFNhI
                  g$t$11770$sFNhI
                  (begin
                    '#f
                    (begin
                      (set! g$e$11769$sFNhI
                        (g$new-interaction-environment$8523$sFNhI))
                      g$e$11769$sFNhI)))))
             g$e$11769$sFNhI)))))
      '#f))
   (g$top-level-context$8525$sFNhI
     g$top-level-context$12043$sFNhI
     (g$make-parameter$7426$sFNhI '#f)))
  (g$current-library-expander$7926$sFNhI g$library-expander$8501$sFNhI))

(library-letrec* (psyntax primlocs)
  ()
  (begin
    (g$current-primitive-locations$7671$sFNhI
      (case-lambda
        ((g$x$12114$sFNhI)
         ((case-lambda
            ((g$t$12115$sFNhI) (if g$t$12115$sFNhI (cdr g$t$12115$sFNhI) '#f)))
          (g$assq$5145$sFNhI
            g$x$12114$sFNhI
            '((ellipsis-map . g$ellipsis-map$11928$sFNhI)
              (make-list . g$make-list$5140$sFNhI)
              (last-pair . g$last-pair$5139$sFNhI)
              (ironscheme-build . g$ironscheme-build$12106$sFNhI)
              (syntax-error . g$syntax-error$12032$sFNhI)
              (syntax-dispatch . g$syntax-dispatch$11923$sFNhI)
              (compile-system-libraries
                .
                g$compile-system-libraries$12109$sFNhI)
              (compile->closure . g$compile->closure$12111$sFNhI)
              (compile . g$compile$12110$sFNhI)
              (load . g$load$12105$sFNhI)
              (interaction-environment . g$interaction-environment$12042$sFNhI)
              (string-normalize-nfkd . g$string-normalize-nfkd$6252$sFNhI)
              (string-normalize-nfkc . g$string-normalize-nfkc$6251$sFNhI)
              (string-normalize-nfd . g$string-normalize-nfd$6250$sFNhI)
              (string-normalize-nfc . g$string-normalize-nfc$6249$sFNhI)
              (string-ci>? . g$string-ci>?$6241$sFNhI)
              (string-ci>=? . g$string-ci>=?$6243$sFNhI)
              (string-ci=? . g$string-ci=?$6239$sFNhI)
              (string-ci<? . g$string-ci<?$6240$sFNhI)
              (string-ci<=? . g$string-ci<=?$6242$sFNhI)
              (char-ci>? . g$char-ci>?$6246$sFNhI)
              (char-ci>=? . g$char-ci>=?$6248$sFNhI)
              (char-ci=? . g$char-ci=?$6244$sFNhI)
              (char-ci<? . g$char-ci<?$6245$sFNhI)
              (char-ci<=? . g$char-ci<=?$6247$sFNhI)
              (variable-transformer-procedure
                .
                g$variable-transformer-procedure$11861$sFNhI)
              (variable-transformer? . g$variable-transformer?$11860$sFNhI)
              (make-variable-transformer
                .
                g$make-variable-transformer$11858$sFNhI)
              (identifier? . g$identifier?$12036$sFNhI)
              (generate-temporaries . g$generate-temporaries$12025$sFNhI)
              (free-identifier=? . g$free-identifier=?$12026$sFNhI)
              (syntax->datum . g$syntax->datum$12038$sFNhI)
              (datum->syntax . g$datum->syntax$12037$sFNhI)
              (bound-identifier=? . g$bound-identifier=?$12027$sFNhI)
              (delete-file . g$delete-file$5763$sFNhI)
              (file-exists? . g$file-exists?$5762$sFNhI)
              (list-sort . g$list-sort$6158$sFNhI)
              (make-eqv-hashtable . g$make-eqv-hashtable$5745$sFNhI)
              (make-eq-hashtable . g$make-eq-hashtable$5744$sFNhI)
              (hashtable-update! . g$hashtable-update!$5751$sFNhI)
              (hashtable-size . g$hashtable-size$5746$sFNhI)
              (hashtable-set! . g$hashtable-set!$5748$sFNhI)
              (hashtable-ref . g$hashtable-ref$5747$sFNhI)
              (hashtable-delete! . g$hashtable-delete!$5749$sFNhI)
              (hashtable-contains? . g$hashtable-contains?$5750$sFNhI)
              (hashtable-clear! . g$hashtable-clear!$5752$sFNhI)
              (call-with-output-file . g$call-with-output-file$6828$sFNhI)
              (call-with-input-file . g$call-with-input-file$6827$sFNhI)
              (write-char . g$write-char$6824$sFNhI)
              (with-output-to-file . g$with-output-to-file$6826$sFNhI)
              (with-input-from-file . g$with-input-from-file$6825$sFNhI)
              (read-char . g$read-char$6823$sFNhI)
              (peek-char . g$peek-char$6822$sFNhI)
              (newline . g$newline$6829$sFNhI)
              (put-datum . g$put-datum$6772$sFNhI)
              (port? . g$port?$6777$sFNhI)
              (open-string-output-port . g$open-string-output-port$6776$sFNhI)
              (make-i/o-write-error . g$make-i/o-write-error$6686$sFNhI)
              (make-i/o-read-error . g$make-i/o-read-error$6680$sFNhI)
              (make-i/o-port-error . g$make-i/o-port-error$6732$sFNhI)
              (make-i/o-invalid-position-error
                .
                g$make-i/o-invalid-position-error$6692$sFNhI)
              (make-i/o-filename-error . g$make-i/o-filename-error$6700$sFNhI)
              (make-i/o-file-protection-error
                .
                g$make-i/o-file-protection-error$6708$sFNhI)
              (make-i/o-file-is-read-only-error
                .
                g$make-i/o-file-is-read-only-error$6714$sFNhI)
              (make-i/o-file-does-not-exist-error
                .
                g$make-i/o-file-does-not-exist-error$6726$sFNhI)
              (make-i/o-file-already-exists-error
                .
                g$make-i/o-file-already-exists-error$6720$sFNhI)
              (make-i/o-error . g$make-i/o-error$6674$sFNhI)
              (make-i/o-encoding-error . g$make-i/o-encoding-error$6746$sFNhI)
              (make-i/o-decoding-error . g$make-i/o-decoding-error$6740$sFNhI)
              (i/o-write-error? . g$i/o-write-error?$6687$sFNhI)
              (i/o-read-error? . g$i/o-read-error?$6681$sFNhI)
              (i/o-port-error? . g$i/o-port-error?$6734$sFNhI)
              (i/o-invalid-position-error?
                .
                g$i/o-invalid-position-error?$6694$sFNhI)
              (i/o-error-position . g$i/o-error-position$6695$sFNhI)
              (i/o-filename-error? . g$i/o-filename-error?$6702$sFNhI)
              (i/o-file-protection-error?
                .
                g$i/o-file-protection-error?$6709$sFNhI)
              (i/o-file-is-read-only-error?
                .
                g$i/o-file-is-read-only-error?$6715$sFNhI)
              (i/o-file-does-not-exist-error?
                .
                g$i/o-file-does-not-exist-error?$6727$sFNhI)
              (i/o-file-already-exists-error?
                .
                g$i/o-file-already-exists-error?$6721$sFNhI)
              (i/o-error? . g$i/o-error?$6675$sFNhI)
              (i/o-error-port . g$i/o-error-port$6735$sFNhI)
              (i/o-error-filename . g$i/o-error-filename$6703$sFNhI)
              (i/o-encoding-error? . g$i/o-encoding-error?$6748$sFNhI)
              (i/o-encoding-error-char . g$i/o-encoding-error-char$6749$sFNhI)
              (i/o-decoding-error? . g$i/o-decoding-error?$6741$sFNhI)
              (get-datum . g$get-datum$6773$sFNhI)
              (call-with-string-output-port
                .
                g$call-with-string-output-port$6778$sFNhI)
              (call-with-port . g$call-with-port$6779$sFNhI)
              (scheme-report-environment
                .
                g$scheme-report-environment$12015$sFNhI)
              (quotient . g$quotient$6125$sFNhI)
              (null-environment . g$null-environment$12014$sFNhI)
              (remainder . g$remainder$6126$sFNhI)
              (modulo . g$modulo$6127$sFNhI)
              (inexact->exact . g$inexact->exact$6122$sFNhI)
              (force . g$force$6129$sFNhI)
              (exact->inexact . g$exact->inexact$6123$sFNhI)
              (command-line . g$command-line$12102$sFNhI)
              (remove . g$remove$5162$sFNhI)
              (remv . g$remv$5163$sFNhI)
              (remp . g$remp$5143$sFNhI)
              (remq . g$remq$5164$sFNhI)
              (partition . g$partition$5142$sFNhI)
              (memv . g$memv$5150$sFNhI)
              (memq . g$memq$5149$sFNhI)
              (memp . g$memp$5152$sFNhI)
              (member . g$member$5151$sFNhI)
              (exists . g$exists$5156$sFNhI)
              (for-all . g$for-all$5155$sFNhI)
              (fold-right . g$fold-right$5161$sFNhI)
              (fold-left . g$fold-left$5160$sFNhI)
              (find . g$find$5141$sFNhI)
              (filter . g$filter$5144$sFNhI)
              (cons* . g$cons*$5159$sFNhI)
              (assv . g$assv$5146$sFNhI)
              (assq . g$assq$5145$sFNhI)
              (assp . g$assp$5148$sFNhI)
              (assoc . g$assoc$5147$sFNhI)
              (eval . g$eval$12017$sFNhI)
              (environment . g$environment$12013$sFNhI)
              (make-enumeration . g$make-enumeration$6961$sFNhI)
              (enum-set=? . g$enum-set=?$6968$sFNhI)
              (enum-set-universe . g$enum-set-universe$6962$sFNhI)
              (enum-set-union . g$enum-set-union$6969$sFNhI)
              (enum-set-subset? . g$enum-set-subset?$6967$sFNhI)
              (enum-set-projection . g$enum-set-projection$6973$sFNhI)
              (enum-set-member? . g$enum-set-member?$6966$sFNhI)
              (enum-set-intersection . g$enum-set-intersection$6970$sFNhI)
              (enum-set-indexer . g$enum-set-indexer$6963$sFNhI)
              (enum-set-difference . g$enum-set-difference$6971$sFNhI)
              (enum-set-constructor . g$enum-set-constructor$6964$sFNhI)
              (enum-set-complement . g$enum-set-complement$6972$sFNhI)
              (enum-set->list . g$enum-set->list$6965$sFNhI)
              (who-condition? . g$who-condition?$6059$sFNhI)
              (warning? . g$warning?$6020$sFNhI)
              (violation? . g$violation?$6038$sFNhI)
              (undefined-violation? . g$undefined-violation?$6094$sFNhI)
              (syntax-violation? . g$syntax-violation?$6086$sFNhI)
              (syntax-violation-subform . g$syntax-violation-subform$6088$sFNhI)
              (syntax-violation-form . g$syntax-violation-form$6087$sFNhI)
              (syntax-violation . g$syntax-violation$12035$sFNhI)
              (serious-condition? . g$serious-condition?$6026$sFNhI)
              (non-continuable-violation?
                .
                g$non-continuable-violation?$6066$sFNhI)
              (message-condition? . g$message-condition?$6013$sFNhI)
              (make-who-condition . g$make-who-condition$6057$sFNhI)
              (make-warning . g$make-warning$6019$sFNhI)
              (make-violation . g$make-violation$6037$sFNhI)
              (make-undefined-violation . g$make-undefined-violation$6093$sFNhI)
              (make-syntax-violation . g$make-syntax-violation$6083$sFNhI)
              (make-serious-condition . g$make-serious-condition$6025$sFNhI)
              (make-non-continuable-violation
                .
                g$make-non-continuable-violation$6065$sFNhI)
              (make-message-condition . g$make-message-condition$6011$sFNhI)
              (make-lexical-violation . g$make-lexical-violation$6077$sFNhI)
              (make-irritants-condition . g$make-irritants-condition$6049$sFNhI)
              (make-implementation-restriction-violation
                .
                g$make-implementation-restriction-violation$6071$sFNhI)
              (make-error . g$make-error$6031$sFNhI)
              (make-assertion-violation . g$make-assertion-violation$6043$sFNhI)
              (lexical-violation? . g$lexical-violation?$6078$sFNhI)
              (irritants-condition? . g$irritants-condition?$6051$sFNhI)
              (implementation-restriction-violation?
                .
                g$implementation-restriction-violation?$6072$sFNhI)
              (error? . g$error?$6032$sFNhI)
              (condition-who . g$condition-who$6060$sFNhI)
              (condition-message . g$condition-message$6014$sFNhI)
              (condition-irritants . g$condition-irritants$6052$sFNhI)
              (assertion-violation? . g$assertion-violation?$6044$sFNhI)
              (native-endianness . g$native-endianness$5876$sFNhI)
              (bytevector? . g$bytevector?$5644$sFNhI)
              (bytevector-u64-set! . g$bytevector-u64-set!$5897$sFNhI)
              (bytevector-u64-ref . g$bytevector-u64-ref$5893$sFNhI)
              (bytevector-u64-native-set!
                .
                g$bytevector-u64-native-set!$5899$sFNhI)
              (bytevector-u64-native-ref
                .
                g$bytevector-u64-native-ref$5895$sFNhI)
              (bytevector-u32-set! . g$bytevector-u32-set!$5889$sFNhI)
              (bytevector-u32-ref . g$bytevector-u32-ref$5885$sFNhI)
              (bytevector-u32-native-set!
                .
                g$bytevector-u32-native-set!$5891$sFNhI)
              (bytevector-u32-native-ref
                .
                g$bytevector-u32-native-ref$5887$sFNhI)
              (bytevector-u16-set! . g$bytevector-u16-set!$5881$sFNhI)
              (bytevector-u16-ref . g$bytevector-u16-ref$5877$sFNhI)
              (bytevector-u16-native-set!
                .
                g$bytevector-u16-native-set!$5883$sFNhI)
              (bytevector-u16-native-ref
                .
                g$bytevector-u16-native-ref$5879$sFNhI)
              (bytevector-s64-set! . g$bytevector-s64-set!$5898$sFNhI)
              (bytevector-s64-ref . g$bytevector-s64-ref$5894$sFNhI)
              (bytevector-s64-native-set!
                .
                g$bytevector-s64-native-set!$5900$sFNhI)
              (bytevector-s64-native-ref
                .
                g$bytevector-s64-native-ref$5896$sFNhI)
              (bytevector-s32-set! . g$bytevector-s32-set!$5890$sFNhI)
              (bytevector-s32-ref . g$bytevector-s32-ref$5886$sFNhI)
              (bytevector-s32-native-set!
                .
                g$bytevector-s32-native-set!$5892$sFNhI)
              (bytevector-s32-native-ref
                .
                g$bytevector-s32-native-ref$5888$sFNhI)
              (bytevector-s16-set! . g$bytevector-s16-set!$5882$sFNhI)
              (bytevector-s16-ref . g$bytevector-s16-ref$5878$sFNhI)
              (bytevector-s16-native-set!
                .
                g$bytevector-s16-native-set!$5884$sFNhI)
              (bytevector-s16-native-ref
                .
                g$bytevector-s16-native-ref$5880$sFNhI)
              (bytevector-ieee-single-native-set!
                .
                g$bytevector-ieee-single-native-set!$5903$sFNhI)
              (bytevector-ieee-single-native-ref
                .
                g$bytevector-ieee-single-native-ref$5901$sFNhI)
              (bytevector-ieee-double-native-set!
                .
                g$bytevector-ieee-double-native-set!$5904$sFNhI)
              (bytevector-ieee-double-native-ref
                .
                g$bytevector-ieee-double-native-ref$5902$sFNhI)
              (no-nans-violation? . g$no-nans-violation?$6589$sFNhI)
              (no-infinities-violation? . g$no-infinities-violation?$6583$sFNhI)
              (make-no-nans-violation . g$make-no-nans-violation$6588$sFNhI)
              (make-no-infinities-violation
                .
                g$make-no-infinities-violation$6582$sFNhI)
              (flzero? . g$flzero?$6573$sFNhI)
              (fltruncate . g$fltruncate$6568$sFNhI)
              (fltan . g$fltan$6558$sFNhI)
              (flsqrt . g$flsqrt$6563$sFNhI)
              (flsin . g$flsin$6556$sFNhI)
              (flround . g$flround$6569$sFNhI)
              (flpositive? . g$flpositive?$6571$sFNhI)
              (flonum? . g$flonum?$5649$sFNhI)
              (flodd? . g$flodd?$6575$sFNhI)
              (flnegative? . g$flnegative?$6572$sFNhI)
              (flnan? . g$flnan?$6555$sFNhI)
              (flmod0 . g$flmod0$6551$sFNhI)
              (flmod . g$flmod$6550$sFNhI)
              (flmin . g$flmin$6577$sFNhI)
              (flmax . g$flmax$6576$sFNhI)
              (fllog . g$fllog$6562$sFNhI)
              (flinteger? . g$flinteger?$6552$sFNhI)
              (flinfinite? . g$flinfinite?$6554$sFNhI)
              (flfloor . g$flfloor$6567$sFNhI)
              (flfinite? . g$flfinite?$6553$sFNhI)
              (flexpt . g$flexpt$6565$sFNhI)
              (flexp . g$flexp$6564$sFNhI)
              (fleven? . g$fleven?$6574$sFNhI)
              (fldiv0-and-mod0 . g$fldiv0-and-mod0$6547$sFNhI)
              (fldiv0 . g$fldiv0$6549$sFNhI)
              (fldiv-and-mod . g$fldiv-and-mod$6546$sFNhI)
              (fldiv . g$fldiv$6548$sFNhI)
              (flcos . g$flcos$6557$sFNhI)
              (flceiling . g$flceiling$6566$sFNhI)
              (flatan . g$flatan$6561$sFNhI)
              (flasin . g$flasin$6559$sFNhI)
              (flacos . g$flacos$6560$sFNhI)
              (flabs . g$flabs$6570$sFNhI)
              (fxzero? . g$fxzero?$6402$sFNhI)
              (fxrotate-bit-field . g$fxrotate-bit-field$6416$sFNhI)
              (fxpositive? . g$fxpositive?$6400$sFNhI)
              (fxodd? . g$fxodd?$6404$sFNhI)
              (fxnegative? . g$fxnegative?$6401$sFNhI)
              (fxmod0 . g$fxmod0$6399$sFNhI)
              (fxmod . g$fxmod$6398$sFNhI)
              (fxmin . g$fxmin$6406$sFNhI)
              (fxmax . g$fxmax$6405$sFNhI)
              (fxif . g$fxif$6410$sFNhI)
              (fxeven? . g$fxeven?$6403$sFNhI)
              (fxdiv0 . g$fxdiv0$6397$sFNhI)
              (fxdiv . g$fxdiv$6396$sFNhI)
              (fxcopy-bit-field . g$fxcopy-bit-field$6413$sFNhI)
              (fxcopy-bit . g$fxcopy-bit$6411$sFNhI)
              (fxbit-field . g$fxbit-field$6412$sFNhI)
              (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6415$sFNhI)
              (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6414$sFNhI)
              (fx-/carry . g$fx-/carry$6408$sFNhI)
              (fx+/carry . g$fx+/carry$6409$sFNhI)
              (fx*/carry . g$fx*/carry$6407$sFNhI)
              (fixnum-width . g$fixnum-width$5650$sFNhI)
              (fixnum? . g$fixnum?$5648$sFNhI)
              (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6290$sFNhI)
              (bitwise-if . g$bitwise-if$6284$sFNhI)
              (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6287$sFNhI)
              (bitwise-copy-bit . g$bitwise-copy-bit$6285$sFNhI)
              (bitwise-bit-field . g$bitwise-bit-field$6286$sFNhI)
              (bitwise-arithmetic-shift-right
                .
                g$bitwise-arithmetic-shift-right$6289$sFNhI)
              (bitwise-arithmetic-shift-left
                .
                g$bitwise-arithmetic-shift-left$6288$sFNhI)
              (zero? . g$zero?$5683$sFNhI)
              (vector? . g$vector?$5643$sFNhI)
              (vector-map . g$vector-map$5705$sFNhI)
              (vector-for-each . g$vector-for-each$5706$sFNhI)
              (vector-fill! . g$vector-fill!$5651$sFNhI)
              (symbol? . g$symbol?$5645$sFNhI)
              (symbol=? . g$symbol=?$5695$sFNhI)
              (string>? . g$string>?$5692$sFNhI)
              (string>=? . g$string>=?$5694$sFNhI)
              (string=? . g$string=?$5690$sFNhI)
              (string<? . g$string<?$5691$sFNhI)
              (string<=? . g$string<=?$5693$sFNhI)
              (string-for-each . g$string-for-each$5707$sFNhI)
              (reverse . g$reverse$5652$sFNhI)
              (rationalize . g$rationalize$5702$sFNhI)
              (procedure? . g$procedure?$5647$sFNhI)
              (positive? . g$positive?$5681$sFNhI)
              (odd? . g$odd?$5685$sFNhI)
              (negative? . g$negative?$5682$sFNhI)
              (min . g$min$5687$sFNhI)
              (max . g$max$5686$sFNhI)
              (map . g$map$5157$sFNhI)
              (list-tail . g$list-tail$5137$sFNhI)
              (list-ref . g$list-ref$5138$sFNhI)
              (list->vector . g$list->vector$5640$sFNhI)
              (list->string . g$list->string$5641$sFNhI)
              (lcm . g$lcm$5689$sFNhI)
              (gcd . g$gcd$5688$sFNhI)
              (for-each . g$for-each$5158$sFNhI)
              (even? . g$even?$5684$sFNhI)
              (mod0 . g$mod0$5639$sFNhI)
              (div0 . g$div0$5637$sFNhI)
              (mod . g$mod$5638$sFNhI)
              (div . g$div$5636$sFNhI)
              (char? . g$char?$5642$sFNhI)
              (char>? . g$char>?$5699$sFNhI)
              (char>=? . g$char>=?$5701$sFNhI)
              (char=? . g$char=?$5697$sFNhI)
              (char<? . g$char<?$5698$sFNhI)
              (char<=? . g$char<=?$5700$sFNhI)
              (cddddr . g$cddddr$5680$sFNhI)
              (cdddar . g$cdddar$5679$sFNhI)
              (cddadr . g$cddadr$5678$sFNhI)
              (cddaar . g$cddaar$5677$sFNhI)
              (cdaddr . g$cdaddr$5676$sFNhI)
              (cdadar . g$cdadar$5675$sFNhI)
              (cdaadr . g$cdaadr$5674$sFNhI)
              (cdaaar . g$cdaaar$5673$sFNhI)
              (cadddr . g$cadddr$5672$sFNhI)
              (caddar . g$caddar$5671$sFNhI)
              (cadadr . g$cadadr$5670$sFNhI)
              (cadaar . g$cadaar$5669$sFNhI)
              (caaddr . g$caaddr$5668$sFNhI)
              (caadar . g$caadar$5667$sFNhI)
              (caaadr . g$caaadr$5666$sFNhI)
              (caaaar . g$caaaar$5665$sFNhI)
              (cdddr . g$cdddr$5664$sFNhI)
              (cddar . g$cddar$5663$sFNhI)
              (cdadr . g$cdadr$5662$sFNhI)
              (cdaar . g$cdaar$5661$sFNhI)
              (caddr . g$caddr$5660$sFNhI)
              (cadar . g$cadar$5659$sFNhI)
              (caadr . g$caadr$5658$sFNhI)
              (caaar . g$caaar$5657$sFNhI)
              (cddr . g$cddr$5656$sFNhI)
              (cdar . g$cdar$5655$sFNhI)
              (cadr . g$cadr$5654$sFNhI)
              (caar . g$caar$5653$sFNhI)
              (boolean? . g$boolean?$5646$sFNhI)
              (boolean=? . g$boolean=?$5696$sFNhI)
              (enum-set? . g$enum?$6942$sFNhI)
              (make-promise . g$make-promise$6128$sFNhI)
              (load/args . g$load/args$12104$sFNhI)
              (printf . g$printf$6997$sFNhI)
              (fprintf . g$fprintf$6998$sFNhI)
              (format . g$format$6999$sFNhI)
              (trace-printer . g$trace-printer$12101$sFNhI)
              (make-traced-macro . g$make-traced-macro$7003$sFNhI)
              (assertion-error . g$assertion-error$12031$sFNhI)
              (make-parameter . g$make-parameter$7426$sFNhI)
              (environment-bindings . g$environment-bindings$12009$sFNhI)
              (environment-symbols . g$environment-symbols$12012$sFNhI)
              (interaction-environment-symbols
                .
                g$interaction-environment-symbols$12008$sFNhI)
              (library-path . g$library-path$7918$sFNhI)
              (make-compile-time-value . g$make-compile-time-value$11859$sFNhI)
              (expand->core . g$expand->core$12018$sFNhI)
              (expand . g$expand$12016$sFNhI)
              (convert->cps . g$convert->cps$7321$sFNhI)
              (installed-libraries . g$installed-libraries$7939$sFNhI)
              (uninstall-library . g$uninstall-library$7930$sFNhI)))))))
    (g$install-library$7934$sFNhI
      'g$13063$sFNhI
      '(ironscheme)
      '()
      '()
      '()
      '()
      '((tanh . g$13000$sFNhI)
        (cosh . g$12999$sFNhI)
        (sinh . g$12998$sFNhI)
        (make-guid . g$12997$sFNhI)
        (unspecified? . g$12996$sFNhI)
        (make-list . g$5958$sFNhI)
        (last-pair . g$5957$sFNhI)
        (load-r5rs . g$12995$sFNhI)
        (license . g$12994$sFNhI)
        (stacktrace . g$12993$sFNhI)
        (ironscheme-build . g$12494$sFNhI)
        (set-symbol-value! . g$12980$sFNhI)
        (symbol-value . g$12979$sFNhI)
        (symbol-bound? . g$12978$sFNhI)
        (ungensym . g$12977$sFNhI)
        (gensym . g$12976$sFNhI)
        (void . g$12975$sFNhI)
        (compile-system-libraries . g$12497$sFNhI)
        (compile->closure . g$12499$sFNhI)
        (compile . g$12498$sFNhI)
        (load . g$12493$sFNhI)
        (interaction-environment . g$9499$sFNhI)
        (string-upcase . g$12970$sFNhI)
        (string-titlecase . g$12969$sFNhI)
        (string-normalize-nfkd . g$7237$sFNhI)
        (string-normalize-nfkc . g$7236$sFNhI)
        (string-normalize-nfd . g$7235$sFNhI)
        (string-normalize-nfc . g$7234$sFNhI)
        (string-foldcase . g$12968$sFNhI)
        (string-downcase . g$12967$sFNhI)
        (string-ci>? . g$7192$sFNhI)
        (string-ci>=? . g$7194$sFNhI)
        (string-ci=? . g$7190$sFNhI)
        (string-ci<? . g$7191$sFNhI)
        (string-ci<=? . g$7193$sFNhI)
        (char-whitespace? . g$12966$sFNhI)
        (char-upper-case? . g$12965$sFNhI)
        (char-title-case? . g$12964$sFNhI)
        (char-numeric? . g$12963$sFNhI)
        (char-lower-case? . g$12962$sFNhI)
        (char-general-category . g$12961$sFNhI)
        (char-upcase . g$12960$sFNhI)
        (char-titlecase . g$12959$sFNhI)
        (char-foldcase . g$12958$sFNhI)
        (char-downcase . g$12957$sFNhI)
        (char-ci>? . g$7231$sFNhI)
        (char-ci>=? . g$7233$sFNhI)
        (char-ci=? . g$7229$sFNhI)
        (char-ci<? . g$7230$sFNhI)
        (char-ci<=? . g$7232$sFNhI)
        (char-alphabetic? . g$12956$sFNhI)
        (make-variable-transformer . g$9093$sFNhI)
        (identifier? . g$9493$sFNhI)
        (generate-temporaries . g$9482$sFNhI)
        (free-identifier=? . g$9483$sFNhI)
        (syntax->datum . g$9495$sFNhI)
        (datum->syntax . g$9494$sFNhI)
        (bound-identifier=? . g$9484$sFNhI)
        (record-type-descriptor? . g$12955$sFNhI)
        (record-predicate . g$12954$sFNhI)
        (record-mutator . g$12953$sFNhI)
        (record-constructor . g$12952$sFNhI)
        (record-accessor . g$12951$sFNhI)
        (make-record-type-descriptor . g$12950$sFNhI)
        (make-record-constructor-descriptor . g$12949$sFNhI)
        (record? . g$12948$sFNhI)
        (record-type-uid . g$12947$sFNhI)
        (record-type-sealed? . g$12946$sFNhI)
        (record-type-parent . g$12945$sFNhI)
        (record-type-opaque? . g$12944$sFNhI)
        (record-type-name . g$12943$sFNhI)
        (record-type-generative? . g$12942$sFNhI)
        (record-type-field-names . g$12941$sFNhI)
        (record-rtd . g$12940$sFNhI)
        (record-field-mutable? . g$12939$sFNhI)
        (delete-file . g$6766$sFNhI)
        (file-exists? . g$6765$sFNhI)
        (vector-sort! . g$12938$sFNhI)
        (vector-sort . g$12937$sFNhI)
        (list-sort . g$7132$sFNhI)
        (symbol-hash . g$12936$sFNhI)
        (string-ci-hash . g$12935$sFNhI)
        (string-hash . g$12934$sFNhI)
        (equal-hash . g$12933$sFNhI)
        (hashtable-equivalence-function . g$12932$sFNhI)
        (make-hashtable . g$12931$sFNhI)
        (hashtable-hash-function . g$12930$sFNhI)
        (make-eqv-hashtable . g$6734$sFNhI)
        (make-eq-hashtable . g$6733$sFNhI)
        (hashtable? . g$12929$sFNhI)
        (hashtable-update! . g$6740$sFNhI)
        (hashtable-size . g$6735$sFNhI)
        (hashtable-set! . g$6737$sFNhI)
        (hashtable-ref . g$6736$sFNhI)
        (hashtable-mutable? . g$12928$sFNhI)
        (hashtable-keys . g$12927$sFNhI)
        (hashtable-entries . g$12926$sFNhI)
        (hashtable-delete! . g$6738$sFNhI)
        (hashtable-copy . g$12925$sFNhI)
        (hashtable-contains? . g$6739$sFNhI)
        (hashtable-clear! . g$6741$sFNhI)
        (call-with-output-file . g$7782$sFNhI)
        (call-with-input-file . g$7781$sFNhI)
        (write-char . g$7763$sFNhI)
        (write . g$12924$sFNhI)
        (with-output-to-file . g$7780$sFNhI)
        (with-input-from-file . g$7779$sFNhI)
        (read-char . g$7762$sFNhI)
        (read . g$12923$sFNhI)
        (peek-char . g$7761$sFNhI)
        (open-output-file . g$12922$sFNhI)
        (open-input-file . g$12921$sFNhI)
        (newline . g$7783$sFNhI)
        (display . g$12920$sFNhI)
        (close-output-port . g$12919$sFNhI)
        (close-input-port . g$12918$sFNhI)
        (eof-object? . g$12917$sFNhI)
        (eof-object . g$12916$sFNhI)
        (current-error-port . g$12915$sFNhI)
        (current-output-port . g$12914$sFNhI)
        (current-input-port . g$12913$sFNhI)
        (output-port? . g$12912$sFNhI)
        (input-port? . g$12911$sFNhI)
        (utf-8-codec . g$12910$sFNhI)
        (utf-16-codec . g$12909$sFNhI)
        (transcoder-error-handling-mode . g$12908$sFNhI)
        (transcoder-eol-style . g$12907$sFNhI)
        (transcoder-codec . g$12906$sFNhI)
        (transcoded-port . g$12905$sFNhI)
        (textual-port? . g$12904$sFNhI)
        (string->bytevector . g$12903$sFNhI)
        (standard-output-port . g$12902$sFNhI)
        (standard-input-port . g$12901$sFNhI)
        (standard-error-port . g$12900$sFNhI)
        (set-port-position! . g$12899$sFNhI)
        (put-u8 . g$12898$sFNhI)
        (put-string . g$12897$sFNhI)
        (put-datum . g$7741$sFNhI)
        (put-char . g$12896$sFNhI)
        (put-bytevector . g$12895$sFNhI)
        (port? . g$7746$sFNhI)
        (port-transcoder . g$12894$sFNhI)
        (port-position . g$12893$sFNhI)
        (port-has-set-port-position!? . g$12892$sFNhI)
        (port-has-port-position? . g$12891$sFNhI)
        (port-eof? . g$12890$sFNhI)
        (output-port-buffer-mode . g$12889$sFNhI)
        (open-string-output-port . g$7745$sFNhI)
        (open-string-input-port . g$12888$sFNhI)
        (open-file-output-port . g$12887$sFNhI)
        (open-file-input/output-port . g$12886$sFNhI)
        (open-file-input-port . g$12885$sFNhI)
        (open-bytevector-output-port . g$12884$sFNhI)
        (open-bytevector-input-port . g$12883$sFNhI)
        (native-transcoder . g$12882$sFNhI)
        (native-eol-style . g$12881$sFNhI)
        (make-transcoder . g$12880$sFNhI)
        (latin-1-codec . g$12879$sFNhI)
        (make-i/o-write-error . g$7599$sFNhI)
        (make-i/o-read-error . g$7585$sFNhI)
        (make-i/o-port-error . g$7704$sFNhI)
        (make-i/o-invalid-position-error . g$7614$sFNhI)
        (make-i/o-filename-error . g$7631$sFNhI)
        (make-i/o-file-protection-error . g$7647$sFNhI)
        (make-i/o-file-is-read-only-error . g$7661$sFNhI)
        (make-i/o-file-does-not-exist-error . g$7689$sFNhI)
        (make-i/o-file-already-exists-error . g$7675$sFNhI)
        (make-i/o-error . g$7571$sFNhI)
        (make-i/o-encoding-error . g$7735$sFNhI)
        (make-i/o-decoding-error . g$7720$sFNhI)
        (make-custom-textual-output-port . g$12878$sFNhI)
        (make-custom-textual-input/output-port . g$12877$sFNhI)
        (make-custom-textual-input-port . g$12876$sFNhI)
        (make-custom-binary-output-port . g$12875$sFNhI)
        (make-custom-binary-input/output-port . g$12874$sFNhI)
        (make-custom-binary-input-port . g$12873$sFNhI)
        (make-bytevector . g$12872$sFNhI)
        (lookahead-u8 . g$12871$sFNhI)
        (lookahead-char . g$12870$sFNhI)
        (i/o-write-error? . g$7600$sFNhI)
        (i/o-read-error? . g$7586$sFNhI)
        (i/o-port-error? . g$7706$sFNhI)
        (i/o-invalid-position-error? . g$7616$sFNhI)
        (i/o-error-position . g$7617$sFNhI)
        (i/o-filename-error? . g$7633$sFNhI)
        (i/o-file-protection-error? . g$7648$sFNhI)
        (i/o-file-is-read-only-error? . g$7662$sFNhI)
        (i/o-file-does-not-exist-error? . g$7690$sFNhI)
        (i/o-file-already-exists-error? . g$7676$sFNhI)
        (i/o-error? . g$7572$sFNhI)
        (i/o-error-port . g$7707$sFNhI)
        (i/o-error-filename . g$7634$sFNhI)
        (i/o-encoding-error? . g$7737$sFNhI)
        (i/o-encoding-error-char . g$7738$sFNhI)
        (i/o-decoding-error? . g$7721$sFNhI)
        (get-u8 . g$12869$sFNhI)
        (get-string-n! . g$12868$sFNhI)
        (get-string-n . g$12867$sFNhI)
        (get-string-all . g$12866$sFNhI)
        (get-line . g$12865$sFNhI)
        (get-datum . g$7742$sFNhI)
        (get-char . g$12864$sFNhI)
        (get-bytevector-some . g$12863$sFNhI)
        (get-bytevector-n! . g$12862$sFNhI)
        (get-bytevector-n . g$12861$sFNhI)
        (get-bytevector-all . g$12860$sFNhI)
        (flush-output-port . g$12859$sFNhI)
        (close-port . g$12858$sFNhI)
        (call-with-string-output-port . g$7747$sFNhI)
        (call-with-port . g$7748$sFNhI)
        (call-with-bytevector-output-port . g$12857$sFNhI)
        (bytevector->string . g$12856$sFNhI)
        (buffer-mode? . g$12855$sFNhI)
        (binary-port? . g$12854$sFNhI)
        (scheme-report-environment . g$9472$sFNhI)
        (quotient . g$7111$sFNhI)
        (null-environment . g$9471$sFNhI)
        (remainder . g$7112$sFNhI)
        (modulo . g$7113$sFNhI)
        (inexact->exact . g$7108$sFNhI)
        (force . g$7115$sFNhI)
        (exact->inexact . g$7109$sFNhI)
        (exit . g$12853$sFNhI)
        (command-line . g$12490$sFNhI)
        (string-fill! . g$12852$sFNhI)
        (string-set! . g$12851$sFNhI)
        (set-cdr! . g$12850$sFNhI)
        (set-car! . g$12849$sFNhI)
        (remove . g$5980$sFNhI)
        (remv . g$5981$sFNhI)
        (remp . g$5961$sFNhI)
        (remq . g$5982$sFNhI)
        (partition . g$5960$sFNhI)
        (memv . g$5968$sFNhI)
        (memq . g$5967$sFNhI)
        (memp . g$5970$sFNhI)
        (member . g$5969$sFNhI)
        (exists . g$5974$sFNhI)
        (for-all . g$5973$sFNhI)
        (fold-right . g$5979$sFNhI)
        (fold-left . g$5978$sFNhI)
        (find . g$5959$sFNhI)
        (filter . g$5962$sFNhI)
        (cons* . g$5977$sFNhI)
        (assv . g$5964$sFNhI)
        (assq . g$5963$sFNhI)
        (assp . g$5966$sFNhI)
        (assoc . g$5965$sFNhI)
        (with-exception-handler . g$12848$sFNhI)
        (raise-continuable . g$12847$sFNhI)
        (raise . g$12846$sFNhI)
        (eval . g$9474$sFNhI)
        (environment . g$9470$sFNhI)
        (make-enumeration . g$7847$sFNhI)
        (enum-set=? . g$7854$sFNhI)
        (enum-set-universe . g$7848$sFNhI)
        (enum-set-union . g$7855$sFNhI)
        (enum-set-subset? . g$7853$sFNhI)
        (enum-set-projection . g$7859$sFNhI)
        (enum-set-member? . g$7852$sFNhI)
        (enum-set-intersection . g$7856$sFNhI)
        (enum-set-indexer . g$7849$sFNhI)
        (enum-set-difference . g$7857$sFNhI)
        (enum-set-constructor . g$7850$sFNhI)
        (enum-set-complement . g$7858$sFNhI)
        (enum-set->list . g$7851$sFNhI)
        (who-condition? . g$7020$sFNhI)
        (warning? . g$6931$sFNhI)
        (violation? . g$6973$sFNhI)
        (undefined-violation? . g$7097$sFNhI)
        (syntax-violation? . g$7081$sFNhI)
        (syntax-violation-subform . g$7083$sFNhI)
        (syntax-violation-form . g$7082$sFNhI)
        (syntax-violation . g$9492$sFNhI)
        (simple-conditions . g$12845$sFNhI)
        (serious-condition? . g$6945$sFNhI)
        (non-continuable-violation? . g$7035$sFNhI)
        (message-condition? . g$6916$sFNhI)
        (make-who-condition . g$7018$sFNhI)
        (make-warning . g$6930$sFNhI)
        (make-violation . g$6972$sFNhI)
        (make-undefined-violation . g$7096$sFNhI)
        (make-syntax-violation . g$7078$sFNhI)
        (make-serious-condition . g$6944$sFNhI)
        (make-non-continuable-violation . g$7034$sFNhI)
        (make-message-condition . g$6914$sFNhI)
        (make-lexical-violation . g$7062$sFNhI)
        (make-irritants-condition . g$7001$sFNhI)
        (make-implementation-restriction-violation . g$7048$sFNhI)
        (make-error . g$6958$sFNhI)
        (make-assertion-violation . g$6986$sFNhI)
        (lexical-violation? . g$7063$sFNhI)
        (irritants-condition? . g$7003$sFNhI)
        (implementation-restriction-violation? . g$7049$sFNhI)
        (error? . g$6959$sFNhI)
        (condition-who . g$7021$sFNhI)
        (condition-predicate . g$12844$sFNhI)
        (condition-message . g$6917$sFNhI)
        (condition-irritants . g$7004$sFNhI)
        (condition-accessor . g$12843$sFNhI)
        (condition . g$12842$sFNhI)
        (assertion-violation? . g$6987$sFNhI)
        (condition? . g$12841$sFNhI)
        (utf32->string . g$12840$sFNhI)
        (utf16->string . g$12839$sFNhI)
        (utf8->string . g$12838$sFNhI)
        (uint-list->bytevector . g$12837$sFNhI)
        (u8-list->bytevector . g$12836$sFNhI)
        (string->utf8 . g$12835$sFNhI)
        (string->utf32 . g$12834$sFNhI)
        (string->utf16 . g$12833$sFNhI)
        (sint-list->bytevector . g$12832$sFNhI)
        (native-endianness . g$6772$sFNhI)
        (bytevector? . g$6400$sFNhI)
        (bytevector=? . g$12831$sFNhI)
        (bytevector-uint-set! . g$12830$sFNhI)
        (bytevector-uint-ref . g$12829$sFNhI)
        (bytevector-u8-set! . g$12828$sFNhI)
        (bytevector-u8-ref . g$12827$sFNhI)
        (bytevector-u64-set! . g$6793$sFNhI)
        (bytevector-u64-ref . g$6789$sFNhI)
        (bytevector-u64-native-set! . g$6795$sFNhI)
        (bytevector-u64-native-ref . g$6791$sFNhI)
        (bytevector-u32-set! . g$6785$sFNhI)
        (bytevector-u32-ref . g$6781$sFNhI)
        (bytevector-u32-native-set! . g$6787$sFNhI)
        (bytevector-u32-native-ref . g$6783$sFNhI)
        (bytevector-u16-set! . g$6777$sFNhI)
        (bytevector-u16-ref . g$6773$sFNhI)
        (bytevector-u16-native-set! . g$6779$sFNhI)
        (bytevector-u16-native-ref . g$6775$sFNhI)
        (bytevector-sint-set! . g$12826$sFNhI)
        (bytevector-sint-ref . g$12825$sFNhI)
        (bytevector-s8-set! . g$12824$sFNhI)
        (bytevector-s8-ref . g$12823$sFNhI)
        (bytevector-s64-set! . g$6794$sFNhI)
        (bytevector-s64-ref . g$6790$sFNhI)
        (bytevector-s64-native-set! . g$6796$sFNhI)
        (bytevector-s64-native-ref . g$6792$sFNhI)
        (bytevector-s32-set! . g$6786$sFNhI)
        (bytevector-s32-ref . g$6782$sFNhI)
        (bytevector-s32-native-set! . g$6788$sFNhI)
        (bytevector-s32-native-ref . g$6784$sFNhI)
        (bytevector-s16-set! . g$6778$sFNhI)
        (bytevector-s16-ref . g$6774$sFNhI)
        (bytevector-s16-native-set! . g$6780$sFNhI)
        (bytevector-s16-native-ref . g$6776$sFNhI)
        (bytevector-length . g$12822$sFNhI)
        (bytevector-ieee-single-set! . g$12821$sFNhI)
        (bytevector-ieee-single-ref . g$12820$sFNhI)
        (bytevector-ieee-single-native-set! . g$6799$sFNhI)
        (bytevector-ieee-single-native-ref . g$6797$sFNhI)
        (bytevector-ieee-double-set! . g$12819$sFNhI)
        (bytevector-ieee-double-ref . g$12818$sFNhI)
        (bytevector-ieee-double-native-set! . g$6800$sFNhI)
        (bytevector-ieee-double-native-ref . g$6798$sFNhI)
        (bytevector-fill! . g$12817$sFNhI)
        (bytevector-copy! . g$12816$sFNhI)
        (bytevector-copy . g$12815$sFNhI)
        (bytevector->uint-list . g$12814$sFNhI)
        (bytevector->u8-list . g$12813$sFNhI)
        (bytevector->sint-list . g$12812$sFNhI)
        (no-nans-violation? . g$7484$sFNhI)
        (no-infinities-violation? . g$7470$sFNhI)
        (make-no-nans-violation . g$7483$sFNhI)
        (make-no-infinities-violation . g$7469$sFNhI)
        (real->flonum . g$12811$sFNhI)
        (flzero? . g$7452$sFNhI)
        (fltruncate . g$7447$sFNhI)
        (fltan . g$7437$sFNhI)
        (flsqrt . g$7442$sFNhI)
        (flsin . g$7435$sFNhI)
        (flround . g$7448$sFNhI)
        (flpositive? . g$7450$sFNhI)
        (flonum? . g$6405$sFNhI)
        (flodd? . g$7454$sFNhI)
        (flnumerator . g$12810$sFNhI)
        (flnegative? . g$7451$sFNhI)
        (flnan? . g$7434$sFNhI)
        (flmod0 . g$7430$sFNhI)
        (flmod . g$7429$sFNhI)
        (flmin . g$7456$sFNhI)
        (flmax . g$7455$sFNhI)
        (fllog . g$7441$sFNhI)
        (flinteger? . g$7431$sFNhI)
        (flinfinite? . g$7433$sFNhI)
        (flfloor . g$7446$sFNhI)
        (flfinite? . g$7432$sFNhI)
        (flexpt . g$7444$sFNhI)
        (flexp . g$7443$sFNhI)
        (fleven? . g$7453$sFNhI)
        (fldiv0-and-mod0 . g$7426$sFNhI)
        (fldiv0 . g$7428$sFNhI)
        (fldiv-and-mod . g$7425$sFNhI)
        (fldiv . g$7427$sFNhI)
        (fldenominator . g$12809$sFNhI)
        (flcos . g$7436$sFNhI)
        (flceiling . g$7445$sFNhI)
        (flatan . g$7440$sFNhI)
        (flasin . g$7438$sFNhI)
        (flacos . g$7439$sFNhI)
        (flabs . g$7449$sFNhI)
        (fl>? . g$12808$sFNhI)
        (fl>=? . g$12807$sFNhI)
        (fl=? . g$12806$sFNhI)
        (fl<? . g$12805$sFNhI)
        (fl<=? . g$12804$sFNhI)
        (fl/ . g$12803$sFNhI)
        (fl- . g$12802$sFNhI)
        (fl+ . g$12801$sFNhI)
        (fl* . g$12800$sFNhI)
        (fixnum->flonum . g$12799$sFNhI)
        (fxzero? . g$7333$sFNhI)
        (fxxor . g$12798$sFNhI)
        (fxrotate-bit-field . g$7347$sFNhI)
        (fxreverse-bit-field . g$12797$sFNhI)
        (fxpositive? . g$7331$sFNhI)
        (fxodd? . g$7335$sFNhI)
        (fxnot . g$12796$sFNhI)
        (fxnegative? . g$7332$sFNhI)
        (fxmod0 . g$7330$sFNhI)
        (fxmod . g$7329$sFNhI)
        (fxmin . g$7337$sFNhI)
        (fxmax . g$7336$sFNhI)
        (fxlength . g$12795$sFNhI)
        (fxior . g$12794$sFNhI)
        (fxif . g$7341$sFNhI)
        (fxfirst-bit-set . g$12793$sFNhI)
        (fxeven? . g$7334$sFNhI)
        (fxdiv0-and-mod0 . g$12792$sFNhI)
        (fxdiv0 . g$7328$sFNhI)
        (fxdiv-and-mod . g$12791$sFNhI)
        (fxdiv . g$7327$sFNhI)
        (fxcopy-bit-field . g$7344$sFNhI)
        (fxcopy-bit . g$7342$sFNhI)
        (fxbit-set? . g$12790$sFNhI)
        (fxbit-field . g$7343$sFNhI)
        (fxbit-count . g$12789$sFNhI)
        (fxarithmetic-shift-right . g$7346$sFNhI)
        (fxarithmetic-shift-left . g$7345$sFNhI)
        (fxarithmetic-shift . g$12788$sFNhI)
        (fxand . g$12787$sFNhI)
        (fx>? . g$12786$sFNhI)
        (fx>=? . g$12785$sFNhI)
        (fx=? . g$12784$sFNhI)
        (fx<? . g$12783$sFNhI)
        (fx<=? . g$12782$sFNhI)
        (fx-/carry . g$7339$sFNhI)
        (fx- . g$12781$sFNhI)
        (fx+/carry . g$7340$sFNhI)
        (fx+ . g$12780$sFNhI)
        (fx*/carry . g$7338$sFNhI)
        (fx* . g$12779$sFNhI)
        (greatest-fixnum . g$12778$sFNhI)
        (least-fixnum . g$12777$sFNhI)
        (fixnum-width . g$6406$sFNhI)
        (fixnum? . g$6404$sFNhI)
        (bitwise-rotate-bit-field . g$7301$sFNhI)
        (bitwise-reverse-bit-field . g$12776$sFNhI)
        (bitwise-length . g$12775$sFNhI)
        (bitwise-if . g$7295$sFNhI)
        (bitwise-first-bit-set . g$12774$sFNhI)
        (bitwise-copy-bit-field . g$7298$sFNhI)
        (bitwise-copy-bit . g$7296$sFNhI)
        (bitwise-bit-set? . g$12773$sFNhI)
        (bitwise-bit-field . g$7297$sFNhI)
        (bitwise-bit-count . g$12772$sFNhI)
        (bitwise-xor . g$12771$sFNhI)
        (bitwise-ior . g$12770$sFNhI)
        (bitwise-and . g$12769$sFNhI)
        (bitwise-not . g$12768$sFNhI)
        (bitwise-arithmetic-shift-right . g$7300$sFNhI)
        (bitwise-arithmetic-shift-left . g$7299$sFNhI)
        (bitwise-arithmetic-shift . g$12767$sFNhI)
        (zero? . g$6439$sFNhI)
        (vector? . g$6399$sFNhI)
        (vector-set! . g$12766$sFNhI)
        (vector-ref . g$12765$sFNhI)
        (vector-map . g$6533$sFNhI)
        (vector-length . g$12764$sFNhI)
        (vector-for-each . g$6534$sFNhI)
        (vector-fill! . g$6407$sFNhI)
        (vector->list . g$12763$sFNhI)
        (vector . g$12762$sFNhI)
        (values . g$12761$sFNhI)
        (truncate . g$12760$sFNhI)
        (tan . g$12759$sFNhI)
        (symbol? . g$6401$sFNhI)
        (symbol=? . g$6487$sFNhI)
        (symbol->string . g$12758$sFNhI)
        (substring . g$12757$sFNhI)
        (string? . g$12756$sFNhI)
        (string>? . g$6484$sFNhI)
        (string>=? . g$6486$sFNhI)
        (string=? . g$6482$sFNhI)
        (string<? . g$6483$sFNhI)
        (string<=? . g$6485$sFNhI)
        (string-ref . g$12755$sFNhI)
        (string-length . g$12754$sFNhI)
        (string-for-each . g$6535$sFNhI)
        (string-copy . g$12753$sFNhI)
        (string-append . g$12752$sFNhI)
        (string->symbol . g$12751$sFNhI)
        (string->number . g$12750$sFNhI)
        (string->list . g$12749$sFNhI)
        (string . g$12748$sFNhI)
        (sqrt . g$12747$sFNhI)
        (sin . g$12746$sFNhI)
        (round . g$12745$sFNhI)
        (reverse . g$6408$sFNhI)
        (real? . g$12744$sFNhI)
        (real-valued? . g$12743$sFNhI)
        (real-part . g$12742$sFNhI)
        (rationalize . g$6530$sFNhI)
        (rational? . g$12741$sFNhI)
        (rational-valued? . g$12740$sFNhI)
        (procedure? . g$6403$sFNhI)
        (positive? . g$6437$sFNhI)
        (pair? . g$12739$sFNhI)
        (odd? . g$6441$sFNhI)
        (numerator . g$12738$sFNhI)
        (number? . g$12737$sFNhI)
        (number->string . g$12736$sFNhI)
        (null? . g$12735$sFNhI)
        (not . g$12734$sFNhI)
        (negative? . g$6438$sFNhI)
        (nan? . g$12733$sFNhI)
        (min . g$6443$sFNhI)
        (max . g$6442$sFNhI)
        (map . g$5975$sFNhI)
        (make-vector . g$12732$sFNhI)
        (make-string . g$12731$sFNhI)
        (make-rectangular . g$12730$sFNhI)
        (make-polar . g$12729$sFNhI)
        (magnitude . g$12728$sFNhI)
        (log . g$12727$sFNhI)
        (list? . g$12726$sFNhI)
        (list-tail . g$5955$sFNhI)
        (list-ref . g$5956$sFNhI)
        (list->vector . g$6396$sFNhI)
        (list->string . g$6397$sFNhI)
        (list . g$12725$sFNhI)
        (length . g$12724$sFNhI)
        (lcm . g$6445$sFNhI)
        (integer? . g$12723$sFNhI)
        (integer-valued? . g$12722$sFNhI)
        (integer->char . g$12721$sFNhI)
        (infinite? . g$12720$sFNhI)
        (inexact? . g$12719$sFNhI)
        (inexact . g$12718$sFNhI)
        (imag-part . g$12717$sFNhI)
        (gcd . g$6444$sFNhI)
        (for-each . g$5976$sFNhI)
        (floor . g$12716$sFNhI)
        (finite? . g$12715$sFNhI)
        (expt . g$12714$sFNhI)
        (exp . g$12713$sFNhI)
        (exact? . g$12712$sFNhI)
        (exact-integer-sqrt . g$12711$sFNhI)
        (exact . g$12710$sFNhI)
        (even? . g$6440$sFNhI)
        (error . g$12709$sFNhI)
        (eqv? . g$12708$sFNhI)
        (equal? . g$12707$sFNhI)
        (eq? . g$12706$sFNhI)
        (dynamic-wind . g$12705$sFNhI)
        (div0-and-mod0 . g$12704$sFNhI)
        (mod0 . g$6395$sFNhI)
        (div0 . g$6393$sFNhI)
        (div-and-mod . g$12703$sFNhI)
        (mod . g$6394$sFNhI)
        (div . g$6392$sFNhI)
        (denominator . g$12702$sFNhI)
        (cos . g$12701$sFNhI)
        (cons . g$12700$sFNhI)
        (complex? . g$12699$sFNhI)
        (char? . g$6398$sFNhI)
        (char>? . g$6527$sFNhI)
        (char>=? . g$6529$sFNhI)
        (char=? . g$6525$sFNhI)
        (char<? . g$6526$sFNhI)
        (char<=? . g$6528$sFNhI)
        (char->integer . g$12698$sFNhI)
        (ceiling . g$12697$sFNhI)
        (call-with-values . g$12696$sFNhI)
        (call/cc . g$12695$sFNhI)
        (call-with-current-continuation . g$12694$sFNhI)
        (cddddr . g$6436$sFNhI)
        (cdddar . g$6435$sFNhI)
        (cddadr . g$6434$sFNhI)
        (cddaar . g$6433$sFNhI)
        (cdaddr . g$6432$sFNhI)
        (cdadar . g$6431$sFNhI)
        (cdaadr . g$6430$sFNhI)
        (cdaaar . g$6429$sFNhI)
        (cadddr . g$6428$sFNhI)
        (caddar . g$6427$sFNhI)
        (cadadr . g$6426$sFNhI)
        (cadaar . g$6425$sFNhI)
        (caaddr . g$6424$sFNhI)
        (caadar . g$6423$sFNhI)
        (caaadr . g$6422$sFNhI)
        (caaaar . g$6421$sFNhI)
        (cdddr . g$6420$sFNhI)
        (cddar . g$6419$sFNhI)
        (cdadr . g$6418$sFNhI)
        (cdaar . g$6417$sFNhI)
        (caddr . g$6416$sFNhI)
        (cadar . g$6415$sFNhI)
        (caadr . g$6414$sFNhI)
        (caaar . g$6413$sFNhI)
        (cddr . g$6412$sFNhI)
        (cdar . g$6411$sFNhI)
        (cadr . g$6410$sFNhI)
        (caar . g$6409$sFNhI)
        (cdr . g$12693$sFNhI)
        (car . g$12692$sFNhI)
        (boolean? . g$6402$sFNhI)
        (boolean=? . g$6488$sFNhI)
        (atan . g$12691$sFNhI)
        (assertion-violation . g$12690$sFNhI)
        (asin . g$12689$sFNhI)
        (apply . g$12688$sFNhI)
        (append . g$12687$sFNhI)
        (angle . g$12686$sFNhI)
        (acos . g$12685$sFNhI)
        (abs . g$12684$sFNhI)
        (/ . g$12683$sFNhI)
        (* . g$12682$sFNhI)
        (- . g$12681$sFNhI)
        (+ . g$12680$sFNhI)
        (>= . g$12679$sFNhI)
        (> . g$12678$sFNhI)
        (= . g$12677$sFNhI)
        (<= . g$12676$sFNhI)
        (< . g$12675$sFNhI)
        (deserialize-port . g$12671$sFNhI)
        (serialize-port . g$12670$sFNhI)
        (enum-set? . g$7822$sFNhI)
        (load/args . g$12492$sFNhI)
        (printf . g$7933$sFNhI)
        (fprintf . g$7934$sFNhI)
        (format . g$7935$sFNhI)
        (procedure-form . g$12669$sFNhI)
        (procedure-environment . g$12668$sFNhI)
        (procedure-name . g$12667$sFNhI)
        (procedure-arity . g$12666$sFNhI)
        (gc-collect . g$12665$sFNhI)
        (clr-type? . g$12664$sFNhI)
        (get-clr-type . g$12663$sFNhI)
        (vector-append . g$12661$sFNhI)
        (vector-filter . g$12660$sFNhI)
        (vector-reverse! . g$12659$sFNhI)
        (vector-contains? . g$12658$sFNhI)
        (vector-index-of . g$12657$sFNhI)
        (vector-copy . g$12656$sFNhI)
        (vector-binary-search . g$12655$sFNhI)
        (string-ci-compare . g$12654$sFNhI)
        (string-compare . g$12653$sFNhI)
        (string-format . g$12652$sFNhI)
        (trace-printer . g$12489$sFNhI)
        (time-it . g$12650$sFNhI)
        (make-parameter . g$8228$sFNhI)
        (open-tcp-input/output-port . g$12647$sFNhI)
        (hashtable-for-each . g$12646$sFNhI)
        (hashtable-map . g$12645$sFNhI)
        (environment-bindings . g$9466$sFNhI)
        (environment-symbols . g$9469$sFNhI)
        (interaction-environment-symbols . g$9465$sFNhI)
        (optimization-level . g$12644$sFNhI)
        (library-path . g$8639$sFNhI)
        (make-compile-time-value . g$9094$sFNhI)
        (expand->core . g$9475$sFNhI)
        (expand . g$9473$sFNhI)
        (convert->cps . g$8011$sFNhI)
        (installed-libraries . g$8660$sFNhI)
        (uninstall-library . g$8651$sFNhI)
        (&no-nans . g$12643$sFNhI)
        (&no-infinities . g$12642$sFNhI)
        (&i/o-encoding . g$12641$sFNhI)
        (&i/o-decoding . g$12640$sFNhI)
        (&i/o-port . g$12639$sFNhI)
        (&i/o-file-does-not-exist . g$12638$sFNhI)
        (&i/o-file-already-exists . g$12637$sFNhI)
        (&i/o-file-is-read-only . g$12636$sFNhI)
        (&i/o-file-protection . g$12635$sFNhI)
        (&i/o-filename . g$12634$sFNhI)
        (&i/o-invalid-position . g$12633$sFNhI)
        (&i/o-write . g$12632$sFNhI)
        (&i/o-read . g$12631$sFNhI)
        (&i/o . g$12630$sFNhI)
        (&non-continuable . g$12629$sFNhI)
        (&undefined . g$12628$sFNhI)
        (&syntax . g$12627$sFNhI)
        (&lexical . g$12626$sFNhI)
        (&implementation-restriction . g$12625$sFNhI)
        (&who . g$12624$sFNhI)
        (&irritants . g$12623$sFNhI)
        (&assertion . g$12622$sFNhI)
        (&violation . g$12621$sFNhI)
        (&error . g$12620$sFNhI)
        (&serious . g$12619$sFNhI)
        (&warning . g$12618$sFNhI)
        (&message . g$12617$sFNhI)
        (&condition . g$12616$sFNhI)
        (define-condition-type . g$12615$sFNhI)
        (define-enumeration . g$12614$sFNhI)
        (define-record-type . g$12613$sFNhI)
        (parent-rtd . g$12612$sFNhI)
        (nongenerative . g$12611$sFNhI)
        (opaque . g$12610$sFNhI)
        (sealed . g$12609$sFNhI)
        (protocol . g$12608$sFNhI)
        (parent . g$12607$sFNhI)
        (immutable . g$12606$sFNhI)
        (mutable . g$12605$sFNhI)
        (fields . g$12604$sFNhI)
        (error-handling-mode . g$12603$sFNhI)
        (file-options . g$12602$sFNhI)
        (buffer-mode . g$12601$sFNhI)
        (eol-style . g$12600$sFNhI)
        (guard . g$12599$sFNhI)
        (trace-letrec-syntax . g$12598$sFNhI)
        (trace-let-syntax . g$12597$sFNhI)
        (trace-define-syntax . g$12596$sFNhI)
        (trace-define . g$12595$sFNhI)
        (trace-lambda . g$12594$sFNhI)
        (unsyntax-splicing . g$12593$sFNhI)
        (unsyntax . g$12592$sFNhI)
        (unquote-splicing . g$12591$sFNhI)
        (unquote . g$12590$sFNhI)
        (_ . g$12589$sFNhI)
        (else . g$12588$sFNhI)
        (=> . g$12587$sFNhI)
        (... . g$12586$sFNhI)
        (assert . g$12585$sFNhI)
        (endianness . g$12584$sFNhI)
        (delay . g$12583$sFNhI)
        (time . g$12582$sFNhI)
        (or . g$12581$sFNhI)
        (and . g$12580$sFNhI)
        (do . g$12579$sFNhI)
        (cond . g$12578$sFNhI)
        (let* . g$12577$sFNhI)
        (let . g$12576$sFNhI)
        (identifier-syntax . g$12575$sFNhI)
        (with-syntax . g$12574$sFNhI)
        (quasisyntax . g$12573$sFNhI)
        (quasiquote . g$12572$sFNhI)
        (syntax-rules . g$12571$sFNhI)
        (include-into . g$12570$sFNhI)
        (include . g$12569$sFNhI)
        (let-values . g$12567$sFNhI)
        (let*-values . g$12566$sFNhI)
        (record-constructor-descriptor . g$12565$sFNhI)
        (record-type-descriptor . g$12564$sFNhI)
        (fluid-let-syntax . g$12563$sFNhI)
        (case . g$12562$sFNhI)
        (parameterize . g$12561$sFNhI)
        (unless . g$12560$sFNhI)
        (when . g$12559$sFNhI)
        (if . g$12558$sFNhI)
        (letrec* . g$12557$sFNhI)
        (letrec . g$12556$sFNhI)
        (case-lambda . g$12554$sFNhI)
        (lambda . g$12553$sFNhI)
        (syntax . g$12552$sFNhI)
        (syntax-case . g$12551$sFNhI)
        (quote . g$12550$sFNhI)
        (letrec-syntax . g$12548$sFNhI)
        (let-syntax . g$12547$sFNhI)
        (set! . g$12546$sFNhI)
        (export . g$12545$sFNhI)
        (import . g$12544$sFNhI)
        (library . g$12543$sFNhI)
        (begin . g$12542$sFNhI)
        (module . g$12541$sFNhI)
        (define-syntax . g$12540$sFNhI)
        (define . g$12539$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13064$sFNhI
      '(ironscheme library)
      '()
      '()
      '()
      '()
      '((get-library-paths . g$12648$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7934$sFNhI
      'g$13065$sFNhI
      '(ironscheme reader)
      '()
      '()
      '()
      '()
      '((annotation-stripped . g$13005$sFNhI)
        (annotation-source . g$13004$sFNhI)
        (annotation-expression . g$13003$sFNhI)
        (annotation? . g$13002$sFNhI)
        (read-annotated . g$13001$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7934$sFNhI
      'g$13066$sFNhI
      '(ironscheme serialization)
      '()
      '()
      '()
      '()
      '((load-serialized-library . g$12974$sFNhI)
        (serialize-library . g$12973$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7934$sFNhI
      'g$13067$sFNhI
      '(ironscheme core)
      '()
      '()
      '()
      '()
      '((string-normalize . g$12972$sFNhI)
        (variable-transformer-procedure . g$9096$sFNhI)
        (variable-transformer? . g$9095$sFNhI)
        (eqv-hash . g$12673$sFNhI)
        (reverse! . g$12672$sFNhI)
        (make-promise . g$7114$sFNhI)
        (format . g$7935$sFNhI)
        (get-command-line . g$12662$sFNhI)
        (make-traced-procedure . g$12651$sFNhI)
        (make-traced-macro . g$7955$sFNhI)
        (assertion-error . g$9488$sFNhI)
        (library-locator . g$12649$sFNhI)
        (get-library-paths . g$12648$sFNhI)
        (library-path . g$8639$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7934$sFNhI
      'g$13068$sFNhI
      '(ironscheme records printer)
      '()
      '()
      '()
      '()
      '((make-record-printer . g$12674$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13069$sFNhI
      '(ironscheme clr internal)
      '()
      '()
      '()
      '()
      '((define-clr-class-internal . g$12992$sFNhI)
        (clr-field-set!-internal . g$12991$sFNhI)
        (clr-field-get-internal . g$12990$sFNhI)
        (clr-cast-internal . g$12989$sFNhI)
        (clr-call-internal . g$12988$sFNhI)
        (clr-new-internal . g$12987$sFNhI)
        (clr-new-array-internal . g$12986$sFNhI)
        (clr-is-internal . g$12985$sFNhI)
        (clr-reference-internal . g$12984$sFNhI)
        (clr-using-internal . g$12983$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13070$sFNhI
      '(psyntax null-environment-5)
      '()
      '()
      '()
      '()
      '((unquote-splicing . g$12591$sFNhI)
        (unquote . g$12590$sFNhI)
        (else . g$12588$sFNhI)
        (=> . g$12587$sFNhI)
        (delay . g$12583$sFNhI)
        (or . g$12581$sFNhI)
        (and . g$12580$sFNhI)
        (do . g$12579$sFNhI)
        (cond . g$12578$sFNhI)
        (let* . g$12577$sFNhI)
        (let . g$12576$sFNhI)
        (quasiquote . g$12572$sFNhI)
        (syntax-rules . g$12571$sFNhI)
        (case . g$12562$sFNhI)
        (if . g$12558$sFNhI)
        (letrec . g$12556$sFNhI)
        (lambda . g$12553$sFNhI)
        (quote . g$12550$sFNhI)
        (letrec-syntax . g$12548$sFNhI)
        (let-syntax . g$12547$sFNhI)
        (set! . g$12546$sFNhI)
        (begin . g$12542$sFNhI)
        (define-syntax . g$12540$sFNhI)
        (define . g$12539$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7934$sFNhI
      'g$13071$sFNhI
      '(psyntax scheme-report-environment-5)
      '()
      '()
      '()
      '()
      '((char-ready? . g$12971$sFNhI)
        (string-ci>? . g$7192$sFNhI)
        (string-ci>=? . g$7194$sFNhI)
        (string-ci=? . g$7190$sFNhI)
        (string-ci<? . g$7191$sFNhI)
        (string-ci<=? . g$7193$sFNhI)
        (char-whitespace? . g$12966$sFNhI)
        (char-upper-case? . g$12965$sFNhI)
        (char-numeric? . g$12963$sFNhI)
        (char-lower-case? . g$12962$sFNhI)
        (char-upcase . g$12960$sFNhI)
        (char-downcase . g$12957$sFNhI)
        (char-ci>? . g$7231$sFNhI)
        (char-ci>=? . g$7233$sFNhI)
        (char-ci=? . g$7229$sFNhI)
        (char-ci<? . g$7230$sFNhI)
        (char-ci<=? . g$7232$sFNhI)
        (char-alphabetic? . g$12956$sFNhI)
        (call-with-output-file . g$7782$sFNhI)
        (call-with-input-file . g$7781$sFNhI)
        (write-char . g$7763$sFNhI)
        (write . g$12924$sFNhI)
        (with-output-to-file . g$7780$sFNhI)
        (with-input-from-file . g$7779$sFNhI)
        (read-char . g$7762$sFNhI)
        (read . g$12923$sFNhI)
        (peek-char . g$7761$sFNhI)
        (open-output-file . g$12922$sFNhI)
        (open-input-file . g$12921$sFNhI)
        (newline . g$7783$sFNhI)
        (display . g$12920$sFNhI)
        (close-output-port . g$12919$sFNhI)
        (close-input-port . g$12918$sFNhI)
        (eof-object? . g$12917$sFNhI)
        (current-error-port . g$12915$sFNhI)
        (current-output-port . g$12914$sFNhI)
        (current-input-port . g$12913$sFNhI)
        (output-port? . g$12912$sFNhI)
        (input-port? . g$12911$sFNhI)
        (scheme-report-environment . g$9472$sFNhI)
        (quotient . g$7111$sFNhI)
        (null-environment . g$9471$sFNhI)
        (remainder . g$7112$sFNhI)
        (modulo . g$7113$sFNhI)
        (inexact->exact . g$7108$sFNhI)
        (force . g$7115$sFNhI)
        (exact->inexact . g$7109$sFNhI)
        (string-fill! . g$12852$sFNhI)
        (string-set! . g$12851$sFNhI)
        (set-cdr! . g$12850$sFNhI)
        (set-car! . g$12849$sFNhI)
        (memv . g$5968$sFNhI)
        (memq . g$5967$sFNhI)
        (member . g$5969$sFNhI)
        (assv . g$5964$sFNhI)
        (assq . g$5963$sFNhI)
        (assoc . g$5965$sFNhI)
        (eval . g$9474$sFNhI)
        (zero? . g$6439$sFNhI)
        (vector? . g$6399$sFNhI)
        (vector-set! . g$12766$sFNhI)
        (vector-ref . g$12765$sFNhI)
        (vector-length . g$12764$sFNhI)
        (vector-fill! . g$6407$sFNhI)
        (vector->list . g$12763$sFNhI)
        (vector . g$12762$sFNhI)
        (values . g$12761$sFNhI)
        (truncate . g$12760$sFNhI)
        (tan . g$12759$sFNhI)
        (symbol? . g$6401$sFNhI)
        (symbol->string . g$12758$sFNhI)
        (substring . g$12757$sFNhI)
        (string? . g$12756$sFNhI)
        (string>? . g$6484$sFNhI)
        (string>=? . g$6486$sFNhI)
        (string=? . g$6482$sFNhI)
        (string<? . g$6483$sFNhI)
        (string<=? . g$6485$sFNhI)
        (string-ref . g$12755$sFNhI)
        (string-length . g$12754$sFNhI)
        (string-copy . g$12753$sFNhI)
        (string-append . g$12752$sFNhI)
        (string->symbol . g$12751$sFNhI)
        (string->number . g$12750$sFNhI)
        (string->list . g$12749$sFNhI)
        (string . g$12748$sFNhI)
        (sqrt . g$12747$sFNhI)
        (sin . g$12746$sFNhI)
        (round . g$12745$sFNhI)
        (reverse . g$6408$sFNhI)
        (real? . g$12744$sFNhI)
        (real-part . g$12742$sFNhI)
        (rationalize . g$6530$sFNhI)
        (rational? . g$12741$sFNhI)
        (procedure? . g$6403$sFNhI)
        (positive? . g$6437$sFNhI)
        (pair? . g$12739$sFNhI)
        (odd? . g$6441$sFNhI)
        (numerator . g$12738$sFNhI)
        (number? . g$12737$sFNhI)
        (number->string . g$12736$sFNhI)
        (null? . g$12735$sFNhI)
        (not . g$12734$sFNhI)
        (negative? . g$6438$sFNhI)
        (min . g$6443$sFNhI)
        (max . g$6442$sFNhI)
        (map . g$5975$sFNhI)
        (make-vector . g$12732$sFNhI)
        (make-string . g$12731$sFNhI)
        (make-rectangular . g$12730$sFNhI)
        (make-polar . g$12729$sFNhI)
        (magnitude . g$12728$sFNhI)
        (log . g$12727$sFNhI)
        (list? . g$12726$sFNhI)
        (list-tail . g$5955$sFNhI)
        (list-ref . g$5956$sFNhI)
        (list->vector . g$6396$sFNhI)
        (list->string . g$6397$sFNhI)
        (list . g$12725$sFNhI)
        (length . g$12724$sFNhI)
        (lcm . g$6445$sFNhI)
        (integer? . g$12723$sFNhI)
        (integer->char . g$12721$sFNhI)
        (inexact? . g$12719$sFNhI)
        (imag-part . g$12717$sFNhI)
        (gcd . g$6444$sFNhI)
        (for-each . g$5976$sFNhI)
        (floor . g$12716$sFNhI)
        (expt . g$12714$sFNhI)
        (exp . g$12713$sFNhI)
        (exact? . g$12712$sFNhI)
        (even? . g$6440$sFNhI)
        (eqv? . g$12708$sFNhI)
        (equal? . g$12707$sFNhI)
        (eq? . g$12706$sFNhI)
        (dynamic-wind . g$12705$sFNhI)
        (denominator . g$12702$sFNhI)
        (cos . g$12701$sFNhI)
        (cons . g$12700$sFNhI)
        (complex? . g$12699$sFNhI)
        (char? . g$6398$sFNhI)
        (char>? . g$6527$sFNhI)
        (char>=? . g$6529$sFNhI)
        (char=? . g$6525$sFNhI)
        (char<? . g$6526$sFNhI)
        (char<=? . g$6528$sFNhI)
        (char->integer . g$12698$sFNhI)
        (ceiling . g$12697$sFNhI)
        (call-with-values . g$12696$sFNhI)
        (call-with-current-continuation . g$12694$sFNhI)
        (cddddr . g$6436$sFNhI)
        (cdddar . g$6435$sFNhI)
        (cddadr . g$6434$sFNhI)
        (cddaar . g$6433$sFNhI)
        (cdaddr . g$6432$sFNhI)
        (cdadar . g$6431$sFNhI)
        (cdaadr . g$6430$sFNhI)
        (cdaaar . g$6429$sFNhI)
        (cadddr . g$6428$sFNhI)
        (caddar . g$6427$sFNhI)
        (cadadr . g$6426$sFNhI)
        (cadaar . g$6425$sFNhI)
        (caaddr . g$6424$sFNhI)
        (caadar . g$6423$sFNhI)
        (caaadr . g$6422$sFNhI)
        (caaaar . g$6421$sFNhI)
        (cdddr . g$6420$sFNhI)
        (cddar . g$6419$sFNhI)
        (cdadr . g$6418$sFNhI)
        (cdaar . g$6417$sFNhI)
        (caddr . g$6416$sFNhI)
        (cadar . g$6415$sFNhI)
        (caadr . g$6414$sFNhI)
        (caaar . g$6413$sFNhI)
        (cddr . g$6412$sFNhI)
        (cdar . g$6411$sFNhI)
        (cadr . g$6410$sFNhI)
        (caar . g$6409$sFNhI)
        (cdr . g$12693$sFNhI)
        (car . g$12692$sFNhI)
        (boolean? . g$6402$sFNhI)
        (atan . g$12691$sFNhI)
        (asin . g$12689$sFNhI)
        (apply . g$12688$sFNhI)
        (append . g$12687$sFNhI)
        (angle . g$12686$sFNhI)
        (acos . g$12685$sFNhI)
        (abs . g$12684$sFNhI)
        (/ . g$12683$sFNhI)
        (* . g$12682$sFNhI)
        (- . g$12681$sFNhI)
        (+ . g$12680$sFNhI)
        (>= . g$12679$sFNhI)
        (> . g$12678$sFNhI)
        (= . g$12677$sFNhI)
        (<= . g$12676$sFNhI)
        (< . g$12675$sFNhI)
        (unquote-splicing . g$12591$sFNhI)
        (unquote . g$12590$sFNhI)
        (else . g$12588$sFNhI)
        (=> . g$12587$sFNhI)
        (... . g$12586$sFNhI)
        (delay . g$12583$sFNhI)
        (or . g$12581$sFNhI)
        (and . g$12580$sFNhI)
        (do . g$12579$sFNhI)
        (cond . g$12578$sFNhI)
        (let* . g$12577$sFNhI)
        (let . g$12576$sFNhI)
        (quasiquote . g$12572$sFNhI)
        (syntax-rules . g$12571$sFNhI)
        (case . g$12562$sFNhI)
        (if . g$12558$sFNhI)
        (letrec . g$12556$sFNhI)
        (lambda . g$12553$sFNhI)
        (quote . g$12550$sFNhI)
        (letrec-syntax . g$12548$sFNhI)
        (let-syntax . g$12547$sFNhI)
        (set! . g$12546$sFNhI)
        (begin . g$12542$sFNhI)
        (define-syntax . g$12540$sFNhI)
        (define . g$12539$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7934$sFNhI
      'g$13072$sFNhI
      '(rnrs)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12970$sFNhI)
        (string-titlecase . g$12969$sFNhI)
        (string-normalize-nfkd . g$7237$sFNhI)
        (string-normalize-nfkc . g$7236$sFNhI)
        (string-normalize-nfd . g$7235$sFNhI)
        (string-normalize-nfc . g$7234$sFNhI)
        (string-foldcase . g$12968$sFNhI)
        (string-downcase . g$12967$sFNhI)
        (string-ci>? . g$7192$sFNhI)
        (string-ci>=? . g$7194$sFNhI)
        (string-ci=? . g$7190$sFNhI)
        (string-ci<? . g$7191$sFNhI)
        (string-ci<=? . g$7193$sFNhI)
        (char-whitespace? . g$12966$sFNhI)
        (char-upper-case? . g$12965$sFNhI)
        (char-title-case? . g$12964$sFNhI)
        (char-numeric? . g$12963$sFNhI)
        (char-lower-case? . g$12962$sFNhI)
        (char-general-category . g$12961$sFNhI)
        (char-upcase . g$12960$sFNhI)
        (char-titlecase . g$12959$sFNhI)
        (char-foldcase . g$12958$sFNhI)
        (char-downcase . g$12957$sFNhI)
        (char-ci>? . g$7231$sFNhI)
        (char-ci>=? . g$7233$sFNhI)
        (char-ci=? . g$7229$sFNhI)
        (char-ci<? . g$7230$sFNhI)
        (char-ci<=? . g$7232$sFNhI)
        (char-alphabetic? . g$12956$sFNhI)
        (make-variable-transformer . g$9093$sFNhI)
        (identifier? . g$9493$sFNhI)
        (generate-temporaries . g$9482$sFNhI)
        (free-identifier=? . g$9483$sFNhI)
        (syntax->datum . g$9495$sFNhI)
        (datum->syntax . g$9494$sFNhI)
        (bound-identifier=? . g$9484$sFNhI)
        (record-type-descriptor? . g$12955$sFNhI)
        (record-predicate . g$12954$sFNhI)
        (record-mutator . g$12953$sFNhI)
        (record-constructor . g$12952$sFNhI)
        (record-accessor . g$12951$sFNhI)
        (make-record-type-descriptor . g$12950$sFNhI)
        (make-record-constructor-descriptor . g$12949$sFNhI)
        (record? . g$12948$sFNhI)
        (record-type-uid . g$12947$sFNhI)
        (record-type-sealed? . g$12946$sFNhI)
        (record-type-parent . g$12945$sFNhI)
        (record-type-opaque? . g$12944$sFNhI)
        (record-type-name . g$12943$sFNhI)
        (record-type-generative? . g$12942$sFNhI)
        (record-type-field-names . g$12941$sFNhI)
        (record-rtd . g$12940$sFNhI)
        (record-field-mutable? . g$12939$sFNhI)
        (delete-file . g$6766$sFNhI)
        (file-exists? . g$6765$sFNhI)
        (vector-sort! . g$12938$sFNhI)
        (vector-sort . g$12937$sFNhI)
        (list-sort . g$7132$sFNhI)
        (symbol-hash . g$12936$sFNhI)
        (string-ci-hash . g$12935$sFNhI)
        (string-hash . g$12934$sFNhI)
        (equal-hash . g$12933$sFNhI)
        (hashtable-equivalence-function . g$12932$sFNhI)
        (make-hashtable . g$12931$sFNhI)
        (hashtable-hash-function . g$12930$sFNhI)
        (make-eqv-hashtable . g$6734$sFNhI)
        (make-eq-hashtable . g$6733$sFNhI)
        (hashtable? . g$12929$sFNhI)
        (hashtable-update! . g$6740$sFNhI)
        (hashtable-size . g$6735$sFNhI)
        (hashtable-set! . g$6737$sFNhI)
        (hashtable-ref . g$6736$sFNhI)
        (hashtable-mutable? . g$12928$sFNhI)
        (hashtable-keys . g$12927$sFNhI)
        (hashtable-entries . g$12926$sFNhI)
        (hashtable-delete! . g$6738$sFNhI)
        (hashtable-copy . g$12925$sFNhI)
        (hashtable-contains? . g$6739$sFNhI)
        (hashtable-clear! . g$6741$sFNhI)
        (call-with-output-file . g$7782$sFNhI)
        (call-with-input-file . g$7781$sFNhI)
        (write-char . g$7763$sFNhI)
        (write . g$12924$sFNhI)
        (with-output-to-file . g$7780$sFNhI)
        (with-input-from-file . g$7779$sFNhI)
        (read-char . g$7762$sFNhI)
        (read . g$12923$sFNhI)
        (peek-char . g$7761$sFNhI)
        (open-output-file . g$12922$sFNhI)
        (open-input-file . g$12921$sFNhI)
        (newline . g$7783$sFNhI)
        (display . g$12920$sFNhI)
        (close-output-port . g$12919$sFNhI)
        (close-input-port . g$12918$sFNhI)
        (eof-object? . g$12917$sFNhI)
        (eof-object . g$12916$sFNhI)
        (current-error-port . g$12915$sFNhI)
        (current-output-port . g$12914$sFNhI)
        (current-input-port . g$12913$sFNhI)
        (output-port? . g$12912$sFNhI)
        (input-port? . g$12911$sFNhI)
        (utf-8-codec . g$12910$sFNhI)
        (utf-16-codec . g$12909$sFNhI)
        (transcoder-error-handling-mode . g$12908$sFNhI)
        (transcoder-eol-style . g$12907$sFNhI)
        (transcoder-codec . g$12906$sFNhI)
        (transcoded-port . g$12905$sFNhI)
        (textual-port? . g$12904$sFNhI)
        (string->bytevector . g$12903$sFNhI)
        (standard-output-port . g$12902$sFNhI)
        (standard-input-port . g$12901$sFNhI)
        (standard-error-port . g$12900$sFNhI)
        (set-port-position! . g$12899$sFNhI)
        (put-u8 . g$12898$sFNhI)
        (put-string . g$12897$sFNhI)
        (put-datum . g$7741$sFNhI)
        (put-char . g$12896$sFNhI)
        (put-bytevector . g$12895$sFNhI)
        (port? . g$7746$sFNhI)
        (port-transcoder . g$12894$sFNhI)
        (port-position . g$12893$sFNhI)
        (port-has-set-port-position!? . g$12892$sFNhI)
        (port-has-port-position? . g$12891$sFNhI)
        (port-eof? . g$12890$sFNhI)
        (output-port-buffer-mode . g$12889$sFNhI)
        (open-string-output-port . g$7745$sFNhI)
        (open-string-input-port . g$12888$sFNhI)
        (open-file-output-port . g$12887$sFNhI)
        (open-file-input/output-port . g$12886$sFNhI)
        (open-file-input-port . g$12885$sFNhI)
        (open-bytevector-output-port . g$12884$sFNhI)
        (open-bytevector-input-port . g$12883$sFNhI)
        (native-transcoder . g$12882$sFNhI)
        (native-eol-style . g$12881$sFNhI)
        (make-transcoder . g$12880$sFNhI)
        (latin-1-codec . g$12879$sFNhI)
        (make-i/o-write-error . g$7599$sFNhI)
        (make-i/o-read-error . g$7585$sFNhI)
        (make-i/o-port-error . g$7704$sFNhI)
        (make-i/o-invalid-position-error . g$7614$sFNhI)
        (make-i/o-filename-error . g$7631$sFNhI)
        (make-i/o-file-protection-error . g$7647$sFNhI)
        (make-i/o-file-is-read-only-error . g$7661$sFNhI)
        (make-i/o-file-does-not-exist-error . g$7689$sFNhI)
        (make-i/o-file-already-exists-error . g$7675$sFNhI)
        (make-i/o-error . g$7571$sFNhI)
        (make-i/o-encoding-error . g$7735$sFNhI)
        (make-i/o-decoding-error . g$7720$sFNhI)
        (make-custom-textual-output-port . g$12878$sFNhI)
        (make-custom-textual-input/output-port . g$12877$sFNhI)
        (make-custom-textual-input-port . g$12876$sFNhI)
        (make-custom-binary-output-port . g$12875$sFNhI)
        (make-custom-binary-input/output-port . g$12874$sFNhI)
        (make-custom-binary-input-port . g$12873$sFNhI)
        (make-bytevector . g$12872$sFNhI)
        (lookahead-u8 . g$12871$sFNhI)
        (lookahead-char . g$12870$sFNhI)
        (i/o-write-error? . g$7600$sFNhI)
        (i/o-read-error? . g$7586$sFNhI)
        (i/o-port-error? . g$7706$sFNhI)
        (i/o-invalid-position-error? . g$7616$sFNhI)
        (i/o-error-position . g$7617$sFNhI)
        (i/o-filename-error? . g$7633$sFNhI)
        (i/o-file-protection-error? . g$7648$sFNhI)
        (i/o-file-is-read-only-error? . g$7662$sFNhI)
        (i/o-file-does-not-exist-error? . g$7690$sFNhI)
        (i/o-file-already-exists-error? . g$7676$sFNhI)
        (i/o-error? . g$7572$sFNhI)
        (i/o-error-port . g$7707$sFNhI)
        (i/o-error-filename . g$7634$sFNhI)
        (i/o-encoding-error? . g$7737$sFNhI)
        (i/o-encoding-error-char . g$7738$sFNhI)
        (i/o-decoding-error? . g$7721$sFNhI)
        (get-u8 . g$12869$sFNhI)
        (get-string-n! . g$12868$sFNhI)
        (get-string-n . g$12867$sFNhI)
        (get-string-all . g$12866$sFNhI)
        (get-line . g$12865$sFNhI)
        (get-datum . g$7742$sFNhI)
        (get-char . g$12864$sFNhI)
        (get-bytevector-some . g$12863$sFNhI)
        (get-bytevector-n! . g$12862$sFNhI)
        (get-bytevector-n . g$12861$sFNhI)
        (get-bytevector-all . g$12860$sFNhI)
        (flush-output-port . g$12859$sFNhI)
        (close-port . g$12858$sFNhI)
        (call-with-string-output-port . g$7747$sFNhI)
        (call-with-port . g$7748$sFNhI)
        (call-with-bytevector-output-port . g$12857$sFNhI)
        (bytevector->string . g$12856$sFNhI)
        (buffer-mode? . g$12855$sFNhI)
        (binary-port? . g$12854$sFNhI)
        (exit . g$12853$sFNhI)
        (command-line . g$12490$sFNhI)
        (remove . g$5980$sFNhI)
        (remv . g$5981$sFNhI)
        (remp . g$5961$sFNhI)
        (remq . g$5982$sFNhI)
        (partition . g$5960$sFNhI)
        (memv . g$5968$sFNhI)
        (memq . g$5967$sFNhI)
        (memp . g$5970$sFNhI)
        (member . g$5969$sFNhI)
        (exists . g$5974$sFNhI)
        (for-all . g$5973$sFNhI)
        (fold-right . g$5979$sFNhI)
        (fold-left . g$5978$sFNhI)
        (find . g$5959$sFNhI)
        (filter . g$5962$sFNhI)
        (cons* . g$5977$sFNhI)
        (assv . g$5964$sFNhI)
        (assq . g$5963$sFNhI)
        (assp . g$5966$sFNhI)
        (assoc . g$5965$sFNhI)
        (with-exception-handler . g$12848$sFNhI)
        (raise-continuable . g$12847$sFNhI)
        (raise . g$12846$sFNhI)
        (make-enumeration . g$7847$sFNhI)
        (enum-set=? . g$7854$sFNhI)
        (enum-set-universe . g$7848$sFNhI)
        (enum-set-union . g$7855$sFNhI)
        (enum-set-subset? . g$7853$sFNhI)
        (enum-set-projection . g$7859$sFNhI)
        (enum-set-member? . g$7852$sFNhI)
        (enum-set-intersection . g$7856$sFNhI)
        (enum-set-indexer . g$7849$sFNhI)
        (enum-set-difference . g$7857$sFNhI)
        (enum-set-constructor . g$7850$sFNhI)
        (enum-set-complement . g$7858$sFNhI)
        (enum-set->list . g$7851$sFNhI)
        (who-condition? . g$7020$sFNhI)
        (warning? . g$6931$sFNhI)
        (violation? . g$6973$sFNhI)
        (undefined-violation? . g$7097$sFNhI)
        (syntax-violation? . g$7081$sFNhI)
        (syntax-violation-subform . g$7083$sFNhI)
        (syntax-violation-form . g$7082$sFNhI)
        (syntax-violation . g$9492$sFNhI)
        (simple-conditions . g$12845$sFNhI)
        (serious-condition? . g$6945$sFNhI)
        (non-continuable-violation? . g$7035$sFNhI)
        (message-condition? . g$6916$sFNhI)
        (make-who-condition . g$7018$sFNhI)
        (make-warning . g$6930$sFNhI)
        (make-violation . g$6972$sFNhI)
        (make-undefined-violation . g$7096$sFNhI)
        (make-syntax-violation . g$7078$sFNhI)
        (make-serious-condition . g$6944$sFNhI)
        (make-non-continuable-violation . g$7034$sFNhI)
        (make-message-condition . g$6914$sFNhI)
        (make-lexical-violation . g$7062$sFNhI)
        (make-irritants-condition . g$7001$sFNhI)
        (make-implementation-restriction-violation . g$7048$sFNhI)
        (make-error . g$6958$sFNhI)
        (make-assertion-violation . g$6986$sFNhI)
        (lexical-violation? . g$7063$sFNhI)
        (irritants-condition? . g$7003$sFNhI)
        (implementation-restriction-violation? . g$7049$sFNhI)
        (error? . g$6959$sFNhI)
        (condition-who . g$7021$sFNhI)
        (condition-predicate . g$12844$sFNhI)
        (condition-message . g$6917$sFNhI)
        (condition-irritants . g$7004$sFNhI)
        (condition-accessor . g$12843$sFNhI)
        (condition . g$12842$sFNhI)
        (assertion-violation? . g$6987$sFNhI)
        (condition? . g$12841$sFNhI)
        (utf32->string . g$12840$sFNhI)
        (utf16->string . g$12839$sFNhI)
        (utf8->string . g$12838$sFNhI)
        (uint-list->bytevector . g$12837$sFNhI)
        (u8-list->bytevector . g$12836$sFNhI)
        (string->utf8 . g$12835$sFNhI)
        (string->utf32 . g$12834$sFNhI)
        (string->utf16 . g$12833$sFNhI)
        (sint-list->bytevector . g$12832$sFNhI)
        (native-endianness . g$6772$sFNhI)
        (bytevector? . g$6400$sFNhI)
        (bytevector=? . g$12831$sFNhI)
        (bytevector-uint-set! . g$12830$sFNhI)
        (bytevector-uint-ref . g$12829$sFNhI)
        (bytevector-u8-set! . g$12828$sFNhI)
        (bytevector-u8-ref . g$12827$sFNhI)
        (bytevector-u64-set! . g$6793$sFNhI)
        (bytevector-u64-ref . g$6789$sFNhI)
        (bytevector-u64-native-set! . g$6795$sFNhI)
        (bytevector-u64-native-ref . g$6791$sFNhI)
        (bytevector-u32-set! . g$6785$sFNhI)
        (bytevector-u32-ref . g$6781$sFNhI)
        (bytevector-u32-native-set! . g$6787$sFNhI)
        (bytevector-u32-native-ref . g$6783$sFNhI)
        (bytevector-u16-set! . g$6777$sFNhI)
        (bytevector-u16-ref . g$6773$sFNhI)
        (bytevector-u16-native-set! . g$6779$sFNhI)
        (bytevector-u16-native-ref . g$6775$sFNhI)
        (bytevector-sint-set! . g$12826$sFNhI)
        (bytevector-sint-ref . g$12825$sFNhI)
        (bytevector-s8-set! . g$12824$sFNhI)
        (bytevector-s8-ref . g$12823$sFNhI)
        (bytevector-s64-set! . g$6794$sFNhI)
        (bytevector-s64-ref . g$6790$sFNhI)
        (bytevector-s64-native-set! . g$6796$sFNhI)
        (bytevector-s64-native-ref . g$6792$sFNhI)
        (bytevector-s32-set! . g$6786$sFNhI)
        (bytevector-s32-ref . g$6782$sFNhI)
        (bytevector-s32-native-set! . g$6788$sFNhI)
        (bytevector-s32-native-ref . g$6784$sFNhI)
        (bytevector-s16-set! . g$6778$sFNhI)
        (bytevector-s16-ref . g$6774$sFNhI)
        (bytevector-s16-native-set! . g$6780$sFNhI)
        (bytevector-s16-native-ref . g$6776$sFNhI)
        (bytevector-length . g$12822$sFNhI)
        (bytevector-ieee-single-set! . g$12821$sFNhI)
        (bytevector-ieee-single-ref . g$12820$sFNhI)
        (bytevector-ieee-single-native-set! . g$6799$sFNhI)
        (bytevector-ieee-single-native-ref . g$6797$sFNhI)
        (bytevector-ieee-double-set! . g$12819$sFNhI)
        (bytevector-ieee-double-ref . g$12818$sFNhI)
        (bytevector-ieee-double-native-set! . g$6800$sFNhI)
        (bytevector-ieee-double-native-ref . g$6798$sFNhI)
        (bytevector-fill! . g$12817$sFNhI)
        (bytevector-copy! . g$12816$sFNhI)
        (bytevector-copy . g$12815$sFNhI)
        (bytevector->uint-list . g$12814$sFNhI)
        (bytevector->u8-list . g$12813$sFNhI)
        (bytevector->sint-list . g$12812$sFNhI)
        (no-nans-violation? . g$7484$sFNhI)
        (no-infinities-violation? . g$7470$sFNhI)
        (make-no-nans-violation . g$7483$sFNhI)
        (make-no-infinities-violation . g$7469$sFNhI)
        (real->flonum . g$12811$sFNhI)
        (flzero? . g$7452$sFNhI)
        (fltruncate . g$7447$sFNhI)
        (fltan . g$7437$sFNhI)
        (flsqrt . g$7442$sFNhI)
        (flsin . g$7435$sFNhI)
        (flround . g$7448$sFNhI)
        (flpositive? . g$7450$sFNhI)
        (flonum? . g$6405$sFNhI)
        (flodd? . g$7454$sFNhI)
        (flnumerator . g$12810$sFNhI)
        (flnegative? . g$7451$sFNhI)
        (flnan? . g$7434$sFNhI)
        (flmod0 . g$7430$sFNhI)
        (flmod . g$7429$sFNhI)
        (flmin . g$7456$sFNhI)
        (flmax . g$7455$sFNhI)
        (fllog . g$7441$sFNhI)
        (flinteger? . g$7431$sFNhI)
        (flinfinite? . g$7433$sFNhI)
        (flfloor . g$7446$sFNhI)
        (flfinite? . g$7432$sFNhI)
        (flexpt . g$7444$sFNhI)
        (flexp . g$7443$sFNhI)
        (fleven? . g$7453$sFNhI)
        (fldiv0-and-mod0 . g$7426$sFNhI)
        (fldiv0 . g$7428$sFNhI)
        (fldiv-and-mod . g$7425$sFNhI)
        (fldiv . g$7427$sFNhI)
        (fldenominator . g$12809$sFNhI)
        (flcos . g$7436$sFNhI)
        (flceiling . g$7445$sFNhI)
        (flatan . g$7440$sFNhI)
        (flasin . g$7438$sFNhI)
        (flacos . g$7439$sFNhI)
        (flabs . g$7449$sFNhI)
        (fl>? . g$12808$sFNhI)
        (fl>=? . g$12807$sFNhI)
        (fl=? . g$12806$sFNhI)
        (fl<? . g$12805$sFNhI)
        (fl<=? . g$12804$sFNhI)
        (fl/ . g$12803$sFNhI)
        (fl- . g$12802$sFNhI)
        (fl+ . g$12801$sFNhI)
        (fl* . g$12800$sFNhI)
        (fixnum->flonum . g$12799$sFNhI)
        (fxzero? . g$7333$sFNhI)
        (fxxor . g$12798$sFNhI)
        (fxrotate-bit-field . g$7347$sFNhI)
        (fxreverse-bit-field . g$12797$sFNhI)
        (fxpositive? . g$7331$sFNhI)
        (fxodd? . g$7335$sFNhI)
        (fxnot . g$12796$sFNhI)
        (fxnegative? . g$7332$sFNhI)
        (fxmod0 . g$7330$sFNhI)
        (fxmod . g$7329$sFNhI)
        (fxmin . g$7337$sFNhI)
        (fxmax . g$7336$sFNhI)
        (fxlength . g$12795$sFNhI)
        (fxior . g$12794$sFNhI)
        (fxif . g$7341$sFNhI)
        (fxfirst-bit-set . g$12793$sFNhI)
        (fxeven? . g$7334$sFNhI)
        (fxdiv0-and-mod0 . g$12792$sFNhI)
        (fxdiv0 . g$7328$sFNhI)
        (fxdiv-and-mod . g$12791$sFNhI)
        (fxdiv . g$7327$sFNhI)
        (fxcopy-bit-field . g$7344$sFNhI)
        (fxcopy-bit . g$7342$sFNhI)
        (fxbit-set? . g$12790$sFNhI)
        (fxbit-field . g$7343$sFNhI)
        (fxbit-count . g$12789$sFNhI)
        (fxarithmetic-shift-right . g$7346$sFNhI)
        (fxarithmetic-shift-left . g$7345$sFNhI)
        (fxarithmetic-shift . g$12788$sFNhI)
        (fxand . g$12787$sFNhI)
        (fx>? . g$12786$sFNhI)
        (fx>=? . g$12785$sFNhI)
        (fx=? . g$12784$sFNhI)
        (fx<? . g$12783$sFNhI)
        (fx<=? . g$12782$sFNhI)
        (fx-/carry . g$7339$sFNhI)
        (fx- . g$12781$sFNhI)
        (fx+/carry . g$7340$sFNhI)
        (fx+ . g$12780$sFNhI)
        (fx*/carry . g$7338$sFNhI)
        (fx* . g$12779$sFNhI)
        (greatest-fixnum . g$12778$sFNhI)
        (least-fixnum . g$12777$sFNhI)
        (fixnum-width . g$6406$sFNhI)
        (fixnum? . g$6404$sFNhI)
        (bitwise-rotate-bit-field . g$7301$sFNhI)
        (bitwise-reverse-bit-field . g$12776$sFNhI)
        (bitwise-length . g$12775$sFNhI)
        (bitwise-if . g$7295$sFNhI)
        (bitwise-first-bit-set . g$12774$sFNhI)
        (bitwise-copy-bit-field . g$7298$sFNhI)
        (bitwise-copy-bit . g$7296$sFNhI)
        (bitwise-bit-set? . g$12773$sFNhI)
        (bitwise-bit-field . g$7297$sFNhI)
        (bitwise-bit-count . g$12772$sFNhI)
        (bitwise-xor . g$12771$sFNhI)
        (bitwise-ior . g$12770$sFNhI)
        (bitwise-and . g$12769$sFNhI)
        (bitwise-not . g$12768$sFNhI)
        (bitwise-arithmetic-shift-right . g$7300$sFNhI)
        (bitwise-arithmetic-shift-left . g$7299$sFNhI)
        (bitwise-arithmetic-shift . g$12767$sFNhI)
        (zero? . g$6439$sFNhI)
        (vector? . g$6399$sFNhI)
        (vector-set! . g$12766$sFNhI)
        (vector-ref . g$12765$sFNhI)
        (vector-map . g$6533$sFNhI)
        (vector-length . g$12764$sFNhI)
        (vector-for-each . g$6534$sFNhI)
        (vector-fill! . g$6407$sFNhI)
        (vector->list . g$12763$sFNhI)
        (vector . g$12762$sFNhI)
        (values . g$12761$sFNhI)
        (truncate . g$12760$sFNhI)
        (tan . g$12759$sFNhI)
        (symbol? . g$6401$sFNhI)
        (symbol=? . g$6487$sFNhI)
        (symbol->string . g$12758$sFNhI)
        (substring . g$12757$sFNhI)
        (string? . g$12756$sFNhI)
        (string>? . g$6484$sFNhI)
        (string>=? . g$6486$sFNhI)
        (string=? . g$6482$sFNhI)
        (string<? . g$6483$sFNhI)
        (string<=? . g$6485$sFNhI)
        (string-ref . g$12755$sFNhI)
        (string-length . g$12754$sFNhI)
        (string-for-each . g$6535$sFNhI)
        (string-copy . g$12753$sFNhI)
        (string-append . g$12752$sFNhI)
        (string->symbol . g$12751$sFNhI)
        (string->number . g$12750$sFNhI)
        (string->list . g$12749$sFNhI)
        (string . g$12748$sFNhI)
        (sqrt . g$12747$sFNhI)
        (sin . g$12746$sFNhI)
        (round . g$12745$sFNhI)
        (reverse . g$6408$sFNhI)
        (real? . g$12744$sFNhI)
        (real-valued? . g$12743$sFNhI)
        (real-part . g$12742$sFNhI)
        (rationalize . g$6530$sFNhI)
        (rational? . g$12741$sFNhI)
        (rational-valued? . g$12740$sFNhI)
        (procedure? . g$6403$sFNhI)
        (positive? . g$6437$sFNhI)
        (pair? . g$12739$sFNhI)
        (odd? . g$6441$sFNhI)
        (numerator . g$12738$sFNhI)
        (number? . g$12737$sFNhI)
        (number->string . g$12736$sFNhI)
        (null? . g$12735$sFNhI)
        (not . g$12734$sFNhI)
        (negative? . g$6438$sFNhI)
        (nan? . g$12733$sFNhI)
        (min . g$6443$sFNhI)
        (max . g$6442$sFNhI)
        (map . g$5975$sFNhI)
        (make-vector . g$12732$sFNhI)
        (make-string . g$12731$sFNhI)
        (make-rectangular . g$12730$sFNhI)
        (make-polar . g$12729$sFNhI)
        (magnitude . g$12728$sFNhI)
        (log . g$12727$sFNhI)
        (list? . g$12726$sFNhI)
        (list-tail . g$5955$sFNhI)
        (list-ref . g$5956$sFNhI)
        (list->vector . g$6396$sFNhI)
        (list->string . g$6397$sFNhI)
        (list . g$12725$sFNhI)
        (length . g$12724$sFNhI)
        (lcm . g$6445$sFNhI)
        (integer? . g$12723$sFNhI)
        (integer-valued? . g$12722$sFNhI)
        (integer->char . g$12721$sFNhI)
        (infinite? . g$12720$sFNhI)
        (inexact? . g$12719$sFNhI)
        (inexact . g$12718$sFNhI)
        (imag-part . g$12717$sFNhI)
        (gcd . g$6444$sFNhI)
        (for-each . g$5976$sFNhI)
        (floor . g$12716$sFNhI)
        (finite? . g$12715$sFNhI)
        (expt . g$12714$sFNhI)
        (exp . g$12713$sFNhI)
        (exact? . g$12712$sFNhI)
        (exact-integer-sqrt . g$12711$sFNhI)
        (exact . g$12710$sFNhI)
        (even? . g$6440$sFNhI)
        (error . g$12709$sFNhI)
        (eqv? . g$12708$sFNhI)
        (equal? . g$12707$sFNhI)
        (eq? . g$12706$sFNhI)
        (dynamic-wind . g$12705$sFNhI)
        (div0-and-mod0 . g$12704$sFNhI)
        (mod0 . g$6395$sFNhI)
        (div0 . g$6393$sFNhI)
        (div-and-mod . g$12703$sFNhI)
        (mod . g$6394$sFNhI)
        (div . g$6392$sFNhI)
        (denominator . g$12702$sFNhI)
        (cos . g$12701$sFNhI)
        (cons . g$12700$sFNhI)
        (complex? . g$12699$sFNhI)
        (char? . g$6398$sFNhI)
        (char>? . g$6527$sFNhI)
        (char>=? . g$6529$sFNhI)
        (char=? . g$6525$sFNhI)
        (char<? . g$6526$sFNhI)
        (char<=? . g$6528$sFNhI)
        (char->integer . g$12698$sFNhI)
        (ceiling . g$12697$sFNhI)
        (call-with-values . g$12696$sFNhI)
        (call/cc . g$12695$sFNhI)
        (call-with-current-continuation . g$12694$sFNhI)
        (cddddr . g$6436$sFNhI)
        (cdddar . g$6435$sFNhI)
        (cddadr . g$6434$sFNhI)
        (cddaar . g$6433$sFNhI)
        (cdaddr . g$6432$sFNhI)
        (cdadar . g$6431$sFNhI)
        (cdaadr . g$6430$sFNhI)
        (cdaaar . g$6429$sFNhI)
        (cadddr . g$6428$sFNhI)
        (caddar . g$6427$sFNhI)
        (cadadr . g$6426$sFNhI)
        (cadaar . g$6425$sFNhI)
        (caaddr . g$6424$sFNhI)
        (caadar . g$6423$sFNhI)
        (caaadr . g$6422$sFNhI)
        (caaaar . g$6421$sFNhI)
        (cdddr . g$6420$sFNhI)
        (cddar . g$6419$sFNhI)
        (cdadr . g$6418$sFNhI)
        (cdaar . g$6417$sFNhI)
        (caddr . g$6416$sFNhI)
        (cadar . g$6415$sFNhI)
        (caadr . g$6414$sFNhI)
        (caaar . g$6413$sFNhI)
        (cddr . g$6412$sFNhI)
        (cdar . g$6411$sFNhI)
        (cadr . g$6410$sFNhI)
        (caar . g$6409$sFNhI)
        (cdr . g$12693$sFNhI)
        (car . g$12692$sFNhI)
        (boolean? . g$6402$sFNhI)
        (boolean=? . g$6488$sFNhI)
        (atan . g$12691$sFNhI)
        (assertion-violation . g$12690$sFNhI)
        (asin . g$12689$sFNhI)
        (apply . g$12688$sFNhI)
        (append . g$12687$sFNhI)
        (angle . g$12686$sFNhI)
        (acos . g$12685$sFNhI)
        (abs . g$12684$sFNhI)
        (/ . g$12683$sFNhI)
        (* . g$12682$sFNhI)
        (- . g$12681$sFNhI)
        (+ . g$12680$sFNhI)
        (>= . g$12679$sFNhI)
        (> . g$12678$sFNhI)
        (= . g$12677$sFNhI)
        (<= . g$12676$sFNhI)
        (< . g$12675$sFNhI)
        (&no-nans . g$12643$sFNhI)
        (&no-infinities . g$12642$sFNhI)
        (&i/o-encoding . g$12641$sFNhI)
        (&i/o-decoding . g$12640$sFNhI)
        (&i/o-port . g$12639$sFNhI)
        (&i/o-file-does-not-exist . g$12638$sFNhI)
        (&i/o-file-already-exists . g$12637$sFNhI)
        (&i/o-file-is-read-only . g$12636$sFNhI)
        (&i/o-file-protection . g$12635$sFNhI)
        (&i/o-filename . g$12634$sFNhI)
        (&i/o-invalid-position . g$12633$sFNhI)
        (&i/o-write . g$12632$sFNhI)
        (&i/o-read . g$12631$sFNhI)
        (&i/o . g$12630$sFNhI)
        (&non-continuable . g$12629$sFNhI)
        (&undefined . g$12628$sFNhI)
        (&syntax . g$12627$sFNhI)
        (&lexical . g$12626$sFNhI)
        (&implementation-restriction . g$12625$sFNhI)
        (&who . g$12624$sFNhI)
        (&irritants . g$12623$sFNhI)
        (&assertion . g$12622$sFNhI)
        (&violation . g$12621$sFNhI)
        (&error . g$12620$sFNhI)
        (&serious . g$12619$sFNhI)
        (&warning . g$12618$sFNhI)
        (&message . g$12617$sFNhI)
        (&condition . g$12616$sFNhI)
        (define-condition-type . g$12615$sFNhI)
        (define-enumeration . g$12614$sFNhI)
        (define-record-type . g$12613$sFNhI)
        (parent-rtd . g$12612$sFNhI)
        (nongenerative . g$12611$sFNhI)
        (opaque . g$12610$sFNhI)
        (sealed . g$12609$sFNhI)
        (protocol . g$12608$sFNhI)
        (parent . g$12607$sFNhI)
        (immutable . g$12606$sFNhI)
        (mutable . g$12605$sFNhI)
        (fields . g$12604$sFNhI)
        (error-handling-mode . g$12603$sFNhI)
        (file-options . g$12602$sFNhI)
        (buffer-mode . g$12601$sFNhI)
        (eol-style . g$12600$sFNhI)
        (guard . g$12599$sFNhI)
        (unsyntax-splicing . g$12593$sFNhI)
        (unsyntax . g$12592$sFNhI)
        (unquote-splicing . g$12591$sFNhI)
        (unquote . g$12590$sFNhI)
        (_ . g$12589$sFNhI)
        (else . g$12588$sFNhI)
        (=> . g$12587$sFNhI)
        (... . g$12586$sFNhI)
        (assert . g$12585$sFNhI)
        (endianness . g$12584$sFNhI)
        (or . g$12581$sFNhI)
        (and . g$12580$sFNhI)
        (do . g$12579$sFNhI)
        (cond . g$12578$sFNhI)
        (let* . g$12577$sFNhI)
        (let . g$12576$sFNhI)
        (identifier-syntax . g$12575$sFNhI)
        (with-syntax . g$12574$sFNhI)
        (quasisyntax . g$12573$sFNhI)
        (quasiquote . g$12572$sFNhI)
        (syntax-rules . g$12571$sFNhI)
        (let-values . g$12567$sFNhI)
        (let*-values . g$12566$sFNhI)
        (record-constructor-descriptor . g$12565$sFNhI)
        (record-type-descriptor . g$12564$sFNhI)
        (case . g$12562$sFNhI)
        (unless . g$12560$sFNhI)
        (when . g$12559$sFNhI)
        (if . g$12558$sFNhI)
        (letrec* . g$12557$sFNhI)
        (letrec . g$12556$sFNhI)
        (case-lambda . g$12554$sFNhI)
        (lambda . g$12553$sFNhI)
        (syntax . g$12552$sFNhI)
        (syntax-case . g$12551$sFNhI)
        (quote . g$12550$sFNhI)
        (letrec-syntax . g$12548$sFNhI)
        (let-syntax . g$12547$sFNhI)
        (set! . g$12546$sFNhI)
        (begin . g$12542$sFNhI)
        (define-syntax . g$12540$sFNhI)
        (define . g$12539$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13073$sFNhI
      '(rnrs r5rs)
      '(6)
      '()
      '()
      '()
      '((scheme-report-environment . g$9472$sFNhI)
        (quotient . g$7111$sFNhI)
        (null-environment . g$9471$sFNhI)
        (remainder . g$7112$sFNhI)
        (modulo . g$7113$sFNhI)
        (inexact->exact . g$7108$sFNhI)
        (force . g$7115$sFNhI)
        (exact->inexact . g$7109$sFNhI)
        (delay . g$12583$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13074$sFNhI
      '(rnrs control)
      '(6)
      '()
      '()
      '()
      '((do . g$12579$sFNhI)
        (unless . g$12560$sFNhI)
        (when . g$12559$sFNhI)
        (case-lambda . g$12554$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13075$sFNhI
      '(rnrs eval)
      '(6)
      '()
      '()
      '()
      '((eval . g$9474$sFNhI) (environment . g$9470$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13076$sFNhI
      '(rnrs mutable-pairs)
      '(6)
      '()
      '()
      '()
      '((set-cdr! . g$12850$sFNhI) (set-car! . g$12849$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13077$sFNhI
      '(rnrs mutable-strings)
      '(6)
      '()
      '()
      '()
      '((string-fill! . g$12852$sFNhI) (string-set! . g$12851$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13078$sFNhI
      '(rnrs programs)
      '(6)
      '()
      '()
      '()
      '((exit . g$12853$sFNhI) (command-line . g$12490$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13079$sFNhI
      '(rnrs syntax-case)
      '(6)
      '()
      '()
      '()
      '((make-variable-transformer . g$9093$sFNhI)
        (identifier? . g$9493$sFNhI)
        (generate-temporaries . g$9482$sFNhI)
        (free-identifier=? . g$9483$sFNhI)
        (syntax->datum . g$9495$sFNhI)
        (datum->syntax . g$9494$sFNhI)
        (bound-identifier=? . g$9484$sFNhI)
        (syntax-violation . g$9492$sFNhI)
        (unsyntax-splicing . g$12593$sFNhI)
        (unsyntax . g$12592$sFNhI)
        (_ . g$12589$sFNhI)
        (... . g$12586$sFNhI)
        (with-syntax . g$12574$sFNhI)
        (quasisyntax . g$12573$sFNhI)
        (syntax . g$12552$sFNhI)
        (syntax-case . g$12551$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13080$sFNhI
      '(rnrs files)
      '(6)
      '()
      '()
      '()
      '((delete-file . g$6766$sFNhI)
        (file-exists? . g$6765$sFNhI)
        (make-i/o-write-error . g$7599$sFNhI)
        (make-i/o-read-error . g$7585$sFNhI)
        (make-i/o-port-error . g$7704$sFNhI)
        (make-i/o-invalid-position-error . g$7614$sFNhI)
        (make-i/o-filename-error . g$7631$sFNhI)
        (make-i/o-file-protection-error . g$7647$sFNhI)
        (make-i/o-file-is-read-only-error . g$7661$sFNhI)
        (make-i/o-file-does-not-exist-error . g$7689$sFNhI)
        (make-i/o-file-already-exists-error . g$7675$sFNhI)
        (make-i/o-error . g$7571$sFNhI)
        (i/o-write-error? . g$7600$sFNhI)
        (i/o-read-error? . g$7586$sFNhI)
        (i/o-port-error? . g$7706$sFNhI)
        (i/o-invalid-position-error? . g$7616$sFNhI)
        (i/o-error-position . g$7617$sFNhI)
        (i/o-filename-error? . g$7633$sFNhI)
        (i/o-file-protection-error? . g$7648$sFNhI)
        (i/o-file-is-read-only-error? . g$7662$sFNhI)
        (i/o-file-does-not-exist-error? . g$7690$sFNhI)
        (i/o-file-already-exists-error? . g$7676$sFNhI)
        (i/o-error? . g$7572$sFNhI)
        (i/o-error-port . g$7707$sFNhI)
        (i/o-error-filename . g$7634$sFNhI)
        (&i/o-port . g$12639$sFNhI)
        (&i/o-file-does-not-exist . g$12638$sFNhI)
        (&i/o-file-already-exists . g$12637$sFNhI)
        (&i/o-file-is-read-only . g$12636$sFNhI)
        (&i/o-file-protection . g$12635$sFNhI)
        (&i/o-filename . g$12634$sFNhI)
        (&i/o-invalid-position . g$12633$sFNhI)
        (&i/o-write . g$12632$sFNhI)
        (&i/o-read . g$12631$sFNhI)
        (&i/o . g$12630$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13081$sFNhI
      '(rnrs sorting)
      '(6)
      '()
      '()
      '()
      '((vector-sort! . g$12938$sFNhI)
        (vector-sort . g$12937$sFNhI)
        (list-sort . g$7132$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13082$sFNhI
      '(rnrs base)
      '(6)
      '()
      '()
      '()
      '((zero? . g$6439$sFNhI)
        (vector? . g$6399$sFNhI)
        (vector-set! . g$12766$sFNhI)
        (vector-ref . g$12765$sFNhI)
        (vector-map . g$6533$sFNhI)
        (vector-length . g$12764$sFNhI)
        (vector-for-each . g$6534$sFNhI)
        (vector-fill! . g$6407$sFNhI)
        (vector->list . g$12763$sFNhI)
        (vector . g$12762$sFNhI)
        (values . g$12761$sFNhI)
        (truncate . g$12760$sFNhI)
        (tan . g$12759$sFNhI)
        (symbol? . g$6401$sFNhI)
        (symbol=? . g$6487$sFNhI)
        (symbol->string . g$12758$sFNhI)
        (substring . g$12757$sFNhI)
        (string? . g$12756$sFNhI)
        (string>? . g$6484$sFNhI)
        (string>=? . g$6486$sFNhI)
        (string=? . g$6482$sFNhI)
        (string<? . g$6483$sFNhI)
        (string<=? . g$6485$sFNhI)
        (string-ref . g$12755$sFNhI)
        (string-length . g$12754$sFNhI)
        (string-for-each . g$6535$sFNhI)
        (string-copy . g$12753$sFNhI)
        (string-append . g$12752$sFNhI)
        (string->symbol . g$12751$sFNhI)
        (string->number . g$12750$sFNhI)
        (string->list . g$12749$sFNhI)
        (string . g$12748$sFNhI)
        (sqrt . g$12747$sFNhI)
        (sin . g$12746$sFNhI)
        (round . g$12745$sFNhI)
        (reverse . g$6408$sFNhI)
        (real? . g$12744$sFNhI)
        (real-valued? . g$12743$sFNhI)
        (real-part . g$12742$sFNhI)
        (rationalize . g$6530$sFNhI)
        (rational? . g$12741$sFNhI)
        (rational-valued? . g$12740$sFNhI)
        (procedure? . g$6403$sFNhI)
        (positive? . g$6437$sFNhI)
        (pair? . g$12739$sFNhI)
        (odd? . g$6441$sFNhI)
        (numerator . g$12738$sFNhI)
        (number? . g$12737$sFNhI)
        (number->string . g$12736$sFNhI)
        (null? . g$12735$sFNhI)
        (not . g$12734$sFNhI)
        (negative? . g$6438$sFNhI)
        (nan? . g$12733$sFNhI)
        (min . g$6443$sFNhI)
        (max . g$6442$sFNhI)
        (map . g$5975$sFNhI)
        (make-vector . g$12732$sFNhI)
        (make-string . g$12731$sFNhI)
        (make-rectangular . g$12730$sFNhI)
        (make-polar . g$12729$sFNhI)
        (magnitude . g$12728$sFNhI)
        (log . g$12727$sFNhI)
        (list? . g$12726$sFNhI)
        (list-tail . g$5955$sFNhI)
        (list-ref . g$5956$sFNhI)
        (list->vector . g$6396$sFNhI)
        (list->string . g$6397$sFNhI)
        (list . g$12725$sFNhI)
        (length . g$12724$sFNhI)
        (lcm . g$6445$sFNhI)
        (integer? . g$12723$sFNhI)
        (integer-valued? . g$12722$sFNhI)
        (integer->char . g$12721$sFNhI)
        (infinite? . g$12720$sFNhI)
        (inexact? . g$12719$sFNhI)
        (inexact . g$12718$sFNhI)
        (imag-part . g$12717$sFNhI)
        (gcd . g$6444$sFNhI)
        (for-each . g$5976$sFNhI)
        (floor . g$12716$sFNhI)
        (finite? . g$12715$sFNhI)
        (expt . g$12714$sFNhI)
        (exp . g$12713$sFNhI)
        (exact? . g$12712$sFNhI)
        (exact-integer-sqrt . g$12711$sFNhI)
        (exact . g$12710$sFNhI)
        (even? . g$6440$sFNhI)
        (error . g$12709$sFNhI)
        (eqv? . g$12708$sFNhI)
        (equal? . g$12707$sFNhI)
        (eq? . g$12706$sFNhI)
        (dynamic-wind . g$12705$sFNhI)
        (div0-and-mod0 . g$12704$sFNhI)
        (mod0 . g$6395$sFNhI)
        (div0 . g$6393$sFNhI)
        (div-and-mod . g$12703$sFNhI)
        (mod . g$6394$sFNhI)
        (div . g$6392$sFNhI)
        (denominator . g$12702$sFNhI)
        (cos . g$12701$sFNhI)
        (cons . g$12700$sFNhI)
        (complex? . g$12699$sFNhI)
        (char? . g$6398$sFNhI)
        (char>? . g$6527$sFNhI)
        (char>=? . g$6529$sFNhI)
        (char=? . g$6525$sFNhI)
        (char<? . g$6526$sFNhI)
        (char<=? . g$6528$sFNhI)
        (char->integer . g$12698$sFNhI)
        (ceiling . g$12697$sFNhI)
        (call-with-values . g$12696$sFNhI)
        (call/cc . g$12695$sFNhI)
        (call-with-current-continuation . g$12694$sFNhI)
        (cddddr . g$6436$sFNhI)
        (cdddar . g$6435$sFNhI)
        (cddadr . g$6434$sFNhI)
        (cddaar . g$6433$sFNhI)
        (cdaddr . g$6432$sFNhI)
        (cdadar . g$6431$sFNhI)
        (cdaadr . g$6430$sFNhI)
        (cdaaar . g$6429$sFNhI)
        (cadddr . g$6428$sFNhI)
        (caddar . g$6427$sFNhI)
        (cadadr . g$6426$sFNhI)
        (cadaar . g$6425$sFNhI)
        (caaddr . g$6424$sFNhI)
        (caadar . g$6423$sFNhI)
        (caaadr . g$6422$sFNhI)
        (caaaar . g$6421$sFNhI)
        (cdddr . g$6420$sFNhI)
        (cddar . g$6419$sFNhI)
        (cdadr . g$6418$sFNhI)
        (cdaar . g$6417$sFNhI)
        (caddr . g$6416$sFNhI)
        (cadar . g$6415$sFNhI)
        (caadr . g$6414$sFNhI)
        (caaar . g$6413$sFNhI)
        (cddr . g$6412$sFNhI)
        (cdar . g$6411$sFNhI)
        (cadr . g$6410$sFNhI)
        (caar . g$6409$sFNhI)
        (cdr . g$12693$sFNhI)
        (car . g$12692$sFNhI)
        (boolean? . g$6402$sFNhI)
        (boolean=? . g$6488$sFNhI)
        (atan . g$12691$sFNhI)
        (assertion-violation . g$12690$sFNhI)
        (asin . g$12689$sFNhI)
        (apply . g$12688$sFNhI)
        (append . g$12687$sFNhI)
        (angle . g$12686$sFNhI)
        (acos . g$12685$sFNhI)
        (abs . g$12684$sFNhI)
        (/ . g$12683$sFNhI)
        (* . g$12682$sFNhI)
        (- . g$12681$sFNhI)
        (+ . g$12680$sFNhI)
        (>= . g$12679$sFNhI)
        (> . g$12678$sFNhI)
        (= . g$12677$sFNhI)
        (<= . g$12676$sFNhI)
        (< . g$12675$sFNhI)
        (unquote-splicing . g$12591$sFNhI)
        (unquote . g$12590$sFNhI)
        (_ . g$12589$sFNhI)
        (else . g$12588$sFNhI)
        (=> . g$12587$sFNhI)
        (... . g$12586$sFNhI)
        (assert . g$12585$sFNhI)
        (or . g$12581$sFNhI)
        (and . g$12580$sFNhI)
        (cond . g$12578$sFNhI)
        (let* . g$12577$sFNhI)
        (let . g$12576$sFNhI)
        (identifier-syntax . g$12575$sFNhI)
        (quasiquote . g$12572$sFNhI)
        (syntax-rules . g$12571$sFNhI)
        (let-values . g$12567$sFNhI)
        (let*-values . g$12566$sFNhI)
        (case . g$12562$sFNhI)
        (if . g$12558$sFNhI)
        (letrec* . g$12557$sFNhI)
        (letrec . g$12556$sFNhI)
        (lambda . g$12553$sFNhI)
        (quote . g$12550$sFNhI)
        (letrec-syntax . g$12548$sFNhI)
        (let-syntax . g$12547$sFNhI)
        (set! . g$12546$sFNhI)
        (begin . g$12542$sFNhI)
        (define-syntax . g$12540$sFNhI)
        (define . g$12539$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13083$sFNhI
      '(rnrs lists)
      '(6)
      '()
      '()
      '()
      '((remove . g$5980$sFNhI)
        (remv . g$5981$sFNhI)
        (remp . g$5961$sFNhI)
        (remq . g$5982$sFNhI)
        (partition . g$5960$sFNhI)
        (memv . g$5968$sFNhI)
        (memq . g$5967$sFNhI)
        (memp . g$5970$sFNhI)
        (member . g$5969$sFNhI)
        (exists . g$5974$sFNhI)
        (for-all . g$5973$sFNhI)
        (fold-right . g$5979$sFNhI)
        (fold-left . g$5978$sFNhI)
        (find . g$5959$sFNhI)
        (filter . g$5962$sFNhI)
        (cons* . g$5977$sFNhI)
        (assv . g$5964$sFNhI)
        (assq . g$5963$sFNhI)
        (assp . g$5966$sFNhI)
        (assoc . g$5965$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13084$sFNhI
      '(rnrs io simple)
      '(6)
      '()
      '()
      '()
      '((call-with-output-file . g$7782$sFNhI)
        (call-with-input-file . g$7781$sFNhI)
        (write-char . g$7763$sFNhI)
        (write . g$12924$sFNhI)
        (with-output-to-file . g$7780$sFNhI)
        (with-input-from-file . g$7779$sFNhI)
        (read-char . g$7762$sFNhI)
        (read . g$12923$sFNhI)
        (peek-char . g$7761$sFNhI)
        (open-output-file . g$12922$sFNhI)
        (open-input-file . g$12921$sFNhI)
        (newline . g$7783$sFNhI)
        (display . g$12920$sFNhI)
        (close-output-port . g$12919$sFNhI)
        (close-input-port . g$12918$sFNhI)
        (eof-object? . g$12917$sFNhI)
        (eof-object . g$12916$sFNhI)
        (current-error-port . g$12915$sFNhI)
        (current-output-port . g$12914$sFNhI)
        (current-input-port . g$12913$sFNhI)
        (output-port? . g$12912$sFNhI)
        (input-port? . g$12911$sFNhI)
        (make-i/o-write-error . g$7599$sFNhI)
        (make-i/o-read-error . g$7585$sFNhI)
        (make-i/o-port-error . g$7704$sFNhI)
        (make-i/o-invalid-position-error . g$7614$sFNhI)
        (make-i/o-filename-error . g$7631$sFNhI)
        (make-i/o-file-protection-error . g$7647$sFNhI)
        (make-i/o-file-is-read-only-error . g$7661$sFNhI)
        (make-i/o-file-does-not-exist-error . g$7689$sFNhI)
        (make-i/o-file-already-exists-error . g$7675$sFNhI)
        (make-i/o-error . g$7571$sFNhI)
        (i/o-write-error? . g$7600$sFNhI)
        (i/o-read-error? . g$7586$sFNhI)
        (i/o-port-error? . g$7706$sFNhI)
        (i/o-invalid-position-error? . g$7616$sFNhI)
        (i/o-error-position . g$7617$sFNhI)
        (i/o-filename-error? . g$7633$sFNhI)
        (i/o-file-protection-error? . g$7648$sFNhI)
        (i/o-file-is-read-only-error? . g$7662$sFNhI)
        (i/o-file-does-not-exist-error? . g$7690$sFNhI)
        (i/o-file-already-exists-error? . g$7676$sFNhI)
        (i/o-error? . g$7572$sFNhI)
        (i/o-error-port . g$7707$sFNhI)
        (i/o-error-filename . g$7634$sFNhI)
        (&i/o-port . g$12639$sFNhI)
        (&i/o-file-does-not-exist . g$12638$sFNhI)
        (&i/o-file-already-exists . g$12637$sFNhI)
        (&i/o-file-is-read-only . g$12636$sFNhI)
        (&i/o-file-protection . g$12635$sFNhI)
        (&i/o-filename . g$12634$sFNhI)
        (&i/o-invalid-position . g$12633$sFNhI)
        (&i/o-write . g$12632$sFNhI)
        (&i/o-read . g$12631$sFNhI)
        (&i/o . g$12630$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13085$sFNhI
      '(rnrs bytevectors)
      '(6)
      '()
      '()
      '()
      '((make-bytevector . g$12872$sFNhI)
        (utf32->string . g$12840$sFNhI)
        (utf16->string . g$12839$sFNhI)
        (utf8->string . g$12838$sFNhI)
        (uint-list->bytevector . g$12837$sFNhI)
        (u8-list->bytevector . g$12836$sFNhI)
        (string->utf8 . g$12835$sFNhI)
        (string->utf32 . g$12834$sFNhI)
        (string->utf16 . g$12833$sFNhI)
        (sint-list->bytevector . g$12832$sFNhI)
        (native-endianness . g$6772$sFNhI)
        (bytevector? . g$6400$sFNhI)
        (bytevector=? . g$12831$sFNhI)
        (bytevector-uint-set! . g$12830$sFNhI)
        (bytevector-uint-ref . g$12829$sFNhI)
        (bytevector-u8-set! . g$12828$sFNhI)
        (bytevector-u8-ref . g$12827$sFNhI)
        (bytevector-u64-set! . g$6793$sFNhI)
        (bytevector-u64-ref . g$6789$sFNhI)
        (bytevector-u64-native-set! . g$6795$sFNhI)
        (bytevector-u64-native-ref . g$6791$sFNhI)
        (bytevector-u32-set! . g$6785$sFNhI)
        (bytevector-u32-ref . g$6781$sFNhI)
        (bytevector-u32-native-set! . g$6787$sFNhI)
        (bytevector-u32-native-ref . g$6783$sFNhI)
        (bytevector-u16-set! . g$6777$sFNhI)
        (bytevector-u16-ref . g$6773$sFNhI)
        (bytevector-u16-native-set! . g$6779$sFNhI)
        (bytevector-u16-native-ref . g$6775$sFNhI)
        (bytevector-sint-set! . g$12826$sFNhI)
        (bytevector-sint-ref . g$12825$sFNhI)
        (bytevector-s8-set! . g$12824$sFNhI)
        (bytevector-s8-ref . g$12823$sFNhI)
        (bytevector-s64-set! . g$6794$sFNhI)
        (bytevector-s64-ref . g$6790$sFNhI)
        (bytevector-s64-native-set! . g$6796$sFNhI)
        (bytevector-s64-native-ref . g$6792$sFNhI)
        (bytevector-s32-set! . g$6786$sFNhI)
        (bytevector-s32-ref . g$6782$sFNhI)
        (bytevector-s32-native-set! . g$6788$sFNhI)
        (bytevector-s32-native-ref . g$6784$sFNhI)
        (bytevector-s16-set! . g$6778$sFNhI)
        (bytevector-s16-ref . g$6774$sFNhI)
        (bytevector-s16-native-set! . g$6780$sFNhI)
        (bytevector-s16-native-ref . g$6776$sFNhI)
        (bytevector-length . g$12822$sFNhI)
        (bytevector-ieee-single-set! . g$12821$sFNhI)
        (bytevector-ieee-single-ref . g$12820$sFNhI)
        (bytevector-ieee-single-native-set! . g$6799$sFNhI)
        (bytevector-ieee-single-native-ref . g$6797$sFNhI)
        (bytevector-ieee-double-set! . g$12819$sFNhI)
        (bytevector-ieee-double-ref . g$12818$sFNhI)
        (bytevector-ieee-double-native-set! . g$6800$sFNhI)
        (bytevector-ieee-double-native-ref . g$6798$sFNhI)
        (bytevector-fill! . g$12817$sFNhI)
        (bytevector-copy! . g$12816$sFNhI)
        (bytevector-copy . g$12815$sFNhI)
        (bytevector->uint-list . g$12814$sFNhI)
        (bytevector->u8-list . g$12813$sFNhI)
        (bytevector->sint-list . g$12812$sFNhI)
        (endianness . g$12584$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13086$sFNhI
      '(rnrs unicode)
      '(6)
      '()
      '()
      '()
      '((string-upcase . g$12970$sFNhI)
        (string-titlecase . g$12969$sFNhI)
        (string-normalize-nfkd . g$7237$sFNhI)
        (string-normalize-nfkc . g$7236$sFNhI)
        (string-normalize-nfd . g$7235$sFNhI)
        (string-normalize-nfc . g$7234$sFNhI)
        (string-foldcase . g$12968$sFNhI)
        (string-downcase . g$12967$sFNhI)
        (string-ci>? . g$7192$sFNhI)
        (string-ci>=? . g$7194$sFNhI)
        (string-ci=? . g$7190$sFNhI)
        (string-ci<? . g$7191$sFNhI)
        (string-ci<=? . g$7193$sFNhI)
        (char-whitespace? . g$12966$sFNhI)
        (char-upper-case? . g$12965$sFNhI)
        (char-title-case? . g$12964$sFNhI)
        (char-numeric? . g$12963$sFNhI)
        (char-lower-case? . g$12962$sFNhI)
        (char-general-category . g$12961$sFNhI)
        (char-upcase . g$12960$sFNhI)
        (char-titlecase . g$12959$sFNhI)
        (char-foldcase . g$12958$sFNhI)
        (char-downcase . g$12957$sFNhI)
        (char-ci>? . g$7231$sFNhI)
        (char-ci>=? . g$7233$sFNhI)
        (char-ci=? . g$7229$sFNhI)
        (char-ci<? . g$7230$sFNhI)
        (char-ci<=? . g$7232$sFNhI)
        (char-alphabetic? . g$12956$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13087$sFNhI
      '(rnrs exceptions)
      '(6)
      '()
      '()
      '()
      '((with-exception-handler . g$12848$sFNhI)
        (raise-continuable . g$12847$sFNhI)
        (raise . g$12846$sFNhI)
        (guard . g$12599$sFNhI)
        (else . g$12588$sFNhI)
        (=> . g$12587$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13088$sFNhI
      '(rnrs arithmetic bitwise)
      '(6)
      '()
      '()
      '()
      '((bitwise-rotate-bit-field . g$7301$sFNhI)
        (bitwise-reverse-bit-field . g$12776$sFNhI)
        (bitwise-length . g$12775$sFNhI)
        (bitwise-if . g$7295$sFNhI)
        (bitwise-first-bit-set . g$12774$sFNhI)
        (bitwise-copy-bit-field . g$7298$sFNhI)
        (bitwise-copy-bit . g$7296$sFNhI)
        (bitwise-bit-set? . g$12773$sFNhI)
        (bitwise-bit-field . g$7297$sFNhI)
        (bitwise-bit-count . g$12772$sFNhI)
        (bitwise-xor . g$12771$sFNhI)
        (bitwise-ior . g$12770$sFNhI)
        (bitwise-and . g$12769$sFNhI)
        (bitwise-not . g$12768$sFNhI)
        (bitwise-arithmetic-shift-right . g$7300$sFNhI)
        (bitwise-arithmetic-shift-left . g$7299$sFNhI)
        (bitwise-arithmetic-shift . g$12767$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13089$sFNhI
      '(rnrs arithmetic fixnums)
      '(6)
      '()
      '()
      '()
      '((fxzero? . g$7333$sFNhI)
        (fxxor . g$12798$sFNhI)
        (fxrotate-bit-field . g$7347$sFNhI)
        (fxreverse-bit-field . g$12797$sFNhI)
        (fxpositive? . g$7331$sFNhI)
        (fxodd? . g$7335$sFNhI)
        (fxnot . g$12796$sFNhI)
        (fxnegative? . g$7332$sFNhI)
        (fxmod0 . g$7330$sFNhI)
        (fxmod . g$7329$sFNhI)
        (fxmin . g$7337$sFNhI)
        (fxmax . g$7336$sFNhI)
        (fxlength . g$12795$sFNhI)
        (fxior . g$12794$sFNhI)
        (fxif . g$7341$sFNhI)
        (fxfirst-bit-set . g$12793$sFNhI)
        (fxeven? . g$7334$sFNhI)
        (fxdiv0-and-mod0 . g$12792$sFNhI)
        (fxdiv0 . g$7328$sFNhI)
        (fxdiv-and-mod . g$12791$sFNhI)
        (fxdiv . g$7327$sFNhI)
        (fxcopy-bit-field . g$7344$sFNhI)
        (fxcopy-bit . g$7342$sFNhI)
        (fxbit-set? . g$12790$sFNhI)
        (fxbit-field . g$7343$sFNhI)
        (fxbit-count . g$12789$sFNhI)
        (fxarithmetic-shift-right . g$7346$sFNhI)
        (fxarithmetic-shift-left . g$7345$sFNhI)
        (fxarithmetic-shift . g$12788$sFNhI)
        (fxand . g$12787$sFNhI)
        (fx>? . g$12786$sFNhI)
        (fx>=? . g$12785$sFNhI)
        (fx=? . g$12784$sFNhI)
        (fx<? . g$12783$sFNhI)
        (fx<=? . g$12782$sFNhI)
        (fx-/carry . g$7339$sFNhI)
        (fx- . g$12781$sFNhI)
        (fx+/carry . g$7340$sFNhI)
        (fx+ . g$12780$sFNhI)
        (fx*/carry . g$7338$sFNhI)
        (fx* . g$12779$sFNhI)
        (greatest-fixnum . g$12778$sFNhI)
        (least-fixnum . g$12777$sFNhI)
        (fixnum-width . g$6406$sFNhI)
        (fixnum? . g$6404$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13090$sFNhI
      '(rnrs arithmetic flonums)
      '(6)
      '()
      '()
      '()
      '((no-nans-violation? . g$7484$sFNhI)
        (no-infinities-violation? . g$7470$sFNhI)
        (make-no-nans-violation . g$7483$sFNhI)
        (make-no-infinities-violation . g$7469$sFNhI)
        (real->flonum . g$12811$sFNhI)
        (flzero? . g$7452$sFNhI)
        (fltruncate . g$7447$sFNhI)
        (fltan . g$7437$sFNhI)
        (flsqrt . g$7442$sFNhI)
        (flsin . g$7435$sFNhI)
        (flround . g$7448$sFNhI)
        (flpositive? . g$7450$sFNhI)
        (flonum? . g$6405$sFNhI)
        (flodd? . g$7454$sFNhI)
        (flnumerator . g$12810$sFNhI)
        (flnegative? . g$7451$sFNhI)
        (flnan? . g$7434$sFNhI)
        (flmod0 . g$7430$sFNhI)
        (flmod . g$7429$sFNhI)
        (flmin . g$7456$sFNhI)
        (flmax . g$7455$sFNhI)
        (fllog . g$7441$sFNhI)
        (flinteger? . g$7431$sFNhI)
        (flinfinite? . g$7433$sFNhI)
        (flfloor . g$7446$sFNhI)
        (flfinite? . g$7432$sFNhI)
        (flexpt . g$7444$sFNhI)
        (flexp . g$7443$sFNhI)
        (fleven? . g$7453$sFNhI)
        (fldiv0-and-mod0 . g$7426$sFNhI)
        (fldiv0 . g$7428$sFNhI)
        (fldiv-and-mod . g$7425$sFNhI)
        (fldiv . g$7427$sFNhI)
        (fldenominator . g$12809$sFNhI)
        (flcos . g$7436$sFNhI)
        (flceiling . g$7445$sFNhI)
        (flatan . g$7440$sFNhI)
        (flasin . g$7438$sFNhI)
        (flacos . g$7439$sFNhI)
        (flabs . g$7449$sFNhI)
        (fl>? . g$12808$sFNhI)
        (fl>=? . g$12807$sFNhI)
        (fl=? . g$12806$sFNhI)
        (fl<? . g$12805$sFNhI)
        (fl<=? . g$12804$sFNhI)
        (fl/ . g$12803$sFNhI)
        (fl- . g$12802$sFNhI)
        (fl+ . g$12801$sFNhI)
        (fl* . g$12800$sFNhI)
        (fixnum->flonum . g$12799$sFNhI)
        (&no-nans . g$12643$sFNhI)
        (&no-infinities . g$12642$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13091$sFNhI
      '(rnrs hashtables)
      '(6)
      '()
      '()
      '()
      '((symbol-hash . g$12936$sFNhI)
        (string-ci-hash . g$12935$sFNhI)
        (string-hash . g$12934$sFNhI)
        (equal-hash . g$12933$sFNhI)
        (hashtable-equivalence-function . g$12932$sFNhI)
        (make-hashtable . g$12931$sFNhI)
        (hashtable-hash-function . g$12930$sFNhI)
        (make-eqv-hashtable . g$6734$sFNhI)
        (make-eq-hashtable . g$6733$sFNhI)
        (hashtable? . g$12929$sFNhI)
        (hashtable-update! . g$6740$sFNhI)
        (hashtable-size . g$6735$sFNhI)
        (hashtable-set! . g$6737$sFNhI)
        (hashtable-ref . g$6736$sFNhI)
        (hashtable-mutable? . g$12928$sFNhI)
        (hashtable-keys . g$12927$sFNhI)
        (hashtable-entries . g$12926$sFNhI)
        (hashtable-delete! . g$6738$sFNhI)
        (hashtable-copy . g$12925$sFNhI)
        (hashtable-contains? . g$6739$sFNhI)
        (hashtable-clear! . g$6741$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13092$sFNhI
      '(rnrs io ports)
      '(6)
      '()
      '()
      '()
      '((eof-object? . g$12917$sFNhI)
        (eof-object . g$12916$sFNhI)
        (current-error-port . g$12915$sFNhI)
        (current-output-port . g$12914$sFNhI)
        (current-input-port . g$12913$sFNhI)
        (output-port? . g$12912$sFNhI)
        (input-port? . g$12911$sFNhI)
        (utf-8-codec . g$12910$sFNhI)
        (utf-16-codec . g$12909$sFNhI)
        (transcoder-error-handling-mode . g$12908$sFNhI)
        (transcoder-eol-style . g$12907$sFNhI)
        (transcoder-codec . g$12906$sFNhI)
        (transcoded-port . g$12905$sFNhI)
        (textual-port? . g$12904$sFNhI)
        (string->bytevector . g$12903$sFNhI)
        (standard-output-port . g$12902$sFNhI)
        (standard-input-port . g$12901$sFNhI)
        (standard-error-port . g$12900$sFNhI)
        (set-port-position! . g$12899$sFNhI)
        (put-u8 . g$12898$sFNhI)
        (put-string . g$12897$sFNhI)
        (put-datum . g$7741$sFNhI)
        (put-char . g$12896$sFNhI)
        (put-bytevector . g$12895$sFNhI)
        (port? . g$7746$sFNhI)
        (port-transcoder . g$12894$sFNhI)
        (port-position . g$12893$sFNhI)
        (port-has-set-port-position!? . g$12892$sFNhI)
        (port-has-port-position? . g$12891$sFNhI)
        (port-eof? . g$12890$sFNhI)
        (output-port-buffer-mode . g$12889$sFNhI)
        (open-string-output-port . g$7745$sFNhI)
        (open-string-input-port . g$12888$sFNhI)
        (open-file-output-port . g$12887$sFNhI)
        (open-file-input/output-port . g$12886$sFNhI)
        (open-file-input-port . g$12885$sFNhI)
        (open-bytevector-output-port . g$12884$sFNhI)
        (open-bytevector-input-port . g$12883$sFNhI)
        (native-transcoder . g$12882$sFNhI)
        (native-eol-style . g$12881$sFNhI)
        (make-transcoder . g$12880$sFNhI)
        (latin-1-codec . g$12879$sFNhI)
        (make-i/o-write-error . g$7599$sFNhI)
        (make-i/o-read-error . g$7585$sFNhI)
        (make-i/o-port-error . g$7704$sFNhI)
        (make-i/o-invalid-position-error . g$7614$sFNhI)
        (make-i/o-filename-error . g$7631$sFNhI)
        (make-i/o-file-protection-error . g$7647$sFNhI)
        (make-i/o-file-is-read-only-error . g$7661$sFNhI)
        (make-i/o-file-does-not-exist-error . g$7689$sFNhI)
        (make-i/o-file-already-exists-error . g$7675$sFNhI)
        (make-i/o-error . g$7571$sFNhI)
        (make-i/o-encoding-error . g$7735$sFNhI)
        (make-i/o-decoding-error . g$7720$sFNhI)
        (make-custom-textual-output-port . g$12878$sFNhI)
        (make-custom-textual-input/output-port . g$12877$sFNhI)
        (make-custom-textual-input-port . g$12876$sFNhI)
        (make-custom-binary-output-port . g$12875$sFNhI)
        (make-custom-binary-input/output-port . g$12874$sFNhI)
        (make-custom-binary-input-port . g$12873$sFNhI)
        (lookahead-u8 . g$12871$sFNhI)
        (lookahead-char . g$12870$sFNhI)
        (i/o-write-error? . g$7600$sFNhI)
        (i/o-read-error? . g$7586$sFNhI)
        (i/o-port-error? . g$7706$sFNhI)
        (i/o-invalid-position-error? . g$7616$sFNhI)
        (i/o-error-position . g$7617$sFNhI)
        (i/o-filename-error? . g$7633$sFNhI)
        (i/o-file-protection-error? . g$7648$sFNhI)
        (i/o-file-is-read-only-error? . g$7662$sFNhI)
        (i/o-file-does-not-exist-error? . g$7690$sFNhI)
        (i/o-file-already-exists-error? . g$7676$sFNhI)
        (i/o-error? . g$7572$sFNhI)
        (i/o-error-port . g$7707$sFNhI)
        (i/o-error-filename . g$7634$sFNhI)
        (i/o-encoding-error? . g$7737$sFNhI)
        (i/o-encoding-error-char . g$7738$sFNhI)
        (i/o-decoding-error? . g$7721$sFNhI)
        (get-u8 . g$12869$sFNhI)
        (get-string-n! . g$12868$sFNhI)
        (get-string-n . g$12867$sFNhI)
        (get-string-all . g$12866$sFNhI)
        (get-line . g$12865$sFNhI)
        (get-datum . g$7742$sFNhI)
        (get-char . g$12864$sFNhI)
        (get-bytevector-some . g$12863$sFNhI)
        (get-bytevector-n! . g$12862$sFNhI)
        (get-bytevector-n . g$12861$sFNhI)
        (get-bytevector-all . g$12860$sFNhI)
        (flush-output-port . g$12859$sFNhI)
        (close-port . g$12858$sFNhI)
        (call-with-string-output-port . g$7747$sFNhI)
        (call-with-port . g$7748$sFNhI)
        (call-with-bytevector-output-port . g$12857$sFNhI)
        (bytevector->string . g$12856$sFNhI)
        (buffer-mode? . g$12855$sFNhI)
        (binary-port? . g$12854$sFNhI)
        (&i/o-encoding . g$12641$sFNhI)
        (&i/o-decoding . g$12640$sFNhI)
        (&i/o-port . g$12639$sFNhI)
        (&i/o-file-does-not-exist . g$12638$sFNhI)
        (&i/o-file-already-exists . g$12637$sFNhI)
        (&i/o-file-is-read-only . g$12636$sFNhI)
        (&i/o-file-protection . g$12635$sFNhI)
        (&i/o-filename . g$12634$sFNhI)
        (&i/o-invalid-position . g$12633$sFNhI)
        (&i/o-write . g$12632$sFNhI)
        (&i/o-read . g$12631$sFNhI)
        (&i/o . g$12630$sFNhI)
        (error-handling-mode . g$12603$sFNhI)
        (file-options . g$12602$sFNhI)
        (buffer-mode . g$12601$sFNhI)
        (eol-style . g$12600$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13093$sFNhI
      '(rnrs enums)
      '(6)
      '()
      '()
      '()
      '((make-enumeration . g$7847$sFNhI)
        (enum-set=? . g$7854$sFNhI)
        (enum-set-universe . g$7848$sFNhI)
        (enum-set-union . g$7855$sFNhI)
        (enum-set-subset? . g$7853$sFNhI)
        (enum-set-projection . g$7859$sFNhI)
        (enum-set-member? . g$7852$sFNhI)
        (enum-set-intersection . g$7856$sFNhI)
        (enum-set-indexer . g$7849$sFNhI)
        (enum-set-difference . g$7857$sFNhI)
        (enum-set-constructor . g$7850$sFNhI)
        (enum-set-complement . g$7858$sFNhI)
        (enum-set->list . g$7851$sFNhI)
        (define-enumeration . g$12614$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13094$sFNhI
      '(rnrs conditions)
      '(6)
      '()
      '()
      '()
      '((who-condition? . g$7020$sFNhI)
        (warning? . g$6931$sFNhI)
        (violation? . g$6973$sFNhI)
        (undefined-violation? . g$7097$sFNhI)
        (syntax-violation? . g$7081$sFNhI)
        (syntax-violation-subform . g$7083$sFNhI)
        (syntax-violation-form . g$7082$sFNhI)
        (simple-conditions . g$12845$sFNhI)
        (serious-condition? . g$6945$sFNhI)
        (non-continuable-violation? . g$7035$sFNhI)
        (message-condition? . g$6916$sFNhI)
        (make-who-condition . g$7018$sFNhI)
        (make-warning . g$6930$sFNhI)
        (make-violation . g$6972$sFNhI)
        (make-undefined-violation . g$7096$sFNhI)
        (make-syntax-violation . g$7078$sFNhI)
        (make-serious-condition . g$6944$sFNhI)
        (make-non-continuable-violation . g$7034$sFNhI)
        (make-message-condition . g$6914$sFNhI)
        (make-lexical-violation . g$7062$sFNhI)
        (make-irritants-condition . g$7001$sFNhI)
        (make-implementation-restriction-violation . g$7048$sFNhI)
        (make-error . g$6958$sFNhI)
        (make-assertion-violation . g$6986$sFNhI)
        (lexical-violation? . g$7063$sFNhI)
        (irritants-condition? . g$7003$sFNhI)
        (implementation-restriction-violation? . g$7049$sFNhI)
        (error? . g$6959$sFNhI)
        (condition-who . g$7021$sFNhI)
        (condition-predicate . g$12844$sFNhI)
        (condition-message . g$6917$sFNhI)
        (condition-irritants . g$7004$sFNhI)
        (condition-accessor . g$12843$sFNhI)
        (condition . g$12842$sFNhI)
        (assertion-violation? . g$6987$sFNhI)
        (condition? . g$12841$sFNhI)
        (&non-continuable . g$12629$sFNhI)
        (&undefined . g$12628$sFNhI)
        (&syntax . g$12627$sFNhI)
        (&lexical . g$12626$sFNhI)
        (&implementation-restriction . g$12625$sFNhI)
        (&who . g$12624$sFNhI)
        (&irritants . g$12623$sFNhI)
        (&assertion . g$12622$sFNhI)
        (&violation . g$12621$sFNhI)
        (&error . g$12620$sFNhI)
        (&serious . g$12619$sFNhI)
        (&warning . g$12618$sFNhI)
        (&message . g$12617$sFNhI)
        (&condition . g$12616$sFNhI)
        (define-condition-type . g$12615$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13095$sFNhI
      '(rnrs records inspection)
      '(6)
      '()
      '()
      '()
      '((record? . g$12948$sFNhI)
        (record-type-uid . g$12947$sFNhI)
        (record-type-sealed? . g$12946$sFNhI)
        (record-type-parent . g$12945$sFNhI)
        (record-type-opaque? . g$12944$sFNhI)
        (record-type-name . g$12943$sFNhI)
        (record-type-generative? . g$12942$sFNhI)
        (record-type-field-names . g$12941$sFNhI)
        (record-rtd . g$12940$sFNhI)
        (record-field-mutable? . g$12939$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13096$sFNhI
      '(rnrs records procedural)
      '(6)
      '()
      '()
      '()
      '((record-type-descriptor? . g$12955$sFNhI)
        (record-predicate . g$12954$sFNhI)
        (record-mutator . g$12953$sFNhI)
        (record-constructor . g$12952$sFNhI)
        (record-accessor . g$12951$sFNhI)
        (make-record-type-descriptor . g$12950$sFNhI)
        (make-record-constructor-descriptor . g$12949$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13097$sFNhI
      '(rnrs records syntactic)
      '(6)
      '()
      '()
      '()
      '((define-record-type . g$12613$sFNhI)
        (parent-rtd . g$12612$sFNhI)
        (nongenerative . g$12611$sFNhI)
        (opaque . g$12610$sFNhI)
        (sealed . g$12609$sFNhI)
        (protocol . g$12608$sFNhI)
        (parent . g$12607$sFNhI)
        (immutable . g$12606$sFNhI)
        (mutable . g$12605$sFNhI)
        (fields . g$12604$sFNhI)
        (record-constructor-descriptor . g$12565$sFNhI)
        (record-type-descriptor . g$12564$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#t
      '#f)
    (g$install-library$7934$sFNhI
      'g$13098$sFNhI
      '(psyntax system $all)
      '()
      '()
      '()
      '()
      '((ellipsis-map . g$9364$sFNhI)
        (&no-nans-rcd . g$13062$sFNhI)
        (&no-nans-rtd . g$13061$sFNhI)
        (&no-infinities-rcd . g$13060$sFNhI)
        (&no-infinities-rtd . g$13059$sFNhI)
        (&i/o-encoding-rcd . g$13058$sFNhI)
        (&i/o-encoding-rtd . g$13057$sFNhI)
        (&i/o-decoding-rcd . g$13056$sFNhI)
        (&i/o-decoding-rtd . g$13055$sFNhI)
        (&i/o-port-rcd . g$13054$sFNhI)
        (&i/o-port-rtd . g$13053$sFNhI)
        (&i/o-file-does-not-exist-rcd . g$13052$sFNhI)
        (&i/o-file-does-not-exist-rtd . g$13051$sFNhI)
        (&i/o-file-already-exists-rcd . g$13050$sFNhI)
        (&i/o-file-already-exists-rtd . g$13049$sFNhI)
        (&i/o-file-is-read-only-rcd . g$13048$sFNhI)
        (&i/o-file-is-read-only-rtd . g$13047$sFNhI)
        (&i/o-file-protection-rcd . g$13046$sFNhI)
        (&i/o-file-protection-rtd . g$13045$sFNhI)
        (&i/o-filename-rcd . g$13044$sFNhI)
        (&i/o-filename-rtd . g$13043$sFNhI)
        (&i/o-invalid-position-rcd . g$13042$sFNhI)
        (&i/o-invalid-position-rtd . g$13041$sFNhI)
        (&i/o-write-rcd . g$13040$sFNhI)
        (&i/o-write-rtd . g$13039$sFNhI)
        (&i/o-read-rcd . g$13038$sFNhI)
        (&i/o-read-rtd . g$13037$sFNhI)
        (&i/o-rcd . g$13036$sFNhI)
        (&i/o-rtd . g$13035$sFNhI)
        (&undefined-rcd . g$13034$sFNhI)
        (&undefined-rtd . g$13033$sFNhI)
        (&syntax-rcd . g$13032$sFNhI)
        (&syntax-rtd . g$13031$sFNhI)
        (&lexical-rcd . g$13030$sFNhI)
        (&lexical-rtd . g$13029$sFNhI)
        (&implementation-restriction-rcd . g$13028$sFNhI)
        (&implementation-restriction-rtd . g$13027$sFNhI)
        (&non-continuable-rcd . g$13026$sFNhI)
        (&non-continuable-rtd . g$13025$sFNhI)
        (&who-rcd . g$13024$sFNhI)
        (&who-rtd . g$13023$sFNhI)
        (&irritants-rcd . g$13022$sFNhI)
        (&irritants-rtd . g$13021$sFNhI)
        (&assertion-rcd . g$13020$sFNhI)
        (&assertion-rtd . g$13019$sFNhI)
        (&violation-rcd . g$13018$sFNhI)
        (&violation-rtd . g$13017$sFNhI)
        (&error-rcd . g$13016$sFNhI)
        (&error-rtd . g$13015$sFNhI)
        (&serious-rcd . g$13014$sFNhI)
        (&serious-rtd . g$13013$sFNhI)
        (&warning-rcd . g$13012$sFNhI)
        (&warning-rtd . g$13011$sFNhI)
        (&message-rcd . g$13010$sFNhI)
        (&message-rtd . g$13009$sFNhI)
        (&condition-rcd . g$13008$sFNhI)
        (&condition-rtd . g$13007$sFNhI)
        (library-letrec* . g$13006$sFNhI)
        (annotation-stripped . g$13005$sFNhI)
        (annotation-source . g$13004$sFNhI)
        (annotation-expression . g$13003$sFNhI)
        (annotation? . g$13002$sFNhI)
        (read-annotated . g$13001$sFNhI)
        (tanh . g$13000$sFNhI)
        (cosh . g$12999$sFNhI)
        (sinh . g$12998$sFNhI)
        (make-guid . g$12997$sFNhI)
        (unspecified? . g$12996$sFNhI)
        (make-list . g$5958$sFNhI)
        (last-pair . g$5957$sFNhI)
        (load-r5rs . g$12995$sFNhI)
        (license . g$12994$sFNhI)
        (stacktrace . g$12993$sFNhI)
        (ironscheme-build . g$12494$sFNhI)
        (define-clr-class-internal . g$12992$sFNhI)
        (clr-field-set!-internal . g$12991$sFNhI)
        (clr-field-get-internal . g$12990$sFNhI)
        (clr-cast-internal . g$12989$sFNhI)
        (clr-call-internal . g$12988$sFNhI)
        (clr-new-internal . g$12987$sFNhI)
        (clr-new-array-internal . g$12986$sFNhI)
        (clr-is-internal . g$12985$sFNhI)
        (clr-reference-internal . g$12984$sFNhI)
        (clr-using-internal . g$12983$sFNhI)
        (syntax-error . g$9489$sFNhI)
        (syntax-dispatch . g$9359$sFNhI)
        (compile-core . g$12982$sFNhI)
        (eval-core . g$12981$sFNhI)
        (set-symbol-value! . g$12980$sFNhI)
        (symbol-value . g$12979$sFNhI)
        (symbol-bound? . g$12978$sFNhI)
        (ungensym . g$12977$sFNhI)
        (gensym . g$12976$sFNhI)
        (void . g$12975$sFNhI)
        (load-serialized-library . g$12974$sFNhI)
        (serialize-library . g$12973$sFNhI)
        (compile-system-libraries . g$12497$sFNhI)
        (compile->closure . g$12499$sFNhI)
        (compile . g$12498$sFNhI)
        (load . g$12493$sFNhI)
        (string-normalize . g$12972$sFNhI)
        (interaction-environment . g$9499$sFNhI)
        (char-ready? . g$12971$sFNhI)
        (string-upcase . g$12970$sFNhI)
        (string-titlecase . g$12969$sFNhI)
        (string-normalize-nfkd . g$7237$sFNhI)
        (string-normalize-nfkc . g$7236$sFNhI)
        (string-normalize-nfd . g$7235$sFNhI)
        (string-normalize-nfc . g$7234$sFNhI)
        (string-foldcase . g$12968$sFNhI)
        (string-downcase . g$12967$sFNhI)
        (string-ci>? . g$7192$sFNhI)
        (string-ci>=? . g$7194$sFNhI)
        (string-ci=? . g$7190$sFNhI)
        (string-ci<? . g$7191$sFNhI)
        (string-ci<=? . g$7193$sFNhI)
        (char-whitespace? . g$12966$sFNhI)
        (char-upper-case? . g$12965$sFNhI)
        (char-title-case? . g$12964$sFNhI)
        (char-numeric? . g$12963$sFNhI)
        (char-lower-case? . g$12962$sFNhI)
        (char-general-category . g$12961$sFNhI)
        (char-upcase . g$12960$sFNhI)
        (char-titlecase . g$12959$sFNhI)
        (char-foldcase . g$12958$sFNhI)
        (char-downcase . g$12957$sFNhI)
        (char-ci>? . g$7231$sFNhI)
        (char-ci>=? . g$7233$sFNhI)
        (char-ci=? . g$7229$sFNhI)
        (char-ci<? . g$7230$sFNhI)
        (char-ci<=? . g$7232$sFNhI)
        (char-alphabetic? . g$12956$sFNhI)
        (variable-transformer-procedure . g$9096$sFNhI)
        (variable-transformer? . g$9095$sFNhI)
        (make-variable-transformer . g$9093$sFNhI)
        (identifier? . g$9493$sFNhI)
        (generate-temporaries . g$9482$sFNhI)
        (free-identifier=? . g$9483$sFNhI)
        (syntax->datum . g$9495$sFNhI)
        (datum->syntax . g$9494$sFNhI)
        (bound-identifier=? . g$9484$sFNhI)
        (record-type-descriptor? . g$12955$sFNhI)
        (record-predicate . g$12954$sFNhI)
        (record-mutator . g$12953$sFNhI)
        (record-constructor . g$12952$sFNhI)
        (record-accessor . g$12951$sFNhI)
        (make-record-type-descriptor . g$12950$sFNhI)
        (make-record-constructor-descriptor . g$12949$sFNhI)
        (record? . g$12948$sFNhI)
        (record-type-uid . g$12947$sFNhI)
        (record-type-sealed? . g$12946$sFNhI)
        (record-type-parent . g$12945$sFNhI)
        (record-type-opaque? . g$12944$sFNhI)
        (record-type-name . g$12943$sFNhI)
        (record-type-generative? . g$12942$sFNhI)
        (record-type-field-names . g$12941$sFNhI)
        (record-rtd . g$12940$sFNhI)
        (record-field-mutable? . g$12939$sFNhI)
        (delete-file . g$6766$sFNhI)
        (file-exists? . g$6765$sFNhI)
        (vector-sort! . g$12938$sFNhI)
        (vector-sort . g$12937$sFNhI)
        (list-sort . g$7132$sFNhI)
        (symbol-hash . g$12936$sFNhI)
        (string-ci-hash . g$12935$sFNhI)
        (string-hash . g$12934$sFNhI)
        (equal-hash . g$12933$sFNhI)
        (hashtable-equivalence-function . g$12932$sFNhI)
        (make-hashtable . g$12931$sFNhI)
        (hashtable-hash-function . g$12930$sFNhI)
        (make-eqv-hashtable . g$6734$sFNhI)
        (make-eq-hashtable . g$6733$sFNhI)
        (hashtable? . g$12929$sFNhI)
        (hashtable-update! . g$6740$sFNhI)
        (hashtable-size . g$6735$sFNhI)
        (hashtable-set! . g$6737$sFNhI)
        (hashtable-ref . g$6736$sFNhI)
        (hashtable-mutable? . g$12928$sFNhI)
        (hashtable-keys . g$12927$sFNhI)
        (hashtable-entries . g$12926$sFNhI)
        (hashtable-delete! . g$6738$sFNhI)
        (hashtable-copy . g$12925$sFNhI)
        (hashtable-contains? . g$6739$sFNhI)
        (hashtable-clear! . g$6741$sFNhI)
        (call-with-output-file . g$7782$sFNhI)
        (call-with-input-file . g$7781$sFNhI)
        (write-char . g$7763$sFNhI)
        (write . g$12924$sFNhI)
        (with-output-to-file . g$7780$sFNhI)
        (with-input-from-file . g$7779$sFNhI)
        (read-char . g$7762$sFNhI)
        (read . g$12923$sFNhI)
        (peek-char . g$7761$sFNhI)
        (open-output-file . g$12922$sFNhI)
        (open-input-file . g$12921$sFNhI)
        (newline . g$7783$sFNhI)
        (display . g$12920$sFNhI)
        (close-output-port . g$12919$sFNhI)
        (close-input-port . g$12918$sFNhI)
        (eof-object? . g$12917$sFNhI)
        (eof-object . g$12916$sFNhI)
        (current-error-port . g$12915$sFNhI)
        (current-output-port . g$12914$sFNhI)
        (current-input-port . g$12913$sFNhI)
        (output-port? . g$12912$sFNhI)
        (input-port? . g$12911$sFNhI)
        (utf-8-codec . g$12910$sFNhI)
        (utf-16-codec . g$12909$sFNhI)
        (transcoder-error-handling-mode . g$12908$sFNhI)
        (transcoder-eol-style . g$12907$sFNhI)
        (transcoder-codec . g$12906$sFNhI)
        (transcoded-port . g$12905$sFNhI)
        (textual-port? . g$12904$sFNhI)
        (string->bytevector . g$12903$sFNhI)
        (standard-output-port . g$12902$sFNhI)
        (standard-input-port . g$12901$sFNhI)
        (standard-error-port . g$12900$sFNhI)
        (set-port-position! . g$12899$sFNhI)
        (put-u8 . g$12898$sFNhI)
        (put-string . g$12897$sFNhI)
        (put-datum . g$7741$sFNhI)
        (put-char . g$12896$sFNhI)
        (put-bytevector . g$12895$sFNhI)
        (port? . g$7746$sFNhI)
        (port-transcoder . g$12894$sFNhI)
        (port-position . g$12893$sFNhI)
        (port-has-set-port-position!? . g$12892$sFNhI)
        (port-has-port-position? . g$12891$sFNhI)
        (port-eof? . g$12890$sFNhI)
        (output-port-buffer-mode . g$12889$sFNhI)
        (open-string-output-port . g$7745$sFNhI)
        (open-string-input-port . g$12888$sFNhI)
        (open-file-output-port . g$12887$sFNhI)
        (open-file-input/output-port . g$12886$sFNhI)
        (open-file-input-port . g$12885$sFNhI)
        (open-bytevector-output-port . g$12884$sFNhI)
        (open-bytevector-input-port . g$12883$sFNhI)
        (native-transcoder . g$12882$sFNhI)
        (native-eol-style . g$12881$sFNhI)
        (make-transcoder . g$12880$sFNhI)
        (latin-1-codec . g$12879$sFNhI)
        (make-i/o-write-error . g$7599$sFNhI)
        (make-i/o-read-error . g$7585$sFNhI)
        (make-i/o-port-error . g$7704$sFNhI)
        (make-i/o-invalid-position-error . g$7614$sFNhI)
        (make-i/o-filename-error . g$7631$sFNhI)
        (make-i/o-file-protection-error . g$7647$sFNhI)
        (make-i/o-file-is-read-only-error . g$7661$sFNhI)
        (make-i/o-file-does-not-exist-error . g$7689$sFNhI)
        (make-i/o-file-already-exists-error . g$7675$sFNhI)
        (make-i/o-error . g$7571$sFNhI)
        (make-i/o-encoding-error . g$7735$sFNhI)
        (make-i/o-decoding-error . g$7720$sFNhI)
        (make-custom-textual-output-port . g$12878$sFNhI)
        (make-custom-textual-input/output-port . g$12877$sFNhI)
        (make-custom-textual-input-port . g$12876$sFNhI)
        (make-custom-binary-output-port . g$12875$sFNhI)
        (make-custom-binary-input/output-port . g$12874$sFNhI)
        (make-custom-binary-input-port . g$12873$sFNhI)
        (make-bytevector . g$12872$sFNhI)
        (lookahead-u8 . g$12871$sFNhI)
        (lookahead-char . g$12870$sFNhI)
        (i/o-write-error? . g$7600$sFNhI)
        (i/o-read-error? . g$7586$sFNhI)
        (i/o-port-error? . g$7706$sFNhI)
        (i/o-invalid-position-error? . g$7616$sFNhI)
        (i/o-error-position . g$7617$sFNhI)
        (i/o-filename-error? . g$7633$sFNhI)
        (i/o-file-protection-error? . g$7648$sFNhI)
        (i/o-file-is-read-only-error? . g$7662$sFNhI)
        (i/o-file-does-not-exist-error? . g$7690$sFNhI)
        (i/o-file-already-exists-error? . g$7676$sFNhI)
        (i/o-error? . g$7572$sFNhI)
        (i/o-error-port . g$7707$sFNhI)
        (i/o-error-filename . g$7634$sFNhI)
        (i/o-encoding-error? . g$7737$sFNhI)
        (i/o-encoding-error-char . g$7738$sFNhI)
        (i/o-decoding-error? . g$7721$sFNhI)
        (get-u8 . g$12869$sFNhI)
        (get-string-n! . g$12868$sFNhI)
        (get-string-n . g$12867$sFNhI)
        (get-string-all . g$12866$sFNhI)
        (get-line . g$12865$sFNhI)
        (get-datum . g$7742$sFNhI)
        (get-char . g$12864$sFNhI)
        (get-bytevector-some . g$12863$sFNhI)
        (get-bytevector-n! . g$12862$sFNhI)
        (get-bytevector-n . g$12861$sFNhI)
        (get-bytevector-all . g$12860$sFNhI)
        (flush-output-port . g$12859$sFNhI)
        (close-port . g$12858$sFNhI)
        (call-with-string-output-port . g$7747$sFNhI)
        (call-with-port . g$7748$sFNhI)
        (call-with-bytevector-output-port . g$12857$sFNhI)
        (bytevector->string . g$12856$sFNhI)
        (buffer-mode? . g$12855$sFNhI)
        (binary-port? . g$12854$sFNhI)
        (scheme-report-environment . g$9472$sFNhI)
        (quotient . g$7111$sFNhI)
        (null-environment . g$9471$sFNhI)
        (remainder . g$7112$sFNhI)
        (modulo . g$7113$sFNhI)
        (inexact->exact . g$7108$sFNhI)
        (force . g$7115$sFNhI)
        (exact->inexact . g$7109$sFNhI)
        (exit . g$12853$sFNhI)
        (command-line . g$12490$sFNhI)
        (string-fill! . g$12852$sFNhI)
        (string-set! . g$12851$sFNhI)
        (set-cdr! . g$12850$sFNhI)
        (set-car! . g$12849$sFNhI)
        (remove . g$5980$sFNhI)
        (remv . g$5981$sFNhI)
        (remp . g$5961$sFNhI)
        (remq . g$5982$sFNhI)
        (partition . g$5960$sFNhI)
        (memv . g$5968$sFNhI)
        (memq . g$5967$sFNhI)
        (memp . g$5970$sFNhI)
        (member . g$5969$sFNhI)
        (exists . g$5974$sFNhI)
        (for-all . g$5973$sFNhI)
        (fold-right . g$5979$sFNhI)
        (fold-left . g$5978$sFNhI)
        (find . g$5959$sFNhI)
        (filter . g$5962$sFNhI)
        (cons* . g$5977$sFNhI)
        (assv . g$5964$sFNhI)
        (assq . g$5963$sFNhI)
        (assp . g$5966$sFNhI)
        (assoc . g$5965$sFNhI)
        (with-exception-handler . g$12848$sFNhI)
        (raise-continuable . g$12847$sFNhI)
        (raise . g$12846$sFNhI)
        (eval . g$9474$sFNhI)
        (environment . g$9470$sFNhI)
        (make-enumeration . g$7847$sFNhI)
        (enum-set=? . g$7854$sFNhI)
        (enum-set-universe . g$7848$sFNhI)
        (enum-set-union . g$7855$sFNhI)
        (enum-set-subset? . g$7853$sFNhI)
        (enum-set-projection . g$7859$sFNhI)
        (enum-set-member? . g$7852$sFNhI)
        (enum-set-intersection . g$7856$sFNhI)
        (enum-set-indexer . g$7849$sFNhI)
        (enum-set-difference . g$7857$sFNhI)
        (enum-set-constructor . g$7850$sFNhI)
        (enum-set-complement . g$7858$sFNhI)
        (enum-set->list . g$7851$sFNhI)
        (who-condition? . g$7020$sFNhI)
        (warning? . g$6931$sFNhI)
        (violation? . g$6973$sFNhI)
        (undefined-violation? . g$7097$sFNhI)
        (syntax-violation? . g$7081$sFNhI)
        (syntax-violation-subform . g$7083$sFNhI)
        (syntax-violation-form . g$7082$sFNhI)
        (syntax-violation . g$9492$sFNhI)
        (simple-conditions . g$12845$sFNhI)
        (serious-condition? . g$6945$sFNhI)
        (non-continuable-violation? . g$7035$sFNhI)
        (message-condition? . g$6916$sFNhI)
        (make-who-condition . g$7018$sFNhI)
        (make-warning . g$6930$sFNhI)
        (make-violation . g$6972$sFNhI)
        (make-undefined-violation . g$7096$sFNhI)
        (make-syntax-violation . g$7078$sFNhI)
        (make-serious-condition . g$6944$sFNhI)
        (make-non-continuable-violation . g$7034$sFNhI)
        (make-message-condition . g$6914$sFNhI)
        (make-lexical-violation . g$7062$sFNhI)
        (make-irritants-condition . g$7001$sFNhI)
        (make-implementation-restriction-violation . g$7048$sFNhI)
        (make-error . g$6958$sFNhI)
        (make-assertion-violation . g$6986$sFNhI)
        (lexical-violation? . g$7063$sFNhI)
        (irritants-condition? . g$7003$sFNhI)
        (implementation-restriction-violation? . g$7049$sFNhI)
        (error? . g$6959$sFNhI)
        (condition-who . g$7021$sFNhI)
        (condition-predicate . g$12844$sFNhI)
        (condition-message . g$6917$sFNhI)
        (condition-irritants . g$7004$sFNhI)
        (condition-accessor . g$12843$sFNhI)
        (condition . g$12842$sFNhI)
        (assertion-violation? . g$6987$sFNhI)
        (condition? . g$12841$sFNhI)
        (utf32->string . g$12840$sFNhI)
        (utf16->string . g$12839$sFNhI)
        (utf8->string . g$12838$sFNhI)
        (uint-list->bytevector . g$12837$sFNhI)
        (u8-list->bytevector . g$12836$sFNhI)
        (string->utf8 . g$12835$sFNhI)
        (string->utf32 . g$12834$sFNhI)
        (string->utf16 . g$12833$sFNhI)
        (sint-list->bytevector . g$12832$sFNhI)
        (native-endianness . g$6772$sFNhI)
        (bytevector? . g$6400$sFNhI)
        (bytevector=? . g$12831$sFNhI)
        (bytevector-uint-set! . g$12830$sFNhI)
        (bytevector-uint-ref . g$12829$sFNhI)
        (bytevector-u8-set! . g$12828$sFNhI)
        (bytevector-u8-ref . g$12827$sFNhI)
        (bytevector-u64-set! . g$6793$sFNhI)
        (bytevector-u64-ref . g$6789$sFNhI)
        (bytevector-u64-native-set! . g$6795$sFNhI)
        (bytevector-u64-native-ref . g$6791$sFNhI)
        (bytevector-u32-set! . g$6785$sFNhI)
        (bytevector-u32-ref . g$6781$sFNhI)
        (bytevector-u32-native-set! . g$6787$sFNhI)
        (bytevector-u32-native-ref . g$6783$sFNhI)
        (bytevector-u16-set! . g$6777$sFNhI)
        (bytevector-u16-ref . g$6773$sFNhI)
        (bytevector-u16-native-set! . g$6779$sFNhI)
        (bytevector-u16-native-ref . g$6775$sFNhI)
        (bytevector-sint-set! . g$12826$sFNhI)
        (bytevector-sint-ref . g$12825$sFNhI)
        (bytevector-s8-set! . g$12824$sFNhI)
        (bytevector-s8-ref . g$12823$sFNhI)
        (bytevector-s64-set! . g$6794$sFNhI)
        (bytevector-s64-ref . g$6790$sFNhI)
        (bytevector-s64-native-set! . g$6796$sFNhI)
        (bytevector-s64-native-ref . g$6792$sFNhI)
        (bytevector-s32-set! . g$6786$sFNhI)
        (bytevector-s32-ref . g$6782$sFNhI)
        (bytevector-s32-native-set! . g$6788$sFNhI)
        (bytevector-s32-native-ref . g$6784$sFNhI)
        (bytevector-s16-set! . g$6778$sFNhI)
        (bytevector-s16-ref . g$6774$sFNhI)
        (bytevector-s16-native-set! . g$6780$sFNhI)
        (bytevector-s16-native-ref . g$6776$sFNhI)
        (bytevector-length . g$12822$sFNhI)
        (bytevector-ieee-single-set! . g$12821$sFNhI)
        (bytevector-ieee-single-ref . g$12820$sFNhI)
        (bytevector-ieee-single-native-set! . g$6799$sFNhI)
        (bytevector-ieee-single-native-ref . g$6797$sFNhI)
        (bytevector-ieee-double-set! . g$12819$sFNhI)
        (bytevector-ieee-double-ref . g$12818$sFNhI)
        (bytevector-ieee-double-native-set! . g$6800$sFNhI)
        (bytevector-ieee-double-native-ref . g$6798$sFNhI)
        (bytevector-fill! . g$12817$sFNhI)
        (bytevector-copy! . g$12816$sFNhI)
        (bytevector-copy . g$12815$sFNhI)
        (bytevector->uint-list . g$12814$sFNhI)
        (bytevector->u8-list . g$12813$sFNhI)
        (bytevector->sint-list . g$12812$sFNhI)
        (no-nans-violation? . g$7484$sFNhI)
        (no-infinities-violation? . g$7470$sFNhI)
        (make-no-nans-violation . g$7483$sFNhI)
        (make-no-infinities-violation . g$7469$sFNhI)
        (real->flonum . g$12811$sFNhI)
        (flzero? . g$7452$sFNhI)
        (fltruncate . g$7447$sFNhI)
        (fltan . g$7437$sFNhI)
        (flsqrt . g$7442$sFNhI)
        (flsin . g$7435$sFNhI)
        (flround . g$7448$sFNhI)
        (flpositive? . g$7450$sFNhI)
        (flonum? . g$6405$sFNhI)
        (flodd? . g$7454$sFNhI)
        (flnumerator . g$12810$sFNhI)
        (flnegative? . g$7451$sFNhI)
        (flnan? . g$7434$sFNhI)
        (flmod0 . g$7430$sFNhI)
        (flmod . g$7429$sFNhI)
        (flmin . g$7456$sFNhI)
        (flmax . g$7455$sFNhI)
        (fllog . g$7441$sFNhI)
        (flinteger? . g$7431$sFNhI)
        (flinfinite? . g$7433$sFNhI)
        (flfloor . g$7446$sFNhI)
        (flfinite? . g$7432$sFNhI)
        (flexpt . g$7444$sFNhI)
        (flexp . g$7443$sFNhI)
        (fleven? . g$7453$sFNhI)
        (fldiv0-and-mod0 . g$7426$sFNhI)
        (fldiv0 . g$7428$sFNhI)
        (fldiv-and-mod . g$7425$sFNhI)
        (fldiv . g$7427$sFNhI)
        (fldenominator . g$12809$sFNhI)
        (flcos . g$7436$sFNhI)
        (flceiling . g$7445$sFNhI)
        (flatan . g$7440$sFNhI)
        (flasin . g$7438$sFNhI)
        (flacos . g$7439$sFNhI)
        (flabs . g$7449$sFNhI)
        (fl>? . g$12808$sFNhI)
        (fl>=? . g$12807$sFNhI)
        (fl=? . g$12806$sFNhI)
        (fl<? . g$12805$sFNhI)
        (fl<=? . g$12804$sFNhI)
        (fl/ . g$12803$sFNhI)
        (fl- . g$12802$sFNhI)
        (fl+ . g$12801$sFNhI)
        (fl* . g$12800$sFNhI)
        (fixnum->flonum . g$12799$sFNhI)
        (fxzero? . g$7333$sFNhI)
        (fxxor . g$12798$sFNhI)
        (fxrotate-bit-field . g$7347$sFNhI)
        (fxreverse-bit-field . g$12797$sFNhI)
        (fxpositive? . g$7331$sFNhI)
        (fxodd? . g$7335$sFNhI)
        (fxnot . g$12796$sFNhI)
        (fxnegative? . g$7332$sFNhI)
        (fxmod0 . g$7330$sFNhI)
        (fxmod . g$7329$sFNhI)
        (fxmin . g$7337$sFNhI)
        (fxmax . g$7336$sFNhI)
        (fxlength . g$12795$sFNhI)
        (fxior . g$12794$sFNhI)
        (fxif . g$7341$sFNhI)
        (fxfirst-bit-set . g$12793$sFNhI)
        (fxeven? . g$7334$sFNhI)
        (fxdiv0-and-mod0 . g$12792$sFNhI)
        (fxdiv0 . g$7328$sFNhI)
        (fxdiv-and-mod . g$12791$sFNhI)
        (fxdiv . g$7327$sFNhI)
        (fxcopy-bit-field . g$7344$sFNhI)
        (fxcopy-bit . g$7342$sFNhI)
        (fxbit-set? . g$12790$sFNhI)
        (fxbit-field . g$7343$sFNhI)
        (fxbit-count . g$12789$sFNhI)
        (fxarithmetic-shift-right . g$7346$sFNhI)
        (fxarithmetic-shift-left . g$7345$sFNhI)
        (fxarithmetic-shift . g$12788$sFNhI)
        (fxand . g$12787$sFNhI)
        (fx>? . g$12786$sFNhI)
        (fx>=? . g$12785$sFNhI)
        (fx=? . g$12784$sFNhI)
        (fx<? . g$12783$sFNhI)
        (fx<=? . g$12782$sFNhI)
        (fx-/carry . g$7339$sFNhI)
        (fx- . g$12781$sFNhI)
        (fx+/carry . g$7340$sFNhI)
        (fx+ . g$12780$sFNhI)
        (fx*/carry . g$7338$sFNhI)
        (fx* . g$12779$sFNhI)
        (greatest-fixnum . g$12778$sFNhI)
        (least-fixnum . g$12777$sFNhI)
        (fixnum-width . g$6406$sFNhI)
        (fixnum? . g$6404$sFNhI)
        (bitwise-rotate-bit-field . g$7301$sFNhI)
        (bitwise-reverse-bit-field . g$12776$sFNhI)
        (bitwise-length . g$12775$sFNhI)
        (bitwise-if . g$7295$sFNhI)
        (bitwise-first-bit-set . g$12774$sFNhI)
        (bitwise-copy-bit-field . g$7298$sFNhI)
        (bitwise-copy-bit . g$7296$sFNhI)
        (bitwise-bit-set? . g$12773$sFNhI)
        (bitwise-bit-field . g$7297$sFNhI)
        (bitwise-bit-count . g$12772$sFNhI)
        (bitwise-xor . g$12771$sFNhI)
        (bitwise-ior . g$12770$sFNhI)
        (bitwise-and . g$12769$sFNhI)
        (bitwise-not . g$12768$sFNhI)
        (bitwise-arithmetic-shift-right . g$7300$sFNhI)
        (bitwise-arithmetic-shift-left . g$7299$sFNhI)
        (bitwise-arithmetic-shift . g$12767$sFNhI)
        (zero? . g$6439$sFNhI)
        (vector? . g$6399$sFNhI)
        (vector-set! . g$12766$sFNhI)
        (vector-ref . g$12765$sFNhI)
        (vector-map . g$6533$sFNhI)
        (vector-length . g$12764$sFNhI)
        (vector-for-each . g$6534$sFNhI)
        (vector-fill! . g$6407$sFNhI)
        (vector->list . g$12763$sFNhI)
        (vector . g$12762$sFNhI)
        (values . g$12761$sFNhI)
        (truncate . g$12760$sFNhI)
        (tan . g$12759$sFNhI)
        (symbol? . g$6401$sFNhI)
        (symbol=? . g$6487$sFNhI)
        (symbol->string . g$12758$sFNhI)
        (substring . g$12757$sFNhI)
        (string? . g$12756$sFNhI)
        (string>? . g$6484$sFNhI)
        (string>=? . g$6486$sFNhI)
        (string=? . g$6482$sFNhI)
        (string<? . g$6483$sFNhI)
        (string<=? . g$6485$sFNhI)
        (string-ref . g$12755$sFNhI)
        (string-length . g$12754$sFNhI)
        (string-for-each . g$6535$sFNhI)
        (string-copy . g$12753$sFNhI)
        (string-append . g$12752$sFNhI)
        (string->symbol . g$12751$sFNhI)
        (string->number . g$12750$sFNhI)
        (string->list . g$12749$sFNhI)
        (string . g$12748$sFNhI)
        (sqrt . g$12747$sFNhI)
        (sin . g$12746$sFNhI)
        (round . g$12745$sFNhI)
        (reverse . g$6408$sFNhI)
        (real? . g$12744$sFNhI)
        (real-valued? . g$12743$sFNhI)
        (real-part . g$12742$sFNhI)
        (rationalize . g$6530$sFNhI)
        (rational? . g$12741$sFNhI)
        (rational-valued? . g$12740$sFNhI)
        (procedure? . g$6403$sFNhI)
        (positive? . g$6437$sFNhI)
        (pair? . g$12739$sFNhI)
        (odd? . g$6441$sFNhI)
        (numerator . g$12738$sFNhI)
        (number? . g$12737$sFNhI)
        (number->string . g$12736$sFNhI)
        (null? . g$12735$sFNhI)
        (not . g$12734$sFNhI)
        (negative? . g$6438$sFNhI)
        (nan? . g$12733$sFNhI)
        (min . g$6443$sFNhI)
        (max . g$6442$sFNhI)
        (map . g$5975$sFNhI)
        (make-vector . g$12732$sFNhI)
        (make-string . g$12731$sFNhI)
        (make-rectangular . g$12730$sFNhI)
        (make-polar . g$12729$sFNhI)
        (magnitude . g$12728$sFNhI)
        (log . g$12727$sFNhI)
        (list? . g$12726$sFNhI)
        (list-tail . g$5955$sFNhI)
        (list-ref . g$5956$sFNhI)
        (list->vector . g$6396$sFNhI)
        (list->string . g$6397$sFNhI)
        (list . g$12725$sFNhI)
        (length . g$12724$sFNhI)
        (lcm . g$6445$sFNhI)
        (integer? . g$12723$sFNhI)
        (integer-valued? . g$12722$sFNhI)
        (integer->char . g$12721$sFNhI)
        (infinite? . g$12720$sFNhI)
        (inexact? . g$12719$sFNhI)
        (inexact . g$12718$sFNhI)
        (imag-part . g$12717$sFNhI)
        (gcd . g$6444$sFNhI)
        (for-each . g$5976$sFNhI)
        (floor . g$12716$sFNhI)
        (finite? . g$12715$sFNhI)
        (expt . g$12714$sFNhI)
        (exp . g$12713$sFNhI)
        (exact? . g$12712$sFNhI)
        (exact-integer-sqrt . g$12711$sFNhI)
        (exact . g$12710$sFNhI)
        (even? . g$6440$sFNhI)
        (error . g$12709$sFNhI)
        (eqv? . g$12708$sFNhI)
        (equal? . g$12707$sFNhI)
        (eq? . g$12706$sFNhI)
        (dynamic-wind . g$12705$sFNhI)
        (div0-and-mod0 . g$12704$sFNhI)
        (mod0 . g$6395$sFNhI)
        (div0 . g$6393$sFNhI)
        (div-and-mod . g$12703$sFNhI)
        (mod . g$6394$sFNhI)
        (div . g$6392$sFNhI)
        (denominator . g$12702$sFNhI)
        (cos . g$12701$sFNhI)
        (cons . g$12700$sFNhI)
        (complex? . g$12699$sFNhI)
        (char? . g$6398$sFNhI)
        (char>? . g$6527$sFNhI)
        (char>=? . g$6529$sFNhI)
        (char=? . g$6525$sFNhI)
        (char<? . g$6526$sFNhI)
        (char<=? . g$6528$sFNhI)
        (char->integer . g$12698$sFNhI)
        (ceiling . g$12697$sFNhI)
        (call-with-values . g$12696$sFNhI)
        (call/cc . g$12695$sFNhI)
        (call-with-current-continuation . g$12694$sFNhI)
        (cddddr . g$6436$sFNhI)
        (cdddar . g$6435$sFNhI)
        (cddadr . g$6434$sFNhI)
        (cddaar . g$6433$sFNhI)
        (cdaddr . g$6432$sFNhI)
        (cdadar . g$6431$sFNhI)
        (cdaadr . g$6430$sFNhI)
        (cdaaar . g$6429$sFNhI)
        (cadddr . g$6428$sFNhI)
        (caddar . g$6427$sFNhI)
        (cadadr . g$6426$sFNhI)
        (cadaar . g$6425$sFNhI)
        (caaddr . g$6424$sFNhI)
        (caadar . g$6423$sFNhI)
        (caaadr . g$6422$sFNhI)
        (caaaar . g$6421$sFNhI)
        (cdddr . g$6420$sFNhI)
        (cddar . g$6419$sFNhI)
        (cdadr . g$6418$sFNhI)
        (cdaar . g$6417$sFNhI)
        (caddr . g$6416$sFNhI)
        (cadar . g$6415$sFNhI)
        (caadr . g$6414$sFNhI)
        (caaar . g$6413$sFNhI)
        (cddr . g$6412$sFNhI)
        (cdar . g$6411$sFNhI)
        (cadr . g$6410$sFNhI)
        (caar . g$6409$sFNhI)
        (cdr . g$12693$sFNhI)
        (car . g$12692$sFNhI)
        (boolean? . g$6402$sFNhI)
        (boolean=? . g$6488$sFNhI)
        (atan . g$12691$sFNhI)
        (assertion-violation . g$12690$sFNhI)
        (asin . g$12689$sFNhI)
        (apply . g$12688$sFNhI)
        (append . g$12687$sFNhI)
        (angle . g$12686$sFNhI)
        (acos . g$12685$sFNhI)
        (abs . g$12684$sFNhI)
        (/ . g$12683$sFNhI)
        (* . g$12682$sFNhI)
        (- . g$12681$sFNhI)
        (+ . g$12680$sFNhI)
        (>= . g$12679$sFNhI)
        (> . g$12678$sFNhI)
        (= . g$12677$sFNhI)
        (<= . g$12676$sFNhI)
        (< . g$12675$sFNhI)
        (make-record-printer . g$12674$sFNhI)
        (eqv-hash . g$12673$sFNhI)
        (reverse! . g$12672$sFNhI)
        (deserialize-port . g$12671$sFNhI)
        (serialize-port . g$12670$sFNhI)
        (enum-set? . g$7822$sFNhI)
        (make-promise . g$7114$sFNhI)
        (load/args . g$12492$sFNhI)
        (printf . g$7933$sFNhI)
        (fprintf . g$7934$sFNhI)
        (format . g$7935$sFNhI)
        (procedure-form . g$12669$sFNhI)
        (procedure-environment . g$12668$sFNhI)
        (procedure-name . g$12667$sFNhI)
        (procedure-arity . g$12666$sFNhI)
        (gc-collect . g$12665$sFNhI)
        (clr-type? . g$12664$sFNhI)
        (get-clr-type . g$12663$sFNhI)
        (get-command-line . g$12662$sFNhI)
        (vector-append . g$12661$sFNhI)
        (vector-filter . g$12660$sFNhI)
        (vector-reverse! . g$12659$sFNhI)
        (vector-contains? . g$12658$sFNhI)
        (vector-index-of . g$12657$sFNhI)
        (vector-copy . g$12656$sFNhI)
        (vector-binary-search . g$12655$sFNhI)
        (string-ci-compare . g$12654$sFNhI)
        (string-compare . g$12653$sFNhI)
        (string-format . g$12652$sFNhI)
        (trace-printer . g$12489$sFNhI)
        (make-traced-procedure . g$12651$sFNhI)
        (make-traced-macro . g$7955$sFNhI)
        (assertion-error . g$9488$sFNhI)
        (time-it . g$12650$sFNhI)
        (make-parameter . g$8228$sFNhI)
        (library-locator . g$12649$sFNhI)
        (get-library-paths . g$12648$sFNhI)
        (open-tcp-input/output-port . g$12647$sFNhI)
        (hashtable-for-each . g$12646$sFNhI)
        (hashtable-map . g$12645$sFNhI)
        (environment-bindings . g$9466$sFNhI)
        (environment-symbols . g$9469$sFNhI)
        (interaction-environment-symbols . g$9465$sFNhI)
        (optimization-level . g$12644$sFNhI)
        (library-path . g$8639$sFNhI)
        (make-compile-time-value . g$9094$sFNhI)
        (expand->core . g$9475$sFNhI)
        (expand . g$9473$sFNhI)
        (convert->cps . g$8011$sFNhI)
        (installed-libraries . g$8660$sFNhI)
        (uninstall-library . g$8651$sFNhI)
        (&no-nans . g$12643$sFNhI)
        (&no-infinities . g$12642$sFNhI)
        (&i/o-encoding . g$12641$sFNhI)
        (&i/o-decoding . g$12640$sFNhI)
        (&i/o-port . g$12639$sFNhI)
        (&i/o-file-does-not-exist . g$12638$sFNhI)
        (&i/o-file-already-exists . g$12637$sFNhI)
        (&i/o-file-is-read-only . g$12636$sFNhI)
        (&i/o-file-protection . g$12635$sFNhI)
        (&i/o-filename . g$12634$sFNhI)
        (&i/o-invalid-position . g$12633$sFNhI)
        (&i/o-write . g$12632$sFNhI)
        (&i/o-read . g$12631$sFNhI)
        (&i/o . g$12630$sFNhI)
        (&non-continuable . g$12629$sFNhI)
        (&undefined . g$12628$sFNhI)
        (&syntax . g$12627$sFNhI)
        (&lexical . g$12626$sFNhI)
        (&implementation-restriction . g$12625$sFNhI)
        (&who . g$12624$sFNhI)
        (&irritants . g$12623$sFNhI)
        (&assertion . g$12622$sFNhI)
        (&violation . g$12621$sFNhI)
        (&error . g$12620$sFNhI)
        (&serious . g$12619$sFNhI)
        (&warning . g$12618$sFNhI)
        (&message . g$12617$sFNhI)
        (&condition . g$12616$sFNhI)
        (define-condition-type . g$12615$sFNhI)
        (define-enumeration . g$12614$sFNhI)
        (define-record-type . g$12613$sFNhI)
        (parent-rtd . g$12612$sFNhI)
        (nongenerative . g$12611$sFNhI)
        (opaque . g$12610$sFNhI)
        (sealed . g$12609$sFNhI)
        (protocol . g$12608$sFNhI)
        (parent . g$12607$sFNhI)
        (immutable . g$12606$sFNhI)
        (mutable . g$12605$sFNhI)
        (fields . g$12604$sFNhI)
        (error-handling-mode . g$12603$sFNhI)
        (file-options . g$12602$sFNhI)
        (buffer-mode . g$12601$sFNhI)
        (eol-style . g$12600$sFNhI)
        (guard . g$12599$sFNhI)
        (trace-letrec-syntax . g$12598$sFNhI)
        (trace-let-syntax . g$12597$sFNhI)
        (trace-define-syntax . g$12596$sFNhI)
        (trace-define . g$12595$sFNhI)
        (trace-lambda . g$12594$sFNhI)
        (unsyntax-splicing . g$12593$sFNhI)
        (unsyntax . g$12592$sFNhI)
        (unquote-splicing . g$12591$sFNhI)
        (unquote . g$12590$sFNhI)
        (_ . g$12589$sFNhI)
        (else . g$12588$sFNhI)
        (=> . g$12587$sFNhI)
        (... . g$12586$sFNhI)
        (assert . g$12585$sFNhI)
        (endianness . g$12584$sFNhI)
        (delay . g$12583$sFNhI)
        (time . g$12582$sFNhI)
        (or . g$12581$sFNhI)
        (and . g$12580$sFNhI)
        (do . g$12579$sFNhI)
        (cond . g$12578$sFNhI)
        (let* . g$12577$sFNhI)
        (let . g$12576$sFNhI)
        (identifier-syntax . g$12575$sFNhI)
        (with-syntax . g$12574$sFNhI)
        (quasisyntax . g$12573$sFNhI)
        (quasiquote . g$12572$sFNhI)
        (syntax-rules . g$12571$sFNhI)
        (include-into . g$12570$sFNhI)
        (include . g$12569$sFNhI)
        (define-struct . g$12568$sFNhI)
        (let-values . g$12567$sFNhI)
        (let*-values . g$12566$sFNhI)
        (record-constructor-descriptor . g$12565$sFNhI)
        (record-type-descriptor . g$12564$sFNhI)
        (fluid-let-syntax . g$12563$sFNhI)
        (case . g$12562$sFNhI)
        (parameterize . g$12561$sFNhI)
        (unless . g$12560$sFNhI)
        (when . g$12559$sFNhI)
        (if . g$12558$sFNhI)
        (letrec* . g$12557$sFNhI)
        (letrec . g$12556$sFNhI)
        (type-descriptor . g$12555$sFNhI)
        (case-lambda . g$12554$sFNhI)
        (lambda . g$12553$sFNhI)
        (syntax . g$12552$sFNhI)
        (syntax-case . g$12551$sFNhI)
        (quote . g$12550$sFNhI)
        (foreign-call . g$12549$sFNhI)
        (letrec-syntax . g$12548$sFNhI)
        (let-syntax . g$12547$sFNhI)
        (set! . g$12546$sFNhI)
        (export . g$12545$sFNhI)
        (import . g$12544$sFNhI)
        (library . g$12543$sFNhI)
        (begin . g$12542$sFNhI)
        (module . g$12541$sFNhI)
        (define-syntax . g$12540$sFNhI)
        (define . g$12539$sFNhI))
      '((g$9364$sFNhI core-prim . ellipsis-map)
        (g$13062$sFNhI core-prim . &no-nans-rcd)
        (g$13061$sFNhI core-prim . &no-nans-rtd)
        (g$13060$sFNhI core-prim . &no-infinities-rcd)
        (g$13059$sFNhI core-prim . &no-infinities-rtd)
        (g$13058$sFNhI core-prim . &i/o-encoding-rcd)
        (g$13057$sFNhI core-prim . &i/o-encoding-rtd)
        (g$13056$sFNhI core-prim . &i/o-decoding-rcd)
        (g$13055$sFNhI core-prim . &i/o-decoding-rtd)
        (g$13054$sFNhI core-prim . &i/o-port-rcd)
        (g$13053$sFNhI core-prim . &i/o-port-rtd)
        (g$13052$sFNhI core-prim . &i/o-file-does-not-exist-rcd)
        (g$13051$sFNhI core-prim . &i/o-file-does-not-exist-rtd)
        (g$13050$sFNhI core-prim . &i/o-file-already-exists-rcd)
        (g$13049$sFNhI core-prim . &i/o-file-already-exists-rtd)
        (g$13048$sFNhI core-prim . &i/o-file-is-read-only-rcd)
        (g$13047$sFNhI core-prim . &i/o-file-is-read-only-rtd)
        (g$13046$sFNhI core-prim . &i/o-file-protection-rcd)
        (g$13045$sFNhI core-prim . &i/o-file-protection-rtd)
        (g$13044$sFNhI core-prim . &i/o-filename-rcd)
        (g$13043$sFNhI core-prim . &i/o-filename-rtd)
        (g$13042$sFNhI core-prim . &i/o-invalid-position-rcd)
        (g$13041$sFNhI core-prim . &i/o-invalid-position-rtd)
        (g$13040$sFNhI core-prim . &i/o-write-rcd)
        (g$13039$sFNhI core-prim . &i/o-write-rtd)
        (g$13038$sFNhI core-prim . &i/o-read-rcd)
        (g$13037$sFNhI core-prim . &i/o-read-rtd)
        (g$13036$sFNhI core-prim . &i/o-rcd)
        (g$13035$sFNhI core-prim . &i/o-rtd)
        (g$13034$sFNhI core-prim . &undefined-rcd)
        (g$13033$sFNhI core-prim . &undefined-rtd)
        (g$13032$sFNhI core-prim . &syntax-rcd)
        (g$13031$sFNhI core-prim . &syntax-rtd)
        (g$13030$sFNhI core-prim . &lexical-rcd)
        (g$13029$sFNhI core-prim . &lexical-rtd)
        (g$13028$sFNhI core-prim . &implementation-restriction-rcd)
        (g$13027$sFNhI core-prim . &implementation-restriction-rtd)
        (g$13026$sFNhI core-prim . &non-continuable-rcd)
        (g$13025$sFNhI core-prim . &non-continuable-rtd)
        (g$13024$sFNhI core-prim . &who-rcd)
        (g$13023$sFNhI core-prim . &who-rtd)
        (g$13022$sFNhI core-prim . &irritants-rcd)
        (g$13021$sFNhI core-prim . &irritants-rtd)
        (g$13020$sFNhI core-prim . &assertion-rcd)
        (g$13019$sFNhI core-prim . &assertion-rtd)
        (g$13018$sFNhI core-prim . &violation-rcd)
        (g$13017$sFNhI core-prim . &violation-rtd)
        (g$13016$sFNhI core-prim . &error-rcd)
        (g$13015$sFNhI core-prim . &error-rtd)
        (g$13014$sFNhI core-prim . &serious-rcd)
        (g$13013$sFNhI core-prim . &serious-rtd)
        (g$13012$sFNhI core-prim . &warning-rcd)
        (g$13011$sFNhI core-prim . &warning-rtd)
        (g$13010$sFNhI core-prim . &message-rcd)
        (g$13009$sFNhI core-prim . &message-rtd)
        (g$13008$sFNhI core-prim . &condition-rcd)
        (g$13007$sFNhI core-prim . &condition-rtd)
        (g$13006$sFNhI core-prim . library-letrec*)
        (g$13005$sFNhI core-prim . annotation-stripped)
        (g$13004$sFNhI core-prim . annotation-source)
        (g$13003$sFNhI core-prim . annotation-expression)
        (g$13002$sFNhI core-prim . annotation?)
        (g$13001$sFNhI core-prim . read-annotated)
        (g$13000$sFNhI core-prim . tanh)
        (g$12999$sFNhI core-prim . cosh)
        (g$12998$sFNhI core-prim . sinh)
        (g$12997$sFNhI core-prim . make-guid)
        (g$12996$sFNhI core-prim . unspecified?)
        (g$5958$sFNhI core-prim . make-list)
        (g$5957$sFNhI core-prim . last-pair)
        (g$12995$sFNhI core-prim . load-r5rs)
        (g$12994$sFNhI core-prim . license)
        (g$12993$sFNhI core-prim . stacktrace)
        (g$12494$sFNhI core-prim . ironscheme-build)
        (g$12992$sFNhI core-prim . define-clr-class-internal)
        (g$12991$sFNhI core-prim . clr-field-set!-internal)
        (g$12990$sFNhI core-prim . clr-field-get-internal)
        (g$12989$sFNhI core-prim . clr-cast-internal)
        (g$12988$sFNhI core-prim . clr-call-internal)
        (g$12987$sFNhI core-prim . clr-new-internal)
        (g$12986$sFNhI core-prim . clr-new-array-internal)
        (g$12985$sFNhI core-prim . clr-is-internal)
        (g$12984$sFNhI core-prim . clr-reference-internal)
        (g$12983$sFNhI core-prim . clr-using-internal)
        (g$9489$sFNhI core-prim . syntax-error)
        (g$9359$sFNhI core-prim . syntax-dispatch)
        (g$12982$sFNhI core-prim . compile-core)
        (g$12981$sFNhI core-prim . eval-core)
        (g$12980$sFNhI core-prim . set-symbol-value!)
        (g$12979$sFNhI core-prim . symbol-value)
        (g$12978$sFNhI core-prim . symbol-bound?)
        (g$12977$sFNhI core-prim . ungensym)
        (g$12976$sFNhI core-prim . gensym)
        (g$12975$sFNhI core-prim . void)
        (g$12974$sFNhI core-prim . load-serialized-library)
        (g$12973$sFNhI core-prim . serialize-library)
        (g$12497$sFNhI core-prim . compile-system-libraries)
        (g$12499$sFNhI core-prim . compile->closure)
        (g$12498$sFNhI core-prim . compile)
        (g$12493$sFNhI core-prim . load)
        (g$12972$sFNhI core-prim . string-normalize)
        (g$9499$sFNhI core-prim . interaction-environment)
        (g$12971$sFNhI core-prim . char-ready?)
        (g$12970$sFNhI core-prim . string-upcase)
        (g$12969$sFNhI core-prim . string-titlecase)
        (g$7237$sFNhI core-prim . string-normalize-nfkd)
        (g$7236$sFNhI core-prim . string-normalize-nfkc)
        (g$7235$sFNhI core-prim . string-normalize-nfd)
        (g$7234$sFNhI core-prim . string-normalize-nfc)
        (g$12968$sFNhI core-prim . string-foldcase)
        (g$12967$sFNhI core-prim . string-downcase)
        (g$7192$sFNhI core-prim . string-ci>?)
        (g$7194$sFNhI core-prim . string-ci>=?)
        (g$7190$sFNhI core-prim . string-ci=?)
        (g$7191$sFNhI core-prim . string-ci<?)
        (g$7193$sFNhI core-prim . string-ci<=?)
        (g$12966$sFNhI core-prim . char-whitespace?)
        (g$12965$sFNhI core-prim . char-upper-case?)
        (g$12964$sFNhI core-prim . char-title-case?)
        (g$12963$sFNhI core-prim . char-numeric?)
        (g$12962$sFNhI core-prim . char-lower-case?)
        (g$12961$sFNhI core-prim . char-general-category)
        (g$12960$sFNhI core-prim . char-upcase)
        (g$12959$sFNhI core-prim . char-titlecase)
        (g$12958$sFNhI core-prim . char-foldcase)
        (g$12957$sFNhI core-prim . char-downcase)
        (g$7231$sFNhI core-prim . char-ci>?)
        (g$7233$sFNhI core-prim . char-ci>=?)
        (g$7229$sFNhI core-prim . char-ci=?)
        (g$7230$sFNhI core-prim . char-ci<?)
        (g$7232$sFNhI core-prim . char-ci<=?)
        (g$12956$sFNhI core-prim . char-alphabetic?)
        (g$9096$sFNhI core-prim . variable-transformer-procedure)
        (g$9095$sFNhI core-prim . variable-transformer?)
        (g$9093$sFNhI core-prim . make-variable-transformer)
        (g$9493$sFNhI core-prim . identifier?)
        (g$9482$sFNhI core-prim . generate-temporaries)
        (g$9483$sFNhI core-prim . free-identifier=?)
        (g$9495$sFNhI core-prim . syntax->datum)
        (g$9494$sFNhI core-prim . datum->syntax)
        (g$9484$sFNhI core-prim . bound-identifier=?)
        (g$12955$sFNhI core-prim . record-type-descriptor?)
        (g$12954$sFNhI core-prim . record-predicate)
        (g$12953$sFNhI core-prim . record-mutator)
        (g$12952$sFNhI core-prim . record-constructor)
        (g$12951$sFNhI core-prim . record-accessor)
        (g$12950$sFNhI core-prim . make-record-type-descriptor)
        (g$12949$sFNhI core-prim . make-record-constructor-descriptor)
        (g$12948$sFNhI core-prim . record?)
        (g$12947$sFNhI core-prim . record-type-uid)
        (g$12946$sFNhI core-prim . record-type-sealed?)
        (g$12945$sFNhI core-prim . record-type-parent)
        (g$12944$sFNhI core-prim . record-type-opaque?)
        (g$12943$sFNhI core-prim . record-type-name)
        (g$12942$sFNhI core-prim . record-type-generative?)
        (g$12941$sFNhI core-prim . record-type-field-names)
        (g$12940$sFNhI core-prim . record-rtd)
        (g$12939$sFNhI core-prim . record-field-mutable?)
        (g$6766$sFNhI core-prim . delete-file)
        (g$6765$sFNhI core-prim . file-exists?)
        (g$12938$sFNhI core-prim . vector-sort!)
        (g$12937$sFNhI core-prim . vector-sort)
        (g$7132$sFNhI core-prim . list-sort)
        (g$12936$sFNhI core-prim . symbol-hash)
        (g$12935$sFNhI core-prim . string-ci-hash)
        (g$12934$sFNhI core-prim . string-hash)
        (g$12933$sFNhI core-prim . equal-hash)
        (g$12932$sFNhI core-prim . hashtable-equivalence-function)
        (g$12931$sFNhI core-prim . make-hashtable)
        (g$12930$sFNhI core-prim . hashtable-hash-function)
        (g$6734$sFNhI core-prim . make-eqv-hashtable)
        (g$6733$sFNhI core-prim . make-eq-hashtable)
        (g$12929$sFNhI core-prim . hashtable?)
        (g$6740$sFNhI core-prim . hashtable-update!)
        (g$6735$sFNhI core-prim . hashtable-size)
        (g$6737$sFNhI core-prim . hashtable-set!)
        (g$6736$sFNhI core-prim . hashtable-ref)
        (g$12928$sFNhI core-prim . hashtable-mutable?)
        (g$12927$sFNhI core-prim . hashtable-keys)
        (g$12926$sFNhI core-prim . hashtable-entries)
        (g$6738$sFNhI core-prim . hashtable-delete!)
        (g$12925$sFNhI core-prim . hashtable-copy)
        (g$6739$sFNhI core-prim . hashtable-contains?)
        (g$6741$sFNhI core-prim . hashtable-clear!)
        (g$7782$sFNhI core-prim . call-with-output-file)
        (g$7781$sFNhI core-prim . call-with-input-file)
        (g$7763$sFNhI core-prim . write-char)
        (g$12924$sFNhI core-prim . write)
        (g$7780$sFNhI core-prim . with-output-to-file)
        (g$7779$sFNhI core-prim . with-input-from-file)
        (g$7762$sFNhI core-prim . read-char)
        (g$12923$sFNhI core-prim . read)
        (g$7761$sFNhI core-prim . peek-char)
        (g$12922$sFNhI core-prim . open-output-file)
        (g$12921$sFNhI core-prim . open-input-file)
        (g$7783$sFNhI core-prim . newline)
        (g$12920$sFNhI core-prim . display)
        (g$12919$sFNhI core-prim . close-output-port)
        (g$12918$sFNhI core-prim . close-input-port)
        (g$12917$sFNhI core-prim . eof-object?)
        (g$12916$sFNhI core-prim . eof-object)
        (g$12915$sFNhI core-prim . current-error-port)
        (g$12914$sFNhI core-prim . current-output-port)
        (g$12913$sFNhI core-prim . current-input-port)
        (g$12912$sFNhI core-prim . output-port?)
        (g$12911$sFNhI core-prim . input-port?)
        (g$12910$sFNhI core-prim . utf-8-codec)
        (g$12909$sFNhI core-prim . utf-16-codec)
        (g$12908$sFNhI core-prim . transcoder-error-handling-mode)
        (g$12907$sFNhI core-prim . transcoder-eol-style)
        (g$12906$sFNhI core-prim . transcoder-codec)
        (g$12905$sFNhI core-prim . transcoded-port)
        (g$12904$sFNhI core-prim . textual-port?)
        (g$12903$sFNhI core-prim . string->bytevector)
        (g$12902$sFNhI core-prim . standard-output-port)
        (g$12901$sFNhI core-prim . standard-input-port)
        (g$12900$sFNhI core-prim . standard-error-port)
        (g$12899$sFNhI core-prim . set-port-position!)
        (g$12898$sFNhI core-prim . put-u8)
        (g$12897$sFNhI core-prim . put-string)
        (g$7741$sFNhI core-prim . put-datum)
        (g$12896$sFNhI core-prim . put-char)
        (g$12895$sFNhI core-prim . put-bytevector)
        (g$7746$sFNhI core-prim . port?)
        (g$12894$sFNhI core-prim . port-transcoder)
        (g$12893$sFNhI core-prim . port-position)
        (g$12892$sFNhI core-prim . port-has-set-port-position!?)
        (g$12891$sFNhI core-prim . port-has-port-position?)
        (g$12890$sFNhI core-prim . port-eof?)
        (g$12889$sFNhI core-prim . output-port-buffer-mode)
        (g$7745$sFNhI core-prim . open-string-output-port)
        (g$12888$sFNhI core-prim . open-string-input-port)
        (g$12887$sFNhI core-prim . open-file-output-port)
        (g$12886$sFNhI core-prim . open-file-input/output-port)
        (g$12885$sFNhI core-prim . open-file-input-port)
        (g$12884$sFNhI core-prim . open-bytevector-output-port)
        (g$12883$sFNhI core-prim . open-bytevector-input-port)
        (g$12882$sFNhI core-prim . native-transcoder)
        (g$12881$sFNhI core-prim . native-eol-style)
        (g$12880$sFNhI core-prim . make-transcoder)
        (g$12879$sFNhI core-prim . latin-1-codec)
        (g$7599$sFNhI core-prim . make-i/o-write-error)
        (g$7585$sFNhI core-prim . make-i/o-read-error)
        (g$7704$sFNhI core-prim . make-i/o-port-error)
        (g$7614$sFNhI core-prim . make-i/o-invalid-position-error)
        (g$7631$sFNhI core-prim . make-i/o-filename-error)
        (g$7647$sFNhI core-prim . make-i/o-file-protection-error)
        (g$7661$sFNhI core-prim . make-i/o-file-is-read-only-error)
        (g$7689$sFNhI core-prim . make-i/o-file-does-not-exist-error)
        (g$7675$sFNhI core-prim . make-i/o-file-already-exists-error)
        (g$7571$sFNhI core-prim . make-i/o-error)
        (g$7735$sFNhI core-prim . make-i/o-encoding-error)
        (g$7720$sFNhI core-prim . make-i/o-decoding-error)
        (g$12878$sFNhI core-prim . make-custom-textual-output-port)
        (g$12877$sFNhI core-prim . make-custom-textual-input/output-port)
        (g$12876$sFNhI core-prim . make-custom-textual-input-port)
        (g$12875$sFNhI core-prim . make-custom-binary-output-port)
        (g$12874$sFNhI core-prim . make-custom-binary-input/output-port)
        (g$12873$sFNhI core-prim . make-custom-binary-input-port)
        (g$12872$sFNhI core-prim . make-bytevector)
        (g$12871$sFNhI core-prim . lookahead-u8)
        (g$12870$sFNhI core-prim . lookahead-char)
        (g$7600$sFNhI core-prim . i/o-write-error?)
        (g$7586$sFNhI core-prim . i/o-read-error?)
        (g$7706$sFNhI core-prim . i/o-port-error?)
        (g$7616$sFNhI core-prim . i/o-invalid-position-error?)
        (g$7617$sFNhI core-prim . i/o-error-position)
        (g$7633$sFNhI core-prim . i/o-filename-error?)
        (g$7648$sFNhI core-prim . i/o-file-protection-error?)
        (g$7662$sFNhI core-prim . i/o-file-is-read-only-error?)
        (g$7690$sFNhI core-prim . i/o-file-does-not-exist-error?)
        (g$7676$sFNhI core-prim . i/o-file-already-exists-error?)
        (g$7572$sFNhI core-prim . i/o-error?)
        (g$7707$sFNhI core-prim . i/o-error-port)
        (g$7634$sFNhI core-prim . i/o-error-filename)
        (g$7737$sFNhI core-prim . i/o-encoding-error?)
        (g$7738$sFNhI core-prim . i/o-encoding-error-char)
        (g$7721$sFNhI core-prim . i/o-decoding-error?)
        (g$12869$sFNhI core-prim . get-u8)
        (g$12868$sFNhI core-prim . get-string-n!)
        (g$12867$sFNhI core-prim . get-string-n)
        (g$12866$sFNhI core-prim . get-string-all)
        (g$12865$sFNhI core-prim . get-line)
        (g$7742$sFNhI core-prim . get-datum)
        (g$12864$sFNhI core-prim . get-char)
        (g$12863$sFNhI core-prim . get-bytevector-some)
        (g$12862$sFNhI core-prim . get-bytevector-n!)
        (g$12861$sFNhI core-prim . get-bytevector-n)
        (g$12860$sFNhI core-prim . get-bytevector-all)
        (g$12859$sFNhI core-prim . flush-output-port)
        (g$12858$sFNhI core-prim . close-port)
        (g$7747$sFNhI core-prim . call-with-string-output-port)
        (g$7748$sFNhI core-prim . call-with-port)
        (g$12857$sFNhI core-prim . call-with-bytevector-output-port)
        (g$12856$sFNhI core-prim . bytevector->string)
        (g$12855$sFNhI core-prim . buffer-mode?)
        (g$12854$sFNhI core-prim . binary-port?)
        (g$9472$sFNhI core-prim . scheme-report-environment)
        (g$7111$sFNhI core-prim . quotient)
        (g$9471$sFNhI core-prim . null-environment)
        (g$7112$sFNhI core-prim . remainder)
        (g$7113$sFNhI core-prim . modulo)
        (g$7108$sFNhI core-prim . inexact->exact)
        (g$7115$sFNhI core-prim . force)
        (g$7109$sFNhI core-prim . exact->inexact)
        (g$12853$sFNhI core-prim . exit)
        (g$12490$sFNhI core-prim . command-line)
        (g$12852$sFNhI core-prim . string-fill!)
        (g$12851$sFNhI core-prim . string-set!)
        (g$12850$sFNhI core-prim . set-cdr!)
        (g$12849$sFNhI core-prim . set-car!)
        (g$5980$sFNhI core-prim . remove)
        (g$5981$sFNhI core-prim . remv)
        (g$5961$sFNhI core-prim . remp)
        (g$5982$sFNhI core-prim . remq)
        (g$5960$sFNhI core-prim . partition)
        (g$5968$sFNhI core-prim . memv)
        (g$5967$sFNhI core-prim . memq)
        (g$5970$sFNhI core-prim . memp)
        (g$5969$sFNhI core-prim . member)
        (g$5974$sFNhI core-prim . exists)
        (g$5973$sFNhI core-prim . for-all)
        (g$5979$sFNhI core-prim . fold-right)
        (g$5978$sFNhI core-prim . fold-left)
        (g$5959$sFNhI core-prim . find)
        (g$5962$sFNhI core-prim . filter)
        (g$5977$sFNhI core-prim . cons*)
        (g$5964$sFNhI core-prim . assv)
        (g$5963$sFNhI core-prim . assq)
        (g$5966$sFNhI core-prim . assp)
        (g$5965$sFNhI core-prim . assoc)
        (g$12848$sFNhI core-prim . with-exception-handler)
        (g$12847$sFNhI core-prim . raise-continuable)
        (g$12846$sFNhI core-prim . raise)
        (g$9474$sFNhI core-prim . eval)
        (g$9470$sFNhI core-prim . environment)
        (g$7847$sFNhI core-prim . make-enumeration)
        (g$7854$sFNhI core-prim . enum-set=?)
        (g$7848$sFNhI core-prim . enum-set-universe)
        (g$7855$sFNhI core-prim . enum-set-union)
        (g$7853$sFNhI core-prim . enum-set-subset?)
        (g$7859$sFNhI core-prim . enum-set-projection)
        (g$7852$sFNhI core-prim . enum-set-member?)
        (g$7856$sFNhI core-prim . enum-set-intersection)
        (g$7849$sFNhI core-prim . enum-set-indexer)
        (g$7857$sFNhI core-prim . enum-set-difference)
        (g$7850$sFNhI core-prim . enum-set-constructor)
        (g$7858$sFNhI core-prim . enum-set-complement)
        (g$7851$sFNhI core-prim . enum-set->list)
        (g$7020$sFNhI core-prim . who-condition?)
        (g$6931$sFNhI core-prim . warning?)
        (g$6973$sFNhI core-prim . violation?)
        (g$7097$sFNhI core-prim . undefined-violation?)
        (g$7081$sFNhI core-prim . syntax-violation?)
        (g$7083$sFNhI core-prim . syntax-violation-subform)
        (g$7082$sFNhI core-prim . syntax-violation-form)
        (g$9492$sFNhI core-prim . syntax-violation)
        (g$12845$sFNhI core-prim . simple-conditions)
        (g$6945$sFNhI core-prim . serious-condition?)
        (g$7035$sFNhI core-prim . non-continuable-violation?)
        (g$6916$sFNhI core-prim . message-condition?)
        (g$7018$sFNhI core-prim . make-who-condition)
        (g$6930$sFNhI core-prim . make-warning)
        (g$6972$sFNhI core-prim . make-violation)
        (g$7096$sFNhI core-prim . make-undefined-violation)
        (g$7078$sFNhI core-prim . make-syntax-violation)
        (g$6944$sFNhI core-prim . make-serious-condition)
        (g$7034$sFNhI core-prim . make-non-continuable-violation)
        (g$6914$sFNhI core-prim . make-message-condition)
        (g$7062$sFNhI core-prim . make-lexical-violation)
        (g$7001$sFNhI core-prim . make-irritants-condition)
        (g$7048$sFNhI core-prim . make-implementation-restriction-violation)
        (g$6958$sFNhI core-prim . make-error)
        (g$6986$sFNhI core-prim . make-assertion-violation)
        (g$7063$sFNhI core-prim . lexical-violation?)
        (g$7003$sFNhI core-prim . irritants-condition?)
        (g$7049$sFNhI core-prim . implementation-restriction-violation?)
        (g$6959$sFNhI core-prim . error?)
        (g$7021$sFNhI core-prim . condition-who)
        (g$12844$sFNhI core-prim . condition-predicate)
        (g$6917$sFNhI core-prim . condition-message)
        (g$7004$sFNhI core-prim . condition-irritants)
        (g$12843$sFNhI core-prim . condition-accessor)
        (g$12842$sFNhI core-prim . condition)
        (g$6987$sFNhI core-prim . assertion-violation?)
        (g$12841$sFNhI core-prim . condition?)
        (g$12840$sFNhI core-prim . utf32->string)
        (g$12839$sFNhI core-prim . utf16->string)
        (g$12838$sFNhI core-prim . utf8->string)
        (g$12837$sFNhI core-prim . uint-list->bytevector)
        (g$12836$sFNhI core-prim . u8-list->bytevector)
        (g$12835$sFNhI core-prim . string->utf8)
        (g$12834$sFNhI core-prim . string->utf32)
        (g$12833$sFNhI core-prim . string->utf16)
        (g$12832$sFNhI core-prim . sint-list->bytevector)
        (g$6772$sFNhI core-prim . native-endianness)
        (g$6400$sFNhI core-prim . bytevector?)
        (g$12831$sFNhI core-prim . bytevector=?)
        (g$12830$sFNhI core-prim . bytevector-uint-set!)
        (g$12829$sFNhI core-prim . bytevector-uint-ref)
        (g$12828$sFNhI core-prim . bytevector-u8-set!)
        (g$12827$sFNhI core-prim . bytevector-u8-ref)
        (g$6793$sFNhI core-prim . bytevector-u64-set!)
        (g$6789$sFNhI core-prim . bytevector-u64-ref)
        (g$6795$sFNhI core-prim . bytevector-u64-native-set!)
        (g$6791$sFNhI core-prim . bytevector-u64-native-ref)
        (g$6785$sFNhI core-prim . bytevector-u32-set!)
        (g$6781$sFNhI core-prim . bytevector-u32-ref)
        (g$6787$sFNhI core-prim . bytevector-u32-native-set!)
        (g$6783$sFNhI core-prim . bytevector-u32-native-ref)
        (g$6777$sFNhI core-prim . bytevector-u16-set!)
        (g$6773$sFNhI core-prim . bytevector-u16-ref)
        (g$6779$sFNhI core-prim . bytevector-u16-native-set!)
        (g$6775$sFNhI core-prim . bytevector-u16-native-ref)
        (g$12826$sFNhI core-prim . bytevector-sint-set!)
        (g$12825$sFNhI core-prim . bytevector-sint-ref)
        (g$12824$sFNhI core-prim . bytevector-s8-set!)
        (g$12823$sFNhI core-prim . bytevector-s8-ref)
        (g$6794$sFNhI core-prim . bytevector-s64-set!)
        (g$6790$sFNhI core-prim . bytevector-s64-ref)
        (g$6796$sFNhI core-prim . bytevector-s64-native-set!)
        (g$6792$sFNhI core-prim . bytevector-s64-native-ref)
        (g$6786$sFNhI core-prim . bytevector-s32-set!)
        (g$6782$sFNhI core-prim . bytevector-s32-ref)
        (g$6788$sFNhI core-prim . bytevector-s32-native-set!)
        (g$6784$sFNhI core-prim . bytevector-s32-native-ref)
        (g$6778$sFNhI core-prim . bytevector-s16-set!)
        (g$6774$sFNhI core-prim . bytevector-s16-ref)
        (g$6780$sFNhI core-prim . bytevector-s16-native-set!)
        (g$6776$sFNhI core-prim . bytevector-s16-native-ref)
        (g$12822$sFNhI core-prim . bytevector-length)
        (g$12821$sFNhI core-prim . bytevector-ieee-single-set!)
        (g$12820$sFNhI core-prim . bytevector-ieee-single-ref)
        (g$6799$sFNhI core-prim . bytevector-ieee-single-native-set!)
        (g$6797$sFNhI core-prim . bytevector-ieee-single-native-ref)
        (g$12819$sFNhI core-prim . bytevector-ieee-double-set!)
        (g$12818$sFNhI core-prim . bytevector-ieee-double-ref)
        (g$6800$sFNhI core-prim . bytevector-ieee-double-native-set!)
        (g$6798$sFNhI core-prim . bytevector-ieee-double-native-ref)
        (g$12817$sFNhI core-prim . bytevector-fill!)
        (g$12816$sFNhI core-prim . bytevector-copy!)
        (g$12815$sFNhI core-prim . bytevector-copy)
        (g$12814$sFNhI core-prim . bytevector->uint-list)
        (g$12813$sFNhI core-prim . bytevector->u8-list)
        (g$12812$sFNhI core-prim . bytevector->sint-list)
        (g$7484$sFNhI core-prim . no-nans-violation?)
        (g$7470$sFNhI core-prim . no-infinities-violation?)
        (g$7483$sFNhI core-prim . make-no-nans-violation)
        (g$7469$sFNhI core-prim . make-no-infinities-violation)
        (g$12811$sFNhI core-prim . real->flonum)
        (g$7452$sFNhI core-prim . flzero?)
        (g$7447$sFNhI core-prim . fltruncate)
        (g$7437$sFNhI core-prim . fltan)
        (g$7442$sFNhI core-prim . flsqrt)
        (g$7435$sFNhI core-prim . flsin)
        (g$7448$sFNhI core-prim . flround)
        (g$7450$sFNhI core-prim . flpositive?)
        (g$6405$sFNhI core-prim . flonum?)
        (g$7454$sFNhI core-prim . flodd?)
        (g$12810$sFNhI core-prim . flnumerator)
        (g$7451$sFNhI core-prim . flnegative?)
        (g$7434$sFNhI core-prim . flnan?)
        (g$7430$sFNhI core-prim . flmod0)
        (g$7429$sFNhI core-prim . flmod)
        (g$7456$sFNhI core-prim . flmin)
        (g$7455$sFNhI core-prim . flmax)
        (g$7441$sFNhI core-prim . fllog)
        (g$7431$sFNhI core-prim . flinteger?)
        (g$7433$sFNhI core-prim . flinfinite?)
        (g$7446$sFNhI core-prim . flfloor)
        (g$7432$sFNhI core-prim . flfinite?)
        (g$7444$sFNhI core-prim . flexpt)
        (g$7443$sFNhI core-prim . flexp)
        (g$7453$sFNhI core-prim . fleven?)
        (g$7426$sFNhI core-prim . fldiv0-and-mod0)
        (g$7428$sFNhI core-prim . fldiv0)
        (g$7425$sFNhI core-prim . fldiv-and-mod)
        (g$7427$sFNhI core-prim . fldiv)
        (g$12809$sFNhI core-prim . fldenominator)
        (g$7436$sFNhI core-prim . flcos)
        (g$7445$sFNhI core-prim . flceiling)
        (g$7440$sFNhI core-prim . flatan)
        (g$7438$sFNhI core-prim . flasin)
        (g$7439$sFNhI core-prim . flacos)
        (g$7449$sFNhI core-prim . flabs)
        (g$12808$sFNhI core-prim . fl>?)
        (g$12807$sFNhI core-prim . fl>=?)
        (g$12806$sFNhI core-prim . fl=?)
        (g$12805$sFNhI core-prim . fl<?)
        (g$12804$sFNhI core-prim . fl<=?)
        (g$12803$sFNhI core-prim . fl/)
        (g$12802$sFNhI core-prim . fl-)
        (g$12801$sFNhI core-prim . fl+)
        (g$12800$sFNhI core-prim . fl*)
        (g$12799$sFNhI core-prim . fixnum->flonum)
        (g$7333$sFNhI core-prim . fxzero?)
        (g$12798$sFNhI core-prim . fxxor)
        (g$7347$sFNhI core-prim . fxrotate-bit-field)
        (g$12797$sFNhI core-prim . fxreverse-bit-field)
        (g$7331$sFNhI core-prim . fxpositive?)
        (g$7335$sFNhI core-prim . fxodd?)
        (g$12796$sFNhI core-prim . fxnot)
        (g$7332$sFNhI core-prim . fxnegative?)
        (g$7330$sFNhI core-prim . fxmod0)
        (g$7329$sFNhI core-prim . fxmod)
        (g$7337$sFNhI core-prim . fxmin)
        (g$7336$sFNhI core-prim . fxmax)
        (g$12795$sFNhI core-prim . fxlength)
        (g$12794$sFNhI core-prim . fxior)
        (g$7341$sFNhI core-prim . fxif)
        (g$12793$sFNhI core-prim . fxfirst-bit-set)
        (g$7334$sFNhI core-prim . fxeven?)
        (g$12792$sFNhI core-prim . fxdiv0-and-mod0)
        (g$7328$sFNhI core-prim . fxdiv0)
        (g$12791$sFNhI core-prim . fxdiv-and-mod)
        (g$7327$sFNhI core-prim . fxdiv)
        (g$7344$sFNhI core-prim . fxcopy-bit-field)
        (g$7342$sFNhI core-prim . fxcopy-bit)
        (g$12790$sFNhI core-prim . fxbit-set?)
        (g$7343$sFNhI core-prim . fxbit-field)
        (g$12789$sFNhI core-prim . fxbit-count)
        (g$7346$sFNhI core-prim . fxarithmetic-shift-right)
        (g$7345$sFNhI core-prim . fxarithmetic-shift-left)
        (g$12788$sFNhI core-prim . fxarithmetic-shift)
        (g$12787$sFNhI core-prim . fxand)
        (g$12786$sFNhI core-prim . fx>?)
        (g$12785$sFNhI core-prim . fx>=?)
        (g$12784$sFNhI core-prim . fx=?)
        (g$12783$sFNhI core-prim . fx<?)
        (g$12782$sFNhI core-prim . fx<=?)
        (g$7339$sFNhI core-prim . fx-/carry)
        (g$12781$sFNhI core-prim . fx-)
        (g$7340$sFNhI core-prim . fx+/carry)
        (g$12780$sFNhI core-prim . fx+)
        (g$7338$sFNhI core-prim . fx*/carry)
        (g$12779$sFNhI core-prim . fx*)
        (g$12778$sFNhI core-prim . greatest-fixnum)
        (g$12777$sFNhI core-prim . least-fixnum)
        (g$6406$sFNhI core-prim . fixnum-width)
        (g$6404$sFNhI core-prim . fixnum?)
        (g$7301$sFNhI core-prim . bitwise-rotate-bit-field)
        (g$12776$sFNhI core-prim . bitwise-reverse-bit-field)
        (g$12775$sFNhI core-prim . bitwise-length)
        (g$7295$sFNhI core-prim . bitwise-if)
        (g$12774$sFNhI core-prim . bitwise-first-bit-set)
        (g$7298$sFNhI core-prim . bitwise-copy-bit-field)
        (g$7296$sFNhI core-prim . bitwise-copy-bit)
        (g$12773$sFNhI core-prim . bitwise-bit-set?)
        (g$7297$sFNhI core-prim . bitwise-bit-field)
        (g$12772$sFNhI core-prim . bitwise-bit-count)
        (g$12771$sFNhI core-prim . bitwise-xor)
        (g$12770$sFNhI core-prim . bitwise-ior)
        (g$12769$sFNhI core-prim . bitwise-and)
        (g$12768$sFNhI core-prim . bitwise-not)
        (g$7300$sFNhI core-prim . bitwise-arithmetic-shift-right)
        (g$7299$sFNhI core-prim . bitwise-arithmetic-shift-left)
        (g$12767$sFNhI core-prim . bitwise-arithmetic-shift)
        (g$6439$sFNhI core-prim . zero?)
        (g$6399$sFNhI core-prim . vector?)
        (g$12766$sFNhI core-prim . vector-set!)
        (g$12765$sFNhI core-prim . vector-ref)
        (g$6533$sFNhI core-prim . vector-map)
        (g$12764$sFNhI core-prim . vector-length)
        (g$6534$sFNhI core-prim . vector-for-each)
        (g$6407$sFNhI core-prim . vector-fill!)
        (g$12763$sFNhI core-prim . vector->list)
        (g$12762$sFNhI core-prim . vector)
        (g$12761$sFNhI core-prim . values)
        (g$12760$sFNhI core-prim . truncate)
        (g$12759$sFNhI core-prim . tan)
        (g$6401$sFNhI core-prim . symbol?)
        (g$6487$sFNhI core-prim . symbol=?)
        (g$12758$sFNhI core-prim . symbol->string)
        (g$12757$sFNhI core-prim . substring)
        (g$12756$sFNhI core-prim . string?)
        (g$6484$sFNhI core-prim . string>?)
        (g$6486$sFNhI core-prim . string>=?)
        (g$6482$sFNhI core-prim . string=?)
        (g$6483$sFNhI core-prim . string<?)
        (g$6485$sFNhI core-prim . string<=?)
        (g$12755$sFNhI core-prim . string-ref)
        (g$12754$sFNhI core-prim . string-length)
        (g$6535$sFNhI core-prim . string-for-each)
        (g$12753$sFNhI core-prim . string-copy)
        (g$12752$sFNhI core-prim . string-append)
        (g$12751$sFNhI core-prim . string->symbol)
        (g$12750$sFNhI core-prim . string->number)
        (g$12749$sFNhI core-prim . string->list)
        (g$12748$sFNhI core-prim . string)
        (g$12747$sFNhI core-prim . sqrt)
        (g$12746$sFNhI core-prim . sin)
        (g$12745$sFNhI core-prim . round)
        (g$6408$sFNhI core-prim . reverse)
        (g$12744$sFNhI core-prim . real?)
        (g$12743$sFNhI core-prim . real-valued?)
        (g$12742$sFNhI core-prim . real-part)
        (g$6530$sFNhI core-prim . rationalize)
        (g$12741$sFNhI core-prim . rational?)
        (g$12740$sFNhI core-prim . rational-valued?)
        (g$6403$sFNhI core-prim . procedure?)
        (g$6437$sFNhI core-prim . positive?)
        (g$12739$sFNhI core-prim . pair?)
        (g$6441$sFNhI core-prim . odd?)
        (g$12738$sFNhI core-prim . numerator)
        (g$12737$sFNhI core-prim . number?)
        (g$12736$sFNhI core-prim . number->string)
        (g$12735$sFNhI core-prim . null?)
        (g$12734$sFNhI core-prim . not)
        (g$6438$sFNhI core-prim . negative?)
        (g$12733$sFNhI core-prim . nan?)
        (g$6443$sFNhI core-prim . min)
        (g$6442$sFNhI core-prim . max)
        (g$5975$sFNhI core-prim . map)
        (g$12732$sFNhI core-prim . make-vector)
        (g$12731$sFNhI core-prim . make-string)
        (g$12730$sFNhI core-prim . make-rectangular)
        (g$12729$sFNhI core-prim . make-polar)
        (g$12728$sFNhI core-prim . magnitude)
        (g$12727$sFNhI core-prim . log)
        (g$12726$sFNhI core-prim . list?)
        (g$5955$sFNhI core-prim . list-tail)
        (g$5956$sFNhI core-prim . list-ref)
        (g$6396$sFNhI core-prim . list->vector)
        (g$6397$sFNhI core-prim . list->string)
        (g$12725$sFNhI core-prim . list)
        (g$12724$sFNhI core-prim . length)
        (g$6445$sFNhI core-prim . lcm)
        (g$12723$sFNhI core-prim . integer?)
        (g$12722$sFNhI core-prim . integer-valued?)
        (g$12721$sFNhI core-prim . integer->char)
        (g$12720$sFNhI core-prim . infinite?)
        (g$12719$sFNhI core-prim . inexact?)
        (g$12718$sFNhI core-prim . inexact)
        (g$12717$sFNhI core-prim . imag-part)
        (g$6444$sFNhI core-prim . gcd)
        (g$5976$sFNhI core-prim . for-each)
        (g$12716$sFNhI core-prim . floor)
        (g$12715$sFNhI core-prim . finite?)
        (g$12714$sFNhI core-prim . expt)
        (g$12713$sFNhI core-prim . exp)
        (g$12712$sFNhI core-prim . exact?)
        (g$12711$sFNhI core-prim . exact-integer-sqrt)
        (g$12710$sFNhI core-prim . exact)
        (g$6440$sFNhI core-prim . even?)
        (g$12709$sFNhI core-prim . error)
        (g$12708$sFNhI core-prim . eqv?)
        (g$12707$sFNhI core-prim . equal?)
        (g$12706$sFNhI core-prim . eq?)
        (g$12705$sFNhI core-prim . dynamic-wind)
        (g$12704$sFNhI core-prim . div0-and-mod0)
        (g$6395$sFNhI core-prim . mod0)
        (g$6393$sFNhI core-prim . div0)
        (g$12703$sFNhI core-prim . div-and-mod)
        (g$6394$sFNhI core-prim . mod)
        (g$6392$sFNhI core-prim . div)
        (g$12702$sFNhI core-prim . denominator)
        (g$12701$sFNhI core-prim . cos)
        (g$12700$sFNhI core-prim . cons)
        (g$12699$sFNhI core-prim . complex?)
        (g$6398$sFNhI core-prim . char?)
        (g$6527$sFNhI core-prim . char>?)
        (g$6529$sFNhI core-prim . char>=?)
        (g$6525$sFNhI core-prim . char=?)
        (g$6526$sFNhI core-prim . char<?)
        (g$6528$sFNhI core-prim . char<=?)
        (g$12698$sFNhI core-prim . char->integer)
        (g$12697$sFNhI core-prim . ceiling)
        (g$12696$sFNhI core-prim . call-with-values)
        (g$12695$sFNhI core-prim . call/cc)
        (g$12694$sFNhI core-prim . call-with-current-continuation)
        (g$6436$sFNhI core-prim . cddddr)
        (g$6435$sFNhI core-prim . cdddar)
        (g$6434$sFNhI core-prim . cddadr)
        (g$6433$sFNhI core-prim . cddaar)
        (g$6432$sFNhI core-prim . cdaddr)
        (g$6431$sFNhI core-prim . cdadar)
        (g$6430$sFNhI core-prim . cdaadr)
        (g$6429$sFNhI core-prim . cdaaar)
        (g$6428$sFNhI core-prim . cadddr)
        (g$6427$sFNhI core-prim . caddar)
        (g$6426$sFNhI core-prim . cadadr)
        (g$6425$sFNhI core-prim . cadaar)
        (g$6424$sFNhI core-prim . caaddr)
        (g$6423$sFNhI core-prim . caadar)
        (g$6422$sFNhI core-prim . caaadr)
        (g$6421$sFNhI core-prim . caaaar)
        (g$6420$sFNhI core-prim . cdddr)
        (g$6419$sFNhI core-prim . cddar)
        (g$6418$sFNhI core-prim . cdadr)
        (g$6417$sFNhI core-prim . cdaar)
        (g$6416$sFNhI core-prim . caddr)
        (g$6415$sFNhI core-prim . cadar)
        (g$6414$sFNhI core-prim . caadr)
        (g$6413$sFNhI core-prim . caaar)
        (g$6412$sFNhI core-prim . cddr)
        (g$6411$sFNhI core-prim . cdar)
        (g$6410$sFNhI core-prim . cadr)
        (g$6409$sFNhI core-prim . caar)
        (g$12693$sFNhI core-prim . cdr)
        (g$12692$sFNhI core-prim . car)
        (g$6402$sFNhI core-prim . boolean?)
        (g$6488$sFNhI core-prim . boolean=?)
        (g$12691$sFNhI core-prim . atan)
        (g$12690$sFNhI core-prim . assertion-violation)
        (g$12689$sFNhI core-prim . asin)
        (g$12688$sFNhI core-prim . apply)
        (g$12687$sFNhI core-prim . append)
        (g$12686$sFNhI core-prim . angle)
        (g$12685$sFNhI core-prim . acos)
        (g$12684$sFNhI core-prim . abs)
        (g$12683$sFNhI core-prim . /)
        (g$12682$sFNhI core-prim . *)
        (g$12681$sFNhI core-prim . -)
        (g$12680$sFNhI core-prim . +)
        (g$12679$sFNhI core-prim . >=)
        (g$12678$sFNhI core-prim . >)
        (g$12677$sFNhI core-prim . =)
        (g$12676$sFNhI core-prim . <=)
        (g$12675$sFNhI core-prim . <)
        (g$12674$sFNhI core-prim . make-record-printer)
        (g$12673$sFNhI core-prim . eqv-hash)
        (g$12672$sFNhI core-prim . reverse!)
        (g$12671$sFNhI core-prim . deserialize-port)
        (g$12670$sFNhI core-prim . serialize-port)
        (g$7822$sFNhI core-prim . enum-set?)
        (g$7114$sFNhI core-prim . make-promise)
        (g$12492$sFNhI core-prim . load/args)
        (g$7933$sFNhI core-prim . printf)
        (g$7934$sFNhI core-prim . fprintf)
        (g$7935$sFNhI core-prim . format)
        (g$12669$sFNhI core-prim . procedure-form)
        (g$12668$sFNhI core-prim . procedure-environment)
        (g$12667$sFNhI core-prim . procedure-name)
        (g$12666$sFNhI core-prim . procedure-arity)
        (g$12665$sFNhI core-prim . gc-collect)
        (g$12664$sFNhI core-prim . clr-type?)
        (g$12663$sFNhI core-prim . get-clr-type)
        (g$12662$sFNhI core-prim . get-command-line)
        (g$12661$sFNhI core-prim . vector-append)
        (g$12660$sFNhI core-prim . vector-filter)
        (g$12659$sFNhI core-prim . vector-reverse!)
        (g$12658$sFNhI core-prim . vector-contains?)
        (g$12657$sFNhI core-prim . vector-index-of)
        (g$12656$sFNhI core-prim . vector-copy)
        (g$12655$sFNhI core-prim . vector-binary-search)
        (g$12654$sFNhI core-prim . string-ci-compare)
        (g$12653$sFNhI core-prim . string-compare)
        (g$12652$sFNhI core-prim . string-format)
        (g$12489$sFNhI core-prim . trace-printer)
        (g$12651$sFNhI core-prim . make-traced-procedure)
        (g$7955$sFNhI core-prim . make-traced-macro)
        (g$9488$sFNhI core-prim . assertion-error)
        (g$12650$sFNhI core-prim . time-it)
        (g$8228$sFNhI core-prim . make-parameter)
        (g$12649$sFNhI core-prim . library-locator)
        (g$12648$sFNhI core-prim . get-library-paths)
        (g$12647$sFNhI core-prim . open-tcp-input/output-port)
        (g$12646$sFNhI core-prim . hashtable-for-each)
        (g$12645$sFNhI core-prim . hashtable-map)
        (g$9466$sFNhI core-prim . environment-bindings)
        (g$9469$sFNhI core-prim . environment-symbols)
        (g$9465$sFNhI core-prim . interaction-environment-symbols)
        (g$12644$sFNhI core-prim . optimization-level)
        (g$8639$sFNhI core-prim . library-path)
        (g$9094$sFNhI core-prim . make-compile-time-value)
        (g$9475$sFNhI core-prim . expand->core)
        (g$9473$sFNhI core-prim . expand)
        (g$8011$sFNhI core-prim . convert->cps)
        (g$8660$sFNhI core-prim . installed-libraries)
        (g$8651$sFNhI core-prim . uninstall-library)
        (g$12643$sFNhI $core-rtd &no-nans-rtd &no-nans-rcd)
        (g$12642$sFNhI $core-rtd &no-infinities-rtd &no-infinities-rcd)
        (g$12641$sFNhI $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd)
        (g$12640$sFNhI $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd)
        (g$12639$sFNhI $core-rtd &i/o-port-rtd &i/o-port-rcd)
        (g$12638$sFNhI
          $core-rtd
          &i/o-file-does-not-exist-rtd
          &i/o-file-does-not-exist-rcd)
        (g$12637$sFNhI
          $core-rtd
          &i/o-file-already-exists-rtd
          &i/o-file-already-exists-rcd)
        (g$12636$sFNhI
          $core-rtd
          &i/o-file-is-read-only-rtd
          &i/o-fie-is-read-only-rcd)
        (g$12635$sFNhI
          $core-rtd
          &i/o-file-protection-rtd
          &i/o-file-protection-rcd)
        (g$12634$sFNhI $core-rtd &i/o-filename-rtd &i/o-filename-rcd)
        (g$12633$sFNhI
          $core-rtd
          &i/o-invalid-position-rtd
          &i/o-invalid-position-rcd)
        (g$12632$sFNhI $core-rtd &i/o-write-rtd &i/o-write-rcd)
        (g$12631$sFNhI $core-rtd &i/o-read-rtd &i/o-read-rcd)
        (g$12630$sFNhI $core-rtd &i/o-rtd &i/o-rcd)
        (g$12629$sFNhI $core-rtd &non-continuable-rtd &non-continuable-rcd)
        (g$12628$sFNhI $core-rtd &undefined-rtd &undefined-rcd)
        (g$12627$sFNhI $core-rtd &syntax-rtd &syntax-rcd)
        (g$12626$sFNhI $core-rtd &lexical-rtd &lexical-rcd)
        (g$12625$sFNhI
          $core-rtd
          &implementation-restriction-rtd
          &implementation-restriction-rcd)
        (g$12624$sFNhI $core-rtd &who-rtd &who-rcd)
        (g$12623$sFNhI $core-rtd &irritants-rtd &irritants-rcd)
        (g$12622$sFNhI $core-rtd &assertion-rtd &assertion-rcd)
        (g$12621$sFNhI $core-rtd &violation-rtd &violation-rcd)
        (g$12620$sFNhI $core-rtd &error-rtd &error-rcd)
        (g$12619$sFNhI $core-rtd &serious-rtd &serious-rcd)
        (g$12618$sFNhI $core-rtd &warning-rtd &warning-rcd)
        (g$12617$sFNhI $core-rtd &message-rtd &message-rcd)
        (g$12616$sFNhI $core-rtd &condition-rtd &condition-rcd)
        (g$12615$sFNhI macro . define-condition-type)
        (g$12614$sFNhI macro . define-enumeration)
        (g$12613$sFNhI macro . define-record-type)
        (g$12612$sFNhI macro . parent-rtd)
        (g$12611$sFNhI macro . nongenerative)
        (g$12610$sFNhI macro . opaque)
        (g$12609$sFNhI macro . sealed)
        (g$12608$sFNhI macro . protocol)
        (g$12607$sFNhI macro . parent)
        (g$12606$sFNhI macro . immutable)
        (g$12605$sFNhI macro . mutable)
        (g$12604$sFNhI macro . fields)
        (g$12603$sFNhI macro . error-handling-mode)
        (g$12602$sFNhI macro . file-options)
        (g$12601$sFNhI macro . buffer-mode)
        (g$12600$sFNhI macro . eol-style)
        (g$12599$sFNhI macro . guard)
        (g$12598$sFNhI macro . trace-letrec-syntax)
        (g$12597$sFNhI macro . trace-let-syntax)
        (g$12596$sFNhI macro . trace-define-syntax)
        (g$12595$sFNhI macro . trace-define)
        (g$12594$sFNhI macro . trace-lambda)
        (g$12593$sFNhI macro . unsyntax-splicing)
        (g$12592$sFNhI macro . unsyntax)
        (g$12591$sFNhI macro . unquote-splicing)
        (g$12590$sFNhI macro . unquote)
        (g$12589$sFNhI macro . _)
        (g$12588$sFNhI macro . else)
        (g$12587$sFNhI macro . =>)
        (g$12586$sFNhI macro . ...)
        (g$12585$sFNhI macro . assert)
        (g$12584$sFNhI macro . endianness)
        (g$12583$sFNhI macro . delay)
        (g$12582$sFNhI macro . time)
        (g$12581$sFNhI macro . or)
        (g$12580$sFNhI macro . and)
        (g$12579$sFNhI macro . do)
        (g$12578$sFNhI macro . cond)
        (g$12577$sFNhI macro . let*)
        (g$12576$sFNhI macro . let)
        (g$12575$sFNhI macro . identifier-syntax)
        (g$12574$sFNhI macro . with-syntax)
        (g$12573$sFNhI macro . quasisyntax)
        (g$12572$sFNhI macro . quasiquote)
        (g$12571$sFNhI macro . syntax-rules)
        (g$12570$sFNhI macro . include-into)
        (g$12569$sFNhI macro . include)
        (g$12568$sFNhI macro . define-struct)
        (g$12567$sFNhI macro . let-values)
        (g$12566$sFNhI macro . let*-values)
        (g$12565$sFNhI core-macro . record-constructor-descriptor)
        (g$12564$sFNhI core-macro . record-type-descriptor)
        (g$12563$sFNhI core-macro . fluid-let-syntax)
        (g$12562$sFNhI macro . case)
        (g$12561$sFNhI macro . parameterize)
        (g$12560$sFNhI macro . unless)
        (g$12559$sFNhI macro . when)
        (g$12558$sFNhI core-macro . if)
        (g$12557$sFNhI core-macro . letrec*)
        (g$12556$sFNhI core-macro . letrec)
        (g$12555$sFNhI core-macro . type-descriptor)
        (g$12554$sFNhI core-macro . case-lambda)
        (g$12553$sFNhI core-macro . lambda)
        (g$12552$sFNhI core-macro . syntax)
        (g$12551$sFNhI core-macro . syntax-case)
        (g$12550$sFNhI core-macro . quote)
        (g$12549$sFNhI core-macro . foreign-call)
        (g$12548$sFNhI letrec-syntax)
        (g$12547$sFNhI let-syntax)
        (g$12546$sFNhI set!)
        (g$12545$sFNhI export)
        (g$12544$sFNhI import)
        (g$12543$sFNhI library)
        (g$12542$sFNhI begin)
        (g$12541$sFNhI module)
        (g$12540$sFNhI define-syntax)
        (g$12539$sFNhI define))
      values
      values
      '#f
      '#f
      '#f
      '#f)
    (g$install-library$7934$sFNhI
      'g$13099$sFNhI
      '(psyntax system $bootstrap)
      '()
      '()
      '()
      '()
      '((compile-core . g$12982$sFNhI)
        (eval-core . g$12981$sFNhI)
        (set-symbol-value! . g$12980$sFNhI)
        (symbol-value . g$12979$sFNhI)
        (gensym . g$12976$sFNhI)
        (void . g$12975$sFNhI))
      '()
      values
      values
      '#f
      '#f
      '#f
      '#f)))

(library-letrec* (psyntax main)
  ((g$trace-printer$12044$sFNhI
     g$trace-printer$12101$sFNhI
     (g$make-parameter$7426$sFNhI write))
   (g$command-line$12045$sFNhI
     g$command-line$12102$sFNhI
     (g$make-parameter$7426$sFNhI (get-command-line)))
   (g$local-library-path$12046$sFNhI
     g$local-library-path$12103$sFNhI
     (case-lambda
       ((g$filename$12058$sFNhI)
        (cons
          (g$get-directory-name$5764$sFNhI g$filename$12058$sFNhI)
          (g$library-path$7918$sFNhI)))))
   (g$load/args$12047$sFNhI
     g$load/args$12104$sFNhI
     (case-lambda
       ((g$filename$12059$sFNhI . g$args$12060$sFNhI)
        (begin
          (apply
            g$load-r6rs-top-level$12055$sFNhI
            g$filename$12059$sFNhI
            'load
            g$args$12060$sFNhI)
          (void)))))
   (g$load$12048$sFNhI
     g$load$12105$sFNhI
     (case-lambda
       ((g$filename$12061$sFNhI)
        (begin
          (apply
            g$load-r6rs-top-level$12055$sFNhI
            g$filename$12061$sFNhI
            'load
            (cdr (g$command-line$12045$sFNhI)))
          (void)))))
   (g$ironscheme-build$12049$sFNhI
     g$ironscheme-build$12106$sFNhI
     (case-lambda
       (() (g$ironscheme-build$12049$sFNhI '#f))
       ((g$cps?$12062$sFNhI)
        (begin
          (g$call-with-output-file$6828$sFNhI
            '"build-options.ss"
            (case-lambda
              ((g$p$12063$sFNhI)
               (begin
                 (write
                   (list 'define-option 'cps-mode g$cps?$12062$sFNhI)
                   g$p$12063$sFNhI)
                 (write
                   (list
                     'define-option
                     'if-wants-letrec*
                     (not g$cps?$12062$sFNhI))
                   g$p$12063$sFNhI)
                 (g$newline$6829$sFNhI g$p$12063$sFNhI)))))
          (g$load$12048$sFNhI '"ironscheme-buildscript.ss")))))
   (g$foreground-color$12050$sFNhI
     g$foreground-color$12107$sFNhI
     (case-lambda
       (() (clr-call-internal 'console 'get_foregroundcolor '()))
       ((g$color$12064$sFNhI)
        (clr-call-internal
          'console
          'set_foregroundcolor
          '()
          g$color$12064$sFNhI))))
   (g$eval-top-level$12051$sFNhI
     g$eval-top-level$12108$sFNhI
     (case-lambda
       ((g$x$12065$sFNhI)
        (call/cc
          (case-lambda
            ((g$k$12066$sFNhI)
             (with-exception-handler
               (case-lambda
                 ((g$e$12067$sFNhI)
                  (begin
                    ((case-lambda
                       ((g$foreground-color$12072$sFNhI
                          g$current-output-port$12073$sFNhI
                          g$foreground-color$12074$sFNhI
                          g$current-output-port$12075$sFNhI)
                        ((case-lambda
                           ((g$swap$12076$sFNhI)
                            (dynamic-wind
                              g$swap$12076$sFNhI
                              (case-lambda
                                (()
                                 (begin
                                   (display
                                     '"Unhandled exception during evaluation:
")
                                   (display g$e$12067$sFNhI)
                                   (g$newline$6829$sFNhI))))
                              g$swap$12076$sFNhI)))
                         (case-lambda
                           (()
                            (begin
                              ((case-lambda
                                 ((g$t$12077$sFNhI)
                                  (begin
                                    (g$foreground-color$12072$sFNhI
                                      g$foreground-color$12074$sFNhI)
                                    (set! g$foreground-color$12074$sFNhI
                                      g$t$12077$sFNhI))))
                               (g$foreground-color$12072$sFNhI))
                              ((case-lambda
                                 ((g$t$12078$sFNhI)
                                  (begin
                                    (g$current-output-port$12073$sFNhI
                                      g$current-output-port$12075$sFNhI)
                                    (set! g$current-output-port$12075$sFNhI
                                      g$t$12078$sFNhI))))
                               (g$current-output-port$12073$sFNhI))))))))
                     g$foreground-color$12050$sFNhI
                     current-output-port
                     'red
                     (current-error-port))
                    (g$k$12066$sFNhI))))
               (case-lambda
                 (()
                  (g$eval$12017$sFNhI
                    g$x$12065$sFNhI
                    (g$interaction-environment$12042$sFNhI)))))))))))
   (g$compile-system-libraries$12052$sFNhI
     g$compile-system-libraries$12109$sFNhI
     (case-lambda
       (()
        (g$eval-top-level$12051$sFNhI
          '(begin
             (include "system-libraries.ss")
             (compile "system-libraries.ss"))))))
   (g$compile$12053$sFNhI
     g$compile$12110$sFNhI
     (case-lambda
       ((g$filename$12079$sFNhI)
        (g$load-r6rs-top-level$12055$sFNhI g$filename$12079$sFNhI 'compile))))
   (g$compile->closure$12054$sFNhI
     g$compile->closure$12111$sFNhI
     (case-lambda
       ((g$filename$12080$sFNhI)
        (g$load-r6rs-top-level$12055$sFNhI g$filename$12080$sFNhI 'closure))))
   (g$load-r6rs-top-level$12055$sFNhI
     g$load-r6rs-top-level$12112$sFNhI
     (case-lambda
       ((g$filename$12081$sFNhI g$how$12082$sFNhI . g$args$12083$sFNhI)
        ((case-lambda
           ((g$library-path$12086$sFNhI g$library-path$12087$sFNhI)
            ((case-lambda
               ((g$swap$12088$sFNhI)
                (dynamic-wind
                  g$swap$12088$sFNhI
                  (case-lambda
                    (()
                     ((case-lambda
                        ((g$x*$12089$sFNhI)
                         ((case-lambda
                            ((g$t$12090$sFNhI)
                             (if (g$memv$5150$sFNhI g$t$12090$sFNhI '(closure))
                               (g$pre-compile-r6rs-top-level$12040$sFNhI
                                 g$x*$12089$sFNhI)
                               (if (g$memv$5150$sFNhI g$t$12090$sFNhI '(load))
                                 ((case-lambda
                                    ((g$command-line$12093$sFNhI
                                       g$command-line$12094$sFNhI)
                                     ((case-lambda
                                        ((g$swap$12095$sFNhI)
                                         (dynamic-wind
                                           g$swap$12095$sFNhI
                                           (case-lambda
                                             (()
                                              ((g$compile-r6rs-top-level$12039$sFNhI
                                                 g$x*$12089$sFNhI))))
                                           g$swap$12095$sFNhI)))
                                      (case-lambda
                                        (()
                                         ((case-lambda
                                            ((g$t$12096$sFNhI)
                                             (begin
                                               (g$command-line$12093$sFNhI
                                                 g$command-line$12094$sFNhI)
                                               (set! g$command-line$12094$sFNhI
                                                 g$t$12096$sFNhI))))
                                          (g$command-line$12093$sFNhI)))))))
                                  g$command-line$12045$sFNhI
                                  (cons
                                    g$filename$12081$sFNhI
                                    (g$map$5157$sFNhI
                                      (case-lambda
                                        ((g$x$12097$sFNhI)
                                         (g$format$6999$sFNhI
                                           '"~a"
                                           g$x$12097$sFNhI)))
                                      g$args$12083$sFNhI)))
                                 (if (g$memv$5150$sFNhI
                                       g$t$12090$sFNhI
                                       '(compile))
                                   (begin
                                     (g$compile-r6rs-top-level$12039$sFNhI
                                       g$x*$12089$sFNhI)
                                     (g$serialize-all$7922$sFNhI
                                       serialize-library
                                       g$compile-core-expr$7675$sFNhI))
                                   (if '#f '#f (void)))))))
                          g$how$12082$sFNhI)))
                      (g$with-input-from-file$6825$sFNhI
                        g$filename$12081$sFNhI
                        (case-lambda
                          (()
                           ((letrec ((g$f$12098$sFNhI
                                       (case-lambda
                                         (()
                                          ((case-lambda
                                             ((g$x$12099$sFNhI)
                                              (if (eof-object? g$x$12099$sFNhI)
                                                '()
                                                (cons
                                                  g$x$12099$sFNhI
                                                  (g$f$12098$sFNhI)))))
                                           (read-annotated))))))
                              g$f$12098$sFNhI))))))))
                  g$swap$12088$sFNhI)))
             (case-lambda
               (()
                ((case-lambda
                   ((g$t$12100$sFNhI)
                    (begin
                      (g$library-path$12086$sFNhI g$library-path$12087$sFNhI)
                      (set! g$library-path$12087$sFNhI g$t$12100$sFNhI))))
                 (g$library-path$12086$sFNhI)))))))
         g$library-path$7918$sFNhI
         (g$local-library-path$12046$sFNhI g$filename$12081$sFNhI)))))
   (g$fo$12056$sFNhI
     g$fo$12113$sFNhI
     (g$make-enumeration$6961$sFNhI '(no-fail no-create no-truncate))))
  (begin
    (g$current-precompiled-library-loader$7923$sFNhI
      load-serialized-library)
    (set-symbol-value!
      'default-exception-handler
      (case-lambda
        ((g$ex$12057$sFNhI)
         (if (g$serious-condition?$6026$sFNhI g$ex$12057$sFNhI)
           (raise g$ex$12057$sFNhI)
           (begin (display g$ex$12057$sFNhI) (g$newline$6829$sFNhI))))))
    (set-symbol-value! 'load g$load$12048$sFNhI)
    (set-symbol-value! 'compile g$compile$12053$sFNhI)
    (set-symbol-value! 'compile->closure g$compile->closure$12054$sFNhI)
    (set-symbol-value! 'eval-r6rs g$eval-top-level$12051$sFNhI)
    (set-symbol-value!
      'int-env-syms
      g$interaction-environment-symbols$12008$sFNhI)
    (set-symbol-value! 'expanded2core g$expanded->core$7674$sFNhI)
    (set-symbol-value! 'trace-printer g$trace-printer$12044$sFNhI)
    (set-symbol-value! 'convert->cps g$convert->cps$7321$sFNhI)
    (set-symbol-value! 'assertion-violation assertion-violation)
    (set-symbol-value! 'raise raise)
    (g$file-options-constructor$7427$sFNhI
      (g$enum-set-constructor$6964$sFNhI g$fo$12056$sFNhI))
    (g$library-path$7918$sFNhI (get-library-paths))))

