(library-letrec* (psyntax config) () (void identity-for-cps))(library-letrec* (ironscheme lists) ((g$list-tail$6549$CSxK@ g$list-tail$6693$CSxK@ ((case-lambda ((g$C$14652$CSxK@) (g$C$14652$CSxK@ (case-lambda ((g$C$14451$CSxK@ g$lst$6577$CSxK@ g$index$6578$CSxK@) (null? (case-lambda ((g$V$14452$CSxK@) ((case-lambda ((g$C$14450$CSxK@ g$t$6579$CSxK@) (if g$t$6579$CSxK@ (g$C$14450$CSxK@ g$t$6579$CSxK@) (g$negative?$7421$CSxK@ g$C$14450$CSxK@ g$index$6578$CSxK@)))) (case-lambda ((g$T$14453$CSxK@) (if g$T$14453$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$14451$CSxK@ 'list-tail '"index out of range" g$lst$6577$CSxK@ g$index$6578$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$T$14454$CSxK@) (if g$T$14454$CSxK@ (g$C$14451$CSxK@ g$lst$6577$CSxK@) (- (case-lambda ((g$V$14455$CSxK@) (cdr (case-lambda ((g$V$14456$CSxK@) (g$list-tail$6549$CSxK@ g$C$14451$CSxK@ g$V$14456$CSxK@ g$V$14455$CSxK@))) g$lst$6577$CSxK@))) g$index$6578$CSxK@ '1)))) g$index$6578$CSxK@)))) g$V$14452$CSxK@))) g$lst$6577$CSxK@)))))) (library-letrec*-identity 'g$list-tail$6549$CSxK@))) (g$list-ref$6550$CSxK@ g$list-ref$6694$CSxK@ ((case-lambda ((g$C$14653$CSxK@) (g$C$14653$CSxK@ (case-lambda ((g$C$14457$CSxK@ g$lst$6580$CSxK@ g$index$6581$CSxK@) (g$list-tail$6549$CSxK@ (case-lambda ((g$V$14458$CSxK@) (car g$C$14457$CSxK@ g$V$14458$CSxK@))) g$lst$6580$CSxK@ g$index$6581$CSxK@)))))) (library-letrec*-identity 'g$list-ref$6550$CSxK@))) (g$last-pair$6551$CSxK@ g$last-pair$6695$CSxK@ ((case-lambda ((g$C$14654$CSxK@) (g$C$14654$CSxK@ (case-lambda ((g$C$14459$CSxK@ g$lst$6582$CSxK@) (null? (case-lambda ((g$T$14460$CSxK@) (if g$T$14460$CSxK@ (g$C$14459$CSxK@ g$lst$6582$CSxK@) (cdr (case-lambda ((g$V$14461$CSxK@) (null? (case-lambda ((g$T$14462$CSxK@) (if g$T$14462$CSxK@ (g$C$14459$CSxK@ g$lst$6582$CSxK@) (cdr (case-lambda ((g$V$14463$CSxK@) (g$last-pair$6551$CSxK@ g$C$14459$CSxK@ g$V$14463$CSxK@))) g$lst$6582$CSxK@)))) g$V$14461$CSxK@))) g$lst$6582$CSxK@)))) g$lst$6582$CSxK@)))))) (library-letrec*-identity 'g$last-pair$6551$CSxK@))) (g$make-list$6552$CSxK@ g$make-list$6696$CSxK@ ((case-lambda ((g$C$14655$CSxK@) (g$C$14655$CSxK@ (case-lambda ((g$C$14464$CSxK@ g$n$6583$CSxK@) (make-vector (case-lambda ((g$V$14465$CSxK@) (vector->list g$C$14464$CSxK@ g$V$14465$CSxK@))) g$n$6583$CSxK@)) ((g$C$14464$CSxK@ g$n$6584$CSxK@ g$fill$6585$CSxK@) (make-vector (case-lambda ((g$V$14466$CSxK@) (vector->list g$C$14464$CSxK@ g$V$14466$CSxK@))) g$n$6584$CSxK@ g$fill$6585$CSxK@)))))) (library-letrec*-identity 'g$make-list$6552$CSxK@))) (g$find$6553$CSxK@ g$find$6697$CSxK@ ((case-lambda ((g$C$14656$CSxK@) (g$C$14656$CSxK@ (case-lambda ((g$C$14469$CSxK@ g$proc$6586$CSxK@ g$l$6587$CSxK@) (null? (case-lambda ((g$T$14470$CSxK@) (if g$T$14470$CSxK@ (g$C$14469$CSxK@ '#f) (cdr (case-lambda ((g$V$14471$CSxK@) (car (case-lambda ((g$V$14472$CSxK@) ((case-lambda ((g$C$14467$CSxK@ g$e$6588$CSxK@ g$r$6589$CSxK@ g$proc$6590$CSxK@) (g$proc$6590$CSxK@ (case-lambda ((g$T$14468$CSxK@) (if g$T$14468$CSxK@ (g$C$14467$CSxK@ g$e$6588$CSxK@) (g$find$6553$CSxK@ g$C$14467$CSxK@ g$proc$6590$CSxK@ g$r$6589$CSxK@)))) g$e$6588$CSxK@))) g$C$14469$CSxK@ g$V$14472$CSxK@ g$V$14471$CSxK@ g$proc$6586$CSxK@))) g$l$6587$CSxK@))) g$l$6587$CSxK@)))) g$l$6587$CSxK@)))))) (library-letrec*-identity 'g$find$6553$CSxK@))) (g$partition$6554$CSxK@ g$partition$6698$CSxK@ ((case-lambda ((g$C$14657$CSxK@) (g$C$14657$CSxK@ (case-lambda ((g$C$14487$CSxK@ g$proc$6591$CSxK@ g$l$6592$CSxK@) ((case-lambda ((g$C$14486$CSxK@ g$f$6593$CSxK@) ((case-lambda ((g$C$14474$CSxK@ g$f$14473$CSxK@) (begin (set! g$f$6593$CSxK@ g$f$14473$CSxK@) (g$C$14474$CSxK@ g$f$6593$CSxK@)))) g$C$14486$CSxK@ (case-lambda ((g$C$14481$CSxK@ g$l$6594$CSxK@ g$a$6595$CSxK@ g$b$6596$CSxK@) (null? (case-lambda ((g$T$14482$CSxK@) (if g$T$14482$CSxK@ (reverse! (case-lambda ((g$V$14483$CSxK@) (reverse! (case-lambda ((g$V$14484$CSxK@) (values g$C$14481$CSxK@ g$V$14484$CSxK@ g$V$14483$CSxK@))) g$a$6595$CSxK@))) g$b$6596$CSxK@) (car (case-lambda ((g$V$14485$CSxK@) ((case-lambda ((g$C$14475$CSxK@ g$e$6597$CSxK@) (g$proc$6591$CSxK@ (case-lambda ((g$T$14476$CSxK@) (if g$T$14476$CSxK@ (cons (case-lambda ((g$V$14477$CSxK@) (cdr (case-lambda ((g$V$14478$CSxK@) (g$f$6593$CSxK@ g$C$14475$CSxK@ g$V$14478$CSxK@ g$V$14477$CSxK@ g$b$6596$CSxK@))) g$l$6594$CSxK@))) g$e$6597$CSxK@ g$a$6595$CSxK@) (cons (case-lambda ((g$V$14479$CSxK@) (cdr (case-lambda ((g$V$14480$CSxK@) (g$f$6593$CSxK@ g$C$14475$CSxK@ g$V$14480$CSxK@ g$a$6595$CSxK@ g$V$14479$CSxK@))) g$l$6594$CSxK@))) g$e$6597$CSxK@ g$b$6596$CSxK@)))) g$e$6597$CSxK@))) g$C$14481$CSxK@ g$V$14485$CSxK@))) g$l$6594$CSxK@)))) g$l$6594$CSxK@)))))) (case-lambda ((g$V$14488$CSxK@) (g$V$14488$CSxK@ g$C$14487$CSxK@ g$l$6592$CSxK@ '() '()))) uninitialized)))))) (library-letrec*-identity 'g$partition$6554$CSxK@))) (g$remp$6555$CSxK@ g$remp$6699$CSxK@ ((case-lambda ((g$C$14658$CSxK@) (g$C$14658$CSxK@ (case-lambda ((g$C$14500$CSxK@ g$proc$6598$CSxK@ g$l$6599$CSxK@) ((case-lambda ((g$C$14499$CSxK@ g$f$6600$CSxK@) ((case-lambda ((g$C$14490$CSxK@ g$f$14489$CSxK@) (begin (set! g$f$6600$CSxK@ g$f$14489$CSxK@) (g$C$14490$CSxK@ g$f$6600$CSxK@)))) g$C$14499$CSxK@ (case-lambda ((g$C$14496$CSxK@ g$l$6601$CSxK@ g$a$6602$CSxK@) (null? (case-lambda ((g$T$14497$CSxK@) (if g$T$14497$CSxK@ (reverse! g$C$14496$CSxK@ g$a$6602$CSxK@) (car (case-lambda ((g$V$14498$CSxK@) ((case-lambda ((g$C$14491$CSxK@ g$e$6603$CSxK@) (g$proc$6598$CSxK@ (case-lambda ((g$T$14492$CSxK@) (if g$T$14492$CSxK@ (cdr (case-lambda ((g$V$14493$CSxK@) (g$f$6600$CSxK@ g$C$14491$CSxK@ g$V$14493$CSxK@ g$a$6602$CSxK@))) g$l$6601$CSxK@) (cons (case-lambda ((g$V$14494$CSxK@) (cdr (case-lambda ((g$V$14495$CSxK@) (g$f$6600$CSxK@ g$C$14491$CSxK@ g$V$14495$CSxK@ g$V$14494$CSxK@))) g$l$6601$CSxK@))) g$e$6603$CSxK@ g$a$6602$CSxK@)))) g$e$6603$CSxK@))) g$C$14496$CSxK@ g$V$14498$CSxK@))) g$l$6601$CSxK@)))) g$l$6601$CSxK@)))))) (case-lambda ((g$V$14501$CSxK@) (g$V$14501$CSxK@ g$C$14500$CSxK@ g$l$6599$CSxK@ '()))) uninitialized)))))) (library-letrec*-identity 'g$remp$6555$CSxK@))) (g$filter$6556$CSxK@ g$filter$6700$CSxK@ ((case-lambda ((g$C$14659$CSxK@) (g$C$14659$CSxK@ (case-lambda ((g$C$14513$CSxK@ g$proc$6604$CSxK@ g$l$6605$CSxK@) ((case-lambda ((g$C$14512$CSxK@ g$f$6606$CSxK@) ((case-lambda ((g$C$14503$CSxK@ g$f$14502$CSxK@) (begin (set! g$f$6606$CSxK@ g$f$14502$CSxK@) (g$C$14503$CSxK@ g$f$6606$CSxK@)))) g$C$14512$CSxK@ (case-lambda ((g$C$14509$CSxK@ g$l$6607$CSxK@ g$a$6608$CSxK@) (null? (case-lambda ((g$T$14510$CSxK@) (if g$T$14510$CSxK@ (reverse! g$C$14509$CSxK@ g$a$6608$CSxK@) (car (case-lambda ((g$V$14511$CSxK@) ((case-lambda ((g$C$14504$CSxK@ g$e$6609$CSxK@) (g$proc$6604$CSxK@ (case-lambda ((g$T$14505$CSxK@) (if g$T$14505$CSxK@ (cons (case-lambda ((g$V$14506$CSxK@) (cdr (case-lambda ((g$V$14507$CSxK@) (g$f$6606$CSxK@ g$C$14504$CSxK@ g$V$14507$CSxK@ g$V$14506$CSxK@))) g$l$6607$CSxK@))) g$e$6609$CSxK@ g$a$6608$CSxK@) (cdr (case-lambda ((g$V$14508$CSxK@) (g$f$6606$CSxK@ g$C$14504$CSxK@ g$V$14508$CSxK@ g$a$6608$CSxK@))) g$l$6607$CSxK@)))) g$e$6609$CSxK@))) g$C$14509$CSxK@ g$V$14511$CSxK@))) g$l$6607$CSxK@)))) g$l$6607$CSxK@)))))) (case-lambda ((g$V$14514$CSxK@) (g$V$14514$CSxK@ g$C$14513$CSxK@ g$l$6605$CSxK@ '()))) uninitialized)))))) (library-letrec*-identity 'g$filter$6556$CSxK@))) (g$assq$6557$CSxK@ g$assq$6701$CSxK@ ((case-lambda ((g$C$14660$CSxK@) (g$C$14660$CSxK@ (case-lambda ((g$C$14518$CSxK@ g$obj$6610$CSxK@ g$lst$6611$CSxK@) (null? (case-lambda ((g$T$14519$CSxK@) (if g$T$14519$CSxK@ (g$C$14518$CSxK@ '#f) (cdr (case-lambda ((g$V$14520$CSxK@) (car (case-lambda ((g$V$14521$CSxK@) ((case-lambda ((g$C$14515$CSxK@ g$obj$6612$CSxK@ g$t$6613$CSxK@ g$r$6614$CSxK@) (car (case-lambda ((g$V$14516$CSxK@) (eq? (case-lambda ((g$T$14517$CSxK@) (if g$T$14517$CSxK@ (g$C$14515$CSxK@ g$t$6613$CSxK@) (g$assq$6557$CSxK@ g$C$14515$CSxK@ g$obj$6612$CSxK@ g$r$6614$CSxK@)))) g$obj$6612$CSxK@ g$V$14516$CSxK@))) g$t$6613$CSxK@))) g$C$14518$CSxK@ g$obj$6610$CSxK@ g$V$14521$CSxK@ g$V$14520$CSxK@))) g$lst$6611$CSxK@))) g$lst$6611$CSxK@)))) g$lst$6611$CSxK@)))))) (library-letrec*-identity 'g$assq$6557$CSxK@))) (g$assv$6558$CSxK@ g$assv$6702$CSxK@ ((case-lambda ((g$C$14661$CSxK@) (g$C$14661$CSxK@ (case-lambda ((g$C$14525$CSxK@ g$obj$6615$CSxK@ g$lst$6616$CSxK@) (null? (case-lambda ((g$T$14526$CSxK@) (if g$T$14526$CSxK@ (g$C$14525$CSxK@ '#f) (cdr (case-lambda ((g$V$14527$CSxK@) (car (case-lambda ((g$V$14528$CSxK@) ((case-lambda ((g$C$14522$CSxK@ g$obj$6617$CSxK@ g$t$6618$CSxK@ g$r$6619$CSxK@) (car (case-lambda ((g$V$14523$CSxK@) (eqv? (case-lambda ((g$T$14524$CSxK@) (if g$T$14524$CSxK@ (g$C$14522$CSxK@ g$t$6618$CSxK@) (g$assv$6558$CSxK@ g$C$14522$CSxK@ g$obj$6617$CSxK@ g$r$6619$CSxK@)))) g$obj$6617$CSxK@ g$V$14523$CSxK@))) g$t$6618$CSxK@))) g$C$14525$CSxK@ g$obj$6615$CSxK@ g$V$14528$CSxK@ g$V$14527$CSxK@))) g$lst$6616$CSxK@))) g$lst$6616$CSxK@)))) g$lst$6616$CSxK@)))))) (library-letrec*-identity 'g$assv$6558$CSxK@))) (g$assoc$6559$CSxK@ g$assoc$6703$CSxK@ ((case-lambda ((g$C$14662$CSxK@) (g$C$14662$CSxK@ (case-lambda ((g$C$14532$CSxK@ g$obj$6620$CSxK@ g$lst$6621$CSxK@) (null? (case-lambda ((g$T$14533$CSxK@) (if g$T$14533$CSxK@ (g$C$14532$CSxK@ '#f) (cdr (case-lambda ((g$V$14534$CSxK@) (car (case-lambda ((g$V$14535$CSxK@) ((case-lambda ((g$C$14529$CSxK@ g$obj$6622$CSxK@ g$t$6623$CSxK@ g$r$6624$CSxK@) (car (case-lambda ((g$V$14530$CSxK@) (equal? (case-lambda ((g$T$14531$CSxK@) (if g$T$14531$CSxK@ (g$C$14529$CSxK@ g$t$6623$CSxK@) (g$assoc$6559$CSxK@ g$C$14529$CSxK@ g$obj$6622$CSxK@ g$r$6624$CSxK@)))) g$obj$6622$CSxK@ g$V$14530$CSxK@))) g$t$6623$CSxK@))) g$C$14532$CSxK@ g$obj$6620$CSxK@ g$V$14535$CSxK@ g$V$14534$CSxK@))) g$lst$6621$CSxK@))) g$lst$6621$CSxK@)))) g$lst$6621$CSxK@)))))) (library-letrec*-identity 'g$assoc$6559$CSxK@))) (g$assp$6560$CSxK@ g$assp$6704$CSxK@ ((case-lambda ((g$C$14663$CSxK@) (g$C$14663$CSxK@ (case-lambda ((g$C$14539$CSxK@ g$p?$6625$CSxK@ g$lst$6626$CSxK@) (null? (case-lambda ((g$T$14540$CSxK@) (if g$T$14540$CSxK@ (g$C$14539$CSxK@ '#f) (cdr (case-lambda ((g$V$14541$CSxK@) (car (case-lambda ((g$V$14542$CSxK@) ((case-lambda ((g$C$14536$CSxK@ g$p?$6627$CSxK@ g$t$6628$CSxK@ g$r$6629$CSxK@) (car (case-lambda ((g$V$14537$CSxK@) (g$p?$6627$CSxK@ (case-lambda ((g$T$14538$CSxK@) (if g$T$14538$CSxK@ (g$C$14536$CSxK@ g$t$6628$CSxK@) (g$assp$6560$CSxK@ g$C$14536$CSxK@ g$p?$6627$CSxK@ g$r$6629$CSxK@)))) g$V$14537$CSxK@))) g$t$6628$CSxK@))) g$C$14539$CSxK@ g$p?$6625$CSxK@ g$V$14542$CSxK@ g$V$14541$CSxK@))) g$lst$6626$CSxK@))) g$lst$6626$CSxK@)))) g$lst$6626$CSxK@)))))) (library-letrec*-identity 'g$assp$6560$CSxK@))) (g$memq$6561$CSxK@ g$memq$6705$CSxK@ ((case-lambda ((g$C$14664$CSxK@) (g$C$14664$CSxK@ (case-lambda ((g$C$14543$CSxK@ g$obj$6630$CSxK@ g$lst$6631$CSxK@) (null? (case-lambda ((g$T$14544$CSxK@) (if g$T$14544$CSxK@ (g$C$14543$CSxK@ '#f) (car (case-lambda ((g$V$14545$CSxK@) (eq? (case-lambda ((g$T$14546$CSxK@) (if g$T$14546$CSxK@ (g$C$14543$CSxK@ g$lst$6631$CSxK@) (cdr (case-lambda ((g$V$14547$CSxK@) (g$memq$6561$CSxK@ g$C$14543$CSxK@ g$obj$6630$CSxK@ g$V$14547$CSxK@))) g$lst$6631$CSxK@)))) g$obj$6630$CSxK@ g$V$14545$CSxK@))) g$lst$6631$CSxK@)))) g$lst$6631$CSxK@)))))) (library-letrec*-identity 'g$memq$6561$CSxK@))) (g$memv$6562$CSxK@ g$memv$6706$CSxK@ ((case-lambda ((g$C$14665$CSxK@) (g$C$14665$CSxK@ (case-lambda ((g$C$14548$CSxK@ g$obj$6632$CSxK@ g$lst$6633$CSxK@) (null? (case-lambda ((g$T$14549$CSxK@) (if g$T$14549$CSxK@ (g$C$14548$CSxK@ '#f) (car (case-lambda ((g$V$14550$CSxK@) (eqv? (case-lambda ((g$T$14551$CSxK@) (if g$T$14551$CSxK@ (g$C$14548$CSxK@ g$lst$6633$CSxK@) (cdr (case-lambda ((g$V$14552$CSxK@) (g$memv$6562$CSxK@ g$C$14548$CSxK@ g$obj$6632$CSxK@ g$V$14552$CSxK@))) g$lst$6633$CSxK@)))) g$obj$6632$CSxK@ g$V$14550$CSxK@))) g$lst$6633$CSxK@)))) g$lst$6633$CSxK@)))))) (library-letrec*-identity 'g$memv$6562$CSxK@))) (g$member$6563$CSxK@ g$member$6707$CSxK@ ((case-lambda ((g$C$14666$CSxK@) (g$C$14666$CSxK@ (case-lambda ((g$C$14553$CSxK@ g$obj$6634$CSxK@ g$lst$6635$CSxK@) (null? (case-lambda ((g$T$14554$CSxK@) (if g$T$14554$CSxK@ (g$C$14553$CSxK@ '#f) (car (case-lambda ((g$V$14555$CSxK@) (equal? (case-lambda ((g$T$14556$CSxK@) (if g$T$14556$CSxK@ (g$C$14553$CSxK@ g$lst$6635$CSxK@) (cdr (case-lambda ((g$V$14557$CSxK@) (g$member$6563$CSxK@ g$C$14553$CSxK@ g$obj$6634$CSxK@ g$V$14557$CSxK@))) g$lst$6635$CSxK@)))) g$obj$6634$CSxK@ g$V$14555$CSxK@))) g$lst$6635$CSxK@)))) g$lst$6635$CSxK@)))))) (library-letrec*-identity 'g$member$6563$CSxK@))) (g$memp$6564$CSxK@ g$memp$6708$CSxK@ ((case-lambda ((g$C$14667$CSxK@) (g$C$14667$CSxK@ (case-lambda ((g$C$14558$CSxK@ g$p?$6636$CSxK@ g$lst$6637$CSxK@) (null? (case-lambda ((g$T$14559$CSxK@) (if g$T$14559$CSxK@ (g$C$14558$CSxK@ '#f) (car (case-lambda ((g$V$14560$CSxK@) (g$p?$6636$CSxK@ (case-lambda ((g$T$14561$CSxK@) (if g$T$14561$CSxK@ (g$C$14558$CSxK@ g$lst$6637$CSxK@) (cdr (case-lambda ((g$V$14562$CSxK@) (g$memp$6564$CSxK@ g$C$14558$CSxK@ g$p?$6636$CSxK@ g$V$14562$CSxK@))) g$lst$6637$CSxK@)))) g$V$14560$CSxK@))) g$lst$6637$CSxK@)))) g$lst$6637$CSxK@)))))) (library-letrec*-identity 'g$memp$6564$CSxK@))) (g$all-empty?$6565$CSxK@ g$all-empty?$6709$CSxK@ ((case-lambda ((g$C$14668$CSxK@) (g$C$14668$CSxK@ (case-lambda ((g$C$14567$CSxK@ g$ls$6638$CSxK@) (null? (case-lambda ((g$V$14568$CSxK@) ((case-lambda ((g$C$14563$CSxK@ g$t$6639$CSxK@) (if g$t$6639$CSxK@ (g$C$14563$CSxK@ g$t$6639$CSxK@) (car (case-lambda ((g$V$14564$CSxK@) (null? (case-lambda ((g$T$14565$CSxK@) (if g$T$14565$CSxK@ (cdr (case-lambda ((g$V$14566$CSxK@) (g$all-empty?$6565$CSxK@ g$C$14563$CSxK@ g$V$14566$CSxK@))) g$ls$6638$CSxK@) (g$C$14563$CSxK@ '#f)))) g$V$14564$CSxK@))) g$ls$6638$CSxK@)))) g$C$14567$CSxK@ g$V$14568$CSxK@))) g$ls$6638$CSxK@)))))) (library-letrec*-identity 'g$all-empty?$6565$CSxK@))) (g$split$6566$CSxK@ g$split$6710$CSxK@ ((case-lambda ((g$C$14669$CSxK@) (g$C$14669$CSxK@ (case-lambda ((g$C$14578$CSxK@ g$ls$6640$CSxK@) (null? (case-lambda ((g$T$14579$CSxK@) (if g$T$14579$CSxK@ (values g$C$14578$CSxK@ '() '()) (call-with-values g$C$14578$CSxK@ (case-lambda ((g$C$14569$CSxK@) (cdr (case-lambda ((g$V$14570$CSxK@) (g$split$6566$CSxK@ g$C$14569$CSxK@ g$V$14570$CSxK@))) g$ls$6640$CSxK@))) (case-lambda ((g$C$14576$CSxK@ g$cars$6641$CSxK@ g$cdrs$6642$CSxK@) (car (case-lambda ((g$V$14577$CSxK@) ((case-lambda ((g$C$14571$CSxK@ g$a$6643$CSxK@) (cdr (case-lambda ((g$V$14572$CSxK@) (cons (case-lambda ((g$V$14573$CSxK@) (car (case-lambda ((g$V$14574$CSxK@) (cons (case-lambda ((g$V$14575$CSxK@) (values g$C$14571$CSxK@ g$V$14575$CSxK@ g$V$14573$CSxK@))) g$V$14574$CSxK@ g$cars$6641$CSxK@))) g$a$6643$CSxK@))) g$V$14572$CSxK@ g$cdrs$6642$CSxK@))) g$a$6643$CSxK@))) g$C$14576$CSxK@ g$V$14577$CSxK@))) g$ls$6640$CSxK@))))))) g$ls$6640$CSxK@)))))) (library-letrec*-identity 'g$split$6566$CSxK@))) (g$for-all$6567$CSxK@ g$for-all$6711$CSxK@ ((case-lambda ((g$C$14670$CSxK@) (g$C$14670$CSxK@ (case-lambda ((g$C$14586$CSxK@ g$f$6644$CSxK@ g$arg1$6645$CSxK@ . g$args$6646$CSxK@) (cons (case-lambda ((g$V$14587$CSxK@) ((case-lambda ((g$C$14584$CSxK@ g$args$6647$CSxK@) (g$all-empty?$6565$CSxK@ (case-lambda ((g$T$14585$CSxK@) (if g$T$14585$CSxK@ (g$C$14584$CSxK@ '#t) (call-with-values g$C$14584$CSxK@ (case-lambda ((g$C$14580$CSxK@) (g$split$6566$CSxK@ g$C$14580$CSxK@ g$args$6647$CSxK@))) (case-lambda ((g$C$14581$CSxK@ g$cars$6648$CSxK@ g$cdrs$6649$CSxK@) (g$all-empty?$6565$CSxK@ (case-lambda ((g$T$14582$CSxK@) (if g$T$14582$CSxK@ (apply g$C$14581$CSxK@ g$f$6644$CSxK@ g$cars$6648$CSxK@) (apply (case-lambda ((g$T$14583$CSxK@) (if g$T$14583$CSxK@ (apply g$C$14581$CSxK@ g$for-all$6567$CSxK@ g$f$6644$CSxK@ g$cdrs$6649$CSxK@) (g$C$14581$CSxK@ '#f)))) g$f$6644$CSxK@ g$cars$6648$CSxK@)))) g$cdrs$6649$CSxK@))))))) g$args$6647$CSxK@))) g$C$14586$CSxK@ g$V$14587$CSxK@))) g$arg1$6645$CSxK@ g$args$6646$CSxK@)))))) (library-letrec*-identity 'g$for-all$6567$CSxK@))) (g$exists$6568$CSxK@ g$exists$6712$CSxK@ ((case-lambda ((g$C$14671$CSxK@) (g$C$14671$CSxK@ (case-lambda ((g$C$14594$CSxK@ g$f$6650$CSxK@ g$arg1$6651$CSxK@ . g$args$6652$CSxK@) (cons (case-lambda ((g$V$14595$CSxK@) ((case-lambda ((g$C$14592$CSxK@ g$args$6653$CSxK@) (g$all-empty?$6565$CSxK@ (case-lambda ((g$T$14593$CSxK@) (if g$T$14593$CSxK@ (g$C$14592$CSxK@ '#f) (call-with-values g$C$14592$CSxK@ (case-lambda ((g$C$14588$CSxK@) (g$split$6566$CSxK@ g$C$14588$CSxK@ g$args$6653$CSxK@))) (case-lambda ((g$C$14590$CSxK@ g$cars$6654$CSxK@ g$cdrs$6655$CSxK@) (apply (case-lambda ((g$V$14591$CSxK@) ((case-lambda ((g$C$14589$CSxK@ g$t$6656$CSxK@) (if g$t$6656$CSxK@ (g$C$14589$CSxK@ g$t$6656$CSxK@) (apply g$C$14589$CSxK@ g$exists$6568$CSxK@ g$f$6650$CSxK@ g$cdrs$6655$CSxK@)))) g$C$14590$CSxK@ g$V$14591$CSxK@))) g$f$6650$CSxK@ g$cars$6654$CSxK@))))))) g$args$6653$CSxK@))) g$C$14594$CSxK@ g$V$14595$CSxK@))) g$arg1$6651$CSxK@ g$args$6652$CSxK@)))))) (library-letrec*-identity 'g$exists$6568$CSxK@))) (g$map$6569$CSxK@ g$map$6713$CSxK@ ((case-lambda ((g$C$14672$CSxK@) (g$C$14672$CSxK@ (case-lambda ((g$C$14605$CSxK@ g$proc$6657$CSxK@ g$list1$6658$CSxK@ . g$lists$6659$CSxK@) (cons (case-lambda ((g$V$14606$CSxK@) ((case-lambda ((g$C$14604$CSxK@ g$f$6660$CSxK@) ((case-lambda ((g$C$14597$CSxK@ g$f$14596$CSxK@) (begin (set! g$f$6660$CSxK@ g$f$14596$CSxK@) (g$C$14597$CSxK@ g$f$6660$CSxK@)))) g$C$14604$CSxK@ (case-lambda ((g$C$14602$CSxK@ g$lists$6661$CSxK@ g$a$6662$CSxK@) (g$all-empty?$6565$CSxK@ (case-lambda ((g$T$14603$CSxK@) (if g$T$14603$CSxK@ (reverse! g$C$14602$CSxK@ g$a$6662$CSxK@) (call-with-values g$C$14602$CSxK@ (case-lambda ((g$C$14598$CSxK@) (g$split$6566$CSxK@ g$C$14598$CSxK@ g$lists$6661$CSxK@))) (case-lambda ((g$C$14599$CSxK@ g$cars$6663$CSxK@ g$cdrs$6664$CSxK@) (apply (case-lambda ((g$V$14600$CSxK@) (cons (case-lambda ((g$V$14601$CSxK@) (g$f$6660$CSxK@ g$C$14599$CSxK@ g$cdrs$6664$CSxK@ g$V$14601$CSxK@))) g$V$14600$CSxK@ g$a$6662$CSxK@))) g$proc$6657$CSxK@ g$cars$6663$CSxK@))))))) g$lists$6661$CSxK@)))))) (case-lambda ((g$V$14607$CSxK@) (g$V$14607$CSxK@ g$C$14605$CSxK@ g$V$14606$CSxK@ '()))) uninitialized))) g$list1$6658$CSxK@ g$lists$6659$CSxK@)))))) (library-letrec*-identity 'g$map$6569$CSxK@))) (g$for-each$6570$CSxK@ g$for-each$6714$CSxK@ ((case-lambda ((g$C$14673$CSxK@) (g$C$14673$CSxK@ (case-lambda ((g$C$14614$CSxK@ g$f$6665$CSxK@ g$arg1$6666$CSxK@ . g$args$6667$CSxK@) (cons (case-lambda ((g$V$14615$CSxK@) ((case-lambda ((g$C$14611$CSxK@ g$args$6668$CSxK@) (g$all-empty?$6565$CSxK@ (case-lambda ((g$V$14612$CSxK@) (not (case-lambda ((g$T$14613$CSxK@) (if g$T$14613$CSxK@ (call-with-values g$C$14611$CSxK@ (case-lambda ((g$C$14608$CSxK@) (g$split$6566$CSxK@ g$C$14608$CSxK@ g$args$6668$CSxK@))) (case-lambda ((g$C$14609$CSxK@ g$cars$6669$CSxK@ g$cdrs$6670$CSxK@) (apply (case-lambda (g$IGNORE$14610$CSxK@ (apply g$C$14609$CSxK@ g$for-each$6570$CSxK@ g$f$6665$CSxK@ g$cdrs$6670$CSxK@))) g$f$6665$CSxK@ g$cars$6669$CSxK@)))) (void g$C$14611$CSxK@)))) g$V$14612$CSxK@))) g$args$6668$CSxK@))) g$C$14614$CSxK@ g$V$14615$CSxK@))) g$arg1$6666$CSxK@ g$args$6667$CSxK@)))))) (library-letrec*-identity 'g$for-each$6570$CSxK@))) (g$cons*$6571$CSxK@ g$cons*$6715$CSxK@ ((case-lambda ((g$C$14674$CSxK@) (g$C$14674$CSxK@ (case-lambda ((g$C$14624$CSxK@ g$a$6671$CSxK@ . g$rest$6672$CSxK@) ((case-lambda ((g$C$14623$CSxK@ g$f$6673$CSxK@) ((case-lambda ((g$C$14617$CSxK@ g$f$14616$CSxK@) (begin (set! g$f$6673$CSxK@ g$f$14616$CSxK@) (g$C$14617$CSxK@ g$f$6673$CSxK@)))) g$C$14623$CSxK@ (case-lambda ((g$C$14618$CSxK@ g$a$6674$CSxK@ g$rest$6675$CSxK@) (null? (case-lambda ((g$T$14619$CSxK@) (if g$T$14619$CSxK@ (g$C$14618$CSxK@ g$a$6674$CSxK@) (cdr (case-lambda ((g$V$14620$CSxK@) (car (case-lambda ((g$V$14621$CSxK@) (g$f$6673$CSxK@ (case-lambda ((g$V$14622$CSxK@) (cons g$C$14618$CSxK@ g$a$6674$CSxK@ g$V$14622$CSxK@))) g$V$14621$CSxK@ g$V$14620$CSxK@))) g$rest$6675$CSxK@))) g$rest$6675$CSxK@)))) g$rest$6675$CSxK@)))))) (case-lambda ((g$V$14625$CSxK@) (g$V$14625$CSxK@ g$C$14624$CSxK@ g$a$6671$CSxK@ g$rest$6672$CSxK@))) uninitialized)))))) (library-letrec*-identity 'g$cons*$6571$CSxK@))) (g$fold-left$6572$CSxK@ g$fold-left$6716$CSxK@ ((case-lambda ((g$C$14675$CSxK@) (g$C$14675$CSxK@ (case-lambda ((g$C$14626$CSxK@ g$combine$6676$CSxK@ g$nil$6677$CSxK@ g$list1$6678$CSxK@ . g$lists$6679$CSxK@) (null? (case-lambda ((g$T$14627$CSxK@) (if g$T$14627$CSxK@ (g$C$14626$CSxK@ g$nil$6677$CSxK@) (g$map$6569$CSxK@ (case-lambda ((g$V$14628$CSxK@) (cdr (case-lambda ((g$V$14629$CSxK@) (g$map$6569$CSxK@ (case-lambda ((g$V$14630$CSxK@) (car (case-lambda ((g$V$14631$CSxK@) (g$cons*$6571$CSxK@ (case-lambda ((g$V$14632$CSxK@) (apply (case-lambda ((g$V$14633$CSxK@) (g$cons*$6571$CSxK@ (case-lambda ((g$V$14634$CSxK@) (apply g$C$14626$CSxK@ g$fold-left$6572$CSxK@ g$V$14634$CSxK@))) g$combine$6676$CSxK@ g$V$14633$CSxK@ g$V$14629$CSxK@ g$V$14628$CSxK@))) g$combine$6676$CSxK@ g$V$14632$CSxK@))) g$nil$6677$CSxK@ g$V$14631$CSxK@ g$V$14630$CSxK@))) g$list1$6678$CSxK@))) car g$lists$6679$CSxK@))) g$list1$6678$CSxK@))) cdr g$lists$6679$CSxK@)))) g$list1$6678$CSxK@)))))) (library-letrec*-identity 'g$fold-left$6572$CSxK@))) (g$fold-right$6573$CSxK@ g$fold-right$6717$CSxK@ ((case-lambda ((g$C$14676$CSxK@) (g$C$14676$CSxK@ (case-lambda ((g$C$14635$CSxK@ g$combine$6680$CSxK@ g$nil$6681$CSxK@ g$list1$6682$CSxK@ . g$lists$6683$CSxK@) (null? (case-lambda ((g$T$14636$CSxK@) (if g$T$14636$CSxK@ (g$C$14635$CSxK@ g$nil$6681$CSxK@) (g$map$6569$CSxK@ (case-lambda ((g$V$14637$CSxK@) (cdr (case-lambda ((g$V$14638$CSxK@) (g$cons*$6571$CSxK@ (case-lambda ((g$V$14639$CSxK@) (apply (case-lambda ((g$V$14640$CSxK@) (list (case-lambda ((g$V$14641$CSxK@) (g$map$6569$CSxK@ (case-lambda ((g$V$14642$CSxK@) (car (case-lambda ((g$V$14643$CSxK@) (list (case-lambda ((g$V$14644$CSxK@) (append (case-lambda ((g$V$14645$CSxK@) (apply g$C$14635$CSxK@ g$combine$6680$CSxK@ g$V$14645$CSxK@))) g$V$14644$CSxK@ g$V$14642$CSxK@ g$V$14641$CSxK@))) g$V$14643$CSxK@))) g$list1$6682$CSxK@))) car g$lists$6683$CSxK@))) g$V$14640$CSxK@))) g$fold-right$6573$CSxK@ g$V$14639$CSxK@))) g$combine$6680$CSxK@ g$nil$6681$CSxK@ g$V$14638$CSxK@ g$V$14637$CSxK@))) g$list1$6682$CSxK@))) cdr g$lists$6683$CSxK@)))) g$list1$6682$CSxK@)))))) (library-letrec*-identity 'g$fold-right$6573$CSxK@))) (g$remove$6574$CSxK@ g$remove$6718$CSxK@ ((case-lambda ((g$C$14677$CSxK@) (g$C$14677$CSxK@ (case-lambda ((g$C$14647$CSxK@ g$obj$6684$CSxK@ g$list$6685$CSxK@) (g$remp$6555$CSxK@ g$C$14647$CSxK@ (case-lambda ((g$C$14646$CSxK@ g$x$6686$CSxK@) (equal? g$C$14646$CSxK@ g$obj$6684$CSxK@ g$x$6686$CSxK@))) g$list$6685$CSxK@)))))) (library-letrec*-identity 'g$remove$6574$CSxK@))) (g$remv$6575$CSxK@ g$remv$6719$CSxK@ ((case-lambda ((g$C$14678$CSxK@) (g$C$14678$CSxK@ (case-lambda ((g$C$14649$CSxK@ g$obj$6687$CSxK@ g$list$6688$CSxK@) (g$remp$6555$CSxK@ g$C$14649$CSxK@ (case-lambda ((g$C$14648$CSxK@ g$x$6689$CSxK@) (eqv? g$C$14648$CSxK@ g$obj$6687$CSxK@ g$x$6689$CSxK@))) g$list$6688$CSxK@)))))) (library-letrec*-identity 'g$remv$6575$CSxK@))) (g$remq$6576$CSxK@ g$remq$6720$CSxK@ ((case-lambda ((g$C$14679$CSxK@) (g$C$14679$CSxK@ (case-lambda ((g$C$14651$CSxK@ g$obj$6690$CSxK@ g$list$6691$CSxK@) (g$remp$6555$CSxK@ g$C$14651$CSxK@ (case-lambda ((g$C$14650$CSxK@ g$x$6692$CSxK@) (eq? g$C$14650$CSxK@ g$obj$6690$CSxK@ g$x$6692$CSxK@))) g$list$6691$CSxK@)))))) (library-letrec*-identity 'g$remq$6576$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme base) ((g$div$7029$CSxK@ g$div$7375$CSxK@ ((case-lambda ((g$C$15149$CSxK@) (g$C$15149$CSxK@ (case-lambda ((g$C$14683$CSxK@ g$x1$7175$CSxK@ g$x2$7176$CSxK@) (call-with-values g$C$14683$CSxK@ (case-lambda ((g$C$14680$CSxK@) (div-and-mod g$C$14680$CSxK@ g$x1$7175$CSxK@ g$x2$7176$CSxK@))) (case-lambda ((g$C$14682$CSxK@ g$n$7179$CSxK@ g$d$7180$CSxK@) ((case-lambda ((g$C$14681$CSxK@ g$d$7181$CSxK@ g$n$7182$CSxK@) (g$C$14681$CSxK@ g$n$7182$CSxK@))) g$C$14682$CSxK@ g$d$7180$CSxK@ g$n$7179$CSxK@))))))))) (library-letrec*-identity 'g$div$7029$CSxK@))) (g$div0$7030$CSxK@ g$div0$7376$CSxK@ ((case-lambda ((g$C$15150$CSxK@) (g$C$15150$CSxK@ (case-lambda ((g$C$14687$CSxK@ g$x1$7183$CSxK@ g$x2$7184$CSxK@) (call-with-values g$C$14687$CSxK@ (case-lambda ((g$C$14684$CSxK@) (div0-and-mod0 g$C$14684$CSxK@ g$x1$7183$CSxK@ g$x2$7184$CSxK@))) (case-lambda ((g$C$14686$CSxK@ g$n$7187$CSxK@ g$d$7188$CSxK@) ((case-lambda ((g$C$14685$CSxK@ g$d$7189$CSxK@ g$n$7190$CSxK@) (g$C$14685$CSxK@ g$n$7190$CSxK@))) g$C$14686$CSxK@ g$d$7188$CSxK@ g$n$7187$CSxK@))))))))) (library-letrec*-identity 'g$div0$7030$CSxK@))) (g$mod$7031$CSxK@ g$mod$7377$CSxK@ ((case-lambda ((g$C$15151$CSxK@) (g$C$15151$CSxK@ (case-lambda ((g$C$14691$CSxK@ g$x1$7191$CSxK@ g$x2$7192$CSxK@) (call-with-values g$C$14691$CSxK@ (case-lambda ((g$C$14688$CSxK@) (div-and-mod g$C$14688$CSxK@ g$x1$7191$CSxK@ g$x2$7192$CSxK@))) (case-lambda ((g$C$14690$CSxK@ g$n$7195$CSxK@ g$d$7196$CSxK@) ((case-lambda ((g$C$14689$CSxK@ g$d$7197$CSxK@ g$n$7198$CSxK@) (g$C$14689$CSxK@ g$d$7197$CSxK@))) g$C$14690$CSxK@ g$d$7196$CSxK@ g$n$7195$CSxK@))))))))) (library-letrec*-identity 'g$mod$7031$CSxK@))) (g$mod0$7032$CSxK@ g$mod0$7378$CSxK@ ((case-lambda ((g$C$15152$CSxK@) (g$C$15152$CSxK@ (case-lambda ((g$C$14695$CSxK@ g$x1$7199$CSxK@ g$x2$7200$CSxK@) (call-with-values g$C$14695$CSxK@ (case-lambda ((g$C$14692$CSxK@) (div0-and-mod0 g$C$14692$CSxK@ g$x1$7199$CSxK@ g$x2$7200$CSxK@))) (case-lambda ((g$C$14694$CSxK@ g$n$7203$CSxK@ g$d$7204$CSxK@) ((case-lambda ((g$C$14693$CSxK@ g$d$7205$CSxK@ g$n$7206$CSxK@) (g$C$14693$CSxK@ g$d$7205$CSxK@))) g$C$14694$CSxK@ g$d$7204$CSxK@ g$n$7203$CSxK@))))))))) (library-letrec*-identity 'g$mod0$7032$CSxK@))) (g$list->vector$7033$CSxK@ g$list->vector$7379$CSxK@ ((case-lambda ((g$C$15153$CSxK@) (g$C$15153$CSxK@ (case-lambda ((g$C$14696$CSxK@ g$lst$7207$CSxK@) (apply g$C$14696$CSxK@ vector g$lst$7207$CSxK@)))))) (library-letrec*-identity 'g$list->vector$7033$CSxK@))) (g$list->string$7034$CSxK@ g$list->string$7380$CSxK@ ((case-lambda ((g$C$15154$CSxK@) (g$C$15154$CSxK@ (case-lambda ((g$C$14697$CSxK@ g$lst$7208$CSxK@) (apply g$C$14697$CSxK@ string g$lst$7208$CSxK@)))))) (library-letrec*-identity 'g$list->string$7034$CSxK@))) (g$char?$7035$CSxK@ g$char?$7381$CSxK@ ((case-lambda ((g$C$15155$CSxK@) (g$C$15155$CSxK@ (case-lambda ((g$C$14698$CSxK@ g$obj$7209$CSxK@) (g$C$14698$CSxK@ (clr-is-internal 'system.char g$obj$7209$CSxK@))))))) (library-letrec*-identity 'g$char?$7035$CSxK@))) (g$vector?$7036$CSxK@ g$vector?$7382$CSxK@ ((case-lambda ((g$C$15156$CSxK@) (g$C$15156$CSxK@ (case-lambda ((g$C$14699$CSxK@ g$obj$7210$CSxK@) (g$C$14699$CSxK@ (clr-is-internal 'system.object[] g$obj$7210$CSxK@))))))) (library-letrec*-identity 'g$vector?$7036$CSxK@))) (g$bytevector?$7037$CSxK@ g$bytevector?$7383$CSxK@ ((case-lambda ((g$C$15157$CSxK@) (g$C$15157$CSxK@ (case-lambda ((g$C$14700$CSxK@ g$obj$7211$CSxK@) (g$C$14700$CSxK@ (clr-is-internal 'system.byte[] g$obj$7211$CSxK@))))))) (library-letrec*-identity 'g$bytevector?$7037$CSxK@))) (g$symbol?$7038$CSxK@ g$symbol?$7384$CSxK@ ((case-lambda ((g$C$15158$CSxK@) (g$C$15158$CSxK@ (case-lambda ((g$C$14701$CSxK@ g$obj$7212$CSxK@) (g$C$14701$CSxK@ (clr-is-internal 'microsoft.scripting.symbolid g$obj$7212$CSxK@))))))) (library-letrec*-identity 'g$symbol?$7038$CSxK@))) (g$boolean?$7039$CSxK@ g$boolean?$7385$CSxK@ ((case-lambda ((g$C$15159$CSxK@) (g$C$15159$CSxK@ (case-lambda ((g$C$14702$CSxK@ g$obj$7213$CSxK@) (g$C$14702$CSxK@ (clr-is-internal 'system.boolean g$obj$7213$CSxK@))))))) (library-letrec*-identity 'g$boolean?$7039$CSxK@))) (g$procedure?$7040$CSxK@ g$procedure?$7386$CSxK@ ((case-lambda ((g$C$15160$CSxK@) (g$C$15160$CSxK@ (case-lambda ((g$C$14703$CSxK@ g$obj$7214$CSxK@) (g$C$14703$CSxK@ (clr-is-internal 'ironscheme.runtime.icallable g$obj$7214$CSxK@))))))) (library-letrec*-identity 'g$procedure?$7040$CSxK@))) (g$fixnum?$7041$CSxK@ g$fixnum?$7387$CSxK@ ((case-lambda ((g$C$15161$CSxK@) (g$C$15161$CSxK@ (case-lambda ((g$C$14704$CSxK@ g$obj$7215$CSxK@) (g$C$14704$CSxK@ (clr-is-internal 'system.int32 g$obj$7215$CSxK@))))))) (library-letrec*-identity 'g$fixnum?$7041$CSxK@))) (g$flonum?$7042$CSxK@ g$flonum?$7388$CSxK@ ((case-lambda ((g$C$15162$CSxK@) (g$C$15162$CSxK@ (case-lambda ((g$C$14705$CSxK@ g$obj$7216$CSxK@) (g$C$14705$CSxK@ (clr-is-internal 'system.double g$obj$7216$CSxK@))))))) (library-letrec*-identity 'g$flonum?$7042$CSxK@))) (g$fixnum-width$7043$CSxK@ g$fixnum-width$7389$CSxK@ ((case-lambda ((g$C$15163$CSxK@) (g$C$15163$CSxK@ (case-lambda ((g$C$14706$CSxK@) (g$C$14706$CSxK@ '32)))))) (library-letrec*-identity 'g$fixnum-width$7043$CSxK@))) (g$vector-fill!$7044$CSxK@ g$vector-fill!$7390$CSxK@ ((case-lambda ((g$C$15164$CSxK@) (g$C$15164$CSxK@ (case-lambda ((g$C$14715$CSxK@ g$vec$7217$CSxK@ g$val$7218$CSxK@) (vector-length (case-lambda ((g$V$14716$CSxK@) ((case-lambda ((g$C$14714$CSxK@ g$len$7219$CSxK@) ((case-lambda ((g$C$14713$CSxK@ g$loop$7220$CSxK@) ((case-lambda ((g$C$14708$CSxK@ g$loop$14707$CSxK@) (begin (set! g$loop$7220$CSxK@ g$loop$14707$CSxK@) (g$loop$7220$CSxK@ g$C$14708$CSxK@ '0)))) g$C$14713$CSxK@ (case-lambda ((g$C$14709$CSxK@ g$i$7221$CSxK@) (fx=? (case-lambda ((g$T$14710$CSxK@) (if g$T$14710$CSxK@ (if '#f (g$C$14709$CSxK@ '#f) (void g$C$14709$CSxK@)) (vector-set! (case-lambda (g$IGNORE$14711$CSxK@ (fx+ (case-lambda ((g$V$14712$CSxK@) (g$loop$7220$CSxK@ g$C$14709$CSxK@ g$V$14712$CSxK@))) g$i$7221$CSxK@ '1))) g$vec$7217$CSxK@ g$i$7221$CSxK@ g$val$7218$CSxK@)))) g$i$7221$CSxK@ g$len$7219$CSxK@)))))) g$C$14714$CSxK@ uninitialized))) g$C$14715$CSxK@ g$V$14716$CSxK@))) g$vec$7217$CSxK@)))))) (library-letrec*-identity 'g$vector-fill!$7044$CSxK@))) (g$reverse$7045$CSxK@ g$reverse$7391$CSxK@ ((case-lambda ((g$C$15165$CSxK@) (g$C$15165$CSxK@ (case-lambda ((g$C$14718$CSxK@ g$lst$7222$CSxK@) (g$fold-left$6716$CSxK@ g$C$14718$CSxK@ (case-lambda ((g$C$14717$CSxK@ g$x$7223$CSxK@ g$y$7224$CSxK@) (cons g$C$14717$CSxK@ g$y$7224$CSxK@ g$x$7223$CSxK@))) '() g$lst$7222$CSxK@)))))) (library-letrec*-identity 'g$reverse$7045$CSxK@))) (g$caar$7046$CSxK@ g$caar$7392$CSxK@ ((case-lambda ((g$C$15166$CSxK@) (g$C$15166$CSxK@ (case-lambda ((g$C$14719$CSxK@ g$x$7225$CSxK@) (car (case-lambda ((g$V$14720$CSxK@) (car g$C$14719$CSxK@ g$V$14720$CSxK@))) g$x$7225$CSxK@)))))) (library-letrec*-identity 'g$caar$7046$CSxK@))) (g$cadr$7047$CSxK@ g$cadr$7393$CSxK@ ((case-lambda ((g$C$15167$CSxK@) (g$C$15167$CSxK@ (case-lambda ((g$C$14721$CSxK@ g$x$7226$CSxK@) (cdr (case-lambda ((g$V$14722$CSxK@) (car g$C$14721$CSxK@ g$V$14722$CSxK@))) g$x$7226$CSxK@)))))) (library-letrec*-identity 'g$cadr$7047$CSxK@))) (g$cdar$7048$CSxK@ g$cdar$7394$CSxK@ ((case-lambda ((g$C$15168$CSxK@) (g$C$15168$CSxK@ (case-lambda ((g$C$14723$CSxK@ g$x$7227$CSxK@) (car (case-lambda ((g$V$14724$CSxK@) (cdr g$C$14723$CSxK@ g$V$14724$CSxK@))) g$x$7227$CSxK@)))))) (library-letrec*-identity 'g$cdar$7048$CSxK@))) (g$cddr$7049$CSxK@ g$cddr$7395$CSxK@ ((case-lambda ((g$C$15169$CSxK@) (g$C$15169$CSxK@ (case-lambda ((g$C$14725$CSxK@ g$x$7228$CSxK@) (cdr (case-lambda ((g$V$14726$CSxK@) (cdr g$C$14725$CSxK@ g$V$14726$CSxK@))) g$x$7228$CSxK@)))))) (library-letrec*-identity 'g$cddr$7049$CSxK@))) (g$caaar$7050$CSxK@ g$caaar$7396$CSxK@ ((case-lambda ((g$C$15170$CSxK@) (g$C$15170$CSxK@ (case-lambda ((g$C$14727$CSxK@ g$x$7229$CSxK@) (car (case-lambda ((g$V$14728$CSxK@) (g$caar$7046$CSxK@ g$C$14727$CSxK@ g$V$14728$CSxK@))) g$x$7229$CSxK@)))))) (library-letrec*-identity 'g$caaar$7050$CSxK@))) (g$caadr$7051$CSxK@ g$caadr$7397$CSxK@ ((case-lambda ((g$C$15171$CSxK@) (g$C$15171$CSxK@ (case-lambda ((g$C$14729$CSxK@ g$x$7230$CSxK@) (cdr (case-lambda ((g$V$14730$CSxK@) (g$caar$7046$CSxK@ g$C$14729$CSxK@ g$V$14730$CSxK@))) g$x$7230$CSxK@)))))) (library-letrec*-identity 'g$caadr$7051$CSxK@))) (g$cadar$7052$CSxK@ g$cadar$7398$CSxK@ ((case-lambda ((g$C$15172$CSxK@) (g$C$15172$CSxK@ (case-lambda ((g$C$14731$CSxK@ g$x$7231$CSxK@) (car (case-lambda ((g$V$14732$CSxK@) (g$cadr$7047$CSxK@ g$C$14731$CSxK@ g$V$14732$CSxK@))) g$x$7231$CSxK@)))))) (library-letrec*-identity 'g$cadar$7052$CSxK@))) (g$caddr$7053$CSxK@ g$caddr$7399$CSxK@ ((case-lambda ((g$C$15173$CSxK@) (g$C$15173$CSxK@ (case-lambda ((g$C$14733$CSxK@ g$x$7232$CSxK@) (cdr (case-lambda ((g$V$14734$CSxK@) (g$cadr$7047$CSxK@ g$C$14733$CSxK@ g$V$14734$CSxK@))) g$x$7232$CSxK@)))))) (library-letrec*-identity 'g$caddr$7053$CSxK@))) (g$cdaar$7054$CSxK@ g$cdaar$7400$CSxK@ ((case-lambda ((g$C$15174$CSxK@) (g$C$15174$CSxK@ (case-lambda ((g$C$14735$CSxK@ g$x$7233$CSxK@) (car (case-lambda ((g$V$14736$CSxK@) (g$cdar$7048$CSxK@ g$C$14735$CSxK@ g$V$14736$CSxK@))) g$x$7233$CSxK@)))))) (library-letrec*-identity 'g$cdaar$7054$CSxK@))) (g$cdadr$7055$CSxK@ g$cdadr$7401$CSxK@ ((case-lambda ((g$C$15175$CSxK@) (g$C$15175$CSxK@ (case-lambda ((g$C$14737$CSxK@ g$x$7234$CSxK@) (cdr (case-lambda ((g$V$14738$CSxK@) (g$cdar$7048$CSxK@ g$C$14737$CSxK@ g$V$14738$CSxK@))) g$x$7234$CSxK@)))))) (library-letrec*-identity 'g$cdadr$7055$CSxK@))) (g$cddar$7056$CSxK@ g$cddar$7402$CSxK@ ((case-lambda ((g$C$15176$CSxK@) (g$C$15176$CSxK@ (case-lambda ((g$C$14739$CSxK@ g$x$7235$CSxK@) (car (case-lambda ((g$V$14740$CSxK@) (g$cddr$7049$CSxK@ g$C$14739$CSxK@ g$V$14740$CSxK@))) g$x$7235$CSxK@)))))) (library-letrec*-identity 'g$cddar$7056$CSxK@))) (g$cdddr$7057$CSxK@ g$cdddr$7403$CSxK@ ((case-lambda ((g$C$15177$CSxK@) (g$C$15177$CSxK@ (case-lambda ((g$C$14741$CSxK@ g$x$7236$CSxK@) (cdr (case-lambda ((g$V$14742$CSxK@) (g$cddr$7049$CSxK@ g$C$14741$CSxK@ g$V$14742$CSxK@))) g$x$7236$CSxK@)))))) (library-letrec*-identity 'g$cdddr$7057$CSxK@))) (g$caaaar$7058$CSxK@ g$caaaar$7404$CSxK@ ((case-lambda ((g$C$15178$CSxK@) (g$C$15178$CSxK@ (case-lambda ((g$C$14743$CSxK@ g$x$7237$CSxK@) (car (case-lambda ((g$V$14744$CSxK@) (g$caaar$7050$CSxK@ g$C$14743$CSxK@ g$V$14744$CSxK@))) g$x$7237$CSxK@)))))) (library-letrec*-identity 'g$caaaar$7058$CSxK@))) (g$caaadr$7059$CSxK@ g$caaadr$7405$CSxK@ ((case-lambda ((g$C$15179$CSxK@) (g$C$15179$CSxK@ (case-lambda ((g$C$14745$CSxK@ g$x$7238$CSxK@) (cdr (case-lambda ((g$V$14746$CSxK@) (g$caaar$7050$CSxK@ g$C$14745$CSxK@ g$V$14746$CSxK@))) g$x$7238$CSxK@)))))) (library-letrec*-identity 'g$caaadr$7059$CSxK@))) (g$caadar$7060$CSxK@ g$caadar$7406$CSxK@ ((case-lambda ((g$C$15180$CSxK@) (g$C$15180$CSxK@ (case-lambda ((g$C$14747$CSxK@ g$x$7239$CSxK@) (car (case-lambda ((g$V$14748$CSxK@) (g$caadr$7051$CSxK@ g$C$14747$CSxK@ g$V$14748$CSxK@))) g$x$7239$CSxK@)))))) (library-letrec*-identity 'g$caadar$7060$CSxK@))) (g$caaddr$7061$CSxK@ g$caaddr$7407$CSxK@ ((case-lambda ((g$C$15181$CSxK@) (g$C$15181$CSxK@ (case-lambda ((g$C$14749$CSxK@ g$x$7240$CSxK@) (cdr (case-lambda ((g$V$14750$CSxK@) (g$caadr$7051$CSxK@ g$C$14749$CSxK@ g$V$14750$CSxK@))) g$x$7240$CSxK@)))))) (library-letrec*-identity 'g$caaddr$7061$CSxK@))) (g$cadaar$7062$CSxK@ g$cadaar$7408$CSxK@ ((case-lambda ((g$C$15182$CSxK@) (g$C$15182$CSxK@ (case-lambda ((g$C$14751$CSxK@ g$x$7241$CSxK@) (car (case-lambda ((g$V$14752$CSxK@) (g$cadar$7052$CSxK@ g$C$14751$CSxK@ g$V$14752$CSxK@))) g$x$7241$CSxK@)))))) (library-letrec*-identity 'g$cadaar$7062$CSxK@))) (g$cadadr$7063$CSxK@ g$cadadr$7409$CSxK@ ((case-lambda ((g$C$15183$CSxK@) (g$C$15183$CSxK@ (case-lambda ((g$C$14753$CSxK@ g$x$7242$CSxK@) (cdr (case-lambda ((g$V$14754$CSxK@) (g$cadar$7052$CSxK@ g$C$14753$CSxK@ g$V$14754$CSxK@))) g$x$7242$CSxK@)))))) (library-letrec*-identity 'g$cadadr$7063$CSxK@))) (g$caddar$7064$CSxK@ g$caddar$7410$CSxK@ ((case-lambda ((g$C$15184$CSxK@) (g$C$15184$CSxK@ (case-lambda ((g$C$14755$CSxK@ g$x$7243$CSxK@) (car (case-lambda ((g$V$14756$CSxK@) (g$caddr$7053$CSxK@ g$C$14755$CSxK@ g$V$14756$CSxK@))) g$x$7243$CSxK@)))))) (library-letrec*-identity 'g$caddar$7064$CSxK@))) (g$cadddr$7065$CSxK@ g$cadddr$7411$CSxK@ ((case-lambda ((g$C$15185$CSxK@) (g$C$15185$CSxK@ (case-lambda ((g$C$14757$CSxK@ g$x$7244$CSxK@) (cdr (case-lambda ((g$V$14758$CSxK@) (g$caddr$7053$CSxK@ g$C$14757$CSxK@ g$V$14758$CSxK@))) g$x$7244$CSxK@)))))) (library-letrec*-identity 'g$cadddr$7065$CSxK@))) (g$cdaaar$7066$CSxK@ g$cdaaar$7412$CSxK@ ((case-lambda ((g$C$15186$CSxK@) (g$C$15186$CSxK@ (case-lambda ((g$C$14759$CSxK@ g$x$7245$CSxK@) (car (case-lambda ((g$V$14760$CSxK@) (g$cdaar$7054$CSxK@ g$C$14759$CSxK@ g$V$14760$CSxK@))) g$x$7245$CSxK@)))))) (library-letrec*-identity 'g$cdaaar$7066$CSxK@))) (g$cdaadr$7067$CSxK@ g$cdaadr$7413$CSxK@ ((case-lambda ((g$C$15187$CSxK@) (g$C$15187$CSxK@ (case-lambda ((g$C$14761$CSxK@ g$x$7246$CSxK@) (cdr (case-lambda ((g$V$14762$CSxK@) (g$cdaar$7054$CSxK@ g$C$14761$CSxK@ g$V$14762$CSxK@))) g$x$7246$CSxK@)))))) (library-letrec*-identity 'g$cdaadr$7067$CSxK@))) (g$cdadar$7068$CSxK@ g$cdadar$7414$CSxK@ ((case-lambda ((g$C$15188$CSxK@) (g$C$15188$CSxK@ (case-lambda ((g$C$14763$CSxK@ g$x$7247$CSxK@) (car (case-lambda ((g$V$14764$CSxK@) (g$cdadr$7055$CSxK@ g$C$14763$CSxK@ g$V$14764$CSxK@))) g$x$7247$CSxK@)))))) (library-letrec*-identity 'g$cdadar$7068$CSxK@))) (g$cdaddr$7069$CSxK@ g$cdaddr$7415$CSxK@ ((case-lambda ((g$C$15189$CSxK@) (g$C$15189$CSxK@ (case-lambda ((g$C$14765$CSxK@ g$x$7248$CSxK@) (cdr (case-lambda ((g$V$14766$CSxK@) (g$cdadr$7055$CSxK@ g$C$14765$CSxK@ g$V$14766$CSxK@))) g$x$7248$CSxK@)))))) (library-letrec*-identity 'g$cdaddr$7069$CSxK@))) (g$cddaar$7070$CSxK@ g$cddaar$7416$CSxK@ ((case-lambda ((g$C$15190$CSxK@) (g$C$15190$CSxK@ (case-lambda ((g$C$14767$CSxK@ g$x$7249$CSxK@) (car (case-lambda ((g$V$14768$CSxK@) (g$cddar$7056$CSxK@ g$C$14767$CSxK@ g$V$14768$CSxK@))) g$x$7249$CSxK@)))))) (library-letrec*-identity 'g$cddaar$7070$CSxK@))) (g$cddadr$7071$CSxK@ g$cddadr$7417$CSxK@ ((case-lambda ((g$C$15191$CSxK@) (g$C$15191$CSxK@ (case-lambda ((g$C$14769$CSxK@ g$x$7250$CSxK@) (cdr (case-lambda ((g$V$14770$CSxK@) (g$cddar$7056$CSxK@ g$C$14769$CSxK@ g$V$14770$CSxK@))) g$x$7250$CSxK@)))))) (library-letrec*-identity 'g$cddadr$7071$CSxK@))) (g$cdddar$7072$CSxK@ g$cdddar$7418$CSxK@ ((case-lambda ((g$C$15192$CSxK@) (g$C$15192$CSxK@ (case-lambda ((g$C$14771$CSxK@ g$x$7251$CSxK@) (car (case-lambda ((g$V$14772$CSxK@) (g$cdddr$7057$CSxK@ g$C$14771$CSxK@ g$V$14772$CSxK@))) g$x$7251$CSxK@)))))) (library-letrec*-identity 'g$cdddar$7072$CSxK@))) (g$cddddr$7073$CSxK@ g$cddddr$7419$CSxK@ ((case-lambda ((g$C$15193$CSxK@) (g$C$15193$CSxK@ (case-lambda ((g$C$14773$CSxK@ g$x$7252$CSxK@) (cdr (case-lambda ((g$V$14774$CSxK@) (g$cdddr$7057$CSxK@ g$C$14773$CSxK@ g$V$14774$CSxK@))) g$x$7252$CSxK@)))))) (library-letrec*-identity 'g$cddddr$7073$CSxK@))) (g$positive?$7074$CSxK@ g$positive?$7420$CSxK@ ((case-lambda ((g$C$15194$CSxK@) (g$C$15194$CSxK@ (case-lambda ((g$C$14775$CSxK@ g$r$7253$CSxK@) ((case-lambda ((g$J$14777$CSxK@) (real-valued? (case-lambda ((g$V$14778$CSxK@) (not (case-lambda ((g$T$14779$CSxK@) (if g$T$14779$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14777$CSxK@ 'positive? '"not a real" g$r$7253$CSxK@) (void g$J$14777$CSxK@)))) g$V$14778$CSxK@))) g$r$7253$CSxK@))) (case-lambda (g$IGNORE$14776$CSxK@ (< g$C$14775$CSxK@ '0 g$r$7253$CSxK@))))))))) (library-letrec*-identity 'g$positive?$7074$CSxK@))) (g$negative?$7075$CSxK@ g$negative?$7421$CSxK@ ((case-lambda ((g$C$15195$CSxK@) (g$C$15195$CSxK@ (case-lambda ((g$C$14780$CSxK@ g$r$7254$CSxK@) ((case-lambda ((g$J$14782$CSxK@) (real-valued? (case-lambda ((g$V$14783$CSxK@) (not (case-lambda ((g$T$14784$CSxK@) (if g$T$14784$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14782$CSxK@ 'negative? '"not a real" g$r$7254$CSxK@) (void g$J$14782$CSxK@)))) g$V$14783$CSxK@))) g$r$7254$CSxK@))) (case-lambda (g$IGNORE$14781$CSxK@ (> g$C$14780$CSxK@ '0 g$r$7254$CSxK@))))))))) (library-letrec*-identity 'g$negative?$7075$CSxK@))) (g$zero?$7076$CSxK@ g$zero?$7422$CSxK@ ((case-lambda ((g$C$15196$CSxK@) (g$C$15196$CSxK@ (case-lambda ((g$C$14785$CSxK@ g$z$7255$CSxK@) ((case-lambda ((g$J$14787$CSxK@) (number? (case-lambda ((g$V$14788$CSxK@) (not (case-lambda ((g$T$14789$CSxK@) (if g$T$14789$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14787$CSxK@ 'zero? '"not a number" g$z$7255$CSxK@) (void g$J$14787$CSxK@)))) g$V$14788$CSxK@))) g$z$7255$CSxK@))) (case-lambda (g$IGNORE$14786$CSxK@ (= g$C$14785$CSxK@ '0 g$z$7255$CSxK@))))))))) (library-letrec*-identity 'g$zero?$7076$CSxK@))) (g$even?$7077$CSxK@ g$even?$7423$CSxK@ ((case-lambda ((g$C$15197$CSxK@) (g$C$15197$CSxK@ (case-lambda ((g$C$14790$CSxK@ g$n$7256$CSxK@) ((case-lambda ((g$J$14793$CSxK@) (integer-valued? (case-lambda ((g$V$14794$CSxK@) (not (case-lambda ((g$T$14795$CSxK@) (if g$T$14795$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14793$CSxK@ 'even? '"not a integer" g$n$7256$CSxK@) (void g$J$14793$CSxK@)))) g$V$14794$CSxK@))) g$n$7256$CSxK@))) (case-lambda (g$IGNORE$14791$CSxK@ (g$mod$7031$CSxK@ (case-lambda ((g$V$14792$CSxK@) (= g$C$14790$CSxK@ '0 g$V$14792$CSxK@))) g$n$7256$CSxK@ '2))))))))) (library-letrec*-identity 'g$even?$7077$CSxK@))) (g$odd?$7078$CSxK@ g$odd?$7424$CSxK@ ((case-lambda ((g$C$15198$CSxK@) (g$C$15198$CSxK@ (case-lambda ((g$C$14796$CSxK@ g$n$7257$CSxK@) ((case-lambda ((g$J$14799$CSxK@) (integer-valued? (case-lambda ((g$V$14800$CSxK@) (not (case-lambda ((g$T$14801$CSxK@) (if g$T$14801$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14799$CSxK@ 'odd? '"not a integer" g$n$7257$CSxK@) (void g$J$14799$CSxK@)))) g$V$14800$CSxK@))) g$n$7257$CSxK@))) (case-lambda (g$IGNORE$14797$CSxK@ (g$mod$7031$CSxK@ (case-lambda ((g$V$14798$CSxK@) (= g$C$14796$CSxK@ '1 g$V$14798$CSxK@))) g$n$7257$CSxK@ '2))))))))) (library-letrec*-identity 'g$odd?$7078$CSxK@))) (g$max$7079$CSxK@ g$max$7425$CSxK@ ((case-lambda ((g$C$15199$CSxK@) (g$C$15199$CSxK@ (case-lambda ((g$C$14810$CSxK@ g$a$7258$CSxK@ . g$rest$7259$CSxK@) ((case-lambda ((g$J$14812$CSxK@) (real-valued? (case-lambda ((g$V$14813$CSxK@) (not (case-lambda ((g$T$14814$CSxK@) (if g$T$14814$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14812$CSxK@ 'max '"not a real" g$a$7258$CSxK@) (void g$J$14812$CSxK@)))) g$V$14813$CSxK@))) g$a$7258$CSxK@))) (case-lambda (g$IGNORE$14811$CSxK@ (g$fold-left$6716$CSxK@ g$C$14810$CSxK@ (case-lambda ((g$C$14806$CSxK@ g$a$7260$CSxK@ g$b$7261$CSxK@) ((case-lambda ((g$J$14808$CSxK@) (< (case-lambda ((g$T$14809$CSxK@) (if g$T$14809$CSxK@ (g$J$14808$CSxK@ g$b$7261$CSxK@) (g$J$14808$CSxK@ g$a$7260$CSxK@)))) g$a$7260$CSxK@ g$b$7261$CSxK@))) (case-lambda ((g$V$14807$CSxK@) ((case-lambda ((g$C$14803$CSxK@ g$r$7262$CSxK@) (inexact? (case-lambda ((g$V$14804$CSxK@) ((case-lambda ((g$C$14802$CSxK@ g$t$7263$CSxK@) (if g$t$7263$CSxK@ (g$C$14802$CSxK@ g$t$7263$CSxK@) (inexact? g$C$14802$CSxK@ g$b$7261$CSxK@)))) (case-lambda ((g$T$14805$CSxK@) (if g$T$14805$CSxK@ (inexact g$C$14803$CSxK@ g$r$7262$CSxK@) (g$C$14803$CSxK@ g$r$7262$CSxK@)))) g$V$14804$CSxK@))) g$a$7260$CSxK@))) g$C$14806$CSxK@ g$V$14807$CSxK@)))))) g$a$7258$CSxK@ g$rest$7259$CSxK@))))))))) (library-letrec*-identity 'g$max$7079$CSxK@))) (g$min$7080$CSxK@ g$min$7426$CSxK@ ((case-lambda ((g$C$15200$CSxK@) (g$C$15200$CSxK@ (case-lambda ((g$C$14823$CSxK@ g$a$7264$CSxK@ . g$rest$7265$CSxK@) ((case-lambda ((g$J$14825$CSxK@) (real-valued? (case-lambda ((g$V$14826$CSxK@) (not (case-lambda ((g$T$14827$CSxK@) (if g$T$14827$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14825$CSxK@ 'min '"not a real" g$a$7264$CSxK@) (void g$J$14825$CSxK@)))) g$V$14826$CSxK@))) g$a$7264$CSxK@))) (case-lambda (g$IGNORE$14824$CSxK@ (g$fold-left$6716$CSxK@ g$C$14823$CSxK@ (case-lambda ((g$C$14819$CSxK@ g$a$7266$CSxK@ g$b$7267$CSxK@) ((case-lambda ((g$J$14821$CSxK@) (> (case-lambda ((g$T$14822$CSxK@) (if g$T$14822$CSxK@ (g$J$14821$CSxK@ g$b$7267$CSxK@) (g$J$14821$CSxK@ g$a$7266$CSxK@)))) g$a$7266$CSxK@ g$b$7267$CSxK@))) (case-lambda ((g$V$14820$CSxK@) ((case-lambda ((g$C$14816$CSxK@ g$r$7268$CSxK@) (inexact? (case-lambda ((g$V$14817$CSxK@) ((case-lambda ((g$C$14815$CSxK@ g$t$7269$CSxK@) (if g$t$7269$CSxK@ (g$C$14815$CSxK@ g$t$7269$CSxK@) (inexact? g$C$14815$CSxK@ g$b$7267$CSxK@)))) (case-lambda ((g$T$14818$CSxK@) (if g$T$14818$CSxK@ (inexact g$C$14816$CSxK@ g$r$7268$CSxK@) (g$C$14816$CSxK@ g$r$7268$CSxK@)))) g$V$14817$CSxK@))) g$a$7266$CSxK@))) g$C$14819$CSxK@ g$V$14820$CSxK@)))))) g$a$7264$CSxK@ g$rest$7265$CSxK@))))))))) (library-letrec*-identity 'g$min$7080$CSxK@))) (g$gcd$7081$CSxK@ g$gcd$7427$CSxK@ ((case-lambda ((g$C$15201$CSxK@) (g$C$15201$CSxK@ (case-lambda ((g$C$14855$CSxK@ . g$nums$7270$CSxK@) (length (case-lambda ((g$V$14856$CSxK@) ((case-lambda ((g$C$14845$CSxK@ g$t$7271$CSxK@) (eqv? (case-lambda ((g$T$14846$CSxK@) (if g$T$14846$CSxK@ (g$C$14845$CSxK@ '0) (eqv? (case-lambda ((g$T$14847$CSxK@) (if g$T$14847$CSxK@ (car (case-lambda ((g$V$14848$CSxK@) ((case-lambda ((g$C$14828$CSxK@ g$n$7272$CSxK@) ((case-lambda ((g$J$14830$CSxK@) (integer-valued? (case-lambda ((g$V$14831$CSxK@) (not (case-lambda ((g$T$14832$CSxK@) (if g$T$14832$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14830$CSxK@ 'gcd '"not an integer" g$n$7272$CSxK@) (void g$J$14830$CSxK@)))) g$V$14831$CSxK@))) g$n$7272$CSxK@))) (case-lambda (g$IGNORE$14829$CSxK@ (abs g$C$14828$CSxK@ g$n$7272$CSxK@)))))) g$C$14845$CSxK@ g$V$14848$CSxK@))) g$nums$7270$CSxK@) (eqv? (case-lambda ((g$T$14849$CSxK@) (if g$T$14849$CSxK@ (g$cadr$7047$CSxK@ (case-lambda ((g$V$14850$CSxK@) (car (case-lambda ((g$V$14851$CSxK@) ((case-lambda ((g$C$14833$CSxK@ g$a$7273$CSxK@ g$b$7274$CSxK@) ((case-lambda ((g$J$14842$CSxK@) (integer-valued? (case-lambda ((g$V$14843$CSxK@) (not (case-lambda ((g$T$14844$CSxK@) (if g$T$14844$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14842$CSxK@ 'gcd '"not an integer" g$a$7273$CSxK@) (void g$J$14842$CSxK@)))) g$V$14843$CSxK@))) g$a$7273$CSxK@))) (case-lambda (g$IGNORE$14834$CSxK@ ((case-lambda ((g$J$14839$CSxK@) (integer-valued? (case-lambda ((g$V$14840$CSxK@) (not (case-lambda ((g$T$14841$CSxK@) (if g$T$14841$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14839$CSxK@ 'gcd '"not an integer" g$b$7274$CSxK@) (void g$J$14839$CSxK@)))) g$V$14840$CSxK@))) g$b$7274$CSxK@))) (case-lambda (g$IGNORE$14835$CSxK@ (g$zero?$7076$CSxK@ (case-lambda ((g$T$14836$CSxK@) (if g$T$14836$CSxK@ (abs g$C$14833$CSxK@ g$a$7273$CSxK@) (g$mod$7031$CSxK@ (case-lambda ((g$V$14837$CSxK@) (g$gcd$7081$CSxK@ (case-lambda ((g$V$14838$CSxK@) (abs g$C$14833$CSxK@ g$V$14838$CSxK@))) g$b$7274$CSxK@ g$V$14837$CSxK@))) g$a$7273$CSxK@ g$b$7274$CSxK@)))) g$b$7274$CSxK@))))))))) g$C$14845$CSxK@ g$V$14851$CSxK@ g$V$14850$CSxK@))) g$nums$7270$CSxK@))) g$nums$7270$CSxK@) (cdr (case-lambda ((g$V$14852$CSxK@) (car (case-lambda ((g$V$14853$CSxK@) (abs (case-lambda ((g$V$14854$CSxK@) (g$fold-left$6716$CSxK@ g$C$14845$CSxK@ g$gcd$7081$CSxK@ g$V$14854$CSxK@ g$V$14852$CSxK@))) g$V$14853$CSxK@))) g$nums$7270$CSxK@))) g$nums$7270$CSxK@)))) g$t$7271$CSxK@ '2)))) g$t$7271$CSxK@ '1)))) g$t$7271$CSxK@ '0))) g$C$14855$CSxK@ g$V$14856$CSxK@))) g$nums$7270$CSxK@)))))) (library-letrec*-identity 'g$gcd$7081$CSxK@))) (g$lcm$7082$CSxK@ g$lcm$7428$CSxK@ ((case-lambda ((g$C$15202$CSxK@) (g$C$15202$CSxK@ (case-lambda ((g$C$14887$CSxK@ . g$nums$7275$CSxK@) (length (case-lambda ((g$V$14888$CSxK@) ((case-lambda ((g$C$14877$CSxK@ g$t$7276$CSxK@) (eqv? (case-lambda ((g$T$14878$CSxK@) (if g$T$14878$CSxK@ (g$C$14877$CSxK@ '1) (eqv? (case-lambda ((g$T$14879$CSxK@) (if g$T$14879$CSxK@ (car (case-lambda ((g$V$14880$CSxK@) ((case-lambda ((g$C$14857$CSxK@ g$n$7277$CSxK@) ((case-lambda ((g$J$14859$CSxK@) (integer-valued? (case-lambda ((g$V$14860$CSxK@) (not (case-lambda ((g$T$14861$CSxK@) (if g$T$14861$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14859$CSxK@ 'lcm '"not an integer" g$n$7277$CSxK@) (void g$J$14859$CSxK@)))) g$V$14860$CSxK@))) g$n$7277$CSxK@))) (case-lambda (g$IGNORE$14858$CSxK@ (abs g$C$14857$CSxK@ g$n$7277$CSxK@)))))) g$C$14877$CSxK@ g$V$14880$CSxK@))) g$nums$7275$CSxK@) (eqv? (case-lambda ((g$T$14881$CSxK@) (if g$T$14881$CSxK@ (g$cadr$7047$CSxK@ (case-lambda ((g$V$14882$CSxK@) (car (case-lambda ((g$V$14883$CSxK@) ((case-lambda ((g$C$14863$CSxK@ g$a$7278$CSxK@ g$b$7279$CSxK@) ((case-lambda ((g$J$14874$CSxK@) (integer-valued? (case-lambda ((g$V$14875$CSxK@) (not (case-lambda ((g$T$14876$CSxK@) (if g$T$14876$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14874$CSxK@ 'lcm '"not an integer" g$a$7278$CSxK@) (void g$J$14874$CSxK@)))) g$V$14875$CSxK@))) g$a$7278$CSxK@))) (case-lambda (g$IGNORE$14864$CSxK@ ((case-lambda ((g$J$14871$CSxK@) (integer-valued? (case-lambda ((g$V$14872$CSxK@) (not (case-lambda ((g$T$14873$CSxK@) (if g$T$14873$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14871$CSxK@ 'lcm '"not an integer" g$b$7279$CSxK@) (void g$J$14871$CSxK@)))) g$V$14872$CSxK@))) g$b$7279$CSxK@))) (case-lambda (g$IGNORE$14865$CSxK@ (g$zero?$7076$CSxK@ (case-lambda ((g$V$14866$CSxK@) ((case-lambda ((g$C$14862$CSxK@ g$t$7280$CSxK@) (if g$t$7280$CSxK@ (g$C$14862$CSxK@ g$t$7280$CSxK@) (g$zero?$7076$CSxK@ g$C$14862$CSxK@ g$b$7279$CSxK@)))) (case-lambda ((g$T$14867$CSxK@) (if g$T$14867$CSxK@ (g$C$14863$CSxK@ '0) (g$gcd$7081$CSxK@ (case-lambda ((g$V$14868$CSxK@) (/ (case-lambda ((g$V$14869$CSxK@) (* (case-lambda ((g$V$14870$CSxK@) (abs g$C$14863$CSxK@ g$V$14870$CSxK@))) g$V$14869$CSxK@ g$b$7279$CSxK@))) g$a$7278$CSxK@ g$V$14868$CSxK@))) g$a$7278$CSxK@ g$b$7279$CSxK@)))) g$V$14866$CSxK@))) g$a$7278$CSxK@))))))))) g$C$14877$CSxK@ g$V$14883$CSxK@ g$V$14882$CSxK@))) g$nums$7275$CSxK@))) g$nums$7275$CSxK@) (cdr (case-lambda ((g$V$14884$CSxK@) (car (case-lambda ((g$V$14885$CSxK@) (abs (case-lambda ((g$V$14886$CSxK@) (g$fold-left$6716$CSxK@ g$C$14877$CSxK@ g$lcm$7082$CSxK@ g$V$14886$CSxK@ g$V$14884$CSxK@))) g$V$14885$CSxK@))) g$nums$7275$CSxK@))) g$nums$7275$CSxK@)))) g$t$7276$CSxK@ '2)))) g$t$7276$CSxK@ '1)))) g$t$7276$CSxK@ '0))) g$C$14887$CSxK@ g$V$14888$CSxK@))) g$nums$7275$CSxK@)))))) (library-letrec*-identity 'g$lcm$7082$CSxK@))) (g$string=?$7120$CSxK@ g$string=?$7429$CSxK@ ((case-lambda ((g$C$15203$CSxK@) (g$C$15203$CSxK@ (case-lambda ((g$C$14897$CSxK@ g$a$7281$CSxK@ g$b$7282$CSxK@ . g$rest$7283$CSxK@) ((case-lambda ((g$J$14900$CSxK@) (string? (case-lambda ((g$V$14901$CSxK@) (not (case-lambda ((g$T$14902$CSxK@) (if g$T$14902$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14900$CSxK@ 'string=? '"not a string" g$a$7281$CSxK@) (void g$J$14900$CSxK@)))) g$V$14901$CSxK@))) g$a$7281$CSxK@))) (case-lambda (g$IGNORE$14898$CSxK@ (cons (case-lambda ((g$V$14899$CSxK@) (g$for-all$6711$CSxK@ g$C$14897$CSxK@ (case-lambda ((g$C$14890$CSxK@ g$x$7284$CSxK@) ((case-lambda ((g$J$14894$CSxK@) (string? (case-lambda ((g$V$14895$CSxK@) (not (case-lambda ((g$T$14896$CSxK@) (if g$T$14896$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14894$CSxK@ 'string=? '"not a string" g$x$7284$CSxK@) (void g$J$14894$CSxK@)))) g$V$14895$CSxK@))) g$x$7284$CSxK@))) (case-lambda (g$IGNORE$14891$CSxK@ (string-compare (case-lambda ((g$V$14892$CSxK@) (fx=? (case-lambda ((g$V$14893$CSxK@) ((case-lambda ((g$C$14889$CSxK@ g$r$7285$CSxK@) (begin (set! g$a$7281$CSxK@ g$x$7284$CSxK@) (g$C$14889$CSxK@ g$r$7285$CSxK@)))) g$C$14890$CSxK@ g$V$14893$CSxK@))) g$V$14892$CSxK@ '0))) g$a$7281$CSxK@ g$x$7284$CSxK@)))))) g$V$14899$CSxK@))) g$b$7282$CSxK@ g$rest$7283$CSxK@))))))))) (library-letrec*-identity 'g$string=?$7120$CSxK@))) (g$string<?$7121$CSxK@ g$string<?$7430$CSxK@ ((case-lambda ((g$C$15204$CSxK@) (g$C$15204$CSxK@ (case-lambda ((g$C$14911$CSxK@ g$a$7286$CSxK@ g$b$7287$CSxK@ . g$rest$7288$CSxK@) ((case-lambda ((g$J$14914$CSxK@) (string? (case-lambda ((g$V$14915$CSxK@) (not (case-lambda ((g$T$14916$CSxK@) (if g$T$14916$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14914$CSxK@ 'string<? '"not a string" g$a$7286$CSxK@) (void g$J$14914$CSxK@)))) g$V$14915$CSxK@))) g$a$7286$CSxK@))) (case-lambda (g$IGNORE$14912$CSxK@ (cons (case-lambda ((g$V$14913$CSxK@) (g$for-all$6711$CSxK@ g$C$14911$CSxK@ (case-lambda ((g$C$14904$CSxK@ g$x$7289$CSxK@) ((case-lambda ((g$J$14908$CSxK@) (string? (case-lambda ((g$V$14909$CSxK@) (not (case-lambda ((g$T$14910$CSxK@) (if g$T$14910$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14908$CSxK@ 'string<? '"not a string" g$x$7289$CSxK@) (void g$J$14908$CSxK@)))) g$V$14909$CSxK@))) g$x$7289$CSxK@))) (case-lambda (g$IGNORE$14905$CSxK@ (string-compare (case-lambda ((g$V$14906$CSxK@) (fx<? (case-lambda ((g$V$14907$CSxK@) ((case-lambda ((g$C$14903$CSxK@ g$r$7290$CSxK@) (begin (set! g$a$7286$CSxK@ g$x$7289$CSxK@) (g$C$14903$CSxK@ g$r$7290$CSxK@)))) g$C$14904$CSxK@ g$V$14907$CSxK@))) g$V$14906$CSxK@ '0))) g$a$7286$CSxK@ g$x$7289$CSxK@)))))) g$V$14913$CSxK@))) g$b$7287$CSxK@ g$rest$7288$CSxK@))))))))) (library-letrec*-identity 'g$string<?$7121$CSxK@))) (g$string>?$7122$CSxK@ g$string>?$7431$CSxK@ ((case-lambda ((g$C$15205$CSxK@) (g$C$15205$CSxK@ (case-lambda ((g$C$14925$CSxK@ g$a$7291$CSxK@ g$b$7292$CSxK@ . g$rest$7293$CSxK@) ((case-lambda ((g$J$14928$CSxK@) (string? (case-lambda ((g$V$14929$CSxK@) (not (case-lambda ((g$T$14930$CSxK@) (if g$T$14930$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14928$CSxK@ 'string>? '"not a string" g$a$7291$CSxK@) (void g$J$14928$CSxK@)))) g$V$14929$CSxK@))) g$a$7291$CSxK@))) (case-lambda (g$IGNORE$14926$CSxK@ (cons (case-lambda ((g$V$14927$CSxK@) (g$for-all$6711$CSxK@ g$C$14925$CSxK@ (case-lambda ((g$C$14918$CSxK@ g$x$7294$CSxK@) ((case-lambda ((g$J$14922$CSxK@) (string? (case-lambda ((g$V$14923$CSxK@) (not (case-lambda ((g$T$14924$CSxK@) (if g$T$14924$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14922$CSxK@ 'string>? '"not a string" g$x$7294$CSxK@) (void g$J$14922$CSxK@)))) g$V$14923$CSxK@))) g$x$7294$CSxK@))) (case-lambda (g$IGNORE$14919$CSxK@ (string-compare (case-lambda ((g$V$14920$CSxK@) (fx>? (case-lambda ((g$V$14921$CSxK@) ((case-lambda ((g$C$14917$CSxK@ g$r$7295$CSxK@) (begin (set! g$a$7291$CSxK@ g$x$7294$CSxK@) (g$C$14917$CSxK@ g$r$7295$CSxK@)))) g$C$14918$CSxK@ g$V$14921$CSxK@))) g$V$14920$CSxK@ '0))) g$a$7291$CSxK@ g$x$7294$CSxK@)))))) g$V$14927$CSxK@))) g$b$7292$CSxK@ g$rest$7293$CSxK@))))))))) (library-letrec*-identity 'g$string>?$7122$CSxK@))) (g$string<=?$7123$CSxK@ g$string<=?$7432$CSxK@ ((case-lambda ((g$C$15206$CSxK@) (g$C$15206$CSxK@ (case-lambda ((g$C$14939$CSxK@ g$a$7296$CSxK@ g$b$7297$CSxK@ . g$rest$7298$CSxK@) ((case-lambda ((g$J$14942$CSxK@) (string? (case-lambda ((g$V$14943$CSxK@) (not (case-lambda ((g$T$14944$CSxK@) (if g$T$14944$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14942$CSxK@ 'string<=? '"not a string" g$a$7296$CSxK@) (void g$J$14942$CSxK@)))) g$V$14943$CSxK@))) g$a$7296$CSxK@))) (case-lambda (g$IGNORE$14940$CSxK@ (cons (case-lambda ((g$V$14941$CSxK@) (g$for-all$6711$CSxK@ g$C$14939$CSxK@ (case-lambda ((g$C$14932$CSxK@ g$x$7299$CSxK@) ((case-lambda ((g$J$14936$CSxK@) (string? (case-lambda ((g$V$14937$CSxK@) (not (case-lambda ((g$T$14938$CSxK@) (if g$T$14938$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14936$CSxK@ 'string<=? '"not a string" g$x$7299$CSxK@) (void g$J$14936$CSxK@)))) g$V$14937$CSxK@))) g$x$7299$CSxK@))) (case-lambda (g$IGNORE$14933$CSxK@ (string-compare (case-lambda ((g$V$14934$CSxK@) (fx<=? (case-lambda ((g$V$14935$CSxK@) ((case-lambda ((g$C$14931$CSxK@ g$r$7300$CSxK@) (begin (set! g$a$7296$CSxK@ g$x$7299$CSxK@) (g$C$14931$CSxK@ g$r$7300$CSxK@)))) g$C$14932$CSxK@ g$V$14935$CSxK@))) g$V$14934$CSxK@ '0))) g$a$7296$CSxK@ g$x$7299$CSxK@)))))) g$V$14941$CSxK@))) g$b$7297$CSxK@ g$rest$7298$CSxK@))))))))) (library-letrec*-identity 'g$string<=?$7123$CSxK@))) (g$string>=?$7124$CSxK@ g$string>=?$7433$CSxK@ ((case-lambda ((g$C$15207$CSxK@) (g$C$15207$CSxK@ (case-lambda ((g$C$14953$CSxK@ g$a$7301$CSxK@ g$b$7302$CSxK@ . g$rest$7303$CSxK@) ((case-lambda ((g$J$14956$CSxK@) (string? (case-lambda ((g$V$14957$CSxK@) (not (case-lambda ((g$T$14958$CSxK@) (if g$T$14958$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14956$CSxK@ 'string>=? '"not a string" g$a$7301$CSxK@) (void g$J$14956$CSxK@)))) g$V$14957$CSxK@))) g$a$7301$CSxK@))) (case-lambda (g$IGNORE$14954$CSxK@ (cons (case-lambda ((g$V$14955$CSxK@) (g$for-all$6711$CSxK@ g$C$14953$CSxK@ (case-lambda ((g$C$14946$CSxK@ g$x$7304$CSxK@) ((case-lambda ((g$J$14950$CSxK@) (string? (case-lambda ((g$V$14951$CSxK@) (not (case-lambda ((g$T$14952$CSxK@) (if g$T$14952$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14950$CSxK@ 'string>=? '"not a string" g$x$7304$CSxK@) (void g$J$14950$CSxK@)))) g$V$14951$CSxK@))) g$x$7304$CSxK@))) (case-lambda (g$IGNORE$14947$CSxK@ (string-compare (case-lambda ((g$V$14948$CSxK@) (fx>=? (case-lambda ((g$V$14949$CSxK@) ((case-lambda ((g$C$14945$CSxK@ g$r$7305$CSxK@) (begin (set! g$a$7301$CSxK@ g$x$7304$CSxK@) (g$C$14945$CSxK@ g$r$7305$CSxK@)))) g$C$14946$CSxK@ g$V$14949$CSxK@))) g$V$14948$CSxK@ '0))) g$a$7301$CSxK@ g$x$7304$CSxK@)))))) g$V$14955$CSxK@))) g$b$7302$CSxK@ g$rest$7303$CSxK@))))))))) (library-letrec*-identity 'g$string>=?$7124$CSxK@))) (g$symbol=?$7125$CSxK@ g$symbol=?$7434$CSxK@ ((case-lambda ((g$C$15208$CSxK@) (g$C$15208$CSxK@ (case-lambda ((g$C$14964$CSxK@ g$a$7306$CSxK@ g$b$7307$CSxK@ . g$rest$7308$CSxK@) ((case-lambda ((g$J$14967$CSxK@) (g$symbol?$7038$CSxK@ (case-lambda ((g$V$14968$CSxK@) (not (case-lambda ((g$T$14969$CSxK@) (if g$T$14969$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14967$CSxK@ 'symbol=? '"not a symbol" g$a$7306$CSxK@) (void g$J$14967$CSxK@)))) g$V$14968$CSxK@))) g$a$7306$CSxK@))) (case-lambda (g$IGNORE$14965$CSxK@ (cons (case-lambda ((g$V$14966$CSxK@) (g$for-all$6711$CSxK@ g$C$14964$CSxK@ (case-lambda ((g$C$14959$CSxK@ g$x$7309$CSxK@) ((case-lambda ((g$J$14961$CSxK@) (g$symbol?$7038$CSxK@ (case-lambda ((g$V$14962$CSxK@) (not (case-lambda ((g$T$14963$CSxK@) (if g$T$14963$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14961$CSxK@ 'symbol=? '"not a symbol" g$x$7309$CSxK@) (void g$J$14961$CSxK@)))) g$V$14962$CSxK@))) g$x$7309$CSxK@))) (case-lambda (g$IGNORE$14960$CSxK@ (eq? g$C$14959$CSxK@ g$a$7306$CSxK@ g$x$7309$CSxK@)))))) g$V$14966$CSxK@))) g$b$7307$CSxK@ g$rest$7308$CSxK@))))))))) (library-letrec*-identity 'g$symbol=?$7125$CSxK@))) (g$boolean=?$7126$CSxK@ g$boolean=?$7435$CSxK@ ((case-lambda ((g$C$15209$CSxK@) (g$C$15209$CSxK@ (case-lambda ((g$C$14975$CSxK@ g$a$7310$CSxK@ g$b$7311$CSxK@ . g$rest$7312$CSxK@) ((case-lambda ((g$J$14978$CSxK@) (g$boolean?$7039$CSxK@ (case-lambda ((g$V$14979$CSxK@) (not (case-lambda ((g$T$14980$CSxK@) (if g$T$14980$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14978$CSxK@ 'boolean=? '"not a boolean" g$a$7310$CSxK@) (void g$J$14978$CSxK@)))) g$V$14979$CSxK@))) g$a$7310$CSxK@))) (case-lambda (g$IGNORE$14976$CSxK@ (cons (case-lambda ((g$V$14977$CSxK@) (g$for-all$6711$CSxK@ g$C$14975$CSxK@ (case-lambda ((g$C$14970$CSxK@ g$x$7313$CSxK@) ((case-lambda ((g$J$14972$CSxK@) (g$boolean?$7039$CSxK@ (case-lambda ((g$V$14973$CSxK@) (not (case-lambda ((g$T$14974$CSxK@) (if g$T$14974$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14972$CSxK@ 'boolean=? '"not a boolean" g$x$7313$CSxK@) (void g$J$14972$CSxK@)))) g$V$14973$CSxK@))) g$x$7313$CSxK@))) (case-lambda (g$IGNORE$14971$CSxK@ (eq? g$C$14970$CSxK@ g$a$7310$CSxK@ g$x$7313$CSxK@)))))) g$V$14977$CSxK@))) g$b$7311$CSxK@ g$rest$7312$CSxK@))))))))) (library-letrec*-identity 'g$boolean=?$7126$CSxK@))) (g$char=?$7164$CSxK@ g$char=?$7436$CSxK@ ((case-lambda ((g$C$15210$CSxK@) (g$C$15210$CSxK@ (case-lambda ((g$C$14990$CSxK@ g$a$7314$CSxK@ g$b$7315$CSxK@ . g$rest$7316$CSxK@) ((case-lambda ((g$J$14993$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$14994$CSxK@) (not (case-lambda ((g$T$14995$CSxK@) (if g$T$14995$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14993$CSxK@ 'char=? '"not a char" g$a$7314$CSxK@) (void g$J$14993$CSxK@)))) g$V$14994$CSxK@))) g$a$7314$CSxK@))) (case-lambda (g$IGNORE$14991$CSxK@ (cons (case-lambda ((g$V$14992$CSxK@) (g$for-all$6711$CSxK@ g$C$14990$CSxK@ (case-lambda ((g$C$14982$CSxK@ g$x$7317$CSxK@) ((case-lambda ((g$J$14987$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$14988$CSxK@) (not (case-lambda ((g$T$14989$CSxK@) (if g$T$14989$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$14987$CSxK@ 'char=? '"not a char" g$x$7317$CSxK@) (void g$J$14987$CSxK@)))) g$V$14988$CSxK@))) g$x$7317$CSxK@))) (case-lambda (g$IGNORE$14983$CSxK@ (char->integer (case-lambda ((g$V$14984$CSxK@) (char->integer (case-lambda ((g$V$14985$CSxK@) (fx=? (case-lambda ((g$V$14986$CSxK@) ((case-lambda ((g$C$14981$CSxK@ g$r$7318$CSxK@) (begin (set! g$a$7314$CSxK@ g$x$7317$CSxK@) (g$C$14981$CSxK@ g$r$7318$CSxK@)))) g$C$14982$CSxK@ g$V$14986$CSxK@))) g$V$14985$CSxK@ g$V$14984$CSxK@))) g$a$7314$CSxK@))) g$x$7317$CSxK@)))))) g$V$14992$CSxK@))) g$b$7315$CSxK@ g$rest$7316$CSxK@))))))))) (library-letrec*-identity 'g$char=?$7164$CSxK@))) (g$char<?$7165$CSxK@ g$char<?$7437$CSxK@ ((case-lambda ((g$C$15211$CSxK@) (g$C$15211$CSxK@ (case-lambda ((g$C$15005$CSxK@ g$a$7319$CSxK@ g$b$7320$CSxK@ . g$rest$7321$CSxK@) ((case-lambda ((g$J$15008$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15009$CSxK@) (not (case-lambda ((g$T$15010$CSxK@) (if g$T$15010$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15008$CSxK@ 'char<? '"not a char" g$a$7319$CSxK@) (void g$J$15008$CSxK@)))) g$V$15009$CSxK@))) g$a$7319$CSxK@))) (case-lambda (g$IGNORE$15006$CSxK@ (cons (case-lambda ((g$V$15007$CSxK@) (g$for-all$6711$CSxK@ g$C$15005$CSxK@ (case-lambda ((g$C$14997$CSxK@ g$x$7322$CSxK@) ((case-lambda ((g$J$15002$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15003$CSxK@) (not (case-lambda ((g$T$15004$CSxK@) (if g$T$15004$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15002$CSxK@ 'char<? '"not a char" g$x$7322$CSxK@) (void g$J$15002$CSxK@)))) g$V$15003$CSxK@))) g$x$7322$CSxK@))) (case-lambda (g$IGNORE$14998$CSxK@ (char->integer (case-lambda ((g$V$14999$CSxK@) (char->integer (case-lambda ((g$V$15000$CSxK@) (fx<? (case-lambda ((g$V$15001$CSxK@) ((case-lambda ((g$C$14996$CSxK@ g$r$7323$CSxK@) (begin (set! g$a$7319$CSxK@ g$x$7322$CSxK@) (g$C$14996$CSxK@ g$r$7323$CSxK@)))) g$C$14997$CSxK@ g$V$15001$CSxK@))) g$V$15000$CSxK@ g$V$14999$CSxK@))) g$a$7319$CSxK@))) g$x$7322$CSxK@)))))) g$V$15007$CSxK@))) g$b$7320$CSxK@ g$rest$7321$CSxK@))))))))) (library-letrec*-identity 'g$char<?$7165$CSxK@))) (g$char>?$7166$CSxK@ g$char>?$7438$CSxK@ ((case-lambda ((g$C$15212$CSxK@) (g$C$15212$CSxK@ (case-lambda ((g$C$15020$CSxK@ g$a$7324$CSxK@ g$b$7325$CSxK@ . g$rest$7326$CSxK@) ((case-lambda ((g$J$15023$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15024$CSxK@) (not (case-lambda ((g$T$15025$CSxK@) (if g$T$15025$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15023$CSxK@ 'char>? '"not a char" g$a$7324$CSxK@) (void g$J$15023$CSxK@)))) g$V$15024$CSxK@))) g$a$7324$CSxK@))) (case-lambda (g$IGNORE$15021$CSxK@ (cons (case-lambda ((g$V$15022$CSxK@) (g$for-all$6711$CSxK@ g$C$15020$CSxK@ (case-lambda ((g$C$15012$CSxK@ g$x$7327$CSxK@) ((case-lambda ((g$J$15017$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15018$CSxK@) (not (case-lambda ((g$T$15019$CSxK@) (if g$T$15019$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15017$CSxK@ 'char>? '"not a char" g$x$7327$CSxK@) (void g$J$15017$CSxK@)))) g$V$15018$CSxK@))) g$x$7327$CSxK@))) (case-lambda (g$IGNORE$15013$CSxK@ (char->integer (case-lambda ((g$V$15014$CSxK@) (char->integer (case-lambda ((g$V$15015$CSxK@) (fx>? (case-lambda ((g$V$15016$CSxK@) ((case-lambda ((g$C$15011$CSxK@ g$r$7328$CSxK@) (begin (set! g$a$7324$CSxK@ g$x$7327$CSxK@) (g$C$15011$CSxK@ g$r$7328$CSxK@)))) g$C$15012$CSxK@ g$V$15016$CSxK@))) g$V$15015$CSxK@ g$V$15014$CSxK@))) g$a$7324$CSxK@))) g$x$7327$CSxK@)))))) g$V$15022$CSxK@))) g$b$7325$CSxK@ g$rest$7326$CSxK@))))))))) (library-letrec*-identity 'g$char>?$7166$CSxK@))) (g$char<=?$7167$CSxK@ g$char<=?$7439$CSxK@ ((case-lambda ((g$C$15213$CSxK@) (g$C$15213$CSxK@ (case-lambda ((g$C$15035$CSxK@ g$a$7329$CSxK@ g$b$7330$CSxK@ . g$rest$7331$CSxK@) ((case-lambda ((g$J$15038$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15039$CSxK@) (not (case-lambda ((g$T$15040$CSxK@) (if g$T$15040$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15038$CSxK@ 'char<=? '"not a char" g$a$7329$CSxK@) (void g$J$15038$CSxK@)))) g$V$15039$CSxK@))) g$a$7329$CSxK@))) (case-lambda (g$IGNORE$15036$CSxK@ (cons (case-lambda ((g$V$15037$CSxK@) (g$for-all$6711$CSxK@ g$C$15035$CSxK@ (case-lambda ((g$C$15027$CSxK@ g$x$7332$CSxK@) ((case-lambda ((g$J$15032$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15033$CSxK@) (not (case-lambda ((g$T$15034$CSxK@) (if g$T$15034$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15032$CSxK@ 'char<=? '"not a char" g$x$7332$CSxK@) (void g$J$15032$CSxK@)))) g$V$15033$CSxK@))) g$x$7332$CSxK@))) (case-lambda (g$IGNORE$15028$CSxK@ (char->integer (case-lambda ((g$V$15029$CSxK@) (char->integer (case-lambda ((g$V$15030$CSxK@) (fx<=? (case-lambda ((g$V$15031$CSxK@) ((case-lambda ((g$C$15026$CSxK@ g$r$7333$CSxK@) (begin (set! g$a$7329$CSxK@ g$x$7332$CSxK@) (g$C$15026$CSxK@ g$r$7333$CSxK@)))) g$C$15027$CSxK@ g$V$15031$CSxK@))) g$V$15030$CSxK@ g$V$15029$CSxK@))) g$a$7329$CSxK@))) g$x$7332$CSxK@)))))) g$V$15037$CSxK@))) g$b$7330$CSxK@ g$rest$7331$CSxK@))))))))) (library-letrec*-identity 'g$char<=?$7167$CSxK@))) (g$char>=?$7168$CSxK@ g$char>=?$7440$CSxK@ ((case-lambda ((g$C$15214$CSxK@) (g$C$15214$CSxK@ (case-lambda ((g$C$15050$CSxK@ g$a$7334$CSxK@ g$b$7335$CSxK@ . g$rest$7336$CSxK@) ((case-lambda ((g$J$15053$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15054$CSxK@) (not (case-lambda ((g$T$15055$CSxK@) (if g$T$15055$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15053$CSxK@ 'char>=? '"not a char" g$a$7334$CSxK@) (void g$J$15053$CSxK@)))) g$V$15054$CSxK@))) g$a$7334$CSxK@))) (case-lambda (g$IGNORE$15051$CSxK@ (cons (case-lambda ((g$V$15052$CSxK@) (g$for-all$6711$CSxK@ g$C$15050$CSxK@ (case-lambda ((g$C$15042$CSxK@ g$x$7337$CSxK@) ((case-lambda ((g$J$15047$CSxK@) (g$char?$7035$CSxK@ (case-lambda ((g$V$15048$CSxK@) (not (case-lambda ((g$T$15049$CSxK@) (if g$T$15049$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15047$CSxK@ 'char>=? '"not a char" g$x$7337$CSxK@) (void g$J$15047$CSxK@)))) g$V$15048$CSxK@))) g$x$7337$CSxK@))) (case-lambda (g$IGNORE$15043$CSxK@ (char->integer (case-lambda ((g$V$15044$CSxK@) (char->integer (case-lambda ((g$V$15045$CSxK@) (fx>=? (case-lambda ((g$V$15046$CSxK@) ((case-lambda ((g$C$15041$CSxK@ g$r$7338$CSxK@) (begin (set! g$a$7334$CSxK@ g$x$7337$CSxK@) (g$C$15041$CSxK@ g$r$7338$CSxK@)))) g$C$15042$CSxK@ g$V$15046$CSxK@))) g$V$15045$CSxK@ g$V$15044$CSxK@))) g$a$7334$CSxK@))) g$x$7337$CSxK@)))))) g$V$15052$CSxK@))) g$b$7335$CSxK@ g$rest$7336$CSxK@))))))))) (library-letrec*-identity 'g$char>=?$7168$CSxK@))) (g$rationalize$7169$CSxK@ g$rationalize$7441$CSxK@ ((case-lambda ((g$C$15215$CSxK@) (g$C$15215$CSxK@ (case-lambda ((g$C$15060$CSxK@ g$x$7339$CSxK@ g$e$7340$CSxK@) ((case-lambda ((g$J$15064$CSxK@) (infinite? (case-lambda ((g$T$15065$CSxK@) (if g$T$15065$CSxK@ (infinite? g$J$15064$CSxK@ g$e$7340$CSxK@) (g$J$15064$CSxK@ '#f)))) g$x$7339$CSxK@))) (case-lambda ((g$T$15061$CSxK@) (if g$T$15061$CSxK@ (g$C$15060$CSxK@ '+nan.0) (g$find-ratio$7170$CSxK@ (case-lambda ((g$V$15062$CSxK@) (apply (case-lambda ((g$V$15063$CSxK@) ((case-lambda ((g$C$15056$CSxK@ g$r$7341$CSxK@) ((case-lambda ((g$J$15058$CSxK@) (exact? (case-lambda ((g$T$15059$CSxK@) (if g$T$15059$CSxK@ (exact? g$J$15058$CSxK@ g$e$7340$CSxK@) (g$J$15058$CSxK@ '#f)))) g$x$7339$CSxK@))) (case-lambda ((g$T$15057$CSxK@) (if g$T$15057$CSxK@ (g$C$15056$CSxK@ g$r$7341$CSxK@) (inexact g$C$15056$CSxK@ g$r$7341$CSxK@))))))) g$C$15060$CSxK@ g$V$15063$CSxK@))) / g$V$15062$CSxK@))) g$x$7339$CSxK@ g$e$7340$CSxK@)))))))))) (library-letrec*-identity 'g$rationalize$7169$CSxK@))) (g$find-ratio$7170$CSxK@ g$find-ratio$7442$CSxK@ ((case-lambda ((g$C$15216$CSxK@) (g$C$15216$CSxK@ (case-lambda ((g$C$15066$CSxK@ g$x$7342$CSxK@ g$e$7343$CSxK@) (+ (case-lambda ((g$V$15067$CSxK@) (- (case-lambda ((g$V$15068$CSxK@) (g$find-ratio-between$7171$CSxK@ g$C$15066$CSxK@ g$V$15068$CSxK@ g$V$15067$CSxK@))) g$x$7342$CSxK@ g$e$7343$CSxK@))) g$x$7342$CSxK@ g$e$7343$CSxK@)))))) (library-letrec*-identity 'g$find-ratio$7170$CSxK@))) (g$find-ratio-between$7171$CSxK@ g$find-ratio-between$7443$CSxK@ ((case-lambda ((g$C$15217$CSxK@) (g$C$15217$CSxK@ (case-lambda ((g$C$15101$CSxK@ g$x$7344$CSxK@ g$y$7345$CSxK@) ((case-lambda ((g$C$15093$CSxK@ g$sr$7346$CSxK@) (begin (set! g$sr$7346$CSxK@ (case-lambda ((g$C$15084$CSxK@ g$x$7348$CSxK@ g$y$7349$CSxK@) (floor (case-lambda ((g$V$15085$CSxK@) (exact (case-lambda ((g$V$15086$CSxK@) (floor (case-lambda ((g$V$15087$CSxK@) (exact (case-lambda ((g$V$15088$CSxK@) ((case-lambda ((g$C$15075$CSxK@ g$fx$7350$CSxK@ g$fy$7351$CSxK@) (>= (case-lambda ((g$T$15076$CSxK@) (if g$T$15076$CSxK@ (list g$C$15075$CSxK@ g$fx$7350$CSxK@ '1) (= (case-lambda ((g$T$15077$CSxK@) (if g$T$15077$CSxK@ (- (case-lambda ((g$V$15078$CSxK@) (/ (case-lambda ((g$V$15079$CSxK@) (- (case-lambda ((g$V$15080$CSxK@) (/ (case-lambda ((g$V$15081$CSxK@) (g$sr$7346$CSxK@ (case-lambda ((g$V$15082$CSxK@) ((case-lambda ((g$C$15069$CSxK@ g$rat$7352$CSxK@) (car (case-lambda ((g$V$15070$CSxK@) (car (case-lambda ((g$V$15071$CSxK@) (* (case-lambda ((g$V$15072$CSxK@) (g$cadr$7047$CSxK@ (case-lambda ((g$V$15073$CSxK@) (+ (case-lambda ((g$V$15074$CSxK@) (list g$C$15069$CSxK@ g$V$15074$CSxK@ g$V$15070$CSxK@))) g$V$15073$CSxK@ g$V$15072$CSxK@))) g$rat$7352$CSxK@))) g$fx$7350$CSxK@ g$V$15071$CSxK@))) g$rat$7352$CSxK@))) g$rat$7352$CSxK@))) g$C$15075$CSxK@ g$V$15082$CSxK@))) g$V$15081$CSxK@ g$V$15079$CSxK@))) g$V$15080$CSxK@))) g$y$7349$CSxK@ g$fy$7351$CSxK@))) g$V$15078$CSxK@))) g$x$7348$CSxK@ g$fx$7350$CSxK@) (+ (case-lambda ((g$V$15083$CSxK@) (list g$C$15075$CSxK@ g$V$15083$CSxK@ '1))) '1 g$fx$7350$CSxK@)))) g$fx$7350$CSxK@ g$fy$7351$CSxK@)))) g$fx$7350$CSxK@ g$x$7348$CSxK@))) g$C$15084$CSxK@ g$V$15088$CSxK@ g$V$15086$CSxK@))) g$V$15087$CSxK@))) g$x$7348$CSxK@))) g$V$15085$CSxK@))) g$y$7349$CSxK@)))) (< (case-lambda ((g$T$15094$CSxK@) (if g$T$15094$CSxK@ (g$find-ratio-between$7171$CSxK@ g$C$15093$CSxK@ g$y$7345$CSxK@ g$x$7344$CSxK@) (>= (case-lambda ((g$T$15095$CSxK@) (if g$T$15095$CSxK@ (list g$C$15093$CSxK@ g$x$7344$CSxK@ '1) (g$positive?$7074$CSxK@ (case-lambda ((g$T$15096$CSxK@) (if g$T$15096$CSxK@ (g$sr$7346$CSxK@ g$C$15093$CSxK@ g$x$7344$CSxK@ g$y$7345$CSxK@) (g$negative?$7075$CSxK@ (case-lambda ((g$T$15097$CSxK@) (if g$T$15097$CSxK@ (- (case-lambda ((g$V$15098$CSxK@) (- (case-lambda ((g$V$15099$CSxK@) (g$sr$7346$CSxK@ (case-lambda ((g$V$15100$CSxK@) ((case-lambda ((g$C$15089$CSxK@ g$rat$7347$CSxK@) (g$cadr$7047$CSxK@ (case-lambda ((g$V$15090$CSxK@) (car (case-lambda ((g$V$15091$CSxK@) (- (case-lambda ((g$V$15092$CSxK@) (list g$C$15089$CSxK@ g$V$15092$CSxK@ g$V$15090$CSxK@))) g$V$15091$CSxK@))) g$rat$7347$CSxK@))) g$rat$7347$CSxK@))) g$C$15093$CSxK@ g$V$15100$CSxK@))) g$V$15099$CSxK@ g$V$15098$CSxK@))) g$y$7345$CSxK@))) g$x$7344$CSxK@) (g$C$15093$CSxK@ '(0 1))))) g$y$7345$CSxK@)))) g$x$7344$CSxK@)))) g$x$7344$CSxK@ g$y$7345$CSxK@)))) g$y$7345$CSxK@ g$x$7344$CSxK@)))) g$C$15101$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$find-ratio-between$7171$CSxK@))) (g$vector-map$7172$CSxK@ g$vector-map$7444$CSxK@ ((case-lambda ((g$C$15218$CSxK@) (g$C$15218$CSxK@ (case-lambda ((g$C$15119$CSxK@ g$p$7353$CSxK@ g$vec1$7354$CSxK@ . g$vecs$7355$CSxK@) (vector-length (case-lambda ((g$V$15120$CSxK@) ((case-lambda ((g$C$15117$CSxK@ g$len$7356$CSxK@) (make-vector (case-lambda ((g$V$15118$CSxK@) ((case-lambda ((g$C$15116$CSxK@ g$res$7357$CSxK@) ((case-lambda ((g$C$15115$CSxK@ g$loop$7358$CSxK@) ((case-lambda ((g$C$15103$CSxK@ g$loop$15102$CSxK@) (begin (set! g$loop$7358$CSxK@ g$loop$15102$CSxK@) (g$loop$7358$CSxK@ g$C$15103$CSxK@ '0)))) g$C$15115$CSxK@ (case-lambda ((g$C$15108$CSxK@ g$i$7359$CSxK@) (fx=? (case-lambda ((g$T$15109$CSxK@) (if g$T$15109$CSxK@ ((case-lambda ((g$J$15111$CSxK@) (if '#f (g$J$15111$CSxK@ '#f) (void g$J$15111$CSxK@)))) (case-lambda (g$IGNORE$15110$CSxK@ (g$C$15108$CSxK@ g$res$7357$CSxK@)))) (call-with-values (case-lambda ((g$V$15112$CSxK@) (vector-set! (case-lambda (g$IGNORE$15113$CSxK@ (fx+ (case-lambda ((g$V$15114$CSxK@) (g$loop$7358$CSxK@ g$C$15108$CSxK@ g$V$15114$CSxK@))) g$i$7359$CSxK@ '1))) g$res$7357$CSxK@ g$i$7359$CSxK@ g$V$15112$CSxK@))) (case-lambda ((g$C$15105$CSxK@) (cons (case-lambda ((g$V$15106$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$15107$CSxK@) (apply g$C$15105$CSxK@ values g$V$15107$CSxK@))) (case-lambda ((g$C$15104$CSxK@ g$x$7360$CSxK@) (vector-ref g$C$15104$CSxK@ g$x$7360$CSxK@ g$i$7359$CSxK@))) g$V$15106$CSxK@))) g$vec1$7354$CSxK@ g$vecs$7355$CSxK@))) g$p$7353$CSxK@)))) g$i$7359$CSxK@ g$len$7356$CSxK@)))))) g$C$15116$CSxK@ uninitialized))) g$C$15117$CSxK@ g$V$15118$CSxK@))) g$len$7356$CSxK@))) g$C$15119$CSxK@ g$V$15120$CSxK@))) g$vec1$7354$CSxK@)))))) (library-letrec*-identity 'g$vector-map$7172$CSxK@))) (g$vector-for-each$7173$CSxK@ g$vector-for-each$7445$CSxK@ ((case-lambda ((g$C$15219$CSxK@) (g$C$15219$CSxK@ (case-lambda ((g$C$15133$CSxK@ g$p$7361$CSxK@ g$vec1$7362$CSxK@ . g$vecs$7363$CSxK@) (vector-length (case-lambda ((g$V$15134$CSxK@) ((case-lambda ((g$C$15132$CSxK@ g$len$7364$CSxK@) ((case-lambda ((g$C$15131$CSxK@ g$loop$7365$CSxK@) ((case-lambda ((g$C$15122$CSxK@ g$loop$15121$CSxK@) (begin (set! g$loop$7365$CSxK@ g$loop$15121$CSxK@) (g$loop$7365$CSxK@ g$C$15122$CSxK@ '0)))) g$C$15131$CSxK@ (case-lambda ((g$C$15127$CSxK@ g$i$7366$CSxK@) (fx=? (case-lambda ((g$T$15128$CSxK@) (if g$T$15128$CSxK@ (if '#f (g$C$15127$CSxK@ '#f) (void g$C$15127$CSxK@)) (call-with-values (case-lambda (g$IGNORE$15129$CSxK@ (fx+ (case-lambda ((g$V$15130$CSxK@) (g$loop$7365$CSxK@ g$C$15127$CSxK@ g$V$15130$CSxK@))) g$i$7366$CSxK@ '1))) (case-lambda ((g$C$15124$CSxK@) (cons (case-lambda ((g$V$15125$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$15126$CSxK@) (apply g$C$15124$CSxK@ values g$V$15126$CSxK@))) (case-lambda ((g$C$15123$CSxK@ g$x$7367$CSxK@) (vector-ref g$C$15123$CSxK@ g$x$7367$CSxK@ g$i$7366$CSxK@))) g$V$15125$CSxK@))) g$vec1$7362$CSxK@ g$vecs$7363$CSxK@))) g$p$7361$CSxK@)))) g$i$7366$CSxK@ g$len$7364$CSxK@)))))) g$C$15132$CSxK@ uninitialized))) g$C$15133$CSxK@ g$V$15134$CSxK@))) g$vec1$7362$CSxK@)))))) (library-letrec*-identity 'g$vector-for-each$7173$CSxK@))) (g$string-for-each$7174$CSxK@ g$string-for-each$7446$CSxK@ ((case-lambda ((g$C$15220$CSxK@) (g$C$15220$CSxK@ (case-lambda ((g$C$15147$CSxK@ g$p$7368$CSxK@ g$str1$7369$CSxK@ . g$strs$7370$CSxK@) (string-length (case-lambda ((g$V$15148$CSxK@) ((case-lambda ((g$C$15146$CSxK@ g$len$7371$CSxK@) ((case-lambda ((g$C$15145$CSxK@ g$loop$7372$CSxK@) ((case-lambda ((g$C$15136$CSxK@ g$loop$15135$CSxK@) (begin (set! g$loop$7372$CSxK@ g$loop$15135$CSxK@) (g$loop$7372$CSxK@ g$C$15136$CSxK@ '0)))) g$C$15145$CSxK@ (case-lambda ((g$C$15141$CSxK@ g$i$7373$CSxK@) (fx=? (case-lambda ((g$T$15142$CSxK@) (if g$T$15142$CSxK@ (if '#f (g$C$15141$CSxK@ '#f) (void g$C$15141$CSxK@)) (call-with-values (case-lambda (g$IGNORE$15143$CSxK@ (fx+ (case-lambda ((g$V$15144$CSxK@) (g$loop$7372$CSxK@ g$C$15141$CSxK@ g$V$15144$CSxK@))) g$i$7373$CSxK@ '1))) (case-lambda ((g$C$15138$CSxK@) (cons (case-lambda ((g$V$15139$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$15140$CSxK@) (apply g$C$15138$CSxK@ values g$V$15140$CSxK@))) (case-lambda ((g$C$15137$CSxK@ g$x$7374$CSxK@) (string-ref g$C$15137$CSxK@ g$x$7374$CSxK@ g$i$7373$CSxK@))) g$V$15139$CSxK@))) g$str1$7369$CSxK@ g$strs$7370$CSxK@))) g$p$7368$CSxK@)))) g$i$7373$CSxK@ g$len$7371$CSxK@)))))) g$C$15146$CSxK@ uninitialized))) g$C$15147$CSxK@ g$V$15148$CSxK@))) g$str1$7369$CSxK@)))))) (library-letrec*-identity 'g$string-for-each$7174$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme hashtables) ((g$using$7448$CSxK@ g$using$7481$CSxK@ ((case-lambda ((g$C$15237$CSxK@) (g$C$15237$CSxK@ (clr-using-internal 'system)))) (library-letrec*-identity 'g$using$7448$CSxK@))) (g$using$7450$CSxK@ g$using$7482$CSxK@ ((case-lambda ((g$C$15238$CSxK@) (g$C$15238$CSxK@ (clr-using-internal 'system.collections)))) (library-letrec*-identity 'g$using$7450$CSxK@))) (g$make-eq-hashtable$7451$CSxK@ g$make-eq-hashtable$7483$CSxK@ ((case-lambda ((g$C$15239$CSxK@) (g$C$15239$CSxK@ (case-lambda ((g$C$15221$CSxK@) (g$make-eq-hashtable$7451$CSxK@ g$C$15221$CSxK@ '32)) ((g$C$15221$CSxK@ g$k$7460$CSxK@) ((case-lambda ((g$V$15222$CSxK@) (g$C$15221$CSxK@ (clr-new-internal 'hashtable g$V$15222$CSxK@)))) (clr-cast-internal 'int32 g$k$7460$CSxK@))))))) (library-letrec*-identity 'g$make-eq-hashtable$7451$CSxK@))) (g$make-eqv-hashtable$7452$CSxK@ g$make-eqv-hashtable$7484$CSxK@ ((case-lambda ((g$C$15240$CSxK@) (g$C$15240$CSxK@ (case-lambda ((g$C$15223$CSxK@) (g$make-eqv-hashtable$7452$CSxK@ g$C$15223$CSxK@ '32)) ((g$C$15223$CSxK@ g$k$7461$CSxK@) (make-hashtable g$C$15223$CSxK@ eqv-hash eqv? g$k$7461$CSxK@)))))) (library-letrec*-identity 'g$make-eqv-hashtable$7452$CSxK@))) (g$hashtable-size$7453$CSxK@ g$hashtable-size$7485$CSxK@ ((case-lambda ((g$C$15241$CSxK@) (g$C$15241$CSxK@ (case-lambda ((g$C$15224$CSxK@ g$ht$7462$CSxK@) (g$C$15224$CSxK@ (clr-call-internal 'hashtable 'get_count g$ht$7462$CSxK@))))))) (library-letrec*-identity 'g$hashtable-size$7453$CSxK@))) (g$hashtable-ref$7454$CSxK@ g$hashtable-ref$7486$CSxK@ ((case-lambda ((g$C$15242$CSxK@) (g$C$15242$CSxK@ (case-lambda ((g$C$15229$CSxK@ g$ht$7463$CSxK@ g$key$7464$CSxK@ g$default$7465$CSxK@) ((case-lambda ((g$C$15225$CSxK@ g$r$7466$CSxK@) ((case-lambda ((g$V$15226$CSxK@) (begin (set! g$r$7466$CSxK@ g$V$15226$CSxK@) (null? (case-lambda ((g$V$15227$CSxK@) (not (case-lambda ((g$T$15228$CSxK@) (if g$T$15228$CSxK@ (g$C$15225$CSxK@ g$r$7466$CSxK@) (g$C$15225$CSxK@ g$default$7465$CSxK@)))) g$V$15227$CSxK@))) g$r$7466$CSxK@)))) (clr-call-internal 'hashtable 'get_item g$ht$7463$CSxK@ g$key$7464$CSxK@)))) g$C$15229$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$hashtable-ref$7454$CSxK@))) (g$hashtable-set!$7455$CSxK@ g$hashtable-set!$7487$CSxK@ ((case-lambda ((g$C$15243$CSxK@) (g$C$15243$CSxK@ (case-lambda ((g$C$15230$CSxK@ g$ht$7467$CSxK@ g$key$7468$CSxK@ g$obj$7469$CSxK@) (g$C$15230$CSxK@ (clr-call-internal 'hashtable 'set_item g$ht$7467$CSxK@ g$key$7468$CSxK@ g$obj$7469$CSxK@))))))) (library-letrec*-identity 'g$hashtable-set!$7455$CSxK@))) (g$hashtable-delete!$7456$CSxK@ g$hashtable-delete!$7488$CSxK@ ((case-lambda ((g$C$15244$CSxK@) (g$C$15244$CSxK@ (case-lambda ((g$C$15231$CSxK@ g$ht$7470$CSxK@ g$key$7471$CSxK@) (g$C$15231$CSxK@ (clr-call-internal 'hashtable 'remove g$ht$7470$CSxK@ g$key$7471$CSxK@))))))) (library-letrec*-identity 'g$hashtable-delete!$7456$CSxK@))) (g$hashtable-contains?$7457$CSxK@ g$hashtable-contains?$7489$CSxK@ ((case-lambda ((g$C$15245$CSxK@) (g$C$15245$CSxK@ (case-lambda ((g$C$15232$CSxK@ g$ht$7472$CSxK@ g$key$7473$CSxK@) (g$C$15232$CSxK@ (clr-call-internal 'hashtable 'containskey g$ht$7472$CSxK@ g$key$7473$CSxK@))))))) (library-letrec*-identity 'g$hashtable-contains?$7457$CSxK@))) (g$hashtable-update!$7458$CSxK@ g$hashtable-update!$7490$CSxK@ ((case-lambda ((g$C$15246$CSxK@) (g$C$15246$CSxK@ (case-lambda ((g$C$15233$CSxK@ g$ht$7474$CSxK@ g$key$7475$CSxK@ g$proc$7476$CSxK@ g$default$7477$CSxK@) (g$hashtable-ref$7454$CSxK@ (case-lambda ((g$V$15234$CSxK@) (g$proc$7476$CSxK@ (case-lambda ((g$V$15235$CSxK@) (g$hashtable-set!$7455$CSxK@ g$C$15233$CSxK@ g$ht$7474$CSxK@ g$key$7475$CSxK@ g$V$15235$CSxK@))) g$V$15234$CSxK@))) g$ht$7474$CSxK@ g$key$7475$CSxK@ g$default$7477$CSxK@)))))) (library-letrec*-identity 'g$hashtable-update!$7458$CSxK@))) (g$hashtable-clear!$7459$CSxK@ g$hashtable-clear!$7491$CSxK@ ((case-lambda ((g$C$15247$CSxK@) (g$C$15247$CSxK@ (case-lambda ((g$C$15236$CSxK@ g$ht$7478$CSxK@) (g$hashtable-clear!$7459$CSxK@ g$C$15236$CSxK@ g$ht$7478$CSxK@ '32)) ((g$C$15236$CSxK@ g$ht$7479$CSxK@ g$k$7480$CSxK@) (g$C$15236$CSxK@ (clr-call-internal 'hashtable 'clear g$ht$7479$CSxK@))))))) (library-letrec*-identity 'g$hashtable-clear!$7459$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme files) ((g$using$7493$CSxK@ g$using$7500$CSxK@ ((case-lambda ((g$C$15251$CSxK@) (g$C$15251$CSxK@ (clr-using-internal 'system.io)))) (library-letrec*-identity 'g$using$7493$CSxK@))) (g$file-exists?$7494$CSxK@ g$file-exists?$7501$CSxK@ ((case-lambda ((g$C$15252$CSxK@) (g$C$15252$CSxK@ (case-lambda ((g$C$15248$CSxK@ g$fn$7497$CSxK@) (g$C$15248$CSxK@ (clr-call-internal 'file 'exists '() g$fn$7497$CSxK@))))))) (library-letrec*-identity 'g$file-exists?$7494$CSxK@))) (g$delete-file$7495$CSxK@ g$delete-file$7502$CSxK@ ((case-lambda ((g$C$15253$CSxK@) (g$C$15253$CSxK@ (case-lambda ((g$C$15249$CSxK@ g$fn$7498$CSxK@) (g$C$15249$CSxK@ (clr-call-internal 'file 'delete '() g$fn$7498$CSxK@))))))) (library-letrec*-identity 'g$delete-file$7495$CSxK@))) (g$get-directory-name$7496$CSxK@ g$get-directory-name$7503$CSxK@ ((case-lambda ((g$C$15254$CSxK@) (g$C$15254$CSxK@ (case-lambda ((g$C$15250$CSxK@ g$path$7499$CSxK@) (g$C$15250$CSxK@ (clr-call-internal 'path 'getdirectoryname '() g$path$7499$CSxK@))))))) (library-letrec*-identity 'g$get-directory-name$7496$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme bytevectors) ((g$native-endianness$7504$CSxK@ g$native-endianness$7615$CSxK@ ((case-lambda ((g$C$15312$CSxK@) (g$C$15312$CSxK@ (case-lambda ((g$C$15255$CSxK@) (g$C$15255$CSxK@ 'little)))))) (library-letrec*-identity 'g$native-endianness$7504$CSxK@))) (g$bytevector-u16-ref$7505$CSxK@ g$bytevector-u16-ref$7616$CSxK@ ((case-lambda ((g$C$15313$CSxK@) (g$C$15313$CSxK@ (case-lambda ((g$C$15256$CSxK@ g$bytevector$7533$CSxK@ g$k$7534$CSxK@ g$endianness$7535$CSxK@) (bytevector-uint-ref g$C$15256$CSxK@ g$bytevector$7533$CSxK@ g$k$7534$CSxK@ g$endianness$7535$CSxK@ '2)))))) (library-letrec*-identity 'g$bytevector-u16-ref$7505$CSxK@))) (g$bytevector-s16-ref$7506$CSxK@ g$bytevector-s16-ref$7617$CSxK@ ((case-lambda ((g$C$15314$CSxK@) (g$C$15314$CSxK@ (case-lambda ((g$C$15257$CSxK@ g$bytevector$7536$CSxK@ g$k$7537$CSxK@ g$endianness$7538$CSxK@) (bytevector-sint-ref g$C$15257$CSxK@ g$bytevector$7536$CSxK@ g$k$7537$CSxK@ g$endianness$7538$CSxK@ '2)))))) (library-letrec*-identity 'g$bytevector-s16-ref$7506$CSxK@))) (g$bytevector-u16-native-ref$7507$CSxK@ g$bytevector-u16-native-ref$7618$CSxK@ ((case-lambda ((g$C$15315$CSxK@) (g$C$15315$CSxK@ (case-lambda ((g$C$15258$CSxK@ g$bytevector$7539$CSxK@ g$k$7540$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15259$CSxK@) (bytevector-uint-ref g$C$15258$CSxK@ g$bytevector$7539$CSxK@ g$k$7540$CSxK@ g$V$15259$CSxK@ '2))))))))) (library-letrec*-identity 'g$bytevector-u16-native-ref$7507$CSxK@))) (g$bytevector-s16-native-ref$7508$CSxK@ g$bytevector-s16-native-ref$7619$CSxK@ ((case-lambda ((g$C$15316$CSxK@) (g$C$15316$CSxK@ (case-lambda ((g$C$15260$CSxK@ g$bytevector$7541$CSxK@ g$k$7542$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15261$CSxK@) (bytevector-sint-ref g$C$15260$CSxK@ g$bytevector$7541$CSxK@ g$k$7542$CSxK@ g$V$15261$CSxK@ '2))))))))) (library-letrec*-identity 'g$bytevector-s16-native-ref$7508$CSxK@))) (g$bytevector-u16-set!$7509$CSxK@ g$bytevector-u16-set!$7620$CSxK@ ((case-lambda ((g$C$15317$CSxK@) (g$C$15317$CSxK@ (case-lambda ((g$C$15262$CSxK@ g$bytevector$7543$CSxK@ g$k$7544$CSxK@ g$n$7545$CSxK@ g$endianness$7546$CSxK@) (bytevector-uint-set! g$C$15262$CSxK@ g$bytevector$7543$CSxK@ g$k$7544$CSxK@ g$n$7545$CSxK@ g$endianness$7546$CSxK@ '2)))))) (library-letrec*-identity 'g$bytevector-u16-set!$7509$CSxK@))) (g$bytevector-s16-set!$7510$CSxK@ g$bytevector-s16-set!$7621$CSxK@ ((case-lambda ((g$C$15318$CSxK@) (g$C$15318$CSxK@ (case-lambda ((g$C$15263$CSxK@ g$bytevector$7547$CSxK@ g$k$7548$CSxK@ g$n$7549$CSxK@ g$endianness$7550$CSxK@) (bytevector-sint-set! g$C$15263$CSxK@ g$bytevector$7547$CSxK@ g$k$7548$CSxK@ g$n$7549$CSxK@ g$endianness$7550$CSxK@ '2)))))) (library-letrec*-identity 'g$bytevector-s16-set!$7510$CSxK@))) (g$bytevector-u16-native-set!$7511$CSxK@ g$bytevector-u16-native-set!$7622$CSxK@ ((case-lambda ((g$C$15319$CSxK@) (g$C$15319$CSxK@ (case-lambda ((g$C$15264$CSxK@ g$bytevector$7551$CSxK@ g$k$7552$CSxK@ g$n$7553$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15265$CSxK@) (bytevector-uint-set! g$C$15264$CSxK@ g$bytevector$7551$CSxK@ g$k$7552$CSxK@ g$n$7553$CSxK@ g$V$15265$CSxK@ '2))))))))) (library-letrec*-identity 'g$bytevector-u16-native-set!$7511$CSxK@))) (g$bytevector-s16-native-set!$7512$CSxK@ g$bytevector-s16-native-set!$7623$CSxK@ ((case-lambda ((g$C$15320$CSxK@) (g$C$15320$CSxK@ (case-lambda ((g$C$15266$CSxK@ g$bytevector$7554$CSxK@ g$k$7555$CSxK@ g$n$7556$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15267$CSxK@) (bytevector-sint-set! g$C$15266$CSxK@ g$bytevector$7554$CSxK@ g$k$7555$CSxK@ g$n$7556$CSxK@ g$V$15267$CSxK@ '2))))))))) (library-letrec*-identity 'g$bytevector-s16-native-set!$7512$CSxK@))) (g$bytevector-u32-ref$7513$CSxK@ g$bytevector-u32-ref$7624$CSxK@ ((case-lambda ((g$C$15321$CSxK@) (g$C$15321$CSxK@ (case-lambda ((g$C$15268$CSxK@ g$bytevector$7557$CSxK@ g$k$7558$CSxK@ g$endianness$7559$CSxK@) (bytevector-uint-ref g$C$15268$CSxK@ g$bytevector$7557$CSxK@ g$k$7558$CSxK@ g$endianness$7559$CSxK@ '4)))))) (library-letrec*-identity 'g$bytevector-u32-ref$7513$CSxK@))) (g$bytevector-s32-ref$7514$CSxK@ g$bytevector-s32-ref$7625$CSxK@ ((case-lambda ((g$C$15322$CSxK@) (g$C$15322$CSxK@ (case-lambda ((g$C$15269$CSxK@ g$bytevector$7560$CSxK@ g$k$7561$CSxK@ g$endianness$7562$CSxK@) (bytevector-sint-ref g$C$15269$CSxK@ g$bytevector$7560$CSxK@ g$k$7561$CSxK@ g$endianness$7562$CSxK@ '4)))))) (library-letrec*-identity 'g$bytevector-s32-ref$7514$CSxK@))) (g$bytevector-u32-native-ref$7515$CSxK@ g$bytevector-u32-native-ref$7626$CSxK@ ((case-lambda ((g$C$15323$CSxK@) (g$C$15323$CSxK@ (case-lambda ((g$C$15270$CSxK@ g$bytevector$7563$CSxK@ g$k$7564$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15271$CSxK@) (bytevector-uint-ref g$C$15270$CSxK@ g$bytevector$7563$CSxK@ g$k$7564$CSxK@ g$V$15271$CSxK@ '4))))))))) (library-letrec*-identity 'g$bytevector-u32-native-ref$7515$CSxK@))) (g$bytevector-s32-native-ref$7516$CSxK@ g$bytevector-s32-native-ref$7627$CSxK@ ((case-lambda ((g$C$15324$CSxK@) (g$C$15324$CSxK@ (case-lambda ((g$C$15272$CSxK@ g$bytevector$7565$CSxK@ g$k$7566$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15273$CSxK@) (bytevector-sint-ref g$C$15272$CSxK@ g$bytevector$7565$CSxK@ g$k$7566$CSxK@ g$V$15273$CSxK@ '4))))))))) (library-letrec*-identity 'g$bytevector-s32-native-ref$7516$CSxK@))) (g$bytevector-u32-set!$7517$CSxK@ g$bytevector-u32-set!$7628$CSxK@ ((case-lambda ((g$C$15325$CSxK@) (g$C$15325$CSxK@ (case-lambda ((g$C$15274$CSxK@ g$bytevector$7567$CSxK@ g$k$7568$CSxK@ g$n$7569$CSxK@ g$endianness$7570$CSxK@) (bytevector-uint-set! g$C$15274$CSxK@ g$bytevector$7567$CSxK@ g$k$7568$CSxK@ g$n$7569$CSxK@ g$endianness$7570$CSxK@ '4)))))) (library-letrec*-identity 'g$bytevector-u32-set!$7517$CSxK@))) (g$bytevector-s32-set!$7518$CSxK@ g$bytevector-s32-set!$7629$CSxK@ ((case-lambda ((g$C$15326$CSxK@) (g$C$15326$CSxK@ (case-lambda ((g$C$15275$CSxK@ g$bytevector$7571$CSxK@ g$k$7572$CSxK@ g$n$7573$CSxK@ g$endianness$7574$CSxK@) (bytevector-sint-set! g$C$15275$CSxK@ g$bytevector$7571$CSxK@ g$k$7572$CSxK@ g$n$7573$CSxK@ g$endianness$7574$CSxK@ '4)))))) (library-letrec*-identity 'g$bytevector-s32-set!$7518$CSxK@))) (g$bytevector-u32-native-set!$7519$CSxK@ g$bytevector-u32-native-set!$7630$CSxK@ ((case-lambda ((g$C$15327$CSxK@) (g$C$15327$CSxK@ (case-lambda ((g$C$15276$CSxK@ g$bytevector$7575$CSxK@ g$k$7576$CSxK@ g$n$7577$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15277$CSxK@) (bytevector-uint-set! g$C$15276$CSxK@ g$bytevector$7575$CSxK@ g$k$7576$CSxK@ g$n$7577$CSxK@ g$V$15277$CSxK@ '4))))))))) (library-letrec*-identity 'g$bytevector-u32-native-set!$7519$CSxK@))) (g$bytevector-s32-native-set!$7520$CSxK@ g$bytevector-s32-native-set!$7631$CSxK@ ((case-lambda ((g$C$15328$CSxK@) (g$C$15328$CSxK@ (case-lambda ((g$C$15278$CSxK@ g$bytevector$7578$CSxK@ g$k$7579$CSxK@ g$n$7580$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15279$CSxK@) (bytevector-sint-set! g$C$15278$CSxK@ g$bytevector$7578$CSxK@ g$k$7579$CSxK@ g$n$7580$CSxK@ g$V$15279$CSxK@ '4))))))))) (library-letrec*-identity 'g$bytevector-s32-native-set!$7520$CSxK@))) (g$bytevector-u64-ref$7521$CSxK@ g$bytevector-u64-ref$7632$CSxK@ ((case-lambda ((g$C$15329$CSxK@) (g$C$15329$CSxK@ (case-lambda ((g$C$15280$CSxK@ g$bytevector$7581$CSxK@ g$k$7582$CSxK@ g$endianness$7583$CSxK@) (bytevector-uint-ref g$C$15280$CSxK@ g$bytevector$7581$CSxK@ g$k$7582$CSxK@ g$endianness$7583$CSxK@ '8)))))) (library-letrec*-identity 'g$bytevector-u64-ref$7521$CSxK@))) (g$bytevector-s64-ref$7522$CSxK@ g$bytevector-s64-ref$7633$CSxK@ ((case-lambda ((g$C$15330$CSxK@) (g$C$15330$CSxK@ (case-lambda ((g$C$15281$CSxK@ g$bytevector$7584$CSxK@ g$k$7585$CSxK@ g$endianness$7586$CSxK@) (bytevector-sint-ref g$C$15281$CSxK@ g$bytevector$7584$CSxK@ g$k$7585$CSxK@ g$endianness$7586$CSxK@ '8)))))) (library-letrec*-identity 'g$bytevector-s64-ref$7522$CSxK@))) (g$bytevector-u64-native-ref$7523$CSxK@ g$bytevector-u64-native-ref$7634$CSxK@ ((case-lambda ((g$C$15331$CSxK@) (g$C$15331$CSxK@ (case-lambda ((g$C$15282$CSxK@ g$bytevector$7587$CSxK@ g$k$7588$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15283$CSxK@) (bytevector-uint-ref g$C$15282$CSxK@ g$bytevector$7587$CSxK@ g$k$7588$CSxK@ g$V$15283$CSxK@ '8))))))))) (library-letrec*-identity 'g$bytevector-u64-native-ref$7523$CSxK@))) (g$bytevector-s64-native-ref$7524$CSxK@ g$bytevector-s64-native-ref$7635$CSxK@ ((case-lambda ((g$C$15332$CSxK@) (g$C$15332$CSxK@ (case-lambda ((g$C$15284$CSxK@ g$bytevector$7589$CSxK@ g$k$7590$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15285$CSxK@) (bytevector-sint-ref g$C$15284$CSxK@ g$bytevector$7589$CSxK@ g$k$7590$CSxK@ g$V$15285$CSxK@ '8))))))))) (library-letrec*-identity 'g$bytevector-s64-native-ref$7524$CSxK@))) (g$bytevector-u64-set!$7525$CSxK@ g$bytevector-u64-set!$7636$CSxK@ ((case-lambda ((g$C$15333$CSxK@) (g$C$15333$CSxK@ (case-lambda ((g$C$15286$CSxK@ g$bytevector$7591$CSxK@ g$k$7592$CSxK@ g$n$7593$CSxK@ g$endianness$7594$CSxK@) (bytevector-uint-set! g$C$15286$CSxK@ g$bytevector$7591$CSxK@ g$k$7592$CSxK@ g$n$7593$CSxK@ g$endianness$7594$CSxK@ '8)))))) (library-letrec*-identity 'g$bytevector-u64-set!$7525$CSxK@))) (g$bytevector-s64-set!$7526$CSxK@ g$bytevector-s64-set!$7637$CSxK@ ((case-lambda ((g$C$15334$CSxK@) (g$C$15334$CSxK@ (case-lambda ((g$C$15287$CSxK@ g$bytevector$7595$CSxK@ g$k$7596$CSxK@ g$n$7597$CSxK@ g$endianness$7598$CSxK@) (bytevector-sint-set! g$C$15287$CSxK@ g$bytevector$7595$CSxK@ g$k$7596$CSxK@ g$n$7597$CSxK@ g$endianness$7598$CSxK@ '8)))))) (library-letrec*-identity 'g$bytevector-s64-set!$7526$CSxK@))) (g$bytevector-u64-native-set!$7527$CSxK@ g$bytevector-u64-native-set!$7638$CSxK@ ((case-lambda ((g$C$15335$CSxK@) (g$C$15335$CSxK@ (case-lambda ((g$C$15288$CSxK@ g$bytevector$7599$CSxK@ g$k$7600$CSxK@ g$n$7601$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15289$CSxK@) (bytevector-uint-set! g$C$15288$CSxK@ g$bytevector$7599$CSxK@ g$k$7600$CSxK@ g$n$7601$CSxK@ g$V$15289$CSxK@ '8))))))))) (library-letrec*-identity 'g$bytevector-u64-native-set!$7527$CSxK@))) (g$bytevector-s64-native-set!$7528$CSxK@ g$bytevector-s64-native-set!$7639$CSxK@ ((case-lambda ((g$C$15336$CSxK@) (g$C$15336$CSxK@ (case-lambda ((g$C$15290$CSxK@ g$bytevector$7602$CSxK@ g$k$7603$CSxK@ g$n$7604$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15291$CSxK@) (bytevector-sint-set! g$C$15290$CSxK@ g$bytevector$7602$CSxK@ g$k$7603$CSxK@ g$n$7604$CSxK@ g$V$15291$CSxK@ '8))))))))) (library-letrec*-identity 'g$bytevector-s64-native-set!$7528$CSxK@))) (g$bytevector-ieee-single-native-ref$7529$CSxK@ g$bytevector-ieee-single-native-ref$7640$CSxK@ ((case-lambda ((g$C$15337$CSxK@) (g$C$15337$CSxK@ (case-lambda ((g$C$15292$CSxK@ g$bytevector$7605$CSxK@ g$k$7606$CSxK@) (g$mod$7377$CSxK@ (case-lambda ((g$V$15293$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$V$15294$CSxK@) (not (case-lambda ((g$T$15295$CSxK@) (if g$T$15295$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$15292$CSxK@ 'bytevector-ieee-single-native-ref '"must be multiple of 4" g$k$7606$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15296$CSxK@) (bytevector-ieee-single-ref g$C$15292$CSxK@ g$bytevector$7605$CSxK@ g$k$7606$CSxK@ g$V$15296$CSxK@))))))) g$V$15294$CSxK@))) g$V$15293$CSxK@))) g$k$7606$CSxK@ '4)))))) (library-letrec*-identity 'g$bytevector-ieee-single-native-ref$7529$CSxK@))) (g$bytevector-ieee-double-native-ref$7530$CSxK@ g$bytevector-ieee-double-native-ref$7641$CSxK@ ((case-lambda ((g$C$15338$CSxK@) (g$C$15338$CSxK@ (case-lambda ((g$C$15297$CSxK@ g$bytevector$7607$CSxK@ g$k$7608$CSxK@) (g$mod$7377$CSxK@ (case-lambda ((g$V$15298$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$V$15299$CSxK@) (not (case-lambda ((g$T$15300$CSxK@) (if g$T$15300$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$15297$CSxK@ 'bytevector-ieee-double-native-ref '"must be multiple of 8" g$k$7608$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15301$CSxK@) (bytevector-ieee-double-ref g$C$15297$CSxK@ g$bytevector$7607$CSxK@ g$k$7608$CSxK@ g$V$15301$CSxK@))))))) g$V$15299$CSxK@))) g$V$15298$CSxK@))) g$k$7608$CSxK@ '8)))))) (library-letrec*-identity 'g$bytevector-ieee-double-native-ref$7530$CSxK@))) (g$bytevector-ieee-single-native-set!$7531$CSxK@ g$bytevector-ieee-single-native-set!$7642$CSxK@ ((case-lambda ((g$C$15339$CSxK@) (g$C$15339$CSxK@ (case-lambda ((g$C$15302$CSxK@ g$bytevector$7609$CSxK@ g$k$7610$CSxK@ g$x$7611$CSxK@) (g$mod$7377$CSxK@ (case-lambda ((g$V$15303$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$V$15304$CSxK@) (not (case-lambda ((g$T$15305$CSxK@) (if g$T$15305$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$15302$CSxK@ 'bytevector-ieee-single-native-set! '"must be multiple of 4" g$k$7610$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15306$CSxK@) (bytevector-ieee-single-set! g$C$15302$CSxK@ g$bytevector$7609$CSxK@ g$k$7610$CSxK@ g$x$7611$CSxK@ g$V$15306$CSxK@))))))) g$V$15304$CSxK@))) g$V$15303$CSxK@))) g$k$7610$CSxK@ '4)))))) (library-letrec*-identity 'g$bytevector-ieee-single-native-set!$7531$CSxK@))) (g$bytevector-ieee-double-native-set!$7532$CSxK@ g$bytevector-ieee-double-native-set!$7643$CSxK@ ((case-lambda ((g$C$15340$CSxK@) (g$C$15340$CSxK@ (case-lambda ((g$C$15307$CSxK@ g$bytevector$7612$CSxK@ g$k$7613$CSxK@ g$x$7614$CSxK@) (g$mod$7377$CSxK@ (case-lambda ((g$V$15308$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$V$15309$CSxK@) (not (case-lambda ((g$T$15310$CSxK@) (if g$T$15310$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$15307$CSxK@ 'bytevector-ieee-double-native-set! '"must be multiple of 8" g$k$7613$CSxK@) (g$native-endianness$7504$CSxK@ (case-lambda ((g$V$15311$CSxK@) (bytevector-ieee-double-set! g$C$15307$CSxK@ g$bytevector$7612$CSxK@ g$k$7613$CSxK@ g$x$7614$CSxK@ g$V$15311$CSxK@))))))) g$V$15309$CSxK@))) g$V$15308$CSxK@))) g$k$7613$CSxK@ '8)))))) (library-letrec*-identity 'g$bytevector-ieee-double-native-set!$7532$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme control) () (void identity-for-cps))(library-letrec* (ironscheme eval) () (void identity-for-cps))(library-letrec* (ironscheme exceptions) ((g$*current-exception-handlers*$7644$CSxK@ g$*current-exception-handlers*$7667$CSxK@ ((case-lambda ((g$C$15379$CSxK@) (list g$C$15379$CSxK@ (case-lambda ((g$C$15341$CSxK@ g$condition$7651$CSxK@) (display (case-lambda (g$IGNORE$15342$CSxK@ (display (case-lambda (g$IGNORE$15343$CSxK@ (g$newline$8911$CSxK@ (case-lambda (g$IGNORE$15344$CSxK@ (exit g$C$15341$CSxK@ '-1)))))) g$condition$7651$CSxK@))) '"Unhandled exception:\n")))))) (library-letrec*-identity 'g$*current-exception-handlers*$7644$CSxK@))) (g$with-exception-handler$7645$CSxK@ g$with-exception-handler$7668$CSxK@ ((case-lambda ((g$C$15380$CSxK@) (g$C$15380$CSxK@ (case-lambda ((g$C$15345$CSxK@ g$handler$7652$CSxK@ g$thunk$7653$CSxK@) (cons (case-lambda ((g$V$15346$CSxK@) (g$with-exception-handlers$7646$CSxK@ g$C$15345$CSxK@ g$V$15346$CSxK@ g$thunk$7653$CSxK@))) g$handler$7652$CSxK@ g$*current-exception-handlers*$7644$CSxK@)))))) (library-letrec*-identity 'g$with-exception-handler$7645$CSxK@))) (g$with-exception-handlers$7646$CSxK@ g$with-exception-handlers$7669$CSxK@ ((case-lambda ((g$C$15381$CSxK@) (g$C$15381$CSxK@ (case-lambda ((g$C$15350$CSxK@ g$new-handlers$7654$CSxK@ g$thunk$7655$CSxK@) ((case-lambda ((g$C$15349$CSxK@ g$previous-handlers$7656$CSxK@) (dynamic-wind g$C$15349$CSxK@ (case-lambda ((g$C$15347$CSxK@) (begin (set! g$*current-exception-handlers*$7644$CSxK@ g$new-handlers$7654$CSxK@) (g$C$15347$CSxK@ (cps-void))))) g$thunk$7655$CSxK@ (case-lambda ((g$C$15348$CSxK@) (begin (set! g$*current-exception-handlers*$7644$CSxK@ g$previous-handlers$7656$CSxK@) (g$C$15348$CSxK@ (cps-void)))))))) g$C$15350$CSxK@ g$*current-exception-handlers*$7644$CSxK@)))))) (library-letrec*-identity 'g$with-exception-handlers$7646$CSxK@))) (g$raise$7647$CSxK@ g$raise$7670$CSxK@ ((case-lambda ((g$C$15382$CSxK@) (g$C$15382$CSxK@ (case-lambda ((g$C$15359$CSxK@ g$obj$7657$CSxK@) ((case-lambda ((g$C$15357$CSxK@ g$handlers$7658$CSxK@) (cdr (case-lambda ((g$V$15358$CSxK@) (g$with-exception-handlers$7646$CSxK@ g$C$15357$CSxK@ g$V$15358$CSxK@ (case-lambda ((g$C$15351$CSxK@) (car (case-lambda ((g$V$15352$CSxK@) (g$V$15352$CSxK@ (case-lambda (g$IGNORE$15353$CSxK@ (g$make-message-condition$8063$CSxK@ (case-lambda ((g$V$15354$CSxK@) (g$make-non-continuable-violation$8133$CSxK@ (case-lambda ((g$V$15355$CSxK@) (condition (case-lambda ((g$V$15356$CSxK@) (g$raise$7647$CSxK@ g$C$15351$CSxK@ g$V$15356$CSxK@))) g$V$15355$CSxK@ g$V$15354$CSxK@)))))) '"handler returned"))) g$obj$7657$CSxK@))) g$handlers$7658$CSxK@)))))) g$handlers$7658$CSxK@))) g$C$15359$CSxK@ g$*current-exception-handlers*$7644$CSxK@)))))) (library-letrec*-identity 'g$raise$7647$CSxK@))) (g$raise-continuable$7648$CSxK@ g$raise-continuable$7671$CSxK@ ((case-lambda ((g$C$15383$CSxK@) (g$C$15383$CSxK@ (case-lambda ((g$C$15364$CSxK@ g$obj$7659$CSxK@) ((case-lambda ((g$C$15362$CSxK@ g$handlers$7660$CSxK@) (cdr (case-lambda ((g$V$15363$CSxK@) (g$with-exception-handlers$7646$CSxK@ g$C$15362$CSxK@ g$V$15363$CSxK@ (case-lambda ((g$C$15360$CSxK@) (car (case-lambda ((g$V$15361$CSxK@) (g$V$15361$CSxK@ g$C$15360$CSxK@ g$obj$7659$CSxK@))) g$handlers$7660$CSxK@)))))) g$handlers$7660$CSxK@))) g$C$15364$CSxK@ g$*current-exception-handlers*$7644$CSxK@)))))) (library-letrec*-identity 'g$raise-continuable$7648$CSxK@))) (g$assertion-violation$7649$CSxK@ g$assertion-violation$7672$CSxK@ ((case-lambda ((g$C$15384$CSxK@) (g$C$15384$CSxK@ (case-lambda ((g$C$15365$CSxK@ g$who$7661$CSxK@ g$msg$7662$CSxK@ . g$irritants$7663$CSxK@) (g$make-irritants-condition$8113$CSxK@ (case-lambda ((g$V$15366$CSxK@) (g$make-message-condition$8063$CSxK@ (case-lambda ((g$V$15367$CSxK@) ((case-lambda ((g$J$15371$CSxK@) (if g$who$7661$CSxK@ (g$make-who-condition$8123$CSxK@ g$J$15371$CSxK@ g$who$7661$CSxK@) (condition g$J$15371$CSxK@)))) (case-lambda ((g$V$15368$CSxK@) (g$make-assertion-violation$8105$CSxK@ (case-lambda ((g$V$15369$CSxK@) (condition (case-lambda ((g$V$15370$CSxK@) (g$raise$7647$CSxK@ g$C$15365$CSxK@ g$V$15370$CSxK@))) g$V$15369$CSxK@ g$V$15368$CSxK@ g$V$15367$CSxK@ g$V$15366$CSxK@))))))))) g$msg$7662$CSxK@))) g$irritants$7663$CSxK@)))))) (library-letrec*-identity 'g$assertion-violation$7649$CSxK@))) (g$error$7650$CSxK@ g$error$7673$CSxK@ ((case-lambda ((g$C$15385$CSxK@) (g$C$15385$CSxK@ (case-lambda ((g$C$15372$CSxK@ g$who$7664$CSxK@ g$msg$7665$CSxK@ . g$irritants$7666$CSxK@) (g$make-irritants-condition$8113$CSxK@ (case-lambda ((g$V$15373$CSxK@) (g$make-message-condition$8063$CSxK@ (case-lambda ((g$V$15374$CSxK@) ((case-lambda ((g$J$15378$CSxK@) (if g$who$7664$CSxK@ (g$make-who-condition$8123$CSxK@ g$J$15378$CSxK@ g$who$7664$CSxK@) (condition g$J$15378$CSxK@)))) (case-lambda ((g$V$15375$CSxK@) (g$make-error$8089$CSxK@ (case-lambda ((g$V$15376$CSxK@) (condition (case-lambda ((g$V$15377$CSxK@) (g$raise$7647$CSxK@ g$C$15372$CSxK@ g$V$15377$CSxK@))) g$V$15376$CSxK@ g$V$15375$CSxK@ g$V$15374$CSxK@ g$V$15373$CSxK@))))))))) g$msg$7665$CSxK@))) g$irritants$7666$CSxK@)))))) (library-letrec*-identity 'g$error$7650$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme conditions) ((g$6261$7674$CSxK@ g$6261$8052$CSxK@ ((case-lambda ((g$C$15386$CSxK@) (make-record-type-descriptor g$C$15386$CSxK@ '&condition '#f 'g$6264$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6261$7674$CSxK@))) (g$6263$7675$CSxK@ g$6263$8053$CSxK@ ((case-lambda ((g$C$15387$CSxK@) (g$C$15387$CSxK@ '#f))) (library-letrec*-identity 'g$6263$7675$CSxK@))) (g$6262$7676$CSxK@ g$6262$8054$CSxK@ ((case-lambda ((g$C$15388$CSxK@) (make-record-constructor-descriptor g$C$15388$CSxK@ g$6261$7674$CSxK@ '#f g$6263$7675$CSxK@))) (library-letrec*-identity 'g$6262$7676$CSxK@))) (g$&condition?$7679$CSxK@ g$&condition?$8055$CSxK@ ((case-lambda ((g$C$15389$CSxK@) (record-predicate g$C$15389$CSxK@ g$6261$7674$CSxK@))) (library-letrec*-identity 'g$&condition?$7679$CSxK@))) (g$make-&condition$7680$CSxK@ g$make-&condition$8056$CSxK@ ((case-lambda ((g$C$15390$CSxK@) (record-constructor g$C$15390$CSxK@ g$6262$7676$CSxK@))) (library-letrec*-identity 'g$make-&condition$7680$CSxK@))) (g$&condition-rtd$7681$CSxK@ g$&condition-rtd$8057$CSxK@ ((case-lambda ((g$C$15391$CSxK@) (g$C$15391$CSxK@ g$6261$7674$CSxK@))) (library-letrec*-identity 'g$&condition-rtd$7681$CSxK@))) (g$&condition-rcd$7682$CSxK@ g$&condition-rcd$8058$CSxK@ ((case-lambda ((g$C$15392$CSxK@) (g$C$15392$CSxK@ g$6262$7676$CSxK@))) (library-letrec*-identity 'g$&condition-rcd$7682$CSxK@))) (g$6298$7756$CSxK@ g$6298$8059$CSxK@ ((case-lambda ((g$C$15393$CSxK@) (make-record-type-descriptor g$C$15393$CSxK@ '&message g$6261$7674$CSxK@ 'g$6301$CSxK@ '#f '#f '#((immutable message))))) (library-letrec*-identity 'g$6298$7756$CSxK@))) (g$6300$7757$CSxK@ g$6300$8060$CSxK@ ((case-lambda ((g$C$15394$CSxK@) (g$C$15394$CSxK@ '#f))) (library-letrec*-identity 'g$6300$7757$CSxK@))) (g$6299$7758$CSxK@ g$6299$8061$CSxK@ ((case-lambda ((g$C$15395$CSxK@) (make-record-constructor-descriptor g$C$15395$CSxK@ g$6298$7756$CSxK@ g$6262$7676$CSxK@ g$6300$7757$CSxK@))) (library-letrec*-identity 'g$6299$7758$CSxK@))) (g$p?$7761$CSxK@ g$p?$8062$CSxK@ ((case-lambda ((g$C$15396$CSxK@) (record-predicate g$C$15396$CSxK@ g$6298$7756$CSxK@))) (library-letrec*-identity 'g$p?$7761$CSxK@))) (g$make-message-condition$7762$CSxK@ g$make-message-condition$8063$CSxK@ ((case-lambda ((g$C$15397$CSxK@) (record-constructor g$C$15397$CSxK@ g$6299$7758$CSxK@))) (library-letrec*-identity 'g$make-message-condition$7762$CSxK@))) (g$condition-message$7763$CSxK@ g$condition-message$8064$CSxK@ ((case-lambda ((g$C$15398$CSxK@) (record-accessor g$C$15398$CSxK@ g$6298$7756$CSxK@ '0))) (library-letrec*-identity 'g$condition-message$7763$CSxK@))) (g$message-condition?$7764$CSxK@ g$message-condition?$8065$CSxK@ ((case-lambda ((g$C$15399$CSxK@) (condition-predicate g$C$15399$CSxK@ g$6298$7756$CSxK@))) (library-letrec*-identity 'g$message-condition?$7764$CSxK@))) (g$condition-message$7765$CSxK@ g$condition-message$8066$CSxK@ ((case-lambda ((g$C$15400$CSxK@) (condition-accessor g$C$15400$CSxK@ g$6298$7756$CSxK@ g$condition-message$7763$CSxK@))) (library-letrec*-identity 'g$condition-message$7765$CSxK@))) (g$&message-rtd$7766$CSxK@ g$&message-rtd$8067$CSxK@ ((case-lambda ((g$C$15401$CSxK@) (g$C$15401$CSxK@ g$6298$7756$CSxK@))) (library-letrec*-identity 'g$&message-rtd$7766$CSxK@))) (g$&message-rcd$7767$CSxK@ g$&message-rcd$8068$CSxK@ ((case-lambda ((g$C$15402$CSxK@) (g$C$15402$CSxK@ g$6299$7758$CSxK@))) (library-letrec*-identity 'g$&message-rcd$7767$CSxK@))) (g$6313$7768$CSxK@ g$6313$8069$CSxK@ ((case-lambda ((g$C$15403$CSxK@) (make-record-type-descriptor g$C$15403$CSxK@ '&warning g$6261$7674$CSxK@ 'g$6316$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6313$7768$CSxK@))) (g$6315$7769$CSxK@ g$6315$8070$CSxK@ ((case-lambda ((g$C$15404$CSxK@) (g$C$15404$CSxK@ '#f))) (library-letrec*-identity 'g$6315$7769$CSxK@))) (g$6314$7770$CSxK@ g$6314$8071$CSxK@ ((case-lambda ((g$C$15405$CSxK@) (make-record-constructor-descriptor g$C$15405$CSxK@ g$6313$7768$CSxK@ g$6262$7676$CSxK@ g$6315$7769$CSxK@))) (library-letrec*-identity 'g$6314$7770$CSxK@))) (g$p?$7773$CSxK@ g$p?$8072$CSxK@ ((case-lambda ((g$C$15406$CSxK@) (record-predicate g$C$15406$CSxK@ g$6313$7768$CSxK@))) (library-letrec*-identity 'g$p?$7773$CSxK@))) (g$make-warning$7774$CSxK@ g$make-warning$8073$CSxK@ ((case-lambda ((g$C$15407$CSxK@) (record-constructor g$C$15407$CSxK@ g$6314$7770$CSxK@))) (library-letrec*-identity 'g$make-warning$7774$CSxK@))) (g$warning?$7775$CSxK@ g$warning?$8074$CSxK@ ((case-lambda ((g$C$15408$CSxK@) (condition-predicate g$C$15408$CSxK@ g$6313$7768$CSxK@))) (library-letrec*-identity 'g$warning?$7775$CSxK@))) (g$&warning-rtd$7776$CSxK@ g$&warning-rtd$8075$CSxK@ ((case-lambda ((g$C$15409$CSxK@) (g$C$15409$CSxK@ g$6313$7768$CSxK@))) (library-letrec*-identity 'g$&warning-rtd$7776$CSxK@))) (g$&warning-rcd$7777$CSxK@ g$&warning-rcd$8076$CSxK@ ((case-lambda ((g$C$15410$CSxK@) (g$C$15410$CSxK@ g$6314$7770$CSxK@))) (library-letrec*-identity 'g$&warning-rcd$7777$CSxK@))) (g$6326$7778$CSxK@ g$6326$8077$CSxK@ ((case-lambda ((g$C$15411$CSxK@) (make-record-type-descriptor g$C$15411$CSxK@ '&serious g$6261$7674$CSxK@ 'g$6329$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6326$7778$CSxK@))) (g$6328$7779$CSxK@ g$6328$8078$CSxK@ ((case-lambda ((g$C$15412$CSxK@) (g$C$15412$CSxK@ '#f))) (library-letrec*-identity 'g$6328$7779$CSxK@))) (g$6327$7780$CSxK@ g$6327$8079$CSxK@ ((case-lambda ((g$C$15413$CSxK@) (make-record-constructor-descriptor g$C$15413$CSxK@ g$6326$7778$CSxK@ g$6262$7676$CSxK@ g$6328$7779$CSxK@))) (library-letrec*-identity 'g$6327$7780$CSxK@))) (g$p?$7783$CSxK@ g$p?$8080$CSxK@ ((case-lambda ((g$C$15414$CSxK@) (record-predicate g$C$15414$CSxK@ g$6326$7778$CSxK@))) (library-letrec*-identity 'g$p?$7783$CSxK@))) (g$make-serious-condition$7784$CSxK@ g$make-serious-condition$8081$CSxK@ ((case-lambda ((g$C$15415$CSxK@) (record-constructor g$C$15415$CSxK@ g$6327$7780$CSxK@))) (library-letrec*-identity 'g$make-serious-condition$7784$CSxK@))) (g$serious-condition?$7785$CSxK@ g$serious-condition?$8082$CSxK@ ((case-lambda ((g$C$15416$CSxK@) (condition-predicate g$C$15416$CSxK@ g$6326$7778$CSxK@))) (library-letrec*-identity 'g$serious-condition?$7785$CSxK@))) (g$&serious-rtd$7786$CSxK@ g$&serious-rtd$8083$CSxK@ ((case-lambda ((g$C$15417$CSxK@) (g$C$15417$CSxK@ g$6326$7778$CSxK@))) (library-letrec*-identity 'g$&serious-rtd$7786$CSxK@))) (g$&serious-rcd$7787$CSxK@ g$&serious-rcd$8084$CSxK@ ((case-lambda ((g$C$15418$CSxK@) (g$C$15418$CSxK@ g$6327$7780$CSxK@))) (library-letrec*-identity 'g$&serious-rcd$7787$CSxK@))) (g$6339$7788$CSxK@ g$6339$8085$CSxK@ ((case-lambda ((g$C$15419$CSxK@) (make-record-type-descriptor g$C$15419$CSxK@ '&error g$6326$7778$CSxK@ 'g$6342$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6339$7788$CSxK@))) (g$6341$7789$CSxK@ g$6341$8086$CSxK@ ((case-lambda ((g$C$15420$CSxK@) (g$C$15420$CSxK@ '#f))) (library-letrec*-identity 'g$6341$7789$CSxK@))) (g$6340$7790$CSxK@ g$6340$8087$CSxK@ ((case-lambda ((g$C$15421$CSxK@) (make-record-constructor-descriptor g$C$15421$CSxK@ g$6339$7788$CSxK@ g$6327$7780$CSxK@ g$6341$7789$CSxK@))) (library-letrec*-identity 'g$6340$7790$CSxK@))) (g$p?$7793$CSxK@ g$p?$8088$CSxK@ ((case-lambda ((g$C$15422$CSxK@) (record-predicate g$C$15422$CSxK@ g$6339$7788$CSxK@))) (library-letrec*-identity 'g$p?$7793$CSxK@))) (g$make-error$7794$CSxK@ g$make-error$8089$CSxK@ ((case-lambda ((g$C$15423$CSxK@) (record-constructor g$C$15423$CSxK@ g$6340$7790$CSxK@))) (library-letrec*-identity 'g$make-error$7794$CSxK@))) (g$error?$7795$CSxK@ g$error?$8090$CSxK@ ((case-lambda ((g$C$15424$CSxK@) (condition-predicate g$C$15424$CSxK@ g$6339$7788$CSxK@))) (library-letrec*-identity 'g$error?$7795$CSxK@))) (g$&error-rtd$7796$CSxK@ g$&error-rtd$8091$CSxK@ ((case-lambda ((g$C$15425$CSxK@) (g$C$15425$CSxK@ g$6339$7788$CSxK@))) (library-letrec*-identity 'g$&error-rtd$7796$CSxK@))) (g$&error-rcd$7797$CSxK@ g$&error-rcd$8092$CSxK@ ((case-lambda ((g$C$15426$CSxK@) (g$C$15426$CSxK@ g$6340$7790$CSxK@))) (library-letrec*-identity 'g$&error-rcd$7797$CSxK@))) (g$6352$7798$CSxK@ g$6352$8093$CSxK@ ((case-lambda ((g$C$15427$CSxK@) (make-record-type-descriptor g$C$15427$CSxK@ '&violation g$6326$7778$CSxK@ 'g$6355$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6352$7798$CSxK@))) (g$6354$7799$CSxK@ g$6354$8094$CSxK@ ((case-lambda ((g$C$15428$CSxK@) (g$C$15428$CSxK@ '#f))) (library-letrec*-identity 'g$6354$7799$CSxK@))) (g$6353$7800$CSxK@ g$6353$8095$CSxK@ ((case-lambda ((g$C$15429$CSxK@) (make-record-constructor-descriptor g$C$15429$CSxK@ g$6352$7798$CSxK@ g$6327$7780$CSxK@ g$6354$7799$CSxK@))) (library-letrec*-identity 'g$6353$7800$CSxK@))) (g$p?$7803$CSxK@ g$p?$8096$CSxK@ ((case-lambda ((g$C$15430$CSxK@) (record-predicate g$C$15430$CSxK@ g$6352$7798$CSxK@))) (library-letrec*-identity 'g$p?$7803$CSxK@))) (g$make-violation$7804$CSxK@ g$make-violation$8097$CSxK@ ((case-lambda ((g$C$15431$CSxK@) (record-constructor g$C$15431$CSxK@ g$6353$7800$CSxK@))) (library-letrec*-identity 'g$make-violation$7804$CSxK@))) (g$violation?$7805$CSxK@ g$violation?$8098$CSxK@ ((case-lambda ((g$C$15432$CSxK@) (condition-predicate g$C$15432$CSxK@ g$6352$7798$CSxK@))) (library-letrec*-identity 'g$violation?$7805$CSxK@))) (g$&violation-rtd$7806$CSxK@ g$&violation-rtd$8099$CSxK@ ((case-lambda ((g$C$15433$CSxK@) (g$C$15433$CSxK@ g$6352$7798$CSxK@))) (library-letrec*-identity 'g$&violation-rtd$7806$CSxK@))) (g$&violation-rcd$7807$CSxK@ g$&violation-rcd$8100$CSxK@ ((case-lambda ((g$C$15434$CSxK@) (g$C$15434$CSxK@ g$6353$7800$CSxK@))) (library-letrec*-identity 'g$&violation-rcd$7807$CSxK@))) (g$6365$7808$CSxK@ g$6365$8101$CSxK@ ((case-lambda ((g$C$15435$CSxK@) (make-record-type-descriptor g$C$15435$CSxK@ '&assertion g$6352$7798$CSxK@ 'g$6368$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6365$7808$CSxK@))) (g$6367$7809$CSxK@ g$6367$8102$CSxK@ ((case-lambda ((g$C$15436$CSxK@) (g$C$15436$CSxK@ '#f))) (library-letrec*-identity 'g$6367$7809$CSxK@))) (g$6366$7810$CSxK@ g$6366$8103$CSxK@ ((case-lambda ((g$C$15437$CSxK@) (make-record-constructor-descriptor g$C$15437$CSxK@ g$6365$7808$CSxK@ g$6353$7800$CSxK@ g$6367$7809$CSxK@))) (library-letrec*-identity 'g$6366$7810$CSxK@))) (g$p?$7813$CSxK@ g$p?$8104$CSxK@ ((case-lambda ((g$C$15438$CSxK@) (record-predicate g$C$15438$CSxK@ g$6365$7808$CSxK@))) (library-letrec*-identity 'g$p?$7813$CSxK@))) (g$make-assertion-violation$7814$CSxK@ g$make-assertion-violation$8105$CSxK@ ((case-lambda ((g$C$15439$CSxK@) (record-constructor g$C$15439$CSxK@ g$6366$7810$CSxK@))) (library-letrec*-identity 'g$make-assertion-violation$7814$CSxK@))) (g$assertion-violation?$7815$CSxK@ g$assertion-violation?$8106$CSxK@ ((case-lambda ((g$C$15440$CSxK@) (condition-predicate g$C$15440$CSxK@ g$6365$7808$CSxK@))) (library-letrec*-identity 'g$assertion-violation?$7815$CSxK@))) (g$&assertion-rtd$7816$CSxK@ g$&assertion-rtd$8107$CSxK@ ((case-lambda ((g$C$15441$CSxK@) (g$C$15441$CSxK@ g$6365$7808$CSxK@))) (library-letrec*-identity 'g$&assertion-rtd$7816$CSxK@))) (g$&assertion-rcd$7817$CSxK@ g$&assertion-rcd$8108$CSxK@ ((case-lambda ((g$C$15442$CSxK@) (g$C$15442$CSxK@ g$6366$7810$CSxK@))) (library-letrec*-identity 'g$&assertion-rcd$7817$CSxK@))) (g$6378$7819$CSxK@ g$6378$8109$CSxK@ ((case-lambda ((g$C$15443$CSxK@) (make-record-type-descriptor g$C$15443$CSxK@ '&irritants g$6261$7674$CSxK@ 'g$6381$CSxK@ '#f '#f '#((immutable irritants))))) (library-letrec*-identity 'g$6378$7819$CSxK@))) (g$6380$7820$CSxK@ g$6380$8110$CSxK@ ((case-lambda ((g$C$15444$CSxK@) (g$C$15444$CSxK@ '#f))) (library-letrec*-identity 'g$6380$7820$CSxK@))) (g$6379$7821$CSxK@ g$6379$8111$CSxK@ ((case-lambda ((g$C$15445$CSxK@) (make-record-constructor-descriptor g$C$15445$CSxK@ g$6378$7819$CSxK@ g$6262$7676$CSxK@ g$6380$7820$CSxK@))) (library-letrec*-identity 'g$6379$7821$CSxK@))) (g$p?$7824$CSxK@ g$p?$8112$CSxK@ ((case-lambda ((g$C$15446$CSxK@) (record-predicate g$C$15446$CSxK@ g$6378$7819$CSxK@))) (library-letrec*-identity 'g$p?$7824$CSxK@))) (g$make-irritants-condition$7825$CSxK@ g$make-irritants-condition$8113$CSxK@ ((case-lambda ((g$C$15447$CSxK@) (record-constructor g$C$15447$CSxK@ g$6379$7821$CSxK@))) (library-letrec*-identity 'g$make-irritants-condition$7825$CSxK@))) (g$condition-irritants$7826$CSxK@ g$condition-irritants$8114$CSxK@ ((case-lambda ((g$C$15448$CSxK@) (record-accessor g$C$15448$CSxK@ g$6378$7819$CSxK@ '0))) (library-letrec*-identity 'g$condition-irritants$7826$CSxK@))) (g$irritants-condition?$7827$CSxK@ g$irritants-condition?$8115$CSxK@ ((case-lambda ((g$C$15449$CSxK@) (condition-predicate g$C$15449$CSxK@ g$6378$7819$CSxK@))) (library-letrec*-identity 'g$irritants-condition?$7827$CSxK@))) (g$condition-irritants$7828$CSxK@ g$condition-irritants$8116$CSxK@ ((case-lambda ((g$C$15450$CSxK@) (condition-accessor g$C$15450$CSxK@ g$6378$7819$CSxK@ g$condition-irritants$7826$CSxK@))) (library-letrec*-identity 'g$condition-irritants$7828$CSxK@))) (g$&irritants-rtd$7829$CSxK@ g$&irritants-rtd$8117$CSxK@ ((case-lambda ((g$C$15451$CSxK@) (g$C$15451$CSxK@ g$6378$7819$CSxK@))) (library-letrec*-identity 'g$&irritants-rtd$7829$CSxK@))) (g$&irritants-rcd$7830$CSxK@ g$&irritants-rcd$8118$CSxK@ ((case-lambda ((g$C$15452$CSxK@) (g$C$15452$CSxK@ g$6379$7821$CSxK@))) (library-letrec*-identity 'g$&irritants-rcd$7830$CSxK@))) (g$6393$7832$CSxK@ g$6393$8119$CSxK@ ((case-lambda ((g$C$15453$CSxK@) (make-record-type-descriptor g$C$15453$CSxK@ '&who g$6261$7674$CSxK@ 'g$6396$CSxK@ '#f '#f '#((immutable who))))) (library-letrec*-identity 'g$6393$7832$CSxK@))) (g$6395$7833$CSxK@ g$6395$8120$CSxK@ ((case-lambda ((g$C$15454$CSxK@) (g$C$15454$CSxK@ '#f))) (library-letrec*-identity 'g$6395$7833$CSxK@))) (g$6394$7834$CSxK@ g$6394$8121$CSxK@ ((case-lambda ((g$C$15455$CSxK@) (make-record-constructor-descriptor g$C$15455$CSxK@ g$6393$7832$CSxK@ g$6262$7676$CSxK@ g$6395$7833$CSxK@))) (library-letrec*-identity 'g$6394$7834$CSxK@))) (g$p?$7837$CSxK@ g$p?$8122$CSxK@ ((case-lambda ((g$C$15456$CSxK@) (record-predicate g$C$15456$CSxK@ g$6393$7832$CSxK@))) (library-letrec*-identity 'g$p?$7837$CSxK@))) (g$make-who-condition$7838$CSxK@ g$make-who-condition$8123$CSxK@ ((case-lambda ((g$C$15457$CSxK@) (record-constructor g$C$15457$CSxK@ g$6394$7834$CSxK@))) (library-letrec*-identity 'g$make-who-condition$7838$CSxK@))) (g$condition-who$7839$CSxK@ g$condition-who$8124$CSxK@ ((case-lambda ((g$C$15458$CSxK@) (record-accessor g$C$15458$CSxK@ g$6393$7832$CSxK@ '0))) (library-letrec*-identity 'g$condition-who$7839$CSxK@))) (g$who-condition?$7840$CSxK@ g$who-condition?$8125$CSxK@ ((case-lambda ((g$C$15459$CSxK@) (condition-predicate g$C$15459$CSxK@ g$6393$7832$CSxK@))) (library-letrec*-identity 'g$who-condition?$7840$CSxK@))) (g$condition-who$7841$CSxK@ g$condition-who$8126$CSxK@ ((case-lambda ((g$C$15460$CSxK@) (condition-accessor g$C$15460$CSxK@ g$6393$7832$CSxK@ g$condition-who$7839$CSxK@))) (library-letrec*-identity 'g$condition-who$7841$CSxK@))) (g$&who-rtd$7842$CSxK@ g$&who-rtd$8127$CSxK@ ((case-lambda ((g$C$15461$CSxK@) (g$C$15461$CSxK@ g$6393$7832$CSxK@))) (library-letrec*-identity 'g$&who-rtd$7842$CSxK@))) (g$&who-rcd$7843$CSxK@ g$&who-rcd$8128$CSxK@ ((case-lambda ((g$C$15462$CSxK@) (g$C$15462$CSxK@ g$6394$7834$CSxK@))) (library-letrec*-identity 'g$&who-rcd$7843$CSxK@))) (g$6408$7844$CSxK@ g$6408$8129$CSxK@ ((case-lambda ((g$C$15463$CSxK@) (make-record-type-descriptor g$C$15463$CSxK@ '&non-continuable g$6352$7798$CSxK@ 'g$6411$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6408$7844$CSxK@))) (g$6410$7845$CSxK@ g$6410$8130$CSxK@ ((case-lambda ((g$C$15464$CSxK@) (g$C$15464$CSxK@ '#f))) (library-letrec*-identity 'g$6410$7845$CSxK@))) (g$6409$7846$CSxK@ g$6409$8131$CSxK@ ((case-lambda ((g$C$15465$CSxK@) (make-record-constructor-descriptor g$C$15465$CSxK@ g$6408$7844$CSxK@ g$6353$7800$CSxK@ g$6410$7845$CSxK@))) (library-letrec*-identity 'g$6409$7846$CSxK@))) (g$p?$7849$CSxK@ g$p?$8132$CSxK@ ((case-lambda ((g$C$15466$CSxK@) (record-predicate g$C$15466$CSxK@ g$6408$7844$CSxK@))) (library-letrec*-identity 'g$p?$7849$CSxK@))) (g$make-non-continuable-violation$7850$CSxK@ g$make-non-continuable-violation$8133$CSxK@ ((case-lambda ((g$C$15467$CSxK@) (record-constructor g$C$15467$CSxK@ g$6409$7846$CSxK@))) (library-letrec*-identity 'g$make-non-continuable-violation$7850$CSxK@))) (g$non-continuable-violation?$7851$CSxK@ g$non-continuable-violation?$8134$CSxK@ ((case-lambda ((g$C$15468$CSxK@) (condition-predicate g$C$15468$CSxK@ g$6408$7844$CSxK@))) (library-letrec*-identity 'g$non-continuable-violation?$7851$CSxK@))) (g$&non-continuable-rtd$7852$CSxK@ g$&non-continuable-rtd$8135$CSxK@ ((case-lambda ((g$C$15469$CSxK@) (g$C$15469$CSxK@ g$6408$7844$CSxK@))) (library-letrec*-identity 'g$&non-continuable-rtd$7852$CSxK@))) (g$&non-continuable-rcd$7853$CSxK@ g$&non-continuable-rcd$8136$CSxK@ ((case-lambda ((g$C$15470$CSxK@) (g$C$15470$CSxK@ g$6409$7846$CSxK@))) (library-letrec*-identity 'g$&non-continuable-rcd$7853$CSxK@))) (g$6421$7854$CSxK@ g$6421$8137$CSxK@ ((case-lambda ((g$C$15471$CSxK@) (make-record-type-descriptor g$C$15471$CSxK@ '&implementation-restriction g$6352$7798$CSxK@ 'g$6424$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6421$7854$CSxK@))) (g$6423$7855$CSxK@ g$6423$8138$CSxK@ ((case-lambda ((g$C$15472$CSxK@) (g$C$15472$CSxK@ '#f))) (library-letrec*-identity 'g$6423$7855$CSxK@))) (g$6422$7856$CSxK@ g$6422$8139$CSxK@ ((case-lambda ((g$C$15473$CSxK@) (make-record-constructor-descriptor g$C$15473$CSxK@ g$6421$7854$CSxK@ g$6353$7800$CSxK@ g$6423$7855$CSxK@))) (library-letrec*-identity 'g$6422$7856$CSxK@))) (g$p?$7859$CSxK@ g$p?$8140$CSxK@ ((case-lambda ((g$C$15474$CSxK@) (record-predicate g$C$15474$CSxK@ g$6421$7854$CSxK@))) (library-letrec*-identity 'g$p?$7859$CSxK@))) (g$make-implementation-restriction-violation$7860$CSxK@ g$make-implementation-restriction-violation$8141$CSxK@ ((case-lambda ((g$C$15475$CSxK@) (record-constructor g$C$15475$CSxK@ g$6422$7856$CSxK@))) (library-letrec*-identity 'g$make-implementation-restriction-violation$7860$CSxK@))) (g$implementation-restriction-violation?$7861$CSxK@ g$implementation-restriction-violation?$8142$CSxK@ ((case-lambda ((g$C$15476$CSxK@) (condition-predicate g$C$15476$CSxK@ g$6421$7854$CSxK@))) (library-letrec*-identity 'g$implementation-restriction-violation?$7861$CSxK@))) (g$&implementation-restriction-rtd$7862$CSxK@ g$&implementation-restriction-rtd$8143$CSxK@ ((case-lambda ((g$C$15477$CSxK@) (g$C$15477$CSxK@ g$6421$7854$CSxK@))) (library-letrec*-identity 'g$&implementation-restriction-rtd$7862$CSxK@))) (g$&implementation-restriction-rcd$7863$CSxK@ g$&implementation-restriction-rcd$8144$CSxK@ ((case-lambda ((g$C$15478$CSxK@) (g$C$15478$CSxK@ g$6422$7856$CSxK@))) (library-letrec*-identity 'g$&implementation-restriction-rcd$7863$CSxK@))) (g$6434$7864$CSxK@ g$6434$8145$CSxK@ ((case-lambda ((g$C$15479$CSxK@) (make-record-type-descriptor g$C$15479$CSxK@ '&lexical g$6352$7798$CSxK@ 'g$6437$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6434$7864$CSxK@))) (g$6436$7865$CSxK@ g$6436$8146$CSxK@ ((case-lambda ((g$C$15480$CSxK@) (g$C$15480$CSxK@ '#f))) (library-letrec*-identity 'g$6436$7865$CSxK@))) (g$6435$7866$CSxK@ g$6435$8147$CSxK@ ((case-lambda ((g$C$15481$CSxK@) (make-record-constructor-descriptor g$C$15481$CSxK@ g$6434$7864$CSxK@ g$6353$7800$CSxK@ g$6436$7865$CSxK@))) (library-letrec*-identity 'g$6435$7866$CSxK@))) (g$p?$7869$CSxK@ g$p?$8148$CSxK@ ((case-lambda ((g$C$15482$CSxK@) (record-predicate g$C$15482$CSxK@ g$6434$7864$CSxK@))) (library-letrec*-identity 'g$p?$7869$CSxK@))) (g$make-lexical-violation$7870$CSxK@ g$make-lexical-violation$8149$CSxK@ ((case-lambda ((g$C$15483$CSxK@) (record-constructor g$C$15483$CSxK@ g$6435$7866$CSxK@))) (library-letrec*-identity 'g$make-lexical-violation$7870$CSxK@))) (g$lexical-violation?$7871$CSxK@ g$lexical-violation?$8150$CSxK@ ((case-lambda ((g$C$15484$CSxK@) (condition-predicate g$C$15484$CSxK@ g$6434$7864$CSxK@))) (library-letrec*-identity 'g$lexical-violation?$7871$CSxK@))) (g$&lexical-rtd$7872$CSxK@ g$&lexical-rtd$8151$CSxK@ ((case-lambda ((g$C$15485$CSxK@) (g$C$15485$CSxK@ g$6434$7864$CSxK@))) (library-letrec*-identity 'g$&lexical-rtd$7872$CSxK@))) (g$&lexical-rcd$7873$CSxK@ g$&lexical-rcd$8152$CSxK@ ((case-lambda ((g$C$15486$CSxK@) (g$C$15486$CSxK@ g$6435$7866$CSxK@))) (library-letrec*-identity 'g$&lexical-rcd$7873$CSxK@))) (g$6447$7876$CSxK@ g$6447$8153$CSxK@ ((case-lambda ((g$C$15487$CSxK@) (make-record-type-descriptor g$C$15487$CSxK@ '&syntax g$6352$7798$CSxK@ 'g$6450$CSxK@ '#f '#f '#((immutable form) (immutable subform))))) (library-letrec*-identity 'g$6447$7876$CSxK@))) (g$6449$7877$CSxK@ g$6449$8154$CSxK@ ((case-lambda ((g$C$15488$CSxK@) (g$C$15488$CSxK@ '#f))) (library-letrec*-identity 'g$6449$7877$CSxK@))) (g$6448$7878$CSxK@ g$6448$8155$CSxK@ ((case-lambda ((g$C$15489$CSxK@) (make-record-constructor-descriptor g$C$15489$CSxK@ g$6447$7876$CSxK@ g$6353$7800$CSxK@ g$6449$7877$CSxK@))) (library-letrec*-identity 'g$6448$7878$CSxK@))) (g$p?$7881$CSxK@ g$p?$8156$CSxK@ ((case-lambda ((g$C$15490$CSxK@) (record-predicate g$C$15490$CSxK@ g$6447$7876$CSxK@))) (library-letrec*-identity 'g$p?$7881$CSxK@))) (g$make-syntax-violation$7882$CSxK@ g$make-syntax-violation$8157$CSxK@ ((case-lambda ((g$C$15491$CSxK@) (record-constructor g$C$15491$CSxK@ g$6448$7878$CSxK@))) (library-letrec*-identity 'g$make-syntax-violation$7882$CSxK@))) (g$syntax-violation-form$7883$CSxK@ g$syntax-violation-form$8158$CSxK@ ((case-lambda ((g$C$15492$CSxK@) (record-accessor g$C$15492$CSxK@ g$6447$7876$CSxK@ '0))) (library-letrec*-identity 'g$syntax-violation-form$7883$CSxK@))) (g$syntax-violation-subform$7884$CSxK@ g$syntax-violation-subform$8159$CSxK@ ((case-lambda ((g$C$15493$CSxK@) (record-accessor g$C$15493$CSxK@ g$6447$7876$CSxK@ '1))) (library-letrec*-identity 'g$syntax-violation-subform$7884$CSxK@))) (g$syntax-violation?$7885$CSxK@ g$syntax-violation?$8160$CSxK@ ((case-lambda ((g$C$15494$CSxK@) (condition-predicate g$C$15494$CSxK@ g$6447$7876$CSxK@))) (library-letrec*-identity 'g$syntax-violation?$7885$CSxK@))) (g$syntax-violation-form$7886$CSxK@ g$syntax-violation-form$8161$CSxK@ ((case-lambda ((g$C$15495$CSxK@) (condition-accessor g$C$15495$CSxK@ g$6447$7876$CSxK@ g$syntax-violation-form$7883$CSxK@))) (library-letrec*-identity 'g$syntax-violation-form$7886$CSxK@))) (g$syntax-violation-subform$7887$CSxK@ g$syntax-violation-subform$8162$CSxK@ ((case-lambda ((g$C$15496$CSxK@) (condition-accessor g$C$15496$CSxK@ g$6447$7876$CSxK@ g$syntax-violation-subform$7884$CSxK@))) (library-letrec*-identity 'g$syntax-violation-subform$7887$CSxK@))) (g$&syntax-rtd$7888$CSxK@ g$&syntax-rtd$8163$CSxK@ ((case-lambda ((g$C$15497$CSxK@) (g$C$15497$CSxK@ g$6447$7876$CSxK@))) (library-letrec*-identity 'g$&syntax-rtd$7888$CSxK@))) (g$&syntax-rcd$7889$CSxK@ g$&syntax-rcd$8164$CSxK@ ((case-lambda ((g$C$15498$CSxK@) (g$C$15498$CSxK@ g$6448$7878$CSxK@))) (library-letrec*-identity 'g$&syntax-rcd$7889$CSxK@))) (g$6464$7890$CSxK@ g$6464$8165$CSxK@ ((case-lambda ((g$C$15499$CSxK@) (make-record-type-descriptor g$C$15499$CSxK@ '&undefined g$6352$7798$CSxK@ 'g$6467$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6464$7890$CSxK@))) (g$6466$7891$CSxK@ g$6466$8166$CSxK@ ((case-lambda ((g$C$15500$CSxK@) (g$C$15500$CSxK@ '#f))) (library-letrec*-identity 'g$6466$7891$CSxK@))) (g$6465$7892$CSxK@ g$6465$8167$CSxK@ ((case-lambda ((g$C$15501$CSxK@) (make-record-constructor-descriptor g$C$15501$CSxK@ g$6464$7890$CSxK@ g$6353$7800$CSxK@ g$6466$7891$CSxK@))) (library-letrec*-identity 'g$6465$7892$CSxK@))) (g$p?$7895$CSxK@ g$p?$8168$CSxK@ ((case-lambda ((g$C$15502$CSxK@) (record-predicate g$C$15502$CSxK@ g$6464$7890$CSxK@))) (library-letrec*-identity 'g$p?$7895$CSxK@))) (g$make-undefined-violation$7896$CSxK@ g$make-undefined-violation$8169$CSxK@ ((case-lambda ((g$C$15503$CSxK@) (record-constructor g$C$15503$CSxK@ g$6465$7892$CSxK@))) (library-letrec*-identity 'g$make-undefined-violation$7896$CSxK@))) (g$undefined-violation?$7897$CSxK@ g$undefined-violation?$8170$CSxK@ ((case-lambda ((g$C$15504$CSxK@) (condition-predicate g$C$15504$CSxK@ g$6464$7890$CSxK@))) (library-letrec*-identity 'g$undefined-violation?$7897$CSxK@))) (g$&undefined-rtd$7898$CSxK@ g$&undefined-rtd$8171$CSxK@ ((case-lambda ((g$C$15505$CSxK@) (g$C$15505$CSxK@ g$6464$7890$CSxK@))) (library-letrec*-identity 'g$&undefined-rtd$7898$CSxK@))) (g$&undefined-rcd$7899$CSxK@ g$&undefined-rcd$8172$CSxK@ ((case-lambda ((g$C$15506$CSxK@) (g$C$15506$CSxK@ g$6465$7892$CSxK@))) (library-letrec*-identity 'g$&undefined-rcd$7899$CSxK@))) (g$6477$7900$CSxK@ g$6477$8173$CSxK@ ((case-lambda ((g$C$15507$CSxK@) (make-record-type-descriptor g$C$15507$CSxK@ '&i/o g$6339$7788$CSxK@ 'g$6480$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6477$7900$CSxK@))) (g$6479$7901$CSxK@ g$6479$8174$CSxK@ ((case-lambda ((g$C$15508$CSxK@) (g$C$15508$CSxK@ '#f))) (library-letrec*-identity 'g$6479$7901$CSxK@))) (g$6478$7902$CSxK@ g$6478$8175$CSxK@ ((case-lambda ((g$C$15509$CSxK@) (make-record-constructor-descriptor g$C$15509$CSxK@ g$6477$7900$CSxK@ g$6340$7790$CSxK@ g$6479$7901$CSxK@))) (library-letrec*-identity 'g$6478$7902$CSxK@))) (g$p?$7905$CSxK@ g$p?$8176$CSxK@ ((case-lambda ((g$C$15510$CSxK@) (record-predicate g$C$15510$CSxK@ g$6477$7900$CSxK@))) (library-letrec*-identity 'g$p?$7905$CSxK@))) (g$make-i/o-error$7906$CSxK@ g$make-i/o-error$8177$CSxK@ ((case-lambda ((g$C$15511$CSxK@) (record-constructor g$C$15511$CSxK@ g$6478$7902$CSxK@))) (library-letrec*-identity 'g$make-i/o-error$7906$CSxK@))) (g$i/o-error?$7907$CSxK@ g$i/o-error?$8178$CSxK@ ((case-lambda ((g$C$15512$CSxK@) (condition-predicate g$C$15512$CSxK@ g$6477$7900$CSxK@))) (library-letrec*-identity 'g$i/o-error?$7907$CSxK@))) (g$&i/o-rtd$7908$CSxK@ g$&i/o-rtd$8179$CSxK@ ((case-lambda ((g$C$15513$CSxK@) (g$C$15513$CSxK@ g$6477$7900$CSxK@))) (library-letrec*-identity 'g$&i/o-rtd$7908$CSxK@))) (g$&i/o-rcd$7909$CSxK@ g$&i/o-rcd$8180$CSxK@ ((case-lambda ((g$C$15514$CSxK@) (g$C$15514$CSxK@ g$6478$7902$CSxK@))) (library-letrec*-identity 'g$&i/o-rcd$7909$CSxK@))) (g$6490$7910$CSxK@ g$6490$8181$CSxK@ ((case-lambda ((g$C$15515$CSxK@) (make-record-type-descriptor g$C$15515$CSxK@ '&i/o-read g$6477$7900$CSxK@ 'g$6493$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6490$7910$CSxK@))) (g$6492$7911$CSxK@ g$6492$8182$CSxK@ ((case-lambda ((g$C$15516$CSxK@) (g$C$15516$CSxK@ '#f))) (library-letrec*-identity 'g$6492$7911$CSxK@))) (g$6491$7912$CSxK@ g$6491$8183$CSxK@ ((case-lambda ((g$C$15517$CSxK@) (make-record-constructor-descriptor g$C$15517$CSxK@ g$6490$7910$CSxK@ g$6478$7902$CSxK@ g$6492$7911$CSxK@))) (library-letrec*-identity 'g$6491$7912$CSxK@))) (g$p?$7915$CSxK@ g$p?$8184$CSxK@ ((case-lambda ((g$C$15518$CSxK@) (record-predicate g$C$15518$CSxK@ g$6490$7910$CSxK@))) (library-letrec*-identity 'g$p?$7915$CSxK@))) (g$make-i/o-read-error$7916$CSxK@ g$make-i/o-read-error$8185$CSxK@ ((case-lambda ((g$C$15519$CSxK@) (record-constructor g$C$15519$CSxK@ g$6491$7912$CSxK@))) (library-letrec*-identity 'g$make-i/o-read-error$7916$CSxK@))) (g$i/o-read-error?$7917$CSxK@ g$i/o-read-error?$8186$CSxK@ ((case-lambda ((g$C$15520$CSxK@) (condition-predicate g$C$15520$CSxK@ g$6490$7910$CSxK@))) (library-letrec*-identity 'g$i/o-read-error?$7917$CSxK@))) (g$&i/o-read-rtd$7918$CSxK@ g$&i/o-read-rtd$8187$CSxK@ ((case-lambda ((g$C$15521$CSxK@) (g$C$15521$CSxK@ g$6490$7910$CSxK@))) (library-letrec*-identity 'g$&i/o-read-rtd$7918$CSxK@))) (g$&i/o-read-rcd$7919$CSxK@ g$&i/o-read-rcd$8188$CSxK@ ((case-lambda ((g$C$15522$CSxK@) (g$C$15522$CSxK@ g$6491$7912$CSxK@))) (library-letrec*-identity 'g$&i/o-read-rcd$7919$CSxK@))) (g$6503$7920$CSxK@ g$6503$8189$CSxK@ ((case-lambda ((g$C$15523$CSxK@) (make-record-type-descriptor g$C$15523$CSxK@ '&i/o-write g$6477$7900$CSxK@ 'g$6506$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6503$7920$CSxK@))) (g$6505$7921$CSxK@ g$6505$8190$CSxK@ ((case-lambda ((g$C$15524$CSxK@) (g$C$15524$CSxK@ '#f))) (library-letrec*-identity 'g$6505$7921$CSxK@))) (g$6504$7922$CSxK@ g$6504$8191$CSxK@ ((case-lambda ((g$C$15525$CSxK@) (make-record-constructor-descriptor g$C$15525$CSxK@ g$6503$7920$CSxK@ g$6478$7902$CSxK@ g$6505$7921$CSxK@))) (library-letrec*-identity 'g$6504$7922$CSxK@))) (g$p?$7925$CSxK@ g$p?$8192$CSxK@ ((case-lambda ((g$C$15526$CSxK@) (record-predicate g$C$15526$CSxK@ g$6503$7920$CSxK@))) (library-letrec*-identity 'g$p?$7925$CSxK@))) (g$make-i/o-write-error$7926$CSxK@ g$make-i/o-write-error$8193$CSxK@ ((case-lambda ((g$C$15527$CSxK@) (record-constructor g$C$15527$CSxK@ g$6504$7922$CSxK@))) (library-letrec*-identity 'g$make-i/o-write-error$7926$CSxK@))) (g$i/o-write-error?$7927$CSxK@ g$i/o-write-error?$8194$CSxK@ ((case-lambda ((g$C$15528$CSxK@) (condition-predicate g$C$15528$CSxK@ g$6503$7920$CSxK@))) (library-letrec*-identity 'g$i/o-write-error?$7927$CSxK@))) (g$&i/o-write-rtd$7928$CSxK@ g$&i/o-write-rtd$8195$CSxK@ ((case-lambda ((g$C$15529$CSxK@) (g$C$15529$CSxK@ g$6503$7920$CSxK@))) (library-letrec*-identity 'g$&i/o-write-rtd$7928$CSxK@))) (g$&i/o-write-rcd$7929$CSxK@ g$&i/o-write-rcd$8196$CSxK@ ((case-lambda ((g$C$15530$CSxK@) (g$C$15530$CSxK@ g$6504$7922$CSxK@))) (library-letrec*-identity 'g$&i/o-write-rcd$7929$CSxK@))) (g$6516$7931$CSxK@ g$6516$8197$CSxK@ ((case-lambda ((g$C$15531$CSxK@) (make-record-type-descriptor g$C$15531$CSxK@ '&i/o-invalid-position g$6477$7900$CSxK@ 'g$6519$CSxK@ '#f '#f '#((immutable position))))) (library-letrec*-identity 'g$6516$7931$CSxK@))) (g$6518$7932$CSxK@ g$6518$8198$CSxK@ ((case-lambda ((g$C$15532$CSxK@) (g$C$15532$CSxK@ '#f))) (library-letrec*-identity 'g$6518$7932$CSxK@))) (g$6517$7933$CSxK@ g$6517$8199$CSxK@ ((case-lambda ((g$C$15533$CSxK@) (make-record-constructor-descriptor g$C$15533$CSxK@ g$6516$7931$CSxK@ g$6478$7902$CSxK@ g$6518$7932$CSxK@))) (library-letrec*-identity 'g$6517$7933$CSxK@))) (g$p?$7936$CSxK@ g$p?$8200$CSxK@ ((case-lambda ((g$C$15534$CSxK@) (record-predicate g$C$15534$CSxK@ g$6516$7931$CSxK@))) (library-letrec*-identity 'g$p?$7936$CSxK@))) (g$make-i/o-invalid-position-error$7937$CSxK@ g$make-i/o-invalid-position-error$8201$CSxK@ ((case-lambda ((g$C$15535$CSxK@) (record-constructor g$C$15535$CSxK@ g$6517$7933$CSxK@))) (library-letrec*-identity 'g$make-i/o-invalid-position-error$7937$CSxK@))) (g$i/o-error-position$7938$CSxK@ g$i/o-error-position$8202$CSxK@ ((case-lambda ((g$C$15536$CSxK@) (record-accessor g$C$15536$CSxK@ g$6516$7931$CSxK@ '0))) (library-letrec*-identity 'g$i/o-error-position$7938$CSxK@))) (g$i/o-invalid-position-error?$7939$CSxK@ g$i/o-invalid-position-error?$8203$CSxK@ ((case-lambda ((g$C$15537$CSxK@) (condition-predicate g$C$15537$CSxK@ g$6516$7931$CSxK@))) (library-letrec*-identity 'g$i/o-invalid-position-error?$7939$CSxK@))) (g$i/o-error-position$7940$CSxK@ g$i/o-error-position$8204$CSxK@ ((case-lambda ((g$C$15538$CSxK@) (condition-accessor g$C$15538$CSxK@ g$6516$7931$CSxK@ g$i/o-error-position$7938$CSxK@))) (library-letrec*-identity 'g$i/o-error-position$7940$CSxK@))) (g$&i/o-invalid-position-rtd$7941$CSxK@ g$&i/o-invalid-position-rtd$8205$CSxK@ ((case-lambda ((g$C$15539$CSxK@) (g$C$15539$CSxK@ g$6516$7931$CSxK@))) (library-letrec*-identity 'g$&i/o-invalid-position-rtd$7941$CSxK@))) (g$&i/o-invalid-position-rcd$7942$CSxK@ g$&i/o-invalid-position-rcd$8206$CSxK@ ((case-lambda ((g$C$15540$CSxK@) (g$C$15540$CSxK@ g$6517$7933$CSxK@))) (library-letrec*-identity 'g$&i/o-invalid-position-rcd$7942$CSxK@))) (g$6531$7944$CSxK@ g$6531$8207$CSxK@ ((case-lambda ((g$C$15541$CSxK@) (make-record-type-descriptor g$C$15541$CSxK@ '&i/o-filename g$6477$7900$CSxK@ 'g$6534$CSxK@ '#f '#f '#((immutable filename))))) (library-letrec*-identity 'g$6531$7944$CSxK@))) (g$6533$7945$CSxK@ g$6533$8208$CSxK@ ((case-lambda ((g$C$15542$CSxK@) (g$C$15542$CSxK@ '#f))) (library-letrec*-identity 'g$6533$7945$CSxK@))) (g$6532$7946$CSxK@ g$6532$8209$CSxK@ ((case-lambda ((g$C$15543$CSxK@) (make-record-constructor-descriptor g$C$15543$CSxK@ g$6531$7944$CSxK@ g$6478$7902$CSxK@ g$6533$7945$CSxK@))) (library-letrec*-identity 'g$6532$7946$CSxK@))) (g$p?$7949$CSxK@ g$p?$8210$CSxK@ ((case-lambda ((g$C$15544$CSxK@) (record-predicate g$C$15544$CSxK@ g$6531$7944$CSxK@))) (library-letrec*-identity 'g$p?$7949$CSxK@))) (g$make-i/o-filename-error$7950$CSxK@ g$make-i/o-filename-error$8211$CSxK@ ((case-lambda ((g$C$15545$CSxK@) (record-constructor g$C$15545$CSxK@ g$6532$7946$CSxK@))) (library-letrec*-identity 'g$make-i/o-filename-error$7950$CSxK@))) (g$i/o-error-filename$7951$CSxK@ g$i/o-error-filename$8212$CSxK@ ((case-lambda ((g$C$15546$CSxK@) (record-accessor g$C$15546$CSxK@ g$6531$7944$CSxK@ '0))) (library-letrec*-identity 'g$i/o-error-filename$7951$CSxK@))) (g$i/o-filename-error?$7952$CSxK@ g$i/o-filename-error?$8213$CSxK@ ((case-lambda ((g$C$15547$CSxK@) (condition-predicate g$C$15547$CSxK@ g$6531$7944$CSxK@))) (library-letrec*-identity 'g$i/o-filename-error?$7952$CSxK@))) (g$i/o-error-filename$7953$CSxK@ g$i/o-error-filename$8214$CSxK@ ((case-lambda ((g$C$15548$CSxK@) (condition-accessor g$C$15548$CSxK@ g$6531$7944$CSxK@ g$i/o-error-filename$7951$CSxK@))) (library-letrec*-identity 'g$i/o-error-filename$7953$CSxK@))) (g$&i/o-filename-rtd$7954$CSxK@ g$&i/o-filename-rtd$8215$CSxK@ ((case-lambda ((g$C$15549$CSxK@) (g$C$15549$CSxK@ g$6531$7944$CSxK@))) (library-letrec*-identity 'g$&i/o-filename-rtd$7954$CSxK@))) (g$&i/o-filename-rcd$7955$CSxK@ g$&i/o-filename-rcd$8216$CSxK@ ((case-lambda ((g$C$15550$CSxK@) (g$C$15550$CSxK@ g$6532$7946$CSxK@))) (library-letrec*-identity 'g$&i/o-filename-rcd$7955$CSxK@))) (g$6546$7956$CSxK@ g$6546$8217$CSxK@ ((case-lambda ((g$C$15551$CSxK@) (make-record-type-descriptor g$C$15551$CSxK@ '&i/o-file-protection g$6531$7944$CSxK@ 'g$6549$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6546$7956$CSxK@))) (g$6548$7957$CSxK@ g$6548$8218$CSxK@ ((case-lambda ((g$C$15552$CSxK@) (g$C$15552$CSxK@ '#f))) (library-letrec*-identity 'g$6548$7957$CSxK@))) (g$6547$7958$CSxK@ g$6547$8219$CSxK@ ((case-lambda ((g$C$15553$CSxK@) (make-record-constructor-descriptor g$C$15553$CSxK@ g$6546$7956$CSxK@ g$6532$7946$CSxK@ g$6548$7957$CSxK@))) (library-letrec*-identity 'g$6547$7958$CSxK@))) (g$p?$7961$CSxK@ g$p?$8220$CSxK@ ((case-lambda ((g$C$15554$CSxK@) (record-predicate g$C$15554$CSxK@ g$6546$7956$CSxK@))) (library-letrec*-identity 'g$p?$7961$CSxK@))) (g$make-i/o-file-protection-error$7962$CSxK@ g$make-i/o-file-protection-error$8221$CSxK@ ((case-lambda ((g$C$15555$CSxK@) (record-constructor g$C$15555$CSxK@ g$6547$7958$CSxK@))) (library-letrec*-identity 'g$make-i/o-file-protection-error$7962$CSxK@))) (g$i/o-file-protection-error?$7963$CSxK@ g$i/o-file-protection-error?$8222$CSxK@ ((case-lambda ((g$C$15556$CSxK@) (condition-predicate g$C$15556$CSxK@ g$6546$7956$CSxK@))) (library-letrec*-identity 'g$i/o-file-protection-error?$7963$CSxK@))) (g$&i/o-file-protection-rtd$7964$CSxK@ g$&i/o-file-protection-rtd$8223$CSxK@ ((case-lambda ((g$C$15557$CSxK@) (g$C$15557$CSxK@ g$6546$7956$CSxK@))) (library-letrec*-identity 'g$&i/o-file-protection-rtd$7964$CSxK@))) (g$&i/o-file-protection-rcd$7965$CSxK@ g$&i/o-file-protection-rcd$8224$CSxK@ ((case-lambda ((g$C$15558$CSxK@) (g$C$15558$CSxK@ g$6547$7958$CSxK@))) (library-letrec*-identity 'g$&i/o-file-protection-rcd$7965$CSxK@))) (g$6559$7966$CSxK@ g$6559$8225$CSxK@ ((case-lambda ((g$C$15559$CSxK@) (make-record-type-descriptor g$C$15559$CSxK@ '&i/o-file-is-read-only g$6546$7956$CSxK@ 'g$6562$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6559$7966$CSxK@))) (g$6561$7967$CSxK@ g$6561$8226$CSxK@ ((case-lambda ((g$C$15560$CSxK@) (g$C$15560$CSxK@ '#f))) (library-letrec*-identity 'g$6561$7967$CSxK@))) (g$6560$7968$CSxK@ g$6560$8227$CSxK@ ((case-lambda ((g$C$15561$CSxK@) (make-record-constructor-descriptor g$C$15561$CSxK@ g$6559$7966$CSxK@ g$6547$7958$CSxK@ g$6561$7967$CSxK@))) (library-letrec*-identity 'g$6560$7968$CSxK@))) (g$p?$7971$CSxK@ g$p?$8228$CSxK@ ((case-lambda ((g$C$15562$CSxK@) (record-predicate g$C$15562$CSxK@ g$6559$7966$CSxK@))) (library-letrec*-identity 'g$p?$7971$CSxK@))) (g$make-i/o-file-is-read-only-error$7972$CSxK@ g$make-i/o-file-is-read-only-error$8229$CSxK@ ((case-lambda ((g$C$15563$CSxK@) (record-constructor g$C$15563$CSxK@ g$6560$7968$CSxK@))) (library-letrec*-identity 'g$make-i/o-file-is-read-only-error$7972$CSxK@))) (g$i/o-file-is-read-only-error?$7973$CSxK@ g$i/o-file-is-read-only-error?$8230$CSxK@ ((case-lambda ((g$C$15564$CSxK@) (condition-predicate g$C$15564$CSxK@ g$6559$7966$CSxK@))) (library-letrec*-identity 'g$i/o-file-is-read-only-error?$7973$CSxK@))) (g$&i/o-file-is-read-only-rtd$7974$CSxK@ g$&i/o-file-is-read-only-rtd$8231$CSxK@ ((case-lambda ((g$C$15565$CSxK@) (g$C$15565$CSxK@ g$6559$7966$CSxK@))) (library-letrec*-identity 'g$&i/o-file-is-read-only-rtd$7974$CSxK@))) (g$&i/o-file-is-read-only-rcd$7975$CSxK@ g$&i/o-file-is-read-only-rcd$8232$CSxK@ ((case-lambda ((g$C$15566$CSxK@) (g$C$15566$CSxK@ g$6560$7968$CSxK@))) (library-letrec*-identity 'g$&i/o-file-is-read-only-rcd$7975$CSxK@))) (g$6572$7976$CSxK@ g$6572$8233$CSxK@ ((case-lambda ((g$C$15567$CSxK@) (make-record-type-descriptor g$C$15567$CSxK@ '&i/o-file-already-exists g$6531$7944$CSxK@ 'g$6575$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6572$7976$CSxK@))) (g$6574$7977$CSxK@ g$6574$8234$CSxK@ ((case-lambda ((g$C$15568$CSxK@) (g$C$15568$CSxK@ '#f))) (library-letrec*-identity 'g$6574$7977$CSxK@))) (g$6573$7978$CSxK@ g$6573$8235$CSxK@ ((case-lambda ((g$C$15569$CSxK@) (make-record-constructor-descriptor g$C$15569$CSxK@ g$6572$7976$CSxK@ g$6532$7946$CSxK@ g$6574$7977$CSxK@))) (library-letrec*-identity 'g$6573$7978$CSxK@))) (g$p?$7981$CSxK@ g$p?$8236$CSxK@ ((case-lambda ((g$C$15570$CSxK@) (record-predicate g$C$15570$CSxK@ g$6572$7976$CSxK@))) (library-letrec*-identity 'g$p?$7981$CSxK@))) (g$make-i/o-file-already-exists-error$7982$CSxK@ g$make-i/o-file-already-exists-error$8237$CSxK@ ((case-lambda ((g$C$15571$CSxK@) (record-constructor g$C$15571$CSxK@ g$6573$7978$CSxK@))) (library-letrec*-identity 'g$make-i/o-file-already-exists-error$7982$CSxK@))) (g$i/o-file-already-exists-error?$7983$CSxK@ g$i/o-file-already-exists-error?$8238$CSxK@ ((case-lambda ((g$C$15572$CSxK@) (condition-predicate g$C$15572$CSxK@ g$6572$7976$CSxK@))) (library-letrec*-identity 'g$i/o-file-already-exists-error?$7983$CSxK@))) (g$&i/o-file-already-exists-rtd$7984$CSxK@ g$&i/o-file-already-exists-rtd$8239$CSxK@ ((case-lambda ((g$C$15573$CSxK@) (g$C$15573$CSxK@ g$6572$7976$CSxK@))) (library-letrec*-identity 'g$&i/o-file-already-exists-rtd$7984$CSxK@))) (g$&i/o-file-already-exists-rcd$7985$CSxK@ g$&i/o-file-already-exists-rcd$8240$CSxK@ ((case-lambda ((g$C$15574$CSxK@) (g$C$15574$CSxK@ g$6573$7978$CSxK@))) (library-letrec*-identity 'g$&i/o-file-already-exists-rcd$7985$CSxK@))) (g$6585$7986$CSxK@ g$6585$8241$CSxK@ ((case-lambda ((g$C$15575$CSxK@) (make-record-type-descriptor g$C$15575$CSxK@ '&i/o-file-does-not-exist g$6531$7944$CSxK@ 'g$6588$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6585$7986$CSxK@))) (g$6587$7987$CSxK@ g$6587$8242$CSxK@ ((case-lambda ((g$C$15576$CSxK@) (g$C$15576$CSxK@ '#f))) (library-letrec*-identity 'g$6587$7987$CSxK@))) (g$6586$7988$CSxK@ g$6586$8243$CSxK@ ((case-lambda ((g$C$15577$CSxK@) (make-record-constructor-descriptor g$C$15577$CSxK@ g$6585$7986$CSxK@ g$6532$7946$CSxK@ g$6587$7987$CSxK@))) (library-letrec*-identity 'g$6586$7988$CSxK@))) (g$p?$7991$CSxK@ g$p?$8244$CSxK@ ((case-lambda ((g$C$15578$CSxK@) (record-predicate g$C$15578$CSxK@ g$6585$7986$CSxK@))) (library-letrec*-identity 'g$p?$7991$CSxK@))) (g$make-i/o-file-does-not-exist-error$7992$CSxK@ g$make-i/o-file-does-not-exist-error$8245$CSxK@ ((case-lambda ((g$C$15579$CSxK@) (record-constructor g$C$15579$CSxK@ g$6586$7988$CSxK@))) (library-letrec*-identity 'g$make-i/o-file-does-not-exist-error$7992$CSxK@))) (g$i/o-file-does-not-exist-error?$7993$CSxK@ g$i/o-file-does-not-exist-error?$8246$CSxK@ ((case-lambda ((g$C$15580$CSxK@) (condition-predicate g$C$15580$CSxK@ g$6585$7986$CSxK@))) (library-letrec*-identity 'g$i/o-file-does-not-exist-error?$7993$CSxK@))) (g$&i/o-file-does-not-exist-rtd$7994$CSxK@ g$&i/o-file-does-not-exist-rtd$8247$CSxK@ ((case-lambda ((g$C$15581$CSxK@) (g$C$15581$CSxK@ g$6585$7986$CSxK@))) (library-letrec*-identity 'g$&i/o-file-does-not-exist-rtd$7994$CSxK@))) (g$&i/o-file-does-not-exist-rcd$7995$CSxK@ g$&i/o-file-does-not-exist-rcd$8248$CSxK@ ((case-lambda ((g$C$15582$CSxK@) (g$C$15582$CSxK@ g$6586$7988$CSxK@))) (library-letrec*-identity 'g$&i/o-file-does-not-exist-rcd$7995$CSxK@))) (g$6598$7997$CSxK@ g$6598$8249$CSxK@ ((case-lambda ((g$C$15583$CSxK@) (make-record-type-descriptor g$C$15583$CSxK@ '&i/o-port g$6477$7900$CSxK@ 'g$6601$CSxK@ '#f '#f '#((immutable port))))) (library-letrec*-identity 'g$6598$7997$CSxK@))) (g$6600$7998$CSxK@ g$6600$8250$CSxK@ ((case-lambda ((g$C$15584$CSxK@) (g$C$15584$CSxK@ '#f))) (library-letrec*-identity 'g$6600$7998$CSxK@))) (g$6599$7999$CSxK@ g$6599$8251$CSxK@ ((case-lambda ((g$C$15585$CSxK@) (make-record-constructor-descriptor g$C$15585$CSxK@ g$6598$7997$CSxK@ g$6478$7902$CSxK@ g$6600$7998$CSxK@))) (library-letrec*-identity 'g$6599$7999$CSxK@))) (g$p?$8002$CSxK@ g$p?$8252$CSxK@ ((case-lambda ((g$C$15586$CSxK@) (record-predicate g$C$15586$CSxK@ g$6598$7997$CSxK@))) (library-letrec*-identity 'g$p?$8002$CSxK@))) (g$make-i/o-port-error$8003$CSxK@ g$make-i/o-port-error$8253$CSxK@ ((case-lambda ((g$C$15587$CSxK@) (record-constructor g$C$15587$CSxK@ g$6599$7999$CSxK@))) (library-letrec*-identity 'g$make-i/o-port-error$8003$CSxK@))) (g$i/o-error-port$8004$CSxK@ g$i/o-error-port$8254$CSxK@ ((case-lambda ((g$C$15588$CSxK@) (record-accessor g$C$15588$CSxK@ g$6598$7997$CSxK@ '0))) (library-letrec*-identity 'g$i/o-error-port$8004$CSxK@))) (g$i/o-port-error?$8005$CSxK@ g$i/o-port-error?$8255$CSxK@ ((case-lambda ((g$C$15589$CSxK@) (condition-predicate g$C$15589$CSxK@ g$6598$7997$CSxK@))) (library-letrec*-identity 'g$i/o-port-error?$8005$CSxK@))) (g$i/o-error-port$8006$CSxK@ g$i/o-error-port$8256$CSxK@ ((case-lambda ((g$C$15590$CSxK@) (condition-accessor g$C$15590$CSxK@ g$6598$7997$CSxK@ g$i/o-error-port$8004$CSxK@))) (library-letrec*-identity 'g$i/o-error-port$8006$CSxK@))) (g$&i/o-port-rtd$8007$CSxK@ g$&i/o-port-rtd$8257$CSxK@ ((case-lambda ((g$C$15591$CSxK@) (g$C$15591$CSxK@ g$6598$7997$CSxK@))) (library-letrec*-identity 'g$&i/o-port-rtd$8007$CSxK@))) (g$&i/o-port-rcd$8008$CSxK@ g$&i/o-port-rcd$8258$CSxK@ ((case-lambda ((g$C$15592$CSxK@) (g$C$15592$CSxK@ g$6599$7999$CSxK@))) (library-letrec*-identity 'g$&i/o-port-rcd$8008$CSxK@))) (g$6613$8009$CSxK@ g$6613$8259$CSxK@ ((case-lambda ((g$C$15593$CSxK@) (make-record-type-descriptor g$C$15593$CSxK@ '&i/o-decoding g$6598$7997$CSxK@ 'g$6616$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6613$8009$CSxK@))) (g$6615$8010$CSxK@ g$6615$8260$CSxK@ ((case-lambda ((g$C$15594$CSxK@) (g$C$15594$CSxK@ '#f))) (library-letrec*-identity 'g$6615$8010$CSxK@))) (g$6614$8011$CSxK@ g$6614$8261$CSxK@ ((case-lambda ((g$C$15595$CSxK@) (make-record-constructor-descriptor g$C$15595$CSxK@ g$6613$8009$CSxK@ g$6599$7999$CSxK@ g$6615$8010$CSxK@))) (library-letrec*-identity 'g$6614$8011$CSxK@))) (g$p?$8014$CSxK@ g$p?$8262$CSxK@ ((case-lambda ((g$C$15596$CSxK@) (record-predicate g$C$15596$CSxK@ g$6613$8009$CSxK@))) (library-letrec*-identity 'g$p?$8014$CSxK@))) (g$make-i/o-decoding-error$8015$CSxK@ g$make-i/o-decoding-error$8263$CSxK@ ((case-lambda ((g$C$15597$CSxK@) (record-constructor g$C$15597$CSxK@ g$6614$8011$CSxK@))) (library-letrec*-identity 'g$make-i/o-decoding-error$8015$CSxK@))) (g$i/o-decoding-error?$8016$CSxK@ g$i/o-decoding-error?$8264$CSxK@ ((case-lambda ((g$C$15598$CSxK@) (condition-predicate g$C$15598$CSxK@ g$6613$8009$CSxK@))) (library-letrec*-identity 'g$i/o-decoding-error?$8016$CSxK@))) (g$&i/o-decoding-rtd$8017$CSxK@ g$&i/o-decoding-rtd$8265$CSxK@ ((case-lambda ((g$C$15599$CSxK@) (g$C$15599$CSxK@ g$6613$8009$CSxK@))) (library-letrec*-identity 'g$&i/o-decoding-rtd$8017$CSxK@))) (g$&i/o-decoding-rcd$8018$CSxK@ g$&i/o-decoding-rcd$8266$CSxK@ ((case-lambda ((g$C$15600$CSxK@) (g$C$15600$CSxK@ g$6614$8011$CSxK@))) (library-letrec*-identity 'g$&i/o-decoding-rcd$8018$CSxK@))) (g$6626$8020$CSxK@ g$6626$8267$CSxK@ ((case-lambda ((g$C$15601$CSxK@) (make-record-type-descriptor g$C$15601$CSxK@ '&i/o-encoding g$6598$7997$CSxK@ 'g$6629$CSxK@ '#f '#f '#((immutable char))))) (library-letrec*-identity 'g$6626$8020$CSxK@))) (g$6628$8021$CSxK@ g$6628$8268$CSxK@ ((case-lambda ((g$C$15602$CSxK@) (g$C$15602$CSxK@ '#f))) (library-letrec*-identity 'g$6628$8021$CSxK@))) (g$6627$8022$CSxK@ g$6627$8269$CSxK@ ((case-lambda ((g$C$15603$CSxK@) (make-record-constructor-descriptor g$C$15603$CSxK@ g$6626$8020$CSxK@ g$6599$7999$CSxK@ g$6628$8021$CSxK@))) (library-letrec*-identity 'g$6627$8022$CSxK@))) (g$p?$8025$CSxK@ g$p?$8270$CSxK@ ((case-lambda ((g$C$15604$CSxK@) (record-predicate g$C$15604$CSxK@ g$6626$8020$CSxK@))) (library-letrec*-identity 'g$p?$8025$CSxK@))) (g$make-i/o-encoding-error$8026$CSxK@ g$make-i/o-encoding-error$8271$CSxK@ ((case-lambda ((g$C$15605$CSxK@) (record-constructor g$C$15605$CSxK@ g$6627$8022$CSxK@))) (library-letrec*-identity 'g$make-i/o-encoding-error$8026$CSxK@))) (g$i/o-encoding-error-char$8027$CSxK@ g$i/o-encoding-error-char$8272$CSxK@ ((case-lambda ((g$C$15606$CSxK@) (record-accessor g$C$15606$CSxK@ g$6626$8020$CSxK@ '0))) (library-letrec*-identity 'g$i/o-encoding-error-char$8027$CSxK@))) (g$i/o-encoding-error?$8028$CSxK@ g$i/o-encoding-error?$8273$CSxK@ ((case-lambda ((g$C$15607$CSxK@) (condition-predicate g$C$15607$CSxK@ g$6626$8020$CSxK@))) (library-letrec*-identity 'g$i/o-encoding-error?$8028$CSxK@))) (g$i/o-encoding-error-char$8029$CSxK@ g$i/o-encoding-error-char$8274$CSxK@ ((case-lambda ((g$C$15608$CSxK@) (condition-accessor g$C$15608$CSxK@ g$6626$8020$CSxK@ g$i/o-encoding-error-char$8027$CSxK@))) (library-letrec*-identity 'g$i/o-encoding-error-char$8029$CSxK@))) (g$&i/o-encoding-rtd$8030$CSxK@ g$&i/o-encoding-rtd$8275$CSxK@ ((case-lambda ((g$C$15609$CSxK@) (g$C$15609$CSxK@ g$6626$8020$CSxK@))) (library-letrec*-identity 'g$&i/o-encoding-rtd$8030$CSxK@))) (g$&i/o-encoding-rcd$8031$CSxK@ g$&i/o-encoding-rcd$8276$CSxK@ ((case-lambda ((g$C$15610$CSxK@) (g$C$15610$CSxK@ g$6627$8022$CSxK@))) (library-letrec*-identity 'g$&i/o-encoding-rcd$8031$CSxK@))) (g$6641$8032$CSxK@ g$6641$8277$CSxK@ ((case-lambda ((g$C$15611$CSxK@) (make-record-type-descriptor g$C$15611$CSxK@ '&no-infinities g$6421$7854$CSxK@ 'g$6644$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6641$8032$CSxK@))) (g$6643$8033$CSxK@ g$6643$8278$CSxK@ ((case-lambda ((g$C$15612$CSxK@) (g$C$15612$CSxK@ '#f))) (library-letrec*-identity 'g$6643$8033$CSxK@))) (g$6642$8034$CSxK@ g$6642$8279$CSxK@ ((case-lambda ((g$C$15613$CSxK@) (make-record-constructor-descriptor g$C$15613$CSxK@ g$6641$8032$CSxK@ g$6422$7856$CSxK@ g$6643$8033$CSxK@))) (library-letrec*-identity 'g$6642$8034$CSxK@))) (g$p?$8037$CSxK@ g$p?$8280$CSxK@ ((case-lambda ((g$C$15614$CSxK@) (record-predicate g$C$15614$CSxK@ g$6641$8032$CSxK@))) (library-letrec*-identity 'g$p?$8037$CSxK@))) (g$make-no-infinities-violation$8038$CSxK@ g$make-no-infinities-violation$8281$CSxK@ ((case-lambda ((g$C$15615$CSxK@) (record-constructor g$C$15615$CSxK@ g$6642$8034$CSxK@))) (library-letrec*-identity 'g$make-no-infinities-violation$8038$CSxK@))) (g$no-infinities-violation?$8039$CSxK@ g$no-infinities-violation?$8282$CSxK@ ((case-lambda ((g$C$15616$CSxK@) (condition-predicate g$C$15616$CSxK@ g$6641$8032$CSxK@))) (library-letrec*-identity 'g$no-infinities-violation?$8039$CSxK@))) (g$&no-infinities-rtd$8040$CSxK@ g$&no-infinities-rtd$8283$CSxK@ ((case-lambda ((g$C$15617$CSxK@) (g$C$15617$CSxK@ g$6641$8032$CSxK@))) (library-letrec*-identity 'g$&no-infinities-rtd$8040$CSxK@))) (g$&no-infinities-rcd$8041$CSxK@ g$&no-infinities-rcd$8284$CSxK@ ((case-lambda ((g$C$15618$CSxK@) (g$C$15618$CSxK@ g$6642$8034$CSxK@))) (library-letrec*-identity 'g$&no-infinities-rcd$8041$CSxK@))) (g$6654$8042$CSxK@ g$6654$8285$CSxK@ ((case-lambda ((g$C$15619$CSxK@) (make-record-type-descriptor g$C$15619$CSxK@ '&no-nans g$6421$7854$CSxK@ 'g$6657$CSxK@ '#f '#f '#()))) (library-letrec*-identity 'g$6654$8042$CSxK@))) (g$6656$8043$CSxK@ g$6656$8286$CSxK@ ((case-lambda ((g$C$15620$CSxK@) (g$C$15620$CSxK@ '#f))) (library-letrec*-identity 'g$6656$8043$CSxK@))) (g$6655$8044$CSxK@ g$6655$8287$CSxK@ ((case-lambda ((g$C$15621$CSxK@) (make-record-constructor-descriptor g$C$15621$CSxK@ g$6654$8042$CSxK@ g$6422$7856$CSxK@ g$6656$8043$CSxK@))) (library-letrec*-identity 'g$6655$8044$CSxK@))) (g$p?$8047$CSxK@ g$p?$8288$CSxK@ ((case-lambda ((g$C$15622$CSxK@) (record-predicate g$C$15622$CSxK@ g$6654$8042$CSxK@))) (library-letrec*-identity 'g$p?$8047$CSxK@))) (g$make-no-nans-violation$8048$CSxK@ g$make-no-nans-violation$8289$CSxK@ ((case-lambda ((g$C$15623$CSxK@) (record-constructor g$C$15623$CSxK@ g$6655$8044$CSxK@))) (library-letrec*-identity 'g$make-no-nans-violation$8048$CSxK@))) (g$no-nans-violation?$8049$CSxK@ g$no-nans-violation?$8290$CSxK@ ((case-lambda ((g$C$15624$CSxK@) (condition-predicate g$C$15624$CSxK@ g$6654$8042$CSxK@))) (library-letrec*-identity 'g$no-nans-violation?$8049$CSxK@))) (g$&no-nans-rtd$8050$CSxK@ g$&no-nans-rtd$8291$CSxK@ ((case-lambda ((g$C$15625$CSxK@) (g$C$15625$CSxK@ g$6654$8042$CSxK@))) (library-letrec*-identity 'g$&no-nans-rtd$8050$CSxK@))) (g$&no-nans-rcd$8051$CSxK@ g$&no-nans-rcd$8292$CSxK@ ((case-lambda ((g$C$15626$CSxK@) (g$C$15626$CSxK@ g$6655$8044$CSxK@))) (library-letrec*-identity 'g$&no-nans-rcd$8051$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme mutable-pairs) ((g$append!$8293$CSxK@ g$append!$8299$CSxK@ ((case-lambda ((g$C$15639$CSxK@) (g$C$15639$CSxK@ (case-lambda ((g$C$15634$CSxK@ g$a$8294$CSxK@ . g$b$8295$CSxK@) (null? (case-lambda ((g$T$15635$CSxK@) (if g$T$15635$CSxK@ (g$C$15634$CSxK@ g$b$8295$CSxK@) (null? (case-lambda ((g$T$15636$CSxK@) (if g$T$15636$CSxK@ (g$C$15634$CSxK@ g$a$8294$CSxK@) ((case-lambda ((g$C$15633$CSxK@ g$f$8296$CSxK@) ((case-lambda ((g$C$15628$CSxK@ g$f$15627$CSxK@) (begin (set! g$f$8296$CSxK@ g$f$15627$CSxK@) (g$C$15628$CSxK@ g$f$8296$CSxK@)))) g$C$15633$CSxK@ (case-lambda ((g$C$15631$CSxK@ g$a$8297$CSxK@) (cdr (case-lambda ((g$V$15632$CSxK@) ((case-lambda ((g$C$15629$CSxK@ g$n$8298$CSxK@) (null? (case-lambda ((g$T$15630$CSxK@) (if g$T$15630$CSxK@ (set-cdr! g$C$15629$CSxK@ g$a$8297$CSxK@ g$b$8295$CSxK@) (g$f$8296$CSxK@ g$C$15629$CSxK@ g$n$8298$CSxK@)))) g$n$8298$CSxK@))) g$C$15631$CSxK@ g$V$15632$CSxK@))) g$a$8297$CSxK@)))))) (case-lambda ((g$V$15637$CSxK@) (g$V$15637$CSxK@ (case-lambda (g$IGNORE$15638$CSxK@ (g$C$15634$CSxK@ g$a$8294$CSxK@))) g$a$8294$CSxK@))) uninitialized)))) g$b$8295$CSxK@)))) g$a$8294$CSxK@)))))) (library-letrec*-identity 'g$append!$8293$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme mutable-strings) () (void identity-for-cps))(library-letrec* (ironscheme programs) () (void identity-for-cps))(library-letrec* (ironscheme r5rs) ((g$inexact->exact$8300$CSxK@ g$inexact->exact$8320$CSxK@ ((case-lambda ((g$C$15690$CSxK@) (g$C$15690$CSxK@ exact))) (library-letrec*-identity 'g$inexact->exact$8300$CSxK@))) (g$exact->inexact$8301$CSxK@ g$exact->inexact$8321$CSxK@ ((case-lambda ((g$C$15691$CSxK@) (g$C$15691$CSxK@ inexact))) (library-letrec*-identity 'g$exact->inexact$8301$CSxK@))) (g$sign$8302$CSxK@ g$sign$8322$CSxK@ ((case-lambda ((g$C$15692$CSxK@) (g$C$15692$CSxK@ (case-lambda ((g$C$15640$CSxK@ g$n$8308$CSxK@) (> (case-lambda ((g$T$15641$CSxK@) (if g$T$15641$CSxK@ (g$C$15640$CSxK@ '1) (< (case-lambda ((g$T$15642$CSxK@) (if g$T$15642$CSxK@ (g$C$15640$CSxK@ '-1) (g$C$15640$CSxK@ '0)))) g$n$8308$CSxK@ '0)))) g$n$8308$CSxK@ '0)))))) (library-letrec*-identity 'g$sign$8302$CSxK@))) (g$quotient$8303$CSxK@ g$quotient$8323$CSxK@ ((case-lambda ((g$C$15693$CSxK@) (g$C$15693$CSxK@ (case-lambda ((g$C$15643$CSxK@ g$n1$8309$CSxK@ g$n2$8310$CSxK@) ((case-lambda ((g$J$15654$CSxK@) (integer-valued? (case-lambda ((g$V$15655$CSxK@) (not (case-lambda ((g$T$15656$CSxK@) (if g$T$15656$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15654$CSxK@ 'quotient '"not an integer" g$n1$8309$CSxK@) (void g$J$15654$CSxK@)))) g$V$15655$CSxK@))) g$n1$8309$CSxK@))) (case-lambda (g$IGNORE$15644$CSxK@ ((case-lambda ((g$J$15651$CSxK@) (integer-valued? (case-lambda ((g$V$15652$CSxK@) (not (case-lambda ((g$T$15653$CSxK@) (if g$T$15653$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15651$CSxK@ 'quotient '"not an integer" g$n2$8310$CSxK@) (void g$J$15651$CSxK@)))) g$V$15652$CSxK@))) g$n2$8310$CSxK@))) (case-lambda (g$IGNORE$15645$CSxK@ (abs (case-lambda ((g$V$15646$CSxK@) (abs (case-lambda ((g$V$15647$CSxK@) (g$div$7375$CSxK@ (case-lambda ((g$V$15648$CSxK@) (g$sign$8302$CSxK@ (case-lambda ((g$V$15649$CSxK@) (g$sign$8302$CSxK@ (case-lambda ((g$V$15650$CSxK@) (* g$C$15643$CSxK@ g$V$15650$CSxK@ g$V$15649$CSxK@ g$V$15648$CSxK@))) g$n1$8309$CSxK@))) g$n2$8310$CSxK@))) g$V$15647$CSxK@ g$V$15646$CSxK@))) g$n1$8309$CSxK@))) g$n2$8310$CSxK@)))))))))))) (library-letrec*-identity 'g$quotient$8303$CSxK@))) (g$remainder$8304$CSxK@ g$remainder$8324$CSxK@ ((case-lambda ((g$C$15694$CSxK@) (g$C$15694$CSxK@ (case-lambda ((g$C$15657$CSxK@ g$n1$8311$CSxK@ g$n2$8312$CSxK@) ((case-lambda ((g$J$15667$CSxK@) (integer-valued? (case-lambda ((g$V$15668$CSxK@) (not (case-lambda ((g$T$15669$CSxK@) (if g$T$15669$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15667$CSxK@ 'remainder '"not an integer" g$n1$8311$CSxK@) (void g$J$15667$CSxK@)))) g$V$15668$CSxK@))) g$n1$8311$CSxK@))) (case-lambda (g$IGNORE$15658$CSxK@ ((case-lambda ((g$J$15664$CSxK@) (integer-valued? (case-lambda ((g$V$15665$CSxK@) (not (case-lambda ((g$T$15666$CSxK@) (if g$T$15666$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15664$CSxK@ 'remainder '"not an integer" g$n2$8312$CSxK@) (void g$J$15664$CSxK@)))) g$V$15665$CSxK@))) g$n2$8312$CSxK@))) (case-lambda (g$IGNORE$15659$CSxK@ (abs (case-lambda ((g$V$15660$CSxK@) (abs (case-lambda ((g$V$15661$CSxK@) (g$mod$7377$CSxK@ (case-lambda ((g$V$15662$CSxK@) (g$sign$8302$CSxK@ (case-lambda ((g$V$15663$CSxK@) (* g$C$15657$CSxK@ g$V$15663$CSxK@ g$V$15662$CSxK@))) g$n1$8311$CSxK@))) g$V$15661$CSxK@ g$V$15660$CSxK@))) g$n1$8311$CSxK@))) g$n2$8312$CSxK@)))))))))))) (library-letrec*-identity 'g$remainder$8304$CSxK@))) (g$modulo$8305$CSxK@ g$modulo$8325$CSxK@ ((case-lambda ((g$C$15695$CSxK@) (g$C$15695$CSxK@ (case-lambda ((g$C$15670$CSxK@ g$n1$8313$CSxK@ g$n2$8314$CSxK@) ((case-lambda ((g$J$15681$CSxK@) (integer-valued? (case-lambda ((g$V$15682$CSxK@) (not (case-lambda ((g$T$15683$CSxK@) (if g$T$15683$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15681$CSxK@ 'modulo '"not an integer" g$n1$8313$CSxK@) (void g$J$15681$CSxK@)))) g$V$15682$CSxK@))) g$n1$8313$CSxK@))) (case-lambda (g$IGNORE$15671$CSxK@ ((case-lambda ((g$J$15678$CSxK@) (integer-valued? (case-lambda ((g$V$15679$CSxK@) (not (case-lambda ((g$T$15680$CSxK@) (if g$T$15680$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15678$CSxK@ 'modulo '"not an integer" g$n2$8314$CSxK@) (void g$J$15678$CSxK@)))) g$V$15679$CSxK@))) g$n2$8314$CSxK@))) (case-lambda (g$IGNORE$15672$CSxK@ (abs (case-lambda ((g$V$15673$CSxK@) (g$sign$8302$CSxK@ (case-lambda ((g$V$15674$CSxK@) (* (case-lambda ((g$V$15675$CSxK@) (g$mod$7377$CSxK@ (case-lambda ((g$V$15676$CSxK@) (g$sign$8302$CSxK@ (case-lambda ((g$V$15677$CSxK@) (* g$C$15670$CSxK@ g$V$15677$CSxK@ g$V$15676$CSxK@))) g$n2$8314$CSxK@))) g$V$15675$CSxK@ g$V$15673$CSxK@))) g$V$15674$CSxK@ g$n1$8313$CSxK@))) g$n2$8314$CSxK@))) g$n2$8314$CSxK@)))))))))))) (library-letrec*-identity 'g$modulo$8305$CSxK@))) (g$make-promise$8306$CSxK@ g$make-promise$8326$CSxK@ ((case-lambda ((g$C$15696$CSxK@) (g$C$15696$CSxK@ (case-lambda ((g$C$15688$CSxK@ g$proc$8315$CSxK@) ((case-lambda ((g$C$15687$CSxK@ g$result-ready?$8316$CSxK@ g$result$8317$CSxK@) (g$C$15687$CSxK@ (case-lambda ((g$C$15685$CSxK@) (if g$result-ready?$8316$CSxK@ (g$C$15685$CSxK@ g$result$8317$CSxK@) (g$proc$8315$CSxK@ (case-lambda ((g$V$15686$CSxK@) ((case-lambda ((g$C$15684$CSxK@ g$x$8318$CSxK@) (if g$result-ready?$8316$CSxK@ (g$C$15684$CSxK@ g$result$8317$CSxK@) (begin (set! g$result-ready?$8316$CSxK@ '#t) (begin (set! g$result$8317$CSxK@ g$x$8318$CSxK@) (g$C$15684$CSxK@ g$result$8317$CSxK@)))))) g$C$15685$CSxK@ g$V$15686$CSxK@)))))))))) g$C$15688$CSxK@ '#f '#f)))))) (library-letrec*-identity 'g$make-promise$8306$CSxK@))) (g$force$8307$CSxK@ g$force$8327$CSxK@ ((case-lambda ((g$C$15697$CSxK@) (g$C$15697$CSxK@ (case-lambda ((g$C$15689$CSxK@ g$object$8319$CSxK@) (g$object$8319$CSxK@ g$C$15689$CSxK@)))))) (library-letrec*-identity 'g$force$8307$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme sorting) ((g$split$8328$CSxK@ g$split$8353$CSxK@ ((case-lambda ((g$C$15750$CSxK@) (g$C$15750$CSxK@ (case-lambda ((g$C$15712$CSxK@ g$ls$8332$CSxK@) ((case-lambda ((g$C$15711$CSxK@ g$loop$8333$CSxK@) ((case-lambda ((g$C$15699$CSxK@ g$loop$15698$CSxK@) (begin (set! g$loop$8333$CSxK@ g$loop$15698$CSxK@) (g$C$15699$CSxK@ g$loop$8333$CSxK@)))) g$C$15711$CSxK@ (case-lambda ((g$C$15700$CSxK@ g$rest$8334$CSxK@ g$left$8335$CSxK@ g$right$8336$CSxK@) (null? (case-lambda ((g$T$15701$CSxK@) (if g$T$15701$CSxK@ (cons g$C$15700$CSxK@ g$left$8335$CSxK@ g$right$8336$CSxK@) (cdr (case-lambda ((g$V$15702$CSxK@) (null? (case-lambda ((g$T$15703$CSxK@) (if g$T$15703$CSxK@ (car (case-lambda ((g$V$15704$CSxK@) (cons (case-lambda ((g$V$15705$CSxK@) (cons g$C$15700$CSxK@ g$V$15705$CSxK@ g$right$8336$CSxK@))) g$V$15704$CSxK@ g$left$8335$CSxK@))) g$rest$8334$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$15706$CSxK@) (cons (case-lambda ((g$V$15707$CSxK@) (car (case-lambda ((g$V$15708$CSxK@) (cons (case-lambda ((g$V$15709$CSxK@) (g$cddr$7395$CSxK@ (case-lambda ((g$V$15710$CSxK@) (g$loop$8333$CSxK@ g$C$15700$CSxK@ g$V$15710$CSxK@ g$V$15709$CSxK@ g$V$15707$CSxK@))) g$rest$8334$CSxK@))) g$V$15708$CSxK@ g$left$8335$CSxK@))) g$rest$8334$CSxK@))) g$V$15706$CSxK@ g$right$8336$CSxK@))) g$rest$8334$CSxK@)))) g$V$15702$CSxK@))) g$rest$8334$CSxK@)))) g$rest$8334$CSxK@)))))) (case-lambda ((g$V$15713$CSxK@) (g$V$15713$CSxK@ g$C$15712$CSxK@ g$ls$8332$CSxK@ '() '()))) uninitialized)))))) (library-letrec*-identity 'g$split$8328$CSxK@))) (g$reverse-it$8329$CSxK@ g$reverse-it$8354$CSxK@ ((case-lambda ((g$C$15751$CSxK@) (g$C$15751$CSxK@ (case-lambda ((g$C$15714$CSxK@ g$head$8337$CSxK@ g$tail$8338$CSxK@) (null? (case-lambda ((g$T$15715$CSxK@) (if g$T$15715$CSxK@ (g$C$15714$CSxK@ g$tail$8338$CSxK@) (car (case-lambda ((g$V$15716$CSxK@) (cons (case-lambda ((g$V$15717$CSxK@) (cdr (case-lambda ((g$V$15718$CSxK@) (g$reverse-it$8329$CSxK@ g$C$15714$CSxK@ g$V$15718$CSxK@ g$V$15717$CSxK@))) g$head$8337$CSxK@))) g$V$15716$CSxK@ g$tail$8338$CSxK@))) g$head$8337$CSxK@)))) g$head$8337$CSxK@)))))) (library-letrec*-identity 'g$reverse-it$8329$CSxK@))) (g$merge$8330$CSxK@ g$merge$8355$CSxK@ ((case-lambda ((g$C$15752$CSxK@) (g$C$15752$CSxK@ (case-lambda ((g$C$15733$CSxK@ g$list-1$8339$CSxK@ g$list-2$8340$CSxK@ g$precedes?$8341$CSxK@) ((case-lambda ((g$C$15732$CSxK@ g$loop$8342$CSxK@) ((case-lambda ((g$C$15720$CSxK@ g$loop$15719$CSxK@) (begin (set! g$loop$8342$CSxK@ g$loop$15719$CSxK@) (g$C$15720$CSxK@ g$loop$8342$CSxK@)))) g$C$15732$CSxK@ (case-lambda ((g$C$15727$CSxK@ g$source-1$8343$CSxK@ g$source-2$8344$CSxK@ g$so-far$8345$CSxK@) (null? (case-lambda ((g$T$15728$CSxK@) (if g$T$15728$CSxK@ (g$reverse-it$8329$CSxK@ g$C$15727$CSxK@ g$so-far$8345$CSxK@ g$source-2$8344$CSxK@) (null? (case-lambda ((g$T$15729$CSxK@) (if g$T$15729$CSxK@ (g$reverse-it$8329$CSxK@ g$C$15727$CSxK@ g$so-far$8345$CSxK@ g$source-1$8343$CSxK@) (car (case-lambda ((g$V$15730$CSxK@) (car (case-lambda ((g$V$15731$CSxK@) ((case-lambda ((g$C$15721$CSxK@ g$car-1$8346$CSxK@ g$car-2$8347$CSxK@) (g$precedes?$8341$CSxK@ (case-lambda ((g$T$15722$CSxK@) (if g$T$15722$CSxK@ (cons (case-lambda ((g$V$15723$CSxK@) (cdr (case-lambda ((g$V$15724$CSxK@) (g$loop$8342$CSxK@ g$C$15721$CSxK@ g$source-1$8343$CSxK@ g$V$15724$CSxK@ g$V$15723$CSxK@))) g$source-2$8344$CSxK@))) g$car-2$8347$CSxK@ g$so-far$8345$CSxK@) (cons (case-lambda ((g$V$15725$CSxK@) (cdr (case-lambda ((g$V$15726$CSxK@) (g$loop$8342$CSxK@ g$C$15721$CSxK@ g$source-2$8344$CSxK@ g$V$15726$CSxK@ g$V$15725$CSxK@))) g$source-1$8343$CSxK@))) g$car-1$8346$CSxK@ g$so-far$8345$CSxK@)))) g$car-2$8347$CSxK@ g$car-1$8346$CSxK@))) g$C$15727$CSxK@ g$V$15731$CSxK@ g$V$15730$CSxK@))) g$source-1$8343$CSxK@))) g$source-2$8344$CSxK@)))) g$source-2$8344$CSxK@)))) g$source-1$8343$CSxK@)))))) (case-lambda ((g$V$15734$CSxK@) (g$V$15734$CSxK@ g$C$15733$CSxK@ g$list-1$8339$CSxK@ g$list-2$8340$CSxK@ '()))) uninitialized)))))) (library-letrec*-identity 'g$merge$8330$CSxK@))) (g$list-sort$8331$CSxK@ g$list-sort$8356$CSxK@ ((case-lambda ((g$C$15753$CSxK@) (g$C$15753$CSxK@ (case-lambda ((g$C$15747$CSxK@ g$precedes?$8348$CSxK@ g$ls$8349$CSxK@) (null? (case-lambda ((g$T$15748$CSxK@) (if g$T$15748$CSxK@ (g$C$15747$CSxK@ '()) ((case-lambda ((g$C$15746$CSxK@ g$helper$8350$CSxK@) ((case-lambda ((g$C$15736$CSxK@ g$helper$15735$CSxK@) (begin (set! g$helper$8350$CSxK@ g$helper$15735$CSxK@) (g$C$15736$CSxK@ g$helper$8350$CSxK@)))) g$C$15746$CSxK@ (case-lambda ((g$C$15742$CSxK@ g$piece$8351$CSxK@) (cdr (case-lambda ((g$V$15743$CSxK@) (null? (case-lambda ((g$T$15744$CSxK@) (if g$T$15744$CSxK@ (g$C$15742$CSxK@ g$piece$8351$CSxK@) (g$split$8328$CSxK@ (case-lambda ((g$V$15745$CSxK@) ((case-lambda ((g$C$15737$CSxK@ g$parts$8352$CSxK@) (cdr (case-lambda ((g$V$15738$CSxK@) (g$helper$8350$CSxK@ (case-lambda ((g$V$15739$CSxK@) (car (case-lambda ((g$V$15740$CSxK@) (g$helper$8350$CSxK@ (case-lambda ((g$V$15741$CSxK@) (g$merge$8330$CSxK@ g$C$15737$CSxK@ g$V$15741$CSxK@ g$V$15739$CSxK@ g$precedes?$8348$CSxK@))) g$V$15740$CSxK@))) g$parts$8352$CSxK@))) g$V$15738$CSxK@))) g$parts$8352$CSxK@))) g$C$15742$CSxK@ g$V$15745$CSxK@))) g$piece$8351$CSxK@)))) g$V$15743$CSxK@))) g$piece$8351$CSxK@)))))) (case-lambda ((g$V$15749$CSxK@) (g$V$15749$CSxK@ g$C$15747$CSxK@ g$ls$8349$CSxK@))) uninitialized)))) g$ls$8349$CSxK@)))))) (library-letrec*-identity 'g$list-sort$8331$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme syntax-case) () (void identity-for-cps))(library-letrec* (ironscheme unicode) ((g$string-ci=?$8392$CSxK@ g$string-ci=?$8495$CSxK@ ((case-lambda ((g$C$15913$CSxK@) (g$C$15913$CSxK@ (case-lambda ((g$C$15762$CSxK@ g$a$8441$CSxK@ g$b$8442$CSxK@ . g$rest$8443$CSxK@) ((case-lambda ((g$J$15765$CSxK@) (string? (case-lambda ((g$V$15766$CSxK@) (not (case-lambda ((g$T$15767$CSxK@) (if g$T$15767$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15765$CSxK@ 'string-ci=? '"not a string" g$a$8441$CSxK@) (void g$J$15765$CSxK@)))) g$V$15766$CSxK@))) g$a$8441$CSxK@))) (case-lambda (g$IGNORE$15763$CSxK@ (cons (case-lambda ((g$V$15764$CSxK@) (g$for-all$6711$CSxK@ g$C$15762$CSxK@ (case-lambda ((g$C$15755$CSxK@ g$x$8444$CSxK@) ((case-lambda ((g$J$15759$CSxK@) (string? (case-lambda ((g$V$15760$CSxK@) (not (case-lambda ((g$T$15761$CSxK@) (if g$T$15761$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15759$CSxK@ 'string-ci=? '"not a string" g$x$8444$CSxK@) (void g$J$15759$CSxK@)))) g$V$15760$CSxK@))) g$x$8444$CSxK@))) (case-lambda (g$IGNORE$15756$CSxK@ (string-ci-compare (case-lambda ((g$V$15757$CSxK@) (= (case-lambda ((g$V$15758$CSxK@) ((case-lambda ((g$C$15754$CSxK@ g$r$8445$CSxK@) (begin (set! g$a$8441$CSxK@ g$x$8444$CSxK@) (g$C$15754$CSxK@ g$r$8445$CSxK@)))) g$C$15755$CSxK@ g$V$15758$CSxK@))) g$V$15757$CSxK@ '0))) g$a$8441$CSxK@ g$x$8444$CSxK@)))))) g$V$15764$CSxK@))) g$b$8442$CSxK@ g$rest$8443$CSxK@))))))))) (library-letrec*-identity 'g$string-ci=?$8392$CSxK@))) (g$string-ci<?$8393$CSxK@ g$string-ci<?$8496$CSxK@ ((case-lambda ((g$C$15914$CSxK@) (g$C$15914$CSxK@ (case-lambda ((g$C$15776$CSxK@ g$a$8446$CSxK@ g$b$8447$CSxK@ . g$rest$8448$CSxK@) ((case-lambda ((g$J$15779$CSxK@) (string? (case-lambda ((g$V$15780$CSxK@) (not (case-lambda ((g$T$15781$CSxK@) (if g$T$15781$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15779$CSxK@ 'string-ci<? '"not a string" g$a$8446$CSxK@) (void g$J$15779$CSxK@)))) g$V$15780$CSxK@))) g$a$8446$CSxK@))) (case-lambda (g$IGNORE$15777$CSxK@ (cons (case-lambda ((g$V$15778$CSxK@) (g$for-all$6711$CSxK@ g$C$15776$CSxK@ (case-lambda ((g$C$15769$CSxK@ g$x$8449$CSxK@) ((case-lambda ((g$J$15773$CSxK@) (string? (case-lambda ((g$V$15774$CSxK@) (not (case-lambda ((g$T$15775$CSxK@) (if g$T$15775$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15773$CSxK@ 'string-ci<? '"not a string" g$x$8449$CSxK@) (void g$J$15773$CSxK@)))) g$V$15774$CSxK@))) g$x$8449$CSxK@))) (case-lambda (g$IGNORE$15770$CSxK@ (string-ci-compare (case-lambda ((g$V$15771$CSxK@) (< (case-lambda ((g$V$15772$CSxK@) ((case-lambda ((g$C$15768$CSxK@ g$r$8450$CSxK@) (begin (set! g$a$8446$CSxK@ g$x$8449$CSxK@) (g$C$15768$CSxK@ g$r$8450$CSxK@)))) g$C$15769$CSxK@ g$V$15772$CSxK@))) g$V$15771$CSxK@ '0))) g$a$8446$CSxK@ g$x$8449$CSxK@)))))) g$V$15778$CSxK@))) g$b$8447$CSxK@ g$rest$8448$CSxK@))))))))) (library-letrec*-identity 'g$string-ci<?$8393$CSxK@))) (g$string-ci>?$8394$CSxK@ g$string-ci>?$8497$CSxK@ ((case-lambda ((g$C$15915$CSxK@) (g$C$15915$CSxK@ (case-lambda ((g$C$15790$CSxK@ g$a$8451$CSxK@ g$b$8452$CSxK@ . g$rest$8453$CSxK@) ((case-lambda ((g$J$15793$CSxK@) (string? (case-lambda ((g$V$15794$CSxK@) (not (case-lambda ((g$T$15795$CSxK@) (if g$T$15795$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15793$CSxK@ 'string-ci>? '"not a string" g$a$8451$CSxK@) (void g$J$15793$CSxK@)))) g$V$15794$CSxK@))) g$a$8451$CSxK@))) (case-lambda (g$IGNORE$15791$CSxK@ (cons (case-lambda ((g$V$15792$CSxK@) (g$for-all$6711$CSxK@ g$C$15790$CSxK@ (case-lambda ((g$C$15783$CSxK@ g$x$8454$CSxK@) ((case-lambda ((g$J$15787$CSxK@) (string? (case-lambda ((g$V$15788$CSxK@) (not (case-lambda ((g$T$15789$CSxK@) (if g$T$15789$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15787$CSxK@ 'string-ci>? '"not a string" g$x$8454$CSxK@) (void g$J$15787$CSxK@)))) g$V$15788$CSxK@))) g$x$8454$CSxK@))) (case-lambda (g$IGNORE$15784$CSxK@ (string-ci-compare (case-lambda ((g$V$15785$CSxK@) (> (case-lambda ((g$V$15786$CSxK@) ((case-lambda ((g$C$15782$CSxK@ g$r$8455$CSxK@) (begin (set! g$a$8451$CSxK@ g$x$8454$CSxK@) (g$C$15782$CSxK@ g$r$8455$CSxK@)))) g$C$15783$CSxK@ g$V$15786$CSxK@))) g$V$15785$CSxK@ '0))) g$a$8451$CSxK@ g$x$8454$CSxK@)))))) g$V$15792$CSxK@))) g$b$8452$CSxK@ g$rest$8453$CSxK@))))))))) (library-letrec*-identity 'g$string-ci>?$8394$CSxK@))) (g$string-ci<=?$8395$CSxK@ g$string-ci<=?$8498$CSxK@ ((case-lambda ((g$C$15916$CSxK@) (g$C$15916$CSxK@ (case-lambda ((g$C$15804$CSxK@ g$a$8456$CSxK@ g$b$8457$CSxK@ . g$rest$8458$CSxK@) ((case-lambda ((g$J$15807$CSxK@) (string? (case-lambda ((g$V$15808$CSxK@) (not (case-lambda ((g$T$15809$CSxK@) (if g$T$15809$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15807$CSxK@ 'string-ci<=? '"not a string" g$a$8456$CSxK@) (void g$J$15807$CSxK@)))) g$V$15808$CSxK@))) g$a$8456$CSxK@))) (case-lambda (g$IGNORE$15805$CSxK@ (cons (case-lambda ((g$V$15806$CSxK@) (g$for-all$6711$CSxK@ g$C$15804$CSxK@ (case-lambda ((g$C$15797$CSxK@ g$x$8459$CSxK@) ((case-lambda ((g$J$15801$CSxK@) (string? (case-lambda ((g$V$15802$CSxK@) (not (case-lambda ((g$T$15803$CSxK@) (if g$T$15803$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15801$CSxK@ 'string-ci<=? '"not a string" g$x$8459$CSxK@) (void g$J$15801$CSxK@)))) g$V$15802$CSxK@))) g$x$8459$CSxK@))) (case-lambda (g$IGNORE$15798$CSxK@ (string-ci-compare (case-lambda ((g$V$15799$CSxK@) (<= (case-lambda ((g$V$15800$CSxK@) ((case-lambda ((g$C$15796$CSxK@ g$r$8460$CSxK@) (begin (set! g$a$8456$CSxK@ g$x$8459$CSxK@) (g$C$15796$CSxK@ g$r$8460$CSxK@)))) g$C$15797$CSxK@ g$V$15800$CSxK@))) g$V$15799$CSxK@ '0))) g$a$8456$CSxK@ g$x$8459$CSxK@)))))) g$V$15806$CSxK@))) g$b$8457$CSxK@ g$rest$8458$CSxK@))))))))) (library-letrec*-identity 'g$string-ci<=?$8395$CSxK@))) (g$string-ci>=?$8396$CSxK@ g$string-ci>=?$8499$CSxK@ ((case-lambda ((g$C$15917$CSxK@) (g$C$15917$CSxK@ (case-lambda ((g$C$15818$CSxK@ g$a$8461$CSxK@ g$b$8462$CSxK@ . g$rest$8463$CSxK@) ((case-lambda ((g$J$15821$CSxK@) (string? (case-lambda ((g$V$15822$CSxK@) (not (case-lambda ((g$T$15823$CSxK@) (if g$T$15823$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15821$CSxK@ 'string-ci>=? '"not a string" g$a$8461$CSxK@) (void g$J$15821$CSxK@)))) g$V$15822$CSxK@))) g$a$8461$CSxK@))) (case-lambda (g$IGNORE$15819$CSxK@ (cons (case-lambda ((g$V$15820$CSxK@) (g$for-all$6711$CSxK@ g$C$15818$CSxK@ (case-lambda ((g$C$15811$CSxK@ g$x$8464$CSxK@) ((case-lambda ((g$J$15815$CSxK@) (string? (case-lambda ((g$V$15816$CSxK@) (not (case-lambda ((g$T$15817$CSxK@) (if g$T$15817$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15815$CSxK@ 'string-ci>=? '"not a string" g$x$8464$CSxK@) (void g$J$15815$CSxK@)))) g$V$15816$CSxK@))) g$x$8464$CSxK@))) (case-lambda (g$IGNORE$15812$CSxK@ (string-ci-compare (case-lambda ((g$V$15813$CSxK@) (>= (case-lambda ((g$V$15814$CSxK@) ((case-lambda ((g$C$15810$CSxK@ g$r$8465$CSxK@) (begin (set! g$a$8461$CSxK@ g$x$8464$CSxK@) (g$C$15810$CSxK@ g$r$8465$CSxK@)))) g$C$15811$CSxK@ g$V$15814$CSxK@))) g$V$15813$CSxK@ '0))) g$a$8461$CSxK@ g$x$8464$CSxK@)))))) g$V$15820$CSxK@))) g$b$8462$CSxK@ g$rest$8463$CSxK@))))))))) (library-letrec*-identity 'g$string-ci>=?$8396$CSxK@))) (g$char-ci=?$8432$CSxK@ g$char-ci=?$8500$CSxK@ ((case-lambda ((g$C$15918$CSxK@) (g$C$15918$CSxK@ (case-lambda ((g$C$15835$CSxK@ g$a$8466$CSxK@ g$b$8467$CSxK@ . g$rest$8468$CSxK@) ((case-lambda ((g$J$15838$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15839$CSxK@) (not (case-lambda ((g$T$15840$CSxK@) (if g$T$15840$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15838$CSxK@ 'char-ci=? '"not a char" g$a$8466$CSxK@) (void g$J$15838$CSxK@)))) g$V$15839$CSxK@))) g$a$8466$CSxK@))) (case-lambda (g$IGNORE$15836$CSxK@ (cons (case-lambda ((g$V$15837$CSxK@) (g$for-all$6711$CSxK@ g$C$15835$CSxK@ (case-lambda ((g$C$15825$CSxK@ g$x$8469$CSxK@) ((case-lambda ((g$J$15832$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15833$CSxK@) (not (case-lambda ((g$T$15834$CSxK@) (if g$T$15834$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15832$CSxK@ 'char-ci=? '"not a char" g$x$8469$CSxK@) (void g$J$15832$CSxK@)))) g$V$15833$CSxK@))) g$x$8469$CSxK@))) (case-lambda (g$IGNORE$15826$CSxK@ (char-upcase (case-lambda ((g$V$15827$CSxK@) (char->integer (case-lambda ((g$V$15828$CSxK@) (char-upcase (case-lambda ((g$V$15829$CSxK@) (char->integer (case-lambda ((g$V$15830$CSxK@) (= (case-lambda ((g$V$15831$CSxK@) ((case-lambda ((g$C$15824$CSxK@ g$r$8470$CSxK@) (begin (set! g$a$8466$CSxK@ g$x$8469$CSxK@) (g$C$15824$CSxK@ g$r$8470$CSxK@)))) g$C$15825$CSxK@ g$V$15831$CSxK@))) g$V$15830$CSxK@ g$V$15828$CSxK@))) g$V$15829$CSxK@))) g$a$8466$CSxK@))) g$V$15827$CSxK@))) g$x$8469$CSxK@)))))) g$V$15837$CSxK@))) g$b$8467$CSxK@ g$rest$8468$CSxK@))))))))) (library-letrec*-identity 'g$char-ci=?$8432$CSxK@))) (g$char-ci<?$8433$CSxK@ g$char-ci<?$8501$CSxK@ ((case-lambda ((g$C$15919$CSxK@) (g$C$15919$CSxK@ (case-lambda ((g$C$15852$CSxK@ g$a$8471$CSxK@ g$b$8472$CSxK@ . g$rest$8473$CSxK@) ((case-lambda ((g$J$15855$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15856$CSxK@) (not (case-lambda ((g$T$15857$CSxK@) (if g$T$15857$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15855$CSxK@ 'char-ci<? '"not a char" g$a$8471$CSxK@) (void g$J$15855$CSxK@)))) g$V$15856$CSxK@))) g$a$8471$CSxK@))) (case-lambda (g$IGNORE$15853$CSxK@ (cons (case-lambda ((g$V$15854$CSxK@) (g$for-all$6711$CSxK@ g$C$15852$CSxK@ (case-lambda ((g$C$15842$CSxK@ g$x$8474$CSxK@) ((case-lambda ((g$J$15849$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15850$CSxK@) (not (case-lambda ((g$T$15851$CSxK@) (if g$T$15851$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15849$CSxK@ 'char-ci<? '"not a char" g$x$8474$CSxK@) (void g$J$15849$CSxK@)))) g$V$15850$CSxK@))) g$x$8474$CSxK@))) (case-lambda (g$IGNORE$15843$CSxK@ (char-upcase (case-lambda ((g$V$15844$CSxK@) (char->integer (case-lambda ((g$V$15845$CSxK@) (char-upcase (case-lambda ((g$V$15846$CSxK@) (char->integer (case-lambda ((g$V$15847$CSxK@) (< (case-lambda ((g$V$15848$CSxK@) ((case-lambda ((g$C$15841$CSxK@ g$r$8475$CSxK@) (begin (set! g$a$8471$CSxK@ g$x$8474$CSxK@) (g$C$15841$CSxK@ g$r$8475$CSxK@)))) g$C$15842$CSxK@ g$V$15848$CSxK@))) g$V$15847$CSxK@ g$V$15845$CSxK@))) g$V$15846$CSxK@))) g$a$8471$CSxK@))) g$V$15844$CSxK@))) g$x$8474$CSxK@)))))) g$V$15854$CSxK@))) g$b$8472$CSxK@ g$rest$8473$CSxK@))))))))) (library-letrec*-identity 'g$char-ci<?$8433$CSxK@))) (g$char-ci>?$8434$CSxK@ g$char-ci>?$8502$CSxK@ ((case-lambda ((g$C$15920$CSxK@) (g$C$15920$CSxK@ (case-lambda ((g$C$15869$CSxK@ g$a$8476$CSxK@ g$b$8477$CSxK@ . g$rest$8478$CSxK@) ((case-lambda ((g$J$15872$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15873$CSxK@) (not (case-lambda ((g$T$15874$CSxK@) (if g$T$15874$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15872$CSxK@ 'char-ci>? '"not a char" g$a$8476$CSxK@) (void g$J$15872$CSxK@)))) g$V$15873$CSxK@))) g$a$8476$CSxK@))) (case-lambda (g$IGNORE$15870$CSxK@ (cons (case-lambda ((g$V$15871$CSxK@) (g$for-all$6711$CSxK@ g$C$15869$CSxK@ (case-lambda ((g$C$15859$CSxK@ g$x$8479$CSxK@) ((case-lambda ((g$J$15866$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15867$CSxK@) (not (case-lambda ((g$T$15868$CSxK@) (if g$T$15868$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15866$CSxK@ 'char-ci>? '"not a char" g$x$8479$CSxK@) (void g$J$15866$CSxK@)))) g$V$15867$CSxK@))) g$x$8479$CSxK@))) (case-lambda (g$IGNORE$15860$CSxK@ (char-upcase (case-lambda ((g$V$15861$CSxK@) (char->integer (case-lambda ((g$V$15862$CSxK@) (char-upcase (case-lambda ((g$V$15863$CSxK@) (char->integer (case-lambda ((g$V$15864$CSxK@) (> (case-lambda ((g$V$15865$CSxK@) ((case-lambda ((g$C$15858$CSxK@ g$r$8480$CSxK@) (begin (set! g$a$8476$CSxK@ g$x$8479$CSxK@) (g$C$15858$CSxK@ g$r$8480$CSxK@)))) g$C$15859$CSxK@ g$V$15865$CSxK@))) g$V$15864$CSxK@ g$V$15862$CSxK@))) g$V$15863$CSxK@))) g$a$8476$CSxK@))) g$V$15861$CSxK@))) g$x$8479$CSxK@)))))) g$V$15871$CSxK@))) g$b$8477$CSxK@ g$rest$8478$CSxK@))))))))) (library-letrec*-identity 'g$char-ci>?$8434$CSxK@))) (g$char-ci<=?$8435$CSxK@ g$char-ci<=?$8503$CSxK@ ((case-lambda ((g$C$15921$CSxK@) (g$C$15921$CSxK@ (case-lambda ((g$C$15886$CSxK@ g$a$8481$CSxK@ g$b$8482$CSxK@ . g$rest$8483$CSxK@) ((case-lambda ((g$J$15889$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15890$CSxK@) (not (case-lambda ((g$T$15891$CSxK@) (if g$T$15891$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15889$CSxK@ 'char-ci<=? '"not a char" g$a$8481$CSxK@) (void g$J$15889$CSxK@)))) g$V$15890$CSxK@))) g$a$8481$CSxK@))) (case-lambda (g$IGNORE$15887$CSxK@ (cons (case-lambda ((g$V$15888$CSxK@) (g$for-all$6711$CSxK@ g$C$15886$CSxK@ (case-lambda ((g$C$15876$CSxK@ g$x$8484$CSxK@) ((case-lambda ((g$J$15883$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15884$CSxK@) (not (case-lambda ((g$T$15885$CSxK@) (if g$T$15885$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15883$CSxK@ 'char-ci<=? '"not a char" g$x$8484$CSxK@) (void g$J$15883$CSxK@)))) g$V$15884$CSxK@))) g$x$8484$CSxK@))) (case-lambda (g$IGNORE$15877$CSxK@ (char-upcase (case-lambda ((g$V$15878$CSxK@) (char->integer (case-lambda ((g$V$15879$CSxK@) (char-upcase (case-lambda ((g$V$15880$CSxK@) (char->integer (case-lambda ((g$V$15881$CSxK@) (<= (case-lambda ((g$V$15882$CSxK@) ((case-lambda ((g$C$15875$CSxK@ g$r$8485$CSxK@) (begin (set! g$a$8481$CSxK@ g$x$8484$CSxK@) (g$C$15875$CSxK@ g$r$8485$CSxK@)))) g$C$15876$CSxK@ g$V$15882$CSxK@))) g$V$15881$CSxK@ g$V$15879$CSxK@))) g$V$15880$CSxK@))) g$a$8481$CSxK@))) g$V$15878$CSxK@))) g$x$8484$CSxK@)))))) g$V$15888$CSxK@))) g$b$8482$CSxK@ g$rest$8483$CSxK@))))))))) (library-letrec*-identity 'g$char-ci<=?$8435$CSxK@))) (g$char-ci>=?$8436$CSxK@ g$char-ci>=?$8504$CSxK@ ((case-lambda ((g$C$15922$CSxK@) (g$C$15922$CSxK@ (case-lambda ((g$C$15903$CSxK@ g$a$8486$CSxK@ g$b$8487$CSxK@ . g$rest$8488$CSxK@) ((case-lambda ((g$J$15906$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15907$CSxK@) (not (case-lambda ((g$T$15908$CSxK@) (if g$T$15908$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15906$CSxK@ 'char-ci>=? '"not a char" g$a$8486$CSxK@) (void g$J$15906$CSxK@)))) g$V$15907$CSxK@))) g$a$8486$CSxK@))) (case-lambda (g$IGNORE$15904$CSxK@ (cons (case-lambda ((g$V$15905$CSxK@) (g$for-all$6711$CSxK@ g$C$15903$CSxK@ (case-lambda ((g$C$15893$CSxK@ g$x$8489$CSxK@) ((case-lambda ((g$J$15900$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$15901$CSxK@) (not (case-lambda ((g$T$15902$CSxK@) (if g$T$15902$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15900$CSxK@ 'char-ci>=? '"not a char" g$x$8489$CSxK@) (void g$J$15900$CSxK@)))) g$V$15901$CSxK@))) g$x$8489$CSxK@))) (case-lambda (g$IGNORE$15894$CSxK@ (char-upcase (case-lambda ((g$V$15895$CSxK@) (char->integer (case-lambda ((g$V$15896$CSxK@) (char-upcase (case-lambda ((g$V$15897$CSxK@) (char->integer (case-lambda ((g$V$15898$CSxK@) (>= (case-lambda ((g$V$15899$CSxK@) ((case-lambda ((g$C$15892$CSxK@ g$r$8490$CSxK@) (begin (set! g$a$8486$CSxK@ g$x$8489$CSxK@) (g$C$15892$CSxK@ g$r$8490$CSxK@)))) g$C$15893$CSxK@ g$V$15899$CSxK@))) g$V$15898$CSxK@ g$V$15896$CSxK@))) g$V$15897$CSxK@))) g$a$8486$CSxK@))) g$V$15895$CSxK@))) g$x$8489$CSxK@)))))) g$V$15905$CSxK@))) g$b$8487$CSxK@ g$rest$8488$CSxK@))))))))) (library-letrec*-identity 'g$char-ci>=?$8436$CSxK@))) (g$string-normalize-nfc$8437$CSxK@ g$string-normalize-nfc$8505$CSxK@ ((case-lambda ((g$C$15923$CSxK@) (g$C$15923$CSxK@ (case-lambda ((g$C$15909$CSxK@ g$s$8491$CSxK@) (string-normalize g$C$15909$CSxK@ g$s$8491$CSxK@ 'formc)))))) (library-letrec*-identity 'g$string-normalize-nfc$8437$CSxK@))) (g$string-normalize-nfd$8438$CSxK@ g$string-normalize-nfd$8506$CSxK@ ((case-lambda ((g$C$15924$CSxK@) (g$C$15924$CSxK@ (case-lambda ((g$C$15910$CSxK@ g$s$8492$CSxK@) (string-normalize g$C$15910$CSxK@ g$s$8492$CSxK@ 'formd)))))) (library-letrec*-identity 'g$string-normalize-nfd$8438$CSxK@))) (g$string-normalize-nfkc$8439$CSxK@ g$string-normalize-nfkc$8507$CSxK@ ((case-lambda ((g$C$15925$CSxK@) (g$C$15925$CSxK@ (case-lambda ((g$C$15911$CSxK@ g$s$8493$CSxK@) (string-normalize g$C$15911$CSxK@ g$s$8493$CSxK@ 'formkc)))))) (library-letrec*-identity 'g$string-normalize-nfkc$8439$CSxK@))) (g$string-normalize-nfkd$8440$CSxK@ g$string-normalize-nfkd$8508$CSxK@ ((case-lambda ((g$C$15926$CSxK@) (g$C$15926$CSxK@ (case-lambda ((g$C$15912$CSxK@ g$s$8494$CSxK@) (string-normalize g$C$15912$CSxK@ g$s$8494$CSxK@ 'formkd)))))) (library-letrec*-identity 'g$string-normalize-nfkd$8440$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic bitwise) ((g$bitwise-if$8509$CSxK@ g$bitwise-if$8540$CSxK@ ((case-lambda ((g$C$15958$CSxK@) (g$C$15958$CSxK@ (case-lambda ((g$C$15927$CSxK@ g$ei1$8516$CSxK@ g$ei2$8517$CSxK@ g$ei3$8518$CSxK@) (bitwise-not (case-lambda ((g$V$15928$CSxK@) (bitwise-and (case-lambda ((g$V$15929$CSxK@) (bitwise-and (case-lambda ((g$V$15930$CSxK@) (bitwise-ior g$C$15927$CSxK@ g$V$15930$CSxK@ g$V$15929$CSxK@))) g$ei1$8516$CSxK@ g$ei2$8517$CSxK@))) g$V$15928$CSxK@ g$ei3$8518$CSxK@))) g$ei1$8516$CSxK@)))))) (library-letrec*-identity 'g$bitwise-if$8509$CSxK@))) (g$bitwise-copy-bit$8510$CSxK@ g$bitwise-copy-bit$8541$CSxK@ ((case-lambda ((g$C$15959$CSxK@) (g$C$15959$CSxK@ (case-lambda ((g$C$15931$CSxK@ g$ei1$8519$CSxK@ g$ei2$8520$CSxK@ g$ei3$8521$CSxK@) (g$bitwise-arithmetic-shift-left$8513$CSxK@ (case-lambda ((g$V$15932$CSxK@) (g$bitwise-arithmetic-shift-left$8513$CSxK@ (case-lambda ((g$V$15933$CSxK@) (g$bitwise-if$8509$CSxK@ g$C$15931$CSxK@ g$V$15933$CSxK@ g$V$15932$CSxK@ g$ei1$8519$CSxK@))) '1 g$ei2$8520$CSxK@))) g$ei3$8521$CSxK@ g$ei2$8520$CSxK@)))))) (library-letrec*-identity 'g$bitwise-copy-bit$8510$CSxK@))) (g$bitwise-bit-field$8511$CSxK@ g$bitwise-bit-field$8542$CSxK@ ((case-lambda ((g$C$15960$CSxK@) (g$C$15960$CSxK@ (case-lambda ((g$C$15934$CSxK@ g$ei1$8522$CSxK@ g$ei2$8523$CSxK@ g$ei3$8524$CSxK@) (g$bitwise-arithmetic-shift-left$8513$CSxK@ (case-lambda ((g$V$15935$CSxK@) (bitwise-not (case-lambda ((g$V$15936$CSxK@) (bitwise-and (case-lambda ((g$V$15937$CSxK@) (g$bitwise-arithmetic-shift-right$8514$CSxK@ g$C$15934$CSxK@ g$V$15937$CSxK@ g$ei2$8523$CSxK@))) g$ei1$8522$CSxK@ g$V$15936$CSxK@))) g$V$15935$CSxK@))) '-1 g$ei3$8524$CSxK@)))))) (library-letrec*-identity 'g$bitwise-bit-field$8511$CSxK@))) (g$bitwise-copy-bit-field$8512$CSxK@ g$bitwise-copy-bit-field$8543$CSxK@ ((case-lambda ((g$C$15961$CSxK@) (g$C$15961$CSxK@ (case-lambda ((g$C$15938$CSxK@ g$to$8525$CSxK@ g$start$8526$CSxK@ g$end$8527$CSxK@ g$from$8528$CSxK@) (g$bitwise-arithmetic-shift-left$8513$CSxK@ (case-lambda ((g$V$15939$CSxK@) (g$bitwise-arithmetic-shift-left$8513$CSxK@ (case-lambda ((g$V$15940$CSxK@) (bitwise-not (case-lambda ((g$V$15941$CSxK@) (g$bitwise-arithmetic-shift-left$8513$CSxK@ (case-lambda ((g$V$15942$CSxK@) (bitwise-and (case-lambda ((g$V$15943$CSxK@) (g$bitwise-if$8509$CSxK@ g$C$15938$CSxK@ g$V$15943$CSxK@ g$V$15939$CSxK@ g$to$8525$CSxK@))) g$V$15942$CSxK@ g$V$15941$CSxK@))) '-1 g$start$8526$CSxK@))) g$V$15940$CSxK@))) '-1 g$end$8527$CSxK@))) g$from$8528$CSxK@ g$start$8526$CSxK@)))))) (library-letrec*-identity 'g$bitwise-copy-bit-field$8512$CSxK@))) (g$bitwise-arithmetic-shift-left$8513$CSxK@ g$bitwise-arithmetic-shift-left$8544$CSxK@ ((case-lambda ((g$C$15962$CSxK@) (g$C$15962$CSxK@ (case-lambda ((g$C$15944$CSxK@ g$ei1$8529$CSxK@ g$ei2$8530$CSxK@) (bitwise-arithmetic-shift g$C$15944$CSxK@ g$ei1$8529$CSxK@ g$ei2$8530$CSxK@)))))) (library-letrec*-identity 'g$bitwise-arithmetic-shift-left$8513$CSxK@))) (g$bitwise-arithmetic-shift-right$8514$CSxK@ g$bitwise-arithmetic-shift-right$8545$CSxK@ ((case-lambda ((g$C$15963$CSxK@) (g$C$15963$CSxK@ (case-lambda ((g$C$15945$CSxK@ g$ei1$8531$CSxK@ g$ei2$8532$CSxK@) (- (case-lambda ((g$V$15946$CSxK@) (bitwise-arithmetic-shift g$C$15945$CSxK@ g$ei1$8531$CSxK@ g$V$15946$CSxK@))) g$ei2$8532$CSxK@)))))) (library-letrec*-identity 'g$bitwise-arithmetic-shift-right$8514$CSxK@))) (g$bitwise-rotate-bit-field$8515$CSxK@ g$bitwise-rotate-bit-field$8546$CSxK@ ((case-lambda ((g$C$15964$CSxK@) (g$C$15964$CSxK@ (case-lambda ((g$C$15956$CSxK@ g$n$8533$CSxK@ g$start$8534$CSxK@ g$end$8535$CSxK@ g$count$8536$CSxK@) (- (case-lambda ((g$V$15957$CSxK@) ((case-lambda ((g$C$15952$CSxK@ g$width$8537$CSxK@) (g$positive?$7420$CSxK@ (case-lambda ((g$T$15953$CSxK@) (if g$T$15953$CSxK@ (g$bitwise-bit-field$8511$CSxK@ (case-lambda ((g$V$15954$CSxK@) (g$mod$7377$CSxK@ (case-lambda ((g$V$15955$CSxK@) ((case-lambda ((g$C$15947$CSxK@ g$count$8538$CSxK@ g$field$8539$CSxK@) (- (case-lambda ((g$V$15948$CSxK@) (g$bitwise-arithmetic-shift-right$8514$CSxK@ (case-lambda ((g$V$15949$CSxK@) (g$bitwise-arithmetic-shift-left$8513$CSxK@ (case-lambda ((g$V$15950$CSxK@) (bitwise-ior (case-lambda ((g$V$15951$CSxK@) (g$bitwise-copy-bit-field$8512$CSxK@ g$C$15947$CSxK@ g$n$8533$CSxK@ g$start$8534$CSxK@ g$end$8535$CSxK@ g$V$15951$CSxK@))) g$V$15950$CSxK@ g$V$15949$CSxK@))) g$field$8539$CSxK@ g$count$8538$CSxK@))) g$field$8539$CSxK@ g$V$15948$CSxK@))) g$width$8537$CSxK@ g$count$8538$CSxK@))) g$C$15952$CSxK@ g$V$15955$CSxK@ g$V$15954$CSxK@))) g$count$8536$CSxK@ g$width$8537$CSxK@))) g$n$8533$CSxK@ g$start$8534$CSxK@ g$end$8535$CSxK@) (g$C$15952$CSxK@ g$n$8533$CSxK@)))) g$width$8537$CSxK@))) g$C$15956$CSxK@ g$V$15957$CSxK@))) g$end$8535$CSxK@ g$start$8534$CSxK@)))))) (library-letrec*-identity 'g$bitwise-rotate-bit-field$8515$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic fixnums) ((g$fxdiv$8547$CSxK@ g$fxdiv$8652$CSxK@ ((case-lambda ((g$C$16075$CSxK@) (g$C$16075$CSxK@ (case-lambda ((g$C$15968$CSxK@ g$fx1$8568$CSxK@ g$fx2$8569$CSxK@) (call-with-values g$C$15968$CSxK@ (case-lambda ((g$C$15965$CSxK@) (fxdiv-and-mod g$C$15965$CSxK@ g$fx1$8568$CSxK@ g$fx2$8569$CSxK@))) (case-lambda ((g$C$15967$CSxK@ g$n$8572$CSxK@ g$d$8573$CSxK@) ((case-lambda ((g$C$15966$CSxK@ g$d$8574$CSxK@ g$n$8575$CSxK@) (g$C$15966$CSxK@ g$n$8575$CSxK@))) g$C$15967$CSxK@ g$d$8573$CSxK@ g$n$8572$CSxK@))))))))) (library-letrec*-identity 'g$fxdiv$8547$CSxK@))) (g$fxdiv0$8548$CSxK@ g$fxdiv0$8653$CSxK@ ((case-lambda ((g$C$16076$CSxK@) (g$C$16076$CSxK@ (case-lambda ((g$C$15972$CSxK@ g$fx1$8576$CSxK@ g$fx2$8577$CSxK@) (call-with-values g$C$15972$CSxK@ (case-lambda ((g$C$15969$CSxK@) (fxdiv0-and-mod0 g$C$15969$CSxK@ g$fx1$8576$CSxK@ g$fx2$8577$CSxK@))) (case-lambda ((g$C$15971$CSxK@ g$n$8580$CSxK@ g$d$8581$CSxK@) ((case-lambda ((g$C$15970$CSxK@ g$d$8582$CSxK@ g$n$8583$CSxK@) (g$C$15970$CSxK@ g$n$8583$CSxK@))) g$C$15971$CSxK@ g$d$8581$CSxK@ g$n$8580$CSxK@))))))))) (library-letrec*-identity 'g$fxdiv0$8548$CSxK@))) (g$fxmod$8549$CSxK@ g$fxmod$8654$CSxK@ ((case-lambda ((g$C$16077$CSxK@) (g$C$16077$CSxK@ (case-lambda ((g$C$15976$CSxK@ g$fx1$8584$CSxK@ g$fx2$8585$CSxK@) (call-with-values g$C$15976$CSxK@ (case-lambda ((g$C$15973$CSxK@) (fxdiv-and-mod g$C$15973$CSxK@ g$fx1$8584$CSxK@ g$fx2$8585$CSxK@))) (case-lambda ((g$C$15975$CSxK@ g$n$8588$CSxK@ g$d$8589$CSxK@) ((case-lambda ((g$C$15974$CSxK@ g$d$8590$CSxK@ g$n$8591$CSxK@) (g$C$15974$CSxK@ g$d$8590$CSxK@))) g$C$15975$CSxK@ g$d$8589$CSxK@ g$n$8588$CSxK@))))))))) (library-letrec*-identity 'g$fxmod$8549$CSxK@))) (g$fxmod0$8550$CSxK@ g$fxmod0$8655$CSxK@ ((case-lambda ((g$C$16078$CSxK@) (g$C$16078$CSxK@ (case-lambda ((g$C$15980$CSxK@ g$fx1$8592$CSxK@ g$fx2$8593$CSxK@) (call-with-values g$C$15980$CSxK@ (case-lambda ((g$C$15977$CSxK@) (fxdiv0-and-mod0 g$C$15977$CSxK@ g$fx1$8592$CSxK@ g$fx2$8593$CSxK@))) (case-lambda ((g$C$15979$CSxK@ g$n$8596$CSxK@ g$d$8597$CSxK@) ((case-lambda ((g$C$15978$CSxK@ g$d$8598$CSxK@ g$n$8599$CSxK@) (g$C$15978$CSxK@ g$d$8598$CSxK@))) g$C$15979$CSxK@ g$d$8597$CSxK@ g$n$8596$CSxK@))))))))) (library-letrec*-identity 'g$fxmod0$8550$CSxK@))) (g$fxpositive?$8551$CSxK@ g$fxpositive?$8656$CSxK@ ((case-lambda ((g$C$16079$CSxK@) (g$C$16079$CSxK@ (case-lambda ((g$C$15981$CSxK@ g$r$8600$CSxK@) ((case-lambda ((g$J$15983$CSxK@) (g$fixnum?$7387$CSxK@ (case-lambda ((g$V$15984$CSxK@) (not (case-lambda ((g$T$15985$CSxK@) (if g$T$15985$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15983$CSxK@ 'fxpositive? '"not a fixnum" g$r$8600$CSxK@) (void g$J$15983$CSxK@)))) g$V$15984$CSxK@))) g$r$8600$CSxK@))) (case-lambda (g$IGNORE$15982$CSxK@ (fx<? g$C$15981$CSxK@ '0 g$r$8600$CSxK@))))))))) (library-letrec*-identity 'g$fxpositive?$8551$CSxK@))) (g$fxnegative?$8552$CSxK@ g$fxnegative?$8657$CSxK@ ((case-lambda ((g$C$16080$CSxK@) (g$C$16080$CSxK@ (case-lambda ((g$C$15986$CSxK@ g$r$8601$CSxK@) ((case-lambda ((g$J$15988$CSxK@) (g$fixnum?$7387$CSxK@ (case-lambda ((g$V$15989$CSxK@) (not (case-lambda ((g$T$15990$CSxK@) (if g$T$15990$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15988$CSxK@ 'fxnegative? '"not a fixnum" g$r$8601$CSxK@) (void g$J$15988$CSxK@)))) g$V$15989$CSxK@))) g$r$8601$CSxK@))) (case-lambda (g$IGNORE$15987$CSxK@ (fx>? g$C$15986$CSxK@ '0 g$r$8601$CSxK@))))))))) (library-letrec*-identity 'g$fxnegative?$8552$CSxK@))) (g$fxzero?$8553$CSxK@ g$fxzero?$8658$CSxK@ ((case-lambda ((g$C$16081$CSxK@) (g$C$16081$CSxK@ (case-lambda ((g$C$15991$CSxK@ g$r$8602$CSxK@) ((case-lambda ((g$J$15993$CSxK@) (g$fixnum?$7387$CSxK@ (case-lambda ((g$V$15994$CSxK@) (not (case-lambda ((g$T$15995$CSxK@) (if g$T$15995$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15993$CSxK@ 'fxzero? '"not a fixnum" g$r$8602$CSxK@) (void g$J$15993$CSxK@)))) g$V$15994$CSxK@))) g$r$8602$CSxK@))) (case-lambda (g$IGNORE$15992$CSxK@ (fx=? g$C$15991$CSxK@ '0 g$r$8602$CSxK@))))))))) (library-letrec*-identity 'g$fxzero?$8553$CSxK@))) (g$fxeven?$8554$CSxK@ g$fxeven?$8659$CSxK@ ((case-lambda ((g$C$16082$CSxK@) (g$C$16082$CSxK@ (case-lambda ((g$C$15996$CSxK@ g$n$8603$CSxK@) ((case-lambda ((g$J$15999$CSxK@) (g$fixnum?$7387$CSxK@ (case-lambda ((g$V$16000$CSxK@) (not (case-lambda ((g$T$16001$CSxK@) (if g$T$16001$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$15999$CSxK@ 'fxeven? '"not a fixnum" g$n$8603$CSxK@) (void g$J$15999$CSxK@)))) g$V$16000$CSxK@))) g$n$8603$CSxK@))) (case-lambda (g$IGNORE$15997$CSxK@ (g$fxmod$8549$CSxK@ (case-lambda ((g$V$15998$CSxK@) (fx=? g$C$15996$CSxK@ '0 g$V$15998$CSxK@))) g$n$8603$CSxK@ '2))))))))) (library-letrec*-identity 'g$fxeven?$8554$CSxK@))) (g$fxodd?$8555$CSxK@ g$fxodd?$8660$CSxK@ ((case-lambda ((g$C$16083$CSxK@) (g$C$16083$CSxK@ (case-lambda ((g$C$16002$CSxK@ g$n$8604$CSxK@) ((case-lambda ((g$J$16005$CSxK@) (g$fixnum?$7387$CSxK@ (case-lambda ((g$V$16006$CSxK@) (not (case-lambda ((g$T$16007$CSxK@) (if g$T$16007$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16005$CSxK@ 'fxodd? '"not a fixnum" g$n$8604$CSxK@) (void g$J$16005$CSxK@)))) g$V$16006$CSxK@))) g$n$8604$CSxK@))) (case-lambda (g$IGNORE$16003$CSxK@ (g$fxmod$8549$CSxK@ (case-lambda ((g$V$16004$CSxK@) (fx=? g$C$16002$CSxK@ '1 g$V$16004$CSxK@))) g$n$8604$CSxK@ '2))))))))) (library-letrec*-identity 'g$fxodd?$8555$CSxK@))) (g$fxmax$8556$CSxK@ g$fxmax$8661$CSxK@ ((case-lambda ((g$C$16084$CSxK@) (g$C$16084$CSxK@ (case-lambda ((g$C$16010$CSxK@ g$a$8605$CSxK@ . g$rest$8606$CSxK@) ((case-lambda ((g$J$16012$CSxK@) (g$fixnum?$7387$CSxK@ (case-lambda ((g$V$16013$CSxK@) (not (case-lambda ((g$T$16014$CSxK@) (if g$T$16014$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16012$CSxK@ 'fxmax '"not a fixnum" g$a$8605$CSxK@) (void g$J$16012$CSxK@)))) g$V$16013$CSxK@))) g$a$8605$CSxK@))) (case-lambda (g$IGNORE$16011$CSxK@ (g$fold-left$6716$CSxK@ g$C$16010$CSxK@ (case-lambda ((g$C$16008$CSxK@ g$a$8607$CSxK@ g$b$8608$CSxK@) (fx<? (case-lambda ((g$T$16009$CSxK@) (if g$T$16009$CSxK@ (g$C$16008$CSxK@ g$b$8608$CSxK@) (g$C$16008$CSxK@ g$a$8607$CSxK@)))) g$a$8607$CSxK@ g$b$8608$CSxK@))) g$a$8605$CSxK@ g$rest$8606$CSxK@))))))))) (library-letrec*-identity 'g$fxmax$8556$CSxK@))) (g$fxmin$8557$CSxK@ g$fxmin$8662$CSxK@ ((case-lambda ((g$C$16085$CSxK@) (g$C$16085$CSxK@ (case-lambda ((g$C$16017$CSxK@ g$a$8609$CSxK@ . g$rest$8610$CSxK@) ((case-lambda ((g$J$16019$CSxK@) (g$fixnum?$7387$CSxK@ (case-lambda ((g$V$16020$CSxK@) (not (case-lambda ((g$T$16021$CSxK@) (if g$T$16021$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16019$CSxK@ 'fxmin '"not a fixnum" g$a$8609$CSxK@) (void g$J$16019$CSxK@)))) g$V$16020$CSxK@))) g$a$8609$CSxK@))) (case-lambda (g$IGNORE$16018$CSxK@ (g$fold-left$6716$CSxK@ g$C$16017$CSxK@ (case-lambda ((g$C$16015$CSxK@ g$a$8611$CSxK@ g$b$8612$CSxK@) (fx>? (case-lambda ((g$T$16016$CSxK@) (if g$T$16016$CSxK@ (g$C$16015$CSxK@ g$b$8612$CSxK@) (g$C$16015$CSxK@ g$a$8611$CSxK@)))) g$a$8611$CSxK@ g$b$8612$CSxK@))) g$a$8609$CSxK@ g$rest$8610$CSxK@))))))))) (library-letrec*-identity 'g$fxmin$8557$CSxK@))) (g$fx*/carry$8558$CSxK@ g$fx*/carry$8663$CSxK@ ((case-lambda ((g$C$16086$CSxK@) (g$C$16086$CSxK@ (case-lambda ((g$C$16025$CSxK@ g$fx1$8613$CSxK@ g$fx2$8614$CSxK@ g$fx3$8615$CSxK@) (g$fixnum-width$7389$CSxK@ (case-lambda ((g$V$16026$CSxK@) (expt (case-lambda ((g$V$16027$CSxK@) (* (case-lambda ((g$V$16028$CSxK@) (+ (case-lambda ((g$V$16029$CSxK@) ((case-lambda ((g$C$16022$CSxK@ g$s$8616$CSxK@ g$e$8617$CSxK@) (g$div0$7376$CSxK@ (case-lambda ((g$V$16023$CSxK@) (g$mod0$7378$CSxK@ (case-lambda ((g$V$16024$CSxK@) (values g$C$16022$CSxK@ g$V$16024$CSxK@ g$V$16023$CSxK@))) g$s$8616$CSxK@ g$e$8617$CSxK@))) g$s$8616$CSxK@ g$e$8617$CSxK@))) g$C$16025$CSxK@ g$V$16029$CSxK@ g$V$16027$CSxK@))) g$V$16028$CSxK@ g$fx3$8615$CSxK@))) g$fx1$8613$CSxK@ g$fx2$8614$CSxK@))) '2 g$V$16026$CSxK@))))))))) (library-letrec*-identity 'g$fx*/carry$8558$CSxK@))) (g$fx-/carry$8559$CSxK@ g$fx-/carry$8664$CSxK@ ((case-lambda ((g$C$16087$CSxK@) (g$C$16087$CSxK@ (case-lambda ((g$C$16033$CSxK@ g$fx1$8618$CSxK@ g$fx2$8619$CSxK@ g$fx3$8620$CSxK@) (g$fixnum-width$7389$CSxK@ (case-lambda ((g$V$16034$CSxK@) (expt (case-lambda ((g$V$16035$CSxK@) (- (case-lambda ((g$V$16036$CSxK@) ((case-lambda ((g$C$16030$CSxK@ g$s$8621$CSxK@ g$e$8622$CSxK@) (g$div0$7376$CSxK@ (case-lambda ((g$V$16031$CSxK@) (g$mod0$7378$CSxK@ (case-lambda ((g$V$16032$CSxK@) (values g$C$16030$CSxK@ g$V$16032$CSxK@ g$V$16031$CSxK@))) g$s$8621$CSxK@ g$e$8622$CSxK@))) g$s$8621$CSxK@ g$e$8622$CSxK@))) g$C$16033$CSxK@ g$V$16036$CSxK@ g$V$16035$CSxK@))) g$fx1$8618$CSxK@ g$fx2$8619$CSxK@ g$fx3$8620$CSxK@))) '2 g$V$16034$CSxK@))))))))) (library-letrec*-identity 'g$fx-/carry$8559$CSxK@))) (g$fx+/carry$8560$CSxK@ g$fx+/carry$8665$CSxK@ ((case-lambda ((g$C$16088$CSxK@) (g$C$16088$CSxK@ (case-lambda ((g$C$16040$CSxK@ g$fx1$8623$CSxK@ g$fx2$8624$CSxK@ g$fx3$8625$CSxK@) (g$fixnum-width$7389$CSxK@ (case-lambda ((g$V$16041$CSxK@) (expt (case-lambda ((g$V$16042$CSxK@) (+ (case-lambda ((g$V$16043$CSxK@) ((case-lambda ((g$C$16037$CSxK@ g$s$8626$CSxK@ g$e$8627$CSxK@) (g$div0$7376$CSxK@ (case-lambda ((g$V$16038$CSxK@) (g$mod0$7378$CSxK@ (case-lambda ((g$V$16039$CSxK@) (values g$C$16037$CSxK@ g$V$16039$CSxK@ g$V$16038$CSxK@))) g$s$8626$CSxK@ g$e$8627$CSxK@))) g$s$8626$CSxK@ g$e$8627$CSxK@))) g$C$16040$CSxK@ g$V$16043$CSxK@ g$V$16042$CSxK@))) g$fx1$8623$CSxK@ g$fx2$8624$CSxK@ g$fx3$8625$CSxK@))) '2 g$V$16041$CSxK@))))))))) (library-letrec*-identity 'g$fx+/carry$8560$CSxK@))) (g$fxif$8561$CSxK@ g$fxif$8666$CSxK@ ((case-lambda ((g$C$16089$CSxK@) (g$C$16089$CSxK@ (case-lambda ((g$C$16044$CSxK@ g$fx1$8628$CSxK@ g$fx2$8629$CSxK@ g$fx3$8630$CSxK@) (fxnot (case-lambda ((g$V$16045$CSxK@) (fxand (case-lambda ((g$V$16046$CSxK@) (fxand (case-lambda ((g$V$16047$CSxK@) (fxior g$C$16044$CSxK@ g$V$16047$CSxK@ g$V$16046$CSxK@))) g$fx1$8628$CSxK@ g$fx2$8629$CSxK@))) g$V$16045$CSxK@ g$fx3$8630$CSxK@))) g$fx1$8628$CSxK@)))))) (library-letrec*-identity 'g$fxif$8561$CSxK@))) (g$fxcopy-bit$8562$CSxK@ g$fxcopy-bit$8667$CSxK@ ((case-lambda ((g$C$16090$CSxK@) (g$C$16090$CSxK@ (case-lambda ((g$C$16048$CSxK@ g$fx1$8631$CSxK@ g$fx2$8632$CSxK@ g$fx3$8633$CSxK@) (g$fxarithmetic-shift-left$8565$CSxK@ (case-lambda ((g$V$16049$CSxK@) (g$fxarithmetic-shift-left$8565$CSxK@ (case-lambda ((g$V$16050$CSxK@) (g$fxif$8561$CSxK@ g$C$16048$CSxK@ g$V$16050$CSxK@ g$V$16049$CSxK@ g$fx1$8631$CSxK@))) '1 g$fx2$8632$CSxK@))) g$fx3$8633$CSxK@ g$fx2$8632$CSxK@)))))) (library-letrec*-identity 'g$fxcopy-bit$8562$CSxK@))) (g$fxbit-field$8563$CSxK@ g$fxbit-field$8668$CSxK@ ((case-lambda ((g$C$16091$CSxK@) (g$C$16091$CSxK@ (case-lambda ((g$C$16051$CSxK@ g$fx1$8634$CSxK@ g$fx2$8635$CSxK@ g$fx3$8636$CSxK@) (g$fxarithmetic-shift-left$8565$CSxK@ (case-lambda ((g$V$16052$CSxK@) (fxnot (case-lambda ((g$V$16053$CSxK@) (fxand (case-lambda ((g$V$16054$CSxK@) (g$fxarithmetic-shift-right$8566$CSxK@ g$C$16051$CSxK@ g$V$16054$CSxK@ g$fx2$8635$CSxK@))) g$fx1$8634$CSxK@ g$V$16053$CSxK@))) g$V$16052$CSxK@))) '-1 g$fx3$8636$CSxK@)))))) (library-letrec*-identity 'g$fxbit-field$8563$CSxK@))) (g$fxcopy-bit-field$8564$CSxK@ g$fxcopy-bit-field$8669$CSxK@ ((case-lambda ((g$C$16092$CSxK@) (g$C$16092$CSxK@ (case-lambda ((g$C$16055$CSxK@ g$to$8637$CSxK@ g$start$8638$CSxK@ g$end$8639$CSxK@ g$from$8640$CSxK@) (g$fxarithmetic-shift-left$8565$CSxK@ (case-lambda ((g$V$16056$CSxK@) (g$fxarithmetic-shift-left$8565$CSxK@ (case-lambda ((g$V$16057$CSxK@) (fxnot (case-lambda ((g$V$16058$CSxK@) (g$fxarithmetic-shift-left$8565$CSxK@ (case-lambda ((g$V$16059$CSxK@) (fxand (case-lambda ((g$V$16060$CSxK@) (g$fxif$8561$CSxK@ g$C$16055$CSxK@ g$V$16060$CSxK@ g$V$16056$CSxK@ g$to$8637$CSxK@))) g$V$16059$CSxK@ g$V$16058$CSxK@))) '-1 g$start$8638$CSxK@))) g$V$16057$CSxK@))) '-1 g$end$8639$CSxK@))) g$from$8640$CSxK@ g$start$8638$CSxK@)))))) (library-letrec*-identity 'g$fxcopy-bit-field$8564$CSxK@))) (g$fxarithmetic-shift-left$8565$CSxK@ g$fxarithmetic-shift-left$8670$CSxK@ ((case-lambda ((g$C$16093$CSxK@) (g$C$16093$CSxK@ (case-lambda ((g$C$16061$CSxK@ g$fx1$8641$CSxK@ g$fx2$8642$CSxK@) (fxarithmetic-shift g$C$16061$CSxK@ g$fx1$8641$CSxK@ g$fx2$8642$CSxK@)))))) (library-letrec*-identity 'g$fxarithmetic-shift-left$8565$CSxK@))) (g$fxarithmetic-shift-right$8566$CSxK@ g$fxarithmetic-shift-right$8671$CSxK@ ((case-lambda ((g$C$16094$CSxK@) (g$C$16094$CSxK@ (case-lambda ((g$C$16062$CSxK@ g$fx1$8643$CSxK@ g$fx2$8644$CSxK@) (fx- (case-lambda ((g$V$16063$CSxK@) (fxarithmetic-shift g$C$16062$CSxK@ g$fx1$8643$CSxK@ g$V$16063$CSxK@))) g$fx2$8644$CSxK@)))))) (library-letrec*-identity 'g$fxarithmetic-shift-right$8566$CSxK@))) (g$fxrotate-bit-field$8567$CSxK@ g$fxrotate-bit-field$8672$CSxK@ ((case-lambda ((g$C$16095$CSxK@) (g$C$16095$CSxK@ (case-lambda ((g$C$16073$CSxK@ g$n$8645$CSxK@ g$start$8646$CSxK@ g$end$8647$CSxK@ g$count$8648$CSxK@) (fx- (case-lambda ((g$V$16074$CSxK@) ((case-lambda ((g$C$16069$CSxK@ g$width$8649$CSxK@) (g$fxpositive?$8551$CSxK@ (case-lambda ((g$T$16070$CSxK@) (if g$T$16070$CSxK@ (g$fxbit-field$8563$CSxK@ (case-lambda ((g$V$16071$CSxK@) (g$fxmod$8549$CSxK@ (case-lambda ((g$V$16072$CSxK@) ((case-lambda ((g$C$16064$CSxK@ g$count$8650$CSxK@ g$field$8651$CSxK@) (fx- (case-lambda ((g$V$16065$CSxK@) (g$fxarithmetic-shift-right$8566$CSxK@ (case-lambda ((g$V$16066$CSxK@) (g$fxarithmetic-shift-left$8565$CSxK@ (case-lambda ((g$V$16067$CSxK@) (fxior (case-lambda ((g$V$16068$CSxK@) (g$fxcopy-bit-field$8564$CSxK@ g$C$16064$CSxK@ g$n$8645$CSxK@ g$start$8646$CSxK@ g$end$8647$CSxK@ g$V$16068$CSxK@))) g$V$16067$CSxK@ g$V$16066$CSxK@))) g$field$8651$CSxK@ g$count$8650$CSxK@))) g$field$8651$CSxK@ g$V$16065$CSxK@))) g$width$8649$CSxK@ g$count$8650$CSxK@))) g$C$16069$CSxK@ g$V$16072$CSxK@ g$V$16071$CSxK@))) g$count$8648$CSxK@ g$width$8649$CSxK@))) g$n$8645$CSxK@ g$start$8646$CSxK@ g$end$8647$CSxK@) (g$C$16069$CSxK@ g$n$8645$CSxK@)))) g$width$8649$CSxK@))) g$C$16073$CSxK@ g$V$16074$CSxK@))) g$end$8647$CSxK@ g$start$8646$CSxK@)))))) (library-letrec*-identity 'g$fxrotate-bit-field$8567$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic flonums) ((g$fldiv-and-mod$8673$CSxK@ g$fldiv-and-mod$8790$CSxK@ ((case-lambda ((g$C$16252$CSxK@) (g$C$16252$CSxK@ (case-lambda ((g$C$16100$CSxK@ g$fl1$8705$CSxK@ g$fl2$8706$CSxK@) (call-with-values g$C$16100$CSxK@ (case-lambda ((g$C$16096$CSxK@) (div-and-mod g$C$16096$CSxK@ g$fl1$8705$CSxK@ g$fl2$8706$CSxK@))) (case-lambda ((g$C$16099$CSxK@ g$n$8709$CSxK@ g$d$8710$CSxK@) ((case-lambda ((g$C$16097$CSxK@ g$d$8711$CSxK@ g$n$8712$CSxK@) (real->flonum (case-lambda ((g$V$16098$CSxK@) (values g$C$16097$CSxK@ g$V$16098$CSxK@ g$d$8711$CSxK@))) g$n$8712$CSxK@))) g$C$16099$CSxK@ g$d$8710$CSxK@ g$n$8709$CSxK@))))))))) (library-letrec*-identity 'g$fldiv-and-mod$8673$CSxK@))) (g$fldiv0-and-mod0$8674$CSxK@ g$fldiv0-and-mod0$8791$CSxK@ ((case-lambda ((g$C$16253$CSxK@) (g$C$16253$CSxK@ (case-lambda ((g$C$16105$CSxK@ g$fl1$8713$CSxK@ g$fl2$8714$CSxK@) (call-with-values g$C$16105$CSxK@ (case-lambda ((g$C$16101$CSxK@) (div0-and-mod0 g$C$16101$CSxK@ g$fl1$8713$CSxK@ g$fl2$8714$CSxK@))) (case-lambda ((g$C$16104$CSxK@ g$n$8717$CSxK@ g$d$8718$CSxK@) ((case-lambda ((g$C$16102$CSxK@ g$d$8719$CSxK@ g$n$8720$CSxK@) (real->flonum (case-lambda ((g$V$16103$CSxK@) (values g$C$16102$CSxK@ g$V$16103$CSxK@ g$d$8719$CSxK@))) g$n$8720$CSxK@))) g$C$16104$CSxK@ g$d$8718$CSxK@ g$n$8717$CSxK@))))))))) (library-letrec*-identity 'g$fldiv0-and-mod0$8674$CSxK@))) (g$fldiv$8675$CSxK@ g$fldiv$8792$CSxK@ ((case-lambda ((g$C$16254$CSxK@) (g$C$16254$CSxK@ (case-lambda ((g$C$16109$CSxK@ g$fl1$8721$CSxK@ g$fl2$8722$CSxK@) (call-with-values g$C$16109$CSxK@ (case-lambda ((g$C$16106$CSxK@) (g$fldiv-and-mod$8673$CSxK@ g$C$16106$CSxK@ g$fl1$8721$CSxK@ g$fl2$8722$CSxK@))) (case-lambda ((g$C$16108$CSxK@ g$n$8725$CSxK@ g$d$8726$CSxK@) ((case-lambda ((g$C$16107$CSxK@ g$d$8727$CSxK@ g$n$8728$CSxK@) (g$C$16107$CSxK@ g$n$8728$CSxK@))) g$C$16108$CSxK@ g$d$8726$CSxK@ g$n$8725$CSxK@))))))))) (library-letrec*-identity 'g$fldiv$8675$CSxK@))) (g$fldiv0$8676$CSxK@ g$fldiv0$8793$CSxK@ ((case-lambda ((g$C$16255$CSxK@) (g$C$16255$CSxK@ (case-lambda ((g$C$16113$CSxK@ g$fl1$8729$CSxK@ g$fl2$8730$CSxK@) (call-with-values g$C$16113$CSxK@ (case-lambda ((g$C$16110$CSxK@) (g$fldiv0-and-mod0$8674$CSxK@ g$C$16110$CSxK@ g$fl1$8729$CSxK@ g$fl2$8730$CSxK@))) (case-lambda ((g$C$16112$CSxK@ g$n$8733$CSxK@ g$d$8734$CSxK@) ((case-lambda ((g$C$16111$CSxK@ g$d$8735$CSxK@ g$n$8736$CSxK@) (g$C$16111$CSxK@ g$n$8736$CSxK@))) g$C$16112$CSxK@ g$d$8734$CSxK@ g$n$8733$CSxK@))))))))) (library-letrec*-identity 'g$fldiv0$8676$CSxK@))) (g$flmod$8677$CSxK@ g$flmod$8794$CSxK@ ((case-lambda ((g$C$16256$CSxK@) (g$C$16256$CSxK@ (case-lambda ((g$C$16117$CSxK@ g$fl1$8737$CSxK@ g$fl2$8738$CSxK@) (call-with-values g$C$16117$CSxK@ (case-lambda ((g$C$16114$CSxK@) (g$fldiv-and-mod$8673$CSxK@ g$C$16114$CSxK@ g$fl1$8737$CSxK@ g$fl2$8738$CSxK@))) (case-lambda ((g$C$16116$CSxK@ g$n$8741$CSxK@ g$d$8742$CSxK@) ((case-lambda ((g$C$16115$CSxK@ g$d$8743$CSxK@ g$n$8744$CSxK@) (g$C$16115$CSxK@ g$d$8743$CSxK@))) g$C$16116$CSxK@ g$d$8742$CSxK@ g$n$8741$CSxK@))))))))) (library-letrec*-identity 'g$flmod$8677$CSxK@))) (g$flmod0$8678$CSxK@ g$flmod0$8795$CSxK@ ((case-lambda ((g$C$16257$CSxK@) (g$C$16257$CSxK@ (case-lambda ((g$C$16121$CSxK@ g$fl1$8745$CSxK@ g$fl2$8746$CSxK@) (call-with-values g$C$16121$CSxK@ (case-lambda ((g$C$16118$CSxK@) (g$fldiv0-and-mod0$8674$CSxK@ g$C$16118$CSxK@ g$fl1$8745$CSxK@ g$fl2$8746$CSxK@))) (case-lambda ((g$C$16120$CSxK@ g$n$8749$CSxK@ g$d$8750$CSxK@) ((case-lambda ((g$C$16119$CSxK@ g$d$8751$CSxK@ g$n$8752$CSxK@) (g$C$16119$CSxK@ g$d$8751$CSxK@))) g$C$16120$CSxK@ g$d$8750$CSxK@ g$n$8749$CSxK@))))))))) (library-letrec*-identity 'g$flmod0$8678$CSxK@))) (g$flinteger?$8679$CSxK@ g$flinteger?$8796$CSxK@ ((case-lambda ((g$C$16258$CSxK@) (g$C$16258$CSxK@ (case-lambda ((g$C$16122$CSxK@ g$fl$8753$CSxK@) ((case-lambda ((g$J$16125$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16126$CSxK@) (not (case-lambda ((g$T$16127$CSxK@) (if g$T$16127$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16125$CSxK@ 'flinteger? '"not a flonum" g$fl$8753$CSxK@) (void g$J$16125$CSxK@)))) g$V$16126$CSxK@))) g$fl$8753$CSxK@))) (case-lambda (g$IGNORE$16123$CSxK@ (g$flmod$8677$CSxK@ (case-lambda ((g$V$16124$CSxK@) (fl=? g$C$16122$CSxK@ '0.0 g$V$16124$CSxK@))) g$fl$8753$CSxK@ '1.0))))))))) (library-letrec*-identity 'g$flinteger?$8679$CSxK@))) (g$flfinite?$8680$CSxK@ g$flfinite?$8797$CSxK@ ((case-lambda ((g$C$16259$CSxK@) (g$C$16259$CSxK@ (case-lambda ((g$C$16128$CSxK@ g$fl$8754$CSxK@) ((case-lambda ((g$J$16131$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16132$CSxK@) (not (case-lambda ((g$T$16133$CSxK@) (if g$T$16133$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16131$CSxK@ 'flfinite? '"not a flonum" g$fl$8754$CSxK@) (void g$J$16131$CSxK@)))) g$V$16132$CSxK@))) g$fl$8754$CSxK@))) (case-lambda (g$IGNORE$16129$CSxK@ (g$flinfinite?$8681$CSxK@ (case-lambda ((g$V$16130$CSxK@) (not g$C$16128$CSxK@ g$V$16130$CSxK@))) g$fl$8754$CSxK@))))))))) (library-letrec*-identity 'g$flfinite?$8680$CSxK@))) (g$flinfinite?$8681$CSxK@ g$flinfinite?$8798$CSxK@ ((case-lambda ((g$C$16260$CSxK@) (g$C$16260$CSxK@ (case-lambda ((g$C$16134$CSxK@ g$fl$8755$CSxK@) ((case-lambda ((g$J$16136$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16137$CSxK@) (not (case-lambda ((g$T$16138$CSxK@) (if g$T$16138$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16136$CSxK@ 'flinfinite? '"not a flonum" g$fl$8755$CSxK@) (void g$J$16136$CSxK@)))) g$V$16137$CSxK@))) g$fl$8755$CSxK@))) (case-lambda (g$IGNORE$16135$CSxK@ (g$C$16134$CSxK@ (clr-call-internal 'system.double 'isinfinity '() g$fl$8755$CSxK@)))))))))) (library-letrec*-identity 'g$flinfinite?$8681$CSxK@))) (g$flnan?$8682$CSxK@ g$flnan?$8799$CSxK@ ((case-lambda ((g$C$16261$CSxK@) (g$C$16261$CSxK@ (case-lambda ((g$C$16139$CSxK@ g$fl$8756$CSxK@) ((case-lambda ((g$J$16141$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16142$CSxK@) (not (case-lambda ((g$T$16143$CSxK@) (if g$T$16143$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16141$CSxK@ 'flnan? '"not a flonum" g$fl$8756$CSxK@) (void g$J$16141$CSxK@)))) g$V$16142$CSxK@))) g$fl$8756$CSxK@))) (case-lambda (g$IGNORE$16140$CSxK@ (g$C$16139$CSxK@ (clr-call-internal 'system.double 'isnan '() g$fl$8756$CSxK@)))))))))) (library-letrec*-identity 'g$flnan?$8682$CSxK@))) (g$flsin$8683$CSxK@ g$flsin$8800$CSxK@ ((case-lambda ((g$C$16262$CSxK@) (g$C$16262$CSxK@ (case-lambda ((g$C$16144$CSxK@ g$fl$8757$CSxK@) ((case-lambda ((g$J$16146$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16147$CSxK@) (not (case-lambda ((g$T$16148$CSxK@) (if g$T$16148$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16146$CSxK@ 'flsin '"not a flonum" g$fl$8757$CSxK@) (void g$J$16146$CSxK@)))) g$V$16147$CSxK@))) g$fl$8757$CSxK@))) (case-lambda (g$IGNORE$16145$CSxK@ (g$C$16144$CSxK@ (clr-call-internal 'system.math 'sin '() g$fl$8757$CSxK@)))))))))) (library-letrec*-identity 'g$flsin$8683$CSxK@))) (g$flcos$8684$CSxK@ g$flcos$8801$CSxK@ ((case-lambda ((g$C$16263$CSxK@) (g$C$16263$CSxK@ (case-lambda ((g$C$16149$CSxK@ g$fl$8758$CSxK@) ((case-lambda ((g$J$16151$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16152$CSxK@) (not (case-lambda ((g$T$16153$CSxK@) (if g$T$16153$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16151$CSxK@ 'flcos '"not a flonum" g$fl$8758$CSxK@) (void g$J$16151$CSxK@)))) g$V$16152$CSxK@))) g$fl$8758$CSxK@))) (case-lambda (g$IGNORE$16150$CSxK@ (g$C$16149$CSxK@ (clr-call-internal 'system.math 'cos '() g$fl$8758$CSxK@)))))))))) (library-letrec*-identity 'g$flcos$8684$CSxK@))) (g$fltan$8685$CSxK@ g$fltan$8802$CSxK@ ((case-lambda ((g$C$16264$CSxK@) (g$C$16264$CSxK@ (case-lambda ((g$C$16154$CSxK@ g$fl$8759$CSxK@) ((case-lambda ((g$J$16156$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16157$CSxK@) (not (case-lambda ((g$T$16158$CSxK@) (if g$T$16158$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16156$CSxK@ 'fltan '"not a flonum" g$fl$8759$CSxK@) (void g$J$16156$CSxK@)))) g$V$16157$CSxK@))) g$fl$8759$CSxK@))) (case-lambda (g$IGNORE$16155$CSxK@ (g$C$16154$CSxK@ (clr-call-internal 'system.math 'tan '() g$fl$8759$CSxK@)))))))))) (library-letrec*-identity 'g$fltan$8685$CSxK@))) (g$flasin$8686$CSxK@ g$flasin$8803$CSxK@ ((case-lambda ((g$C$16265$CSxK@) (g$C$16265$CSxK@ (case-lambda ((g$C$16159$CSxK@ g$fl$8760$CSxK@) ((case-lambda ((g$J$16161$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16162$CSxK@) (not (case-lambda ((g$T$16163$CSxK@) (if g$T$16163$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16161$CSxK@ 'flasin '"not a flonum" g$fl$8760$CSxK@) (void g$J$16161$CSxK@)))) g$V$16162$CSxK@))) g$fl$8760$CSxK@))) (case-lambda (g$IGNORE$16160$CSxK@ (g$C$16159$CSxK@ (clr-call-internal 'system.math 'asin '() g$fl$8760$CSxK@)))))))))) (library-letrec*-identity 'g$flasin$8686$CSxK@))) (g$flacos$8687$CSxK@ g$flacos$8804$CSxK@ ((case-lambda ((g$C$16266$CSxK@) (g$C$16266$CSxK@ (case-lambda ((g$C$16164$CSxK@ g$fl$8761$CSxK@) ((case-lambda ((g$J$16166$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16167$CSxK@) (not (case-lambda ((g$T$16168$CSxK@) (if g$T$16168$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16166$CSxK@ 'flacos '"not a flonum" g$fl$8761$CSxK@) (void g$J$16166$CSxK@)))) g$V$16167$CSxK@))) g$fl$8761$CSxK@))) (case-lambda (g$IGNORE$16165$CSxK@ (g$C$16164$CSxK@ (clr-call-internal 'system.math 'acos '() g$fl$8761$CSxK@)))))))))) (library-letrec*-identity 'g$flacos$8687$CSxK@))) (g$flatan$8688$CSxK@ g$flatan$8805$CSxK@ ((case-lambda ((g$C$16267$CSxK@) (g$C$16267$CSxK@ (case-lambda ((g$C$16169$CSxK@ g$fl$8762$CSxK@) (g$C$16169$CSxK@ (clr-call-internal 'system.math 'atan '() g$fl$8762$CSxK@))) ((g$C$16169$CSxK@ g$fl1$8763$CSxK@ g$fl2$8764$CSxK@) (g$C$16169$CSxK@ (clr-call-internal 'system.math 'atan2 '() g$fl1$8763$CSxK@ g$fl2$8764$CSxK@))))))) (library-letrec*-identity 'g$flatan$8688$CSxK@))) (g$fllog$8689$CSxK@ g$fllog$8806$CSxK@ ((case-lambda ((g$C$16268$CSxK@) (g$C$16268$CSxK@ (case-lambda ((g$C$16170$CSxK@ g$fl$8765$CSxK@) (g$C$16170$CSxK@ (clr-call-internal 'system.math 'log '() g$fl$8765$CSxK@))) ((g$C$16170$CSxK@ g$fl1$8766$CSxK@ g$fl2$8767$CSxK@) (g$C$16170$CSxK@ (clr-call-internal 'system.math 'log '() g$fl1$8766$CSxK@ g$fl2$8767$CSxK@))))))) (library-letrec*-identity 'g$fllog$8689$CSxK@))) (g$flsqrt$8690$CSxK@ g$flsqrt$8807$CSxK@ ((case-lambda ((g$C$16269$CSxK@) (g$C$16269$CSxK@ (case-lambda ((g$C$16171$CSxK@ g$fl$8768$CSxK@) ((case-lambda ((g$J$16173$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16174$CSxK@) (not (case-lambda ((g$T$16175$CSxK@) (if g$T$16175$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16173$CSxK@ 'flsqrt '"not a flonum" g$fl$8768$CSxK@) (void g$J$16173$CSxK@)))) g$V$16174$CSxK@))) g$fl$8768$CSxK@))) (case-lambda (g$IGNORE$16172$CSxK@ (g$C$16171$CSxK@ (clr-call-internal 'system.math 'sqrt '() g$fl$8768$CSxK@)))))))))) (library-letrec*-identity 'g$flsqrt$8690$CSxK@))) (g$flexp$8691$CSxK@ g$flexp$8808$CSxK@ ((case-lambda ((g$C$16270$CSxK@) (g$C$16270$CSxK@ (case-lambda ((g$C$16176$CSxK@ g$fl$8769$CSxK@) ((case-lambda ((g$J$16178$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16179$CSxK@) (not (case-lambda ((g$T$16180$CSxK@) (if g$T$16180$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16178$CSxK@ 'flexp '"not a flonum" g$fl$8769$CSxK@) (void g$J$16178$CSxK@)))) g$V$16179$CSxK@))) g$fl$8769$CSxK@))) (case-lambda (g$IGNORE$16177$CSxK@ (g$C$16176$CSxK@ (clr-call-internal 'system.math 'exp '() g$fl$8769$CSxK@)))))))))) (library-letrec*-identity 'g$flexp$8691$CSxK@))) (g$flexpt$8692$CSxK@ g$flexpt$8809$CSxK@ ((case-lambda ((g$C$16271$CSxK@) (g$C$16271$CSxK@ (case-lambda ((g$C$16181$CSxK@ g$fl$8770$CSxK@ g$n$8771$CSxK@) ((case-lambda ((g$J$16183$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16184$CSxK@) (not (case-lambda ((g$T$16185$CSxK@) (if g$T$16185$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16183$CSxK@ 'flexpt '"not a flonum" g$fl$8770$CSxK@) (void g$J$16183$CSxK@)))) g$V$16184$CSxK@))) g$fl$8770$CSxK@))) (case-lambda (g$IGNORE$16182$CSxK@ (g$C$16181$CSxK@ (clr-call-internal 'system.math 'pow '() g$fl$8770$CSxK@ g$n$8771$CSxK@)))))))))) (library-letrec*-identity 'g$flexpt$8692$CSxK@))) (g$flceiling$8693$CSxK@ g$flceiling$8810$CSxK@ ((case-lambda ((g$C$16272$CSxK@) (g$C$16272$CSxK@ (case-lambda ((g$C$16186$CSxK@ g$fl$8772$CSxK@) ((case-lambda ((g$J$16188$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16189$CSxK@) (not (case-lambda ((g$T$16190$CSxK@) (if g$T$16190$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16188$CSxK@ 'flceiling '"not a flonum" g$fl$8772$CSxK@) (void g$J$16188$CSxK@)))) g$V$16189$CSxK@))) g$fl$8772$CSxK@))) (case-lambda (g$IGNORE$16187$CSxK@ (g$C$16186$CSxK@ (clr-call-internal 'system.math '"ceiling(double)" '() g$fl$8772$CSxK@)))))))))) (library-letrec*-identity 'g$flceiling$8693$CSxK@))) (g$flfloor$8694$CSxK@ g$flfloor$8811$CSxK@ ((case-lambda ((g$C$16273$CSxK@) (g$C$16273$CSxK@ (case-lambda ((g$C$16191$CSxK@ g$fl$8773$CSxK@) ((case-lambda ((g$J$16193$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16194$CSxK@) (not (case-lambda ((g$T$16195$CSxK@) (if g$T$16195$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16193$CSxK@ 'flfloor '"not a flonum" g$fl$8773$CSxK@) (void g$J$16193$CSxK@)))) g$V$16194$CSxK@))) g$fl$8773$CSxK@))) (case-lambda (g$IGNORE$16192$CSxK@ (g$C$16191$CSxK@ (clr-call-internal 'system.math '"floor(double)" '() g$fl$8773$CSxK@)))))))))) (library-letrec*-identity 'g$flfloor$8694$CSxK@))) (g$fltruncate$8695$CSxK@ g$fltruncate$8812$CSxK@ ((case-lambda ((g$C$16274$CSxK@) (g$C$16274$CSxK@ (case-lambda ((g$C$16196$CSxK@ g$fl$8774$CSxK@) ((case-lambda ((g$J$16198$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16199$CSxK@) (not (case-lambda ((g$T$16200$CSxK@) (if g$T$16200$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16198$CSxK@ 'fltruncate '"not a flonum" g$fl$8774$CSxK@) (void g$J$16198$CSxK@)))) g$V$16199$CSxK@))) g$fl$8774$CSxK@))) (case-lambda (g$IGNORE$16197$CSxK@ (g$C$16196$CSxK@ (clr-call-internal 'system.math '"truncate(double)" '() g$fl$8774$CSxK@)))))))))) (library-letrec*-identity 'g$fltruncate$8695$CSxK@))) (g$flround$8696$CSxK@ g$flround$8813$CSxK@ ((case-lambda ((g$C$16275$CSxK@) (g$C$16275$CSxK@ (case-lambda ((g$C$16201$CSxK@ g$fl$8775$CSxK@) ((case-lambda ((g$J$16203$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16204$CSxK@) (not (case-lambda ((g$T$16205$CSxK@) (if g$T$16205$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16203$CSxK@ 'flround '"not a flonum" g$fl$8775$CSxK@) (void g$J$16203$CSxK@)))) g$V$16204$CSxK@))) g$fl$8775$CSxK@))) (case-lambda (g$IGNORE$16202$CSxK@ (g$C$16201$CSxK@ (clr-call-internal 'system.math '"round(double)" '() g$fl$8775$CSxK@)))))))))) (library-letrec*-identity 'g$flround$8696$CSxK@))) (g$flabs$8697$CSxK@ g$flabs$8814$CSxK@ ((case-lambda ((g$C$16276$CSxK@) (g$C$16276$CSxK@ (case-lambda ((g$C$16206$CSxK@ g$fl$8776$CSxK@) ((case-lambda ((g$J$16208$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16209$CSxK@) (not (case-lambda ((g$T$16210$CSxK@) (if g$T$16210$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16208$CSxK@ 'flabs '"not a flonum" g$fl$8776$CSxK@) (void g$J$16208$CSxK@)))) g$V$16209$CSxK@))) g$fl$8776$CSxK@))) (case-lambda (g$IGNORE$16207$CSxK@ (g$C$16206$CSxK@ (clr-call-internal 'system.math '"abs(double)" '() g$fl$8776$CSxK@)))))))))) (library-letrec*-identity 'g$flabs$8697$CSxK@))) (g$flpositive?$8698$CSxK@ g$flpositive?$8815$CSxK@ ((case-lambda ((g$C$16277$CSxK@) (g$C$16277$CSxK@ (case-lambda ((g$C$16211$CSxK@ g$r$8777$CSxK@) ((case-lambda ((g$J$16213$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16214$CSxK@) (not (case-lambda ((g$T$16215$CSxK@) (if g$T$16215$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16213$CSxK@ 'flpositive? '"not a flonum" g$r$8777$CSxK@) (void g$J$16213$CSxK@)))) g$V$16214$CSxK@))) g$r$8777$CSxK@))) (case-lambda (g$IGNORE$16212$CSxK@ (fl<? g$C$16211$CSxK@ '0.0 g$r$8777$CSxK@))))))))) (library-letrec*-identity 'g$flpositive?$8698$CSxK@))) (g$flnegative?$8699$CSxK@ g$flnegative?$8816$CSxK@ ((case-lambda ((g$C$16278$CSxK@) (g$C$16278$CSxK@ (case-lambda ((g$C$16216$CSxK@ g$r$8778$CSxK@) ((case-lambda ((g$J$16218$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16219$CSxK@) (not (case-lambda ((g$T$16220$CSxK@) (if g$T$16220$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16218$CSxK@ 'flnegative? '"not a flonum" g$r$8778$CSxK@) (void g$J$16218$CSxK@)))) g$V$16219$CSxK@))) g$r$8778$CSxK@))) (case-lambda (g$IGNORE$16217$CSxK@ (fl>? g$C$16216$CSxK@ '0.0 g$r$8778$CSxK@))))))))) (library-letrec*-identity 'g$flnegative?$8699$CSxK@))) (g$flzero?$8700$CSxK@ g$flzero?$8817$CSxK@ ((case-lambda ((g$C$16279$CSxK@) (g$C$16279$CSxK@ (case-lambda ((g$C$16221$CSxK@ g$r$8779$CSxK@) ((case-lambda ((g$J$16223$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16224$CSxK@) (not (case-lambda ((g$T$16225$CSxK@) (if g$T$16225$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16223$CSxK@ 'flzero? '"not a flonum" g$r$8779$CSxK@) (void g$J$16223$CSxK@)))) g$V$16224$CSxK@))) g$r$8779$CSxK@))) (case-lambda (g$IGNORE$16222$CSxK@ (fl=? g$C$16221$CSxK@ '0.0 g$r$8779$CSxK@))))))))) (library-letrec*-identity 'g$flzero?$8700$CSxK@))) (g$fleven?$8701$CSxK@ g$fleven?$8818$CSxK@ ((case-lambda ((g$C$16280$CSxK@) (g$C$16280$CSxK@ (case-lambda ((g$C$16226$CSxK@ g$n$8780$CSxK@) ((case-lambda ((g$J$16229$CSxK@) (integer-valued? (case-lambda ((g$V$16230$CSxK@) (not (case-lambda ((g$T$16231$CSxK@) (if g$T$16231$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16229$CSxK@ 'fleven? '"not integer valued" g$n$8780$CSxK@) (void g$J$16229$CSxK@)))) g$V$16230$CSxK@))) g$n$8780$CSxK@))) (case-lambda (g$IGNORE$16227$CSxK@ (g$flmod$8677$CSxK@ (case-lambda ((g$V$16228$CSxK@) (fl=? g$C$16226$CSxK@ '0.0 g$V$16228$CSxK@))) g$n$8780$CSxK@ '2.0))))))))) (library-letrec*-identity 'g$fleven?$8701$CSxK@))) (g$flodd?$8702$CSxK@ g$flodd?$8819$CSxK@ ((case-lambda ((g$C$16281$CSxK@) (g$C$16281$CSxK@ (case-lambda ((g$C$16232$CSxK@ g$n$8781$CSxK@) ((case-lambda ((g$J$16235$CSxK@) (integer-valued? (case-lambda ((g$V$16236$CSxK@) (not (case-lambda ((g$T$16237$CSxK@) (if g$T$16237$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16235$CSxK@ 'flodd? '"not integer valued" g$n$8781$CSxK@) (void g$J$16235$CSxK@)))) g$V$16236$CSxK@))) g$n$8781$CSxK@))) (case-lambda (g$IGNORE$16233$CSxK@ (g$flmod$8677$CSxK@ (case-lambda ((g$V$16234$CSxK@) (fl=? g$C$16232$CSxK@ '1.0 g$V$16234$CSxK@))) g$n$8781$CSxK@ '2.0))))))))) (library-letrec*-identity 'g$flodd?$8702$CSxK@))) (g$flmax$8703$CSxK@ g$flmax$8820$CSxK@ ((case-lambda ((g$C$16282$CSxK@) (g$C$16282$CSxK@ (case-lambda ((g$C$16240$CSxK@ g$a$8782$CSxK@ . g$rest$8783$CSxK@) ((case-lambda ((g$J$16242$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16243$CSxK@) (not (case-lambda ((g$T$16244$CSxK@) (if g$T$16244$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16242$CSxK@ 'flmax '"not a flonum" g$a$8782$CSxK@) (void g$J$16242$CSxK@)))) g$V$16243$CSxK@))) g$a$8782$CSxK@))) (case-lambda (g$IGNORE$16241$CSxK@ (g$fold-left$6716$CSxK@ g$C$16240$CSxK@ (case-lambda ((g$C$16238$CSxK@ g$a$8784$CSxK@ g$b$8785$CSxK@) (fl<? (case-lambda ((g$T$16239$CSxK@) (if g$T$16239$CSxK@ (g$C$16238$CSxK@ g$b$8785$CSxK@) (g$C$16238$CSxK@ g$a$8784$CSxK@)))) g$a$8784$CSxK@ g$b$8785$CSxK@))) g$a$8782$CSxK@ g$rest$8783$CSxK@))))))))) (library-letrec*-identity 'g$flmax$8703$CSxK@))) (g$flmin$8704$CSxK@ g$flmin$8821$CSxK@ ((case-lambda ((g$C$16283$CSxK@) (g$C$16283$CSxK@ (case-lambda ((g$C$16247$CSxK@ g$a$8786$CSxK@ . g$rest$8787$CSxK@) ((case-lambda ((g$J$16249$CSxK@) (g$flonum?$7388$CSxK@ (case-lambda ((g$V$16250$CSxK@) (not (case-lambda ((g$T$16251$CSxK@) (if g$T$16251$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16249$CSxK@ 'flmin '"not a flonum" g$a$8786$CSxK@) (void g$J$16249$CSxK@)))) g$V$16250$CSxK@))) g$a$8786$CSxK@))) (case-lambda (g$IGNORE$16248$CSxK@ (g$fold-left$6716$CSxK@ g$C$16247$CSxK@ (case-lambda ((g$C$16245$CSxK@ g$a$8788$CSxK@ g$b$8789$CSxK@) (fl>? (case-lambda ((g$T$16246$CSxK@) (if g$T$16246$CSxK@ (g$C$16245$CSxK@ g$b$8789$CSxK@) (g$C$16245$CSxK@ g$a$8788$CSxK@)))) g$a$8788$CSxK@ g$b$8789$CSxK@))) g$a$8786$CSxK@ g$rest$8787$CSxK@))))))))) (library-letrec*-identity 'g$flmin$8704$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme io ports) ((g$using$8823$CSxK@ g$using$8843$CSxK@ ((case-lambda ((g$C$16302$CSxK@) (g$C$16302$CSxK@ (clr-using-internal 'ironscheme.runtime)))) (library-letrec*-identity 'g$using$8823$CSxK@))) (g$put-datum$8824$CSxK@ g$put-datum$8844$CSxK@ ((case-lambda ((g$C$16303$CSxK@) (g$C$16303$CSxK@ (case-lambda ((g$C$16284$CSxK@ g$p$8832$CSxK@ g$datum$8833$CSxK@) (write g$C$16284$CSxK@ g$datum$8833$CSxK@ g$p$8832$CSxK@)))))) (library-letrec*-identity 'g$put-datum$8824$CSxK@))) (g$get-datum$8825$CSxK@ g$get-datum$8845$CSxK@ ((case-lambda ((g$C$16304$CSxK@) (g$C$16304$CSxK@ read))) (library-letrec*-identity 'g$get-datum$8825$CSxK@))) (g$get-output-string$8826$CSxK@ g$get-output-string$8846$CSxK@ ((case-lambda ((g$C$16305$CSxK@) (g$C$16305$CSxK@ (case-lambda ((g$C$16285$CSxK@ g$port$8834$CSxK@) (g$C$16285$CSxK@ (clr-call-internal 'ironscheme.runtime.stringwriter 'getbuffer g$port$8834$CSxK@))))))) (library-letrec*-identity 'g$get-output-string$8826$CSxK@))) (g$open-output-string$8827$CSxK@ g$open-output-string$8847$CSxK@ ((case-lambda ((g$C$16306$CSxK@) (g$C$16306$CSxK@ (case-lambda ((g$C$16286$CSxK@) (g$C$16286$CSxK@ (clr-new-internal 'ironscheme.runtime.stringwriter))))))) (library-letrec*-identity 'g$open-output-string$8827$CSxK@))) (g$open-string-output-port$8828$CSxK@ g$open-string-output-port$8848$CSxK@ ((case-lambda ((g$C$16307$CSxK@) (g$C$16307$CSxK@ (case-lambda ((g$C$16289$CSxK@) (g$open-output-string$8827$CSxK@ (case-lambda ((g$V$16290$CSxK@) ((case-lambda ((g$C$16288$CSxK@ g$p$8835$CSxK@) (values g$C$16288$CSxK@ g$p$8835$CSxK@ (case-lambda ((g$C$16287$CSxK@) (g$get-output-string$8826$CSxK@ g$C$16287$CSxK@ g$p$8835$CSxK@)))))) g$C$16289$CSxK@ g$V$16290$CSxK@))))))))) (library-letrec*-identity 'g$open-string-output-port$8828$CSxK@))) (g$port?$8829$CSxK@ g$port?$8849$CSxK@ ((case-lambda ((g$C$16308$CSxK@) (g$C$16308$CSxK@ (case-lambda ((g$C$16292$CSxK@ g$obj$8836$CSxK@) (textual-port? (case-lambda ((g$V$16293$CSxK@) ((case-lambda ((g$C$16291$CSxK@ g$t$8837$CSxK@) (if g$t$8837$CSxK@ (g$C$16291$CSxK@ g$t$8837$CSxK@) (binary-port? g$C$16291$CSxK@ g$obj$8836$CSxK@)))) g$C$16292$CSxK@ g$V$16293$CSxK@))) g$obj$8836$CSxK@)))))) (library-letrec*-identity 'g$port?$8829$CSxK@))) (g$call-with-string-output-port$8830$CSxK@ g$call-with-string-output-port$8850$CSxK@ ((case-lambda ((g$C$16309$CSxK@) (g$C$16309$CSxK@ (case-lambda ((g$C$16296$CSxK@ g$proc$8838$CSxK@) (g$open-output-string$8827$CSxK@ (case-lambda ((g$V$16297$CSxK@) ((case-lambda ((g$C$16294$CSxK@ g$p$8839$CSxK@) (g$call-with-port$8831$CSxK@ (case-lambda (g$IGNORE$16295$CSxK@ (g$get-output-string$8826$CSxK@ g$C$16294$CSxK@ g$p$8839$CSxK@))) g$p$8839$CSxK@ g$proc$8838$CSxK@))) g$C$16296$CSxK@ g$V$16297$CSxK@))))))))) (library-letrec*-identity 'g$call-with-string-output-port$8830$CSxK@))) (g$call-with-port$8831$CSxK@ g$call-with-port$8851$CSxK@ ((case-lambda ((g$C$16310$CSxK@) (g$C$16310$CSxK@ (case-lambda ((g$C$16300$CSxK@ g$port$8840$CSxK@ g$proc$8841$CSxK@) (g$proc$8841$CSxK@ (case-lambda ((g$V$16301$CSxK@) ((case-lambda ((g$C$16298$CSxK@ g$r$8842$CSxK@) (close-port (case-lambda (g$IGNORE$16299$CSxK@ (g$C$16298$CSxK@ g$r$8842$CSxK@))) g$port$8840$CSxK@))) g$C$16300$CSxK@ g$V$16301$CSxK@))) g$port$8840$CSxK@)))))) (library-letrec*-identity 'g$call-with-port$8831$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme io simple) ((g$peek-char$8852$CSxK@ g$peek-char$8904$CSxK@ ((case-lambda ((g$C$16357$CSxK@) (g$C$16357$CSxK@ (case-lambda ((g$C$16311$CSxK@) (current-input-port (case-lambda ((g$V$16312$CSxK@) (g$peek-char$8852$CSxK@ g$C$16311$CSxK@ g$V$16312$CSxK@))))) ((g$C$16311$CSxK@ g$port$8876$CSxK@) (lookahead-char g$C$16311$CSxK@ g$port$8876$CSxK@)))))) (library-letrec*-identity 'g$peek-char$8852$CSxK@))) (g$read-char$8853$CSxK@ g$read-char$8905$CSxK@ ((case-lambda ((g$C$16358$CSxK@) (g$C$16358$CSxK@ (case-lambda ((g$C$16313$CSxK@) (current-input-port (case-lambda ((g$V$16314$CSxK@) (g$read-char$8853$CSxK@ g$C$16313$CSxK@ g$V$16314$CSxK@))))) ((g$C$16313$CSxK@ g$port$8877$CSxK@) (get-char g$C$16313$CSxK@ g$port$8877$CSxK@)))))) (library-letrec*-identity 'g$read-char$8853$CSxK@))) (g$write-char$8854$CSxK@ g$write-char$8906$CSxK@ ((case-lambda ((g$C$16359$CSxK@) (g$C$16359$CSxK@ (case-lambda ((g$C$16315$CSxK@ g$chr$8878$CSxK@) (current-output-port (case-lambda ((g$V$16316$CSxK@) (g$write-char$8854$CSxK@ g$C$16315$CSxK@ g$chr$8878$CSxK@ g$V$16316$CSxK@))))) ((g$C$16315$CSxK@ g$chr$8879$CSxK@ g$port$8880$CSxK@) (put-char g$C$16315$CSxK@ g$port$8880$CSxK@ g$chr$8879$CSxK@)))))) (library-letrec*-identity 'g$write-char$8854$CSxK@))) (g$with-input-from-file$8871$CSxK@ g$with-input-from-file$8907$CSxK@ ((case-lambda ((g$C$16360$CSxK@) (g$C$16360$CSxK@ (case-lambda ((g$C$16328$CSxK@ g$filename$8881$CSxK@ g$thunk$8882$CSxK@) (open-input-file (case-lambda ((g$V$16329$CSxK@) ((case-lambda ((g$C$16327$CSxK@ g$current-input-port$8885$CSxK@ g$t$8886$CSxK@) ((case-lambda ((g$C$16322$CSxK@ g$swap$8887$CSxK@) (dynamic-wind g$C$16322$CSxK@ g$swap$8887$CSxK@ (case-lambda ((g$C$16321$CSxK@) (dynamic-wind g$C$16321$CSxK@ (case-lambda ((g$C$16317$CSxK@) (g$C$16317$CSxK@ '#f))) (case-lambda ((g$C$16318$CSxK@) (g$thunk$8882$CSxK@ g$C$16318$CSxK@))) (case-lambda ((g$C$16319$CSxK@) (current-input-port (case-lambda ((g$V$16320$CSxK@) (close-input-port g$C$16319$CSxK@ g$V$16320$CSxK@))))))))) g$swap$8887$CSxK@))) g$C$16327$CSxK@ (case-lambda ((g$C$16325$CSxK@) (g$current-input-port$8885$CSxK@ (case-lambda ((g$V$16326$CSxK@) ((case-lambda ((g$C$16323$CSxK@ g$t$8888$CSxK@) (g$current-input-port$8885$CSxK@ (case-lambda (g$IGNORE$16324$CSxK@ (begin (set! g$t$8886$CSxK@ g$t$8888$CSxK@) (g$C$16323$CSxK@ (cps-void))))) g$t$8886$CSxK@))) g$C$16325$CSxK@ g$V$16326$CSxK@))))))))) g$C$16328$CSxK@ current-input-port g$V$16329$CSxK@))) g$filename$8881$CSxK@)))))) (library-letrec*-identity 'g$with-input-from-file$8871$CSxK@))) (g$with-output-to-file$8872$CSxK@ g$with-output-to-file$8908$CSxK@ ((case-lambda ((g$C$16361$CSxK@) (g$C$16361$CSxK@ (case-lambda ((g$C$16341$CSxK@ g$filename$8889$CSxK@ g$thunk$8890$CSxK@) (open-output-file (case-lambda ((g$V$16342$CSxK@) ((case-lambda ((g$C$16340$CSxK@ g$current-output-port$8893$CSxK@ g$t$8894$CSxK@) ((case-lambda ((g$C$16335$CSxK@ g$swap$8895$CSxK@) (dynamic-wind g$C$16335$CSxK@ g$swap$8895$CSxK@ (case-lambda ((g$C$16334$CSxK@) (dynamic-wind g$C$16334$CSxK@ (case-lambda ((g$C$16330$CSxK@) (g$C$16330$CSxK@ '#f))) (case-lambda ((g$C$16331$CSxK@) (g$thunk$8890$CSxK@ g$C$16331$CSxK@))) (case-lambda ((g$C$16332$CSxK@) (current-output-port (case-lambda ((g$V$16333$CSxK@) (close-output-port g$C$16332$CSxK@ g$V$16333$CSxK@))))))))) g$swap$8895$CSxK@))) g$C$16340$CSxK@ (case-lambda ((g$C$16338$CSxK@) (g$current-output-port$8893$CSxK@ (case-lambda ((g$V$16339$CSxK@) ((case-lambda ((g$C$16336$CSxK@ g$t$8896$CSxK@) (g$current-output-port$8893$CSxK@ (case-lambda (g$IGNORE$16337$CSxK@ (begin (set! g$t$8894$CSxK@ g$t$8896$CSxK@) (g$C$16336$CSxK@ (cps-void))))) g$t$8894$CSxK@))) g$C$16338$CSxK@ g$V$16339$CSxK@))))))))) g$C$16341$CSxK@ current-output-port g$V$16342$CSxK@))) g$filename$8889$CSxK@)))))) (library-letrec*-identity 'g$with-output-to-file$8872$CSxK@))) (g$call-with-input-file$8873$CSxK@ g$call-with-input-file$8909$CSxK@ ((case-lambda ((g$C$16362$CSxK@) (g$C$16362$CSxK@ (case-lambda ((g$C$16347$CSxK@ g$filename$8897$CSxK@ g$proc$8898$CSxK@) (open-input-file (case-lambda ((g$V$16348$CSxK@) ((case-lambda ((g$C$16346$CSxK@ g$p$8899$CSxK@) (dynamic-wind g$C$16346$CSxK@ (case-lambda ((g$C$16343$CSxK@) (g$C$16343$CSxK@ '#f))) (case-lambda ((g$C$16344$CSxK@) (g$proc$8898$CSxK@ g$C$16344$CSxK@ g$p$8899$CSxK@))) (case-lambda ((g$C$16345$CSxK@) (close-input-port g$C$16345$CSxK@ g$p$8899$CSxK@)))))) g$C$16347$CSxK@ g$V$16348$CSxK@))) g$filename$8897$CSxK@)))))) (library-letrec*-identity 'g$call-with-input-file$8873$CSxK@))) (g$call-with-output-file$8874$CSxK@ g$call-with-output-file$8910$CSxK@ ((case-lambda ((g$C$16363$CSxK@) (g$C$16363$CSxK@ (case-lambda ((g$C$16353$CSxK@ g$filename$8900$CSxK@ g$proc$8901$CSxK@) (open-output-file (case-lambda ((g$V$16354$CSxK@) ((case-lambda ((g$C$16352$CSxK@ g$p$8902$CSxK@) (dynamic-wind g$C$16352$CSxK@ (case-lambda ((g$C$16349$CSxK@) (g$C$16349$CSxK@ '#f))) (case-lambda ((g$C$16350$CSxK@) (g$proc$8901$CSxK@ g$C$16350$CSxK@ g$p$8902$CSxK@))) (case-lambda ((g$C$16351$CSxK@) (close-output-port g$C$16351$CSxK@ g$p$8902$CSxK@)))))) g$C$16353$CSxK@ g$V$16354$CSxK@))) g$filename$8900$CSxK@)))))) (library-letrec*-identity 'g$call-with-output-file$8874$CSxK@))) (g$newline$8875$CSxK@ g$newline$8911$CSxK@ ((case-lambda ((g$C$16364$CSxK@) (g$C$16364$CSxK@ (case-lambda ((g$C$16355$CSxK@) (current-output-port (case-lambda ((g$V$16356$CSxK@) (g$newline$8875$CSxK@ g$C$16355$CSxK@ g$V$16356$CSxK@))))) ((g$C$16355$CSxK@ g$port$8903$CSxK@) (display g$C$16355$CSxK@ '"\n" g$port$8903$CSxK@)))))) (library-letrec*-identity 'g$newline$8875$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme records inspection) () (void identity-for-cps))(library-letrec* (ironscheme records procedural) () (void identity-for-cps))(library-letrec* (ironscheme records syntactic) () (void identity-for-cps))(library-letrec* (ironscheme enums) ((g$7106$8912$CSxK@ g$7106$9025$CSxK@ ((case-lambda ((g$C$16558$CSxK@) (make-record-type-descriptor g$C$16558$CSxK@ 'enum '#f '#f '#f '#f '#((immutable value) (immutable info))))) (library-letrec*-identity 'g$7106$8912$CSxK@))) (g$7108$8913$CSxK@ g$7108$9026$CSxK@ ((case-lambda ((g$C$16559$CSxK@) (g$C$16559$CSxK@ '#f))) (library-letrec*-identity 'g$7108$8913$CSxK@))) (g$7107$8914$CSxK@ g$7107$9027$CSxK@ ((case-lambda ((g$C$16560$CSxK@) (make-record-constructor-descriptor g$C$16560$CSxK@ g$7106$8912$CSxK@ '#f g$7108$8913$CSxK@))) (library-letrec*-identity 'g$7107$8914$CSxK@))) (g$enum?$8917$CSxK@ g$enum?$9028$CSxK@ ((case-lambda ((g$C$16561$CSxK@) (record-predicate g$C$16561$CSxK@ g$7106$8912$CSxK@))) (library-letrec*-identity 'g$enum?$8917$CSxK@))) (g$make-enum$8918$CSxK@ g$make-enum$9029$CSxK@ ((case-lambda ((g$C$16562$CSxK@) (record-constructor g$C$16562$CSxK@ g$7107$8914$CSxK@))) (library-letrec*-identity 'g$make-enum$8918$CSxK@))) (g$enum-value$8919$CSxK@ g$enum-value$9030$CSxK@ ((case-lambda ((g$C$16563$CSxK@) (record-accessor g$C$16563$CSxK@ g$7106$8912$CSxK@ '0))) (library-letrec*-identity 'g$enum-value$8919$CSxK@))) (g$enum-info$8920$CSxK@ g$enum-info$9031$CSxK@ ((case-lambda ((g$C$16564$CSxK@) (record-accessor g$C$16564$CSxK@ g$7106$8912$CSxK@ '1))) (library-letrec*-identity 'g$enum-info$8920$CSxK@))) (g$7117$8921$CSxK@ g$7117$9032$CSxK@ ((case-lambda ((g$C$16565$CSxK@) (make-record-type-descriptor g$C$16565$CSxK@ 'enum-universe '#f '#f '#f '#f '#((immutable id) (immutable symbols) (immutable mapping) (immutable value))))) (library-letrec*-identity 'g$7117$8921$CSxK@))) (g$7119$8922$CSxK@ g$7119$9033$CSxK@ ((case-lambda ((g$C$16566$CSxK@) (g$C$16566$CSxK@ '#f))) (library-letrec*-identity 'g$7119$8922$CSxK@))) (g$7118$8923$CSxK@ g$7118$9034$CSxK@ ((case-lambda ((g$C$16567$CSxK@) (make-record-constructor-descriptor g$C$16567$CSxK@ g$7117$8921$CSxK@ '#f g$7119$8922$CSxK@))) (library-letrec*-identity 'g$7118$8923$CSxK@))) (g$enum-universe?$8926$CSxK@ g$enum-universe?$9035$CSxK@ ((case-lambda ((g$C$16568$CSxK@) (record-predicate g$C$16568$CSxK@ g$7117$8921$CSxK@))) (library-letrec*-identity 'g$enum-universe?$8926$CSxK@))) (g$make-enum-universe$8927$CSxK@ g$make-enum-universe$9036$CSxK@ ((case-lambda ((g$C$16569$CSxK@) (record-constructor g$C$16569$CSxK@ g$7118$8923$CSxK@))) (library-letrec*-identity 'g$make-enum-universe$8927$CSxK@))) (g$enum-universe-id$8928$CSxK@ g$enum-universe-id$9037$CSxK@ ((case-lambda ((g$C$16570$CSxK@) (record-accessor g$C$16570$CSxK@ g$7117$8921$CSxK@ '0))) (library-letrec*-identity 'g$enum-universe-id$8928$CSxK@))) (g$enum-universe-symbols$8929$CSxK@ g$enum-universe-symbols$9038$CSxK@ ((case-lambda ((g$C$16571$CSxK@) (record-accessor g$C$16571$CSxK@ g$7117$8921$CSxK@ '1))) (library-letrec*-identity 'g$enum-universe-symbols$8929$CSxK@))) (g$enum-universe-mapping$8930$CSxK@ g$enum-universe-mapping$9039$CSxK@ ((case-lambda ((g$C$16572$CSxK@) (record-accessor g$C$16572$CSxK@ g$7117$8921$CSxK@ '2))) (library-letrec*-identity 'g$enum-universe-mapping$8930$CSxK@))) (g$enum-universe-value$8931$CSxK@ g$enum-universe-value$9040$CSxK@ ((case-lambda ((g$C$16573$CSxK@) (record-accessor g$C$16573$CSxK@ g$7117$8921$CSxK@ '3))) (library-letrec*-identity 'g$enum-universe-value$8931$CSxK@))) (g$enum-type=?$8932$CSxK@ g$enum-type=?$9041$CSxK@ ((case-lambda ((g$C$16574$CSxK@) (g$C$16574$CSxK@ (case-lambda ((g$C$16365$CSxK@ g$enumset1$8954$CSxK@ g$enumset2$8955$CSxK@) (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16366$CSxK@) (g$enum-universe-id$8928$CSxK@ (case-lambda ((g$V$16367$CSxK@) (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16368$CSxK@) (g$enum-universe-id$8928$CSxK@ (case-lambda ((g$V$16369$CSxK@) (eq? g$C$16365$CSxK@ g$V$16369$CSxK@ g$V$16367$CSxK@))) g$V$16368$CSxK@))) g$enumset1$8954$CSxK@))) g$V$16366$CSxK@))) g$enumset2$8955$CSxK@)))))) (library-letrec*-identity 'g$enum-type=?$8932$CSxK@))) (g$get-symbols$8933$CSxK@ g$get-symbols$9042$CSxK@ ((case-lambda ((g$C$16575$CSxK@) (g$C$16575$CSxK@ (case-lambda ((g$C$16370$CSxK@ g$enumset$8956$CSxK@) (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16371$CSxK@) (g$enum-universe-symbols$8929$CSxK@ g$C$16370$CSxK@ g$V$16371$CSxK@))) g$enumset$8956$CSxK@)))))) (library-letrec*-identity 'g$get-symbols$8933$CSxK@))) (g$get-value$8934$CSxK@ g$get-value$9043$CSxK@ ((case-lambda ((g$C$16576$CSxK@) (g$C$16576$CSxK@ (case-lambda ((g$C$16372$CSxK@ g$enumset$8957$CSxK@ g$s$8958$CSxK@) (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16373$CSxK@) (g$enum-universe-mapping$8930$CSxK@ (case-lambda ((g$V$16374$CSxK@) (g$hashtable-ref$7486$CSxK@ g$C$16372$CSxK@ g$V$16374$CSxK@ g$s$8958$CSxK@ '#f))) g$V$16373$CSxK@))) g$enumset$8957$CSxK@)))))) (library-letrec*-identity 'g$get-value$8934$CSxK@))) (g$assert-enum$8935$CSxK@ g$assert-enum$9044$CSxK@ ((case-lambda ((g$C$16577$CSxK@) (g$C$16577$CSxK@ (case-lambda ((g$C$16375$CSxK@ g$who$8959$CSxK@ g$enumset$8960$CSxK@) (g$enum?$8917$CSxK@ (case-lambda ((g$V$16376$CSxK@) (not (case-lambda ((g$T$16377$CSxK@) (if g$T$16377$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$16375$CSxK@ g$who$8959$CSxK@ '"not an enumeration" g$enumset$8960$CSxK@) (void g$C$16375$CSxK@)))) g$V$16376$CSxK@))) g$enumset$8960$CSxK@)))))) (library-letrec*-identity 'g$assert-enum$8935$CSxK@))) (g$make-info$8936$CSxK@ g$make-info$9045$CSxK@ ((case-lambda ((g$C$16578$CSxK@) (g$C$16578$CSxK@ (case-lambda ((g$C$16396$CSxK@ g$symbols$8961$CSxK@) (g$make-eq-hashtable$7483$CSxK@ (case-lambda ((g$V$16397$CSxK@) ((case-lambda ((g$C$16394$CSxK@ g$ht$8962$CSxK@) ((case-lambda ((g$C$16393$CSxK@ g$f$8963$CSxK@) ((case-lambda ((g$C$16379$CSxK@ g$f$16378$CSxK@) (begin (set! g$f$8963$CSxK@ g$f$16378$CSxK@) (g$C$16379$CSxK@ g$f$8963$CSxK@)))) g$C$16393$CSxK@ (case-lambda ((g$C$16388$CSxK@ g$s$8964$CSxK@ g$a$8965$CSxK@ g$mask$8966$CSxK@) (null? (case-lambda ((g$T$16389$CSxK@) (if g$T$16389$CSxK@ (- (case-lambda ((g$V$16390$CSxK@) (reverse! (case-lambda ((g$V$16391$CSxK@) (values g$C$16388$CSxK@ g$V$16391$CSxK@ g$ht$8962$CSxK@ g$V$16390$CSxK@))) g$a$8965$CSxK@))) g$mask$8966$CSxK@ '1) (car (case-lambda ((g$V$16392$CSxK@) ((case-lambda ((g$C$16380$CSxK@ g$n$8967$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$16381$CSxK@) (if g$T$16381$CSxK@ (g$hashtable-contains?$7489$CSxK@ (case-lambda ((g$T$16382$CSxK@) (if g$T$16382$CSxK@ (cdr (case-lambda ((g$V$16383$CSxK@) (g$f$8963$CSxK@ g$C$16380$CSxK@ g$V$16383$CSxK@ g$a$8965$CSxK@ g$mask$8966$CSxK@))) g$s$8964$CSxK@) (g$hashtable-set!$7487$CSxK@ (case-lambda (g$IGNORE$16384$CSxK@ (g$bitwise-arithmetic-shift-left$8544$CSxK@ (case-lambda ((g$V$16385$CSxK@) (cons (case-lambda ((g$V$16386$CSxK@) (cdr (case-lambda ((g$V$16387$CSxK@) (g$f$8963$CSxK@ g$C$16380$CSxK@ g$V$16387$CSxK@ g$V$16386$CSxK@ g$V$16385$CSxK@))) g$s$8964$CSxK@))) g$n$8967$CSxK@ g$a$8965$CSxK@))) g$mask$8966$CSxK@ '1))) g$ht$8962$CSxK@ g$n$8967$CSxK@ g$mask$8966$CSxK@)))) g$ht$8962$CSxK@ g$n$8967$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$16380$CSxK@ 'make-enumeration '"not a symbol" g$n$8967$CSxK@)))) g$n$8967$CSxK@))) g$C$16388$CSxK@ g$V$16392$CSxK@))) g$s$8964$CSxK@)))) g$s$8964$CSxK@)))))) (case-lambda ((g$V$16395$CSxK@) (g$V$16395$CSxK@ g$C$16394$CSxK@ g$symbols$8961$CSxK@ '() '1))) uninitialized))) g$C$16396$CSxK@ g$V$16397$CSxK@))))))))) (library-letrec*-identity 'g$make-info$8936$CSxK@))) (g$make-name$8937$CSxK@ g$make-name$9046$CSxK@ ((case-lambda ((g$C$16579$CSxK@) (g$C$16579$CSxK@ (case-lambda ((g$C$16398$CSxK@ g$symbols$8968$CSxK@) (g$format$9085$CSxK@ (case-lambda ((g$V$16399$CSxK@) (string->symbol g$C$16398$CSxK@ g$V$16399$CSxK@))) '"~a" g$symbols$8968$CSxK@)))))) (library-letrec*-identity 'g$make-name$8937$CSxK@))) (g$make-enumeration$8938$CSxK@ g$make-enumeration$9047$CSxK@ ((case-lambda ((g$C$16580$CSxK@) (g$C$16580$CSxK@ (case-lambda ((g$C$16405$CSxK@ g$symbols$8969$CSxK@) (call-with-values g$C$16405$CSxK@ (case-lambda ((g$C$16400$CSxK@) (g$make-info$8936$CSxK@ g$C$16400$CSxK@ g$symbols$8969$CSxK@))) (case-lambda ((g$C$16404$CSxK@ g$s$8973$CSxK@ g$mapping$8974$CSxK@ g$mask$8975$CSxK@) ((case-lambda ((g$C$16401$CSxK@ g$mask$8976$CSxK@ g$mapping$8977$CSxK@ g$s$8978$CSxK@) (g$make-name$8937$CSxK@ (case-lambda ((g$V$16402$CSxK@) (g$make-enum-universe$8927$CSxK@ (case-lambda ((g$V$16403$CSxK@) (g$make-enum$8918$CSxK@ g$C$16401$CSxK@ g$mask$8976$CSxK@ g$V$16403$CSxK@))) g$V$16402$CSxK@ g$s$8978$CSxK@ g$mapping$8977$CSxK@ g$mask$8976$CSxK@))) g$s$8978$CSxK@))) g$C$16404$CSxK@ g$mask$8975$CSxK@ g$mapping$8974$CSxK@ g$s$8973$CSxK@))))))))) (library-letrec*-identity 'g$make-enumeration$8938$CSxK@))) (g$enum-set-universe$8939$CSxK@ g$enum-set-universe$9048$CSxK@ ((case-lambda ((g$C$16581$CSxK@) (g$C$16581$CSxK@ (case-lambda ((g$C$16408$CSxK@ g$enumset$8979$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16409$CSxK@ (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16410$CSxK@) ((case-lambda ((g$C$16406$CSxK@ g$ei$8980$CSxK@) (g$enum-universe-value$8931$CSxK@ (case-lambda ((g$V$16407$CSxK@) (g$make-enum$8918$CSxK@ g$C$16406$CSxK@ g$V$16407$CSxK@ g$ei$8980$CSxK@))) g$ei$8980$CSxK@))) g$C$16408$CSxK@ g$V$16410$CSxK@))) g$enumset$8979$CSxK@))) 'enum-set-universe g$enumset$8979$CSxK@)))))) (library-letrec*-identity 'g$enum-set-universe$8939$CSxK@))) (g$enum-set-indexer$8940$CSxK@ g$enum-set-indexer$9049$CSxK@ ((case-lambda ((g$C$16582$CSxK@) (g$C$16582$CSxK@ (case-lambda ((g$C$16419$CSxK@ g$enumset$8981$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16420$CSxK@ (g$C$16419$CSxK@ (case-lambda ((g$C$16413$CSxK@ g$symbol$8982$CSxK@) ((case-lambda ((g$J$16416$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$V$16417$CSxK@) (not (case-lambda ((g$T$16418$CSxK@) (if g$T$16418$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16416$CSxK@ 'enum-set-indexer '"not a symbol" g$symbol$8982$CSxK@) (void g$J$16416$CSxK@)))) g$V$16417$CSxK@))) g$symbol$8982$CSxK@))) (case-lambda (g$IGNORE$16414$CSxK@ (g$get-value$8934$CSxK@ (case-lambda ((g$V$16415$CSxK@) ((case-lambda ((g$C$16411$CSxK@ g$v$8983$CSxK@) (if g$v$8983$CSxK@ (bitwise-length (case-lambda ((g$V$16412$CSxK@) (- g$C$16411$CSxK@ g$V$16412$CSxK@ '1))) g$v$8983$CSxK@) (g$C$16411$CSxK@ '#f)))) g$C$16413$CSxK@ g$V$16415$CSxK@))) g$enumset$8981$CSxK@ g$symbol$8982$CSxK@))))))))) 'enum-set-indexer g$enumset$8981$CSxK@)))))) (library-letrec*-identity 'g$enum-set-indexer$8940$CSxK@))) (g$enum-set-constructor$8941$CSxK@ g$enum-set-constructor$9050$CSxK@ ((case-lambda ((g$C$16583$CSxK@) (g$C$16583$CSxK@ (case-lambda ((g$C$16436$CSxK@ g$enumset$8984$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16437$CSxK@ (g$C$16436$CSxK@ (case-lambda ((g$C$16434$CSxK@ g$symbols$8985$CSxK@) ((case-lambda ((g$C$16433$CSxK@ g$f$8986$CSxK@) ((case-lambda ((g$C$16422$CSxK@ g$f$16421$CSxK@) (begin (set! g$f$8986$CSxK@ g$f$16421$CSxK@) (g$C$16422$CSxK@ g$f$8986$CSxK@)))) g$C$16433$CSxK@ (case-lambda ((g$C$16429$CSxK@ g$v$8987$CSxK@ g$s$8988$CSxK@) (null? (case-lambda ((g$T$16430$CSxK@) (if g$T$16430$CSxK@ (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16431$CSxK@) (g$make-enum$8918$CSxK@ g$C$16429$CSxK@ g$v$8987$CSxK@ g$V$16431$CSxK@))) g$enumset$8984$CSxK@) (car (case-lambda ((g$V$16432$CSxK@) ((case-lambda ((g$C$16426$CSxK@ g$n$8989$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$16427$CSxK@) (if g$T$16427$CSxK@ (g$get-value$8934$CSxK@ (case-lambda ((g$V$16428$CSxK@) ((case-lambda ((g$C$16423$CSxK@ g$v*$8990$CSxK@) (if g$v*$8990$CSxK@ (cdr (case-lambda ((g$V$16424$CSxK@) (bitwise-ior (case-lambda ((g$V$16425$CSxK@) (g$f$8986$CSxK@ g$C$16423$CSxK@ g$V$16425$CSxK@ g$V$16424$CSxK@))) g$v$8987$CSxK@ g$v*$8990$CSxK@))) g$s$8988$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$16423$CSxK@ 'enum-set-constructor '"not a member of enum-set" g$n$8989$CSxK@)))) g$C$16426$CSxK@ g$V$16428$CSxK@))) g$enumset$8984$CSxK@ g$n$8989$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$16426$CSxK@ 'enum-set-constructor '"not a symbol" g$n$8989$CSxK@)))) g$n$8989$CSxK@))) g$C$16429$CSxK@ g$V$16432$CSxK@))) g$s$8988$CSxK@)))) g$s$8988$CSxK@)))))) (case-lambda ((g$V$16435$CSxK@) (g$V$16435$CSxK@ g$C$16434$CSxK@ '0 g$symbols$8985$CSxK@))) uninitialized)))))) 'enum-set-constructor g$enumset$8984$CSxK@)))))) (library-letrec*-identity 'g$enum-set-constructor$8941$CSxK@))) (g$enum-set->list$8942$CSxK@ g$enum-set->list$9051$CSxK@ ((case-lambda ((g$C$16584$CSxK@) (g$C$16584$CSxK@ (case-lambda ((g$C$16454$CSxK@ g$enumset$8991$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16455$CSxK@ (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16456$CSxK@) ((case-lambda ((g$C$16451$CSxK@ g$value$8992$CSxK@) (g$get-symbols$8933$CSxK@ (case-lambda ((g$V$16452$CSxK@) ((case-lambda ((g$C$16450$CSxK@ g$f$8993$CSxK@) ((case-lambda ((g$C$16439$CSxK@ g$f$16438$CSxK@) (begin (set! g$f$8993$CSxK@ g$f$16438$CSxK@) (g$C$16439$CSxK@ g$f$8993$CSxK@)))) g$C$16450$CSxK@ (case-lambda ((g$C$16440$CSxK@ g$s$8994$CSxK@ g$l$8995$CSxK@) (null? (case-lambda ((g$T$16441$CSxK@) (if g$T$16441$CSxK@ (reverse! g$C$16440$CSxK@ g$l$8995$CSxK@) (car (case-lambda ((g$V$16442$CSxK@) (g$get-value$8934$CSxK@ (case-lambda ((g$V$16443$CSxK@) (bitwise-and (case-lambda ((g$V$16444$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$T$16445$CSxK@) (if g$T$16445$CSxK@ (cdr (case-lambda ((g$V$16446$CSxK@) (g$f$8993$CSxK@ g$C$16440$CSxK@ g$V$16446$CSxK@ g$l$8995$CSxK@))) g$s$8994$CSxK@) (car (case-lambda ((g$V$16447$CSxK@) (cons (case-lambda ((g$V$16448$CSxK@) (cdr (case-lambda ((g$V$16449$CSxK@) (g$f$8993$CSxK@ g$C$16440$CSxK@ g$V$16449$CSxK@ g$V$16448$CSxK@))) g$s$8994$CSxK@))) g$V$16447$CSxK@ g$l$8995$CSxK@))) g$s$8994$CSxK@)))) g$V$16444$CSxK@))) g$V$16443$CSxK@ g$value$8992$CSxK@))) g$enumset$8991$CSxK@ g$V$16442$CSxK@))) g$s$8994$CSxK@)))) g$s$8994$CSxK@)))))) (case-lambda ((g$V$16453$CSxK@) (g$V$16453$CSxK@ g$C$16451$CSxK@ g$V$16452$CSxK@ '()))) uninitialized))) g$enumset$8991$CSxK@))) g$C$16454$CSxK@ g$V$16456$CSxK@))) g$enumset$8991$CSxK@))) 'enum-set->list g$enumset$8991$CSxK@)))))) (library-letrec*-identity 'g$enum-set->list$8942$CSxK@))) (g$enum-set-member?$8943$CSxK@ g$enum-set-member?$9052$CSxK@ ((case-lambda ((g$C$16585$CSxK@) (g$C$16585$CSxK@ (case-lambda ((g$C$16461$CSxK@ g$symbol$8996$CSxK@ g$enumset$8997$CSxK@) ((case-lambda ((g$J$16465$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$V$16466$CSxK@) (not (case-lambda ((g$T$16467$CSxK@) (if g$T$16467$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$16465$CSxK@ 'enum-set-member? '"not a symbol" g$symbol$8996$CSxK@) (void g$J$16465$CSxK@)))) g$V$16466$CSxK@))) g$symbol$8996$CSxK@))) (case-lambda (g$IGNORE$16462$CSxK@ (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16463$CSxK@ (g$get-value$8934$CSxK@ (case-lambda ((g$V$16464$CSxK@) ((case-lambda ((g$C$16457$CSxK@ g$v$8998$CSxK@) (if g$v$8998$CSxK@ (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16458$CSxK@) (bitwise-and (case-lambda ((g$V$16459$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$V$16460$CSxK@) (not g$C$16457$CSxK@ g$V$16460$CSxK@))) g$V$16459$CSxK@))) g$v$8998$CSxK@ g$V$16458$CSxK@))) g$enumset$8997$CSxK@) (g$C$16457$CSxK@ '#f)))) g$C$16461$CSxK@ g$V$16464$CSxK@))) g$enumset$8997$CSxK@ g$symbol$8996$CSxK@))) 'enum-set-member? g$enumset$8997$CSxK@))))))))) (library-letrec*-identity 'g$enum-set-member?$8943$CSxK@))) (g$enum-set-subset?$8944$CSxK@ g$enum-set-subset?$9053$CSxK@ ((case-lambda ((g$C$16586$CSxK@) (g$C$16586$CSxK@ (case-lambda ((g$C$16493$CSxK@ g$enumset1$8999$CSxK@ g$enumset2$9000$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16494$CSxK@ (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16495$CSxK@ (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16496$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16497$CSxK@) ((case-lambda ((g$C$16488$CSxK@ g$v1$9001$CSxK@ g$v2$9002$CSxK@) (g$enum-type=?$8932$CSxK@ (case-lambda ((g$T$16489$CSxK@) (if g$T$16489$CSxK@ (bitwise-and (case-lambda ((g$V$16490$CSxK@) (= g$C$16488$CSxK@ g$V$16490$CSxK@ g$v1$9001$CSxK@))) g$v1$9001$CSxK@ g$v2$9002$CSxK@) (g$get-symbols$8933$CSxK@ (case-lambda ((g$V$16491$CSxK@) ((case-lambda ((g$C$16487$CSxK@ g$f$9003$CSxK@) ((case-lambda ((g$C$16469$CSxK@ g$f$16468$CSxK@) (begin (set! g$f$9003$CSxK@ g$f$16468$CSxK@) (g$C$16469$CSxK@ g$f$9003$CSxK@)))) g$C$16487$CSxK@ (case-lambda ((g$C$16481$CSxK@ g$s$9004$CSxK@) (null? (case-lambda ((g$T$16482$CSxK@) (if g$T$16482$CSxK@ (g$C$16481$CSxK@ '#t) (car (case-lambda ((g$V$16483$CSxK@) (g$get-value$8934$CSxK@ (case-lambda ((g$V$16484$CSxK@) (car (case-lambda ((g$V$16485$CSxK@) (g$get-value$8934$CSxK@ (case-lambda ((g$V$16486$CSxK@) ((case-lambda ((g$C$16474$CSxK@ g$v1*$9005$CSxK@ g$v2*$9006$CSxK@) (if g$v2*$9006$CSxK@ (bitwise-and (case-lambda ((g$V$16475$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$V$16476$CSxK@) (not (case-lambda ((g$V$16477$CSxK@) (bitwise-and (case-lambda ((g$V$16478$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$V$16479$CSxK@) (not (case-lambda ((g$V$16480$CSxK@) ((case-lambda ((g$C$16470$CSxK@ g$has1$9007$CSxK@ g$has2$9008$CSxK@) ((case-lambda ((g$J$16473$CSxK@) (if g$has1$9007$CSxK@ (not g$J$16473$CSxK@ g$has2$9008$CSxK@) (g$J$16473$CSxK@ '#f)))) (case-lambda ((g$T$16471$CSxK@) (if g$T$16471$CSxK@ (g$C$16470$CSxK@ '#f) (cdr (case-lambda ((g$V$16472$CSxK@) (g$f$9003$CSxK@ g$C$16470$CSxK@ g$V$16472$CSxK@))) g$s$9004$CSxK@))))))) g$C$16474$CSxK@ g$V$16480$CSxK@ g$V$16477$CSxK@))) g$V$16479$CSxK@))) g$V$16478$CSxK@))) g$v1$9001$CSxK@ g$v1*$9005$CSxK@))) g$V$16476$CSxK@))) g$V$16475$CSxK@))) g$v2$9002$CSxK@ g$v2*$9006$CSxK@) (g$C$16474$CSxK@ '#f)))) g$C$16481$CSxK@ g$V$16486$CSxK@ g$V$16484$CSxK@))) g$enumset1$8999$CSxK@ g$V$16485$CSxK@))) g$s$9004$CSxK@))) g$enumset2$9000$CSxK@ g$V$16483$CSxK@))) g$s$9004$CSxK@)))) g$s$9004$CSxK@)))))) (case-lambda ((g$V$16492$CSxK@) (g$V$16492$CSxK@ g$C$16488$CSxK@ g$V$16491$CSxK@))) uninitialized))) g$enumset1$8999$CSxK@)))) g$enumset1$8999$CSxK@ g$enumset2$9000$CSxK@))) g$C$16493$CSxK@ g$V$16497$CSxK@ g$V$16496$CSxK@))) g$enumset1$8999$CSxK@))) g$enumset2$9000$CSxK@))) 'enum-set-subset? g$enumset2$9000$CSxK@))) 'enum-set-subset? g$enumset1$8999$CSxK@)))))) (library-letrec*-identity 'g$enum-set-subset?$8944$CSxK@))) (g$enum-set=?$8945$CSxK@ g$enum-set=?$9054$CSxK@ ((case-lambda ((g$C$16587$CSxK@) (g$C$16587$CSxK@ (case-lambda ((g$C$16498$CSxK@ g$enumset1$9009$CSxK@ g$enumset2$9010$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16499$CSxK@ (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16500$CSxK@ (g$enum-set-subset?$8944$CSxK@ (case-lambda ((g$T$16501$CSxK@) (if g$T$16501$CSxK@ (g$enum-set-subset?$8944$CSxK@ g$C$16498$CSxK@ g$enumset2$9010$CSxK@ g$enumset1$9009$CSxK@) (g$C$16498$CSxK@ '#f)))) g$enumset1$9009$CSxK@ g$enumset2$9010$CSxK@))) 'enum-set=? g$enumset2$9010$CSxK@))) 'enum-set=? g$enumset1$9009$CSxK@)))))) (library-letrec*-identity 'g$enum-set=?$8945$CSxK@))) (g$enum-set-union$8946$CSxK@ g$enum-set-union$9055$CSxK@ ((case-lambda ((g$C$16588$CSxK@) (g$C$16588$CSxK@ (case-lambda ((g$C$16502$CSxK@ g$enumset1$9011$CSxK@ g$enumset2$9012$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16503$CSxK@ (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16504$CSxK@ (g$enum-type=?$8932$CSxK@ (case-lambda ((g$T$16505$CSxK@) (if g$T$16505$CSxK@ (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16506$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16507$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16508$CSxK@) (bitwise-ior (case-lambda ((g$V$16509$CSxK@) (g$make-enum$8918$CSxK@ g$C$16502$CSxK@ g$V$16509$CSxK@ g$V$16506$CSxK@))) g$V$16508$CSxK@ g$V$16507$CSxK@))) g$enumset1$9011$CSxK@))) g$enumset2$9012$CSxK@))) g$enumset1$9011$CSxK@) (g$C$16502$CSxK@ '#f)))) g$enumset1$9011$CSxK@ g$enumset2$9012$CSxK@))) 'enum-set-union g$enumset2$9012$CSxK@))) 'enum-set-union g$enumset1$9011$CSxK@)))))) (library-letrec*-identity 'g$enum-set-union$8946$CSxK@))) (g$enum-set-intersection$8947$CSxK@ g$enum-set-intersection$9056$CSxK@ ((case-lambda ((g$C$16589$CSxK@) (g$C$16589$CSxK@ (case-lambda ((g$C$16510$CSxK@ g$enumset1$9013$CSxK@ g$enumset2$9014$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16511$CSxK@ (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16512$CSxK@ (g$enum-type=?$8932$CSxK@ (case-lambda ((g$T$16513$CSxK@) (if g$T$16513$CSxK@ (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16514$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16515$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16516$CSxK@) (bitwise-and (case-lambda ((g$V$16517$CSxK@) (g$make-enum$8918$CSxK@ g$C$16510$CSxK@ g$V$16517$CSxK@ g$V$16514$CSxK@))) g$V$16516$CSxK@ g$V$16515$CSxK@))) g$enumset1$9013$CSxK@))) g$enumset2$9014$CSxK@))) g$enumset1$9013$CSxK@) (g$C$16510$CSxK@ '#f)))) g$enumset1$9013$CSxK@ g$enumset2$9014$CSxK@))) 'enum-set-intersection g$enumset2$9014$CSxK@))) 'enum-set-intersection g$enumset1$9013$CSxK@)))))) (library-letrec*-identity 'g$enum-set-intersection$8947$CSxK@))) (g$enum-set-difference$8948$CSxK@ g$enum-set-difference$9057$CSxK@ ((case-lambda ((g$C$16590$CSxK@) (g$C$16590$CSxK@ (case-lambda ((g$C$16518$CSxK@ g$enumset1$9015$CSxK@ g$enumset2$9016$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16519$CSxK@ (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16520$CSxK@ (g$enum-type=?$8932$CSxK@ (case-lambda ((g$T$16521$CSxK@) (if g$T$16521$CSxK@ (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16522$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16523$CSxK@) (bitwise-not (case-lambda ((g$V$16524$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16525$CSxK@) (bitwise-and (case-lambda ((g$V$16526$CSxK@) (g$make-enum$8918$CSxK@ g$C$16518$CSxK@ g$V$16526$CSxK@ g$V$16522$CSxK@))) g$V$16525$CSxK@ g$V$16524$CSxK@))) g$enumset1$9015$CSxK@))) g$V$16523$CSxK@))) g$enumset2$9016$CSxK@))) g$enumset1$9015$CSxK@) (g$C$16518$CSxK@ '#f)))) g$enumset1$9015$CSxK@ g$enumset2$9016$CSxK@))) 'enum-set-difference g$enumset2$9016$CSxK@))) 'enum-set-difference g$enumset1$9015$CSxK@)))))) (library-letrec*-identity 'g$enum-set-difference$8948$CSxK@))) (g$enum-set-complement$8949$CSxK@ g$enum-set-complement$9058$CSxK@ ((case-lambda ((g$C$16591$CSxK@) (g$C$16591$CSxK@ (case-lambda ((g$C$16527$CSxK@ g$enumset$9017$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16528$CSxK@ (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16529$CSxK@) (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16530$CSxK@) (bitwise-not (case-lambda ((g$V$16531$CSxK@) (g$make-enum$8918$CSxK@ g$C$16527$CSxK@ g$V$16531$CSxK@ g$V$16529$CSxK@))) g$V$16530$CSxK@))) g$enumset$9017$CSxK@))) g$enumset$9017$CSxK@))) 'enum-set-complement g$enumset$9017$CSxK@)))))) (library-letrec*-identity 'g$enum-set-complement$8949$CSxK@))) (g$enum-set-projection$8950$CSxK@ g$enum-set-projection$9059$CSxK@ ((case-lambda ((g$C$16592$CSxK@) (g$C$16592$CSxK@ (case-lambda ((g$C$16552$CSxK@ g$enumset1$9018$CSxK@ g$enumset2$9019$CSxK@) (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16553$CSxK@ (g$assert-enum$8935$CSxK@ (case-lambda (g$IGNORE$16554$CSxK@ (g$enum-value$8919$CSxK@ (case-lambda ((g$V$16555$CSxK@) ((case-lambda ((g$C$16549$CSxK@ g$v1$9020$CSxK@) (g$get-symbols$8933$CSxK@ (case-lambda ((g$V$16550$CSxK@) ((case-lambda ((g$C$16548$CSxK@ g$f$9021$CSxK@) ((case-lambda ((g$C$16533$CSxK@ g$f$16532$CSxK@) (begin (set! g$f$9021$CSxK@ g$f$16532$CSxK@) (g$C$16533$CSxK@ g$f$9021$CSxK@)))) g$C$16548$CSxK@ (case-lambda ((g$C$16538$CSxK@ g$s$9022$CSxK@ g$v$9023$CSxK@) (null? (case-lambda ((g$T$16539$CSxK@) (if g$T$16539$CSxK@ (g$enum-info$8920$CSxK@ (case-lambda ((g$V$16540$CSxK@) (g$make-enum$8918$CSxK@ g$C$16538$CSxK@ g$v$9023$CSxK@ g$V$16540$CSxK@))) g$enumset2$9019$CSxK@) (car (case-lambda ((g$V$16541$CSxK@) (g$get-value$8934$CSxK@ (case-lambda ((g$V$16542$CSxK@) (bitwise-and (case-lambda ((g$V$16543$CSxK@) (g$zero?$7422$CSxK@ (case-lambda ((g$T$16544$CSxK@) (if g$T$16544$CSxK@ (cdr (case-lambda ((g$V$16545$CSxK@) (g$f$9021$CSxK@ g$C$16538$CSxK@ g$V$16545$CSxK@ g$v$9023$CSxK@))) g$s$9022$CSxK@) (car (case-lambda ((g$V$16546$CSxK@) (g$get-value$8934$CSxK@ (case-lambda ((g$V$16547$CSxK@) ((case-lambda ((g$C$16534$CSxK@ g$v2$9024$CSxK@) (if g$v2$9024$CSxK@ (bitwise-ior (case-lambda ((g$V$16535$CSxK@) (cdr (case-lambda ((g$V$16536$CSxK@) (g$f$9021$CSxK@ g$C$16534$CSxK@ g$V$16536$CSxK@ g$V$16535$CSxK@))) g$s$9022$CSxK@))) g$v$9023$CSxK@ g$v2$9024$CSxK@) (cdr (case-lambda ((g$V$16537$CSxK@) (g$f$9021$CSxK@ g$C$16534$CSxK@ g$V$16537$CSxK@ g$v$9023$CSxK@))) g$s$9022$CSxK@)))) g$C$16538$CSxK@ g$V$16547$CSxK@))) g$enumset2$9019$CSxK@ g$V$16546$CSxK@))) g$s$9022$CSxK@)))) g$V$16543$CSxK@))) g$v1$9020$CSxK@ g$V$16542$CSxK@))) g$enumset1$9018$CSxK@ g$V$16541$CSxK@))) g$s$9022$CSxK@)))) g$s$9022$CSxK@)))))) (case-lambda ((g$V$16551$CSxK@) (g$V$16551$CSxK@ g$C$16549$CSxK@ g$V$16550$CSxK@ '0))) uninitialized))) g$enumset1$9018$CSxK@))) g$C$16552$CSxK@ g$V$16555$CSxK@))) g$enumset1$9018$CSxK@))) 'enum-set-projection g$enumset2$9019$CSxK@))) 'enum-set-projection g$enumset1$9018$CSxK@)))))) (library-letrec*-identity 'g$enum-set-projection$8950$CSxK@)))) (make-record-printer identity-for-cps 'enum (case-lambda ((g$C$16556$CSxK@ g$x$8951$CSxK@ g$p$8952$CSxK@ g$wr$8953$CSxK@) (g$enum-set->list$8942$CSxK@ (case-lambda ((g$V$16557$CSxK@) (g$fprintf$9084$CSxK@ g$C$16556$CSxK@ g$p$8952$CSxK@ '"#[enum-set ~a]" g$V$16557$CSxK@))) g$x$8951$CSxK@)))))(library-letrec* (ironscheme format) ((g$dofmt$9060$CSxK@ g$dofmt$9082$CSxK@ ((case-lambda ((g$C$16658$CSxK@) (g$C$16658$CSxK@ (case-lambda ((g$C$16649$CSxK@ g$p$9064$CSxK@ g$cntl$9065$CSxK@ g$args$9066$CSxK@) (string-length (case-lambda ((g$V$16650$CSxK@) (fx- (case-lambda ((g$V$16651$CSxK@) ((case-lambda ((g$C$16647$CSxK@ g$nmax$9067$CSxK@) ((case-lambda ((g$C$16646$CSxK@ g$loop$9068$CSxK@) ((case-lambda ((g$C$16594$CSxK@ g$loop$16593$CSxK@) (begin (set! g$loop$9068$CSxK@ g$loop$16593$CSxK@) (g$C$16594$CSxK@ g$loop$9068$CSxK@)))) g$C$16646$CSxK@ (case-lambda ((g$C$16643$CSxK@ g$n$9069$CSxK@ g$a$9070$CSxK@) (fx<=? (case-lambda ((g$T$16644$CSxK@) (if g$T$16644$CSxK@ (string-ref (case-lambda ((g$V$16645$CSxK@) ((case-lambda ((g$C$16635$CSxK@ g$c$9071$CSxK@) ((case-lambda ((g$J$16641$CSxK@) (g$char=?$7436$CSxK@ (case-lambda ((g$T$16642$CSxK@) (if g$T$16642$CSxK@ (fx<? g$J$16641$CSxK@ g$n$9069$CSxK@ g$nmax$9067$CSxK@) (g$J$16641$CSxK@ '#f)))) g$c$9071$CSxK@ '#\~))) (case-lambda ((g$T$16636$CSxK@) (if g$T$16636$CSxK@ (fx+ (case-lambda ((g$V$16637$CSxK@) (string-ref (case-lambda ((g$V$16638$CSxK@) ((case-lambda ((g$C$16595$CSxK@ g$t$9072$CSxK@) (eqv? (case-lambda ((g$T$16596$CSxK@) (if g$T$16596$CSxK@ (car (case-lambda ((g$V$16597$CSxK@) (display (case-lambda (g$IGNORE$16598$CSxK@ (cdr (case-lambda ((g$V$16599$CSxK@) (fx+ (case-lambda ((g$V$16600$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16600$CSxK@ g$V$16599$CSxK@))) g$n$9069$CSxK@ '2))) g$a$9070$CSxK@))) g$V$16597$CSxK@ g$p$9064$CSxK@))) g$a$9070$CSxK@) (eqv? (case-lambda ((g$T$16601$CSxK@) (if g$T$16601$CSxK@ (car (case-lambda ((g$V$16602$CSxK@) (write (case-lambda (g$IGNORE$16603$CSxK@ (cdr (case-lambda ((g$V$16604$CSxK@) (fx+ (case-lambda ((g$V$16605$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16605$CSxK@ g$V$16604$CSxK@))) g$n$9069$CSxK@ '2))) g$a$9070$CSxK@))) g$V$16602$CSxK@ g$p$9064$CSxK@))) g$a$9070$CSxK@) (eqv? (case-lambda ((g$T$16606$CSxK@) (if g$T$16606$CSxK@ (car (case-lambda ((g$V$16607$CSxK@) (number->string (case-lambda ((g$V$16608$CSxK@) (write (case-lambda (g$IGNORE$16609$CSxK@ (cdr (case-lambda ((g$V$16610$CSxK@) (fx+ (case-lambda ((g$V$16611$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16611$CSxK@ g$V$16610$CSxK@))) g$n$9069$CSxK@ '2))) g$a$9070$CSxK@))) g$V$16608$CSxK@ g$p$9064$CSxK@))) g$V$16607$CSxK@ '2))) g$a$9070$CSxK@) (eqv? (case-lambda ((g$T$16612$CSxK@) (if g$T$16612$CSxK@ (car (case-lambda ((g$V$16613$CSxK@) (number->string (case-lambda ((g$V$16614$CSxK@) (write (case-lambda (g$IGNORE$16615$CSxK@ (cdr (case-lambda ((g$V$16616$CSxK@) (fx+ (case-lambda ((g$V$16617$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16617$CSxK@ g$V$16616$CSxK@))) g$n$9069$CSxK@ '2))) g$a$9070$CSxK@))) g$V$16614$CSxK@ g$p$9064$CSxK@))) g$V$16613$CSxK@ '8))) g$a$9070$CSxK@) (eqv? (case-lambda ((g$T$16618$CSxK@) (if g$T$16618$CSxK@ (car (case-lambda ((g$V$16619$CSxK@) (number->string (case-lambda ((g$V$16620$CSxK@) (write (case-lambda (g$IGNORE$16621$CSxK@ (cdr (case-lambda ((g$V$16622$CSxK@) (fx+ (case-lambda ((g$V$16623$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16623$CSxK@ g$V$16622$CSxK@))) g$n$9069$CSxK@ '2))) g$a$9070$CSxK@))) g$V$16620$CSxK@ g$p$9064$CSxK@))) g$V$16619$CSxK@ '16))) g$a$9070$CSxK@) (eqv? (case-lambda ((g$T$16624$CSxK@) (if g$T$16624$CSxK@ (car (case-lambda ((g$V$16625$CSxK@) (number->string (case-lambda ((g$V$16626$CSxK@) (write (case-lambda (g$IGNORE$16627$CSxK@ (cdr (case-lambda ((g$V$16628$CSxK@) (fx+ (case-lambda ((g$V$16629$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16629$CSxK@ g$V$16628$CSxK@))) g$n$9069$CSxK@ '2))) g$a$9070$CSxK@))) g$V$16626$CSxK@ g$p$9064$CSxK@))) g$V$16625$CSxK@ '10))) g$a$9070$CSxK@) (eqv? (case-lambda ((g$T$16630$CSxK@) (if g$T$16630$CSxK@ (g$write-char$8906$CSxK@ (case-lambda (g$IGNORE$16631$CSxK@ (fx+ (case-lambda ((g$V$16632$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16632$CSxK@ g$a$9070$CSxK@))) g$n$9069$CSxK@ '2))) '#\~ g$p$9064$CSxK@) (g$write-char$8906$CSxK@ (case-lambda (g$IGNORE$16633$CSxK@ (fx+ (case-lambda ((g$V$16634$CSxK@) (g$loop$9068$CSxK@ g$C$16595$CSxK@ g$V$16634$CSxK@ g$a$9070$CSxK@))) g$n$9069$CSxK@ '1))) g$c$9071$CSxK@ g$p$9064$CSxK@)))) g$t$9072$CSxK@ '#\~)))) g$t$9072$CSxK@ '#\d)))) g$t$9072$CSxK@ '#\x)))) g$t$9072$CSxK@ '#\o)))) g$t$9072$CSxK@ '#\b)))) g$t$9072$CSxK@ '#\s)))) g$t$9072$CSxK@ '#\a))) g$C$16635$CSxK@ g$V$16638$CSxK@))) g$cntl$9065$CSxK@ g$V$16637$CSxK@))) g$n$9069$CSxK@ '1) (g$write-char$8906$CSxK@ (case-lambda (g$IGNORE$16639$CSxK@ (fx+ (case-lambda ((g$V$16640$CSxK@) (g$loop$9068$CSxK@ g$C$16635$CSxK@ g$V$16640$CSxK@ g$a$9070$CSxK@))) g$n$9069$CSxK@ '1))) g$c$9071$CSxK@ g$p$9064$CSxK@))))))) g$C$16643$CSxK@ g$V$16645$CSxK@))) g$cntl$9065$CSxK@ g$n$9069$CSxK@) (void g$C$16643$CSxK@)))) g$n$9069$CSxK@ g$nmax$9067$CSxK@)))))) (case-lambda ((g$V$16648$CSxK@) (g$V$16648$CSxK@ g$C$16647$CSxK@ '0 g$args$9066$CSxK@))) uninitialized))) g$C$16649$CSxK@ g$V$16651$CSxK@))) g$V$16650$CSxK@ '1))) g$cntl$9065$CSxK@)))))) (library-letrec*-identity 'g$dofmt$9060$CSxK@))) (g$printf$9061$CSxK@ g$printf$9083$CSxK@ ((case-lambda ((g$C$16659$CSxK@) (g$C$16659$CSxK@ (case-lambda ((g$C$16652$CSxK@ g$control$9073$CSxK@ . g$args$9074$CSxK@) (current-output-port (case-lambda ((g$V$16653$CSxK@) (g$dofmt$9060$CSxK@ g$C$16652$CSxK@ g$V$16653$CSxK@ g$control$9073$CSxK@ g$args$9074$CSxK@))))))))) (library-letrec*-identity 'g$printf$9061$CSxK@))) (g$fprintf$9062$CSxK@ g$fprintf$9084$CSxK@ ((case-lambda ((g$C$16660$CSxK@) (g$C$16660$CSxK@ (case-lambda ((g$C$16654$CSxK@ g$p$9075$CSxK@ g$control$9076$CSxK@ . g$args$9077$CSxK@) (g$dofmt$9060$CSxK@ g$C$16654$CSxK@ g$p$9075$CSxK@ g$control$9076$CSxK@ g$args$9077$CSxK@)))))) (library-letrec*-identity 'g$fprintf$9062$CSxK@))) (g$format$9063$CSxK@ g$format$9085$CSxK@ ((case-lambda ((g$C$16661$CSxK@) (g$C$16661$CSxK@ (case-lambda ((g$C$16657$CSxK@ g$control$9078$CSxK@ . g$args$9079$CSxK@) (call-with-values g$C$16657$CSxK@ g$open-string-output-port$8848$CSxK@ (case-lambda ((g$C$16655$CSxK@ g$p$9080$CSxK@ g$c$9081$CSxK@) (g$dofmt$9060$CSxK@ (case-lambda (g$IGNORE$16656$CSxK@ (g$c$9081$CSxK@ g$C$16655$CSxK@))) g$p$9080$CSxK@ g$control$9078$CSxK@ g$args$9079$CSxK@))))))))) (library-letrec*-identity 'g$format$9063$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme trace) ((g$make-traced-macro$9086$CSxK@ g$make-traced-macro$9089$CSxK@ ((case-lambda ((g$C$16667$CSxK@) (g$C$16667$CSxK@ (case-lambda ((g$C$16662$CSxK@ g$name$9087$CSxK@ g$x$9088$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$16663$CSxK@) (if g$T$16663$CSxK@ (make-traced-procedure g$C$16662$CSxK@ g$name$9087$CSxK@ g$x$9088$CSxK@ g$syntax->datum$14367$CSxK@) (g$variable-transformer?$14189$CSxK@ (case-lambda ((g$T$16664$CSxK@) (if g$T$16664$CSxK@ (g$variable-transformer-procedure$14190$CSxK@ (case-lambda ((g$V$16665$CSxK@) (make-traced-procedure (case-lambda ((g$V$16666$CSxK@) (g$make-variable-transformer$14187$CSxK@ g$C$16662$CSxK@ g$V$16666$CSxK@))) g$name$9087$CSxK@ g$V$16665$CSxK@ g$syntax->datum$14367$CSxK@))) g$x$9088$CSxK@) (g$C$16662$CSxK@ g$x$9088$CSxK@)))) g$x$9088$CSxK@)))) g$x$9088$CSxK@)))))) (library-letrec*-identity 'g$make-traced-macro$9086$CSxK@)))) (void identity-for-cps))(library-letrec* (ironscheme cps) ((g$cps/generate-reference$9090$CSxK@ g$cps/generate-reference$9355$CSxK@ ((case-lambda ((g$C$16986$CSxK@) (g$C$16986$CSxK@ (case-lambda ((g$C$16668$CSxK@ g$variable$9143$CSxK@) (g$make-reference$9120$CSxK@ (case-lambda ((g$V$16669$CSxK@) (g$cps/generate-operand$9094$CSxK@ g$C$16668$CSxK@ g$V$16669$CSxK@))) g$variable$9143$CSxK@)))))) (library-letrec*-identity 'g$cps/generate-reference$9090$CSxK@))) (g$cps/generate-literal$9091$CSxK@ g$cps/generate-literal$9356$CSxK@ ((case-lambda ((g$C$16987$CSxK@) (g$C$16987$CSxK@ (case-lambda ((g$C$16670$CSxK@ g$datum$9144$CSxK@) (g$make-literal$9119$CSxK@ (case-lambda ((g$V$16671$CSxK@) (g$cps/generate-operand$9094$CSxK@ g$C$16670$CSxK@ g$V$16671$CSxK@))) g$datum$9144$CSxK@)))))) (library-letrec*-identity 'g$cps/generate-literal$9091$CSxK@))) (g$cps/generate-abstraction$9092$CSxK@ g$cps/generate-abstraction$9357$CSxK@ ((case-lambda ((g$C$16988$CSxK@) (g$C$16988$CSxK@ (case-lambda ((g$C$16674$CSxK@ g$bvl$9145$CSxK@ g$body-generator$9146$CSxK@) (g$make-user-abstraction$9121$CSxK@ (case-lambda ((g$V$16675$CSxK@) (g$cps/generate-operand$9094$CSxK@ g$C$16674$CSxK@ g$V$16675$CSxK@))) g$bvl$9145$CSxK@ (case-lambda ((g$C$16672$CSxK@ g$continuation-variable$9147$CSxK@) (g$variable-continuator$9107$CSxK@ (case-lambda ((g$V$16673$CSxK@) (g$body-generator$9146$CSxK@ g$C$16672$CSxK@ g$V$16673$CSxK@))) g$continuation-variable$9147$CSxK@))))))))) (library-letrec*-identity 'g$cps/generate-abstraction$9092$CSxK@))) (g$cps/generate-abstractions$9093$CSxK@ g$cps/generate-abstractions$9358$CSxK@ ((case-lambda ((g$C$16989$CSxK@) (g$C$16989$CSxK@ (case-lambda ((g$C$16679$CSxK@ g$bvls$9148$CSxK@ g$body-generators$9149$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16680$CSxK@) (g$make-user-abstractions$9122$CSxK@ (case-lambda ((g$V$16681$CSxK@) (g$cps/generate-operand$9094$CSxK@ g$C$16679$CSxK@ g$V$16681$CSxK@))) g$bvls$9148$CSxK@ g$V$16680$CSxK@))) (case-lambda ((g$C$16678$CSxK@ g$body-generator$9150$CSxK@) (g$C$16678$CSxK@ (case-lambda ((g$C$16676$CSxK@ g$continuation-variable$9151$CSxK@) (g$variable-continuator$9107$CSxK@ (case-lambda ((g$V$16677$CSxK@) (g$body-generator$9150$CSxK@ g$C$16676$CSxK@ g$V$16677$CSxK@))) g$continuation-variable$9151$CSxK@)))))) g$body-generators$9149$CSxK@)))))) (library-letrec*-identity 'g$cps/generate-abstractions$9093$CSxK@))) (g$cps/generate-operand$9094$CSxK@ g$cps/generate-operand$9359$CSxK@ ((case-lambda ((g$C$16990$CSxK@) (g$C$16990$CSxK@ (case-lambda ((g$C$16683$CSxK@ g$operand$9152$CSxK@) (g$C$16683$CSxK@ (case-lambda ((g$C$16682$CSxK@ g$continuator$9153$CSxK@) (g$continue-with-operand$9110$CSxK@ g$C$16682$CSxK@ g$continuator$9153$CSxK@ g$operand$9152$CSxK@))))))))) (library-letrec*-identity 'g$cps/generate-operand$9094$CSxK@))) (g$cps/generate-conditional$9095$CSxK@ g$cps/generate-conditional$9360$CSxK@ ((case-lambda ((g$C$16991$CSxK@) (g$C$16991$CSxK@ (case-lambda ((g$C$16694$CSxK@ g$condition-generator$9154$CSxK@ g$consequent-generator$9155$CSxK@ g$alternative-generator$9156$CSxK@) (g$C$16694$CSxK@ (case-lambda ((g$C$16693$CSxK@ g$continuator$9157$CSxK@) ((case-lambda ((g$C$16692$CSxK@ g$if-variable$9158$CSxK@) (begin (set! g$if-variable$9158$CSxK@ (case-lambda ((g$C$16689$CSxK@ g$continuation-variable$9160$CSxK@) (g$variable-continuator$9107$CSxK@ (case-lambda ((g$V$16690$CSxK@) ((case-lambda ((g$C$16687$CSxK@ g$continuator*$9161$CSxK@) (g$conditional-continuator$9106$CSxK@ (case-lambda ((g$V$16688$CSxK@) (g$condition-generator$9154$CSxK@ g$C$16687$CSxK@ g$V$16688$CSxK@))) (case-lambda ((g$C$16684$CSxK@ g$condition$9162$CSxK@) (g$alternative-generator$9156$CSxK@ (case-lambda ((g$V$16685$CSxK@) (g$consequent-generator$9155$CSxK@ (case-lambda ((g$V$16686$CSxK@) (g$make-conditional$9129$CSxK@ g$C$16684$CSxK@ g$condition$9162$CSxK@ g$V$16686$CSxK@ g$V$16685$CSxK@))) g$continuator*$9161$CSxK@))) g$continuator*$9161$CSxK@)))))) g$C$16689$CSxK@ g$V$16690$CSxK@))) g$continuation-variable$9160$CSxK@)))) (g$reify-continuation*$9112$CSxK@ g$C$16692$CSxK@ g$continuator$9157$CSxK@ g$if-variable$9158$CSxK@ (case-lambda ((g$C$16691$CSxK@ g$continuation-abstraction$9159$CSxK@) (g$make-conditional-join$9130$CSxK@ g$C$16691$CSxK@ g$continuation-abstraction$9159$CSxK@ g$if-variable$9158$CSxK@))))))) g$C$16693$CSxK@ uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-conditional$9095$CSxK@))) (g$cps/generate-recursive-bind$9096$CSxK@ g$cps/generate-recursive-bind$9361$CSxK@ ((case-lambda ((g$C$16992$CSxK@) (g$C$16992$CSxK@ (case-lambda ((g$C$16702$CSxK@ g$variables$9163$CSxK@ g$generators$9164$CSxK@ g$body-generator$9165$CSxK@) (g$C$16702$CSxK@ (case-lambda ((g$C$16698$CSxK@ g$continuator$9166$CSxK@) (g$reified-continuator$9109$CSxK@ (case-lambda ((g$V$16699$CSxK@) (g$body-generator$9165$CSxK@ (case-lambda ((g$V$16700$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16701$CSxK@) (g$make-recursive-bind$9124$CSxK@ g$C$16698$CSxK@ g$variables$9163$CSxK@ g$V$16701$CSxK@ g$V$16700$CSxK@))) (case-lambda ((g$C$16697$CSxK@ g$generator$9167$CSxK@) (g$C$16697$CSxK@ (case-lambda ((g$C$16695$CSxK@ g$continuation-variable$9168$CSxK@) (g$variable-continuator$9107$CSxK@ (case-lambda ((g$V$16696$CSxK@) (g$generator$9167$CSxK@ g$C$16695$CSxK@ g$V$16696$CSxK@))) g$continuation-variable$9168$CSxK@)))))) g$generators$9164$CSxK@))) g$V$16699$CSxK@))) g$continuator$9166$CSxK@))))))))) (library-letrec*-identity 'g$cps/generate-recursive-bind$9096$CSxK@))) (g$cps/generate-recursive*-bind$9097$CSxK@ g$cps/generate-recursive*-bind$9362$CSxK@ ((case-lambda ((g$C$16993$CSxK@) (g$C$16993$CSxK@ (case-lambda ((g$C$16710$CSxK@ g$variables$9169$CSxK@ g$generators$9170$CSxK@ g$body-generator$9171$CSxK@) (g$C$16710$CSxK@ (case-lambda ((g$C$16706$CSxK@ g$continuator$9172$CSxK@) (g$reified-continuator$9109$CSxK@ (case-lambda ((g$V$16707$CSxK@) (g$body-generator$9171$CSxK@ (case-lambda ((g$V$16708$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16709$CSxK@) (g$make-recursive*-bind$9125$CSxK@ g$C$16706$CSxK@ g$variables$9169$CSxK@ g$V$16709$CSxK@ g$V$16708$CSxK@))) (case-lambda ((g$C$16705$CSxK@ g$generator$9173$CSxK@) (g$C$16705$CSxK@ (case-lambda ((g$C$16703$CSxK@ g$continuation-variable$9174$CSxK@) (g$variable-continuator$9107$CSxK@ (case-lambda ((g$V$16704$CSxK@) (g$generator$9173$CSxK@ g$C$16703$CSxK@ g$V$16704$CSxK@))) g$continuation-variable$9174$CSxK@)))))) g$generators$9170$CSxK@))) g$V$16707$CSxK@))) g$continuator$9172$CSxK@))))))))) (library-letrec*-identity 'g$cps/generate-recursive*-bind$9097$CSxK@))) (g$cps/generate-recursive*-library-bind$9098$CSxK@ g$cps/generate-recursive*-library-bind$9363$CSxK@ ((case-lambda ((g$C$16994$CSxK@) (g$C$16994$CSxK@ (case-lambda ((g$C$16718$CSxK@ g$name$9175$CSxK@ g$variables$9176$CSxK@ g$variables*$9177$CSxK@ g$generators$9178$CSxK@ g$body-generator$9179$CSxK@) (g$C$16718$CSxK@ (case-lambda ((g$C$16714$CSxK@ g$continuator$9180$CSxK@) (g$reified-continuator$9109$CSxK@ (case-lambda ((g$V$16715$CSxK@) (g$body-generator$9179$CSxK@ (case-lambda ((g$V$16716$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16717$CSxK@) (g$make-recursive*-library-bind$9126$CSxK@ g$C$16714$CSxK@ g$name$9175$CSxK@ g$variables$9176$CSxK@ g$variables*$9177$CSxK@ g$V$16717$CSxK@ g$V$16716$CSxK@))) (case-lambda ((g$C$16713$CSxK@ g$generator$9181$CSxK@) (g$C$16713$CSxK@ (case-lambda ((g$C$16711$CSxK@ g$continuation-variable$9182$CSxK@) (g$variable-continuator$9107$CSxK@ (case-lambda ((g$V$16712$CSxK@) (g$generator$9181$CSxK@ g$C$16711$CSxK@ g$V$16712$CSxK@))) g$continuation-variable$9182$CSxK@)))))) g$generators$9178$CSxK@))) g$V$16715$CSxK@))) g$continuator$9180$CSxK@))))))))) (library-letrec*-identity 'g$cps/generate-recursive*-library-bind$9098$CSxK@))) (g$cps/generate-sequence$9099$CSxK@ g$cps/generate-sequence$9364$CSxK@ ((case-lambda ((g$C$16995$CSxK@) (g$C$16995$CSxK@ (case-lambda ((g$C$16731$CSxK@ g$generators$9183$CSxK@) (g$C$16731$CSxK@ (case-lambda ((g$C$16729$CSxK@ g$continuator$9184$CSxK@) ((case-lambda ((g$C$16728$CSxK@ g$recur$9185$CSxK@) ((case-lambda ((g$C$16720$CSxK@ g$recur$16719$CSxK@) (begin (set! g$recur$9185$CSxK@ g$recur$16719$CSxK@) (g$C$16720$CSxK@ g$recur$9185$CSxK@)))) g$C$16728$CSxK@ (case-lambda ((g$C$16724$CSxK@ g$generators$9186$CSxK@) (cdr (case-lambda ((g$V$16725$CSxK@) ((case-lambda ((g$C$16722$CSxK@ g$generators$9187$CSxK@) (pair? (case-lambda ((g$T$16723$CSxK@) (if g$T$16723$CSxK@ (g$effect-continuator$9105$CSxK@ g$C$16722$CSxK@ (case-lambda ((g$C$16721$CSxK@) (g$recur$9185$CSxK@ g$C$16721$CSxK@ g$generators$9187$CSxK@)))) (g$C$16722$CSxK@ g$continuator$9184$CSxK@)))) g$generators$9187$CSxK@))) (case-lambda ((g$V$16726$CSxK@) (car (case-lambda ((g$V$16727$CSxK@) (g$V$16727$CSxK@ g$C$16724$CSxK@ g$V$16726$CSxK@))) g$generators$9186$CSxK@))) g$V$16725$CSxK@))) g$generators$9186$CSxK@)))))) (case-lambda ((g$V$16730$CSxK@) (g$V$16730$CSxK@ g$C$16729$CSxK@ g$generators$9183$CSxK@))) uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-sequence$9099$CSxK@))) (g$cps/generate-assignment$9100$CSxK@ g$cps/generate-assignment$9365$CSxK@ ((case-lambda ((g$C$16996$CSxK@) (g$C$16996$CSxK@ (case-lambda ((g$C$16736$CSxK@ g$location$9188$CSxK@ g$expression-generator$9189$CSxK@) (g$C$16736$CSxK@ (case-lambda ((g$C$16734$CSxK@ g$continuator$9190$CSxK@) (g$operand-continuator$9104$CSxK@ (case-lambda ((g$V$16735$CSxK@) (g$expression-generator$9189$CSxK@ g$C$16734$CSxK@ g$V$16735$CSxK@))) (case-lambda ((g$C$16732$CSxK@ g$operand$9191$CSxK@) (g$continue-with-operand$9110$CSxK@ (case-lambda ((g$V$16733$CSxK@) (g$make-assignment$9132$CSxK@ g$C$16732$CSxK@ g$location$9188$CSxK@ g$operand$9191$CSxK@ g$V$16733$CSxK@))) g$continuator$9190$CSxK@ '(cps-void))))))))))))) (library-letrec*-identity 'g$cps/generate-assignment$9100$CSxK@))) (g$cps/generate-declaration$9101$CSxK@ g$cps/generate-declaration$9366$CSxK@ ((case-lambda ((g$C$16997$CSxK@) (g$C$16997$CSxK@ (case-lambda ((g$C$16741$CSxK@ g$location$9192$CSxK@ g$expression-generator$9193$CSxK@) (g$C$16741$CSxK@ (case-lambda ((g$C$16739$CSxK@ g$continuator$9194$CSxK@) (g$operand-continuator$9104$CSxK@ (case-lambda ((g$V$16740$CSxK@) (g$expression-generator$9193$CSxK@ g$C$16739$CSxK@ g$V$16740$CSxK@))) (case-lambda ((g$C$16737$CSxK@ g$operand$9195$CSxK@) (g$continue-with-operand$9110$CSxK@ (case-lambda ((g$V$16738$CSxK@) (g$make-declaration$9133$CSxK@ g$C$16737$CSxK@ g$location$9192$CSxK@ g$operand$9195$CSxK@ g$V$16738$CSxK@))) g$continuator$9194$CSxK@ '(cps-void))))))))))))) (library-letrec*-identity 'g$cps/generate-declaration$9101$CSxK@))) (g$cps/generate-combination$9102$CSxK@ g$cps/generate-combination$9367$CSxK@ ((case-lambda ((g$C$16998$CSxK@) (g$C$16998$CSxK@ (case-lambda ((g$C$16746$CSxK@ g$operator-generator$9196$CSxK@ g$operand-generators$9197$CSxK@) (cons (case-lambda ((g$V$16747$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$16748$CSxK@) (g$cps/generate-subproblems$9103$CSxK@ g$C$16746$CSxK@ g$V$16748$CSxK@ (case-lambda ((g$C$16742$CSxK@ g$operands$9198$CSxK@ g$continuator$9199$CSxK@) (cdr (case-lambda ((g$V$16743$CSxK@) (g$reify-continuation$9111$CSxK@ (case-lambda ((g$V$16744$CSxK@) (car (case-lambda ((g$V$16745$CSxK@) (g$make-combination$9127$CSxK@ g$C$16742$CSxK@ g$V$16745$CSxK@ g$V$16744$CSxK@ g$V$16743$CSxK@))) g$operands$9198$CSxK@))) g$continuator$9199$CSxK@))) g$operands$9198$CSxK@)))))) g$V$16747$CSxK@))) g$operator-generator$9196$CSxK@ g$operand-generators$9197$CSxK@)))))) (library-letrec*-identity 'g$cps/generate-combination$9102$CSxK@))) (g$cps/generate-subproblems$9103$CSxK@ g$cps/generate-subproblems$9368$CSxK@ ((case-lambda ((g$C$16999$CSxK@) (g$C$16999$CSxK@ (case-lambda ((g$C$16762$CSxK@ g$generators$9200$CSxK@ g$combiner$9201$CSxK@) (g$C$16762$CSxK@ (case-lambda ((g$C$16760$CSxK@ g$continuator$9202$CSxK@) ((case-lambda ((g$C$16759$CSxK@ g$recur$9203$CSxK@) ((case-lambda ((g$C$16750$CSxK@ g$recur$16749$CSxK@) (begin (set! g$recur$9203$CSxK@ g$recur$16749$CSxK@) (g$C$16750$CSxK@ g$recur$9203$CSxK@)))) g$C$16759$CSxK@ (case-lambda ((g$C$16754$CSxK@ g$generators$9204$CSxK@ g$operands$9205$CSxK@) (pair? (case-lambda ((g$T$16755$CSxK@) (if g$T$16755$CSxK@ (cdr (case-lambda ((g$V$16756$CSxK@) ((case-lambda ((g$C$16753$CSxK@ g$generators$9206$CSxK@) (g$operand-continuator$9104$CSxK@ g$C$16753$CSxK@ (case-lambda ((g$C$16751$CSxK@ g$operand$9207$CSxK@) (cons (case-lambda ((g$V$16752$CSxK@) (g$recur$9203$CSxK@ g$C$16751$CSxK@ g$generators$9206$CSxK@ g$V$16752$CSxK@))) g$operand$9207$CSxK@ g$operands$9205$CSxK@)))))) (case-lambda ((g$V$16757$CSxK@) (car (case-lambda ((g$V$16758$CSxK@) (g$V$16758$CSxK@ g$C$16754$CSxK@ g$V$16757$CSxK@))) g$generators$9204$CSxK@))) g$V$16756$CSxK@))) g$generators$9204$CSxK@) (g$combiner$9201$CSxK@ g$C$16754$CSxK@ g$operands$9205$CSxK@ g$continuator$9202$CSxK@)))) g$generators$9204$CSxK@)))))) (case-lambda ((g$V$16761$CSxK@) (g$V$16761$CSxK@ g$C$16760$CSxK@ g$generators$9200$CSxK@ '()))) uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-subproblems$9103$CSxK@))) (g$operand-continuator$9104$CSxK@ g$operand-continuator$9369$CSxK@ ((case-lambda ((g$C$17000$CSxK@) (g$C$17000$CSxK@ (case-lambda ((g$C$16764$CSxK@ g$generator$9208$CSxK@) (g$C$16764$CSxK@ (case-lambda ((g$C$16763$CSxK@ g$if-operand$9209$CSxK@ g$if-effect$9210$CSxK@ g$if-conditional$9211$CSxK@ g$if-variable$9212$CSxK@ g$if-inline$9213$CSxK@) (g$if-operand$9209$CSxK@ g$C$16763$CSxK@ g$generator$9208$CSxK@))))))))) (library-letrec*-identity 'g$operand-continuator$9104$CSxK@))) (g$effect-continuator$9105$CSxK@ g$effect-continuator$9370$CSxK@ ((case-lambda ((g$C$17001$CSxK@) (g$C$17001$CSxK@ (case-lambda ((g$C$16766$CSxK@ g$generator$9214$CSxK@) (g$C$16766$CSxK@ (case-lambda ((g$C$16765$CSxK@ g$if-operand$9215$CSxK@ g$if-effect$9216$CSxK@ g$if-conditional$9217$CSxK@ g$if-variable$9218$CSxK@ g$if-inline$9219$CSxK@) (g$if-effect$9216$CSxK@ g$C$16765$CSxK@ g$generator$9214$CSxK@))))))))) (library-letrec*-identity 'g$effect-continuator$9105$CSxK@))) (g$conditional-continuator$9106$CSxK@ g$conditional-continuator$9371$CSxK@ ((case-lambda ((g$C$17002$CSxK@) (g$C$17002$CSxK@ (case-lambda ((g$C$16768$CSxK@ g$generator$9220$CSxK@) (g$C$16768$CSxK@ (case-lambda ((g$C$16767$CSxK@ g$if-operand$9221$CSxK@ g$if-effect$9222$CSxK@ g$if-conditional$9223$CSxK@ g$if-variable$9224$CSxK@ g$if-inline$9225$CSxK@) (g$if-conditional$9223$CSxK@ g$C$16767$CSxK@ g$generator$9220$CSxK@))))))))) (library-letrec*-identity 'g$conditional-continuator$9106$CSxK@))) (g$variable-continuator$9107$CSxK@ g$variable-continuator$9372$CSxK@ ((case-lambda ((g$C$17003$CSxK@) (g$C$17003$CSxK@ (case-lambda ((g$C$16770$CSxK@ g$variable$9226$CSxK@) (g$C$16770$CSxK@ (case-lambda ((g$C$16769$CSxK@ g$if-operand$9227$CSxK@ g$if-effect$9228$CSxK@ g$if-conditional$9229$CSxK@ g$if-variable$9230$CSxK@ g$if-inline$9231$CSxK@) (g$if-variable$9230$CSxK@ g$C$16769$CSxK@ g$variable$9226$CSxK@))))))))) (library-letrec*-identity 'g$variable-continuator$9107$CSxK@))) (g$inline-continuator$9108$CSxK@ g$inline-continuator$9373$CSxK@ ((case-lambda ((g$C$17004$CSxK@) (g$C$17004$CSxK@ (case-lambda ((g$C$16772$CSxK@ g$continuation$9232$CSxK@) (g$C$16772$CSxK@ (case-lambda ((g$C$16771$CSxK@ g$if-operand$9233$CSxK@ g$if-effect$9234$CSxK@ g$if-conditional$9235$CSxK@ g$if-variable$9236$CSxK@ g$if-inline$9237$CSxK@) (g$if-inline$9237$CSxK@ g$C$16771$CSxK@ g$continuation$9232$CSxK@))))))))) (library-letrec*-identity 'g$inline-continuator$9108$CSxK@))) (g$reified-continuator$9109$CSxK@ g$reified-continuator$9374$CSxK@ ((case-lambda ((g$C$17005$CSxK@) (g$C$17005$CSxK@ (case-lambda ((g$C$16774$CSxK@ g$continuator$9238$CSxK@) (g$C$16774$CSxK@ (case-lambda ((g$C$16773$CSxK@ g$if-operand$9239$CSxK@ g$if-effect$9240$CSxK@ g$if-conditional$9241$CSxK@ g$if-variable$9242$CSxK@ g$if-inline$9243$CSxK@) (g$reify-continuation*$9112$CSxK@ g$C$16773$CSxK@ g$continuator$9238$CSxK@ g$if-variable$9242$CSxK@ g$if-inline$9243$CSxK@))))))))) (library-letrec*-identity 'g$reified-continuator$9109$CSxK@))) (g$continue-with-operand$9110$CSxK@ g$continue-with-operand$9375$CSxK@ ((case-lambda ((g$C$17006$CSxK@) (g$C$17006$CSxK@ (case-lambda ((g$C$16784$CSxK@ g$continuator$9244$CSxK@ g$operand$9245$CSxK@) (g$continuator$9244$CSxK@ g$C$16784$CSxK@ (case-lambda ((g$C$16775$CSxK@ g$generator$9246$CSxK@) (g$generator$9246$CSxK@ g$C$16775$CSxK@ g$operand$9245$CSxK@))) (case-lambda ((g$C$16776$CSxK@ g$generator$9247$CSxK@) (g$generator$9247$CSxK@ g$C$16776$CSxK@))) (case-lambda ((g$C$16777$CSxK@ g$generator$9248$CSxK@) (g$make-truth-test$9134$CSxK@ (case-lambda ((g$V$16778$CSxK@) (g$generator$9248$CSxK@ g$C$16777$CSxK@ g$V$16778$CSxK@))) g$operand$9245$CSxK@))) (case-lambda ((g$C$16779$CSxK@ g$continuation-variable$9249$CSxK@) (list (case-lambda ((g$V$16780$CSxK@) (g$make-reference$9120$CSxK@ (case-lambda ((g$V$16781$CSxK@) (g$make-return$9128$CSxK@ g$C$16779$CSxK@ g$V$16781$CSxK@ g$V$16780$CSxK@))) g$continuation-variable$9249$CSxK@))) g$operand$9245$CSxK@))) (case-lambda ((g$C$16782$CSxK@ g$continuation-abstraction$9250$CSxK@) (list (case-lambda ((g$V$16783$CSxK@) (g$make-return$9128$CSxK@ g$C$16782$CSxK@ g$continuation-abstraction$9250$CSxK@ g$V$16783$CSxK@))) g$operand$9245$CSxK@))))))))) (library-letrec*-identity 'g$continue-with-operand$9110$CSxK@))) (g$reify-continuation$9111$CSxK@ g$reify-continuation$9376$CSxK@ ((case-lambda ((g$C$17007$CSxK@) (g$C$17007$CSxK@ (case-lambda ((g$C$16787$CSxK@ g$continuator$9251$CSxK@) (g$continuator$9251$CSxK@ g$C$16787$CSxK@ g$operand-continuation-reifier$9114$CSxK@ g$effect-continuation-reifier$9116$CSxK@ g$conditional-continuation-reifier$9118$CSxK@ (case-lambda ((g$C$16785$CSxK@ g$variable$9252$CSxK@) (g$make-reference$9120$CSxK@ g$C$16785$CSxK@ g$variable$9252$CSxK@))) (case-lambda ((g$C$16786$CSxK@ g$continuation$9253$CSxK@) (g$C$16786$CSxK@ g$continuation$9253$CSxK@))))))))) (library-letrec*-identity 'g$reify-continuation$9111$CSxK@))) (g$reify-continuation*$9112$CSxK@ g$reify-continuation*$9377$CSxK@ ((case-lambda ((g$C$17008$CSxK@) (g$C$17008$CSxK@ (case-lambda ((g$C$16788$CSxK@ g$continuator$9254$CSxK@ g$if-variable$9255$CSxK@ g$if-inline$9256$CSxK@) (g$conditional-continuation-reifier*$9117$CSxK@ (case-lambda ((g$V$16789$CSxK@) (g$effect-continuation-reifier*$9115$CSxK@ (case-lambda ((g$V$16790$CSxK@) (g$operand-continuation-reifier*$9113$CSxK@ (case-lambda ((g$V$16791$CSxK@) (g$continuator$9254$CSxK@ g$C$16788$CSxK@ g$V$16791$CSxK@ g$V$16790$CSxK@ g$V$16789$CSxK@ g$if-variable$9255$CSxK@ g$if-inline$9256$CSxK@))) g$if-inline$9256$CSxK@))) g$if-inline$9256$CSxK@))) g$if-inline$9256$CSxK@)))))) (library-letrec*-identity 'g$reify-continuation*$9112$CSxK@))) (g$operand-continuation-reifier*$9113$CSxK@ g$operand-continuation-reifier*$9378$CSxK@ ((case-lambda ((g$C$17009$CSxK@) (g$C$17009$CSxK@ (case-lambda ((g$C$16799$CSxK@ g$receiver$9257$CSxK@) (g$C$16799$CSxK@ (case-lambda ((g$C$16796$CSxK@ g$generator$9258$CSxK@) (g$generate-variable$9135$CSxK@ (case-lambda ((g$V$16797$CSxK@) ((case-lambda ((g$C$16792$CSxK@ g$variable$9259$CSxK@) (g$make-reference$9120$CSxK@ (case-lambda ((g$V$16793$CSxK@) (g$generator$9258$CSxK@ (case-lambda ((g$V$16794$CSxK@) (list (case-lambda ((g$V$16795$CSxK@) (g$make-continuation-abstraction$9123$CSxK@ g$C$16792$CSxK@ g$V$16795$CSxK@ g$V$16794$CSxK@))) g$variable$9259$CSxK@))) g$V$16793$CSxK@))) g$variable$9259$CSxK@))) (case-lambda ((g$V$16798$CSxK@) (g$receiver$9257$CSxK@ g$C$16796$CSxK@ g$V$16798$CSxK@))) g$V$16797$CSxK@))) 'V))))))))) (library-letrec*-identity 'g$operand-continuation-reifier*$9113$CSxK@))) (g$operand-continuation-reifier$9114$CSxK@ g$operand-continuation-reifier$9379$CSxK@ ((case-lambda ((g$C$17010$CSxK@) (g$operand-continuation-reifier*$9113$CSxK@ g$C$17010$CSxK@ values))) (library-letrec*-identity 'g$operand-continuation-reifier$9114$CSxK@))) (g$effect-continuation-reifier*$9115$CSxK@ g$effect-continuation-reifier*$9380$CSxK@ ((case-lambda ((g$C$17011$CSxK@) (g$C$17011$CSxK@ (case-lambda ((g$C$16805$CSxK@ g$receiver$9260$CSxK@) (g$C$16805$CSxK@ (case-lambda ((g$C$16802$CSxK@ g$generator$9261$CSxK@) (g$generate-variable$9135$CSxK@ (case-lambda ((g$V$16803$CSxK@) ((case-lambda ((g$C$16800$CSxK@ g$variable$9262$CSxK@) (g$generator$9261$CSxK@ (case-lambda ((g$V$16801$CSxK@) (g$make-continuation-abstraction$9123$CSxK@ g$C$16800$CSxK@ g$variable$9262$CSxK@ g$V$16801$CSxK@)))))) (case-lambda ((g$V$16804$CSxK@) (g$receiver$9260$CSxK@ g$C$16802$CSxK@ g$V$16804$CSxK@))) g$V$16803$CSxK@))) 'IGNORE))))))))) (library-letrec*-identity 'g$effect-continuation-reifier*$9115$CSxK@))) (g$effect-continuation-reifier$9116$CSxK@ g$effect-continuation-reifier$9381$CSxK@ ((case-lambda ((g$C$17012$CSxK@) (g$effect-continuation-reifier*$9115$CSxK@ g$C$17012$CSxK@ values))) (library-letrec*-identity 'g$effect-continuation-reifier$9116$CSxK@))) (g$conditional-continuation-reifier*$9117$CSxK@ g$conditional-continuation-reifier*$9382$CSxK@ ((case-lambda ((g$C$17013$CSxK@) (g$C$17013$CSxK@ (case-lambda ((g$C$16814$CSxK@ g$receiver$9263$CSxK@) (g$C$16814$CSxK@ (case-lambda ((g$C$16811$CSxK@ g$generator$9264$CSxK@) (g$generate-variable$9135$CSxK@ (case-lambda ((g$V$16812$CSxK@) ((case-lambda ((g$C$16806$CSxK@ g$variable$9265$CSxK@) (g$make-reference$9120$CSxK@ (case-lambda ((g$V$16807$CSxK@) (g$make-truth-test$9134$CSxK@ (case-lambda ((g$V$16808$CSxK@) (g$generator$9264$CSxK@ (case-lambda ((g$V$16809$CSxK@) (list (case-lambda ((g$V$16810$CSxK@) (g$make-continuation-abstraction$9123$CSxK@ g$C$16806$CSxK@ g$V$16810$CSxK@ g$V$16809$CSxK@))) g$variable$9265$CSxK@))) g$V$16808$CSxK@))) g$V$16807$CSxK@))) g$variable$9265$CSxK@))) (case-lambda ((g$V$16813$CSxK@) (g$receiver$9263$CSxK@ g$C$16811$CSxK@ g$V$16813$CSxK@))) g$V$16812$CSxK@))) 'T))))))))) (library-letrec*-identity 'g$conditional-continuation-reifier*$9117$CSxK@))) (g$conditional-continuation-reifier$9118$CSxK@ g$conditional-continuation-reifier$9383$CSxK@ ((case-lambda ((g$C$17014$CSxK@) (g$conditional-continuation-reifier*$9117$CSxK@ g$C$17014$CSxK@ values))) (library-letrec*-identity 'g$conditional-continuation-reifier$9118$CSxK@))) (g$make-literal$9119$CSxK@ g$make-literal$9384$CSxK@ ((case-lambda ((g$C$17015$CSxK@) (g$C$17015$CSxK@ (case-lambda ((g$C$16815$CSxK@ g$datum$9266$CSxK@) (list g$C$16815$CSxK@ 'quote g$datum$9266$CSxK@)))))) (library-letrec*-identity 'g$make-literal$9119$CSxK@))) (g$make-reference$9120$CSxK@ g$make-reference$9385$CSxK@ ((case-lambda ((g$C$17016$CSxK@) (g$C$17016$CSxK@ (case-lambda ((g$C$16816$CSxK@ g$variable$9267$CSxK@) (g$C$16816$CSxK@ g$variable$9267$CSxK@)))))) (library-letrec*-identity 'g$make-reference$9120$CSxK@))) (g$make-user-abstraction$9121$CSxK@ g$make-user-abstraction$9386$CSxK@ ((case-lambda ((g$C$17017$CSxK@) (g$C$17017$CSxK@ (case-lambda ((g$C$16821$CSxK@ g$bvl$9268$CSxK@ g$body-constructor$9269$CSxK@) (g$generate-variable$9135$CSxK@ (case-lambda ((g$V$16822$CSxK@) ((case-lambda ((g$C$16817$CSxK@ g$continuation$9270$CSxK@) (g$body-constructor$9269$CSxK@ (case-lambda ((g$V$16818$CSxK@) (cons (case-lambda ((g$V$16819$CSxK@) (list (case-lambda ((g$V$16820$CSxK@) (list g$C$16817$CSxK@ 'case-lambda g$V$16820$CSxK@))) g$V$16819$CSxK@ g$V$16818$CSxK@))) g$continuation$9270$CSxK@ g$bvl$9268$CSxK@))) g$continuation$9270$CSxK@))) g$C$16821$CSxK@ g$V$16822$CSxK@))) 'C)))))) (library-letrec*-identity 'g$make-user-abstraction$9121$CSxK@))) (g$make-user-abstractions$9122$CSxK@ g$make-user-abstractions$9387$CSxK@ ((case-lambda ((g$C$17018$CSxK@) (g$C$17018$CSxK@ (case-lambda ((g$C$16828$CSxK@ g$bvls$9271$CSxK@ g$body-constructors$9272$CSxK@) (g$generate-variable$9135$CSxK@ (case-lambda ((g$V$16829$CSxK@) ((case-lambda ((g$C$16826$CSxK@ g$continuation$9273$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16827$CSxK@) (cons g$C$16826$CSxK@ 'case-lambda g$V$16827$CSxK@))) (case-lambda ((g$C$16823$CSxK@ g$bvl$9274$CSxK@ g$body-constructor$9275$CSxK@) (g$body-constructor$9275$CSxK@ (case-lambda ((g$V$16824$CSxK@) (cons (case-lambda ((g$V$16825$CSxK@) (list g$C$16823$CSxK@ g$V$16825$CSxK@ g$V$16824$CSxK@))) g$continuation$9273$CSxK@ g$bvl$9274$CSxK@))) g$continuation$9273$CSxK@))) g$bvls$9271$CSxK@ g$body-constructors$9272$CSxK@))) g$C$16828$CSxK@ g$V$16829$CSxK@))) 'C)))))) (library-letrec*-identity 'g$make-user-abstractions$9122$CSxK@))) (g$make-continuation-abstraction$9123$CSxK@ g$make-continuation-abstraction$9388$CSxK@ ((case-lambda ((g$C$17019$CSxK@) (g$C$17019$CSxK@ (case-lambda ((g$C$16830$CSxK@ g$bvl$9276$CSxK@ g$body$9277$CSxK@) (list (case-lambda ((g$V$16831$CSxK@) (list g$C$16830$CSxK@ 'case-lambda g$V$16831$CSxK@))) g$bvl$9276$CSxK@ g$body$9277$CSxK@)))))) (library-letrec*-identity 'g$make-continuation-abstraction$9123$CSxK@))) (g$make-recursive-bind$9124$CSxK@ g$make-recursive-bind$9389$CSxK@ ((case-lambda ((g$C$17020$CSxK@) (g$C$17020$CSxK@ (case-lambda ((g$C$16837$CSxK@ g$variables$9278$CSxK@ g$constructors$9279$CSxK@ g$body$9280$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16838$CSxK@) (list g$C$16837$CSxK@ 'letrec g$V$16838$CSxK@ g$body$9280$CSxK@))) (case-lambda ((g$C$16832$CSxK@ g$variable$9281$CSxK@ g$constructor$9282$CSxK@) (list (case-lambda ((g$V$16833$CSxK@) (list (case-lambda ((g$V$16834$CSxK@) (g$make-user-abstraction$9121$CSxK@ (case-lambda ((g$V$16835$CSxK@) (list (case-lambda ((g$V$16836$CSxK@) (list g$C$16832$CSxK@ g$variable$9281$CSxK@ g$V$16836$CSxK@))) g$V$16835$CSxK@ g$V$16834$CSxK@))) '() g$constructor$9282$CSxK@))) 'letrec-identity g$V$16833$CSxK@))) 'quote g$variable$9281$CSxK@))) g$variables$9278$CSxK@ g$constructors$9279$CSxK@)))))) (library-letrec*-identity 'g$make-recursive-bind$9124$CSxK@))) (g$make-recursive*-bind$9125$CSxK@ g$make-recursive*-bind$9390$CSxK@ ((case-lambda ((g$C$17021$CSxK@) (g$C$17021$CSxK@ (case-lambda ((g$C$16844$CSxK@ g$variables$9283$CSxK@ g$constructors$9284$CSxK@ g$body$9285$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16845$CSxK@) (list g$C$16844$CSxK@ 'letrec* g$V$16845$CSxK@ g$body$9285$CSxK@))) (case-lambda ((g$C$16839$CSxK@ g$variable$9286$CSxK@ g$constructor$9287$CSxK@) (list (case-lambda ((g$V$16840$CSxK@) (list (case-lambda ((g$V$16841$CSxK@) (g$make-user-abstraction$9121$CSxK@ (case-lambda ((g$V$16842$CSxK@) (list (case-lambda ((g$V$16843$CSxK@) (list g$C$16839$CSxK@ g$variable$9286$CSxK@ g$V$16843$CSxK@))) g$V$16842$CSxK@ g$V$16841$CSxK@))) '() g$constructor$9287$CSxK@))) 'letrec*-identity g$V$16840$CSxK@))) 'quote g$variable$9286$CSxK@))) g$variables$9283$CSxK@ g$constructors$9284$CSxK@)))))) (library-letrec*-identity 'g$make-recursive*-bind$9125$CSxK@))) (g$make-recursive*-library-bind$9126$CSxK@ g$make-recursive*-library-bind$9391$CSxK@ ((case-lambda ((g$C$17022$CSxK@) (g$C$17022$CSxK@ (case-lambda ((g$C$16851$CSxK@ g$name$9288$CSxK@ g$variables$9289$CSxK@ g$variables*$9290$CSxK@ g$constructors$9291$CSxK@ g$body$9292$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16852$CSxK@) (list g$C$16851$CSxK@ 'library-letrec* g$name$9288$CSxK@ g$V$16852$CSxK@ g$body$9292$CSxK@))) (case-lambda ((g$C$16846$CSxK@ g$variable$9293$CSxK@ g$variable*$9294$CSxK@ g$constructor$9295$CSxK@) (list (case-lambda ((g$V$16847$CSxK@) (list (case-lambda ((g$V$16848$CSxK@) (g$make-user-abstraction$9121$CSxK@ (case-lambda ((g$V$16849$CSxK@) (list (case-lambda ((g$V$16850$CSxK@) (list g$C$16846$CSxK@ g$variable$9293$CSxK@ g$variable*$9294$CSxK@ g$V$16850$CSxK@))) g$V$16849$CSxK@ g$V$16848$CSxK@))) '() g$constructor$9295$CSxK@))) 'library-letrec*-identity g$V$16847$CSxK@))) 'quote g$variable$9293$CSxK@))) g$variables$9289$CSxK@ g$variables*$9290$CSxK@ g$constructors$9291$CSxK@)))))) (library-letrec*-identity 'g$make-recursive*-library-bind$9126$CSxK@))) (g$make-combination$9127$CSxK@ g$make-combination$9392$CSxK@ ((case-lambda ((g$C$17023$CSxK@) (g$C$17023$CSxK@ (case-lambda ((g$C$16853$CSxK@ g$operator$9296$CSxK@ g$continuation$9297$CSxK@ g$operands$9298$CSxK@) (cons (case-lambda ((g$V$16854$CSxK@) (cons g$C$16853$CSxK@ g$operator$9296$CSxK@ g$V$16854$CSxK@))) g$continuation$9297$CSxK@ g$operands$9298$CSxK@)))))) (library-letrec*-identity 'g$make-combination$9127$CSxK@))) (g$make-return$9128$CSxK@ g$make-return$9393$CSxK@ ((case-lambda ((g$C$17024$CSxK@) (g$C$17024$CSxK@ (case-lambda ((g$C$16855$CSxK@ g$continuation$9299$CSxK@ g$operands$9300$CSxK@) (cons g$C$16855$CSxK@ g$continuation$9299$CSxK@ g$operands$9300$CSxK@)))))) (library-letrec*-identity 'g$make-return$9128$CSxK@))) (g$make-conditional$9129$CSxK@ g$make-conditional$9394$CSxK@ ((case-lambda ((g$C$17025$CSxK@) (g$C$17025$CSxK@ (case-lambda ((g$C$16856$CSxK@ g$condition$9301$CSxK@ g$consequent$9302$CSxK@ g$alternative$9303$CSxK@) (list g$C$16856$CSxK@ 'if g$condition$9301$CSxK@ g$consequent$9302$CSxK@ g$alternative$9303$CSxK@)))))) (library-letrec*-identity 'g$make-conditional$9129$CSxK@))) (g$make-conditional-join$9130$CSxK@ g$make-conditional-join$9395$CSxK@ ((case-lambda ((g$C$17026$CSxK@) (g$C$17026$CSxK@ (case-lambda ((g$C$16861$CSxK@ g$continuation$9304$CSxK@ g$constructor$9305$CSxK@) (g$generate-variable$9135$CSxK@ (case-lambda ((g$V$16862$CSxK@) ((case-lambda ((g$C$16857$CSxK@ g$variable$9306$CSxK@) (g$constructor$9305$CSxK@ (case-lambda ((g$V$16858$CSxK@) (list (case-lambda ((g$V$16859$CSxK@) (list (case-lambda ((g$V$16860$CSxK@) (g$make-let$9131$CSxK@ g$C$16857$CSxK@ g$V$16860$CSxK@ g$V$16859$CSxK@ g$V$16858$CSxK@))) g$variable$9306$CSxK@))) g$continuation$9304$CSxK@))) g$variable$9306$CSxK@))) g$C$16861$CSxK@ g$V$16862$CSxK@))) 'J)))))) (library-letrec*-identity 'g$make-conditional-join$9130$CSxK@))) (g$make-let$9131$CSxK@ g$make-let$9396$CSxK@ ((case-lambda ((g$C$17027$CSxK@) (g$C$17027$CSxK@ (case-lambda ((g$C$16863$CSxK@ g$variables$9307$CSxK@ g$expressions$9308$CSxK@ g$body$9309$CSxK@) (list (case-lambda ((g$V$16864$CSxK@) (list (case-lambda ((g$V$16865$CSxK@) (cons g$C$16863$CSxK@ g$V$16865$CSxK@ g$expressions$9308$CSxK@))) 'case-lambda g$V$16864$CSxK@))) g$variables$9307$CSxK@ g$body$9309$CSxK@)))))) (library-letrec*-identity 'g$make-let$9131$CSxK@))) (g$make-assignment$9132$CSxK@ g$make-assignment$9397$CSxK@ ((case-lambda ((g$C$17028$CSxK@) (g$C$17028$CSxK@ (case-lambda ((g$C$16866$CSxK@ g$location$9310$CSxK@ g$operand$9311$CSxK@ g$expression$9312$CSxK@) (list (case-lambda ((g$V$16867$CSxK@) (list g$C$16866$CSxK@ 'begin g$V$16867$CSxK@ g$expression$9312$CSxK@))) 'set! g$location$9310$CSxK@ g$operand$9311$CSxK@)))))) (library-letrec*-identity 'g$make-assignment$9132$CSxK@))) (g$make-declaration$9133$CSxK@ g$make-declaration$9398$CSxK@ ((case-lambda ((g$C$17029$CSxK@) (g$C$17029$CSxK@ (case-lambda ((g$C$16868$CSxK@ g$location$9313$CSxK@ g$operand$9314$CSxK@ g$expression$9315$CSxK@) (list (case-lambda ((g$V$16869$CSxK@) (list g$C$16868$CSxK@ 'begin g$V$16869$CSxK@ g$expression$9315$CSxK@))) 'define g$location$9313$CSxK@ g$operand$9314$CSxK@)))))) (library-letrec*-identity 'g$make-declaration$9133$CSxK@))) (g$make-truth-test$9134$CSxK@ g$make-truth-test$9399$CSxK@ ((case-lambda ((g$C$17030$CSxK@) (g$C$17030$CSxK@ (case-lambda ((g$C$16870$CSxK@ g$operand$9316$CSxK@) (g$C$16870$CSxK@ g$operand$9316$CSxK@)))))) (library-letrec*-identity 'g$make-truth-test$9134$CSxK@))) (g$generate-variable$9135$CSxK@ g$generate-variable$9400$CSxK@ ((case-lambda ((g$C$17031$CSxK@) (g$C$17031$CSxK@ (case-lambda ((g$C$16871$CSxK@ g$name$9317$CSxK@) (gensym g$C$16871$CSxK@ g$name$9317$CSxK@)))))) (library-letrec*-identity 'g$generate-variable$9135$CSxK@))) (g$parse$9136$CSxK@ g$parse$9401$CSxK@ ((case-lambda ((g$C$17032$CSxK@) (g$C$17032$CSxK@ (case-lambda ((g$C$16952$CSxK@ g$x$9318$CSxK@) (pair? (case-lambda ((g$T$16953$CSxK@) (if g$T$16953$CSxK@ (car (case-lambda ((g$V$16954$CSxK@) ((case-lambda ((g$C$16914$CSxK@ g$t$9319$CSxK@) (eqv? (case-lambda ((g$T$16915$CSxK@) (if g$T$16915$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$16916$CSxK@) (g$cps/generate-literal$9091$CSxK@ g$C$16914$CSxK@ g$V$16916$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16917$CSxK@) (if g$T$16917$CSxK@ (g$cadddr$7411$CSxK@ (case-lambda ((g$V$16918$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16919$CSxK@) (g$caddr$7399$CSxK@ (case-lambda ((g$V$16920$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16921$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16922$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16923$CSxK@) (g$cps/generate-conditional$9095$CSxK@ g$C$16914$CSxK@ g$V$16923$CSxK@ g$V$16921$CSxK@ g$V$16919$CSxK@))) g$V$16922$CSxK@))) g$x$9318$CSxK@))) g$V$16920$CSxK@))) g$x$9318$CSxK@))) g$V$16918$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16924$CSxK@) (if g$T$16924$CSxK@ (cdr (case-lambda ((g$V$16925$CSxK@) ((case-lambda ((g$C$16875$CSxK@ g$d$9320$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16876$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16877$CSxK@) (g$cps/generate-abstractions$9093$CSxK@ g$C$16875$CSxK@ g$V$16877$CSxK@ g$V$16876$CSxK@))) car g$d$9320$CSxK@))) (case-lambda ((g$C$16872$CSxK@ g$e$9321$CSxK@) (cdr (case-lambda ((g$V$16873$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16874$CSxK@) (g$cps/generate-sequence$9099$CSxK@ g$C$16872$CSxK@ g$V$16874$CSxK@))) g$parse$9136$CSxK@ g$V$16873$CSxK@))) g$e$9321$CSxK@))) g$d$9320$CSxK@))) g$C$16914$CSxK@ g$V$16925$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16926$CSxK@) (if g$T$16926$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$16927$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16928$CSxK@) ((case-lambda ((g$C$16893$CSxK@ g$bindings$9322$CSxK@ g$body*$9323$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16894$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16895$CSxK@) ((case-lambda ((g$C$16890$CSxK@ g$lhs*$9324$CSxK@ g$rhs*$9325$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16891$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16892$CSxK@) ((case-lambda ((g$C$16887$CSxK@ g$t*$9326$CSxK@ g$tmps$9327$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16888$CSxK@) ((case-lambda ((g$C$16878$CSxK@ g$s*$9328$CSxK@) (append (case-lambda ((g$V$16879$CSxK@) (cons (case-lambda ((g$V$16880$CSxK@) (list (case-lambda ((g$V$16881$CSxK@) (cons (case-lambda ((g$V$16882$CSxK@) (list (case-lambda ((g$V$16883$CSxK@) (list (case-lambda ((g$V$16884$CSxK@) (cons (case-lambda ((g$V$16885$CSxK@) (g$parse$9136$CSxK@ g$C$16878$CSxK@ g$V$16885$CSxK@))) g$V$16884$CSxK@ g$tmps$9327$CSxK@))) 'case-lambda g$V$16883$CSxK@))) g$lhs*$9324$CSxK@ g$V$16882$CSxK@))) g$V$16881$CSxK@ g$rhs*$9325$CSxK@))) 'case-lambda g$V$16880$CSxK@))) g$t*$9326$CSxK@ g$V$16879$CSxK@))) g$s*$9328$CSxK@ g$body*$9323$CSxK@))) g$C$16887$CSxK@ g$V$16888$CSxK@))) (case-lambda ((g$C$16886$CSxK@ g$i$9329$CSxK@ g$t$9330$CSxK@) (list g$C$16886$CSxK@ 'set! g$i$9329$CSxK@ g$t$9330$CSxK@))) g$lhs*$9324$CSxK@ g$t*$9326$CSxK@))) g$C$16890$CSxK@ g$V$16892$CSxK@ g$V$16891$CSxK@))) gensym g$lhs*$9324$CSxK@))) (case-lambda ((g$C$16889$CSxK@ g$x$9331$CSxK@) (g$C$16889$CSxK@ 'uninitialized))) g$lhs*$9324$CSxK@))) g$C$16893$CSxK@ g$V$16895$CSxK@ g$V$16894$CSxK@))) car g$bindings$9322$CSxK@))) g$cadr$7393$CSxK@ g$bindings$9322$CSxK@))) g$C$16914$CSxK@ g$V$16928$CSxK@ g$V$16927$CSxK@))) g$x$9318$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16929$CSxK@) (if g$T$16929$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$16930$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16931$CSxK@) ((case-lambda ((g$C$16900$CSxK@ g$bindings$9332$CSxK@ g$body*$9333$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16901$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16902$CSxK@) ((case-lambda ((g$C$16896$CSxK@ g$lhs*$9334$CSxK@ g$rhs*$9335$CSxK@) (cons (case-lambda ((g$V$16897$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16898$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16899$CSxK@) (g$cps/generate-recursive*-bind$9097$CSxK@ g$C$16896$CSxK@ g$lhs*$9334$CSxK@ g$V$16899$CSxK@ g$V$16898$CSxK@))) g$parse$9136$CSxK@ g$rhs*$9335$CSxK@))) g$V$16897$CSxK@))) 'begin g$body*$9333$CSxK@))) g$C$16900$CSxK@ g$V$16902$CSxK@ g$V$16901$CSxK@))) car g$bindings$9332$CSxK@))) g$cadr$7393$CSxK@ g$bindings$9332$CSxK@))) g$C$16914$CSxK@ g$V$16931$CSxK@ g$V$16930$CSxK@))) g$x$9318$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16932$CSxK@) (if g$T$16932$CSxK@ (cdr (case-lambda ((g$V$16933$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16934$CSxK@) ((case-lambda ((g$C$16911$CSxK@ g$name$9336$CSxK@ g$x$9337$CSxK@) (g$cddr$7395$CSxK@ (case-lambda ((g$V$16912$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16913$CSxK@) ((case-lambda ((g$C$16907$CSxK@ g$bindings$9338$CSxK@ g$body*$9339$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16908$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16909$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16910$CSxK@) ((case-lambda ((g$C$16903$CSxK@ g$lhs*$9340$CSxK@ g$lhs**$9341$CSxK@ g$rhs*$9342$CSxK@) (cons (case-lambda ((g$V$16904$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16905$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16906$CSxK@) (g$cps/generate-recursive*-library-bind$9098$CSxK@ g$C$16903$CSxK@ g$name$9336$CSxK@ g$lhs*$9340$CSxK@ g$lhs**$9341$CSxK@ g$V$16906$CSxK@ g$V$16905$CSxK@))) g$parse$9136$CSxK@ g$rhs*$9342$CSxK@))) g$V$16904$CSxK@))) 'begin g$body*$9339$CSxK@))) g$C$16907$CSxK@ g$V$16910$CSxK@ g$V$16909$CSxK@ g$V$16908$CSxK@))) car g$bindings$9338$CSxK@))) g$cadr$7393$CSxK@ g$bindings$9338$CSxK@))) g$caddr$7399$CSxK@ g$bindings$9338$CSxK@))) g$C$16911$CSxK@ g$V$16913$CSxK@ g$V$16912$CSxK@))) g$x$9337$CSxK@))) g$x$9337$CSxK@))) g$C$16914$CSxK@ g$V$16934$CSxK@ g$V$16933$CSxK@))) g$x$9318$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16935$CSxK@) (if g$T$16935$CSxK@ (cdr (case-lambda ((g$V$16936$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16937$CSxK@) (g$cps/generate-sequence$9099$CSxK@ g$C$16914$CSxK@ g$V$16937$CSxK@))) g$parse$9136$CSxK@ g$V$16936$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16938$CSxK@) (if g$T$16938$CSxK@ (g$caddr$7399$CSxK@ (case-lambda ((g$V$16939$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16940$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16941$CSxK@) (g$cps/generate-assignment$9100$CSxK@ g$C$16914$CSxK@ g$V$16941$CSxK@ g$V$16940$CSxK@))) g$x$9318$CSxK@))) g$V$16939$CSxK@))) g$x$9318$CSxK@) (eqv? (case-lambda ((g$T$16942$CSxK@) (if g$T$16942$CSxK@ (g$caddr$7399$CSxK@ (case-lambda ((g$V$16943$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16944$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16945$CSxK@) (g$cps/generate-declaration$9101$CSxK@ g$C$16914$CSxK@ g$V$16945$CSxK@ g$V$16944$CSxK@))) g$x$9318$CSxK@))) g$V$16943$CSxK@))) g$x$9318$CSxK@) (list? (case-lambda ((g$T$16946$CSxK@) (if g$T$16946$CSxK@ (cdr (case-lambda ((g$V$16947$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16948$CSxK@) (car (case-lambda ((g$V$16949$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16950$CSxK@) (g$cps/generate-combination$9102$CSxK@ g$C$16914$CSxK@ g$V$16950$CSxK@ g$V$16948$CSxK@))) g$V$16949$CSxK@))) g$x$9318$CSxK@))) g$parse$9136$CSxK@ g$V$16947$CSxK@))) g$x$9318$CSxK@) (list? (case-lambda ((g$V$16951$CSxK@) (g$error$7673$CSxK@ g$C$16914$CSxK@ 'rewrite '"invalid form ~s ~s" g$x$9318$CSxK@ g$V$16951$CSxK@))) g$x$9318$CSxK@)))) g$x$9318$CSxK@)))) g$t$9319$CSxK@ 'define)))) g$t$9319$CSxK@ 'set!)))) g$t$9319$CSxK@ 'begin)))) g$t$9319$CSxK@ 'library-letrec*)))) g$t$9319$CSxK@ 'letrec*)))) g$t$9319$CSxK@ 'letrec)))) g$t$9319$CSxK@ 'case-lambda)))) g$t$9319$CSxK@ 'if)))) g$t$9319$CSxK@ 'quote))) g$C$16952$CSxK@ g$V$16954$CSxK@))) g$x$9318$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$16955$CSxK@) (if g$T$16955$CSxK@ (g$cps/generate-reference$9090$CSxK@ g$C$16952$CSxK@ g$x$9318$CSxK@) (g$cps/generate-literal$9091$CSxK@ g$C$16952$CSxK@ g$x$9318$CSxK@)))) g$x$9318$CSxK@)))) g$x$9318$CSxK@)))))) (library-letrec*-identity 'g$parse$9136$CSxK@))) (g$starts-with?$9137$CSxK@ g$starts-with?$9402$CSxK@ ((case-lambda ((g$C$17033$CSxK@) (g$C$17033$CSxK@ (case-lambda ((g$C$16956$CSxK@ g$str$9343$CSxK@ g$sub$9344$CSxK@) (g$C$16956$CSxK@ (clr-call-internal 'system.string 'startswith g$str$9343$CSxK@ g$sub$9344$CSxK@))))))) (library-letrec*-identity 'g$starts-with?$9137$CSxK@))) (g$ends-with?$9138$CSxK@ g$ends-with?$9403$CSxK@ ((case-lambda ((g$C$17034$CSxK@) (g$C$17034$CSxK@ (case-lambda ((g$C$16957$CSxK@ g$str$9345$CSxK@ g$sub$9346$CSxK@) (g$C$16957$CSxK@ (clr-call-internal 'system.string 'endswith g$str$9345$CSxK@ g$sub$9346$CSxK@))))))) (library-letrec*-identity 'g$ends-with?$9138$CSxK@))) (g$clr-generator?$9139$CSxK@ g$clr-generator?$9404$CSxK@ ((case-lambda ((g$C$17035$CSxK@) (g$C$17035$CSxK@ (case-lambda ((g$C$16960$CSxK@ g$o$9347$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$16961$CSxK@) (if g$T$16961$CSxK@ (symbol->string (case-lambda ((g$V$16962$CSxK@) ((case-lambda ((g$C$16958$CSxK@ g$o$9348$CSxK@) (g$starts-with?$9137$CSxK@ (case-lambda ((g$T$16959$CSxK@) (if g$T$16959$CSxK@ (g$ends-with?$9138$CSxK@ g$C$16958$CSxK@ g$o$9348$CSxK@ '"-internal") (g$C$16958$CSxK@ '#f)))) g$o$9348$CSxK@ '"clr-"))) g$C$16960$CSxK@ g$V$16962$CSxK@))) g$o$9347$CSxK@) (g$C$16960$CSxK@ '#f)))) g$o$9347$CSxK@)))))) (library-letrec*-identity 'g$clr-generator?$9139$CSxK@))) (g$fix-primitives$9140$CSxK@ g$fix-primitives$9405$CSxK@ ((case-lambda ((g$C$17036$CSxK@) (g$C$17036$CSxK@ (case-lambda ((g$C$16976$CSxK@ g$e$9349$CSxK@) ((case-lambda ((g$J$16979$CSxK@) (pair? (case-lambda ((g$T$16980$CSxK@) (if g$T$16980$CSxK@ (list? g$J$16979$CSxK@ g$e$9349$CSxK@) (g$J$16979$CSxK@ '#f)))) g$e$9349$CSxK@))) (case-lambda ((g$T$16977$CSxK@) (if g$T$16977$CSxK@ (car (case-lambda ((g$V$16978$CSxK@) ((case-lambda ((g$C$16963$CSxK@ g$o$9350$CSxK@) (eq? (case-lambda ((g$T$16964$CSxK@) (if g$T$16964$CSxK@ (g$C$16963$CSxK@ g$e$9349$CSxK@) (g$clr-generator?$9139$CSxK@ (case-lambda ((g$T$16965$CSxK@) (if g$T$16965$CSxK@ (cdr (case-lambda ((g$V$16966$CSxK@) (pair? (case-lambda ((g$T$16967$CSxK@) (if g$T$16967$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$16968$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16969$CSxK@) (cons (case-lambda ((g$V$16970$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$16971$CSxK@) (g$fix-primitives$9140$CSxK@ (case-lambda ((g$V$16972$CSxK@) (list g$C$16963$CSxK@ g$V$16972$CSxK@ g$V$16970$CSxK@))) g$V$16971$CSxK@))) g$e$9349$CSxK@))) g$o$9350$CSxK@ g$V$16969$CSxK@))) g$fix-primitives$9140$CSxK@ g$V$16968$CSxK@))) g$e$9349$CSxK@) (g$C$16963$CSxK@ g$e$9349$CSxK@)))) g$V$16966$CSxK@))) g$e$9349$CSxK@) (cdr (case-lambda ((g$V$16973$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$16974$CSxK@) (g$fix-primitives$9140$CSxK@ (case-lambda ((g$V$16975$CSxK@) (cons g$C$16963$CSxK@ g$V$16975$CSxK@ g$V$16974$CSxK@))) g$o$9350$CSxK@))) g$fix-primitives$9140$CSxK@ g$V$16973$CSxK@))) g$e$9349$CSxK@)))) g$o$9350$CSxK@)))) g$o$9350$CSxK@ 'quote))) g$C$16976$CSxK@ g$V$16978$CSxK@))) g$e$9349$CSxK@) (g$C$16976$CSxK@ g$e$9349$CSxK@)))))))))) (library-letrec*-identity 'g$fix-primitives$9140$CSxK@))) (g$parse->cps$9141$CSxK@ g$parse->cps$9406$CSxK@ ((case-lambda ((g$C$17037$CSxK@) (g$C$17037$CSxK@ (case-lambda ((g$C$16981$CSxK@ g$e$9351$CSxK@ g$var$9352$CSxK@) (g$variable-continuator$9107$CSxK@ (case-lambda ((g$V$16982$CSxK@) (g$parse$9136$CSxK@ (case-lambda ((g$V$16983$CSxK@) (g$V$16983$CSxK@ g$C$16981$CSxK@ g$V$16982$CSxK@))) g$e$9351$CSxK@))) g$var$9352$CSxK@)))))) (library-letrec*-identity 'g$parse->cps$9141$CSxK@))) (g$convert->cps$9142$CSxK@ g$convert->cps$9407$CSxK@ ((case-lambda ((g$C$17038$CSxK@) (g$C$17038$CSxK@ (case-lambda ((g$C$16984$CSxK@ g$e$9353$CSxK@ g$var$9354$CSxK@) (g$parse->cps$9141$CSxK@ (case-lambda ((g$V$16985$CSxK@) (g$fix-primitives$9140$CSxK@ g$C$16984$CSxK@ g$V$16985$CSxK@))) g$e$9353$CSxK@ g$var$9354$CSxK@)))))) (library-letrec*-identity 'g$convert->cps$9142$CSxK@)))) (void identity-for-cps))(library-letrec* (psyntax compat) ((g$library-version-mismatch-warning$9408$CSxK@ g$library-version-mismatch-warning$9565$CSxK@ ((case-lambda ((g$C$17073$CSxK@) (g$C$17073$CSxK@ (case-lambda ((g$C$17039$CSxK@ g$name$9537$CSxK@ g$depname$9538$CSxK@ g$filename$9539$CSxK@) (current-error-port (case-lambda ((g$V$17040$CSxK@) (g$fprintf$9084$CSxK@ g$C$17039$CSxK@ g$V$17040$CSxK@ '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.\n" g$name$9537$CSxK@ g$depname$9538$CSxK@ g$filename$9539$CSxK@))))))))) (library-letrec*-identity 'g$library-version-mismatch-warning$9408$CSxK@))) (g$file-locator-resolution-error$9409$CSxK@ g$file-locator-resolution-error$9566$CSxK@ ((case-lambda ((g$C$17074$CSxK@) (g$C$17074$CSxK@ (case-lambda ((g$C$17056$CSxK@ g$libname$9540$CSxK@ g$failed-list$9541$CSxK@) ((case-lambda ((g$C$17041$CSxK@ g$7561$9542$CSxK@ g$7563$9543$CSxK@ g$7562$9544$CSxK@ g$7560$9547$CSxK@ g$make-library-resolution-condition$9548$CSxK@ g$7558$9549$CSxK@ g$7559$9550$CSxK@ g$library-resolution-condition?$9551$CSxK@ g$condition-library$9552$CSxK@ g$condition-files$9553$CSxK@) (make-record-type-descriptor (case-lambda ((g$V$17042$CSxK@) (begin (set! g$7561$9542$CSxK@ g$V$17042$CSxK@) (begin (set! g$7563$9543$CSxK@ '#f) (make-record-constructor-descriptor (case-lambda ((g$V$17043$CSxK@) (begin (set! g$7562$9544$CSxK@ g$V$17043$CSxK@) (record-predicate (case-lambda ((g$V$17044$CSxK@) (begin (set! g$7560$9547$CSxK@ g$V$17044$CSxK@) (record-constructor (case-lambda ((g$V$17045$CSxK@) (begin (set! g$make-library-resolution-condition$9548$CSxK@ g$V$17045$CSxK@) (record-accessor (case-lambda ((g$V$17046$CSxK@) (begin (set! g$7558$9549$CSxK@ g$V$17046$CSxK@) (record-accessor (case-lambda ((g$V$17047$CSxK@) (begin (set! g$7559$9550$CSxK@ g$V$17047$CSxK@) (condition-predicate (case-lambda ((g$V$17048$CSxK@) (begin (set! g$library-resolution-condition?$9551$CSxK@ g$V$17048$CSxK@) (condition-accessor (case-lambda ((g$V$17049$CSxK@) (begin (set! g$condition-library$9552$CSxK@ g$V$17049$CSxK@) (condition-accessor (case-lambda ((g$V$17050$CSxK@) (begin (set! g$condition-files$9553$CSxK@ g$V$17050$CSxK@) (g$make-library-resolution-condition$9548$CSxK@ (case-lambda ((g$V$17051$CSxK@) (g$make-message-condition$8063$CSxK@ (case-lambda ((g$V$17052$CSxK@) (g$make-who-condition$8123$CSxK@ (case-lambda ((g$V$17053$CSxK@) (g$make-error$8089$CSxK@ (case-lambda ((g$V$17054$CSxK@) (condition (case-lambda ((g$V$17055$CSxK@) (g$raise$7670$CSxK@ g$C$17041$CSxK@ g$V$17055$CSxK@))) g$V$17054$CSxK@ g$V$17053$CSxK@ g$V$17052$CSxK@ g$V$17051$CSxK@)))))) 'expander))) '"cannot locate library in library-path"))) g$libname$9540$CSxK@ g$failed-list$9541$CSxK@)))) g$7561$9542$CSxK@ g$7559$9550$CSxK@)))) g$7561$9542$CSxK@ g$7558$9549$CSxK@)))) g$7561$9542$CSxK@)))) g$7561$9542$CSxK@ '1)))) g$7561$9542$CSxK@ '0)))) g$7562$9544$CSxK@)))) g$7561$9542$CSxK@)))) g$7561$9542$CSxK@ g$&condition-rcd$8058$CSxK@ g$7563$9543$CSxK@))))) '&library-resolution g$&condition-rtd$8057$CSxK@ 'g$7564$CSxK@ '#f '#f '#((immutable library) (immutable files))))) g$C$17056$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$file-locator-resolution-error$9409$CSxK@))) (g$read-library-source-file$9410$CSxK@ g$read-library-source-file$9567$CSxK@ ((case-lambda ((g$C$17075$CSxK@) (g$C$17075$CSxK@ (case-lambda ((g$C$17057$CSxK@ g$file-name$9554$CSxK@) (g$with-input-from-file$8907$CSxK@ g$C$17057$CSxK@ g$file-name$9554$CSxK@ read-annotated)))))) (library-letrec*-identity 'g$read-library-source-file$9410$CSxK@))) (g$make-parameter$9411$CSxK@ g$make-parameter$9568$CSxK@ ((case-lambda ((g$C$17076$CSxK@) (g$C$17076$CSxK@ (case-lambda ((g$C$17062$CSxK@ g$x$9555$CSxK@) (g$make-parameter$9411$CSxK@ g$C$17062$CSxK@ g$x$9555$CSxK@ (case-lambda ((g$C$17058$CSxK@ g$x$9556$CSxK@) (g$C$17058$CSxK@ g$x$9556$CSxK@))))) ((g$C$17062$CSxK@ g$x$9557$CSxK@ g$fender$9558$CSxK@) ((case-lambda ((g$J$17065$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$V$17066$CSxK@) (not (case-lambda ((g$T$17067$CSxK@) (if g$T$17067$CSxK@ (g$assertion-error$14360$CSxK@ g$J$17065$CSxK@ '(procedure? fender) '("psyntax\\compat.ss" . "(90,8) - (90,36)")) (void g$J$17065$CSxK@)))) g$V$17066$CSxK@))) g$fender$9558$CSxK@))) (case-lambda (g$IGNORE$17063$CSxK@ (g$fender$9558$CSxK@ (case-lambda ((g$V$17064$CSxK@) ((case-lambda ((g$C$17061$CSxK@ g$x$9559$CSxK@) (g$C$17061$CSxK@ (case-lambda ((g$C$17059$CSxK@) (g$C$17059$CSxK@ g$x$9559$CSxK@)) ((g$C$17059$CSxK@ g$v$9560$CSxK@) (g$fender$9558$CSxK@ (case-lambda ((g$V$17060$CSxK@) (begin (set! g$x$9559$CSxK@ g$V$17060$CSxK@) (g$C$17059$CSxK@ (cps-void))))) g$v$9560$CSxK@)))))) g$C$17062$CSxK@ g$V$17064$CSxK@))) g$x$9557$CSxK@))))))))) (library-letrec*-identity 'g$make-parameter$9411$CSxK@))) (g$file-options-constructor$9533$CSxK@ g$file-options-constructor$9569$CSxK@ ((case-lambda ((g$C$17077$CSxK@) (g$make-parameter$9411$CSxK@ g$C$17077$CSxK@ '#f))) (library-letrec*-identity 'g$file-options-constructor$9533$CSxK@))) (g$file-options-spec$9534$CSxK@ g$file-options-spec$9570$CSxK@ ((case-lambda ((g$C$17078$CSxK@) (g$C$17078$CSxK@ (case-lambda ((g$C$17068$CSxK@ g$x$9561$CSxK@) (g$file-options-constructor$9533$CSxK@ (case-lambda ((g$V$17069$CSxK@) (g$V$17069$CSxK@ g$C$17068$CSxK@ g$x$9561$CSxK@))))))))) (library-letrec*-identity 'g$file-options-spec$9534$CSxK@))) (g$set-label-binding!$9535$CSxK@ g$set-label-binding!$9571$CSxK@ ((case-lambda ((g$C$17079$CSxK@) (g$C$17079$CSxK@ (case-lambda ((g$C$17070$CSxK@ g$label$9562$CSxK@ g$binding$9563$CSxK@) (set-symbol-value! g$C$17070$CSxK@ g$label$9562$CSxK@ g$binding$9563$CSxK@)))))) (library-letrec*-identity 'g$set-label-binding!$9535$CSxK@))) (g$label-binding$9536$CSxK@ g$label-binding$9572$CSxK@ ((case-lambda ((g$C$17080$CSxK@) (g$C$17080$CSxK@ (case-lambda ((g$C$17071$CSxK@ g$label$9564$CSxK@) (symbol-bound? (case-lambda ((g$T$17072$CSxK@) (if g$T$17072$CSxK@ (symbol-value g$C$17071$CSxK@ g$label$9564$CSxK@) (g$C$17071$CSxK@ '#f)))) g$label$9564$CSxK@)))))) (library-letrec*-identity 'g$label-binding$9536$CSxK@)))) (void identity-for-cps))(library-letrec* (psyntax internal) ((g$current-primitive-locations$9768$CSxK@ g$current-primitive-locations$9813$CSxK@ ((case-lambda ((g$C$17186$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17186$CSxK@ (case-lambda ((g$C$17081$CSxK@ g$x$9774$CSxK@) (g$C$17081$CSxK@ '#f))) (case-lambda ((g$C$17082$CSxK@ g$p$9775$CSxK@) ((case-lambda ((g$J$17084$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$V$17085$CSxK@) (not (case-lambda ((g$T$17086$CSxK@) (if g$T$17086$CSxK@ (g$assertion-error$14360$CSxK@ g$J$17084$CSxK@ '(procedure? p) '("psyntax\\internal.ss" . "(29,9) - (29,32)")) (void g$J$17084$CSxK@)))) g$V$17085$CSxK@))) g$p$9775$CSxK@))) (case-lambda (g$IGNORE$17083$CSxK@ (g$C$17082$CSxK@ g$p$9775$CSxK@))))))))) (library-letrec*-identity 'g$current-primitive-locations$9768$CSxK@))) (g$mutable?$9769$CSxK@ g$mutable?$9814$CSxK@ ((case-lambda ((g$C$17187$CSxK@) (g$C$17187$CSxK@ (case-lambda ((g$C$17102$CSxK@ g$x$9776$CSxK@) ((case-lambda ((g$C$17100$CSxK@ g$simple?$9777$CSxK@) (begin (set! g$simple?$9777$CSxK@ (case-lambda ((g$C$17098$CSxK@ g$x$9778$CSxK@) (null? (case-lambda ((g$V$17099$CSxK@) ((case-lambda ((g$C$17096$CSxK@ g$t$9779$CSxK@) (if g$t$9779$CSxK@ (g$C$17096$CSxK@ g$t$9779$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$17097$CSxK@) ((case-lambda ((g$C$17094$CSxK@ g$t$9780$CSxK@) (if g$t$9780$CSxK@ (g$C$17094$CSxK@ g$t$9780$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$V$17095$CSxK@) ((case-lambda ((g$C$17092$CSxK@ g$t$9781$CSxK@) (if g$t$9781$CSxK@ (g$C$17092$CSxK@ g$t$9781$CSxK@) (g$boolean?$7385$CSxK@ (case-lambda ((g$V$17093$CSxK@) ((case-lambda ((g$C$17090$CSxK@ g$t$9782$CSxK@) (if g$t$9782$CSxK@ (g$C$17090$CSxK@ g$t$9782$CSxK@) (string? (case-lambda ((g$V$17091$CSxK@) ((case-lambda ((g$C$17088$CSxK@ g$t$9783$CSxK@) (if g$t$9783$CSxK@ (g$C$17088$CSxK@ g$t$9783$CSxK@) (g$bytevector?$7383$CSxK@ (case-lambda ((g$V$17089$CSxK@) ((case-lambda ((g$C$17087$CSxK@ g$t$9784$CSxK@) (if g$t$9784$CSxK@ (g$C$17087$CSxK@ g$t$9784$CSxK@) (number? g$C$17087$CSxK@ g$x$9778$CSxK@)))) g$C$17088$CSxK@ g$V$17089$CSxK@))) g$x$9778$CSxK@)))) g$C$17090$CSxK@ g$V$17091$CSxK@))) g$x$9778$CSxK@)))) g$C$17092$CSxK@ g$V$17093$CSxK@))) g$x$9778$CSxK@)))) g$C$17094$CSxK@ g$V$17095$CSxK@))) g$x$9778$CSxK@)))) g$C$17096$CSxK@ g$V$17097$CSxK@))) g$x$9778$CSxK@)))) g$C$17098$CSxK@ g$V$17099$CSxK@))) g$x$9778$CSxK@)))) (g$simple?$9777$CSxK@ (case-lambda ((g$V$17101$CSxK@) (not g$C$17100$CSxK@ g$V$17101$CSxK@))) g$x$9776$CSxK@)))) g$C$17102$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$mutable?$9769$CSxK@))) (g$rewriter$9770$CSxK@ g$rewriter$9815$CSxK@ ((case-lambda ((g$C$17188$CSxK@) (g$C$17188$CSxK@ (case-lambda ((g$C$17178$CSxK@ g$quote-hack?$9785$CSxK@) ((case-lambda ((g$C$17177$CSxK@ g$f$9786$CSxK@) (begin (set! g$f$9786$CSxK@ (case-lambda ((g$C$17174$CSxK@ g$x$9787$CSxK@) (pair? (case-lambda ((g$T$17175$CSxK@) (if g$T$17175$CSxK@ (car (case-lambda ((g$V$17176$CSxK@) ((case-lambda ((g$C$17140$CSxK@ g$t$9788$CSxK@) (eqv? (case-lambda ((g$T$17141$CSxK@) (if g$T$17141$CSxK@ ((case-lambda ((g$J$17144$CSxK@) (if g$quote-hack?$9785$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$17145$CSxK@) (g$mutable?$9769$CSxK@ g$J$17144$CSxK@ g$V$17145$CSxK@))) g$x$9787$CSxK@) (g$J$17144$CSxK@ '#f)))) (case-lambda ((g$T$17142$CSxK@) (if g$T$17142$CSxK@ (gensym (case-lambda ((g$V$17143$CSxK@) ((case-lambda ((g$C$17103$CSxK@ g$g$9789$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17104$CSxK@) (set-symbol-value! (case-lambda (g$IGNORE$17105$CSxK@ (g$C$17103$CSxK@ g$g$9789$CSxK@))) g$g$9789$CSxK@ g$V$17104$CSxK@))) g$x$9787$CSxK@))) g$C$17140$CSxK@ g$V$17143$CSxK@))) 'weak-temp) (g$C$17140$CSxK@ g$x$9787$CSxK@))))) (eqv? (case-lambda ((g$T$17146$CSxK@) (if g$T$17146$CSxK@ (cdr (case-lambda ((g$V$17147$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17148$CSxK@) (cons g$C$17140$CSxK@ 'case-lambda g$V$17148$CSxK@))) (case-lambda ((g$C$17106$CSxK@ g$x$9790$CSxK@) (cdr (case-lambda ((g$V$17107$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17108$CSxK@) (car (case-lambda ((g$V$17109$CSxK@) (cons g$C$17106$CSxK@ g$V$17109$CSxK@ g$V$17108$CSxK@))) g$x$9790$CSxK@))) g$f$9786$CSxK@ g$V$17107$CSxK@))) g$x$9790$CSxK@))) g$V$17147$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17149$CSxK@) (if g$T$17149$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$17150$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17151$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17152$CSxK@) (g$cons*$6715$CSxK@ g$C$17140$CSxK@ 'lambda g$V$17152$CSxK@ g$V$17151$CSxK@))) g$x$9787$CSxK@))) g$f$9786$CSxK@ g$V$17150$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17153$CSxK@) (if g$T$17153$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$17154$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17155$CSxK@) ((case-lambda ((g$C$17114$CSxK@ g$bindings$9791$CSxK@ g$body*$9792$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17115$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17116$CSxK@) ((case-lambda ((g$C$17110$CSxK@ g$lhs*$9793$CSxK@ g$rhs*$9794$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17111$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17112$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17113$CSxK@) (g$cons*$6715$CSxK@ g$C$17110$CSxK@ 'letrec g$V$17113$CSxK@ g$V$17111$CSxK@))) list g$lhs*$9793$CSxK@ g$V$17112$CSxK@))) g$f$9786$CSxK@ g$rhs*$9794$CSxK@))) g$f$9786$CSxK@ g$body*$9792$CSxK@))) g$C$17114$CSxK@ g$V$17116$CSxK@ g$V$17115$CSxK@))) car g$bindings$9791$CSxK@))) g$cadr$7393$CSxK@ g$bindings$9791$CSxK@))) g$C$17140$CSxK@ g$V$17155$CSxK@ g$V$17154$CSxK@))) g$x$9787$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17156$CSxK@) (if g$T$17156$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$17157$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17158$CSxK@) ((case-lambda ((g$C$17121$CSxK@ g$bindings$9795$CSxK@ g$body*$9796$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17122$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17123$CSxK@) ((case-lambda ((g$C$17117$CSxK@ g$lhs*$9797$CSxK@ g$rhs*$9798$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17118$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17119$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17120$CSxK@) (g$cons*$6715$CSxK@ g$C$17117$CSxK@ 'letrec* g$V$17120$CSxK@ g$V$17118$CSxK@))) list g$lhs*$9797$CSxK@ g$V$17119$CSxK@))) g$f$9786$CSxK@ g$rhs*$9798$CSxK@))) g$f$9786$CSxK@ g$body*$9796$CSxK@))) g$C$17121$CSxK@ g$V$17123$CSxK@ g$V$17122$CSxK@))) car g$bindings$9795$CSxK@))) g$cadr$7393$CSxK@ g$bindings$9795$CSxK@))) g$C$17140$CSxK@ g$V$17158$CSxK@ g$V$17157$CSxK@))) g$x$9787$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17159$CSxK@) (if g$T$17159$CSxK@ (cdr (case-lambda ((g$V$17160$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17161$CSxK@) ((case-lambda ((g$C$17132$CSxK@ g$name$9799$CSxK@ g$x$9800$CSxK@) (g$cddr$7395$CSxK@ (case-lambda ((g$V$17133$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17134$CSxK@) ((case-lambda ((g$C$17128$CSxK@ g$bindings$9801$CSxK@ g$body*$9802$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17129$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17130$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17131$CSxK@) ((case-lambda ((g$C$17124$CSxK@ g$lhs*$9803$CSxK@ g$lhs**$9804$CSxK@ g$rhs*$9805$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17125$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17126$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17127$CSxK@) (g$cons*$6715$CSxK@ g$C$17124$CSxK@ 'library-letrec* g$name$9799$CSxK@ g$V$17127$CSxK@ g$V$17125$CSxK@))) list g$lhs*$9803$CSxK@ g$lhs**$9804$CSxK@ g$V$17126$CSxK@))) g$f$9786$CSxK@ g$rhs*$9805$CSxK@))) g$f$9786$CSxK@ g$body*$9802$CSxK@))) g$C$17128$CSxK@ g$V$17131$CSxK@ g$V$17130$CSxK@ g$V$17129$CSxK@))) car g$bindings$9801$CSxK@))) g$cadr$7393$CSxK@ g$bindings$9801$CSxK@))) g$caddr$7399$CSxK@ g$bindings$9801$CSxK@))) g$C$17132$CSxK@ g$V$17134$CSxK@ g$V$17133$CSxK@))) g$x$9800$CSxK@))) g$x$9800$CSxK@))) g$C$17140$CSxK@ g$V$17161$CSxK@ g$V$17160$CSxK@))) g$x$9787$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17162$CSxK@) (if g$T$17162$CSxK@ (cdr (case-lambda ((g$V$17163$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17164$CSxK@) (cons g$C$17140$CSxK@ 'begin g$V$17164$CSxK@))) g$f$9786$CSxK@ g$V$17163$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17165$CSxK@) (if g$T$17165$CSxK@ (g$caddr$7399$CSxK@ (case-lambda ((g$V$17166$CSxK@) (g$f$9786$CSxK@ (case-lambda ((g$V$17167$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17168$CSxK@) (list g$C$17140$CSxK@ 'set! g$V$17168$CSxK@ g$V$17167$CSxK@))) g$x$9787$CSxK@))) g$V$17166$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17169$CSxK@) (if g$T$17169$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$17170$CSxK@) ((case-lambda ((g$C$17137$CSxK@ g$op$9806$CSxK@) (g$current-primitive-locations$9768$CSxK@ (case-lambda ((g$V$17138$CSxK@) (g$V$17138$CSxK@ (case-lambda ((g$V$17139$CSxK@) ((case-lambda ((g$C$17136$CSxK@ g$t$9807$CSxK@) (if g$t$9807$CSxK@ ((case-lambda ((g$C$17135$CSxK@ g$loc$9808$CSxK@) (g$C$17135$CSxK@ g$loc$9808$CSxK@))) g$C$17136$CSxK@ g$t$9807$CSxK@) (g$C$17136$CSxK@ g$op$9806$CSxK@)))) g$C$17137$CSxK@ g$V$17139$CSxK@))) g$op$9806$CSxK@)))))) g$C$17140$CSxK@ g$V$17170$CSxK@))) g$x$9787$CSxK@) (eqv? (case-lambda ((g$T$17171$CSxK@) (if g$T$17171$CSxK@ (g$C$17140$CSxK@ g$x$9787$CSxK@) (list? (case-lambda ((g$T$17172$CSxK@) (if g$T$17172$CSxK@ (g$map$6713$CSxK@ g$C$17140$CSxK@ g$f$9786$CSxK@ g$x$9787$CSxK@) (list? (case-lambda ((g$V$17173$CSxK@) (g$error$7673$CSxK@ g$C$17140$CSxK@ 'rewrite '"invalid form ~s ~s" g$x$9787$CSxK@ g$V$17173$CSxK@))) g$x$9787$CSxK@)))) g$x$9787$CSxK@)))) g$t$9788$CSxK@ 'define)))) g$t$9788$CSxK@ 'primitive)))) g$t$9788$CSxK@ 'set!)))) g$t$9788$CSxK@ 'begin)))) g$t$9788$CSxK@ 'library-letrec*)))) g$t$9788$CSxK@ 'letrec*)))) g$t$9788$CSxK@ 'letrec)))) g$t$9788$CSxK@ 'lambda)))) g$t$9788$CSxK@ 'case-lambda)))) g$t$9788$CSxK@ 'quote))) g$C$17174$CSxK@ g$V$17176$CSxK@))) g$x$9787$CSxK@) (g$C$17174$CSxK@ g$x$9787$CSxK@)))) g$x$9787$CSxK@)))) (g$C$17177$CSxK@ g$f$9786$CSxK@)))) g$C$17178$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$rewriter$9770$CSxK@))) (g$expanded->core$9771$CSxK@ g$expanded->core$9816$CSxK@ ((case-lambda ((g$C$17189$CSxK@) (g$C$17189$CSxK@ (case-lambda ((g$C$17179$CSxK@ g$x$9809$CSxK@) (g$rewriter$9770$CSxK@ (case-lambda ((g$V$17180$CSxK@) (g$V$17180$CSxK@ g$C$17179$CSxK@ g$x$9809$CSxK@))) '#t)))))) (library-letrec*-identity 'g$expanded->core$9771$CSxK@))) (g$compile-core-expr$9772$CSxK@ g$compile-core-expr$9817$CSxK@ ((case-lambda ((g$C$17190$CSxK@) (g$C$17190$CSxK@ (case-lambda ((g$C$17181$CSxK@ g$x$9810$CSxK@) (g$rewriter$9770$CSxK@ (case-lambda ((g$V$17182$CSxK@) (g$V$17182$CSxK@ g$C$17181$CSxK@ g$x$9810$CSxK@))) '#f)))))) (library-letrec*-identity 'g$compile-core-expr$9772$CSxK@))) (g$compile-core-expr-to-port$9773$CSxK@ g$compile-core-expr-to-port$9818$CSxK@ ((case-lambda ((g$C$17191$CSxK@) (g$C$17191$CSxK@ (case-lambda ((g$C$17183$CSxK@ g$x$9811$CSxK@ g$p$9812$CSxK@) (g$rewriter$9770$CSxK@ (case-lambda ((g$V$17184$CSxK@) (g$V$17184$CSxK@ (case-lambda ((g$V$17185$CSxK@) (g$pretty-print$9767$CSxK@ g$C$17183$CSxK@ g$V$17185$CSxK@ g$p$9812$CSxK@))) g$x$9811$CSxK@))) '#f)))))) (library-letrec*-identity 'g$compile-core-expr-to-port$9773$CSxK@)))) (void identity-for-cps))(library-letrec* (psyntax library-manager) ((g$make-collection$9819$CSxK@ g$make-collection$10027$CSxK@ ((case-lambda ((g$C$17535$CSxK@) (g$C$17535$CSxK@ (case-lambda ((g$C$17200$CSxK@) ((case-lambda ((g$C$17199$CSxK@ g$set$9882$CSxK@) ((case-lambda ((g$C$17198$CSxK@ g$set-cons$9883$CSxK@) (begin (set! g$set-cons$9883$CSxK@ (case-lambda ((g$C$17192$CSxK@ g$x$9887$CSxK@ g$ls$9888$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$17193$CSxK@) (if g$T$17193$CSxK@ (g$C$17192$CSxK@ g$ls$9888$CSxK@) (cons g$C$17192$CSxK@ g$x$9887$CSxK@ g$ls$9888$CSxK@)))) g$x$9887$CSxK@ g$ls$9888$CSxK@)))) (g$C$17198$CSxK@ (case-lambda ((g$C$17194$CSxK@) (g$C$17194$CSxK@ g$set$9882$CSxK@)) ((g$C$17194$CSxK@ g$x$9884$CSxK@) (g$set-cons$9883$CSxK@ (case-lambda ((g$V$17195$CSxK@) (begin (set! g$set$9882$CSxK@ g$V$17195$CSxK@) (g$C$17194$CSxK@ (cps-void))))) g$x$9884$CSxK@ g$set$9882$CSxK@)) ((g$C$17194$CSxK@ g$x$9885$CSxK@ g$del?$9886$CSxK@) (if g$del?$9886$CSxK@ (g$remq$6720$CSxK@ (case-lambda ((g$V$17196$CSxK@) (begin (set! g$set$9882$CSxK@ g$V$17196$CSxK@) (g$C$17194$CSxK@ (cps-void))))) g$x$9885$CSxK@ g$set$9882$CSxK@) (g$set-cons$9883$CSxK@ (case-lambda ((g$V$17197$CSxK@) (begin (set! g$set$9882$CSxK@ g$V$17197$CSxK@) (g$C$17194$CSxK@ (cps-void))))) g$x$9885$CSxK@ g$set$9882$CSxK@)))))))) g$C$17199$CSxK@ uninitialized))) g$C$17200$CSxK@ '())))))) (library-letrec*-identity 'g$make-collection$9819$CSxK@))) (g$current-library-collection$9820$CSxK@ g$current-library-collection$10028$CSxK@ ((case-lambda ((g$C$17536$CSxK@) (g$make-collection$9819$CSxK@ (case-lambda ((g$V$17537$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17536$CSxK@ g$V$17537$CSxK@ (case-lambda ((g$C$17201$CSxK@ g$x$9889$CSxK@) ((case-lambda ((g$J$17203$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$V$17204$CSxK@) (not (case-lambda ((g$T$17205$CSxK@) (if g$T$17205$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17203$CSxK@ 'current-library-collection '"not a procedure" g$x$9889$CSxK@) (void g$J$17203$CSxK@)))) g$V$17204$CSxK@))) g$x$9889$CSxK@))) (case-lambda (g$IGNORE$17202$CSxK@ (g$C$17201$CSxK@ g$x$9889$CSxK@)))))))))))) (library-letrec*-identity 'g$current-library-collection$9820$CSxK@))) (g$7829$9821$CSxK@ g$7829$10029$CSxK@ ((case-lambda ((g$C$17538$CSxK@) (make-record-type-descriptor g$C$17538$CSxK@ 'library '#f 'g$7832$CSxK@ '#t '#t '#((mutable id) (mutable name) (mutable version) (mutable imp*) (mutable vis*) (mutable inv*) (mutable subst) (mutable env) (mutable visit-state) (mutable invoke-state) (mutable visit-code) (mutable invoke-code) (mutable visible?) (mutable source-file-name))))) (library-letrec*-identity 'g$7829$9821$CSxK@))) (g$7831$9822$CSxK@ g$7831$10030$CSxK@ ((case-lambda ((g$C$17539$CSxK@) (g$C$17539$CSxK@ '#f))) (library-letrec*-identity 'g$7831$9822$CSxK@))) (g$7830$9823$CSxK@ g$7830$10031$CSxK@ ((case-lambda ((g$C$17540$CSxK@) (make-record-constructor-descriptor g$C$17540$CSxK@ g$7829$9821$CSxK@ '#f g$7831$9822$CSxK@))) (library-letrec*-identity 'g$7830$9823$CSxK@))) (g$library?$9826$CSxK@ g$library?$10032$CSxK@ ((case-lambda ((g$C$17541$CSxK@) (record-predicate g$C$17541$CSxK@ g$7829$9821$CSxK@))) (library-letrec*-identity 'g$library?$9826$CSxK@))) (g$make-library$9827$CSxK@ g$make-library$10033$CSxK@ ((case-lambda ((g$C$17542$CSxK@) (record-constructor g$C$17542$CSxK@ g$7830$9823$CSxK@))) (library-letrec*-identity 'g$make-library$9827$CSxK@))) (g$library-id$9828$CSxK@ g$library-id$10034$CSxK@ ((case-lambda ((g$C$17543$CSxK@) (record-accessor g$C$17543$CSxK@ g$7829$9821$CSxK@ '0))) (library-letrec*-identity 'g$library-id$9828$CSxK@))) (g$library-name$9829$CSxK@ g$library-name$10035$CSxK@ ((case-lambda ((g$C$17544$CSxK@) (record-accessor g$C$17544$CSxK@ g$7829$9821$CSxK@ '1))) (library-letrec*-identity 'g$library-name$9829$CSxK@))) (g$library-version$9830$CSxK@ g$library-version$10036$CSxK@ ((case-lambda ((g$C$17545$CSxK@) (record-accessor g$C$17545$CSxK@ g$7829$9821$CSxK@ '2))) (library-letrec*-identity 'g$library-version$9830$CSxK@))) (g$library-imp*$9831$CSxK@ g$library-imp*$10037$CSxK@ ((case-lambda ((g$C$17546$CSxK@) (record-accessor g$C$17546$CSxK@ g$7829$9821$CSxK@ '3))) (library-letrec*-identity 'g$library-imp*$9831$CSxK@))) (g$library-vis*$9832$CSxK@ g$library-vis*$10038$CSxK@ ((case-lambda ((g$C$17547$CSxK@) (record-accessor g$C$17547$CSxK@ g$7829$9821$CSxK@ '4))) (library-letrec*-identity 'g$library-vis*$9832$CSxK@))) (g$library-inv*$9833$CSxK@ g$library-inv*$10039$CSxK@ ((case-lambda ((g$C$17548$CSxK@) (record-accessor g$C$17548$CSxK@ g$7829$9821$CSxK@ '5))) (library-letrec*-identity 'g$library-inv*$9833$CSxK@))) (g$library-subst$9834$CSxK@ g$library-subst$10040$CSxK@ ((case-lambda ((g$C$17549$CSxK@) (record-accessor g$C$17549$CSxK@ g$7829$9821$CSxK@ '6))) (library-letrec*-identity 'g$library-subst$9834$CSxK@))) (g$library-env$9835$CSxK@ g$library-env$10041$CSxK@ ((case-lambda ((g$C$17550$CSxK@) (record-accessor g$C$17550$CSxK@ g$7829$9821$CSxK@ '7))) (library-letrec*-identity 'g$library-env$9835$CSxK@))) (g$library-visit-state$9836$CSxK@ g$library-visit-state$10042$CSxK@ ((case-lambda ((g$C$17551$CSxK@) (record-accessor g$C$17551$CSxK@ g$7829$9821$CSxK@ '8))) (library-letrec*-identity 'g$library-visit-state$9836$CSxK@))) (g$library-invoke-state$9837$CSxK@ g$library-invoke-state$10043$CSxK@ ((case-lambda ((g$C$17552$CSxK@) (record-accessor g$C$17552$CSxK@ g$7829$9821$CSxK@ '9))) (library-letrec*-identity 'g$library-invoke-state$9837$CSxK@))) (g$library-visit-code$9838$CSxK@ g$library-visit-code$10044$CSxK@ ((case-lambda ((g$C$17553$CSxK@) (record-accessor g$C$17553$CSxK@ g$7829$9821$CSxK@ '10))) (library-letrec*-identity 'g$library-visit-code$9838$CSxK@))) (g$library-invoke-code$9839$CSxK@ g$library-invoke-code$10045$CSxK@ ((case-lambda ((g$C$17554$CSxK@) (record-accessor g$C$17554$CSxK@ g$7829$9821$CSxK@ '11))) (library-letrec*-identity 'g$library-invoke-code$9839$CSxK@))) (g$library-visible?$9840$CSxK@ g$library-visible?$10046$CSxK@ ((case-lambda ((g$C$17555$CSxK@) (record-accessor g$C$17555$CSxK@ g$7829$9821$CSxK@ '12))) (library-letrec*-identity 'g$library-visible?$9840$CSxK@))) (g$library-source-file-name$9841$CSxK@ g$library-source-file-name$10047$CSxK@ ((case-lambda ((g$C$17556$CSxK@) (record-accessor g$C$17556$CSxK@ g$7829$9821$CSxK@ '13))) (library-letrec*-identity 'g$library-source-file-name$9841$CSxK@))) (g$set-library-id!$9842$CSxK@ g$set-library-id!$10048$CSxK@ ((case-lambda ((g$C$17557$CSxK@) (record-mutator g$C$17557$CSxK@ g$7829$9821$CSxK@ '0))) (library-letrec*-identity 'g$set-library-id!$9842$CSxK@))) (g$set-library-name!$9843$CSxK@ g$set-library-name!$10049$CSxK@ ((case-lambda ((g$C$17558$CSxK@) (record-mutator g$C$17558$CSxK@ g$7829$9821$CSxK@ '1))) (library-letrec*-identity 'g$set-library-name!$9843$CSxK@))) (g$set-library-version!$9844$CSxK@ g$set-library-version!$10050$CSxK@ ((case-lambda ((g$C$17559$CSxK@) (record-mutator g$C$17559$CSxK@ g$7829$9821$CSxK@ '2))) (library-letrec*-identity 'g$set-library-version!$9844$CSxK@))) (g$set-library-imp*!$9845$CSxK@ g$set-library-imp*!$10051$CSxK@ ((case-lambda ((g$C$17560$CSxK@) (record-mutator g$C$17560$CSxK@ g$7829$9821$CSxK@ '3))) (library-letrec*-identity 'g$set-library-imp*!$9845$CSxK@))) (g$set-library-vis*!$9846$CSxK@ g$set-library-vis*!$10052$CSxK@ ((case-lambda ((g$C$17561$CSxK@) (record-mutator g$C$17561$CSxK@ g$7829$9821$CSxK@ '4))) (library-letrec*-identity 'g$set-library-vis*!$9846$CSxK@))) (g$set-library-inv*!$9847$CSxK@ g$set-library-inv*!$10053$CSxK@ ((case-lambda ((g$C$17562$CSxK@) (record-mutator g$C$17562$CSxK@ g$7829$9821$CSxK@ '5))) (library-letrec*-identity 'g$set-library-inv*!$9847$CSxK@))) (g$set-library-subst!$9848$CSxK@ g$set-library-subst!$10054$CSxK@ ((case-lambda ((g$C$17563$CSxK@) (record-mutator g$C$17563$CSxK@ g$7829$9821$CSxK@ '6))) (library-letrec*-identity 'g$set-library-subst!$9848$CSxK@))) (g$set-library-env!$9849$CSxK@ g$set-library-env!$10055$CSxK@ ((case-lambda ((g$C$17564$CSxK@) (record-mutator g$C$17564$CSxK@ g$7829$9821$CSxK@ '7))) (library-letrec*-identity 'g$set-library-env!$9849$CSxK@))) (g$set-library-visit-state!$9850$CSxK@ g$set-library-visit-state!$10056$CSxK@ ((case-lambda ((g$C$17565$CSxK@) (record-mutator g$C$17565$CSxK@ g$7829$9821$CSxK@ '8))) (library-letrec*-identity 'g$set-library-visit-state!$9850$CSxK@))) (g$set-library-invoke-state!$9851$CSxK@ g$set-library-invoke-state!$10057$CSxK@ ((case-lambda ((g$C$17566$CSxK@) (record-mutator g$C$17566$CSxK@ g$7829$9821$CSxK@ '9))) (library-letrec*-identity 'g$set-library-invoke-state!$9851$CSxK@))) (g$set-library-visit-code!$9852$CSxK@ g$set-library-visit-code!$10058$CSxK@ ((case-lambda ((g$C$17567$CSxK@) (record-mutator g$C$17567$CSxK@ g$7829$9821$CSxK@ '10))) (library-letrec*-identity 'g$set-library-visit-code!$9852$CSxK@))) (g$set-library-invoke-code!$9853$CSxK@ g$set-library-invoke-code!$10059$CSxK@ ((case-lambda ((g$C$17568$CSxK@) (record-mutator g$C$17568$CSxK@ g$7829$9821$CSxK@ '11))) (library-letrec*-identity 'g$set-library-invoke-code!$9853$CSxK@))) (g$set-library-visible?!$9854$CSxK@ g$set-library-visible?!$10060$CSxK@ ((case-lambda ((g$C$17569$CSxK@) (record-mutator g$C$17569$CSxK@ g$7829$9821$CSxK@ '12))) (library-letrec*-identity 'g$set-library-visible?!$9854$CSxK@))) (g$set-library-source-file-name!$9855$CSxK@ g$set-library-source-file-name!$10061$CSxK@ ((case-lambda ((g$C$17570$CSxK@) (record-mutator g$C$17570$CSxK@ g$7829$9821$CSxK@ '13))) (library-letrec*-identity 'g$set-library-source-file-name!$9855$CSxK@))) (g$rp$9856$CSxK@ g$rp$10062$CSxK@ ((case-lambda ((g$C$17571$CSxK@) (make-record-printer g$C$17571$CSxK@ 'library (case-lambda ((g$C$17206$CSxK@ g$x$9890$CSxK@ g$p$9891$CSxK@ g$wr$9892$CSxK@) ((case-lambda ((g$J$17216$CSxK@) (g$library?$9826$CSxK@ (case-lambda ((g$V$17217$CSxK@) (not (case-lambda ((g$T$17218$CSxK@) (if g$T$17218$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17216$CSxK@ 'record-type-printer '"not a library") (void g$J$17216$CSxK@)))) g$V$17217$CSxK@))) g$x$9890$CSxK@))) (case-lambda (g$IGNORE$17207$CSxK@ ((case-lambda ((g$J$17210$CSxK@) (g$library-version$9830$CSxK@ (case-lambda ((g$V$17211$CSxK@) (null? (case-lambda ((g$T$17212$CSxK@) (if g$T$17212$CSxK@ (g$library-name$9829$CSxK@ g$J$17210$CSxK@ g$x$9890$CSxK@) (g$library-version$9830$CSxK@ (case-lambda ((g$V$17213$CSxK@) (list (case-lambda ((g$V$17214$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17215$CSxK@) (append g$J$17210$CSxK@ g$V$17215$CSxK@ g$V$17214$CSxK@))) g$x$9890$CSxK@))) g$V$17213$CSxK@))) g$x$9890$CSxK@)))) g$V$17211$CSxK@))) g$x$9890$CSxK@))) (case-lambda ((g$V$17208$CSxK@) (g$format$9085$CSxK@ (case-lambda ((g$V$17209$CSxK@) (display g$C$17206$CSxK@ g$V$17209$CSxK@ g$p$9891$CSxK@))) '"#<library ~s>" g$V$17208$CSxK@)))))))))))) (library-letrec*-identity 'g$rp$9856$CSxK@))) (g$find-dependencies$9857$CSxK@ g$find-dependencies$10063$CSxK@ ((case-lambda ((g$C$17572$CSxK@) (g$C$17572$CSxK@ (case-lambda ((g$C$17219$CSxK@ g$ls$9893$CSxK@) (null? (case-lambda ((g$T$17220$CSxK@) (if g$T$17220$CSxK@ (g$C$17219$CSxK@ '()) (g$assertion-violation$7672$CSxK@ g$C$17219$CSxK@ 'find-dependencies '"cannot handle deps yet")))) g$ls$9893$CSxK@)))))) (library-letrec*-identity 'g$find-dependencies$9857$CSxK@))) (g$find-library-by$9858$CSxK@ g$find-library-by$10064$CSxK@ ((case-lambda ((g$C$17573$CSxK@) (g$C$17573$CSxK@ (case-lambda ((g$C$17229$CSxK@ g$pred$9894$CSxK@) (g$current-library-collection$9820$CSxK@ (case-lambda ((g$V$17230$CSxK@) (g$V$17230$CSxK@ (case-lambda ((g$V$17231$CSxK@) ((case-lambda ((g$C$17228$CSxK@ g$f$9895$CSxK@) ((case-lambda ((g$C$17222$CSxK@ g$f$17221$CSxK@) (begin (set! g$f$9895$CSxK@ g$f$17221$CSxK@) (g$C$17222$CSxK@ g$f$9895$CSxK@)))) g$C$17228$CSxK@ (case-lambda ((g$C$17223$CSxK@ g$ls$9896$CSxK@) (null? (case-lambda ((g$T$17224$CSxK@) (if g$T$17224$CSxK@ (g$C$17223$CSxK@ '#f) (car (case-lambda ((g$V$17225$CSxK@) (g$pred$9894$CSxK@ (case-lambda ((g$T$17226$CSxK@) (if g$T$17226$CSxK@ (car g$C$17223$CSxK@ g$ls$9896$CSxK@) (cdr (case-lambda ((g$V$17227$CSxK@) (g$f$9895$CSxK@ g$C$17223$CSxK@ g$V$17227$CSxK@))) g$ls$9896$CSxK@)))) g$V$17225$CSxK@))) g$ls$9896$CSxK@)))) g$ls$9896$CSxK@)))))) (case-lambda ((g$V$17232$CSxK@) (g$V$17232$CSxK@ g$C$17229$CSxK@ g$V$17231$CSxK@))) uninitialized)))))))))))) (library-letrec*-identity 'g$find-library-by$9858$CSxK@))) (g$library-path$9859$CSxK@ g$library-path$10065$CSxK@ ((case-lambda ((g$C$17574$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17574$CSxK@ '(".") (case-lambda ((g$C$17234$CSxK@ g$x$9897$CSxK@) ((case-lambda ((g$J$17236$CSxK@) (list? (case-lambda ((g$T$17237$CSxK@) (if g$T$17237$CSxK@ (g$for-all$6711$CSxK@ g$J$17236$CSxK@ string? g$x$9897$CSxK@) (g$J$17236$CSxK@ '#f)))) g$x$9897$CSxK@))) (case-lambda ((g$T$17235$CSxK@) (if g$T$17235$CSxK@ (g$map$6713$CSxK@ g$C$17234$CSxK@ (case-lambda ((g$C$17233$CSxK@ g$x$9898$CSxK@) (g$C$17233$CSxK@ g$x$9898$CSxK@))) g$x$9897$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17234$CSxK@ 'library-path '"not a list of strings" g$x$9897$CSxK@)))))))))) (library-letrec*-identity 'g$library-path$9859$CSxK@))) (g$library-extensions$9860$CSxK@ g$library-extensions$10066$CSxK@ ((case-lambda ((g$C$17575$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17575$CSxK@ '(".sls" ".ss" ".scm") (case-lambda ((g$C$17239$CSxK@ g$x$9899$CSxK@) ((case-lambda ((g$J$17241$CSxK@) (list? (case-lambda ((g$T$17242$CSxK@) (if g$T$17242$CSxK@ (g$for-all$6711$CSxK@ g$J$17241$CSxK@ string? g$x$9899$CSxK@) (g$J$17241$CSxK@ '#f)))) g$x$9899$CSxK@))) (case-lambda ((g$T$17240$CSxK@) (if g$T$17240$CSxK@ (g$map$6713$CSxK@ g$C$17239$CSxK@ (case-lambda ((g$C$17238$CSxK@ g$x$9900$CSxK@) (g$C$17238$CSxK@ g$x$9900$CSxK@))) g$x$9899$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17239$CSxK@ 'library-extensions '"not a list of strings" g$x$9899$CSxK@)))))))))) (library-letrec*-identity 'g$library-extensions$9860$CSxK@))) (g$library-name->file-name$9861$CSxK@ g$library-name->file-name$10067$CSxK@ ((case-lambda ((g$C$17576$CSxK@) (g$C$17576$CSxK@ (case-lambda ((g$C$17281$CSxK@ g$x$9901$CSxK@) (call-with-values g$C$17281$CSxK@ (case-lambda ((g$C$17243$CSxK@) (g$open-string-output-port$8848$CSxK@ g$C$17243$CSxK@))) (case-lambda ((g$C$17280$CSxK@ g$p$9904$CSxK@ g$extract$9905$CSxK@) ((case-lambda ((g$C$17279$CSxK@ g$extract$9906$CSxK@ g$p$9907$CSxK@) ((case-lambda ((g$C$17276$CSxK@ g$display-hex$9908$CSxK@) (begin (set! g$display-hex$9908$CSxK@ (case-lambda ((g$C$17244$CSxK@ g$n$9916$CSxK@) (<= (case-lambda ((g$T$17245$CSxK@) (if g$T$17245$CSxK@ (display g$C$17244$CSxK@ g$n$9916$CSxK@ g$p$9907$CSxK@) (- (case-lambda ((g$V$17246$CSxK@) (char->integer (case-lambda ((g$V$17247$CSxK@) (+ (case-lambda ((g$V$17248$CSxK@) (integer->char (case-lambda ((g$V$17249$CSxK@) (display g$C$17244$CSxK@ g$V$17249$CSxK@ g$p$9907$CSxK@))) g$V$17248$CSxK@))) g$V$17247$CSxK@ g$V$17246$CSxK@))) '#\A))) g$n$9916$CSxK@ '10)))) '0 g$n$9916$CSxK@ '9)))) ((case-lambda ((g$C$17275$CSxK@ g$f$9909$CSxK@) ((case-lambda ((g$C$17251$CSxK@ g$f$17250$CSxK@) (begin (set! g$f$9909$CSxK@ g$f$17250$CSxK@) (g$C$17251$CSxK@ g$f$9909$CSxK@)))) g$C$17275$CSxK@ (case-lambda ((g$C$17266$CSxK@ g$ls$9910$CSxK@) (null? (case-lambda ((g$V$17267$CSxK@) (not (case-lambda ((g$T$17268$CSxK@) (if g$T$17268$CSxK@ (display (case-lambda (g$IGNORE$17269$CSxK@ (car (case-lambda ((g$V$17270$CSxK@) (symbol->string (case-lambda ((g$V$17271$CSxK@) (string->list (case-lambda ((g$V$17272$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$17273$CSxK@ (cdr (case-lambda ((g$V$17274$CSxK@) (g$f$9909$CSxK@ g$C$17266$CSxK@ g$V$17274$CSxK@))) g$ls$9910$CSxK@))) (case-lambda ((g$C$17261$CSxK@ g$c$9911$CSxK@) (g$char<=?$7439$CSxK@ (case-lambda ((g$V$17262$CSxK@) ((case-lambda ((g$C$17255$CSxK@ g$t$9912$CSxK@) (if g$t$9912$CSxK@ (g$C$17255$CSxK@ g$t$9912$CSxK@) (g$char<=?$7439$CSxK@ (case-lambda ((g$V$17256$CSxK@) ((case-lambda ((g$C$17253$CSxK@ g$t$9913$CSxK@) (if g$t$9913$CSxK@ (g$C$17253$CSxK@ g$t$9913$CSxK@) (g$char<=?$7439$CSxK@ (case-lambda ((g$V$17254$CSxK@) ((case-lambda ((g$C$17252$CSxK@ g$t$9914$CSxK@) (if g$t$9914$CSxK@ (g$C$17252$CSxK@ g$t$9914$CSxK@) (g$memv$6706$CSxK@ g$C$17252$CSxK@ g$c$9911$CSxK@ '(#\- #\. #\_ #\~))))) g$C$17253$CSxK@ g$V$17254$CSxK@))) '#\0 g$c$9911$CSxK@ '#\9)))) g$C$17255$CSxK@ g$V$17256$CSxK@))) '#\A g$c$9911$CSxK@ '#\Z)))) (case-lambda ((g$T$17263$CSxK@) (if g$T$17263$CSxK@ (display g$C$17261$CSxK@ g$c$9911$CSxK@ g$p$9907$CSxK@) (display (case-lambda (g$IGNORE$17264$CSxK@ (char->integer (case-lambda ((g$V$17265$CSxK@) ((case-lambda ((g$C$17257$CSxK@ g$n$9915$CSxK@) (g$quotient$8323$CSxK@ (case-lambda ((g$V$17258$CSxK@) (g$display-hex$9908$CSxK@ (case-lambda (g$IGNORE$17259$CSxK@ (g$remainder$8324$CSxK@ (case-lambda ((g$V$17260$CSxK@) (g$display-hex$9908$CSxK@ g$C$17257$CSxK@ g$V$17260$CSxK@))) g$n$9915$CSxK@ '16))) g$V$17258$CSxK@))) g$n$9915$CSxK@ '16))) g$C$17261$CSxK@ g$V$17265$CSxK@))) g$c$9911$CSxK@))) '"%" g$p$9907$CSxK@)))) g$V$17262$CSxK@))) '#\a g$c$9911$CSxK@ '#\z))) g$V$17272$CSxK@))) g$V$17271$CSxK@))) g$V$17270$CSxK@))) g$ls$9910$CSxK@))) '"/" g$p$9907$CSxK@) (void g$C$17266$CSxK@)))) g$V$17267$CSxK@))) g$ls$9910$CSxK@)))))) (case-lambda ((g$V$17277$CSxK@) (g$V$17277$CSxK@ (case-lambda (g$IGNORE$17278$CSxK@ (g$extract$9906$CSxK@ g$C$17276$CSxK@))) g$x$9901$CSxK@))) uninitialized)))) g$C$17279$CSxK@ uninitialized))) g$C$17280$CSxK@ g$extract$9905$CSxK@ g$p$9904$CSxK@))))))))) (library-letrec*-identity 'g$library-name->file-name$9861$CSxK@))) (g$file-locator$9862$CSxK@ g$file-locator$10068$CSxK@ ((case-lambda ((g$C$17577$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17577$CSxK@ (case-lambda ((g$C$17302$CSxK@ g$x$9917$CSxK@) (g$library-name->file-name$9861$CSxK@ (case-lambda ((g$V$17303$CSxK@) ((case-lambda ((g$C$17298$CSxK@ g$str$9918$CSxK@) (g$library-extensions$9860$CSxK@ (case-lambda ((g$V$17299$CSxK@) (g$library-path$9859$CSxK@ (case-lambda ((g$V$17300$CSxK@) ((case-lambda ((g$C$17297$CSxK@ g$f$9919$CSxK@) ((case-lambda ((g$C$17283$CSxK@ g$f$17282$CSxK@) (begin (set! g$f$9919$CSxK@ g$f$17282$CSxK@) (g$C$17283$CSxK@ g$f$9919$CSxK@)))) g$C$17297$CSxK@ (case-lambda ((g$C$17288$CSxK@ g$ls$9920$CSxK@ g$exts$9921$CSxK@ g$failed-list$9922$CSxK@) (null? (case-lambda ((g$T$17289$CSxK@) (if g$T$17289$CSxK@ (g$reverse$7391$CSxK@ (case-lambda ((g$V$17290$CSxK@) (g$file-locator-resolution-error$9566$CSxK@ g$C$17288$CSxK@ g$x$9917$CSxK@ g$V$17290$CSxK@))) g$failed-list$9922$CSxK@) (null? (case-lambda ((g$T$17291$CSxK@) (if g$T$17291$CSxK@ (g$library-extensions$9860$CSxK@ (case-lambda ((g$V$17292$CSxK@) (cdr (case-lambda ((g$V$17293$CSxK@) (g$f$9919$CSxK@ g$C$17288$CSxK@ g$V$17293$CSxK@ g$V$17292$CSxK@ g$failed-list$9922$CSxK@))) g$ls$9920$CSxK@)))) (car (case-lambda ((g$V$17294$CSxK@) (car (case-lambda ((g$V$17295$CSxK@) (string-append (case-lambda ((g$V$17296$CSxK@) ((case-lambda ((g$C$17284$CSxK@ g$name$9923$CSxK@) (g$file-exists?$7501$CSxK@ (case-lambda ((g$T$17285$CSxK@) (if g$T$17285$CSxK@ (g$C$17284$CSxK@ g$name$9923$CSxK@) (cons (case-lambda ((g$V$17286$CSxK@) (cdr (case-lambda ((g$V$17287$CSxK@) (g$f$9919$CSxK@ g$C$17284$CSxK@ g$ls$9920$CSxK@ g$V$17287$CSxK@ g$V$17286$CSxK@))) g$exts$9921$CSxK@))) g$name$9923$CSxK@ g$failed-list$9922$CSxK@)))) g$name$9923$CSxK@))) g$C$17288$CSxK@ g$V$17296$CSxK@))) g$V$17295$CSxK@ g$str$9918$CSxK@ g$V$17294$CSxK@))) g$ls$9920$CSxK@))) g$exts$9921$CSxK@)))) g$exts$9921$CSxK@)))) g$ls$9920$CSxK@)))))) (case-lambda ((g$V$17301$CSxK@) (g$V$17301$CSxK@ g$C$17298$CSxK@ g$V$17300$CSxK@ g$V$17299$CSxK@ '()))) uninitialized))))))))) g$C$17302$CSxK@ g$V$17303$CSxK@))) g$x$9917$CSxK@))) (case-lambda ((g$C$17304$CSxK@ g$f$9924$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$17305$CSxK@) (if g$T$17305$CSxK@ (g$C$17304$CSxK@ g$f$9924$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17304$CSxK@ 'file-locator '"not a procedure" g$f$9924$CSxK@)))) g$f$9924$CSxK@)))))) (library-letrec*-identity 'g$file-locator$9862$CSxK@))) (g$serialize-all$9863$CSxK@ g$serialize-all$10069$CSxK@ ((case-lambda ((g$C$17578$CSxK@) (g$C$17578$CSxK@ (case-lambda ((g$C$17332$CSxK@ g$serialize$9925$CSxK@ g$compile$9926$CSxK@) ((case-lambda ((g$C$17329$CSxK@ g$library-desc$9927$CSxK@) (begin (set! g$library-desc$9927$CSxK@ (case-lambda ((g$C$17306$CSxK@ g$x$9929$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17307$CSxK@) (g$library-id$9828$CSxK@ (case-lambda ((g$V$17308$CSxK@) (list g$C$17306$CSxK@ g$V$17308$CSxK@ g$V$17307$CSxK@))) g$x$9929$CSxK@))) g$x$9929$CSxK@)))) (g$current-library-collection$9820$CSxK@ (case-lambda ((g$V$17330$CSxK@) (g$V$17330$CSxK@ (case-lambda ((g$V$17331$CSxK@) (g$for-each$6714$CSxK@ g$C$17329$CSxK@ (case-lambda ((g$C$17309$CSxK@ g$x$9928$CSxK@) (g$library-source-file-name$9841$CSxK@ (case-lambda ((g$T$17310$CSxK@) (if g$T$17310$CSxK@ (g$library-visible?$9840$CSxK@ (case-lambda ((g$V$17311$CSxK@) (g$library-invoke-code$9839$CSxK@ (case-lambda ((g$V$17312$CSxK@) (g$compile$9926$CSxK@ (case-lambda ((g$V$17313$CSxK@) (g$library-visit-code$9838$CSxK@ (case-lambda ((g$V$17314$CSxK@) (g$compile$9926$CSxK@ (case-lambda ((g$V$17315$CSxK@) (g$library-env$9835$CSxK@ (case-lambda ((g$V$17316$CSxK@) (g$library-subst$9834$CSxK@ (case-lambda ((g$V$17317$CSxK@) (g$library-inv*$9833$CSxK@ (case-lambda ((g$V$17318$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17319$CSxK@) (g$library-vis*$9832$CSxK@ (case-lambda ((g$V$17320$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17321$CSxK@) (g$library-imp*$9831$CSxK@ (case-lambda ((g$V$17322$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17323$CSxK@) (g$library-version$9830$CSxK@ (case-lambda ((g$V$17324$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17325$CSxK@) (g$library-id$9828$CSxK@ (case-lambda ((g$V$17326$CSxK@) (list (case-lambda ((g$V$17327$CSxK@) (g$library-source-file-name$9841$CSxK@ (case-lambda ((g$V$17328$CSxK@) (g$serialize$9925$CSxK@ g$C$17309$CSxK@ g$V$17328$CSxK@ g$V$17327$CSxK@))) g$x$9928$CSxK@))) g$V$17326$CSxK@ g$V$17325$CSxK@ g$V$17324$CSxK@ g$V$17323$CSxK@ g$V$17321$CSxK@ g$V$17319$CSxK@ g$V$17317$CSxK@ g$V$17316$CSxK@ g$V$17315$CSxK@ g$V$17313$CSxK@ g$V$17311$CSxK@))) g$x$9928$CSxK@))) g$x$9928$CSxK@))) g$x$9928$CSxK@))) g$library-desc$9927$CSxK@ g$V$17322$CSxK@))) g$x$9928$CSxK@))) g$library-desc$9927$CSxK@ g$V$17320$CSxK@))) g$x$9928$CSxK@))) g$library-desc$9927$CSxK@ g$V$17318$CSxK@))) g$x$9928$CSxK@))) g$x$9928$CSxK@))) g$x$9928$CSxK@))) g$V$17314$CSxK@))) g$x$9928$CSxK@))) g$V$17312$CSxK@))) g$x$9928$CSxK@))) g$x$9928$CSxK@) (void g$C$17309$CSxK@)))) g$x$9928$CSxK@))) g$V$17331$CSxK@)))))))))) g$C$17332$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$serialize-all$9863$CSxK@))) (g$current-precompiled-library-loader$9864$CSxK@ g$current-precompiled-library-loader$10070$CSxK@ ((case-lambda ((g$C$17579$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17579$CSxK@ (case-lambda ((g$C$17333$CSxK@ g$filename$9930$CSxK@ g$sk$9931$CSxK@) (g$C$17333$CSxK@ '#f)))))) (library-letrec*-identity 'g$current-precompiled-library-loader$9864$CSxK@))) (g$try-load-from-file$9865$CSxK@ g$try-load-from-file$10071$CSxK@ ((case-lambda ((g$C$17580$CSxK@) (g$C$17580$CSxK@ (case-lambda ((g$C$17356$CSxK@ g$filename$9932$CSxK@) (g$current-precompiled-library-loader$9864$CSxK@ (case-lambda ((g$V$17357$CSxK@) (g$V$17357$CSxK@ g$C$17356$CSxK@ g$filename$9932$CSxK@ (case-lambda ((g$C$17353$CSxK@ g$id$9933$CSxK@ g$name$9934$CSxK@ g$ver$9935$CSxK@ g$imp*$9936$CSxK@ g$vis*$9937$CSxK@ g$inv*$9938$CSxK@ g$exp-subst$9939$CSxK@ g$exp-env$9940$CSxK@ g$visit-proc$9941$CSxK@ g$invoke-proc$9942$CSxK@ g$visible?$9943$CSxK@) (append (case-lambda ((g$V$17354$CSxK@) ((case-lambda ((g$C$17352$CSxK@ g$f$9944$CSxK@) ((case-lambda ((g$C$17335$CSxK@ g$f$17334$CSxK@) (begin (set! g$f$9944$CSxK@ g$f$17334$CSxK@) (g$C$17335$CSxK@ g$f$9944$CSxK@)))) g$C$17352$CSxK@ (case-lambda ((g$C$17348$CSxK@ g$deps$9945$CSxK@) (null? (case-lambda ((g$T$17349$CSxK@) (if g$T$17349$CSxK@ (g$install-library$9875$CSxK@ (case-lambda (g$IGNORE$17350$CSxK@ (g$C$17348$CSxK@ '#t))) g$id$9933$CSxK@ g$name$9934$CSxK@ g$ver$9935$CSxK@ g$imp*$9936$CSxK@ g$vis*$9937$CSxK@ g$inv*$9938$CSxK@ g$exp-subst$9939$CSxK@ g$exp-env$9940$CSxK@ g$visit-proc$9941$CSxK@ g$invoke-proc$9942$CSxK@ '#f '#f g$visible?$9943$CSxK@ '#f) (car (case-lambda ((g$V$17351$CSxK@) ((case-lambda ((g$C$17345$CSxK@ g$d$9946$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$17346$CSxK@) (car (case-lambda ((g$V$17347$CSxK@) ((case-lambda ((g$C$17343$CSxK@ g$label$9947$CSxK@ g$dname$9948$CSxK@) (g$find-library-by-name$9870$CSxK@ (case-lambda ((g$V$17344$CSxK@) ((case-lambda ((g$C$17336$CSxK@ g$l$9949$CSxK@) ((case-lambda ((g$J$17340$CSxK@) (g$library?$9826$CSxK@ (case-lambda ((g$T$17341$CSxK@) (if g$T$17341$CSxK@ (g$library-id$9828$CSxK@ (case-lambda ((g$V$17342$CSxK@) (eq? g$J$17340$CSxK@ g$label$9947$CSxK@ g$V$17342$CSxK@))) g$l$9949$CSxK@) (g$J$17340$CSxK@ '#f)))) g$l$9949$CSxK@))) (case-lambda ((g$T$17337$CSxK@) (if g$T$17337$CSxK@ (cdr (case-lambda ((g$V$17338$CSxK@) (g$f$9944$CSxK@ g$C$17336$CSxK@ g$V$17338$CSxK@))) g$deps$9945$CSxK@) (g$library-version-mismatch-warning$9565$CSxK@ (case-lambda (g$IGNORE$17339$CSxK@ (g$C$17336$CSxK@ '#f))) g$name$9934$CSxK@ g$dname$9948$CSxK@ g$filename$9932$CSxK@))))))) g$C$17343$CSxK@ g$V$17344$CSxK@))) g$dname$9948$CSxK@))) g$C$17345$CSxK@ g$V$17347$CSxK@ g$V$17346$CSxK@))) g$d$9946$CSxK@))) g$d$9946$CSxK@))) g$C$17348$CSxK@ g$V$17351$CSxK@))) g$deps$9945$CSxK@)))) g$deps$9945$CSxK@)))))) (case-lambda ((g$V$17355$CSxK@) (g$V$17355$CSxK@ g$C$17353$CSxK@ g$V$17354$CSxK@))) uninitialized))) g$imp*$9936$CSxK@ g$vis*$9937$CSxK@ g$inv*$9938$CSxK@)) ((g$C$17353$CSxK@ . g$others$9950$CSxK@) (g$C$17353$CSxK@ '#f)))))))))))) (library-letrec*-identity 'g$try-load-from-file$9865$CSxK@))) (g$library-loader$9866$CSxK@ g$library-loader$10072$CSxK@ ((case-lambda ((g$C$17581$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17581$CSxK@ (case-lambda ((g$C$17378$CSxK@ g$x$9951$CSxK@) (g$file-locator$9862$CSxK@ (case-lambda ((g$V$17379$CSxK@) (g$V$17379$CSxK@ (case-lambda ((g$V$17380$CSxK@) ((case-lambda ((g$C$17375$CSxK@ g$file-name$9952$CSxK@) (not (case-lambda ((g$T$17376$CSxK@) (if g$T$17376$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$17375$CSxK@ '#f '"cannot find library" g$x$9951$CSxK@) (g$try-load-from-file$9865$CSxK@ (case-lambda ((g$V$17377$CSxK@) ((case-lambda ((g$C$17372$CSxK@ g$t$9953$CSxK@) (if g$t$9953$CSxK@ (g$C$17372$CSxK@ g$t$9953$CSxK@) (g$read-library-source-file$9567$CSxK@ (case-lambda ((g$V$17373$CSxK@) (g$current-library-expander$9867$CSxK@ (case-lambda ((g$V$17374$CSxK@) (g$V$17374$CSxK@ g$C$17372$CSxK@ g$V$17373$CSxK@ g$file-name$9952$CSxK@ (case-lambda ((g$C$17368$CSxK@ g$name$9954$CSxK@) (equal? (case-lambda ((g$V$17369$CSxK@) (not (case-lambda ((g$T$17370$CSxK@) (if g$T$17370$CSxK@ (call-with-values (case-lambda ((g$V$17371$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17368$CSxK@ 'import g$V$17371$CSxK@))) (case-lambda ((g$C$17358$CSxK@) (g$open-string-output-port$8848$CSxK@ g$C$17358$CSxK@))) (case-lambda ((g$C$17367$CSxK@ g$p$9957$CSxK@ g$e$9958$CSxK@) ((case-lambda ((g$C$17359$CSxK@ g$e$9959$CSxK@ g$p$9960$CSxK@) (display (case-lambda (g$IGNORE$17360$CSxK@ (write (case-lambda (g$IGNORE$17361$CSxK@ (display (case-lambda (g$IGNORE$17362$CSxK@ (display (case-lambda (g$IGNORE$17363$CSxK@ (display (case-lambda (g$IGNORE$17364$CSxK@ (write (case-lambda (g$IGNORE$17365$CSxK@ (display (case-lambda (g$IGNORE$17366$CSxK@ (g$e$9959$CSxK@ g$C$17359$CSxK@))) '" instead" g$p$9960$CSxK@))) g$name$9954$CSxK@ g$p$9960$CSxK@))) '", found " g$p$9960$CSxK@))) g$file-name$9952$CSxK@ g$p$9960$CSxK@))) '" in file " g$p$9960$CSxK@))) g$x$9951$CSxK@ g$p$9960$CSxK@))) '"expected to find library " g$p$9960$CSxK@))) g$C$17367$CSxK@ g$e$9958$CSxK@ g$p$9957$CSxK@)))) (void g$C$17368$CSxK@)))) g$V$17369$CSxK@))) g$name$9954$CSxK@ g$x$9951$CSxK@))))))))) g$file-name$9952$CSxK@)))) g$C$17375$CSxK@ g$V$17377$CSxK@))) g$file-name$9952$CSxK@)))) g$file-name$9952$CSxK@))) g$C$17378$CSxK@ g$V$17380$CSxK@))) g$x$9951$CSxK@)))))) (case-lambda ((g$C$17381$CSxK@ g$f$9961$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$17382$CSxK@) (if g$T$17382$CSxK@ (g$C$17381$CSxK@ g$f$9961$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17381$CSxK@ 'library-locator '"not a procedure" g$f$9961$CSxK@)))) g$f$9961$CSxK@)))))) (library-letrec*-identity 'g$library-loader$9866$CSxK@))) (g$current-library-expander$9867$CSxK@ g$current-library-expander$10073$CSxK@ ((case-lambda ((g$C$17582$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17582$CSxK@ (case-lambda ((g$C$17383$CSxK@ g$x$9962$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17383$CSxK@ 'library-expander '"not initialized"))) (case-lambda ((g$C$17384$CSxK@ g$f$9963$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$17385$CSxK@) (if g$T$17385$CSxK@ (g$C$17384$CSxK@ g$f$9963$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17384$CSxK@ 'library-expander '"not a procedure" g$f$9963$CSxK@)))) g$f$9963$CSxK@)))))) (library-letrec*-identity 'g$current-library-expander$9867$CSxK@))) (g$external-pending-libraries$9868$CSxK@ g$external-pending-libraries$10074$CSxK@ ((case-lambda ((g$C$17583$CSxK@) (g$make-parameter$9568$CSxK@ g$C$17583$CSxK@ '()))) (library-letrec*-identity 'g$external-pending-libraries$9868$CSxK@))) (g$find-external-library$9869$CSxK@ g$find-external-library$10075$CSxK@ ((case-lambda ((g$C$17584$CSxK@) (g$C$17584$CSxK@ (case-lambda ((g$C$17399$CSxK@ g$name$9964$CSxK@) ((case-lambda ((g$J$17403$CSxK@) (g$external-pending-libraries$9868$CSxK@ (case-lambda ((g$V$17404$CSxK@) (g$member$6707$CSxK@ (case-lambda ((g$T$17405$CSxK@) (if g$T$17405$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17403$CSxK@ '#f '"circular attempt to import library was detected" g$name$9964$CSxK@) (void g$J$17403$CSxK@)))) g$name$9964$CSxK@ g$V$17404$CSxK@)))))) (case-lambda (g$IGNORE$17400$CSxK@ (g$external-pending-libraries$9868$CSxK@ (case-lambda ((g$V$17401$CSxK@) (cons (case-lambda ((g$V$17402$CSxK@) ((case-lambda ((g$C$17398$CSxK@ g$external-pending-libraries$9967$CSxK@ g$external-pending-libraries$9968$CSxK@) ((case-lambda ((g$C$17393$CSxK@ g$swap$9969$CSxK@) (dynamic-wind g$C$17393$CSxK@ g$swap$9969$CSxK@ (case-lambda ((g$C$17389$CSxK@) (g$library-loader$9866$CSxK@ (case-lambda ((g$V$17390$CSxK@) (g$V$17390$CSxK@ (case-lambda (g$IGNORE$17391$CSxK@ (g$find-library-by$9858$CSxK@ (case-lambda ((g$V$17392$CSxK@) ((case-lambda ((g$C$17386$CSxK@ g$t$9970$CSxK@) (if g$t$9970$CSxK@ (g$C$17386$CSxK@ g$t$9970$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17386$CSxK@ '#f '"handling external library did not yield the correct library" g$name$9964$CSxK@)))) g$C$17389$CSxK@ g$V$17392$CSxK@))) (case-lambda ((g$C$17387$CSxK@ g$x$9971$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17388$CSxK@) (equal? g$C$17387$CSxK@ g$V$17388$CSxK@ g$name$9964$CSxK@))) g$x$9971$CSxK@)))))) g$name$9964$CSxK@)))))) g$swap$9969$CSxK@))) g$C$17398$CSxK@ (case-lambda ((g$C$17396$CSxK@) (g$external-pending-libraries$9967$CSxK@ (case-lambda ((g$V$17397$CSxK@) ((case-lambda ((g$C$17394$CSxK@ g$t$9972$CSxK@) (g$external-pending-libraries$9967$CSxK@ (case-lambda (g$IGNORE$17395$CSxK@ (begin (set! g$external-pending-libraries$9968$CSxK@ g$t$9972$CSxK@) (g$C$17394$CSxK@ (cps-void))))) g$external-pending-libraries$9968$CSxK@))) g$C$17396$CSxK@ g$V$17397$CSxK@))))))))) g$C$17399$CSxK@ g$external-pending-libraries$9868$CSxK@ g$V$17402$CSxK@))) g$name$9964$CSxK@ g$V$17401$CSxK@)))))))))))) (library-letrec*-identity 'g$find-external-library$9869$CSxK@))) (g$find-library-by-name$9870$CSxK@ g$find-library-by-name$10076$CSxK@ ((case-lambda ((g$C$17585$CSxK@) (g$C$17585$CSxK@ (case-lambda ((g$C$17409$CSxK@ g$name$9973$CSxK@) (g$find-library-by$9858$CSxK@ (case-lambda ((g$V$17410$CSxK@) ((case-lambda ((g$C$17406$CSxK@ g$t$9974$CSxK@) (if g$t$9974$CSxK@ (g$C$17406$CSxK@ g$t$9974$CSxK@) (g$find-external-library$9869$CSxK@ g$C$17406$CSxK@ g$name$9973$CSxK@)))) g$C$17409$CSxK@ g$V$17410$CSxK@))) (case-lambda ((g$C$17407$CSxK@ g$x$9975$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17408$CSxK@) (equal? g$C$17407$CSxK@ g$V$17408$CSxK@ g$name$9973$CSxK@))) g$x$9975$CSxK@))))))))) (library-letrec*-identity 'g$find-library-by-name$9870$CSxK@))) (g$uninstall-library$9871$CSxK@ g$uninstall-library$10077$CSxK@ ((case-lambda ((g$C$17586$CSxK@) (g$C$17586$CSxK@ (case-lambda ((g$C$17431$CSxK@ g$name$9976$CSxK@ g$err?$9977$CSxK@) ((case-lambda ((g$C$17429$CSxK@ g$who$9978$CSxK@) (begin (set! g$who$9978$CSxK@ 'uninstall-library) (g$find-library-by$9858$CSxK@ (case-lambda ((g$V$17430$CSxK@) ((case-lambda ((g$C$17419$CSxK@ g$lib$9979$CSxK@) ((case-lambda ((g$J$17424$CSxK@) ((case-lambda ((g$J$17426$CSxK@) (if g$err?$9977$CSxK@ (not g$J$17426$CSxK@ g$lib$9979$CSxK@) (g$J$17426$CSxK@ '#f)))) (case-lambda ((g$T$17425$CSxK@) (if g$T$17425$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17424$CSxK@ g$who$9978$CSxK@ '"library not installed" g$name$9976$CSxK@) (void g$J$17424$CSxK@))))))) (case-lambda (g$IGNORE$17420$CSxK@ (g$current-library-collection$9820$CSxK@ (case-lambda ((g$V$17421$CSxK@) (g$V$17421$CSxK@ (case-lambda (g$IGNORE$17422$CSxK@ (g$library-env$9835$CSxK@ (case-lambda ((g$V$17423$CSxK@) (g$for-each$6714$CSxK@ g$C$17419$CSxK@ (case-lambda ((g$C$17416$CSxK@ g$x$9980$CSxK@) (cdr (case-lambda ((g$V$17417$CSxK@) (car (case-lambda ((g$V$17418$CSxK@) ((case-lambda ((g$C$17411$CSxK@ g$label$9981$CSxK@ g$binding$9982$CSxK@) (remove-location (case-lambda (g$IGNORE$17412$CSxK@ (car (case-lambda ((g$V$17413$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$17414$CSxK@) (if g$T$17414$CSxK@ (cdr (case-lambda ((g$V$17415$CSxK@) (remove-location g$C$17411$CSxK@ g$V$17415$CSxK@))) g$binding$9982$CSxK@) (void g$C$17411$CSxK@)))) g$V$17413$CSxK@ '(global global-macro global-macro! global-ctv)))) g$binding$9982$CSxK@))) g$label$9981$CSxK@))) g$C$17416$CSxK@ g$V$17418$CSxK@ g$V$17417$CSxK@))) g$x$9980$CSxK@))) g$x$9980$CSxK@))) g$V$17423$CSxK@))) g$lib$9979$CSxK@))) g$lib$9979$CSxK@ '#t))))))))) g$C$17429$CSxK@ g$V$17430$CSxK@))) (case-lambda ((g$C$17427$CSxK@ g$x$9983$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17428$CSxK@) (equal? g$C$17427$CSxK@ g$V$17428$CSxK@ g$name$9976$CSxK@))) g$x$9983$CSxK@))))))) g$C$17431$CSxK@ uninitialized)) ((g$C$17431$CSxK@ g$name$9984$CSxK@) (g$uninstall-library$9871$CSxK@ g$C$17431$CSxK@ g$name$9984$CSxK@ '#t)))))) (library-letrec*-identity 'g$uninstall-library$9871$CSxK@))) (g$library-exists?$9872$CSxK@ g$library-exists?$10078$CSxK@ ((case-lambda ((g$C$17587$CSxK@) (g$C$17587$CSxK@ (case-lambda ((g$C$17434$CSxK@ g$name$9985$CSxK@) (g$find-library-by$9858$CSxK@ (case-lambda ((g$T$17435$CSxK@) (if g$T$17435$CSxK@ (g$C$17434$CSxK@ '#t) (g$C$17434$CSxK@ '#f)))) (case-lambda ((g$C$17432$CSxK@ g$x$9986$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17433$CSxK@) (equal? g$C$17432$CSxK@ g$V$17433$CSxK@ g$name$9985$CSxK@))) g$x$9986$CSxK@))))))))) (library-letrec*-identity 'g$library-exists?$9872$CSxK@))) (g$find-library-by-spec/die$9873$CSxK@ g$find-library-by-spec/die$10079$CSxK@ ((case-lambda ((g$C$17588$CSxK@) (g$C$17588$CSxK@ (case-lambda ((g$C$17441$CSxK@ g$spec$9987$CSxK@) (car (case-lambda ((g$V$17442$CSxK@) ((case-lambda ((g$C$17439$CSxK@ g$id$9988$CSxK@) (g$find-library-by$9858$CSxK@ (case-lambda ((g$V$17440$CSxK@) ((case-lambda ((g$C$17436$CSxK@ g$t$9989$CSxK@) (if g$t$9989$CSxK@ (g$C$17436$CSxK@ g$t$9989$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17436$CSxK@ '#f '"cannot find library with required spec" g$spec$9987$CSxK@)))) g$C$17439$CSxK@ g$V$17440$CSxK@))) (case-lambda ((g$C$17437$CSxK@ g$x$9990$CSxK@) (g$library-id$9828$CSxK@ (case-lambda ((g$V$17438$CSxK@) (eq? g$C$17437$CSxK@ g$id$9988$CSxK@ g$V$17438$CSxK@))) g$x$9990$CSxK@)))))) g$C$17441$CSxK@ g$V$17442$CSxK@))) g$spec$9987$CSxK@)))))) (library-letrec*-identity 'g$find-library-by-spec/die$9873$CSxK@))) (g$install-library-record$9874$CSxK@ g$install-library-record$10080$CSxK@ ((case-lambda ((g$C$17589$CSxK@) (g$C$17589$CSxK@ (case-lambda ((g$C$17464$CSxK@ g$lib$9991$CSxK@) (g$library-env$9835$CSxK@ (case-lambda ((g$V$17465$CSxK@) ((case-lambda ((g$C$17463$CSxK@ g$exp-env$9992$CSxK@) (g$for-each$6714$CSxK@ g$C$17463$CSxK@ (case-lambda ((g$C$17460$CSxK@ g$x$9993$CSxK@) (cdr (case-lambda ((g$V$17461$CSxK@) (car (case-lambda ((g$V$17462$CSxK@) ((case-lambda ((g$C$17457$CSxK@ g$label$9994$CSxK@ g$binding$9995$CSxK@) (car (case-lambda ((g$V$17458$CSxK@) ((case-lambda ((g$C$17444$CSxK@ g$t$9997$CSxK@) (eqv? (case-lambda ((g$T$17445$CSxK@) (if g$T$17445$CSxK@ (cdr (case-lambda ((g$V$17446$CSxK@) (cons (case-lambda ((g$V$17447$CSxK@) (cons g$C$17444$CSxK@ 'global g$V$17447$CSxK@))) g$lib$9991$CSxK@ g$V$17446$CSxK@))) g$binding$9995$CSxK@) (eqv? (case-lambda ((g$T$17448$CSxK@) (if g$T$17448$CSxK@ (cdr (case-lambda ((g$V$17449$CSxK@) (cons (case-lambda ((g$V$17450$CSxK@) (cons g$C$17444$CSxK@ 'global-macro g$V$17450$CSxK@))) g$lib$9991$CSxK@ g$V$17449$CSxK@))) g$binding$9995$CSxK@) (eqv? (case-lambda ((g$T$17451$CSxK@) (if g$T$17451$CSxK@ (cdr (case-lambda ((g$V$17452$CSxK@) (cons (case-lambda ((g$V$17453$CSxK@) (cons g$C$17444$CSxK@ 'global-macro! g$V$17453$CSxK@))) g$lib$9991$CSxK@ g$V$17452$CSxK@))) g$binding$9995$CSxK@) (eqv? (case-lambda ((g$T$17454$CSxK@) (if g$T$17454$CSxK@ (cdr (case-lambda ((g$V$17455$CSxK@) (cons (case-lambda ((g$V$17456$CSxK@) (cons g$C$17444$CSxK@ 'global-ctv g$V$17456$CSxK@))) g$lib$9991$CSxK@ g$V$17455$CSxK@))) g$binding$9995$CSxK@) (g$C$17444$CSxK@ g$binding$9995$CSxK@)))) g$t$9997$CSxK@ 'global-ctv)))) g$t$9997$CSxK@ 'global-macro!)))) g$t$9997$CSxK@ 'global-macro)))) g$t$9997$CSxK@ 'global))) (case-lambda ((g$V$17459$CSxK@) ((case-lambda ((g$C$17443$CSxK@ g$binding$9996$CSxK@) (g$set-label-binding!$9571$CSxK@ g$C$17443$CSxK@ g$label$9994$CSxK@ g$binding$9996$CSxK@))) g$C$17457$CSxK@ g$V$17459$CSxK@))) g$V$17458$CSxK@))) g$binding$9995$CSxK@))) g$C$17460$CSxK@ g$V$17462$CSxK@ g$V$17461$CSxK@))) g$x$9993$CSxK@))) g$x$9993$CSxK@))) g$exp-env$9992$CSxK@))) (case-lambda (g$IGNORE$17466$CSxK@ (g$current-library-collection$9820$CSxK@ (case-lambda ((g$V$17467$CSxK@) (g$V$17467$CSxK@ g$C$17464$CSxK@ g$lib$9991$CSxK@)))))) g$V$17465$CSxK@))) g$lib$9991$CSxK@)))))) (library-letrec*-identity 'g$install-library-record$9874$CSxK@))) (g$install-library$9875$CSxK@ g$install-library$10081$CSxK@ ((case-lambda ((g$C$17590$CSxK@) (g$C$17590$CSxK@ (case-lambda ((g$C$17481$CSxK@ g$id$9998$CSxK@ g$name$9999$CSxK@ g$ver$10000$CSxK@ g$imp*$10001$CSxK@ g$vis*$10002$CSxK@ g$inv*$10003$CSxK@ g$exp-subst$10004$CSxK@ g$exp-env$10005$CSxK@ g$visit-proc$10006$CSxK@ g$invoke-proc$10007$CSxK@ g$visit-code$10008$CSxK@ g$invoke-code$10009$CSxK@ g$visible?$10010$CSxK@ g$source-file-name$10011$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17482$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17483$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17484$CSxK@) ((case-lambda ((g$C$17469$CSxK@ g$imp-lib*$10012$CSxK@ g$vis-lib*$10013$CSxK@ g$inv-lib*$10014$CSxK@) ((case-lambda ((g$J$17475$CSxK@) ((case-lambda ((g$J$17478$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$17479$CSxK@) (if g$T$17479$CSxK@ (list? (case-lambda ((g$T$17480$CSxK@) (if g$T$17480$CSxK@ (list? g$J$17478$CSxK@ g$ver$10000$CSxK@) (g$J$17478$CSxK@ '#f)))) g$name$9999$CSxK@) (g$J$17478$CSxK@ '#f)))) g$id$9998$CSxK@))) (case-lambda ((g$V$17476$CSxK@) (not (case-lambda ((g$T$17477$CSxK@) (if g$T$17477$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17475$CSxK@ 'install-library '"invalid spec with id/name/ver" g$id$9998$CSxK@ g$name$9999$CSxK@ g$ver$10000$CSxK@) (void g$J$17475$CSxK@)))) g$V$17476$CSxK@)))))) (case-lambda (g$IGNORE$17470$CSxK@ ((case-lambda ((g$J$17473$CSxK@) (g$library-exists?$9872$CSxK@ (case-lambda ((g$T$17474$CSxK@) (if g$T$17474$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17473$CSxK@ 'install-library '"library is already installed" g$name$9999$CSxK@) (void g$J$17473$CSxK@)))) g$name$9999$CSxK@))) (case-lambda (g$IGNORE$17471$CSxK@ (g$make-library$9827$CSxK@ (case-lambda ((g$V$17472$CSxK@) ((case-lambda ((g$C$17468$CSxK@ g$lib$10015$CSxK@) (g$install-library-record$9874$CSxK@ g$C$17468$CSxK@ g$lib$10015$CSxK@))) g$C$17469$CSxK@ g$V$17472$CSxK@))) g$id$9998$CSxK@ g$name$9999$CSxK@ g$ver$10000$CSxK@ g$imp-lib*$10012$CSxK@ g$vis-lib*$10013$CSxK@ g$inv-lib*$10014$CSxK@ g$exp-subst$10004$CSxK@ g$exp-env$10005$CSxK@ g$visit-proc$10006$CSxK@ g$invoke-proc$10007$CSxK@ g$visit-code$10008$CSxK@ g$invoke-code$10009$CSxK@ g$visible?$10010$CSxK@ g$source-file-name$10011$CSxK@))))))))) g$C$17481$CSxK@ g$V$17484$CSxK@ g$V$17483$CSxK@ g$V$17482$CSxK@))) g$find-library-by-spec/die$9873$CSxK@ g$imp*$10001$CSxK@))) g$find-library-by-spec/die$9873$CSxK@ g$vis*$10002$CSxK@))) g$find-library-by-spec/die$9873$CSxK@ g$inv*$10003$CSxK@)))))) (library-letrec*-identity 'g$install-library$9875$CSxK@))) (g$imported-label->binding$9876$CSxK@ g$imported-label->binding$10082$CSxK@ ((case-lambda ((g$C$17591$CSxK@) (g$C$17591$CSxK@ (case-lambda ((g$C$17485$CSxK@ g$lab$10016$CSxK@) (g$label-binding$9572$CSxK@ g$C$17485$CSxK@ g$lab$10016$CSxK@)))))) (library-letrec*-identity 'g$imported-label->binding$9876$CSxK@))) (g$invoke-library$9877$CSxK@ g$invoke-library$10083$CSxK@ ((case-lambda ((g$C$17592$CSxK@) (g$C$17592$CSxK@ (case-lambda ((g$C$17495$CSxK@ g$lib$10017$CSxK@) (g$library-invoke-state$9837$CSxK@ (case-lambda ((g$V$17496$CSxK@) ((case-lambda ((g$C$17488$CSxK@ g$invoke$10018$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$17489$CSxK@) (if g$T$17489$CSxK@ (g$set-library-invoke-state!$9851$CSxK@ (case-lambda (g$IGNORE$17490$CSxK@ (g$library-inv*$9833$CSxK@ (case-lambda ((g$V$17491$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$17492$CSxK@ (g$set-library-invoke-state!$9851$CSxK@ (case-lambda (g$IGNORE$17493$CSxK@ (g$invoke$10018$CSxK@ (case-lambda (g$IGNORE$17494$CSxK@ (g$set-library-invoke-state!$9851$CSxK@ g$C$17488$CSxK@ g$lib$10017$CSxK@ '#t)))))) g$lib$10017$CSxK@ (case-lambda ((g$C$17487$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17487$CSxK@ 'invoke '"first invoke did not return" g$lib$10017$CSxK@)))))) g$invoke-library$9877$CSxK@ g$V$17491$CSxK@))) g$lib$10017$CSxK@))) g$lib$10017$CSxK@ (case-lambda ((g$C$17486$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17486$CSxK@ 'invoke '"circularity detected" g$lib$10017$CSxK@)))) (void g$C$17488$CSxK@)))) g$invoke$10018$CSxK@))) g$C$17495$CSxK@ g$V$17496$CSxK@))) g$lib$10017$CSxK@)))))) (library-letrec*-identity 'g$invoke-library$9877$CSxK@))) (g$visit-library$9878$CSxK@ g$visit-library$10084$CSxK@ ((case-lambda ((g$C$17593$CSxK@) (g$C$17593$CSxK@ (case-lambda ((g$C$17506$CSxK@ g$lib$10019$CSxK@) (g$library-visit-state$9836$CSxK@ (case-lambda ((g$V$17507$CSxK@) ((case-lambda ((g$C$17499$CSxK@ g$visit$10020$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$17500$CSxK@) (if g$T$17500$CSxK@ (g$set-library-visit-state!$9850$CSxK@ (case-lambda (g$IGNORE$17501$CSxK@ (g$library-vis*$9832$CSxK@ (case-lambda ((g$V$17502$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$17503$CSxK@ (g$set-library-visit-state!$9850$CSxK@ (case-lambda (g$IGNORE$17504$CSxK@ (g$visit$10020$CSxK@ (case-lambda (g$IGNORE$17505$CSxK@ (g$set-library-visit-state!$9850$CSxK@ g$C$17499$CSxK@ g$lib$10019$CSxK@ '#t)))))) g$lib$10019$CSxK@ (case-lambda ((g$C$17498$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17498$CSxK@ 'invoke '"first visit did not return" g$lib$10019$CSxK@)))))) g$invoke-library$9877$CSxK@ g$V$17502$CSxK@))) g$lib$10019$CSxK@))) g$lib$10019$CSxK@ (case-lambda ((g$C$17497$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17497$CSxK@ 'visit '"circularity detected" g$lib$10019$CSxK@)))) (void g$C$17499$CSxK@)))) g$visit$10020$CSxK@))) g$C$17506$CSxK@ g$V$17507$CSxK@))) g$lib$10019$CSxK@)))))) (library-letrec*-identity 'g$visit-library$9878$CSxK@))) (g$invoke-library-by-spec$9879$CSxK@ g$invoke-library-by-spec$10085$CSxK@ ((case-lambda ((g$C$17594$CSxK@) (g$C$17594$CSxK@ (case-lambda ((g$C$17508$CSxK@ g$spec$10021$CSxK@) (g$find-library-by-spec/die$9873$CSxK@ (case-lambda ((g$V$17509$CSxK@) (g$invoke-library$9877$CSxK@ g$C$17508$CSxK@ g$V$17509$CSxK@))) g$spec$10021$CSxK@)))))) (library-letrec*-identity 'g$invoke-library-by-spec$9879$CSxK@))) (g$installed-libraries$9880$CSxK@ g$installed-libraries$10086$CSxK@ ((case-lambda ((g$C$17595$CSxK@) (g$C$17595$CSxK@ (case-lambda ((g$C$17523$CSxK@ g$all?$10022$CSxK@) (g$current-library-collection$9820$CSxK@ (case-lambda ((g$V$17524$CSxK@) (g$V$17524$CSxK@ (case-lambda ((g$V$17525$CSxK@) ((case-lambda ((g$C$17522$CSxK@ g$f$10023$CSxK@) ((case-lambda ((g$C$17511$CSxK@ g$f$17510$CSxK@) (begin (set! g$f$10023$CSxK@ g$f$17510$CSxK@) (g$C$17511$CSxK@ g$f$10023$CSxK@)))) g$C$17522$CSxK@ (case-lambda ((g$C$17514$CSxK@ g$ls$10024$CSxK@) (null? (case-lambda ((g$T$17515$CSxK@) (if g$T$17515$CSxK@ (g$C$17514$CSxK@ '()) ((case-lambda ((g$C$17512$CSxK@ g$t$10025$CSxK@) (if g$t$10025$CSxK@ (g$C$17512$CSxK@ g$t$10025$CSxK@) (car (case-lambda ((g$V$17513$CSxK@) (g$library-visible?$9840$CSxK@ g$C$17512$CSxK@ g$V$17513$CSxK@))) g$ls$10024$CSxK@)))) (case-lambda ((g$T$17516$CSxK@) (if g$T$17516$CSxK@ (cdr (case-lambda ((g$V$17517$CSxK@) (g$f$10023$CSxK@ (case-lambda ((g$V$17518$CSxK@) (car (case-lambda ((g$V$17519$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17520$CSxK@) (cons g$C$17514$CSxK@ g$V$17520$CSxK@ g$V$17518$CSxK@))) g$V$17519$CSxK@))) g$ls$10024$CSxK@))) g$V$17517$CSxK@))) g$ls$10024$CSxK@) (cdr (case-lambda ((g$V$17521$CSxK@) (g$f$10023$CSxK@ g$C$17514$CSxK@ g$V$17521$CSxK@))) g$ls$10024$CSxK@)))) g$all?$10022$CSxK@)))) g$ls$10024$CSxK@)))))) (case-lambda ((g$V$17526$CSxK@) (g$V$17526$CSxK@ g$C$17523$CSxK@ g$V$17525$CSxK@))) uninitialized)))))))) ((g$C$17523$CSxK@) (g$installed-libraries$9880$CSxK@ g$C$17523$CSxK@ '#f)))))) (library-letrec*-identity 'g$installed-libraries$9880$CSxK@))) (g$library-spec$9881$CSxK@ g$library-spec$10087$CSxK@ ((case-lambda ((g$C$17596$CSxK@) (g$C$17596$CSxK@ (case-lambda ((g$C$17527$CSxK@ g$x$10026$CSxK@) ((case-lambda ((g$J$17532$CSxK@) (g$library?$9826$CSxK@ (case-lambda ((g$V$17533$CSxK@) (not (case-lambda ((g$T$17534$CSxK@) (if g$T$17534$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17532$CSxK@ 'library-spec '"not a library" g$x$10026$CSxK@) (void g$J$17532$CSxK@)))) g$V$17533$CSxK@))) g$x$10026$CSxK@))) (case-lambda (g$IGNORE$17528$CSxK@ (g$library-version$9830$CSxK@ (case-lambda ((g$V$17529$CSxK@) (g$library-name$9829$CSxK@ (case-lambda ((g$V$17530$CSxK@) (g$library-id$9828$CSxK@ (case-lambda ((g$V$17531$CSxK@) (list g$C$17527$CSxK@ g$V$17531$CSxK@ g$V$17530$CSxK@ g$V$17529$CSxK@))) g$x$10026$CSxK@))) g$x$10026$CSxK@))) g$x$10026$CSxK@))))))))) (library-letrec*-identity 'g$library-spec$9881$CSxK@)))) (void identity-for-cps))(library-letrec* (psyntax builders) ((g$build-global-define$10088$CSxK@ g$build-global-define$10268$CSxK@ ((case-lambda ((g$C$17631$CSxK@) (g$C$17631$CSxK@ (case-lambda ((g$C$17597$CSxK@ g$x$10236$CSxK@) (g$build-void$10232$CSxK@ g$C$17597$CSxK@)))))) (library-letrec*-identity 'g$build-global-define$10088$CSxK@))) (g$build-lambda$10178$CSxK@ g$build-lambda$10269$CSxK@ ((case-lambda ((g$C$17632$CSxK@) (g$C$17632$CSxK@ (case-lambda ((g$C$17598$CSxK@ g$ae$10237$CSxK@ g$vars$10238$CSxK@ g$exp$10239$CSxK@) (list (case-lambda ((g$V$17599$CSxK@) (list g$C$17598$CSxK@ 'case-lambda g$V$17599$CSxK@))) g$vars$10238$CSxK@ g$exp$10239$CSxK@)))))) (library-letrec*-identity 'g$build-lambda$10178$CSxK@))) (g$build-case-lambda$10179$CSxK@ g$build-case-lambda$10270$CSxK@ ((case-lambda ((g$C$17633$CSxK@) (g$C$17633$CSxK@ (case-lambda ((g$C$17600$CSxK@ g$ae$10240$CSxK@ g$vars*$10241$CSxK@ g$exp*$10242$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17601$CSxK@) (cons g$C$17600$CSxK@ 'case-lambda g$V$17601$CSxK@))) list g$vars*$10241$CSxK@ g$exp*$10242$CSxK@)))))) (library-letrec*-identity 'g$build-case-lambda$10179$CSxK@))) (g$build-let$10180$CSxK@ g$build-let$10271$CSxK@ ((case-lambda ((g$C$17634$CSxK@) (g$C$17634$CSxK@ (case-lambda ((g$C$17602$CSxK@ g$ae$10243$CSxK@ g$lhs*$10244$CSxK@ g$rhs*$10245$CSxK@ g$body$10246$CSxK@) (g$build-lambda$10178$CSxK@ (case-lambda ((g$V$17603$CSxK@) (cons g$C$17602$CSxK@ g$V$17603$CSxK@ g$rhs*$10245$CSxK@))) g$ae$10243$CSxK@ g$lhs*$10244$CSxK@ g$body$10246$CSxK@)))))) (library-letrec*-identity 'g$build-let$10180$CSxK@))) (g$build-sequence$10231$CSxK@ g$build-sequence$10272$CSxK@ ((case-lambda ((g$C$17635$CSxK@) (g$C$17635$CSxK@ (case-lambda ((g$C$17614$CSxK@ g$ae$10247$CSxK@ g$exps$10248$CSxK@) ((case-lambda ((g$C$17613$CSxK@ g$loop$10249$CSxK@) ((case-lambda ((g$C$17605$CSxK@ g$loop$17604$CSxK@) (begin (set! g$loop$10249$CSxK@ g$loop$17604$CSxK@) (g$C$17605$CSxK@ g$loop$10249$CSxK@)))) g$C$17613$CSxK@ (case-lambda ((g$C$17606$CSxK@ g$exps$10250$CSxK@) (cdr (case-lambda ((g$V$17607$CSxK@) (null? (case-lambda ((g$T$17608$CSxK@) (if g$T$17608$CSxK@ (car g$C$17606$CSxK@ g$exps$10250$CSxK@) (g$build-void$10232$CSxK@ (case-lambda ((g$V$17609$CSxK@) (car (case-lambda ((g$V$17610$CSxK@) (equal? (case-lambda ((g$T$17611$CSxK@) (if g$T$17611$CSxK@ (cdr (case-lambda ((g$V$17612$CSxK@) (g$loop$10249$CSxK@ g$C$17606$CSxK@ g$V$17612$CSxK@))) g$exps$10250$CSxK@) (cons g$C$17606$CSxK@ 'begin g$exps$10250$CSxK@)))) g$V$17610$CSxK@ g$V$17609$CSxK@))) g$exps$10250$CSxK@))))))) g$V$17607$CSxK@))) g$exps$10250$CSxK@)))))) (case-lambda ((g$V$17615$CSxK@) (g$V$17615$CSxK@ g$C$17614$CSxK@ g$exps$10248$CSxK@))) uninitialized)))))) (library-letrec*-identity 'g$build-sequence$10231$CSxK@))) (g$build-void$10232$CSxK@ g$build-void$10273$CSxK@ ((case-lambda ((g$C$17636$CSxK@) (g$C$17636$CSxK@ (case-lambda ((g$C$17616$CSxK@) (g$C$17616$CSxK@ '((primitive void)))))))) (library-letrec*-identity 'g$build-void$10232$CSxK@))) (g$build-letrec$10233$CSxK@ g$build-letrec$10274$CSxK@ ((case-lambda ((g$C$17637$CSxK@) (g$C$17637$CSxK@ (case-lambda ((g$C$17617$CSxK@ g$ae$10251$CSxK@ g$vars$10252$CSxK@ g$val-exps$10253$CSxK@ g$body-exp$10254$CSxK@) (null? (case-lambda ((g$T$17618$CSxK@) (if g$T$17618$CSxK@ (g$C$17617$CSxK@ g$body-exp$10254$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17619$CSxK@) (list g$C$17617$CSxK@ 'letrec g$V$17619$CSxK@ g$body-exp$10254$CSxK@))) list g$vars$10252$CSxK@ g$val-exps$10253$CSxK@)))) g$vars$10252$CSxK@)))))) (library-letrec*-identity 'g$build-letrec$10233$CSxK@))) (g$build-letrec*$10234$CSxK@ g$build-letrec*$10275$CSxK@ ((case-lambda ((g$C$17638$CSxK@) (g$C$17638$CSxK@ (case-lambda ((g$C$17622$CSxK@ g$ae$10255$CSxK@ g$vars$10256$CSxK@ g$val-exps$10257$CSxK@ g$body-exp$10258$CSxK@) (null? (case-lambda ((g$T$17623$CSxK@) (if g$T$17623$CSxK@ (g$C$17622$CSxK@ g$body-exp$10258$CSxK@) (list (case-lambda ((g$V$17624$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17625$CSxK@) (append (case-lambda ((g$V$17626$CSxK@) (g$build-sequence$10231$CSxK@ (case-lambda ((g$V$17627$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17628$CSxK@) (g$build-let$10180$CSxK@ g$C$17622$CSxK@ g$ae$10255$CSxK@ g$vars$10256$CSxK@ g$V$17628$CSxK@ g$V$17627$CSxK@))) (case-lambda ((g$C$17620$CSxK@ g$x$10259$CSxK@) (g$C$17620$CSxK@ 'uninitialized))) g$vars$10256$CSxK@))) g$ae$10255$CSxK@ g$V$17626$CSxK@))) g$V$17625$CSxK@ g$V$17624$CSxK@))) (case-lambda ((g$C$17621$CSxK@ g$lhs$10260$CSxK@ g$rhs$10261$CSxK@) (list g$C$17621$CSxK@ 'set! g$lhs$10260$CSxK@ g$rhs$10261$CSxK@))) g$vars$10256$CSxK@ g$val-exps$10257$CSxK@))) g$body-exp$10258$CSxK@)))) g$vars$10256$CSxK@)))))) (library-letrec*-identity 'g$build-letrec*$10234$CSxK@))) (g$build-library-letrec*$10235$CSxK@ g$build-library-letrec*$10276$CSxK@ ((case-lambda ((g$C$17639$CSxK@) (g$C$17639$CSxK@ (case-lambda ((g$C$17629$CSxK@ g$ae$10262$CSxK@ g$name$10263$CSxK@ g$vars$10264$CSxK@ g$locs$10265$CSxK@ g$val-exps$10266$CSxK@ g$body-exp$10267$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17630$CSxK@) (list g$C$17629$CSxK@ 'library-letrec* g$name$10263$CSxK@ g$V$17630$CSxK@ g$body-exp$10267$CSxK@))) list g$vars$10264$CSxK@ g$locs$10265$CSxK@ g$val-exps$10266$CSxK@)))))) (library-letrec*-identity 'g$build-library-letrec*$10235$CSxK@)))) (void identity-for-cps))(library-letrec* (psyntax expander) ((g$set-cons$10277$CSxK@ g$set-cons$14100$CSxK@ ((case-lambda ((g$C$22625$CSxK@) (g$C$22625$CSxK@ (case-lambda ((g$C$17640$CSxK@ g$x$10837$CSxK@ g$ls$10838$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$17641$CSxK@) (if g$T$17641$CSxK@ (g$C$17640$CSxK@ g$ls$10838$CSxK@) (cons g$C$17640$CSxK@ g$x$10837$CSxK@ g$ls$10838$CSxK@)))) g$x$10837$CSxK@ g$ls$10838$CSxK@)))))) (library-letrec*-identity 'g$set-cons$10277$CSxK@))) (g$set-union$10278$CSxK@ g$set-union$14101$CSxK@ ((case-lambda ((g$C$22626$CSxK@) (g$C$22626$CSxK@ (case-lambda ((g$C$17642$CSxK@ g$ls1$10839$CSxK@ g$ls2$10840$CSxK@) (null? (case-lambda ((g$T$17643$CSxK@) (if g$T$17643$CSxK@ (g$C$17642$CSxK@ g$ls2$10840$CSxK@) (car (case-lambda ((g$V$17644$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$17645$CSxK@) (if g$T$17645$CSxK@ (cdr (case-lambda ((g$V$17646$CSxK@) (g$set-union$10278$CSxK@ g$C$17642$CSxK@ g$V$17646$CSxK@ g$ls2$10840$CSxK@))) g$ls1$10839$CSxK@) (cdr (case-lambda ((g$V$17647$CSxK@) (g$set-union$10278$CSxK@ (case-lambda ((g$V$17648$CSxK@) (car (case-lambda ((g$V$17649$CSxK@) (cons g$C$17642$CSxK@ g$V$17649$CSxK@ g$V$17648$CSxK@))) g$ls1$10839$CSxK@))) g$V$17647$CSxK@ g$ls2$10840$CSxK@))) g$ls1$10839$CSxK@)))) g$V$17644$CSxK@ g$ls2$10840$CSxK@))) g$ls1$10839$CSxK@)))) g$ls1$10839$CSxK@)))))) (library-letrec*-identity 'g$set-union$10278$CSxK@))) (g$top-mark*$10280$CSxK@ g$top-mark*$14102$CSxK@ ((case-lambda ((g$C$22627$CSxK@) (g$C$22627$CSxK@ '(top)))) (library-letrec*-identity 'g$top-mark*$10280$CSxK@))) (g$top-marked?$10281$CSxK@ g$top-marked?$14103$CSxK@ ((case-lambda ((g$C$22628$CSxK@) (g$C$22628$CSxK@ (case-lambda ((g$C$17650$CSxK@ g$m*$10841$CSxK@) (g$memq$6705$CSxK@ g$C$17650$CSxK@ 'top g$m*$10841$CSxK@)))))) (library-letrec*-identity 'g$top-marked?$10281$CSxK@))) (g$gen-lexical$10282$CSxK@ g$gen-lexical$14104$CSxK@ ((case-lambda ((g$C$22629$CSxK@) (g$C$22629$CSxK@ (case-lambda ((g$C$17651$CSxK@ g$sym$10842$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$17652$CSxK@) (if g$T$17652$CSxK@ (gensym g$C$17651$CSxK@ g$sym$10842$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$17653$CSxK@) (if g$T$17653$CSxK@ (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17654$CSxK@) (g$gen-lexical$10282$CSxK@ g$C$17651$CSxK@ g$V$17654$CSxK@))) g$sym$10842$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17651$CSxK@ 'gen-lexical '"BUG: invalid arg" g$sym$10842$CSxK@)))) g$sym$10842$CSxK@)))) g$sym$10842$CSxK@)))))) (library-letrec*-identity 'g$gen-lexical$10282$CSxK@))) (g$gen-global$10283$CSxK@ g$gen-global$14105$CSxK@ ((case-lambda ((g$C$22630$CSxK@) (g$C$22630$CSxK@ (case-lambda ((g$C$17655$CSxK@ g$x$10843$CSxK@) (g$gen-lexical$10282$CSxK@ g$C$17655$CSxK@ g$x$10843$CSxK@)))))) (library-letrec*-identity 'g$gen-global$10283$CSxK@))) (g$gen-label$10284$CSxK@ g$gen-label$14106$CSxK@ ((case-lambda ((g$C$22631$CSxK@) (g$C$22631$CSxK@ (case-lambda ((g$C$17656$CSxK@ g$_$10844$CSxK@) (gensym g$C$17656$CSxK@)))))) (library-letrec*-identity 'g$gen-label$10284$CSxK@))) (g$gen-top-level-label$10285$CSxK@ g$gen-top-level-label$14107$CSxK@ ((case-lambda ((g$C$22632$CSxK@) (g$C$22632$CSxK@ (case-lambda ((g$C$17682$CSxK@ g$id$10845$CSxK@ g$rib$10846$CSxK@) ((case-lambda ((g$C$17679$CSxK@ g$find$10847$CSxK@) (begin (set! g$find$10847$CSxK@ (case-lambda ((g$C$17657$CSxK@ g$sym$10853$CSxK@ g$mark*$10854$CSxK@ g$sym*$10855$CSxK@ g$mark**$10856$CSxK@ g$label*$10857$CSxK@) (pair? (case-lambda ((g$T$17658$CSxK@) (if g$T$17658$CSxK@ ((case-lambda ((g$J$17663$CSxK@) (car (case-lambda ((g$V$17664$CSxK@) (eq? (case-lambda ((g$T$17665$CSxK@) (if g$T$17665$CSxK@ (car (case-lambda ((g$V$17666$CSxK@) (g$same-marks?$10349$CSxK@ g$J$17663$CSxK@ g$mark*$10854$CSxK@ g$V$17666$CSxK@))) g$mark**$10856$CSxK@) (g$J$17663$CSxK@ '#f)))) g$sym$10853$CSxK@ g$V$17664$CSxK@))) g$sym*$10855$CSxK@))) (case-lambda ((g$T$17659$CSxK@) (if g$T$17659$CSxK@ (car g$C$17657$CSxK@ g$label*$10857$CSxK@) (cdr (case-lambda ((g$V$17660$CSxK@) (cdr (case-lambda ((g$V$17661$CSxK@) (cdr (case-lambda ((g$V$17662$CSxK@) (g$find$10847$CSxK@ g$C$17657$CSxK@ g$sym$10853$CSxK@ g$mark*$10854$CSxK@ g$V$17662$CSxK@ g$V$17661$CSxK@ g$V$17660$CSxK@))) g$sym*$10855$CSxK@))) g$mark**$10856$CSxK@))) g$label*$10857$CSxK@))))) (g$C$17657$CSxK@ '#f)))) g$sym*$10855$CSxK@)))) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17680$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17681$CSxK@) ((case-lambda ((g$C$17677$CSxK@ g$sym$10848$CSxK@ g$mark*$10849$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$17678$CSxK@) ((case-lambda ((g$C$17670$CSxK@ g$sym*$10850$CSxK@) ((case-lambda ((g$J$17672$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$17673$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$17674$CSxK@) (if g$T$17674$CSxK@ (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$17675$CSxK@) (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$17676$CSxK@) (g$find$10847$CSxK@ g$J$17672$CSxK@ g$sym$10848$CSxK@ g$mark*$10849$CSxK@ g$sym*$10850$CSxK@ g$V$17676$CSxK@ g$V$17675$CSxK@))) g$rib$10846$CSxK@))) g$rib$10846$CSxK@) (g$J$17672$CSxK@ '#f)))) g$sym$10848$CSxK@ g$V$17673$CSxK@))) g$rib$10846$CSxK@))) (case-lambda ((g$V$17671$CSxK@) ((case-lambda ((g$C$17669$CSxK@ g$t$10851$CSxK@) (if g$t$10851$CSxK@ ((case-lambda ((g$C$17667$CSxK@ g$label$10852$CSxK@) (g$imported-label->binding$10082$CSxK@ (case-lambda ((g$T$17668$CSxK@) (if g$T$17668$CSxK@ (gensym g$C$17667$CSxK@) (g$C$17667$CSxK@ g$label$10852$CSxK@)))) g$label$10852$CSxK@))) g$C$17669$CSxK@ g$t$10851$CSxK@) (gensym g$C$17669$CSxK@)))) g$C$17670$CSxK@ g$V$17671$CSxK@)))))) g$C$17677$CSxK@ g$V$17678$CSxK@))) g$rib$10846$CSxK@))) g$C$17679$CSxK@ g$V$17681$CSxK@ g$V$17680$CSxK@))) g$id$10845$CSxK@))) g$id$10845$CSxK@)))) g$C$17682$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$gen-top-level-label$10285$CSxK@))) (g$gen-define-label+loc$10286$CSxK@ g$gen-define-label+loc$14108$CSxK@ ((case-lambda ((g$C$22633$CSxK@) (g$C$22633$CSxK@ (case-lambda ((g$C$17695$CSxK@ g$id$10858$CSxK@ g$rib$10859$CSxK@ g$sd?$10860$CSxK@) (if g$sd?$10860$CSxK@ (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$17696$CSxK@) (gensym (case-lambda ((g$V$17697$CSxK@) (values g$C$17695$CSxK@ g$V$17697$CSxK@ g$V$17696$CSxK@)))))) g$id$10858$CSxK@) (g$top-level-context$10836$CSxK@ (case-lambda ((g$V$17698$CSxK@) ((case-lambda ((g$C$17692$CSxK@ g$env$10861$CSxK@) (g$interaction-env-locs$10796$CSxK@ (case-lambda ((g$V$17693$CSxK@) (g$gen-top-level-label$10285$CSxK@ (case-lambda ((g$V$17694$CSxK@) ((case-lambda ((g$C$17689$CSxK@ g$label$10862$CSxK@ g$locs$10863$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$17690$CSxK@) ((case-lambda ((g$C$17687$CSxK@ g$t$10864$CSxK@) (if g$t$10864$CSxK@ (cdr g$C$17687$CSxK@ g$t$10864$CSxK@) (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$17688$CSxK@) ((case-lambda ((g$C$17683$CSxK@ g$loc$10865$CSxK@) (cons (case-lambda ((g$V$17684$CSxK@) (cons (case-lambda ((g$V$17685$CSxK@) (g$set-interaction-env-locs!$10799$CSxK@ (case-lambda (g$IGNORE$17686$CSxK@ (g$C$17683$CSxK@ g$loc$10865$CSxK@))) g$env$10861$CSxK@ g$V$17685$CSxK@))) g$V$17684$CSxK@ g$locs$10863$CSxK@))) g$label$10862$CSxK@ g$loc$10865$CSxK@))) g$C$17687$CSxK@ g$V$17688$CSxK@))) g$id$10858$CSxK@)))) (case-lambda ((g$V$17691$CSxK@) (values g$C$17689$CSxK@ g$label$10862$CSxK@ g$V$17691$CSxK@))) g$V$17690$CSxK@))) g$label$10862$CSxK@ g$locs$10863$CSxK@))) g$C$17692$CSxK@ g$V$17694$CSxK@ g$V$17693$CSxK@))) g$id$10858$CSxK@ g$rib$10859$CSxK@))) g$env$10861$CSxK@))) g$C$17695$CSxK@ g$V$17698$CSxK@)))))))))) (library-letrec*-identity 'g$gen-define-label+loc$10286$CSxK@))) (g$gen-define-label$10287$CSxK@ g$gen-define-label$14109$CSxK@ ((case-lambda ((g$C$22634$CSxK@) (g$C$22634$CSxK@ (case-lambda ((g$C$17699$CSxK@ g$id$10866$CSxK@ g$rib$10867$CSxK@ g$sd?$10868$CSxK@) (if g$sd?$10868$CSxK@ (gensym g$C$17699$CSxK@) (g$gen-top-level-label$10285$CSxK@ g$C$17699$CSxK@ g$id$10866$CSxK@ g$rib$10867$CSxK@))))))) (library-letrec*-identity 'g$gen-define-label$10287$CSxK@))) (g$8158$10288$CSxK@ g$8158$14110$CSxK@ ((case-lambda ((g$C$22635$CSxK@) (make-record-type-descriptor g$C$22635$CSxK@ 'rib '#f 'g$8161$CSxK@ '#t '#t '#((mutable sym*) (mutable mark**) (mutable label*) (mutable sealed/freq) (mutable cache))))) (library-letrec*-identity 'g$8158$10288$CSxK@))) (g$8160$10289$CSxK@ g$8160$14111$CSxK@ ((case-lambda ((g$C$22636$CSxK@) (g$C$22636$CSxK@ '#f))) (library-letrec*-identity 'g$8160$10289$CSxK@))) (g$8159$10290$CSxK@ g$8159$14112$CSxK@ ((case-lambda ((g$C$22637$CSxK@) (make-record-constructor-descriptor g$C$22637$CSxK@ g$8158$10288$CSxK@ '#f g$8160$10289$CSxK@))) (library-letrec*-identity 'g$8159$10290$CSxK@))) (g$rib?$10293$CSxK@ g$rib?$14113$CSxK@ ((case-lambda ((g$C$22638$CSxK@) (record-predicate g$C$22638$CSxK@ g$8158$10288$CSxK@))) (library-letrec*-identity 'g$rib?$10293$CSxK@))) (g$make-rib$10294$CSxK@ g$make-rib$14114$CSxK@ ((case-lambda ((g$C$22639$CSxK@) (record-constructor g$C$22639$CSxK@ g$8159$10290$CSxK@))) (library-letrec*-identity 'g$make-rib$10294$CSxK@))) (g$rib-sym*$10295$CSxK@ g$rib-sym*$14115$CSxK@ ((case-lambda ((g$C$22640$CSxK@) (record-accessor g$C$22640$CSxK@ g$8158$10288$CSxK@ '0))) (library-letrec*-identity 'g$rib-sym*$10295$CSxK@))) (g$rib-mark**$10296$CSxK@ g$rib-mark**$14116$CSxK@ ((case-lambda ((g$C$22641$CSxK@) (record-accessor g$C$22641$CSxK@ g$8158$10288$CSxK@ '1))) (library-letrec*-identity 'g$rib-mark**$10296$CSxK@))) (g$rib-label*$10297$CSxK@ g$rib-label*$14117$CSxK@ ((case-lambda ((g$C$22642$CSxK@) (record-accessor g$C$22642$CSxK@ g$8158$10288$CSxK@ '2))) (library-letrec*-identity 'g$rib-label*$10297$CSxK@))) (g$rib-sealed/freq$10298$CSxK@ g$rib-sealed/freq$14118$CSxK@ ((case-lambda ((g$C$22643$CSxK@) (record-accessor g$C$22643$CSxK@ g$8158$10288$CSxK@ '3))) (library-letrec*-identity 'g$rib-sealed/freq$10298$CSxK@))) (g$rib-cache$10299$CSxK@ g$rib-cache$14119$CSxK@ ((case-lambda ((g$C$22644$CSxK@) (record-accessor g$C$22644$CSxK@ g$8158$10288$CSxK@ '4))) (library-letrec*-identity 'g$rib-cache$10299$CSxK@))) (g$set-rib-sym*!$10300$CSxK@ g$set-rib-sym*!$14120$CSxK@ ((case-lambda ((g$C$22645$CSxK@) (record-mutator g$C$22645$CSxK@ g$8158$10288$CSxK@ '0))) (library-letrec*-identity 'g$set-rib-sym*!$10300$CSxK@))) (g$set-rib-mark**!$10301$CSxK@ g$set-rib-mark**!$14121$CSxK@ ((case-lambda ((g$C$22646$CSxK@) (record-mutator g$C$22646$CSxK@ g$8158$10288$CSxK@ '1))) (library-letrec*-identity 'g$set-rib-mark**!$10301$CSxK@))) (g$set-rib-label*!$10302$CSxK@ g$set-rib-label*!$14122$CSxK@ ((case-lambda ((g$C$22647$CSxK@) (record-mutator g$C$22647$CSxK@ g$8158$10288$CSxK@ '2))) (library-letrec*-identity 'g$set-rib-label*!$10302$CSxK@))) (g$set-rib-sealed/freq!$10303$CSxK@ g$set-rib-sealed/freq!$14123$CSxK@ ((case-lambda ((g$C$22648$CSxK@) (record-mutator g$C$22648$CSxK@ g$8158$10288$CSxK@ '3))) (library-letrec*-identity 'g$set-rib-sealed/freq!$10303$CSxK@))) (g$set-rib-cache!$10304$CSxK@ g$set-rib-cache!$14124$CSxK@ ((case-lambda ((g$C$22649$CSxK@) (record-mutator g$C$22649$CSxK@ g$8158$10288$CSxK@ '4))) (library-letrec*-identity 'g$set-rib-cache!$10304$CSxK@))) (g$make-empty-rib$10305$CSxK@ g$make-empty-rib$14125$CSxK@ ((case-lambda ((g$C$22650$CSxK@) (g$C$22650$CSxK@ (case-lambda ((g$C$17700$CSxK@) (g$make-rib$10294$CSxK@ g$C$17700$CSxK@ '() '() '() '#f '#f)))))) (library-letrec*-identity 'g$make-empty-rib$10305$CSxK@))) (g$make-cache-rib$10306$CSxK@ g$make-cache-rib$14126$CSxK@ ((case-lambda ((g$C$22651$CSxK@) (g$C$22651$CSxK@ (case-lambda ((g$C$17701$CSxK@) (g$make-eq-hashtable$7483$CSxK@ (case-lambda ((g$V$17702$CSxK@) (g$make-rib$10294$CSxK@ g$C$17701$CSxK@ '() '() '() '#f g$V$17702$CSxK@))))))))) (library-letrec*-identity 'g$make-cache-rib$10306$CSxK@))) (g$find-label$10307$CSxK@ g$find-label$14127$CSxK@ ((case-lambda ((g$C$22652$CSxK@) (g$C$22652$CSxK@ (case-lambda ((g$C$17710$CSxK@ g$rib$10869$CSxK@ g$sym$10870$CSxK@ g$mark*$10871$CSxK@) (g$rib-cache$10299$CSxK@ (case-lambda ((g$V$17711$CSxK@) ((case-lambda ((g$C$17708$CSxK@ g$ht$10872$CSxK@) (if g$ht$10872$CSxK@ (g$hashtable-ref$7486$CSxK@ (case-lambda ((g$V$17709$CSxK@) ((case-lambda ((g$C$17705$CSxK@ g$cv$10873$CSxK@) ((case-lambda ((g$J$17707$CSxK@) (if g$cv$10873$CSxK@ (g$assp$6704$CSxK@ g$J$17707$CSxK@ (case-lambda ((g$C$17704$CSxK@ g$m$10875$CSxK@) (g$same-marks?$10349$CSxK@ g$C$17704$CSxK@ g$mark*$10871$CSxK@ g$m$10875$CSxK@))) g$cv$10873$CSxK@) (g$J$17707$CSxK@ '#f)))) (case-lambda ((g$V$17706$CSxK@) ((case-lambda ((g$C$17703$CSxK@ g$t$10874$CSxK@) (if g$t$10874$CSxK@ (cdr g$C$17703$CSxK@ g$t$10874$CSxK@) (g$C$17703$CSxK@ '#f)))) g$C$17705$CSxK@ g$V$17706$CSxK@)))))) g$C$17708$CSxK@ g$V$17709$CSxK@))) g$ht$10872$CSxK@ g$sym$10870$CSxK@ '#f) (g$C$17708$CSxK@ '#f)))) g$C$17710$CSxK@ g$V$17711$CSxK@))) g$rib$10869$CSxK@)))))) (library-letrec*-identity 'g$find-label$10307$CSxK@))) (g$extend-rib!$10308$CSxK@ g$extend-rib!$14128$CSxK@ ((case-lambda ((g$C$22653$CSxK@) (g$C$22653$CSxK@ (case-lambda ((g$C$17761$CSxK@ g$rib$10876$CSxK@ g$id$10877$CSxK@ g$label$10878$CSxK@ g$sd?$10879$CSxK@) ((case-lambda ((g$C$17755$CSxK@ g$find$10880$CSxK@) (begin (set! g$find$10880$CSxK@ (case-lambda ((g$C$17712$CSxK@ g$sym$10889$CSxK@ g$mark*$10890$CSxK@ g$sym*$10891$CSxK@ g$mark**$10892$CSxK@ g$label*$10893$CSxK@) (pair? (case-lambda ((g$T$17713$CSxK@) (if g$T$17713$CSxK@ ((case-lambda ((g$J$17718$CSxK@) (car (case-lambda ((g$V$17719$CSxK@) (eq? (case-lambda ((g$T$17720$CSxK@) (if g$T$17720$CSxK@ (car (case-lambda ((g$V$17721$CSxK@) (g$same-marks?$10349$CSxK@ g$J$17718$CSxK@ g$mark*$10890$CSxK@ g$V$17721$CSxK@))) g$mark**$10892$CSxK@) (g$J$17718$CSxK@ '#f)))) g$sym$10889$CSxK@ g$V$17719$CSxK@))) g$sym*$10891$CSxK@))) (case-lambda ((g$T$17714$CSxK@) (if g$T$17714$CSxK@ (g$C$17712$CSxK@ g$label*$10893$CSxK@) (cdr (case-lambda ((g$V$17715$CSxK@) (cdr (case-lambda ((g$V$17716$CSxK@) (cdr (case-lambda ((g$V$17717$CSxK@) (g$find$10880$CSxK@ g$C$17712$CSxK@ g$sym$10889$CSxK@ g$mark*$10890$CSxK@ g$V$17717$CSxK@ g$V$17716$CSxK@ g$V$17715$CSxK@))) g$sym*$10891$CSxK@))) g$mark**$10892$CSxK@))) g$label*$10893$CSxK@))))) (g$C$17712$CSxK@ '#f)))) g$sym*$10891$CSxK@)))) ((case-lambda ((g$J$17759$CSxK@) (g$rib-sealed/freq$10298$CSxK@ (case-lambda ((g$T$17760$CSxK@) (if g$T$17760$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$17759$CSxK@ 'extend-rib! '"BUG: rib is sealed" g$rib$10876$CSxK@) (void g$J$17759$CSxK@)))) g$rib$10876$CSxK@))) (case-lambda (g$IGNORE$17756$CSxK@ (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17757$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17758$CSxK@) ((case-lambda ((g$C$17753$CSxK@ g$sym$10881$CSxK@ g$mark*$10882$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$17754$CSxK@) ((case-lambda ((g$C$17751$CSxK@ g$sym*$10883$CSxK@) (g$find-label$10307$CSxK@ (case-lambda ((g$V$17752$CSxK@) ((case-lambda ((g$C$17744$CSxK@ g$t$10884$CSxK@) (if g$t$10884$CSxK@ ((case-lambda ((g$C$17722$CSxK@ g$p$10885$CSxK@) (eq? (case-lambda ((g$V$17723$CSxK@) (not (case-lambda ((g$T$17724$CSxK@) (if g$T$17724$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$17722$CSxK@ '#f '"multiple definitions of identifier" g$id$10877$CSxK@) (void g$C$17722$CSxK@)))) g$V$17723$CSxK@))) g$label$10878$CSxK@ g$p$10885$CSxK@))) g$C$17744$CSxK@ g$t$10884$CSxK@) ((case-lambda ((g$J$17746$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$17747$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$17748$CSxK@) (if g$T$17748$CSxK@ (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$17749$CSxK@) (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$17750$CSxK@) (g$find$10880$CSxK@ g$J$17746$CSxK@ g$sym$10881$CSxK@ g$mark*$10882$CSxK@ g$sym*$10883$CSxK@ g$V$17750$CSxK@ g$V$17749$CSxK@))) g$rib$10876$CSxK@))) g$rib$10876$CSxK@) (g$J$17746$CSxK@ '#f)))) g$sym$10881$CSxK@ g$V$17747$CSxK@))) g$rib$10876$CSxK@))) (case-lambda ((g$V$17745$CSxK@) ((case-lambda ((g$C$17732$CSxK@ g$t$10886$CSxK@) (if g$t$10886$CSxK@ ((case-lambda ((g$C$17725$CSxK@ g$p$10887$CSxK@) (car (case-lambda ((g$V$17726$CSxK@) (eq? (case-lambda ((g$V$17727$CSxK@) (not (case-lambda ((g$T$17728$CSxK@) (if g$T$17728$CSxK@ (not (case-lambda ((g$T$17729$CSxK@) (if g$T$17729$CSxK@ (set-car! g$C$17725$CSxK@ g$p$10887$CSxK@ g$label$10878$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$17725$CSxK@ '#f '"multiple definitions of identifier" g$id$10877$CSxK@)))) g$sd?$10879$CSxK@) (void g$C$17725$CSxK@)))) g$V$17727$CSxK@))) g$label$10878$CSxK@ g$V$17726$CSxK@))) g$p$10887$CSxK@))) g$C$17732$CSxK@ g$t$10886$CSxK@) ((case-lambda ((g$J$17741$CSxK@) (g$rib-cache$10299$CSxK@ (case-lambda ((g$T$17742$CSxK@) (if g$T$17742$CSxK@ (g$rib-cache$10299$CSxK@ (case-lambda ((g$V$17743$CSxK@) (g$hashtable-update!$7490$CSxK@ g$J$17741$CSxK@ g$V$17743$CSxK@ g$sym$10881$CSxK@ (case-lambda ((g$C$17730$CSxK@ g$e$10888$CSxK@) (cons (case-lambda ((g$V$17731$CSxK@) (cons g$C$17730$CSxK@ g$V$17731$CSxK@ g$e$10888$CSxK@))) g$mark*$10882$CSxK@ g$label$10878$CSxK@))) '()))) g$rib$10876$CSxK@) (void g$J$17741$CSxK@)))) g$rib$10876$CSxK@))) (case-lambda (g$IGNORE$17733$CSxK@ (cons (case-lambda ((g$V$17734$CSxK@) (g$set-rib-sym*!$10300$CSxK@ (case-lambda (g$IGNORE$17735$CSxK@ (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$17736$CSxK@) (cons (case-lambda ((g$V$17737$CSxK@) (g$set-rib-mark**!$10301$CSxK@ (case-lambda (g$IGNORE$17738$CSxK@ (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$17739$CSxK@) (cons (case-lambda ((g$V$17740$CSxK@) (g$set-rib-label*!$10302$CSxK@ g$C$17732$CSxK@ g$rib$10876$CSxK@ g$V$17740$CSxK@))) g$label$10878$CSxK@ g$V$17739$CSxK@))) g$rib$10876$CSxK@))) g$rib$10876$CSxK@ g$V$17737$CSxK@))) g$mark*$10882$CSxK@ g$V$17736$CSxK@))) g$rib$10876$CSxK@))) g$rib$10876$CSxK@ g$V$17734$CSxK@))) g$sym$10881$CSxK@ g$sym*$10883$CSxK@))))))) g$C$17744$CSxK@ g$V$17745$CSxK@))))))) g$C$17751$CSxK@ g$V$17752$CSxK@))) g$rib$10876$CSxK@ g$sym$10881$CSxK@ g$mark*$10882$CSxK@))) g$C$17753$CSxK@ g$V$17754$CSxK@))) g$rib$10876$CSxK@))) g$C$17755$CSxK@ g$V$17758$CSxK@ g$V$17757$CSxK@))) g$id$10877$CSxK@))) g$id$10877$CSxK@))))))) g$C$17761$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$extend-rib!$10308$CSxK@))) (g$extend-rib/nc!$10309$CSxK@ g$extend-rib/nc!$14129$CSxK@ ((case-lambda ((g$C$22654$CSxK@) (g$C$22654$CSxK@ (case-lambda ((g$C$17778$CSxK@ g$rib$10894$CSxK@ g$id$10895$CSxK@ g$label$10896$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17779$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17780$CSxK@) ((case-lambda ((g$C$17776$CSxK@ g$sym$10897$CSxK@ g$mark*$10898$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$17777$CSxK@) ((case-lambda ((g$C$17764$CSxK@ g$sym*$10899$CSxK@) ((case-lambda ((g$J$17773$CSxK@) (g$rib-cache$10299$CSxK@ (case-lambda ((g$T$17774$CSxK@) (if g$T$17774$CSxK@ (g$rib-cache$10299$CSxK@ (case-lambda ((g$V$17775$CSxK@) (g$hashtable-update!$7490$CSxK@ g$J$17773$CSxK@ g$V$17775$CSxK@ g$sym$10897$CSxK@ (case-lambda ((g$C$17762$CSxK@ g$e$10900$CSxK@) (cons (case-lambda ((g$V$17763$CSxK@) (cons g$C$17762$CSxK@ g$V$17763$CSxK@ g$e$10900$CSxK@))) g$mark*$10898$CSxK@ g$label$10896$CSxK@))) '()))) g$rib$10894$CSxK@) (void g$J$17773$CSxK@)))) g$rib$10894$CSxK@))) (case-lambda (g$IGNORE$17765$CSxK@ (cons (case-lambda ((g$V$17766$CSxK@) (g$set-rib-sym*!$10300$CSxK@ (case-lambda (g$IGNORE$17767$CSxK@ (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$17768$CSxK@) (cons (case-lambda ((g$V$17769$CSxK@) (g$set-rib-mark**!$10301$CSxK@ (case-lambda (g$IGNORE$17770$CSxK@ (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$17771$CSxK@) (cons (case-lambda ((g$V$17772$CSxK@) (g$set-rib-label*!$10302$CSxK@ g$C$17764$CSxK@ g$rib$10894$CSxK@ g$V$17772$CSxK@))) g$label$10896$CSxK@ g$V$17771$CSxK@))) g$rib$10894$CSxK@))) g$rib$10894$CSxK@ g$V$17769$CSxK@))) g$mark*$10898$CSxK@ g$V$17768$CSxK@))) g$rib$10894$CSxK@))) g$rib$10894$CSxK@ g$V$17766$CSxK@))) g$sym$10897$CSxK@ g$sym*$10899$CSxK@)))))) g$C$17776$CSxK@ g$V$17777$CSxK@))) g$rib$10894$CSxK@))) g$C$17778$CSxK@ g$V$17780$CSxK@ g$V$17779$CSxK@))) g$id$10895$CSxK@))) g$id$10895$CSxK@)))))) (library-letrec*-identity 'g$extend-rib/nc!$10309$CSxK@))) (g$make-rib-map$10310$CSxK@ g$make-rib-map$14130$CSxK@ ((case-lambda ((g$C$22655$CSxK@) (g$C$22655$CSxK@ (case-lambda ((g$C$17793$CSxK@ g$sym*$10901$CSxK@) (g$make-eq-hashtable$7483$CSxK@ (case-lambda ((g$V$17794$CSxK@) ((case-lambda ((g$C$17791$CSxK@ g$ht$10902$CSxK@) ((case-lambda ((g$C$17790$CSxK@ g$f$10903$CSxK@) ((case-lambda ((g$C$17782$CSxK@ g$f$17781$CSxK@) (begin (set! g$f$10903$CSxK@ g$f$17781$CSxK@) (g$C$17782$CSxK@ g$f$10903$CSxK@)))) g$C$17790$CSxK@ (case-lambda ((g$C$17784$CSxK@ g$i$10904$CSxK@ g$sym*$10905$CSxK@) (null? (case-lambda ((g$T$17785$CSxK@) (if g$T$17785$CSxK@ (g$C$17784$CSxK@ g$ht$10902$CSxK@) (car (case-lambda ((g$V$17786$CSxK@) (g$hashtable-update!$7490$CSxK@ (case-lambda (g$IGNORE$17787$CSxK@ (cdr (case-lambda ((g$V$17788$CSxK@) (+ (case-lambda ((g$V$17789$CSxK@) (g$f$10903$CSxK@ g$C$17784$CSxK@ g$V$17789$CSxK@ g$V$17788$CSxK@))) g$i$10904$CSxK@ '1))) g$sym*$10905$CSxK@))) g$ht$10902$CSxK@ g$V$17786$CSxK@ (case-lambda ((g$C$17783$CSxK@ g$x$10906$CSxK@) (cons g$C$17783$CSxK@ g$i$10904$CSxK@ g$x$10906$CSxK@))) '()))) g$sym*$10905$CSxK@)))) g$sym*$10905$CSxK@)))))) (case-lambda ((g$V$17792$CSxK@) (g$V$17792$CSxK@ g$C$17791$CSxK@ '0 g$sym*$10901$CSxK@))) uninitialized))) g$C$17793$CSxK@ g$V$17794$CSxK@))))))))) (library-letrec*-identity 'g$make-rib-map$10310$CSxK@))) (g$seal-rib!$10311$CSxK@ g$seal-rib!$14131$CSxK@ ((case-lambda ((g$C$22656$CSxK@) (g$C$22656$CSxK@ (case-lambda ((g$C$17807$CSxK@ g$rib$10907$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$17808$CSxK@) ((case-lambda ((g$C$17795$CSxK@ g$sym*$10908$CSxK@) (null? (case-lambda ((g$V$17796$CSxK@) (not (case-lambda ((g$T$17797$CSxK@) (if g$T$17797$CSxK@ (g$list->vector$7379$CSxK@ (case-lambda ((g$V$17798$CSxK@) (g$set-rib-sym*!$10300$CSxK@ (case-lambda (g$IGNORE$17799$CSxK@ (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$17800$CSxK@) (g$list->vector$7379$CSxK@ (case-lambda ((g$V$17801$CSxK@) (g$set-rib-mark**!$10301$CSxK@ (case-lambda (g$IGNORE$17802$CSxK@ (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$17803$CSxK@) (g$list->vector$7379$CSxK@ (case-lambda ((g$V$17804$CSxK@) (g$set-rib-label*!$10302$CSxK@ (case-lambda (g$IGNORE$17805$CSxK@ (g$make-rib-map$10310$CSxK@ (case-lambda ((g$V$17806$CSxK@) (g$set-rib-sealed/freq!$10303$CSxK@ g$C$17795$CSxK@ g$rib$10907$CSxK@ g$V$17806$CSxK@))) g$sym*$10908$CSxK@))) g$rib$10907$CSxK@ g$V$17804$CSxK@))) g$V$17803$CSxK@))) g$rib$10907$CSxK@))) g$rib$10907$CSxK@ g$V$17801$CSxK@))) g$V$17800$CSxK@))) g$rib$10907$CSxK@))) g$rib$10907$CSxK@ g$V$17798$CSxK@))) g$sym*$10908$CSxK@) (void g$C$17795$CSxK@)))) g$V$17796$CSxK@))) g$sym*$10908$CSxK@))) g$C$17807$CSxK@ g$V$17808$CSxK@))) g$rib$10907$CSxK@)))))) (library-letrec*-identity 'g$seal-rib!$10311$CSxK@))) (g$unseal-rib!$10312$CSxK@ g$unseal-rib!$14132$CSxK@ ((case-lambda ((g$C$22657$CSxK@) (g$C$22657$CSxK@ (case-lambda ((g$C$17809$CSxK@ g$rib$10909$CSxK@) (g$rib-sealed/freq$10298$CSxK@ (case-lambda ((g$T$17810$CSxK@) (if g$T$17810$CSxK@ (g$set-rib-sealed/freq!$10303$CSxK@ (case-lambda (g$IGNORE$17811$CSxK@ (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$17812$CSxK@) (vector->list (case-lambda ((g$V$17813$CSxK@) (g$set-rib-sym*!$10300$CSxK@ (case-lambda (g$IGNORE$17814$CSxK@ (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$17815$CSxK@) (vector->list (case-lambda ((g$V$17816$CSxK@) (g$set-rib-mark**!$10301$CSxK@ (case-lambda (g$IGNORE$17817$CSxK@ (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$17818$CSxK@) (vector->list (case-lambda ((g$V$17819$CSxK@) (g$set-rib-label*!$10302$CSxK@ g$C$17809$CSxK@ g$rib$10909$CSxK@ g$V$17819$CSxK@))) g$V$17818$CSxK@))) g$rib$10909$CSxK@))) g$rib$10909$CSxK@ g$V$17816$CSxK@))) g$V$17815$CSxK@))) g$rib$10909$CSxK@))) g$rib$10909$CSxK@ g$V$17813$CSxK@))) g$V$17812$CSxK@))) g$rib$10909$CSxK@))) g$rib$10909$CSxK@ '#f) (void g$C$17809$CSxK@)))) g$rib$10909$CSxK@)))))) (library-letrec*-identity 'g$unseal-rib!$10312$CSxK@))) (g$make-full-rib$10313$CSxK@ g$make-full-rib$14133$CSxK@ ((case-lambda ((g$C$22658$CSxK@) (g$C$22658$CSxK@ (case-lambda ((g$C$17822$CSxK@ g$id*$10910$CSxK@ g$label*$10911$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17823$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$17824$CSxK@) (g$make-rib$10294$CSxK@ (case-lambda ((g$V$17825$CSxK@) ((case-lambda ((g$C$17820$CSxK@ g$r$10912$CSxK@) (g$seal-rib!$10311$CSxK@ (case-lambda (g$IGNORE$17821$CSxK@ (g$C$17820$CSxK@ g$r$10912$CSxK@))) g$r$10912$CSxK@))) g$C$17822$CSxK@ g$V$17825$CSxK@))) g$V$17824$CSxK@ g$V$17823$CSxK@ g$label*$10911$CSxK@ '#f '#f))) g$id->sym$10348$CSxK@ g$id*$10910$CSxK@))) g$stx-mark*$10322$CSxK@ g$id*$10910$CSxK@)))))) (library-letrec*-identity 'g$make-full-rib$10313$CSxK@))) (g$8187$10314$CSxK@ g$8187$14134$CSxK@ ((case-lambda ((g$C$22659$CSxK@) (make-record-type-descriptor g$C$22659$CSxK@ 'stx '#f 'g$8190$CSxK@ '#t '#t '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))) (library-letrec*-identity 'g$8187$10314$CSxK@))) (g$8189$10315$CSxK@ g$8189$14135$CSxK@ ((case-lambda ((g$C$22660$CSxK@) (g$C$22660$CSxK@ '#f))) (library-letrec*-identity 'g$8189$10315$CSxK@))) (g$8188$10316$CSxK@ g$8188$14136$CSxK@ ((case-lambda ((g$C$22661$CSxK@) (make-record-constructor-descriptor g$C$22661$CSxK@ g$8187$10314$CSxK@ '#f g$8189$10315$CSxK@))) (library-letrec*-identity 'g$8188$10316$CSxK@))) (g$stx?$10319$CSxK@ g$stx?$14137$CSxK@ ((case-lambda ((g$C$22662$CSxK@) (record-predicate g$C$22662$CSxK@ g$8187$10314$CSxK@))) (library-letrec*-identity 'g$stx?$10319$CSxK@))) (g$make-stx$10320$CSxK@ g$make-stx$14138$CSxK@ ((case-lambda ((g$C$22663$CSxK@) (record-constructor g$C$22663$CSxK@ g$8188$10316$CSxK@))) (library-letrec*-identity 'g$make-stx$10320$CSxK@))) (g$stx-expr$10321$CSxK@ g$stx-expr$14139$CSxK@ ((case-lambda ((g$C$22664$CSxK@) (record-accessor g$C$22664$CSxK@ g$8187$10314$CSxK@ '0))) (library-letrec*-identity 'g$stx-expr$10321$CSxK@))) (g$stx-mark*$10322$CSxK@ g$stx-mark*$14140$CSxK@ ((case-lambda ((g$C$22665$CSxK@) (record-accessor g$C$22665$CSxK@ g$8187$10314$CSxK@ '1))) (library-letrec*-identity 'g$stx-mark*$10322$CSxK@))) (g$stx-subst*$10323$CSxK@ g$stx-subst*$14141$CSxK@ ((case-lambda ((g$C$22666$CSxK@) (record-accessor g$C$22666$CSxK@ g$8187$10314$CSxK@ '2))) (library-letrec*-identity 'g$stx-subst*$10323$CSxK@))) (g$stx-ae*$10324$CSxK@ g$stx-ae*$14142$CSxK@ ((case-lambda ((g$C$22667$CSxK@) (record-accessor g$C$22667$CSxK@ g$8187$10314$CSxK@ '3))) (library-letrec*-identity 'g$stx-ae*$10324$CSxK@))) (g$set-stx-expr!$10325$CSxK@ g$set-stx-expr!$14143$CSxK@ ((case-lambda ((g$C$22668$CSxK@) (record-mutator g$C$22668$CSxK@ g$8187$10314$CSxK@ '0))) (library-letrec*-identity 'g$set-stx-expr!$10325$CSxK@))) (g$set-stx-mark*!$10326$CSxK@ g$set-stx-mark*!$14144$CSxK@ ((case-lambda ((g$C$22669$CSxK@) (record-mutator g$C$22669$CSxK@ g$8187$10314$CSxK@ '1))) (library-letrec*-identity 'g$set-stx-mark*!$10326$CSxK@))) (g$set-stx-subst*!$10327$CSxK@ g$set-stx-subst*!$14145$CSxK@ ((case-lambda ((g$C$22670$CSxK@) (record-mutator g$C$22670$CSxK@ g$8187$10314$CSxK@ '2))) (library-letrec*-identity 'g$set-stx-subst*!$10327$CSxK@))) (g$set-stx-ae*!$10328$CSxK@ g$set-stx-ae*!$14146$CSxK@ ((case-lambda ((g$C$22671$CSxK@) (record-mutator g$C$22671$CSxK@ g$8187$10314$CSxK@ '3))) (library-letrec*-identity 'g$set-stx-ae*!$10328$CSxK@))) (g$rp$10329$CSxK@ g$rp$14147$CSxK@ ((case-lambda ((g$C$22672$CSxK@) (make-record-printer g$C$22672$CSxK@ 'stx (case-lambda ((g$C$17837$CSxK@ g$x$10913$CSxK@ g$p$10914$CSxK@ g$wr$10915$CSxK@) (display (case-lambda (g$IGNORE$17838$CSxK@ (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$17839$CSxK@) (write (case-lambda (g$IGNORE$17840$CSxK@ (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17841$CSxK@) ((case-lambda ((g$C$17834$CSxK@ g$expr$10916$CSxK@) (annotation? (case-lambda ((g$T$17835$CSxK@) (if g$T$17835$CSxK@ (annotation-source (case-lambda ((g$V$17836$CSxK@) ((case-lambda ((g$C$17826$CSxK@ g$src$10917$CSxK@) (pair? (case-lambda ((g$T$17827$CSxK@) (if g$T$17827$CSxK@ (display (case-lambda (g$IGNORE$17828$CSxK@ (cdr (case-lambda ((g$V$17829$CSxK@) (display (case-lambda (g$IGNORE$17830$CSxK@ (display (case-lambda (g$IGNORE$17831$CSxK@ (car (case-lambda ((g$V$17832$CSxK@) (display (case-lambda (g$IGNORE$17833$CSxK@ (display g$C$17826$CSxK@ '")" g$p$10914$CSxK@))) g$V$17832$CSxK@ g$p$10914$CSxK@))) g$src$10917$CSxK@))) '" of " g$p$10914$CSxK@))) g$V$17829$CSxK@ g$p$10914$CSxK@))) g$src$10917$CSxK@))) '" (" g$p$10914$CSxK@) (void g$C$17826$CSxK@)))) g$src$10917$CSxK@))) g$C$17834$CSxK@ g$V$17836$CSxK@))) g$expr$10916$CSxK@) (void g$C$17834$CSxK@)))) g$expr$10916$CSxK@))) (case-lambda (g$IGNORE$17842$CSxK@ (display g$C$17837$CSxK@ '">" g$p$10914$CSxK@))) g$V$17841$CSxK@))) g$x$10913$CSxK@))) g$V$17839$CSxK@ g$p$10914$CSxK@))) g$x$10913$CSxK@))) '"#<syntax " g$p$10914$CSxK@)))))) (library-letrec*-identity 'g$rp$10329$CSxK@))) (g$datum->stx$10330$CSxK@ g$datum->stx$14148$CSxK@ ((case-lambda ((g$C$22673$CSxK@) (g$C$22673$CSxK@ (case-lambda ((g$C$17843$CSxK@ g$id$10918$CSxK@ g$datum$10919$CSxK@) (g$stx-ae*$10324$CSxK@ (case-lambda ((g$V$17844$CSxK@) (g$stx-subst*$10323$CSxK@ (case-lambda ((g$V$17845$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17846$CSxK@) (g$make-stx$10320$CSxK@ g$C$17843$CSxK@ g$datum$10919$CSxK@ g$V$17846$CSxK@ g$V$17845$CSxK@ g$V$17844$CSxK@))) g$id$10918$CSxK@))) g$id$10918$CSxK@))) g$id$10918$CSxK@)))))) (library-letrec*-identity 'g$datum->stx$10330$CSxK@))) (g$gen-mark$10331$CSxK@ g$gen-mark$14149$CSxK@ ((case-lambda ((g$C$22674$CSxK@) (g$C$22674$CSxK@ (case-lambda ((g$C$17847$CSxK@) (string g$C$17847$CSxK@ '#\m)))))) (library-letrec*-identity 'g$gen-mark$10331$CSxK@))) (g$anti-mark$10332$CSxK@ g$anti-mark$14150$CSxK@ ((case-lambda ((g$C$22675$CSxK@) (g$C$22675$CSxK@ '#f))) (library-letrec*-identity 'g$anti-mark$10332$CSxK@))) (g$anti-mark?$10333$CSxK@ g$anti-mark?$14151$CSxK@ ((case-lambda ((g$C$22676$CSxK@) (g$C$22676$CSxK@ not))) (library-letrec*-identity 'g$anti-mark?$10333$CSxK@))) (g$join-wraps$10334$CSxK@ g$join-wraps$14152$CSxK@ ((case-lambda ((g$C$22677$CSxK@) (g$C$22677$CSxK@ (case-lambda ((g$C$17878$CSxK@ g$m1*$10920$CSxK@ g$s1*$10921$CSxK@ g$ae1*$10922$CSxK@ g$e$10923$CSxK@) ((case-lambda ((g$C$17874$CSxK@ g$cancel$10924$CSxK@) (begin (set! g$cancel$10924$CSxK@ (case-lambda ((g$C$17856$CSxK@ g$ls1$10928$CSxK@ g$ls2$10929$CSxK@) (cdr (case-lambda ((g$V$17857$CSxK@) (car (case-lambda ((g$V$17858$CSxK@) ((case-lambda ((g$C$17855$CSxK@ g$f$10930$CSxK@) ((case-lambda ((g$C$17849$CSxK@ g$f$17848$CSxK@) (begin (set! g$f$10930$CSxK@ g$f$17848$CSxK@) (g$C$17849$CSxK@ g$f$10930$CSxK@)))) g$C$17855$CSxK@ (case-lambda ((g$C$17850$CSxK@ g$x$10931$CSxK@ g$ls1$10932$CSxK@) (null? (case-lambda ((g$T$17851$CSxK@) (if g$T$17851$CSxK@ (cdr g$C$17850$CSxK@ g$ls2$10929$CSxK@) (cdr (case-lambda ((g$V$17852$CSxK@) (car (case-lambda ((g$V$17853$CSxK@) (g$f$10930$CSxK@ (case-lambda ((g$V$17854$CSxK@) (cons g$C$17850$CSxK@ g$x$10931$CSxK@ g$V$17854$CSxK@))) g$V$17853$CSxK@ g$V$17852$CSxK@))) g$ls1$10932$CSxK@))) g$ls1$10932$CSxK@)))) g$ls1$10932$CSxK@)))))) (case-lambda ((g$V$17859$CSxK@) (g$V$17859$CSxK@ g$C$17856$CSxK@ g$V$17858$CSxK@ g$V$17857$CSxK@))) uninitialized))) g$ls1$10928$CSxK@))) g$ls1$10928$CSxK@)))) (g$stx-ae*$10324$CSxK@ (case-lambda ((g$V$17875$CSxK@) (g$stx-subst*$10323$CSxK@ (case-lambda ((g$V$17876$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17877$CSxK@) ((case-lambda ((g$C$17860$CSxK@ g$m2*$10925$CSxK@ g$s2*$10926$CSxK@ g$ae2*$10927$CSxK@) ((case-lambda ((g$J$17868$CSxK@) (null? (case-lambda ((g$V$17869$CSxK@) (not (case-lambda ((g$T$17870$CSxK@) (if g$T$17870$CSxK@ (null? (case-lambda ((g$V$17871$CSxK@) (not (case-lambda ((g$T$17872$CSxK@) (if g$T$17872$CSxK@ (car (case-lambda ((g$V$17873$CSxK@) (g$anti-mark?$10333$CSxK@ g$J$17868$CSxK@ g$V$17873$CSxK@))) g$m2*$10925$CSxK@) (g$J$17868$CSxK@ '#f)))) g$V$17871$CSxK@))) g$m2*$10925$CSxK@) (g$J$17868$CSxK@ '#f)))) g$V$17869$CSxK@))) g$m1*$10920$CSxK@))) (case-lambda ((g$T$17861$CSxK@) (if g$T$17861$CSxK@ (g$cancel$10924$CSxK@ (case-lambda ((g$V$17862$CSxK@) (g$cancel$10924$CSxK@ (case-lambda ((g$V$17863$CSxK@) (g$cancel$10924$CSxK@ (case-lambda ((g$V$17864$CSxK@) (values g$C$17860$CSxK@ g$V$17864$CSxK@ g$V$17863$CSxK@ g$V$17862$CSxK@))) g$m1*$10920$CSxK@ g$m2*$10925$CSxK@))) g$s1*$10921$CSxK@ g$s2*$10926$CSxK@))) g$ae1*$10922$CSxK@ g$ae2*$10927$CSxK@) (append (case-lambda ((g$V$17865$CSxK@) (append (case-lambda ((g$V$17866$CSxK@) (append (case-lambda ((g$V$17867$CSxK@) (values g$C$17860$CSxK@ g$V$17867$CSxK@ g$V$17866$CSxK@ g$V$17865$CSxK@))) g$m1*$10920$CSxK@ g$m2*$10925$CSxK@))) g$s1*$10921$CSxK@ g$s2*$10926$CSxK@))) g$ae1*$10922$CSxK@ g$ae2*$10927$CSxK@))))))) g$C$17874$CSxK@ g$V$17877$CSxK@ g$V$17876$CSxK@ g$V$17875$CSxK@))) g$e$10923$CSxK@))) g$e$10923$CSxK@))) g$e$10923$CSxK@)))) g$C$17878$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$join-wraps$10334$CSxK@))) (g$mkstx$10335$CSxK@ g$mkstx$14153$CSxK@ ((case-lambda ((g$C$22678$CSxK@) (g$C$22678$CSxK@ (case-lambda ((g$C$17883$CSxK@ g$e$10933$CSxK@ g$m*$10934$CSxK@ g$s*$10935$CSxK@ g$ae*$10936$CSxK@) ((case-lambda ((g$J$17885$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$17886$CSxK@) (if g$T$17886$CSxK@ (g$top-marked?$10281$CSxK@ (case-lambda ((g$V$17887$CSxK@) (not g$J$17885$CSxK@ g$V$17887$CSxK@))) g$m*$10934$CSxK@) (g$J$17885$CSxK@ '#f)))) g$e$10933$CSxK@))) (case-lambda ((g$T$17884$CSxK@) (if g$T$17884$CSxK@ (call-with-values g$C$17883$CSxK@ (case-lambda ((g$C$17879$CSxK@) (g$join-wraps$10334$CSxK@ g$C$17879$CSxK@ g$m*$10934$CSxK@ g$s*$10935$CSxK@ g$ae*$10936$CSxK@ g$e$10933$CSxK@))) (case-lambda ((g$C$17882$CSxK@ g$m*$10940$CSxK@ g$s*$10941$CSxK@ g$ae*$10942$CSxK@) ((case-lambda ((g$C$17880$CSxK@ g$ae*$10943$CSxK@ g$s*$10944$CSxK@ g$m*$10945$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17881$CSxK@) (g$make-stx$10320$CSxK@ g$C$17880$CSxK@ g$V$17881$CSxK@ g$m*$10945$CSxK@ g$s*$10944$CSxK@ g$ae*$10943$CSxK@))) g$e$10933$CSxK@))) g$C$17882$CSxK@ g$ae*$10942$CSxK@ g$s*$10941$CSxK@ g$m*$10940$CSxK@)))) (g$make-stx$10320$CSxK@ g$C$17883$CSxK@ g$e$10933$CSxK@ g$m*$10934$CSxK@ g$s*$10935$CSxK@ g$ae*$10936$CSxK@)))))))))) (library-letrec*-identity 'g$mkstx$10335$CSxK@))) (g$add-mark$10336$CSxK@ g$add-mark$14154$CSxK@ ((case-lambda ((g$C$22679$CSxK@) (g$C$22679$CSxK@ (case-lambda ((g$C$17888$CSxK@ g$m$10946$CSxK@ g$e$10947$CSxK@ g$ae$10948$CSxK@) (list (case-lambda ((g$V$17889$CSxK@) (list (case-lambda ((g$V$17890$CSxK@) (g$mkstx$10335$CSxK@ g$C$17888$CSxK@ g$e$10947$CSxK@ g$V$17890$CSxK@ '(shift) g$V$17889$CSxK@))) g$m$10946$CSxK@))) g$ae$10948$CSxK@)))))) (library-letrec*-identity 'g$add-mark$10336$CSxK@))) (g$add-subst$10337$CSxK@ g$add-subst$14155$CSxK@ ((case-lambda ((g$C$22680$CSxK@) (g$C$22680$CSxK@ (case-lambda ((g$C$17891$CSxK@ g$subst$10949$CSxK@ g$e$10950$CSxK@) (list (case-lambda ((g$V$17892$CSxK@) (g$mkstx$10335$CSxK@ g$C$17891$CSxK@ g$e$10950$CSxK@ '() g$V$17892$CSxK@ '()))) g$subst$10949$CSxK@)))))) (library-letrec*-identity 'g$add-subst$10337$CSxK@))) (g$syntax-kind?$10338$CSxK@ g$syntax-kind?$14156$CSxK@ ((case-lambda ((g$C$22681$CSxK@) (g$C$22681$CSxK@ (case-lambda ((g$C$17893$CSxK@ g$x$10951$CSxK@ g$p?$10952$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$17894$CSxK@) (if g$T$17894$CSxK@ (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17895$CSxK@) (g$syntax-kind?$10338$CSxK@ g$C$17893$CSxK@ g$V$17895$CSxK@ g$p?$10952$CSxK@))) g$x$10951$CSxK@) (annotation? (case-lambda ((g$T$17896$CSxK@) (if g$T$17896$CSxK@ (annotation-expression (case-lambda ((g$V$17897$CSxK@) (g$syntax-kind?$10338$CSxK@ g$C$17893$CSxK@ g$V$17897$CSxK@ g$p?$10952$CSxK@))) g$x$10951$CSxK@) (g$p?$10952$CSxK@ g$C$17893$CSxK@ g$x$10951$CSxK@)))) g$x$10951$CSxK@)))) g$x$10951$CSxK@)))))) (library-letrec*-identity 'g$syntax-kind?$10338$CSxK@))) (g$syntax-vector->list$10339$CSxK@ g$syntax-vector->list$14157$CSxK@ ((case-lambda ((g$C$22682$CSxK@) (g$C$22682$CSxK@ (case-lambda ((g$C$17900$CSxK@ g$x$10953$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$17901$CSxK@) (if g$T$17901$CSxK@ (g$stx-ae*$10324$CSxK@ (case-lambda ((g$V$17902$CSxK@) (g$stx-subst*$10323$CSxK@ (case-lambda ((g$V$17903$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17904$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17905$CSxK@) (g$syntax-vector->list$10339$CSxK@ (case-lambda ((g$V$17906$CSxK@) ((case-lambda ((g$C$17899$CSxK@ g$ls$10954$CSxK@ g$m*$10955$CSxK@ g$s*$10956$CSxK@ g$ae*$10957$CSxK@) (g$map$6713$CSxK@ g$C$17899$CSxK@ (case-lambda ((g$C$17898$CSxK@ g$x$10958$CSxK@) (g$mkstx$10335$CSxK@ g$C$17898$CSxK@ g$x$10958$CSxK@ g$m*$10955$CSxK@ g$s*$10956$CSxK@ g$ae*$10957$CSxK@))) g$ls$10954$CSxK@))) g$C$17900$CSxK@ g$V$17906$CSxK@ g$V$17904$CSxK@ g$V$17903$CSxK@ g$V$17902$CSxK@))) g$V$17905$CSxK@))) g$x$10953$CSxK@))) g$x$10953$CSxK@))) g$x$10953$CSxK@))) g$x$10953$CSxK@) (annotation? (case-lambda ((g$T$17907$CSxK@) (if g$T$17907$CSxK@ (annotation-expression (case-lambda ((g$V$17908$CSxK@) (g$syntax-vector->list$10339$CSxK@ g$C$17900$CSxK@ g$V$17908$CSxK@))) g$x$10953$CSxK@) (g$vector?$7382$CSxK@ (case-lambda ((g$T$17909$CSxK@) (if g$T$17909$CSxK@ (vector->list g$C$17900$CSxK@ g$x$10953$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17900$CSxK@ 'syntax-vector->list '"BUG: not a syntax vector" g$x$10953$CSxK@)))) g$x$10953$CSxK@)))) g$x$10953$CSxK@)))) g$x$10953$CSxK@)))))) (library-letrec*-identity 'g$syntax-vector->list$10339$CSxK@))) (g$syntax-pair?$10340$CSxK@ g$syntax-pair?$14158$CSxK@ ((case-lambda ((g$C$22683$CSxK@) (g$C$22683$CSxK@ (case-lambda ((g$C$17910$CSxK@ g$x$10959$CSxK@) (g$syntax-kind?$10338$CSxK@ g$C$17910$CSxK@ g$x$10959$CSxK@ pair?)))))) (library-letrec*-identity 'g$syntax-pair?$10340$CSxK@))) (g$syntax-vector?$10341$CSxK@ g$syntax-vector?$14159$CSxK@ ((case-lambda ((g$C$22684$CSxK@) (g$C$22684$CSxK@ (case-lambda ((g$C$17911$CSxK@ g$x$10960$CSxK@) (g$syntax-kind?$10338$CSxK@ g$C$17911$CSxK@ g$x$10960$CSxK@ g$vector?$7382$CSxK@)))))) (library-letrec*-identity 'g$syntax-vector?$10341$CSxK@))) (g$syntax-null?$10342$CSxK@ g$syntax-null?$14160$CSxK@ ((case-lambda ((g$C$22685$CSxK@) (g$C$22685$CSxK@ (case-lambda ((g$C$17912$CSxK@ g$x$10961$CSxK@) (g$syntax-kind?$10338$CSxK@ g$C$17912$CSxK@ g$x$10961$CSxK@ null?)))))) (library-letrec*-identity 'g$syntax-null?$10342$CSxK@))) (g$syntax-list?$10343$CSxK@ g$syntax-list?$14161$CSxK@ ((case-lambda ((g$C$22686$CSxK@) (g$C$22686$CSxK@ (case-lambda ((g$C$17916$CSxK@ g$x$10962$CSxK@) (g$syntax-null?$10342$CSxK@ (case-lambda ((g$V$17917$CSxK@) ((case-lambda ((g$C$17913$CSxK@ g$t$10963$CSxK@) (if g$t$10963$CSxK@ (g$C$17913$CSxK@ g$t$10963$CSxK@) (g$syntax-pair?$10340$CSxK@ (case-lambda ((g$T$17914$CSxK@) (if g$T$17914$CSxK@ (g$syntax-cdr$10345$CSxK@ (case-lambda ((g$V$17915$CSxK@) (g$syntax-list?$10343$CSxK@ g$C$17913$CSxK@ g$V$17915$CSxK@))) g$x$10962$CSxK@) (g$C$17913$CSxK@ '#f)))) g$x$10962$CSxK@)))) g$C$17916$CSxK@ g$V$17917$CSxK@))) g$x$10962$CSxK@)))))) (library-letrec*-identity 'g$syntax-list?$10343$CSxK@))) (g$syntax-car$10344$CSxK@ g$syntax-car$14162$CSxK@ ((case-lambda ((g$C$22687$CSxK@) (g$C$22687$CSxK@ (case-lambda ((g$C$17918$CSxK@ g$x$10964$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$17919$CSxK@) (if g$T$17919$CSxK@ (g$stx-ae*$10324$CSxK@ (case-lambda ((g$V$17920$CSxK@) (g$stx-subst*$10323$CSxK@ (case-lambda ((g$V$17921$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17922$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17923$CSxK@) (g$syntax-car$10344$CSxK@ (case-lambda ((g$V$17924$CSxK@) (g$mkstx$10335$CSxK@ g$C$17918$CSxK@ g$V$17924$CSxK@ g$V$17922$CSxK@ g$V$17921$CSxK@ g$V$17920$CSxK@))) g$V$17923$CSxK@))) g$x$10964$CSxK@))) g$x$10964$CSxK@))) g$x$10964$CSxK@))) g$x$10964$CSxK@) (annotation? (case-lambda ((g$T$17925$CSxK@) (if g$T$17925$CSxK@ (annotation-expression (case-lambda ((g$V$17926$CSxK@) (g$syntax-car$10344$CSxK@ g$C$17918$CSxK@ g$V$17926$CSxK@))) g$x$10964$CSxK@) (pair? (case-lambda ((g$T$17927$CSxK@) (if g$T$17927$CSxK@ (car g$C$17918$CSxK@ g$x$10964$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17918$CSxK@ 'syntax-car '"BUG: not a pair" g$x$10964$CSxK@)))) g$x$10964$CSxK@)))) g$x$10964$CSxK@)))) g$x$10964$CSxK@)))))) (library-letrec*-identity 'g$syntax-car$10344$CSxK@))) (g$syntax-cdr$10345$CSxK@ g$syntax-cdr$14163$CSxK@ ((case-lambda ((g$C$22688$CSxK@) (g$C$22688$CSxK@ (case-lambda ((g$C$17928$CSxK@ g$x$10965$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$17929$CSxK@) (if g$T$17929$CSxK@ (g$stx-ae*$10324$CSxK@ (case-lambda ((g$V$17930$CSxK@) (g$stx-subst*$10323$CSxK@ (case-lambda ((g$V$17931$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17932$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17933$CSxK@) (g$syntax-cdr$10345$CSxK@ (case-lambda ((g$V$17934$CSxK@) (g$mkstx$10335$CSxK@ g$C$17928$CSxK@ g$V$17934$CSxK@ g$V$17932$CSxK@ g$V$17931$CSxK@ g$V$17930$CSxK@))) g$V$17933$CSxK@))) g$x$10965$CSxK@))) g$x$10965$CSxK@))) g$x$10965$CSxK@))) g$x$10965$CSxK@) (annotation? (case-lambda ((g$T$17935$CSxK@) (if g$T$17935$CSxK@ (annotation-expression (case-lambda ((g$V$17936$CSxK@) (g$syntax-cdr$10345$CSxK@ g$C$17928$CSxK@ g$V$17936$CSxK@))) g$x$10965$CSxK@) (pair? (case-lambda ((g$T$17937$CSxK@) (if g$T$17937$CSxK@ (cdr g$C$17928$CSxK@ g$x$10965$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$17928$CSxK@ 'syntax-cdr '"BUG: not a pair" g$x$10965$CSxK@)))) g$x$10965$CSxK@)))) g$x$10965$CSxK@)))) g$x$10965$CSxK@)))))) (library-letrec*-identity 'g$syntax-cdr$10345$CSxK@))) (g$syntax->list$10346$CSxK@ g$syntax->list$14164$CSxK@ ((case-lambda ((g$C$22689$CSxK@) (g$C$22689$CSxK@ (case-lambda ((g$C$17938$CSxK@ g$x$10966$CSxK@) (g$syntax-pair?$10340$CSxK@ (case-lambda ((g$T$17939$CSxK@) (if g$T$17939$CSxK@ (g$syntax-cdr$10345$CSxK@ (case-lambda ((g$V$17940$CSxK@) (g$syntax->list$10346$CSxK@ (case-lambda ((g$V$17941$CSxK@) (g$syntax-car$10344$CSxK@ (case-lambda ((g$V$17942$CSxK@) (cons g$C$17938$CSxK@ g$V$17942$CSxK@ g$V$17941$CSxK@))) g$x$10966$CSxK@))) g$V$17940$CSxK@))) g$x$10966$CSxK@) (g$syntax-null?$10342$CSxK@ (case-lambda ((g$T$17943$CSxK@) (if g$T$17943$CSxK@ (g$C$17938$CSxK@ '()) (g$assertion-violation$7672$CSxK@ g$C$17938$CSxK@ 'syntax->list '"BUG: invalid argument" g$x$10966$CSxK@)))) g$x$10966$CSxK@)))) g$x$10966$CSxK@)))))) (library-letrec*-identity 'g$syntax->list$10346$CSxK@))) (g$id?$10347$CSxK@ g$id?$14165$CSxK@ ((case-lambda ((g$C$22690$CSxK@) (g$C$22690$CSxK@ (case-lambda ((g$C$17948$CSxK@ g$x$10967$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$17949$CSxK@) (if g$T$17949$CSxK@ (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17950$CSxK@) ((case-lambda ((g$C$17944$CSxK@ g$expr$10968$CSxK@) ((case-lambda ((g$J$17946$CSxK@) (annotation? (case-lambda ((g$T$17947$CSxK@) (if g$T$17947$CSxK@ (annotation-stripped g$J$17946$CSxK@ g$expr$10968$CSxK@) (g$J$17946$CSxK@ g$expr$10968$CSxK@)))) g$expr$10968$CSxK@))) (case-lambda ((g$V$17945$CSxK@) (g$symbol?$7384$CSxK@ g$C$17944$CSxK@ g$V$17945$CSxK@)))))) g$C$17948$CSxK@ g$V$17950$CSxK@))) g$x$10967$CSxK@) (g$C$17948$CSxK@ '#f)))) g$x$10967$CSxK@)))))) (library-letrec*-identity 'g$id?$10347$CSxK@))) (g$id->sym$10348$CSxK@ g$id->sym$14166$CSxK@ ((case-lambda ((g$C$22691$CSxK@) (g$C$22691$CSxK@ (case-lambda ((g$C$17957$CSxK@ g$x$10969$CSxK@) ((case-lambda ((g$J$17960$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$V$17961$CSxK@) (not (case-lambda ((g$T$17962$CSxK@) (if g$T$17962$CSxK@ (g$error$7673$CSxK@ g$J$17960$CSxK@ 'id->sym '"BUG in ikarus: not an id" g$x$10969$CSxK@) (void g$J$17960$CSxK@)))) g$V$17961$CSxK@))) g$x$10969$CSxK@))) (case-lambda (g$IGNORE$17958$CSxK@ (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$17959$CSxK@) ((case-lambda ((g$C$17953$CSxK@ g$expr$10970$CSxK@) ((case-lambda ((g$J$17955$CSxK@) (annotation? (case-lambda ((g$T$17956$CSxK@) (if g$T$17956$CSxK@ (annotation-stripped g$J$17955$CSxK@ g$expr$10970$CSxK@) (g$J$17955$CSxK@ g$expr$10970$CSxK@)))) g$expr$10970$CSxK@))) (case-lambda ((g$V$17954$CSxK@) ((case-lambda ((g$C$17951$CSxK@ g$sym$10971$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$17952$CSxK@) (if g$T$17952$CSxK@ (g$C$17951$CSxK@ g$sym$10971$CSxK@) (g$error$7673$CSxK@ g$C$17951$CSxK@ 'id->sym '"BUG in ikarus: not an id" g$x$10969$CSxK@)))) g$sym$10971$CSxK@))) g$C$17953$CSxK@ g$V$17954$CSxK@)))))) g$C$17957$CSxK@ g$V$17959$CSxK@))) g$x$10969$CSxK@))))))))) (library-letrec*-identity 'g$id->sym$10348$CSxK@))) (g$same-marks?$10349$CSxK@ g$same-marks?$14167$CSxK@ ((case-lambda ((g$C$22692$CSxK@) (g$C$22692$CSxK@ (case-lambda ((g$C$17971$CSxK@ g$x$10972$CSxK@ g$y$10973$CSxK@) ((case-lambda ((g$J$17973$CSxK@) (null? (case-lambda ((g$T$17974$CSxK@) (if g$T$17974$CSxK@ (null? g$J$17973$CSxK@ g$y$10973$CSxK@) (g$J$17973$CSxK@ '#f)))) g$x$10972$CSxK@))) (case-lambda ((g$V$17972$CSxK@) ((case-lambda ((g$C$17963$CSxK@ g$t$10974$CSxK@) (if g$t$10974$CSxK@ (g$C$17963$CSxK@ g$t$10974$CSxK@) (pair? (case-lambda ((g$T$17964$CSxK@) (if g$T$17964$CSxK@ (pair? (case-lambda ((g$T$17965$CSxK@) (if g$T$17965$CSxK@ (car (case-lambda ((g$V$17966$CSxK@) (car (case-lambda ((g$V$17967$CSxK@) (eq? (case-lambda ((g$T$17968$CSxK@) (if g$T$17968$CSxK@ (cdr (case-lambda ((g$V$17969$CSxK@) (cdr (case-lambda ((g$V$17970$CSxK@) (g$same-marks?$10349$CSxK@ g$C$17963$CSxK@ g$V$17970$CSxK@ g$V$17969$CSxK@))) g$x$10972$CSxK@))) g$y$10973$CSxK@) (g$C$17963$CSxK@ '#f)))) g$V$17967$CSxK@ g$V$17966$CSxK@))) g$x$10972$CSxK@))) g$y$10973$CSxK@) (g$C$17963$CSxK@ '#f)))) g$y$10973$CSxK@) (g$C$17963$CSxK@ '#f)))) g$x$10972$CSxK@)))) g$C$17971$CSxK@ g$V$17972$CSxK@))))))))) (library-letrec*-identity 'g$same-marks?$10349$CSxK@))) (g$bound-id=?$10350$CSxK@ g$bound-id=?$14168$CSxK@ ((case-lambda ((g$C$22693$CSxK@) (g$C$22693$CSxK@ (case-lambda ((g$C$17975$CSxK@ g$x$10975$CSxK@ g$y$10976$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17976$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17977$CSxK@) (eq? (case-lambda ((g$T$17978$CSxK@) (if g$T$17978$CSxK@ (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17979$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$17980$CSxK@) (g$same-marks?$10349$CSxK@ g$C$17975$CSxK@ g$V$17980$CSxK@ g$V$17979$CSxK@))) g$x$10975$CSxK@))) g$y$10976$CSxK@) (g$C$17975$CSxK@ '#f)))) g$V$17977$CSxK@ g$V$17976$CSxK@))) g$x$10975$CSxK@))) g$y$10976$CSxK@)))))) (library-letrec*-identity 'g$bound-id=?$10350$CSxK@))) (g$free-id=?$10351$CSxK@ g$free-id=?$14169$CSxK@ ((case-lambda ((g$C$22694$CSxK@) (g$C$22694$CSxK@ (case-lambda ((g$C$17986$CSxK@ g$i$10977$CSxK@ g$j$10978$CSxK@) (g$id->real-label$10361$CSxK@ (case-lambda ((g$V$17987$CSxK@) (g$id->real-label$10361$CSxK@ (case-lambda ((g$V$17988$CSxK@) ((case-lambda ((g$C$17982$CSxK@ g$t0$10979$CSxK@ g$t1$10980$CSxK@) ((case-lambda ((g$C$17981$CSxK@ g$t$10981$CSxK@) (if g$t$10981$CSxK@ (g$C$17981$CSxK@ g$t$10981$CSxK@) (g$C$17981$CSxK@ g$t1$10980$CSxK@)))) (case-lambda ((g$T$17983$CSxK@) (if g$T$17983$CSxK@ (eq? g$C$17982$CSxK@ g$t0$10979$CSxK@ g$t1$10980$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17984$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$17985$CSxK@) (eq? g$C$17982$CSxK@ g$V$17985$CSxK@ g$V$17984$CSxK@))) g$i$10977$CSxK@))) g$j$10978$CSxK@)))) g$t0$10979$CSxK@))) g$C$17986$CSxK@ g$V$17988$CSxK@ g$V$17987$CSxK@))) g$i$10977$CSxK@))) g$j$10978$CSxK@)))))) (library-letrec*-identity 'g$free-id=?$10351$CSxK@))) (g$valid-bound-ids?$10352$CSxK@ g$valid-bound-ids?$14170$CSxK@ ((case-lambda ((g$C$22695$CSxK@) (g$C$22695$CSxK@ (case-lambda ((g$C$17989$CSxK@ g$id*$10982$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$T$17990$CSxK@) (if g$T$17990$CSxK@ (g$distinct-bound-ids?$10353$CSxK@ g$C$17989$CSxK@ g$id*$10982$CSxK@) (g$C$17989$CSxK@ '#f)))) g$id?$10347$CSxK@ g$id*$10982$CSxK@)))))) (library-letrec*-identity 'g$valid-bound-ids?$10352$CSxK@))) (g$distinct-bound-ids?$10353$CSxK@ g$distinct-bound-ids?$14171$CSxK@ ((case-lambda ((g$C$22696$CSxK@) (g$C$22696$CSxK@ (case-lambda ((g$C$17997$CSxK@ g$id*$10983$CSxK@) (null? (case-lambda ((g$V$17998$CSxK@) ((case-lambda ((g$C$17991$CSxK@ g$t$10984$CSxK@) (if g$t$10984$CSxK@ (g$C$17991$CSxK@ g$t$10984$CSxK@) (cdr (case-lambda ((g$V$17992$CSxK@) (car (case-lambda ((g$V$17993$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$V$17994$CSxK@) (not (case-lambda ((g$T$17995$CSxK@) (if g$T$17995$CSxK@ (cdr (case-lambda ((g$V$17996$CSxK@) (g$distinct-bound-ids?$10353$CSxK@ g$C$17991$CSxK@ g$V$17996$CSxK@))) g$id*$10983$CSxK@) (g$C$17991$CSxK@ '#f)))) g$V$17994$CSxK@))) g$V$17993$CSxK@ g$V$17992$CSxK@))) g$id*$10983$CSxK@))) g$id*$10983$CSxK@)))) g$C$17997$CSxK@ g$V$17998$CSxK@))) g$id*$10983$CSxK@)))))) (library-letrec*-identity 'g$distinct-bound-ids?$10353$CSxK@))) (g$bound-id-member?$10354$CSxK@ g$bound-id-member?$14172$CSxK@ ((case-lambda ((g$C$22697$CSxK@) (g$C$22697$CSxK@ (case-lambda ((g$C$18001$CSxK@ g$id$10985$CSxK@ g$id*$10986$CSxK@) (pair? (case-lambda ((g$T$18002$CSxK@) (if g$T$18002$CSxK@ (car (case-lambda ((g$V$18003$CSxK@) (g$bound-id=?$10350$CSxK@ (case-lambda ((g$V$18004$CSxK@) ((case-lambda ((g$C$17999$CSxK@ g$t$10987$CSxK@) (if g$t$10987$CSxK@ (g$C$17999$CSxK@ g$t$10987$CSxK@) (cdr (case-lambda ((g$V$18000$CSxK@) (g$bound-id-member?$10354$CSxK@ g$C$17999$CSxK@ g$id$10985$CSxK@ g$V$18000$CSxK@))) g$id*$10986$CSxK@)))) g$C$18001$CSxK@ g$V$18004$CSxK@))) g$id$10985$CSxK@ g$V$18003$CSxK@))) g$id*$10986$CSxK@) (g$C$18001$CSxK@ '#f)))) g$id*$10986$CSxK@)))))) (library-letrec*-identity 'g$bound-id-member?$10354$CSxK@))) (g$self-evaluating?$10355$CSxK@ g$self-evaluating?$14173$CSxK@ ((case-lambda ((g$C$22698$CSxK@) (g$C$22698$CSxK@ (case-lambda ((g$C$18012$CSxK@ g$x$10988$CSxK@) (number? (case-lambda ((g$V$18013$CSxK@) ((case-lambda ((g$C$18010$CSxK@ g$t$10989$CSxK@) (if g$t$10989$CSxK@ (g$C$18010$CSxK@ g$t$10989$CSxK@) (string? (case-lambda ((g$V$18011$CSxK@) ((case-lambda ((g$C$18008$CSxK@ g$t$10990$CSxK@) (if g$t$10990$CSxK@ (g$C$18008$CSxK@ g$t$10990$CSxK@) (g$char?$7381$CSxK@ (case-lambda ((g$V$18009$CSxK@) ((case-lambda ((g$C$18006$CSxK@ g$t$10991$CSxK@) (if g$t$10991$CSxK@ (g$C$18006$CSxK@ g$t$10991$CSxK@) (g$boolean?$7385$CSxK@ (case-lambda ((g$V$18007$CSxK@) ((case-lambda ((g$C$18005$CSxK@ g$t$10992$CSxK@) (if g$t$10992$CSxK@ (g$C$18005$CSxK@ g$t$10992$CSxK@) (g$bytevector?$7383$CSxK@ g$C$18005$CSxK@ g$x$10988$CSxK@)))) g$C$18006$CSxK@ g$V$18007$CSxK@))) g$x$10988$CSxK@)))) g$C$18008$CSxK@ g$V$18009$CSxK@))) g$x$10988$CSxK@)))) g$C$18010$CSxK@ g$V$18011$CSxK@))) g$x$10988$CSxK@)))) g$C$18012$CSxK@ g$V$18013$CSxK@))) g$x$10988$CSxK@)))))) (library-letrec*-identity 'g$self-evaluating?$10355$CSxK@))) (g$strip-annotations$10356$CSxK@ g$strip-annotations$14174$CSxK@ ((case-lambda ((g$C$22699$CSxK@) (g$C$22699$CSxK@ (case-lambda ((g$C$18014$CSxK@ g$x$10993$CSxK@) (pair? (case-lambda ((g$T$18015$CSxK@) (if g$T$18015$CSxK@ (cdr (case-lambda ((g$V$18016$CSxK@) (g$strip-annotations$10356$CSxK@ (case-lambda ((g$V$18017$CSxK@) (car (case-lambda ((g$V$18018$CSxK@) (g$strip-annotations$10356$CSxK@ (case-lambda ((g$V$18019$CSxK@) (cons g$C$18014$CSxK@ g$V$18019$CSxK@ g$V$18017$CSxK@))) g$V$18018$CSxK@))) g$x$10993$CSxK@))) g$V$18016$CSxK@))) g$x$10993$CSxK@) (g$vector?$7382$CSxK@ (case-lambda ((g$T$18020$CSxK@) (if g$T$18020$CSxK@ (g$vector-map$7444$CSxK@ g$C$18014$CSxK@ g$strip-annotations$10356$CSxK@ g$x$10993$CSxK@) (annotation? (case-lambda ((g$T$18021$CSxK@) (if g$T$18021$CSxK@ (annotation-stripped g$C$18014$CSxK@ g$x$10993$CSxK@) (g$C$18014$CSxK@ g$x$10993$CSxK@)))) g$x$10993$CSxK@)))) g$x$10993$CSxK@)))) g$x$10993$CSxK@)))))) (library-letrec*-identity 'g$strip-annotations$10356$CSxK@))) (g$strip$10357$CSxK@ g$strip$14175$CSxK@ ((case-lambda ((g$C$22700$CSxK@) (g$C$22700$CSxK@ (case-lambda ((g$C$18057$CSxK@ g$x$10994$CSxK@ g$m*$10995$CSxK@) (g$top-marked?$10281$CSxK@ (case-lambda ((g$T$18058$CSxK@) (if g$T$18058$CSxK@ (annotation? (case-lambda ((g$V$18059$CSxK@) ((case-lambda ((g$C$18027$CSxK@ g$t$10996$CSxK@) (if g$t$10996$CSxK@ (g$C$18027$CSxK@ g$t$10996$CSxK@) ((case-lambda ((g$J$18029$CSxK@) (pair? (case-lambda ((g$T$18030$CSxK@) (if g$T$18030$CSxK@ (car (case-lambda ((g$V$18031$CSxK@) (annotation? g$J$18029$CSxK@ g$V$18031$CSxK@))) g$x$10994$CSxK@) (g$J$18029$CSxK@ '#f)))) g$x$10994$CSxK@))) (case-lambda ((g$V$18028$CSxK@) ((case-lambda ((g$C$18022$CSxK@ g$t$10997$CSxK@) (if g$t$10997$CSxK@ (g$C$18022$CSxK@ g$t$10997$CSxK@) (g$vector?$7382$CSxK@ (case-lambda ((g$T$18023$CSxK@) (if g$T$18023$CSxK@ (vector-length (case-lambda ((g$V$18024$CSxK@) (> (case-lambda ((g$T$18025$CSxK@) (if g$T$18025$CSxK@ (vector-ref (case-lambda ((g$V$18026$CSxK@) (annotation? g$C$18022$CSxK@ g$V$18026$CSxK@))) g$x$10994$CSxK@ '0) (g$C$18022$CSxK@ '#f)))) g$V$18024$CSxK@ '0))) g$x$10994$CSxK@) (g$C$18022$CSxK@ '#f)))) g$x$10994$CSxK@)))) g$C$18027$CSxK@ g$V$18028$CSxK@))))))) (case-lambda ((g$T$18060$CSxK@) (if g$T$18060$CSxK@ (g$strip-annotations$10356$CSxK@ g$C$18057$CSxK@ g$x$10994$CSxK@) (g$C$18057$CSxK@ g$x$10994$CSxK@)))) g$V$18059$CSxK@))) g$x$10994$CSxK@) ((case-lambda ((g$C$18056$CSxK@ g$f$10998$CSxK@) ((case-lambda ((g$C$18033$CSxK@ g$f$18032$CSxK@) (begin (set! g$f$10998$CSxK@ g$f$18032$CSxK@) (g$C$18033$CSxK@ g$f$10998$CSxK@)))) g$C$18056$CSxK@ (case-lambda ((g$C$18044$CSxK@ g$x$10999$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$18045$CSxK@) (if g$T$18045$CSxK@ (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$18046$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$18047$CSxK@) (g$strip$10357$CSxK@ g$C$18044$CSxK@ g$V$18047$CSxK@ g$V$18046$CSxK@))) g$x$10999$CSxK@))) g$x$10999$CSxK@) (annotation? (case-lambda ((g$T$18048$CSxK@) (if g$T$18048$CSxK@ (annotation-stripped g$C$18044$CSxK@ g$x$10999$CSxK@) (pair? (case-lambda ((g$T$18049$CSxK@) (if g$T$18049$CSxK@ (cdr (case-lambda ((g$V$18050$CSxK@) (g$f$10998$CSxK@ (case-lambda ((g$V$18051$CSxK@) (car (case-lambda ((g$V$18052$CSxK@) (g$f$10998$CSxK@ (case-lambda ((g$V$18053$CSxK@) ((case-lambda ((g$C$18034$CSxK@ g$a$11000$CSxK@ g$d$11001$CSxK@) ((case-lambda ((g$J$18036$CSxK@) (car (case-lambda ((g$V$18037$CSxK@) (eq? (case-lambda ((g$T$18038$CSxK@) (if g$T$18038$CSxK@ (cdr (case-lambda ((g$V$18039$CSxK@) (eq? g$J$18036$CSxK@ g$d$11001$CSxK@ g$V$18039$CSxK@))) g$x$10999$CSxK@) (g$J$18036$CSxK@ '#f)))) g$a$11000$CSxK@ g$V$18037$CSxK@))) g$x$10999$CSxK@))) (case-lambda ((g$T$18035$CSxK@) (if g$T$18035$CSxK@ (g$C$18034$CSxK@ g$x$10999$CSxK@) (cons g$C$18034$CSxK@ g$a$11000$CSxK@ g$d$11001$CSxK@))))))) g$C$18044$CSxK@ g$V$18053$CSxK@ g$V$18051$CSxK@))) g$V$18052$CSxK@))) g$x$10999$CSxK@))) g$V$18050$CSxK@))) g$x$10999$CSxK@) (g$vector?$7382$CSxK@ (case-lambda ((g$T$18054$CSxK@) (if g$T$18054$CSxK@ (vector->list (case-lambda ((g$V$18055$CSxK@) ((case-lambda ((g$C$18042$CSxK@ g$old$11002$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18043$CSxK@) ((case-lambda ((g$C$18040$CSxK@ g$new$11003$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$T$18041$CSxK@) (if g$T$18041$CSxK@ (g$C$18040$CSxK@ g$x$10999$CSxK@) (g$list->vector$7379$CSxK@ g$C$18040$CSxK@ g$new$11003$CSxK@)))) eq? g$old$11002$CSxK@ g$new$11003$CSxK@))) g$C$18042$CSxK@ g$V$18043$CSxK@))) g$f$10998$CSxK@ g$old$11002$CSxK@))) g$C$18044$CSxK@ g$V$18055$CSxK@))) g$x$10999$CSxK@) (g$C$18044$CSxK@ g$x$10999$CSxK@)))) g$x$10999$CSxK@)))) g$x$10999$CSxK@)))) g$x$10999$CSxK@)))) g$x$10999$CSxK@)))))) (case-lambda ((g$V$18061$CSxK@) (g$V$18061$CSxK@ g$C$18057$CSxK@ g$x$10994$CSxK@))) uninitialized)))) g$m*$10995$CSxK@)))))) (library-letrec*-identity 'g$strip$10357$CSxK@))) (g$stx->datum$10358$CSxK@ g$stx->datum$14176$CSxK@ ((case-lambda ((g$C$22701$CSxK@) (g$C$22701$CSxK@ (case-lambda ((g$C$18062$CSxK@ g$x$11004$CSxK@) (g$strip$10357$CSxK@ g$C$18062$CSxK@ g$x$11004$CSxK@ '())))))) (library-letrec*-identity 'g$stx->datum$10358$CSxK@))) (g$same-marks*?$10359$CSxK@ g$same-marks*?$14177$CSxK@ ((case-lambda ((g$C$22702$CSxK@) (g$C$22702$CSxK@ (case-lambda ((g$C$18063$CSxK@ g$mark*$11005$CSxK@ g$mark**$11006$CSxK@ g$si$11007$CSxK@) (null? (case-lambda ((g$T$18064$CSxK@) (if g$T$18064$CSxK@ (g$C$18063$CSxK@ '#f) (car (case-lambda ((g$V$18065$CSxK@) (vector-ref (case-lambda ((g$V$18066$CSxK@) (g$same-marks?$10349$CSxK@ (case-lambda ((g$T$18067$CSxK@) (if g$T$18067$CSxK@ (car g$C$18063$CSxK@ g$si$11007$CSxK@) (cdr (case-lambda ((g$V$18068$CSxK@) (g$same-marks*?$10359$CSxK@ g$C$18063$CSxK@ g$mark*$11005$CSxK@ g$mark**$11006$CSxK@ g$V$18068$CSxK@))) g$si$11007$CSxK@)))) g$mark*$11005$CSxK@ g$V$18066$CSxK@))) g$mark**$11006$CSxK@ g$V$18065$CSxK@))) g$si$11007$CSxK@)))) g$si$11007$CSxK@)))))) (library-letrec*-identity 'g$same-marks*?$10359$CSxK@))) (g$id->label$10360$CSxK@ g$id->label$14178$CSxK@ ((case-lambda ((g$C$22703$CSxK@) (g$C$22703$CSxK@ (case-lambda ((g$C$18079$CSxK@ g$id$11008$CSxK@) (g$id->real-label$10361$CSxK@ (case-lambda ((g$V$18080$CSxK@) ((case-lambda ((g$C$18077$CSxK@ g$t$11009$CSxK@) (if g$t$11009$CSxK@ (g$C$18077$CSxK@ g$t$11009$CSxK@) (g$top-level-context$10836$CSxK@ (case-lambda ((g$V$18078$CSxK@) ((case-lambda ((g$C$18076$CSxK@ g$t$11010$CSxK@) (if g$t$11010$CSxK@ ((case-lambda ((g$C$18074$CSxK@ g$env$11011$CSxK@) (g$interaction-env-rib$10794$CSxK@ (case-lambda ((g$V$18075$CSxK@) ((case-lambda ((g$C$18073$CSxK@ g$rib$11012$CSxK@) (call-with-values g$C$18073$CSxK@ (case-lambda ((g$C$18069$CSxK@) (g$gen-define-label+loc$10286$CSxK@ g$C$18069$CSxK@ g$id$11008$CSxK@ g$rib$11012$CSxK@ '#f))) (case-lambda ((g$C$18072$CSxK@ g$lab$11015$CSxK@ g$_loc$11016$CSxK@) ((case-lambda ((g$C$18070$CSxK@ g$_loc$11017$CSxK@ g$lab$11018$CSxK@) (g$extend-rib!$10308$CSxK@ (case-lambda (g$IGNORE$18071$CSxK@ (g$C$18070$CSxK@ g$lab$11018$CSxK@))) g$rib$11012$CSxK@ g$id$11008$CSxK@ g$lab$11018$CSxK@ '#t))) g$C$18072$CSxK@ g$_loc$11016$CSxK@ g$lab$11015$CSxK@)))))) g$C$18074$CSxK@ g$V$18075$CSxK@))) g$env$11011$CSxK@))) g$C$18076$CSxK@ g$t$11010$CSxK@) (g$C$18076$CSxK@ '#f)))) g$C$18077$CSxK@ g$V$18078$CSxK@))))))) g$C$18079$CSxK@ g$V$18080$CSxK@))) g$id$11008$CSxK@)))))) (library-letrec*-identity 'g$id->label$10360$CSxK@))) (g$id->real-label$10361$CSxK@ g$id->real-label$14179$CSxK@ ((case-lambda ((g$C$22704$CSxK@) (g$C$22704$CSxK@ (case-lambda ((g$C$18128$CSxK@ g$id$11019$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$18129$CSxK@) ((case-lambda ((g$C$18124$CSxK@ g$sym$11020$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$18125$CSxK@) (g$stx-subst*$10323$CSxK@ (case-lambda ((g$V$18126$CSxK@) ((case-lambda ((g$C$18123$CSxK@ g$search$11021$CSxK@) ((case-lambda ((g$C$18082$CSxK@ g$search$18081$CSxK@) (begin (set! g$search$11021$CSxK@ g$search$18081$CSxK@) (g$C$18082$CSxK@ g$search$11021$CSxK@)))) g$C$18123$CSxK@ (case-lambda ((g$C$18116$CSxK@ g$subst*$11022$CSxK@ g$mark*$11023$CSxK@) (null? (case-lambda ((g$T$18117$CSxK@) (if g$T$18117$CSxK@ (g$C$18116$CSxK@ '#f) (car (case-lambda ((g$V$18118$CSxK@) (eq? (case-lambda ((g$T$18119$CSxK@) (if g$T$18119$CSxK@ (cdr (case-lambda ((g$V$18120$CSxK@) (cdr (case-lambda ((g$V$18121$CSxK@) (g$search$11021$CSxK@ g$C$18116$CSxK@ g$V$18121$CSxK@ g$V$18120$CSxK@))) g$subst*$11022$CSxK@))) g$mark*$11023$CSxK@) (car (case-lambda ((g$V$18122$CSxK@) ((case-lambda ((g$C$18114$CSxK@ g$rib$11024$CSxK@) (g$rib-sealed/freq$10298$CSxK@ (case-lambda ((g$V$18115$CSxK@) ((case-lambda ((g$C$18112$CSxK@ g$t$11025$CSxK@) (if g$t$11025$CSxK@ ((case-lambda ((g$C$18091$CSxK@ g$ht$11026$CSxK@) (g$hashtable-ref$7486$CSxK@ (case-lambda ((g$V$18092$CSxK@) ((case-lambda ((g$C$18086$CSxK@ g$si$11027$CSxK@) ((case-lambda ((g$J$18088$CSxK@) (if g$si$11027$CSxK@ (g$reverse$7391$CSxK@ (case-lambda ((g$V$18089$CSxK@) (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$18090$CSxK@) (g$same-marks*?$10359$CSxK@ g$J$18088$CSxK@ g$mark*$11023$CSxK@ g$V$18090$CSxK@ g$V$18089$CSxK@))) g$rib$11024$CSxK@))) g$si$11027$CSxK@) (g$J$18088$CSxK@ '#f)))) (case-lambda ((g$V$18087$CSxK@) ((case-lambda ((g$C$18083$CSxK@ g$i$11028$CSxK@) (if g$i$11028$CSxK@ (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$18084$CSxK@) (vector-ref g$C$18083$CSxK@ g$V$18084$CSxK@ g$i$11028$CSxK@))) g$rib$11024$CSxK@) (cdr (case-lambda ((g$V$18085$CSxK@) (g$search$11021$CSxK@ g$C$18083$CSxK@ g$V$18085$CSxK@ g$mark*$11023$CSxK@))) g$subst*$11022$CSxK@)))) g$C$18086$CSxK@ g$V$18087$CSxK@)))))) g$C$18091$CSxK@ g$V$18092$CSxK@))) g$ht$11026$CSxK@ g$sym$11020$CSxK@ '#f))) g$C$18112$CSxK@ g$t$11025$CSxK@) (g$find-label$10307$CSxK@ (case-lambda ((g$V$18113$CSxK@) ((case-lambda ((g$C$18107$CSxK@ g$t$11029$CSxK@) (if g$t$11029$CSxK@ (g$C$18107$CSxK@ g$t$11029$CSxK@) (g$rib-label*$10297$CSxK@ (case-lambda ((g$V$18108$CSxK@) (g$rib-mark**$10296$CSxK@ (case-lambda ((g$V$18109$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$18110$CSxK@) ((case-lambda ((g$C$18106$CSxK@ g$f$11030$CSxK@) ((case-lambda ((g$C$18094$CSxK@ g$f$18093$CSxK@) (begin (set! g$f$11030$CSxK@ g$f$18093$CSxK@) (g$C$18094$CSxK@ g$f$11030$CSxK@)))) g$C$18106$CSxK@ (case-lambda ((g$C$18095$CSxK@ g$sym*$11031$CSxK@ g$mark**$11032$CSxK@ g$label*$11033$CSxK@) (null? (case-lambda ((g$T$18096$CSxK@) (if g$T$18096$CSxK@ (cdr (case-lambda ((g$V$18097$CSxK@) (g$search$11021$CSxK@ g$C$18095$CSxK@ g$V$18097$CSxK@ g$mark*$11023$CSxK@))) g$subst*$11022$CSxK@) ((case-lambda ((g$J$18102$CSxK@) (car (case-lambda ((g$V$18103$CSxK@) (eq? (case-lambda ((g$T$18104$CSxK@) (if g$T$18104$CSxK@ (car (case-lambda ((g$V$18105$CSxK@) (g$same-marks?$10349$CSxK@ g$J$18102$CSxK@ g$V$18105$CSxK@ g$mark*$11023$CSxK@))) g$mark**$11032$CSxK@) (g$J$18102$CSxK@ '#f)))) g$V$18103$CSxK@ g$sym$11020$CSxK@))) g$sym*$11031$CSxK@))) (case-lambda ((g$T$18098$CSxK@) (if g$T$18098$CSxK@ (car g$C$18095$CSxK@ g$label*$11033$CSxK@) (cdr (case-lambda ((g$V$18099$CSxK@) (cdr (case-lambda ((g$V$18100$CSxK@) (cdr (case-lambda ((g$V$18101$CSxK@) (g$f$11030$CSxK@ g$C$18095$CSxK@ g$V$18101$CSxK@ g$V$18100$CSxK@ g$V$18099$CSxK@))) g$sym*$11031$CSxK@))) g$mark**$11032$CSxK@))) g$label*$11033$CSxK@)))))))) g$sym*$11031$CSxK@)))))) (case-lambda ((g$V$18111$CSxK@) (g$V$18111$CSxK@ g$C$18107$CSxK@ g$V$18110$CSxK@ g$V$18109$CSxK@ g$V$18108$CSxK@))) uninitialized))) g$rib$11024$CSxK@))) g$rib$11024$CSxK@))) g$rib$11024$CSxK@)))) g$C$18112$CSxK@ g$V$18113$CSxK@))) g$rib$11024$CSxK@ g$sym$11020$CSxK@ g$mark*$11023$CSxK@)))) g$C$18114$CSxK@ g$V$18115$CSxK@))) g$rib$11024$CSxK@))) g$C$18116$CSxK@ g$V$18122$CSxK@))) g$subst*$11022$CSxK@)))) g$V$18118$CSxK@ 'shift))) g$subst*$11022$CSxK@)))) g$subst*$11022$CSxK@)))))) (case-lambda ((g$V$18127$CSxK@) (g$V$18127$CSxK@ g$C$18124$CSxK@ g$V$18126$CSxK@ g$V$18125$CSxK@))) uninitialized))) g$id$11019$CSxK@))) g$id$11019$CSxK@))) g$C$18128$CSxK@ g$V$18129$CSxK@))) g$id$11019$CSxK@)))))) (library-letrec*-identity 'g$id->real-label$10361$CSxK@))) (g$label->binding$10362$CSxK@ g$label->binding$14180$CSxK@ ((case-lambda ((g$C$22705$CSxK@) (g$C$22705$CSxK@ (case-lambda ((g$C$18156$CSxK@ g$x$11034$CSxK@ g$r$11035$CSxK@) (not (case-lambda ((g$T$18157$CSxK@) (if g$T$18157$CSxK@ (g$C$18156$CSxK@ '(displaced-lexical)) (g$imported-label->binding$10082$CSxK@ (case-lambda ((g$V$18158$CSxK@) ((case-lambda ((g$C$18154$CSxK@ g$t$11036$CSxK@) (if g$t$11036$CSxK@ ((case-lambda ((g$C$18132$CSxK@ g$b$11037$CSxK@) ((case-lambda ((g$J$18142$CSxK@) (pair? (case-lambda ((g$T$18143$CSxK@) (if g$T$18143$CSxK@ (car (case-lambda ((g$V$18144$CSxK@) (eq? g$J$18142$CSxK@ g$V$18144$CSxK@ '$core-rtd))) g$b$11037$CSxK@) (g$J$18142$CSxK@ '#f)))) g$b$11037$CSxK@))) (case-lambda ((g$T$18133$CSxK@) (if g$T$18133$CSxK@ (cdr (case-lambda ((g$V$18134$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18135$CSxK@) (cons g$C$18132$CSxK@ '$rtd g$V$18135$CSxK@))) g$bless$10673$CSxK@ g$V$18134$CSxK@))) g$b$11037$CSxK@) ((case-lambda ((g$J$18139$CSxK@) (pair? (case-lambda ((g$T$18140$CSxK@) (if g$T$18140$CSxK@ (car (case-lambda ((g$V$18141$CSxK@) (eq? g$J$18139$CSxK@ g$V$18141$CSxK@ 'global-rtd))) g$b$11037$CSxK@) (g$J$18139$CSxK@ '#f)))) g$b$11037$CSxK@))) (case-lambda ((g$T$18136$CSxK@) (if g$T$18136$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$18137$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$18138$CSxK@) ((case-lambda ((g$C$18130$CSxK@ g$lib$11038$CSxK@ g$loc$11039$CSxK@) (symbol-value (case-lambda ((g$V$18131$CSxK@) (cons g$C$18130$CSxK@ '$rtd g$V$18131$CSxK@))) g$loc$11039$CSxK@))) g$C$18132$CSxK@ g$V$18138$CSxK@ g$V$18137$CSxK@))) g$b$11037$CSxK@))) g$b$11037$CSxK@) (g$C$18132$CSxK@ g$b$11037$CSxK@))))))))))) g$C$18154$CSxK@ g$t$11036$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$18155$CSxK@) ((case-lambda ((g$C$18152$CSxK@ g$t$11040$CSxK@) (if g$t$11040$CSxK@ (cdr g$C$18152$CSxK@ g$t$11040$CSxK@) (g$top-level-context$10836$CSxK@ (case-lambda ((g$V$18153$CSxK@) ((case-lambda ((g$C$18151$CSxK@ g$t$11041$CSxK@) (if g$t$11041$CSxK@ ((case-lambda ((g$C$18148$CSxK@ g$env$11042$CSxK@) (g$interaction-env-locs$10796$CSxK@ (case-lambda ((g$V$18149$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$18150$CSxK@) ((case-lambda ((g$C$18147$CSxK@ g$t$11043$CSxK@) (if g$t$11043$CSxK@ ((case-lambda ((g$C$18145$CSxK@ g$p$11044$CSxK@) (cdr (case-lambda ((g$V$18146$CSxK@) (g$cons*$6715$CSxK@ g$C$18145$CSxK@ 'lexical g$V$18146$CSxK@ '#f))) g$p$11044$CSxK@))) g$C$18147$CSxK@ g$t$11043$CSxK@) (g$C$18147$CSxK@ '(displaced-lexical . #f))))) g$C$18148$CSxK@ g$V$18150$CSxK@))) g$x$11034$CSxK@ g$V$18149$CSxK@))) g$env$11042$CSxK@))) g$C$18151$CSxK@ g$t$11041$CSxK@) (g$C$18151$CSxK@ '(displaced-lexical . #f))))) g$C$18152$CSxK@ g$V$18153$CSxK@))))))) g$C$18154$CSxK@ g$V$18155$CSxK@))) g$x$11034$CSxK@ g$r$11035$CSxK@)))) g$C$18156$CSxK@ g$V$18158$CSxK@))) g$x$11034$CSxK@)))) g$x$11034$CSxK@)))))) (library-letrec*-identity 'g$label->binding$10362$CSxK@))) (g$make-binding$10363$CSxK@ g$make-binding$14181$CSxK@ ((case-lambda ((g$C$22706$CSxK@) (g$C$22706$CSxK@ cons))) (library-letrec*-identity 'g$make-binding$10363$CSxK@))) (g$binding-type$10364$CSxK@ g$binding-type$14182$CSxK@ ((case-lambda ((g$C$22707$CSxK@) (g$C$22707$CSxK@ car))) (library-letrec*-identity 'g$binding-type$10364$CSxK@))) (g$binding-value$10365$CSxK@ g$binding-value$14183$CSxK@ ((case-lambda ((g$C$22708$CSxK@) (g$C$22708$CSxK@ cdr))) (library-letrec*-identity 'g$binding-value$10365$CSxK@))) (g$raise-unbound-error$10366$CSxK@ g$raise-unbound-error$14184$CSxK@ ((case-lambda ((g$C$22709$CSxK@) (g$C$22709$CSxK@ (case-lambda ((g$C$18159$CSxK@ g$id$11045$CSxK@) (g$make-undefined-violation$8169$CSxK@ (case-lambda ((g$V$18160$CSxK@) (g$syntax-violation*$10827$CSxK@ g$C$18159$CSxK@ '#f '"unbound identifier" g$id$11045$CSxK@ g$V$18160$CSxK@))))))))) (library-letrec*-identity 'g$raise-unbound-error$10366$CSxK@))) (g$syntax-type$10367$CSxK@ g$syntax-type$14185$CSxK@ ((case-lambda ((g$C$22710$CSxK@) (g$C$22710$CSxK@ (case-lambda ((g$C$18190$CSxK@ g$e$11046$CSxK@ g$r$11047$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$18191$CSxK@) (if g$T$18191$CSxK@ ((case-lambda ((g$C$18172$CSxK@ g$id$11048$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$18173$CSxK@) ((case-lambda ((g$C$18170$CSxK@ g$label$11049$CSxK@) (g$label->binding$10362$CSxK@ (case-lambda ((g$V$18171$CSxK@) ((case-lambda ((g$C$18168$CSxK@ g$b$11050$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$18169$CSxK@) ((case-lambda ((g$C$18164$CSxK@ g$type$11051$CSxK@) ((case-lambda ((g$J$18166$CSxK@) (not (case-lambda ((g$T$18167$CSxK@) (if g$T$18167$CSxK@ (g$raise-unbound-error$10366$CSxK@ g$J$18166$CSxK@ g$id$11048$CSxK@) (void g$J$18166$CSxK@)))) g$label$11049$CSxK@))) (case-lambda (g$IGNORE$18165$CSxK@ ((case-lambda ((g$C$18161$CSxK@ g$t$11052$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$18162$CSxK@) (if g$T$18162$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18163$CSxK@) (values g$C$18161$CSxK@ g$type$11051$CSxK@ g$V$18163$CSxK@ g$id$11048$CSxK@))) g$b$11050$CSxK@) (values g$C$18161$CSxK@ 'other '#f '#f)))) g$t$11052$CSxK@ '(lexical core-prim macro macro! global local-macro local-macro! global-macro global-macro! displaced-lexical syntax import export $module $core-rtd library mutable ctv local-ctv global-ctv)))) g$C$18164$CSxK@ g$type$11051$CSxK@)))))) g$C$18168$CSxK@ g$V$18169$CSxK@))) g$b$11050$CSxK@))) g$C$18170$CSxK@ g$V$18171$CSxK@))) g$label$11049$CSxK@ g$r$11047$CSxK@))) g$C$18172$CSxK@ g$V$18173$CSxK@))) g$id$11048$CSxK@))) g$C$18190$CSxK@ g$e$11046$CSxK@) (g$syntax-pair?$10340$CSxK@ (case-lambda ((g$T$18192$CSxK@) (if g$T$18192$CSxK@ (g$syntax-car$10344$CSxK@ (case-lambda ((g$V$18193$CSxK@) ((case-lambda ((g$C$18185$CSxK@ g$id$11053$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$18186$CSxK@) (if g$T$18186$CSxK@ (g$id->label$10360$CSxK@ (case-lambda ((g$V$18187$CSxK@) ((case-lambda ((g$C$18183$CSxK@ g$label$11054$CSxK@) (g$label->binding$10362$CSxK@ (case-lambda ((g$V$18184$CSxK@) ((case-lambda ((g$C$18181$CSxK@ g$b$11055$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$18182$CSxK@) ((case-lambda ((g$C$18177$CSxK@ g$type$11056$CSxK@) ((case-lambda ((g$J$18179$CSxK@) (not (case-lambda ((g$T$18180$CSxK@) (if g$T$18180$CSxK@ (g$raise-unbound-error$10366$CSxK@ g$J$18179$CSxK@ g$id$11053$CSxK@) (void g$J$18179$CSxK@)))) g$label$11054$CSxK@))) (case-lambda (g$IGNORE$18178$CSxK@ ((case-lambda ((g$C$18174$CSxK@ g$t$11057$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$18175$CSxK@) (if g$T$18175$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18176$CSxK@) (values g$C$18174$CSxK@ g$type$11056$CSxK@ g$V$18176$CSxK@ g$id$11053$CSxK@))) g$b$11055$CSxK@) (values g$C$18174$CSxK@ 'call '#f '#f)))) g$t$11057$CSxK@ '(define define-syntax core-macro begin macro macro! local-macro local-macro! global-macro global-macro! module library set! let-syntax letrec-syntax import export $core-rtd ctv local-ctv global-ctv)))) g$C$18177$CSxK@ g$type$11056$CSxK@)))))) g$C$18181$CSxK@ g$V$18182$CSxK@))) g$b$11055$CSxK@))) g$C$18183$CSxK@ g$V$18184$CSxK@))) g$label$11054$CSxK@ g$r$11047$CSxK@))) g$C$18185$CSxK@ g$V$18187$CSxK@))) g$id$11053$CSxK@) (values g$C$18185$CSxK@ 'call '#f '#f)))) g$id$11053$CSxK@))) g$C$18190$CSxK@ g$V$18193$CSxK@))) g$e$11046$CSxK@) (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$18194$CSxK@) ((case-lambda ((g$C$18188$CSxK@ g$d$11058$CSxK@) (g$self-evaluating?$10355$CSxK@ (case-lambda ((g$T$18189$CSxK@) (if g$T$18189$CSxK@ (values g$C$18188$CSxK@ 'constant g$d$11058$CSxK@ '#f) (values g$C$18188$CSxK@ 'other '#f '#f)))) g$d$11058$CSxK@))) g$C$18190$CSxK@ g$V$18194$CSxK@))) g$e$11046$CSxK@)))) g$e$11046$CSxK@)))) g$e$11046$CSxK@)))))) (library-letrec*-identity 'g$syntax-type$10367$CSxK@))) (g$sanitize-binding$10384$CSxK@ g$sanitize-binding$14186$CSxK@ ((case-lambda ((g$C$22711$CSxK@) (g$C$22711$CSxK@ (case-lambda ((g$C$18195$CSxK@ g$x$11059$CSxK@ g$src$11060$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$18196$CSxK@) (if g$T$18196$CSxK@ (g$cons*$6715$CSxK@ g$C$18195$CSxK@ 'local-macro g$x$11059$CSxK@ g$src$11060$CSxK@) ((case-lambda ((g$J$18208$CSxK@) (pair? (case-lambda ((g$T$18209$CSxK@) (if g$T$18209$CSxK@ (car (case-lambda ((g$V$18210$CSxK@) (eq? (case-lambda ((g$T$18211$CSxK@) (if g$T$18211$CSxK@ (cdr (case-lambda ((g$V$18212$CSxK@) (g$procedure?$7386$CSxK@ g$J$18208$CSxK@ g$V$18212$CSxK@))) g$x$11059$CSxK@) (g$J$18208$CSxK@ '#f)))) g$V$18210$CSxK@ 'macro!))) g$x$11059$CSxK@) (g$J$18208$CSxK@ '#f)))) g$x$11059$CSxK@))) (case-lambda ((g$T$18197$CSxK@) (if g$T$18197$CSxK@ (cdr (case-lambda ((g$V$18198$CSxK@) (g$cons*$6715$CSxK@ g$C$18195$CSxK@ 'local-macro! g$V$18198$CSxK@ g$src$11060$CSxK@))) g$x$11059$CSxK@) ((case-lambda ((g$J$18205$CSxK@) (pair? (case-lambda ((g$T$18206$CSxK@) (if g$T$18206$CSxK@ (car (case-lambda ((g$V$18207$CSxK@) (eq? g$J$18205$CSxK@ g$V$18207$CSxK@ '$rtd))) g$x$11059$CSxK@) (g$J$18205$CSxK@ '#f)))) g$x$11059$CSxK@))) (case-lambda ((g$T$18199$CSxK@) (if g$T$18199$CSxK@ (g$C$18195$CSxK@ g$x$11059$CSxK@) ((case-lambda ((g$J$18202$CSxK@) (pair? (case-lambda ((g$T$18203$CSxK@) (if g$T$18203$CSxK@ (car (case-lambda ((g$V$18204$CSxK@) (eq? g$J$18202$CSxK@ g$V$18204$CSxK@ 'ctv))) g$x$11059$CSxK@) (g$J$18202$CSxK@ '#f)))) g$x$11059$CSxK@))) (case-lambda ((g$T$18200$CSxK@) (if g$T$18200$CSxK@ (cdr (case-lambda ((g$V$18201$CSxK@) (g$cons*$6715$CSxK@ g$C$18195$CSxK@ 'local-ctv g$V$18201$CSxK@ g$src$11060$CSxK@))) g$x$11059$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$18195$CSxK@ 'expand '"invalid transformer" g$x$11059$CSxK@)))))))))))))))) g$x$11059$CSxK@)))))) (library-letrec*-identity 'g$sanitize-binding$10384$CSxK@))) (g$make-variable-transformer$10385$CSxK@ g$make-variable-transformer$14187$CSxK@ ((case-lambda ((g$C$22712$CSxK@) (g$C$22712$CSxK@ (case-lambda ((g$C$18213$CSxK@ g$x$11061$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$18214$CSxK@) (if g$T$18214$CSxK@ (cons g$C$18213$CSxK@ 'macro! g$x$11061$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$18213$CSxK@ 'make-variable-transformer '"not a procedure" g$x$11061$CSxK@)))) g$x$11061$CSxK@)))))) (library-letrec*-identity 'g$make-variable-transformer$10385$CSxK@))) (g$make-compile-time-value$10386$CSxK@ g$make-compile-time-value$14188$CSxK@ ((case-lambda ((g$C$22713$CSxK@) (g$C$22713$CSxK@ (case-lambda ((g$C$18215$CSxK@ g$x$11062$CSxK@) (cons g$C$18215$CSxK@ 'ctv g$x$11062$CSxK@)))))) (library-letrec*-identity 'g$make-compile-time-value$10386$CSxK@))) (g$variable-transformer?$10387$CSxK@ g$variable-transformer?$14189$CSxK@ ((case-lambda ((g$C$22714$CSxK@) (g$C$22714$CSxK@ (case-lambda ((g$C$18216$CSxK@ g$x$11063$CSxK@) (pair? (case-lambda ((g$T$18217$CSxK@) (if g$T$18217$CSxK@ (car (case-lambda ((g$V$18218$CSxK@) (eq? (case-lambda ((g$T$18219$CSxK@) (if g$T$18219$CSxK@ (cdr (case-lambda ((g$V$18220$CSxK@) (g$procedure?$7386$CSxK@ g$C$18216$CSxK@ g$V$18220$CSxK@))) g$x$11063$CSxK@) (g$C$18216$CSxK@ '#f)))) g$V$18218$CSxK@ 'macro!))) g$x$11063$CSxK@) (g$C$18216$CSxK@ '#f)))) g$x$11063$CSxK@)))))) (library-letrec*-identity 'g$variable-transformer?$10387$CSxK@))) (g$variable-transformer-procedure$10388$CSxK@ g$variable-transformer-procedure$14190$CSxK@ ((case-lambda ((g$C$22715$CSxK@) (g$C$22715$CSxK@ (case-lambda ((g$C$18221$CSxK@ g$x$11064$CSxK@) (g$variable-transformer?$10387$CSxK@ (case-lambda ((g$T$18222$CSxK@) (if g$T$18222$CSxK@ (cdr g$C$18221$CSxK@ g$x$11064$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$18221$CSxK@ 'variable-transformer-procedure '"not a variable transformer" g$x$11064$CSxK@)))) g$x$11064$CSxK@)))))) (library-letrec*-identity 'g$variable-transformer-procedure$10388$CSxK@))) (g$make-eval-transformer$10389$CSxK@ g$make-eval-transformer$14191$CSxK@ ((case-lambda ((g$C$22716$CSxK@) (g$C$22716$CSxK@ (case-lambda ((g$C$18223$CSxK@ g$x$11065$CSxK@) (g$expanded->core$9816$CSxK@ (case-lambda ((g$V$18224$CSxK@) (eval-core (case-lambda ((g$V$18225$CSxK@) (g$sanitize-binding$10384$CSxK@ g$C$18223$CSxK@ g$V$18225$CSxK@ g$x$11065$CSxK@))) g$V$18224$CSxK@))) g$x$11065$CSxK@)))))) (library-letrec*-identity 'g$make-eval-transformer$10389$CSxK@))) (g$parse-define$10650$CSxK@ g$parse-define$14192$CSxK@ ((case-lambda ((g$C$22717$CSxK@) (g$C$22717$CSxK@ (case-lambda ((g$C$18254$CSxK@ g$x$11066$CSxK@) ((case-lambda ((g$C$18252$CSxK@ g$t$11067$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18253$CSxK@) ((case-lambda ((g$C$18249$CSxK@ g$ls/false$11068$CSxK@) ((case-lambda ((g$J$18251$CSxK@) (if g$ls/false$11068$CSxK@ (apply g$J$18251$CSxK@ (case-lambda ((g$C$18226$CSxK@ g$id$11069$CSxK@ g$fmls$11070$CSxK@ g$b$11071$CSxK@ g$b*$11072$CSxK@) (g$id?$10347$CSxK@ g$C$18226$CSxK@ g$id$11069$CSxK@))) g$ls/false$11068$CSxK@) (g$J$18251$CSxK@ '#f)))) (case-lambda ((g$T$18250$CSxK@) (if g$T$18250$CSxK@ (apply g$C$18249$CSxK@ (case-lambda ((g$C$18227$CSxK@ g$id$11073$CSxK@ g$fmls$11074$CSxK@ g$b$11075$CSxK@ g$b*$11076$CSxK@) (g$verify-formals$10730$CSxK@ (case-lambda (g$IGNORE$18228$CSxK@ (cons (case-lambda ((g$V$18229$CSxK@) (cons (case-lambda ((g$V$18230$CSxK@) (cons (case-lambda ((g$V$18231$CSxK@) (values g$C$18227$CSxK@ g$id$11073$CSxK@ g$V$18231$CSxK@))) 'defun g$V$18230$CSxK@))) g$fmls$11074$CSxK@ g$V$18229$CSxK@))) g$b$11075$CSxK@ g$b*$11076$CSxK@))) g$fmls$11074$CSxK@ g$x$11066$CSxK@))) g$ls/false$11068$CSxK@) ((case-lambda ((g$C$18247$CSxK@ g$t$11077$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18248$CSxK@) ((case-lambda ((g$C$18244$CSxK@ g$ls/false$11078$CSxK@) ((case-lambda ((g$J$18246$CSxK@) (if g$ls/false$11078$CSxK@ (apply g$J$18246$CSxK@ (case-lambda ((g$C$18232$CSxK@ g$id$11079$CSxK@ g$val$11080$CSxK@) (g$id?$10347$CSxK@ g$C$18232$CSxK@ g$id$11079$CSxK@))) g$ls/false$11078$CSxK@) (g$J$18246$CSxK@ '#f)))) (case-lambda ((g$T$18245$CSxK@) (if g$T$18245$CSxK@ (apply g$C$18244$CSxK@ (case-lambda ((g$C$18233$CSxK@ g$id$11081$CSxK@ g$val$11082$CSxK@) (cons (case-lambda ((g$V$18234$CSxK@) (values g$C$18233$CSxK@ g$id$11081$CSxK@ g$V$18234$CSxK@))) 'expr g$val$11082$CSxK@))) g$ls/false$11078$CSxK@) ((case-lambda ((g$C$18242$CSxK@ g$t$11083$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18243$CSxK@) ((case-lambda ((g$C$18239$CSxK@ g$ls/false$11084$CSxK@) ((case-lambda ((g$J$18241$CSxK@) (if g$ls/false$11084$CSxK@ (apply g$J$18241$CSxK@ (case-lambda ((g$C$18235$CSxK@ g$id$11085$CSxK@) (g$id?$10347$CSxK@ g$C$18235$CSxK@ g$id$11085$CSxK@))) g$ls/false$11084$CSxK@) (g$J$18241$CSxK@ '#f)))) (case-lambda ((g$T$18240$CSxK@) (if g$T$18240$CSxK@ (apply g$C$18239$CSxK@ (case-lambda ((g$C$18236$CSxK@ g$id$11086$CSxK@) (g$bless$10673$CSxK@ (case-lambda ((g$V$18237$CSxK@) (cons (case-lambda ((g$V$18238$CSxK@) (values g$C$18236$CSxK@ g$id$11086$CSxK@ g$V$18238$CSxK@))) 'expr g$V$18237$CSxK@))) '(void)))) g$ls/false$11084$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18239$CSxK@ '#f '"invalid syntax" g$t$11083$CSxK@))))))) g$C$18242$CSxK@ g$V$18243$CSxK@))) g$t$11083$CSxK@ '(_ any)))) g$C$18244$CSxK@ g$t$11077$CSxK@))))))) g$C$18247$CSxK@ g$V$18248$CSxK@))) g$t$11077$CSxK@ '(_ any any)))) g$C$18249$CSxK@ g$t$11067$CSxK@))))))) g$C$18252$CSxK@ g$V$18253$CSxK@))) g$t$11067$CSxK@ '(_ (any . any) any . each-any)))) g$C$18254$CSxK@ g$x$11066$CSxK@)))))) (library-letrec*-identity 'g$parse-define$10650$CSxK@))) (g$parse-define-syntax$10651$CSxK@ g$parse-define-syntax$14193$CSxK@ ((case-lambda ((g$C$22718$CSxK@) (g$C$22718$CSxK@ (case-lambda ((g$C$18262$CSxK@ g$x$11087$CSxK@) ((case-lambda ((g$C$18260$CSxK@ g$t$11088$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18261$CSxK@) ((case-lambda ((g$C$18257$CSxK@ g$ls/false$11089$CSxK@) ((case-lambda ((g$J$18259$CSxK@) (if g$ls/false$11089$CSxK@ (apply g$J$18259$CSxK@ (case-lambda ((g$C$18255$CSxK@ g$id$11090$CSxK@ g$val$11091$CSxK@) (g$id?$10347$CSxK@ g$C$18255$CSxK@ g$id$11090$CSxK@))) g$ls/false$11089$CSxK@) (g$J$18259$CSxK@ '#f)))) (case-lambda ((g$T$18258$CSxK@) (if g$T$18258$CSxK@ (apply g$C$18257$CSxK@ (case-lambda ((g$C$18256$CSxK@ g$id$11092$CSxK@ g$val$11093$CSxK@) (values g$C$18256$CSxK@ g$id$11092$CSxK@ g$val$11093$CSxK@))) g$ls/false$11089$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18257$CSxK@ '#f '"invalid syntax" g$t$11088$CSxK@))))))) g$C$18260$CSxK@ g$V$18261$CSxK@))) g$t$11088$CSxK@ '(_ any any)))) g$C$18262$CSxK@ g$x$11087$CSxK@)))))) (library-letrec*-identity 'g$parse-define-syntax$10651$CSxK@))) (g$scheme-stx-hashtable$10652$CSxK@ g$scheme-stx-hashtable$14194$CSxK@ ((case-lambda ((g$C$22719$CSxK@) (g$make-eq-hashtable$7483$CSxK@ g$C$22719$CSxK@))) (library-letrec*-identity 'g$scheme-stx-hashtable$10652$CSxK@))) (g$scheme-stx$10653$CSxK@ g$scheme-stx$14195$CSxK@ ((case-lambda ((g$C$22720$CSxK@) (g$C$22720$CSxK@ (case-lambda ((g$C$18282$CSxK@ g$sym$11094$CSxK@) (g$hashtable-ref$7486$CSxK@ (case-lambda ((g$V$18283$CSxK@) ((case-lambda ((g$C$18279$CSxK@ g$t$11095$CSxK@) (if g$t$11095$CSxK@ (g$C$18279$CSxK@ g$t$11095$CSxK@) (g$find-library-by-name$10076$CSxK@ (case-lambda ((g$V$18280$CSxK@) (g$library-subst$10040$CSxK@ (case-lambda ((g$V$18281$CSxK@) ((case-lambda ((g$C$18277$CSxK@ g$subst$11096$CSxK@) (g$make-stx$10320$CSxK@ (case-lambda ((g$V$18278$CSxK@) ((case-lambda ((g$C$18274$CSxK@ g$stx$11097$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$18275$CSxK@) ((case-lambda ((g$C$18273$CSxK@ g$t$11099$CSxK@) (if g$t$11099$CSxK@ ((case-lambda ((g$C$18270$CSxK@ g$x$11100$CSxK@) (cdr (case-lambda ((g$V$18271$CSxK@) (car (case-lambda ((g$V$18272$CSxK@) ((case-lambda ((g$C$18265$CSxK@ g$name$11101$CSxK@ g$label$11102$CSxK@) (list (case-lambda ((g$V$18266$CSxK@) (list (case-lambda ((g$V$18267$CSxK@) (list (case-lambda ((g$V$18268$CSxK@) (g$make-rib$10294$CSxK@ (case-lambda ((g$V$18269$CSxK@) (g$add-subst$10337$CSxK@ g$C$18265$CSxK@ g$V$18269$CSxK@ g$stx$11097$CSxK@))) g$V$18268$CSxK@ g$V$18267$CSxK@ g$V$18266$CSxK@ '#f '#f))) g$name$11101$CSxK@))) g$top-mark*$10280$CSxK@))) g$label$11102$CSxK@))) g$C$18270$CSxK@ g$V$18272$CSxK@ g$V$18271$CSxK@))) g$x$11100$CSxK@))) g$x$11100$CSxK@))) g$C$18273$CSxK@ g$t$11099$CSxK@) (g$C$18273$CSxK@ g$stx$11097$CSxK@)))) (case-lambda ((g$V$18276$CSxK@) ((case-lambda ((g$C$18263$CSxK@ g$stx$11098$CSxK@) (g$hashtable-set!$7487$CSxK@ (case-lambda (g$IGNORE$18264$CSxK@ (g$C$18263$CSxK@ g$stx$11098$CSxK@))) g$scheme-stx-hashtable$10652$CSxK@ g$sym$11094$CSxK@ g$stx$11098$CSxK@))) g$C$18274$CSxK@ g$V$18276$CSxK@))) g$V$18275$CSxK@))) g$sym$11094$CSxK@ g$subst$11096$CSxK@))) g$C$18277$CSxK@ g$V$18278$CSxK@))) g$sym$11094$CSxK@ g$top-mark*$10280$CSxK@ '() '()))) g$C$18279$CSxK@ g$V$18281$CSxK@))) g$V$18280$CSxK@))) '(psyntax system $all))))) g$C$18282$CSxK@ g$V$18283$CSxK@))) g$scheme-stx-hashtable$10652$CSxK@ g$sym$11094$CSxK@ '#f)))))) (library-letrec*-identity 'g$scheme-stx$10653$CSxK@))) (g$lexical-var$10654$CSxK@ g$lexical-var$14196$CSxK@ ((case-lambda ((g$C$22721$CSxK@) (g$C$22721$CSxK@ car))) (library-letrec*-identity 'g$lexical-var$10654$CSxK@))) (g$lexical-mutable?$10655$CSxK@ g$lexical-mutable?$14197$CSxK@ ((case-lambda ((g$C$22722$CSxK@) (g$C$22722$CSxK@ cdr))) (library-letrec*-identity 'g$lexical-mutable?$10655$CSxK@))) (g$set-lexical-mutable!$10656$CSxK@ g$set-lexical-mutable!$14198$CSxK@ ((case-lambda ((g$C$22723$CSxK@) (g$C$22723$CSxK@ set-cdr!))) (library-letrec*-identity 'g$set-lexical-mutable!$10656$CSxK@))) (g$add-lexical$10657$CSxK@ g$add-lexical$14199$CSxK@ ((case-lambda ((g$C$22724$CSxK@) (g$C$22724$CSxK@ (case-lambda ((g$C$18284$CSxK@ g$lab$11103$CSxK@ g$lex$11104$CSxK@ g$r$11105$CSxK@) (g$cons*$6715$CSxK@ (case-lambda ((g$V$18285$CSxK@) (cons g$C$18284$CSxK@ g$V$18285$CSxK@ g$r$11105$CSxK@))) g$lab$11103$CSxK@ 'lexical g$lex$11104$CSxK@ '#f)))))) (library-letrec*-identity 'g$add-lexical$10657$CSxK@))) (g$add-lexicals$10658$CSxK@ g$add-lexicals$14200$CSxK@ ((case-lambda ((g$C$22725$CSxK@) (g$C$22725$CSxK@ (case-lambda ((g$C$18286$CSxK@ g$lab*$11106$CSxK@ g$lex*$11107$CSxK@ g$r$11108$CSxK@) (null? (case-lambda ((g$T$18287$CSxK@) (if g$T$18287$CSxK@ (g$C$18286$CSxK@ g$r$11108$CSxK@) (car (case-lambda ((g$V$18288$CSxK@) (car (case-lambda ((g$V$18289$CSxK@) (g$add-lexical$10657$CSxK@ (case-lambda ((g$V$18290$CSxK@) (cdr (case-lambda ((g$V$18291$CSxK@) (cdr (case-lambda ((g$V$18292$CSxK@) (g$add-lexicals$10658$CSxK@ g$C$18286$CSxK@ g$V$18292$CSxK@ g$V$18291$CSxK@ g$V$18290$CSxK@))) g$lab*$11106$CSxK@))) g$lex*$11107$CSxK@))) g$V$18289$CSxK@ g$V$18288$CSxK@ g$r$11108$CSxK@))) g$lab*$11106$CSxK@))) g$lex*$11107$CSxK@)))) g$lab*$11106$CSxK@)))))) (library-letrec*-identity 'g$add-lexicals$10658$CSxK@))) (g$letrec-helper$10659$CSxK@ g$letrec-helper$14201$CSxK@ ((case-lambda ((g$C$22726$CSxK@) (g$C$22726$CSxK@ (case-lambda ((g$C$18312$CSxK@ g$e$11109$CSxK@ g$r$11110$CSxK@ g$mr$11111$CSxK@ g$build$11112$CSxK@) ((case-lambda ((g$C$18310$CSxK@ g$t$11113$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18311$CSxK@) ((case-lambda ((g$C$18309$CSxK@ g$ls/false$11114$CSxK@) (if g$ls/false$11114$CSxK@ (apply g$C$18309$CSxK@ (case-lambda ((g$C$18304$CSxK@ g$lhs*$11115$CSxK@ g$rhs*$11116$CSxK@ g$b$11117$CSxK@ g$b*$11118$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$V$18305$CSxK@) (not (case-lambda ((g$T$18306$CSxK@) (if g$T$18306$CSxK@ (g$invalid-fmls-error$10675$CSxK@ g$C$18304$CSxK@ g$e$11109$CSxK@ g$lhs*$11115$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18307$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18308$CSxK@) ((case-lambda ((g$C$18301$CSxK@ g$lex*$11119$CSxK@ g$lab*$11120$CSxK@) (g$add-lexicals$10658$CSxK@ (case-lambda ((g$V$18302$CSxK@) (g$make-full-rib$10313$CSxK@ (case-lambda ((g$V$18303$CSxK@) ((case-lambda ((g$C$18295$CSxK@ g$rib$11121$CSxK@ g$r$11122$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18296$CSxK@) (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$18297$CSxK@) (cons (case-lambda ((g$V$18298$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$18299$CSxK@) (g$chi-internal$10739$CSxK@ (case-lambda ((g$V$18300$CSxK@) ((case-lambda ((g$C$18293$CSxK@ g$body$11123$CSxK@ g$rhs*$11124$CSxK@) (g$build$11112$CSxK@ g$C$18293$CSxK@ '#f g$lex*$11119$CSxK@ g$rhs*$11124$CSxK@ g$body$11123$CSxK@))) g$C$18295$CSxK@ g$V$18300$CSxK@ g$V$18297$CSxK@))) g$V$18299$CSxK@ g$r$11122$CSxK@ g$mr$11111$CSxK@))) g$rib$11121$CSxK@ g$V$18298$CSxK@))) g$b$11117$CSxK@ g$b*$11118$CSxK@))) g$V$18296$CSxK@ g$r$11122$CSxK@ g$mr$11111$CSxK@))) (case-lambda ((g$C$18294$CSxK@ g$x$11125$CSxK@) (g$add-subst$10337$CSxK@ g$C$18294$CSxK@ g$rib$11121$CSxK@ g$x$11125$CSxK@))) g$rhs*$11116$CSxK@))) g$C$18301$CSxK@ g$V$18303$CSxK@ g$V$18302$CSxK@))) g$lhs*$11115$CSxK@ g$lab*$11120$CSxK@))) g$lab*$11120$CSxK@ g$lex*$11119$CSxK@ g$r$11110$CSxK@))) g$C$18304$CSxK@ g$V$18308$CSxK@ g$V$18307$CSxK@))) g$gen-lexical$10282$CSxK@ g$lhs*$11115$CSxK@))) g$gen-label$10284$CSxK@ g$lhs*$11115$CSxK@)))) g$V$18305$CSxK@))) g$lhs*$11115$CSxK@))) g$ls/false$11114$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18309$CSxK@ '#f '"invalid syntax" g$t$11113$CSxK@)))) g$C$18310$CSxK@ g$V$18311$CSxK@))) g$t$11113$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$18312$CSxK@ g$e$11109$CSxK@)))))) (library-letrec*-identity 'g$letrec-helper$10659$CSxK@))) (g$letrec-transformer$10660$CSxK@ g$letrec-transformer$14202$CSxK@ ((case-lambda ((g$C$22727$CSxK@) (g$C$22727$CSxK@ (case-lambda ((g$C$18313$CSxK@ g$e$11126$CSxK@ g$r$11127$CSxK@ g$mr$11128$CSxK@) (g$letrec-helper$10659$CSxK@ g$C$18313$CSxK@ g$e$11126$CSxK@ g$r$11127$CSxK@ g$mr$11128$CSxK@ g$build-letrec$10274$CSxK@)))))) (library-letrec*-identity 'g$letrec-transformer$10660$CSxK@))) (g$letrec*-transformer$10661$CSxK@ g$letrec*-transformer$14203$CSxK@ ((case-lambda ((g$C$22728$CSxK@) (g$C$22728$CSxK@ (case-lambda ((g$C$18314$CSxK@ g$e$11129$CSxK@ g$r$11130$CSxK@ g$mr$11131$CSxK@) (g$letrec-helper$10659$CSxK@ g$C$18314$CSxK@ g$e$11129$CSxK@ g$r$11130$CSxK@ g$mr$11131$CSxK@ g$build-letrec*$10275$CSxK@)))))) (library-letrec*-identity 'g$letrec*-transformer$10661$CSxK@))) (g$fluid-let-syntax-transformer$10662$CSxK@ g$fluid-let-syntax-transformer$14204$CSxK@ ((case-lambda ((g$C$22729$CSxK@) (g$C$22729$CSxK@ (case-lambda ((g$C$18335$CSxK@ g$e$11132$CSxK@ g$r$11133$CSxK@ g$mr$11134$CSxK@) ((case-lambda ((g$C$18334$CSxK@ g$lookup$11135$CSxK@) (begin (set! g$lookup$11135$CSxK@ (case-lambda ((g$C$18316$CSxK@ g$x$11145$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$18317$CSxK@) ((case-lambda ((g$C$18315$CSxK@ g$t$11146$CSxK@) (if g$t$11146$CSxK@ (g$C$18315$CSxK@ g$t$11146$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18315$CSxK@ '#f '"unbound identifier" g$e$11132$CSxK@ g$x$11145$CSxK@)))) g$C$18316$CSxK@ g$V$18317$CSxK@))) g$x$11145$CSxK@)))) ((case-lambda ((g$C$18332$CSxK@ g$t$11136$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18333$CSxK@) ((case-lambda ((g$C$18331$CSxK@ g$ls/false$11137$CSxK@) (if g$ls/false$11137$CSxK@ (apply g$C$18331$CSxK@ (case-lambda ((g$C$18326$CSxK@ g$lhs*$11138$CSxK@ g$rhs*$11139$CSxK@ g$b$11140$CSxK@ g$b*$11141$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$V$18327$CSxK@) (not (case-lambda ((g$T$18328$CSxK@) (if g$T$18328$CSxK@ (g$invalid-fmls-error$10675$CSxK@ g$C$18326$CSxK@ g$e$11132$CSxK@ g$lhs*$11138$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18329$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18330$CSxK@) ((case-lambda ((g$C$18318$CSxK@ g$lab*$11142$CSxK@ g$rhs*$11143$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18319$CSxK@) (append (case-lambda ((g$V$18320$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18321$CSxK@) (append (case-lambda ((g$V$18322$CSxK@) (cons (case-lambda ((g$V$18323$CSxK@) (g$chi-internal$10739$CSxK@ g$C$18318$CSxK@ g$V$18323$CSxK@ g$V$18322$CSxK@ g$V$18320$CSxK@))) g$b$11140$CSxK@ g$b*$11141$CSxK@))) g$V$18321$CSxK@ g$r$11133$CSxK@))) cons g$lab*$11142$CSxK@ g$rhs*$11143$CSxK@))) g$V$18319$CSxK@ g$mr$11134$CSxK@))) cons g$lab*$11142$CSxK@ g$rhs*$11143$CSxK@))) g$C$18326$CSxK@ g$V$18330$CSxK@ g$V$18329$CSxK@))) g$lookup$11135$CSxK@ g$lhs*$11138$CSxK@))) (case-lambda ((g$C$18324$CSxK@ g$x$11144$CSxK@) (g$expand-transformer$10757$CSxK@ (case-lambda ((g$V$18325$CSxK@) (g$make-eval-transformer$10389$CSxK@ g$C$18324$CSxK@ g$V$18325$CSxK@))) g$x$11144$CSxK@ g$mr$11134$CSxK@))) g$rhs*$11139$CSxK@)))) g$V$18327$CSxK@))) g$lhs*$11138$CSxK@))) g$ls/false$11137$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18331$CSxK@ '#f '"invalid syntax" g$t$11136$CSxK@)))) g$C$18332$CSxK@ g$V$18333$CSxK@))) g$t$11136$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$18334$CSxK@ g$e$11132$CSxK@)))) g$C$18335$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$fluid-let-syntax-transformer$10662$CSxK@))) (g$type-descriptor-transformer$10663$CSxK@ g$type-descriptor-transformer$14205$CSxK@ ((case-lambda ((g$C$22730$CSxK@) (g$C$22730$CSxK@ (case-lambda ((g$C$18361$CSxK@ g$e$11147$CSxK@ g$r$11148$CSxK@ g$mr$11149$CSxK@) ((case-lambda ((g$C$18359$CSxK@ g$t$11150$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18360$CSxK@) ((case-lambda ((g$C$18356$CSxK@ g$ls/false$11151$CSxK@) ((case-lambda ((g$J$18358$CSxK@) (if g$ls/false$11151$CSxK@ (apply g$J$18358$CSxK@ (case-lambda ((g$C$18336$CSxK@ g$id$11152$CSxK@) (g$id?$10347$CSxK@ g$C$18336$CSxK@ g$id$11152$CSxK@))) g$ls/false$11151$CSxK@) (g$J$18358$CSxK@ '#f)))) (case-lambda ((g$T$18357$CSxK@) (if g$T$18357$CSxK@ (apply g$C$18356$CSxK@ (case-lambda ((g$C$18354$CSxK@ g$id$11153$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$18355$CSxK@) ((case-lambda ((g$C$18352$CSxK@ g$lab$11154$CSxK@) (g$label->binding$10362$CSxK@ (case-lambda ((g$V$18353$CSxK@) ((case-lambda ((g$C$18350$CSxK@ g$b$11155$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$18351$CSxK@) ((case-lambda ((g$C$18337$CSxK@ g$type$11156$CSxK@) ((case-lambda ((g$J$18348$CSxK@) (not (case-lambda ((g$T$18349$CSxK@) (if g$T$18349$CSxK@ (g$raise-unbound-error$10366$CSxK@ g$J$18348$CSxK@ g$id$11153$CSxK@) (void g$J$18348$CSxK@)))) g$lab$11154$CSxK@))) (case-lambda (g$IGNORE$18338$CSxK@ ((case-lambda ((g$J$18341$CSxK@) ((case-lambda ((g$J$18344$CSxK@) (eq? (case-lambda ((g$T$18345$CSxK@) (if g$T$18345$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18346$CSxK@) (list? (case-lambda ((g$V$18347$CSxK@) (not g$J$18344$CSxK@ g$V$18347$CSxK@))) g$V$18346$CSxK@))) g$b$11155$CSxK@) (g$J$18344$CSxK@ '#f)))) g$type$11156$CSxK@ '$rtd))) (case-lambda ((g$V$18342$CSxK@) (not (case-lambda ((g$T$18343$CSxK@) (if g$T$18343$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$18341$CSxK@ '#f '"not a record type" g$e$11147$CSxK@) (void g$J$18341$CSxK@)))) g$V$18342$CSxK@)))))) (case-lambda (g$IGNORE$18339$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18340$CSxK@) (list g$C$18337$CSxK@ 'quote g$V$18340$CSxK@))) g$b$11155$CSxK@))))))))) g$C$18350$CSxK@ g$V$18351$CSxK@))) g$b$11155$CSxK@))) g$C$18352$CSxK@ g$V$18353$CSxK@))) g$lab$11154$CSxK@ g$r$11148$CSxK@))) g$C$18354$CSxK@ g$V$18355$CSxK@))) g$id$11153$CSxK@))) g$ls/false$11151$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18356$CSxK@ '#f '"invalid syntax" g$t$11150$CSxK@))))))) g$C$18359$CSxK@ g$V$18360$CSxK@))) g$t$11150$CSxK@ '(_ any)))) g$C$18361$CSxK@ g$e$11147$CSxK@)))))) (library-letrec*-identity 'g$type-descriptor-transformer$10663$CSxK@))) (g$record-type-descriptor-transformer$10664$CSxK@ g$record-type-descriptor-transformer$14206$CSxK@ ((case-lambda ((g$C$22731$CSxK@) (g$C$22731$CSxK@ (case-lambda ((g$C$18387$CSxK@ g$e$11157$CSxK@ g$r$11158$CSxK@ g$mr$11159$CSxK@) ((case-lambda ((g$C$18385$CSxK@ g$t$11160$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18386$CSxK@) ((case-lambda ((g$C$18382$CSxK@ g$ls/false$11161$CSxK@) ((case-lambda ((g$J$18384$CSxK@) (if g$ls/false$11161$CSxK@ (apply g$J$18384$CSxK@ (case-lambda ((g$C$18362$CSxK@ g$id$11162$CSxK@) (g$id?$10347$CSxK@ g$C$18362$CSxK@ g$id$11162$CSxK@))) g$ls/false$11161$CSxK@) (g$J$18384$CSxK@ '#f)))) (case-lambda ((g$T$18383$CSxK@) (if g$T$18383$CSxK@ (apply g$C$18382$CSxK@ (case-lambda ((g$C$18380$CSxK@ g$id$11163$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$18381$CSxK@) ((case-lambda ((g$C$18378$CSxK@ g$lab$11164$CSxK@) (g$label->binding$10362$CSxK@ (case-lambda ((g$V$18379$CSxK@) ((case-lambda ((g$C$18376$CSxK@ g$b$11165$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$18377$CSxK@) ((case-lambda ((g$C$18363$CSxK@ g$type$11166$CSxK@) ((case-lambda ((g$J$18374$CSxK@) (not (case-lambda ((g$T$18375$CSxK@) (if g$T$18375$CSxK@ (g$raise-unbound-error$10366$CSxK@ g$J$18374$CSxK@ g$id$11163$CSxK@) (void g$J$18374$CSxK@)))) g$lab$11164$CSxK@))) (case-lambda (g$IGNORE$18364$CSxK@ ((case-lambda ((g$J$18368$CSxK@) ((case-lambda ((g$J$18371$CSxK@) (eq? (case-lambda ((g$T$18372$CSxK@) (if g$T$18372$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18373$CSxK@) (list? g$J$18371$CSxK@ g$V$18373$CSxK@))) g$b$11165$CSxK@) (g$J$18371$CSxK@ '#f)))) g$type$11166$CSxK@ '$rtd))) (case-lambda ((g$V$18369$CSxK@) (not (case-lambda ((g$T$18370$CSxK@) (if g$T$18370$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$18368$CSxK@ '#f '"not a record type" g$e$11157$CSxK@) (void g$J$18368$CSxK@)))) g$V$18369$CSxK@)))))) (case-lambda (g$IGNORE$18365$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18366$CSxK@) (car (case-lambda ((g$V$18367$CSxK@) (g$chi-expr$10728$CSxK@ g$C$18363$CSxK@ g$V$18367$CSxK@ g$r$11158$CSxK@ g$mr$11159$CSxK@))) g$V$18366$CSxK@))) g$b$11165$CSxK@))))))))) g$C$18376$CSxK@ g$V$18377$CSxK@))) g$b$11165$CSxK@))) g$C$18378$CSxK@ g$V$18379$CSxK@))) g$lab$11164$CSxK@ g$r$11158$CSxK@))) g$C$18380$CSxK@ g$V$18381$CSxK@))) g$id$11163$CSxK@))) g$ls/false$11161$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18382$CSxK@ '#f '"invalid syntax" g$t$11160$CSxK@))))))) g$C$18385$CSxK@ g$V$18386$CSxK@))) g$t$11160$CSxK@ '(_ any)))) g$C$18387$CSxK@ g$e$11157$CSxK@)))))) (library-letrec*-identity 'g$record-type-descriptor-transformer$10664$CSxK@))) (g$record-constructor-descriptor-transformer$10665$CSxK@ g$record-constructor-descriptor-transformer$14207$CSxK@ ((case-lambda ((g$C$22732$CSxK@) (g$C$22732$CSxK@ (case-lambda ((g$C$18413$CSxK@ g$e$11167$CSxK@ g$r$11168$CSxK@ g$mr$11169$CSxK@) ((case-lambda ((g$C$18411$CSxK@ g$t$11170$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18412$CSxK@) ((case-lambda ((g$C$18408$CSxK@ g$ls/false$11171$CSxK@) ((case-lambda ((g$J$18410$CSxK@) (if g$ls/false$11171$CSxK@ (apply g$J$18410$CSxK@ (case-lambda ((g$C$18388$CSxK@ g$id$11172$CSxK@) (g$id?$10347$CSxK@ g$C$18388$CSxK@ g$id$11172$CSxK@))) g$ls/false$11171$CSxK@) (g$J$18410$CSxK@ '#f)))) (case-lambda ((g$T$18409$CSxK@) (if g$T$18409$CSxK@ (apply g$C$18408$CSxK@ (case-lambda ((g$C$18406$CSxK@ g$id$11173$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$18407$CSxK@) ((case-lambda ((g$C$18404$CSxK@ g$lab$11174$CSxK@) (g$label->binding$10362$CSxK@ (case-lambda ((g$V$18405$CSxK@) ((case-lambda ((g$C$18402$CSxK@ g$b$11175$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$18403$CSxK@) ((case-lambda ((g$C$18389$CSxK@ g$type$11176$CSxK@) ((case-lambda ((g$J$18400$CSxK@) (not (case-lambda ((g$T$18401$CSxK@) (if g$T$18401$CSxK@ (g$raise-unbound-error$10366$CSxK@ g$J$18400$CSxK@ g$id$11173$CSxK@) (void g$J$18400$CSxK@)))) g$lab$11174$CSxK@))) (case-lambda (g$IGNORE$18390$CSxK@ ((case-lambda ((g$J$18394$CSxK@) ((case-lambda ((g$J$18397$CSxK@) (eq? (case-lambda ((g$T$18398$CSxK@) (if g$T$18398$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18399$CSxK@) (list? g$J$18397$CSxK@ g$V$18399$CSxK@))) g$b$11175$CSxK@) (g$J$18397$CSxK@ '#f)))) g$type$11176$CSxK@ '$rtd))) (case-lambda ((g$V$18395$CSxK@) (not (case-lambda ((g$T$18396$CSxK@) (if g$T$18396$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$18394$CSxK@ '#f '"invalid type" g$e$11167$CSxK@) (void g$J$18394$CSxK@)))) g$V$18395$CSxK@)))))) (case-lambda (g$IGNORE$18391$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$18392$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$18393$CSxK@) (g$chi-expr$10728$CSxK@ g$C$18389$CSxK@ g$V$18393$CSxK@ g$r$11168$CSxK@ g$mr$11169$CSxK@))) g$V$18392$CSxK@))) g$b$11175$CSxK@))))))))) g$C$18402$CSxK@ g$V$18403$CSxK@))) g$b$11175$CSxK@))) g$C$18404$CSxK@ g$V$18405$CSxK@))) g$lab$11174$CSxK@ g$r$11168$CSxK@))) g$C$18406$CSxK@ g$V$18407$CSxK@))) g$id$11173$CSxK@))) g$ls/false$11171$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18408$CSxK@ '#f '"invalid syntax" g$t$11170$CSxK@))))))) g$C$18411$CSxK@ g$V$18412$CSxK@))) g$t$11170$CSxK@ '(_ any)))) g$C$18413$CSxK@ g$e$11167$CSxK@)))))) (library-letrec*-identity 'g$record-constructor-descriptor-transformer$10665$CSxK@))) (g$when-macro$10666$CSxK@ g$when-macro$14208$CSxK@ ((case-lambda ((g$C$22733$CSxK@) (g$C$22733$CSxK@ (case-lambda ((g$C$18421$CSxK@ g$e$11177$CSxK@) ((case-lambda ((g$C$18419$CSxK@ g$t$11178$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18420$CSxK@) ((case-lambda ((g$C$18418$CSxK@ g$ls/false$11179$CSxK@) (if g$ls/false$11179$CSxK@ (apply g$C$18418$CSxK@ (case-lambda ((g$C$18414$CSxK@ g$test$11180$CSxK@ g$e$11181$CSxK@ g$e*$11182$CSxK@) (cons (case-lambda ((g$V$18415$CSxK@) (cons (case-lambda ((g$V$18416$CSxK@) (list (case-lambda ((g$V$18417$CSxK@) (g$bless$10673$CSxK@ g$C$18414$CSxK@ g$V$18417$CSxK@))) 'if g$test$11180$CSxK@ g$V$18416$CSxK@))) 'begin g$V$18415$CSxK@))) g$e$11181$CSxK@ g$e*$11182$CSxK@))) g$ls/false$11179$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18418$CSxK@ '#f '"invalid syntax" g$t$11178$CSxK@)))) g$C$18419$CSxK@ g$V$18420$CSxK@))) g$t$11178$CSxK@ '(_ any any . each-any)))) g$C$18421$CSxK@ g$e$11177$CSxK@)))))) (library-letrec*-identity 'g$when-macro$10666$CSxK@))) (g$unless-macro$10667$CSxK@ g$unless-macro$14209$CSxK@ ((case-lambda ((g$C$22734$CSxK@) (g$C$22734$CSxK@ (case-lambda ((g$C$18430$CSxK@ g$e$11183$CSxK@) ((case-lambda ((g$C$18428$CSxK@ g$t$11184$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18429$CSxK@) ((case-lambda ((g$C$18427$CSxK@ g$ls/false$11185$CSxK@) (if g$ls/false$11185$CSxK@ (apply g$C$18427$CSxK@ (case-lambda ((g$C$18422$CSxK@ g$test$11186$CSxK@ g$e$11187$CSxK@ g$e*$11188$CSxK@) (cons (case-lambda ((g$V$18423$CSxK@) (cons (case-lambda ((g$V$18424$CSxK@) (list (case-lambda ((g$V$18425$CSxK@) (list (case-lambda ((g$V$18426$CSxK@) (g$bless$10673$CSxK@ g$C$18422$CSxK@ g$V$18426$CSxK@))) 'if g$V$18425$CSxK@ g$V$18424$CSxK@))) 'not g$test$11186$CSxK@))) 'begin g$V$18423$CSxK@))) g$e$11187$CSxK@ g$e*$11188$CSxK@))) g$ls/false$11185$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18427$CSxK@ '#f '"invalid syntax" g$t$11184$CSxK@)))) g$C$18428$CSxK@ g$V$18429$CSxK@))) g$t$11184$CSxK@ '(_ any any . each-any)))) g$C$18430$CSxK@ g$e$11183$CSxK@)))))) (library-letrec*-identity 'g$unless-macro$10667$CSxK@))) (g$if-transformer$10668$CSxK@ g$if-transformer$14210$CSxK@ ((case-lambda ((g$C$22735$CSxK@) (g$C$22735$CSxK@ (case-lambda ((g$C$18445$CSxK@ g$e$11189$CSxK@ g$r$11190$CSxK@ g$mr$11191$CSxK@) ((case-lambda ((g$C$18443$CSxK@ g$t$11192$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18444$CSxK@) ((case-lambda ((g$C$18442$CSxK@ g$ls/false$11193$CSxK@) (if g$ls/false$11193$CSxK@ (apply g$C$18442$CSxK@ (case-lambda ((g$C$18431$CSxK@ g$e0$11194$CSxK@ g$e1$11195$CSxK@ g$e2$11196$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$18432$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$18433$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$18434$CSxK@) (list g$C$18431$CSxK@ 'if g$V$18434$CSxK@ g$V$18433$CSxK@ g$V$18432$CSxK@))) g$e0$11194$CSxK@ g$r$11190$CSxK@ g$mr$11191$CSxK@))) g$e1$11195$CSxK@ g$r$11190$CSxK@ g$mr$11191$CSxK@))) g$e2$11196$CSxK@ g$r$11190$CSxK@ g$mr$11191$CSxK@))) g$ls/false$11193$CSxK@) ((case-lambda ((g$C$18440$CSxK@ g$t$11197$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18441$CSxK@) ((case-lambda ((g$C$18439$CSxK@ g$ls/false$11198$CSxK@) (if g$ls/false$11198$CSxK@ (apply g$C$18439$CSxK@ (case-lambda ((g$C$18435$CSxK@ g$e0$11199$CSxK@ g$e1$11200$CSxK@) (g$build-void$10273$CSxK@ (case-lambda ((g$V$18436$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$18437$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$18438$CSxK@) (list g$C$18435$CSxK@ 'if g$V$18438$CSxK@ g$V$18437$CSxK@ g$V$18436$CSxK@))) g$e0$11199$CSxK@ g$r$11190$CSxK@ g$mr$11191$CSxK@))) g$e1$11200$CSxK@ g$r$11190$CSxK@ g$mr$11191$CSxK@)))))) g$ls/false$11198$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18439$CSxK@ '#f '"invalid syntax" g$t$11197$CSxK@)))) g$C$18440$CSxK@ g$V$18441$CSxK@))) g$t$11197$CSxK@ '(_ any any)))) g$C$18442$CSxK@ g$t$11192$CSxK@)))) g$C$18443$CSxK@ g$V$18444$CSxK@))) g$t$11192$CSxK@ '(_ any any any)))) g$C$18445$CSxK@ g$e$11189$CSxK@)))))) (library-letrec*-identity 'g$if-transformer$10668$CSxK@))) (g$case-macro$10669$CSxK@ g$case-macro$14211$CSxK@ ((case-lambda ((g$C$22736$CSxK@) (g$C$22736$CSxK@ (case-lambda ((g$C$18498$CSxK@ g$e$11201$CSxK@) ((case-lambda ((g$C$18497$CSxK@ g$build-last$11202$CSxK@ g$build-one$11203$CSxK@) (begin (set! g$build-last$11202$CSxK@ (case-lambda ((g$C$18455$CSxK@ g$cls$11222$CSxK@) ((case-lambda ((g$C$18453$CSxK@ g$t$11223$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18454$CSxK@) ((case-lambda ((g$C$18452$CSxK@ g$ls/false$11224$CSxK@) (if g$ls/false$11224$CSxK@ (apply g$C$18452$CSxK@ (case-lambda ((g$C$18446$CSxK@ g$e$11225$CSxK@ g$e*$11226$CSxK@) (cons (case-lambda ((g$V$18447$CSxK@) (cons g$C$18446$CSxK@ 'begin g$V$18447$CSxK@))) g$e$11225$CSxK@ g$e*$11226$CSxK@))) g$ls/false$11224$CSxK@) ((case-lambda ((g$C$18450$CSxK@ g$t$11227$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18451$CSxK@) ((case-lambda ((g$C$18449$CSxK@ g$ls/false$11228$CSxK@) (if g$ls/false$11228$CSxK@ (apply g$C$18449$CSxK@ (case-lambda ((g$C$18448$CSxK@) (g$build-one$11203$CSxK@ g$C$18448$CSxK@ g$cls$11222$CSxK@ '(if #f #f)))) g$ls/false$11228$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18449$CSxK@ '#f '"invalid syntax" g$t$11227$CSxK@)))) g$C$18450$CSxK@ g$V$18451$CSxK@))) g$t$11227$CSxK@ '_))) g$C$18452$CSxK@ g$t$11223$CSxK@)))) g$C$18453$CSxK@ g$V$18454$CSxK@))) g$t$11223$CSxK@ '(#(scheme-id else) any . each-any)))) g$C$18455$CSxK@ g$cls$11222$CSxK@)))) (begin (set! g$build-one$11203$CSxK@ (case-lambda ((g$C$18471$CSxK@ g$cls$11215$CSxK@ g$k$11216$CSxK@) ((case-lambda ((g$C$18469$CSxK@ g$t$11217$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18470$CSxK@) ((case-lambda ((g$C$18468$CSxK@ g$ls/false$11218$CSxK@) (if g$ls/false$11218$CSxK@ (apply g$C$18468$CSxK@ (case-lambda ((g$C$18456$CSxK@ g$d*$11219$CSxK@ g$e$11220$CSxK@ g$e*$11221$CSxK@) (length (case-lambda ((g$V$18457$CSxK@) (= (case-lambda ((g$T$18458$CSxK@) (if g$T$18458$CSxK@ (cons (case-lambda ((g$V$18459$CSxK@) (cons (case-lambda ((g$V$18460$CSxK@) (car (case-lambda ((g$V$18461$CSxK@) (list (case-lambda ((g$V$18462$CSxK@) (list (case-lambda ((g$V$18463$CSxK@) (list g$C$18456$CSxK@ 'if g$V$18463$CSxK@ g$V$18460$CSxK@ g$k$11216$CSxK@))) 'eqv? 't g$V$18462$CSxK@))) 'quote g$V$18461$CSxK@))) g$d*$11219$CSxK@))) 'begin g$V$18459$CSxK@))) g$e$11220$CSxK@ g$e*$11221$CSxK@) (cons (case-lambda ((g$V$18464$CSxK@) (cons (case-lambda ((g$V$18465$CSxK@) (list (case-lambda ((g$V$18466$CSxK@) (list (case-lambda ((g$V$18467$CSxK@) (list g$C$18456$CSxK@ 'if g$V$18467$CSxK@ g$V$18465$CSxK@ g$k$11216$CSxK@))) 'memv 't g$V$18466$CSxK@))) 'quote g$d*$11219$CSxK@))) 'begin g$V$18464$CSxK@))) g$e$11220$CSxK@ g$e*$11221$CSxK@)))) '1 g$V$18457$CSxK@))) g$d*$11219$CSxK@))) g$ls/false$11218$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18468$CSxK@ '#f '"invalid syntax" g$t$11217$CSxK@)))) g$C$18469$CSxK@ g$V$18470$CSxK@))) g$t$11217$CSxK@ '(each-any any . each-any)))) g$C$18471$CSxK@ g$cls$11215$CSxK@)))) ((case-lambda ((g$C$18495$CSxK@ g$t$11204$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18496$CSxK@) ((case-lambda ((g$C$18494$CSxK@ g$ls/false$11205$CSxK@) (if g$ls/false$11205$CSxK@ (apply g$C$18494$CSxK@ (case-lambda ((g$C$18472$CSxK@ g$expr$11206$CSxK@) (list (case-lambda ((g$V$18473$CSxK@) (list (case-lambda ((g$V$18474$CSxK@) (cons (case-lambda ((g$V$18475$CSxK@) (cons (case-lambda ((g$V$18476$CSxK@) (g$bless$10673$CSxK@ g$C$18472$CSxK@ g$V$18476$CSxK@))) 'let g$V$18475$CSxK@))) g$V$18474$CSxK@ '((if #f #f))))) g$V$18473$CSxK@))) 't g$expr$11206$CSxK@))) g$ls/false$11205$CSxK@) ((case-lambda ((g$C$18492$CSxK@ g$t$11207$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18493$CSxK@) ((case-lambda ((g$C$18491$CSxK@ g$ls/false$11208$CSxK@) (if g$ls/false$11208$CSxK@ (apply g$C$18491$CSxK@ (case-lambda ((g$C$18485$CSxK@ g$expr$11209$CSxK@ g$cls$11210$CSxK@ g$cls*$11211$CSxK@) ((case-lambda ((g$C$18484$CSxK@ g$f$11212$CSxK@) ((case-lambda ((g$C$18478$CSxK@ g$f$18477$CSxK@) (begin (set! g$f$11212$CSxK@ g$f$18477$CSxK@) (g$C$18478$CSxK@ g$f$11212$CSxK@)))) g$C$18484$CSxK@ (case-lambda ((g$C$18479$CSxK@ g$cls$11213$CSxK@ g$cls*$11214$CSxK@) (null? (case-lambda ((g$T$18480$CSxK@) (if g$T$18480$CSxK@ (g$build-last$11202$CSxK@ g$C$18479$CSxK@ g$cls$11213$CSxK@) (cdr (case-lambda ((g$V$18481$CSxK@) (car (case-lambda ((g$V$18482$CSxK@) (g$f$11212$CSxK@ (case-lambda ((g$V$18483$CSxK@) (g$build-one$11203$CSxK@ g$C$18479$CSxK@ g$cls$11213$CSxK@ g$V$18483$CSxK@))) g$V$18482$CSxK@ g$V$18481$CSxK@))) g$cls*$11214$CSxK@))) g$cls*$11214$CSxK@)))) g$cls*$11214$CSxK@)))))) (case-lambda ((g$V$18486$CSxK@) (g$V$18486$CSxK@ (case-lambda ((g$V$18487$CSxK@) (list (case-lambda ((g$V$18488$CSxK@) (list (case-lambda ((g$V$18489$CSxK@) (list (case-lambda ((g$V$18490$CSxK@) (g$bless$10673$CSxK@ g$C$18485$CSxK@ g$V$18490$CSxK@))) 'let g$V$18489$CSxK@ g$V$18487$CSxK@))) g$V$18488$CSxK@))) 't g$expr$11209$CSxK@))) g$cls$11210$CSxK@ g$cls*$11211$CSxK@))) uninitialized))) g$ls/false$11208$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18491$CSxK@ '#f '"invalid syntax" g$t$11207$CSxK@)))) g$C$18492$CSxK@ g$V$18493$CSxK@))) g$t$11207$CSxK@ '(_ any any . each-any)))) g$C$18494$CSxK@ g$t$11204$CSxK@)))) g$C$18495$CSxK@ g$V$18496$CSxK@))) g$t$11204$CSxK@ '(_ any)))) g$C$18497$CSxK@ g$e$11201$CSxK@))))) g$C$18498$CSxK@ uninitialized uninitialized)))))) (library-letrec*-identity 'g$case-macro$10669$CSxK@))) (g$quote-transformer$10670$CSxK@ g$quote-transformer$14212$CSxK@ ((case-lambda ((g$C$22737$CSxK@) (g$C$22737$CSxK@ (case-lambda ((g$C$18504$CSxK@ g$e$11229$CSxK@ g$r$11230$CSxK@ g$mr$11231$CSxK@) ((case-lambda ((g$C$18502$CSxK@ g$t$11232$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18503$CSxK@) ((case-lambda ((g$C$18501$CSxK@ g$ls/false$11233$CSxK@) (if g$ls/false$11233$CSxK@ (apply g$C$18501$CSxK@ (case-lambda ((g$C$18499$CSxK@ g$datum$11234$CSxK@) (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$18500$CSxK@) (list g$C$18499$CSxK@ 'quote g$V$18500$CSxK@))) g$datum$11234$CSxK@))) g$ls/false$11233$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18501$CSxK@ '#f '"invalid syntax" g$t$11232$CSxK@)))) g$C$18502$CSxK@ g$V$18503$CSxK@))) g$t$11232$CSxK@ '(_ any)))) g$C$18504$CSxK@ g$e$11229$CSxK@)))))) (library-letrec*-identity 'g$quote-transformer$10670$CSxK@))) (g$case-lambda-transformer$10671$CSxK@ g$case-lambda-transformer$14213$CSxK@ ((case-lambda ((g$C$22738$CSxK@) (g$C$22738$CSxK@ (case-lambda ((g$C$18513$CSxK@ g$e$11235$CSxK@ g$r$11236$CSxK@ g$mr$11237$CSxK@) ((case-lambda ((g$C$18511$CSxK@ g$t$11238$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18512$CSxK@) ((case-lambda ((g$C$18510$CSxK@ g$ls/false$11239$CSxK@) (if g$ls/false$11239$CSxK@ (apply g$C$18510$CSxK@ (case-lambda ((g$C$18509$CSxK@ g$fmls*$11240$CSxK@ g$b*$11241$CSxK@ g$b**$11242$CSxK@) (call-with-values g$C$18509$CSxK@ (case-lambda ((g$C$18505$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18506$CSxK@) (g$chi-lambda-clause*$10732$CSxK@ g$C$18505$CSxK@ g$e$11235$CSxK@ g$fmls*$11240$CSxK@ g$V$18506$CSxK@ g$r$11236$CSxK@ g$mr$11237$CSxK@))) cons g$b*$11241$CSxK@ g$b**$11242$CSxK@))) (case-lambda ((g$C$18508$CSxK@ g$fmls*$11245$CSxK@ g$body*$11246$CSxK@) ((case-lambda ((g$C$18507$CSxK@ g$body*$11247$CSxK@ g$fmls*$11248$CSxK@) (g$build-case-lambda$10270$CSxK@ g$C$18507$CSxK@ '#f g$fmls*$11248$CSxK@ g$body*$11247$CSxK@))) g$C$18508$CSxK@ g$body*$11246$CSxK@ g$fmls*$11245$CSxK@)))))) g$ls/false$11239$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18510$CSxK@ '#f '"invalid syntax" g$t$11238$CSxK@)))) g$C$18511$CSxK@ g$V$18512$CSxK@))) g$t$11238$CSxK@ '(_ . #(each (any any . each-any)))))) g$C$18513$CSxK@ g$e$11235$CSxK@)))))) (library-letrec*-identity 'g$case-lambda-transformer$10671$CSxK@))) (g$lambda-transformer$10672$CSxK@ g$lambda-transformer$14214$CSxK@ ((case-lambda ((g$C$22739$CSxK@) (g$C$22739$CSxK@ (case-lambda ((g$C$18522$CSxK@ g$e$11249$CSxK@ g$r$11250$CSxK@ g$mr$11251$CSxK@) ((case-lambda ((g$C$18520$CSxK@ g$t$11252$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18521$CSxK@) ((case-lambda ((g$C$18519$CSxK@ g$ls/false$11253$CSxK@) (if g$ls/false$11253$CSxK@ (apply g$C$18519$CSxK@ (case-lambda ((g$C$18518$CSxK@ g$fmls$11254$CSxK@ g$b$11255$CSxK@ g$b*$11256$CSxK@) (call-with-values g$C$18518$CSxK@ (case-lambda ((g$C$18514$CSxK@) (cons (case-lambda ((g$V$18515$CSxK@) (g$chi-lambda-clause$10731$CSxK@ g$C$18514$CSxK@ g$e$11249$CSxK@ g$fmls$11254$CSxK@ g$V$18515$CSxK@ g$r$11250$CSxK@ g$mr$11251$CSxK@))) g$b$11255$CSxK@ g$b*$11256$CSxK@))) (case-lambda ((g$C$18517$CSxK@ g$fmls$11259$CSxK@ g$body$11260$CSxK@) ((case-lambda ((g$C$18516$CSxK@ g$body$11261$CSxK@ g$fmls$11262$CSxK@) (g$build-lambda$10269$CSxK@ g$C$18516$CSxK@ '#f g$fmls$11262$CSxK@ g$body$11261$CSxK@))) g$C$18517$CSxK@ g$body$11260$CSxK@ g$fmls$11259$CSxK@)))))) g$ls/false$11253$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18519$CSxK@ '#f '"invalid syntax" g$t$11252$CSxK@)))) g$C$18520$CSxK@ g$V$18521$CSxK@))) g$t$11252$CSxK@ '(_ any any . each-any)))) g$C$18522$CSxK@ g$e$11249$CSxK@)))))) (library-letrec*-identity 'g$lambda-transformer$10672$CSxK@))) (g$bless$10673$CSxK@ g$bless$14215$CSxK@ ((case-lambda ((g$C$22740$CSxK@) (g$C$22740$CSxK@ (case-lambda ((g$C$18535$CSxK@ g$x$11263$CSxK@) ((case-lambda ((g$C$18534$CSxK@ g$f$11264$CSxK@) ((case-lambda ((g$C$18524$CSxK@ g$f$18523$CSxK@) (begin (set! g$f$11264$CSxK@ g$f$18523$CSxK@) (g$C$18524$CSxK@ g$f$11264$CSxK@)))) g$C$18534$CSxK@ (case-lambda ((g$C$18525$CSxK@ g$x$11265$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$18526$CSxK@) (if g$T$18526$CSxK@ (g$C$18525$CSxK@ g$x$11265$CSxK@) (pair? (case-lambda ((g$T$18527$CSxK@) (if g$T$18527$CSxK@ (cdr (case-lambda ((g$V$18528$CSxK@) (g$f$11264$CSxK@ (case-lambda ((g$V$18529$CSxK@) (car (case-lambda ((g$V$18530$CSxK@) (g$f$11264$CSxK@ (case-lambda ((g$V$18531$CSxK@) (cons g$C$18525$CSxK@ g$V$18531$CSxK@ g$V$18529$CSxK@))) g$V$18530$CSxK@))) g$x$11265$CSxK@))) g$V$18528$CSxK@))) g$x$11265$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$18532$CSxK@) (if g$T$18532$CSxK@ (g$scheme-stx$10653$CSxK@ g$C$18525$CSxK@ g$x$11265$CSxK@) (g$vector?$7382$CSxK@ (case-lambda ((g$T$18533$CSxK@) (if g$T$18533$CSxK@ (g$vector-map$7444$CSxK@ g$C$18525$CSxK@ g$f$11264$CSxK@ g$x$11265$CSxK@) (g$C$18525$CSxK@ g$x$11265$CSxK@)))) g$x$11265$CSxK@)))) g$x$11265$CSxK@)))) g$x$11265$CSxK@)))) g$x$11265$CSxK@)))))) (case-lambda ((g$V$18536$CSxK@) (g$V$18536$CSxK@ (case-lambda ((g$V$18537$CSxK@) (g$mkstx$10335$CSxK@ g$C$18535$CSxK@ g$V$18537$CSxK@ '() '() '()))) g$x$11263$CSxK@))) uninitialized)))))) (library-letrec*-identity 'g$bless$10673$CSxK@))) (g$with-syntax-macro$10674$CSxK@ g$with-syntax-macro$14216$CSxK@ ((case-lambda ((g$C$22741$CSxK@) (g$C$22741$CSxK@ (case-lambda ((g$C$18582$CSxK@ g$e$11266$CSxK@) ((case-lambda ((g$C$18580$CSxK@ g$t$11267$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18581$CSxK@) ((case-lambda ((g$C$18579$CSxK@ g$ls/false$11268$CSxK@) (if g$ls/false$11268$CSxK@ (apply g$C$18579$CSxK@ (case-lambda ((g$C$18576$CSxK@ g$pat*$11269$CSxK@ g$expr*$11270$CSxK@ g$b$11271$CSxK@ g$b*$11272$CSxK@) ((case-lambda ((g$C$18575$CSxK@ g$f$11278$CSxK@) ((case-lambda ((g$C$18566$CSxK@ g$f$18565$CSxK@) (begin (set! g$f$11278$CSxK@ g$f$18565$CSxK@) (g$C$18566$CSxK@ g$f$11278$CSxK@)))) g$C$18575$CSxK@ (case-lambda ((g$C$18573$CSxK@ g$pat*$11279$CSxK@) (null? (case-lambda ((g$T$18574$CSxK@) (if g$T$18574$CSxK@ (g$C$18573$CSxK@ '()) (call-with-values g$C$18573$CSxK@ (case-lambda ((g$C$18567$CSxK@) (car (case-lambda ((g$V$18568$CSxK@) (g$convert-pattern$10709$CSxK@ g$C$18567$CSxK@ g$V$18568$CSxK@ '()))) g$pat*$11279$CSxK@))) (case-lambda ((g$C$18572$CSxK@ g$pat$11282$CSxK@ g$idn*$11283$CSxK@) ((case-lambda ((g$C$18569$CSxK@ g$idn*$11284$CSxK@ g$pat$11285$CSxK@) (cdr (case-lambda ((g$V$18570$CSxK@) (g$f$11278$CSxK@ (case-lambda ((g$V$18571$CSxK@) (append g$C$18569$CSxK@ g$idn*$11284$CSxK@ g$V$18571$CSxK@))) g$V$18570$CSxK@))) g$pat*$11279$CSxK@))) g$C$18572$CSxK@ g$idn*$11283$CSxK@ g$pat$11282$CSxK@))))))) g$pat*$11279$CSxK@)))))) (case-lambda ((g$V$18577$CSxK@) (g$V$18577$CSxK@ (case-lambda ((g$V$18578$CSxK@) ((case-lambda ((g$C$18561$CSxK@ g$idn*$11273$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18562$CSxK@) (g$verify-formals$10730$CSxK@ (case-lambda (g$IGNORE$18563$CSxK@ (g$generate-temporaries$10818$CSxK@ (case-lambda ((g$V$18564$CSxK@) ((case-lambda ((g$C$18556$CSxK@ g$t*$11274$CSxK@) ((case-lambda ((g$C$18555$CSxK@ g$f$11275$CSxK@) ((case-lambda ((g$C$18539$CSxK@ g$f$18538$CSxK@) (begin (set! g$f$11275$CSxK@ g$f$18538$CSxK@) (g$C$18539$CSxK@ g$f$11275$CSxK@)))) g$C$18555$CSxK@ (case-lambda ((g$C$18540$CSxK@ g$pat*$11276$CSxK@ g$t*$11277$CSxK@) (null? (case-lambda ((g$T$18541$CSxK@) (if g$T$18541$CSxK@ (cons (case-lambda ((g$V$18542$CSxK@) (cons (case-lambda ((g$V$18543$CSxK@) (cons g$C$18540$CSxK@ 'begin g$V$18543$CSxK@))) '#f g$V$18542$CSxK@))) g$b$11271$CSxK@ g$b*$11272$CSxK@) (car (case-lambda ((g$V$18544$CSxK@) (car (case-lambda ((g$V$18545$CSxK@) (list (case-lambda ((g$V$18546$CSxK@) (list (case-lambda ((g$V$18547$CSxK@) (list (case-lambda ((g$V$18548$CSxK@) (cdr (case-lambda ((g$V$18549$CSxK@) (cdr (case-lambda ((g$V$18550$CSxK@) (g$f$11275$CSxK@ (case-lambda ((g$V$18551$CSxK@) (car (case-lambda ((g$V$18552$CSxK@) (list (case-lambda ((g$V$18553$CSxK@) (car (case-lambda ((g$V$18554$CSxK@) (list g$C$18540$CSxK@ 'syntax-case g$V$18554$CSxK@ '() g$V$18553$CSxK@ g$V$18548$CSxK@))) g$t*$11277$CSxK@))) g$V$18552$CSxK@ g$V$18551$CSxK@))) g$pat*$11276$CSxK@))) g$V$18550$CSxK@ g$V$18549$CSxK@))) g$pat*$11276$CSxK@))) g$t*$11277$CSxK@))) '_ g$V$18547$CSxK@))) 'assertion-violation ''with-syntax '"pattern does not match value" g$V$18546$CSxK@ g$V$18544$CSxK@))) 'quote g$V$18545$CSxK@))) g$pat*$11276$CSxK@))) g$t*$11277$CSxK@)))) g$pat*$11276$CSxK@)))))) (case-lambda ((g$V$18557$CSxK@) (g$V$18557$CSxK@ (case-lambda ((g$V$18558$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18559$CSxK@) (list (case-lambda ((g$V$18560$CSxK@) (g$bless$10673$CSxK@ g$C$18556$CSxK@ g$V$18560$CSxK@))) 'let g$V$18559$CSxK@ g$V$18558$CSxK@))) list g$t*$11274$CSxK@ g$expr*$11270$CSxK@))) g$pat*$11269$CSxK@ g$t*$11274$CSxK@))) uninitialized))) g$C$18561$CSxK@ g$V$18564$CSxK@))) g$expr*$11270$CSxK@))) g$V$18562$CSxK@ g$e$11266$CSxK@))) car g$idn*$11273$CSxK@))) g$C$18576$CSxK@ g$V$18578$CSxK@))) g$pat*$11269$CSxK@))) uninitialized))) g$ls/false$11268$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18579$CSxK@ '#f '"invalid syntax" g$t$11267$CSxK@)))) g$C$18580$CSxK@ g$V$18581$CSxK@))) g$t$11267$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$18582$CSxK@ g$e$11266$CSxK@)))))) (library-letrec*-identity 'g$with-syntax-macro$10674$CSxK@))) (g$invalid-fmls-error$10675$CSxK@ g$invalid-fmls-error$14217$CSxK@ ((case-lambda ((g$C$22742$CSxK@) (g$C$22742$CSxK@ (case-lambda ((g$C$18611$CSxK@ g$stx$11286$CSxK@ g$fmls$11287$CSxK@) ((case-lambda ((g$C$18609$CSxK@ g$t$11288$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18610$CSxK@) ((case-lambda ((g$C$18608$CSxK@ g$ls/false$11289$CSxK@) (if g$ls/false$11289$CSxK@ (apply g$C$18608$CSxK@ (case-lambda ((g$C$18598$CSxK@ g$id*$11290$CSxK@ g$last$11291$CSxK@) ((case-lambda ((g$J$18601$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$18602$CSxK@) (if g$T$18602$CSxK@ (cons g$J$18601$CSxK@ g$last$11291$CSxK@ g$id*$11290$CSxK@) (g$syntax-null?$10342$CSxK@ (case-lambda ((g$T$18603$CSxK@) (if g$T$18603$CSxK@ (g$J$18601$CSxK@ g$id*$11290$CSxK@) (g$syntax-violation$10828$CSxK@ g$J$18601$CSxK@ '#f '"not an identifier" g$stx$11286$CSxK@ g$last$11291$CSxK@)))) g$last$11291$CSxK@)))) g$last$11291$CSxK@))) (case-lambda ((g$V$18599$CSxK@) ((case-lambda ((g$C$18597$CSxK@ g$f$11292$CSxK@) ((case-lambda ((g$C$18584$CSxK@ g$f$18583$CSxK@) (begin (set! g$f$11292$CSxK@ g$f$18583$CSxK@) (g$C$18584$CSxK@ g$f$11292$CSxK@)))) g$C$18597$CSxK@ (case-lambda ((g$C$18585$CSxK@ g$id*$11293$CSxK@) (null? (case-lambda ((g$T$18586$CSxK@) (if g$T$18586$CSxK@ (values g$C$18585$CSxK@) (car (case-lambda ((g$V$18587$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$18588$CSxK@) (not (case-lambda ((g$T$18589$CSxK@) (if g$T$18589$CSxK@ (car (case-lambda ((g$V$18590$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18585$CSxK@ '#f '"not an identifier" g$stx$11286$CSxK@ g$V$18590$CSxK@))) g$id*$11293$CSxK@) (cdr (case-lambda ((g$V$18591$CSxK@) (g$f$11292$CSxK@ (case-lambda (g$IGNORE$18592$CSxK@ (cdr (case-lambda ((g$V$18593$CSxK@) (car (case-lambda ((g$V$18594$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$18595$CSxK@) (if g$T$18595$CSxK@ (car (case-lambda ((g$V$18596$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18585$CSxK@ '#f '"duplicate binding" g$stx$11286$CSxK@ g$V$18596$CSxK@))) g$id*$11293$CSxK@) (void g$C$18585$CSxK@)))) g$V$18594$CSxK@ g$V$18593$CSxK@))) g$id*$11293$CSxK@))) g$id*$11293$CSxK@))) g$V$18591$CSxK@))) g$id*$11293$CSxK@)))) g$V$18588$CSxK@))) g$V$18587$CSxK@))) g$id*$11293$CSxK@)))) g$id*$11293$CSxK@)))))) (case-lambda ((g$V$18600$CSxK@) (g$V$18600$CSxK@ g$C$18598$CSxK@ g$V$18599$CSxK@))) uninitialized)))))) g$ls/false$11289$CSxK@) ((case-lambda ((g$C$18606$CSxK@ g$t$11294$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18607$CSxK@) ((case-lambda ((g$C$18605$CSxK@ g$ls/false$11295$CSxK@) (if g$ls/false$11295$CSxK@ (apply g$C$18605$CSxK@ (case-lambda ((g$C$18604$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18604$CSxK@ '#f '"malformed binding form" g$stx$11286$CSxK@ g$fmls$11287$CSxK@))) g$ls/false$11295$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18605$CSxK@ '#f '"invalid syntax" g$t$11294$CSxK@)))) g$C$18606$CSxK@ g$V$18607$CSxK@))) g$t$11294$CSxK@ '_))) g$C$18608$CSxK@ g$t$11288$CSxK@)))) g$C$18609$CSxK@ g$V$18610$CSxK@))) g$t$11288$CSxK@ '#(each+ any () any)))) g$C$18611$CSxK@ g$fmls$11287$CSxK@)))))) (library-letrec*-identity 'g$invalid-fmls-error$10675$CSxK@))) (g$let-macro$10676$CSxK@ g$let-macro$14218$CSxK@ ((case-lambda ((g$C$22743$CSxK@) (g$C$22743$CSxK@ (case-lambda ((g$C$18636$CSxK@ g$stx$11296$CSxK@) ((case-lambda ((g$C$18634$CSxK@ g$t$11297$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18635$CSxK@) ((case-lambda ((g$C$18633$CSxK@ g$ls/false$11298$CSxK@) (if g$ls/false$11298$CSxK@ (apply g$C$18633$CSxK@ (case-lambda ((g$C$18612$CSxK@ g$lhs*$11299$CSxK@ g$rhs*$11300$CSxK@ g$b$11301$CSxK@ g$b*$11302$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$18613$CSxK@) (if g$T$18613$CSxK@ (cons (case-lambda ((g$V$18614$CSxK@) (cons (case-lambda ((g$V$18615$CSxK@) (cons (case-lambda ((g$V$18616$CSxK@) (cons (case-lambda ((g$V$18617$CSxK@) (g$bless$10673$CSxK@ g$C$18612$CSxK@ g$V$18617$CSxK@))) g$V$18616$CSxK@ g$rhs*$11300$CSxK@))) 'lambda g$V$18615$CSxK@))) g$lhs*$11299$CSxK@ g$V$18614$CSxK@))) g$b$11301$CSxK@ g$b*$11302$CSxK@) (g$invalid-fmls-error$10675$CSxK@ g$C$18612$CSxK@ g$stx$11296$CSxK@ g$lhs*$11299$CSxK@)))) g$lhs*$11299$CSxK@))) g$ls/false$11298$CSxK@) ((case-lambda ((g$C$18631$CSxK@ g$t$11303$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18632$CSxK@) ((case-lambda ((g$C$18628$CSxK@ g$ls/false$11304$CSxK@) ((case-lambda ((g$J$18630$CSxK@) (if g$ls/false$11304$CSxK@ (apply g$J$18630$CSxK@ (case-lambda ((g$C$18618$CSxK@ g$f$11305$CSxK@ g$lhs*$11306$CSxK@ g$rhs*$11307$CSxK@ g$b$11308$CSxK@ g$b*$11309$CSxK@) (g$id?$10347$CSxK@ g$C$18618$CSxK@ g$f$11305$CSxK@))) g$ls/false$11304$CSxK@) (g$J$18630$CSxK@ '#f)))) (case-lambda ((g$T$18629$CSxK@) (if g$T$18629$CSxK@ (apply g$C$18628$CSxK@ (case-lambda ((g$C$18619$CSxK@ g$f$11310$CSxK@ g$lhs*$11311$CSxK@ g$rhs*$11312$CSxK@ g$b$11313$CSxK@ g$b*$11314$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$18620$CSxK@) (if g$T$18620$CSxK@ (cons (case-lambda ((g$V$18621$CSxK@) (cons (case-lambda ((g$V$18622$CSxK@) (cons (case-lambda ((g$V$18623$CSxK@) (list (case-lambda ((g$V$18624$CSxK@) (list (case-lambda ((g$V$18625$CSxK@) (list (case-lambda ((g$V$18626$CSxK@) (cons (case-lambda ((g$V$18627$CSxK@) (g$bless$10673$CSxK@ g$C$18619$CSxK@ g$V$18627$CSxK@))) g$V$18626$CSxK@ g$rhs*$11312$CSxK@))) 'letrec g$V$18625$CSxK@ g$f$11310$CSxK@))) g$V$18624$CSxK@))) g$f$11310$CSxK@ g$V$18623$CSxK@))) 'lambda g$V$18622$CSxK@))) g$lhs*$11311$CSxK@ g$V$18621$CSxK@))) g$b$11313$CSxK@ g$b*$11314$CSxK@) (g$invalid-fmls-error$10675$CSxK@ g$C$18619$CSxK@ g$stx$11296$CSxK@ g$lhs*$11311$CSxK@)))) g$lhs*$11311$CSxK@))) g$ls/false$11304$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18628$CSxK@ '#f '"invalid syntax" g$t$11303$CSxK@))))))) g$C$18631$CSxK@ g$V$18632$CSxK@))) g$t$11303$CSxK@ '(_ any #(each (any any)) any . each-any)))) g$C$18633$CSxK@ g$t$11297$CSxK@)))) g$C$18634$CSxK@ g$V$18635$CSxK@))) g$t$11297$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$18636$CSxK@ g$stx$11296$CSxK@)))))) (library-letrec*-identity 'g$let-macro$10676$CSxK@))) (g$let-values-macro$10677$CSxK@ g$let-values-macro$14219$CSxK@ ((case-lambda ((g$C$22744$CSxK@) (g$C$22744$CSxK@ (case-lambda ((g$C$18712$CSxK@ g$stx$11315$CSxK@) ((case-lambda ((g$C$18711$CSxK@ g$rename$11316$CSxK@ g$rename*$11317$CSxK@) (begin (set! g$rename$11316$CSxK@ (case-lambda ((g$C$18640$CSxK@ g$x$11367$CSxK@ g$old*$11368$CSxK@ g$new*$11369$CSxK@) ((case-lambda ((g$J$18647$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$18648$CSxK@) (not (case-lambda ((g$T$18649$CSxK@) (if g$T$18649$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$18647$CSxK@ '#f '"not an indentifier" g$stx$11315$CSxK@ g$x$11367$CSxK@) (void g$J$18647$CSxK@)))) g$V$18648$CSxK@))) g$x$11367$CSxK@))) (case-lambda (g$IGNORE$18641$CSxK@ ((case-lambda ((g$J$18645$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$18646$CSxK@) (if g$T$18646$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$18645$CSxK@ '#f '"duplicate binding" g$stx$11315$CSxK@ g$x$11367$CSxK@) (void g$J$18645$CSxK@)))) g$x$11367$CSxK@ g$old*$11368$CSxK@))) (case-lambda (g$IGNORE$18642$CSxK@ (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$18643$CSxK@) (gensym (case-lambda ((g$V$18644$CSxK@) ((case-lambda ((g$C$18637$CSxK@ g$y$11370$CSxK@) (cons (case-lambda ((g$V$18638$CSxK@) (cons (case-lambda ((g$V$18639$CSxK@) (values g$C$18637$CSxK@ g$y$11370$CSxK@ g$V$18639$CSxK@ g$V$18638$CSxK@))) g$x$11367$CSxK@ g$old*$11368$CSxK@))) g$y$11370$CSxK@ g$new*$11369$CSxK@))) g$C$18640$CSxK@ g$V$18644$CSxK@))) g$V$18643$CSxK@))) g$x$11367$CSxK@)))))))))) (begin (set! g$rename*$11317$CSxK@ (case-lambda ((g$C$18657$CSxK@ g$x*$11358$CSxK@ g$old*$11359$CSxK@ g$new*$11360$CSxK@) (null? (case-lambda ((g$T$18658$CSxK@) (if g$T$18658$CSxK@ (values g$C$18657$CSxK@ '() g$old*$11359$CSxK@ g$new*$11360$CSxK@) (call-with-values g$C$18657$CSxK@ (case-lambda ((g$C$18650$CSxK@) (car (case-lambda ((g$V$18651$CSxK@) (g$rename$11316$CSxK@ g$C$18650$CSxK@ g$V$18651$CSxK@ g$old*$11359$CSxK@ g$new*$11360$CSxK@))) g$x*$11358$CSxK@))) (case-lambda ((g$C$18656$CSxK@ g$x$11361$CSxK@ g$old*$11362$CSxK@ g$new*$11363$CSxK@) (call-with-values g$C$18656$CSxK@ (case-lambda ((g$C$18652$CSxK@) (cdr (case-lambda ((g$V$18653$CSxK@) (g$rename*$11317$CSxK@ g$C$18652$CSxK@ g$V$18653$CSxK@ g$old*$11362$CSxK@ g$new*$11363$CSxK@))) g$x*$11358$CSxK@))) (case-lambda ((g$C$18654$CSxK@ g$x*$11364$CSxK@ g$old*$11365$CSxK@ g$new*$11366$CSxK@) (cons (case-lambda ((g$V$18655$CSxK@) (values g$C$18654$CSxK@ g$V$18655$CSxK@ g$old*$11365$CSxK@ g$new*$11366$CSxK@))) g$x$11361$CSxK@ g$x*$11364$CSxK@)))))))))) g$x*$11358$CSxK@)))) ((case-lambda ((g$C$18709$CSxK@ g$t$11318$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18710$CSxK@) ((case-lambda ((g$C$18708$CSxK@ g$ls/false$11319$CSxK@) (if g$ls/false$11319$CSxK@ (apply g$C$18708$CSxK@ (case-lambda ((g$C$18659$CSxK@ g$b$11320$CSxK@ g$b*$11321$CSxK@) (g$bless$10673$CSxK@ (case-lambda ((g$V$18660$CSxK@) (g$cons*$6715$CSxK@ g$C$18659$CSxK@ g$V$18660$CSxK@ '() g$b$11320$CSxK@ g$b*$11321$CSxK@))) 'let))) g$ls/false$11319$CSxK@) ((case-lambda ((g$C$18706$CSxK@ g$t$11322$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18707$CSxK@) ((case-lambda ((g$C$18705$CSxK@ g$ls/false$11323$CSxK@) (if g$ls/false$11323$CSxK@ (apply g$C$18705$CSxK@ (case-lambda ((g$C$18702$CSxK@ g$lhs*$11324$CSxK@ g$rhs*$11325$CSxK@ g$b$11326$CSxK@ g$b*$11327$CSxK@) ((case-lambda ((g$C$18701$CSxK@ g$f$11328$CSxK@) ((case-lambda ((g$C$18662$CSxK@ g$f$18661$CSxK@) (begin (set! g$f$11328$CSxK@ g$f$18661$CSxK@) (g$C$18662$CSxK@ g$f$11328$CSxK@)))) g$C$18701$CSxK@ (case-lambda ((g$C$18695$CSxK@ g$lhs*$11329$CSxK@ g$rhs*$11330$CSxK@ g$old*$11331$CSxK@ g$new*$11332$CSxK@) (null? (case-lambda ((g$T$18696$CSxK@) (if g$T$18696$CSxK@ (cons (case-lambda ((g$V$18697$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18698$CSxK@) (cons (case-lambda ((g$V$18699$CSxK@) (cons g$C$18695$CSxK@ 'let g$V$18699$CSxK@))) g$V$18698$CSxK@ g$V$18697$CSxK@))) list g$old*$11331$CSxK@ g$new*$11332$CSxK@))) g$b$11326$CSxK@ g$b*$11327$CSxK@) (car (case-lambda ((g$V$18700$CSxK@) ((case-lambda ((g$C$18693$CSxK@ g$t$11333$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18694$CSxK@) ((case-lambda ((g$C$18692$CSxK@ g$ls/false$11334$CSxK@) (if g$ls/false$11334$CSxK@ (apply g$C$18692$CSxK@ (case-lambda ((g$C$18672$CSxK@ g$x*$11335$CSxK@) (call-with-values g$C$18672$CSxK@ (case-lambda ((g$C$18663$CSxK@) (g$rename*$11317$CSxK@ g$C$18663$CSxK@ g$x*$11335$CSxK@ g$old*$11331$CSxK@ g$new*$11332$CSxK@))) (case-lambda ((g$C$18671$CSxK@ g$y*$11339$CSxK@ g$old*$11340$CSxK@ g$new*$11341$CSxK@) ((case-lambda ((g$C$18664$CSxK@ g$new*$11342$CSxK@ g$old*$11343$CSxK@ g$y*$11344$CSxK@) (cdr (case-lambda ((g$V$18665$CSxK@) (cdr (case-lambda ((g$V$18666$CSxK@) (g$f$11328$CSxK@ (case-lambda ((g$V$18667$CSxK@) (list (case-lambda ((g$V$18668$CSxK@) (car (case-lambda ((g$V$18669$CSxK@) (list (case-lambda ((g$V$18670$CSxK@) (list g$C$18664$CSxK@ 'call-with-values g$V$18670$CSxK@ g$V$18668$CSxK@))) 'lambda '() g$V$18669$CSxK@))) g$rhs*$11330$CSxK@))) 'lambda g$y*$11344$CSxK@ g$V$18667$CSxK@))) g$V$18666$CSxK@ g$V$18665$CSxK@ g$old*$11343$CSxK@ g$new*$11342$CSxK@))) g$lhs*$11329$CSxK@))) g$rhs*$11330$CSxK@))) g$C$18671$CSxK@ g$new*$11341$CSxK@ g$old*$11340$CSxK@ g$y*$11339$CSxK@)))))) g$ls/false$11334$CSxK@) ((case-lambda ((g$C$18690$CSxK@ g$t$11345$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18691$CSxK@) ((case-lambda ((g$C$18689$CSxK@ g$ls/false$11346$CSxK@) (if g$ls/false$11346$CSxK@ (apply g$C$18689$CSxK@ (case-lambda ((g$C$18684$CSxK@ g$x*$11347$CSxK@ g$x$11348$CSxK@) (call-with-values g$C$18684$CSxK@ (case-lambda ((g$C$18673$CSxK@) (g$rename$11316$CSxK@ g$C$18673$CSxK@ g$x$11348$CSxK@ g$old*$11331$CSxK@ g$new*$11332$CSxK@))) (case-lambda ((g$C$18683$CSxK@ g$y$11349$CSxK@ g$old*$11350$CSxK@ g$new*$11351$CSxK@) (call-with-values g$C$18683$CSxK@ (case-lambda ((g$C$18674$CSxK@) (g$rename*$11317$CSxK@ g$C$18674$CSxK@ g$x*$11347$CSxK@ g$old*$11350$CSxK@ g$new*$11351$CSxK@))) (case-lambda ((g$C$18675$CSxK@ g$y*$11352$CSxK@ g$old*$11353$CSxK@ g$new*$11354$CSxK@) (cdr (case-lambda ((g$V$18676$CSxK@) (cdr (case-lambda ((g$V$18677$CSxK@) (g$f$11328$CSxK@ (case-lambda ((g$V$18678$CSxK@) (append (case-lambda ((g$V$18679$CSxK@) (list (case-lambda ((g$V$18680$CSxK@) (car (case-lambda ((g$V$18681$CSxK@) (list (case-lambda ((g$V$18682$CSxK@) (list g$C$18675$CSxK@ 'call-with-values g$V$18682$CSxK@ g$V$18680$CSxK@))) 'lambda '() g$V$18681$CSxK@))) g$rhs*$11330$CSxK@))) 'lambda g$V$18679$CSxK@ g$V$18678$CSxK@))) g$y*$11352$CSxK@ g$y$11349$CSxK@))) g$V$18677$CSxK@ g$V$18676$CSxK@ g$old*$11353$CSxK@ g$new*$11354$CSxK@))) g$lhs*$11329$CSxK@))) g$rhs*$11330$CSxK@))))))))) g$ls/false$11346$CSxK@) ((case-lambda ((g$C$18687$CSxK@ g$t$11355$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18688$CSxK@) ((case-lambda ((g$C$18686$CSxK@ g$ls/false$11356$CSxK@) (if g$ls/false$11356$CSxK@ (apply g$C$18686$CSxK@ (case-lambda ((g$C$18685$CSxK@ g$others$11357$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18685$CSxK@ '#f '"malformed bindings" g$stx$11315$CSxK@ g$others$11357$CSxK@))) g$ls/false$11356$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18686$CSxK@ '#f '"invalid syntax" g$t$11355$CSxK@)))) g$C$18687$CSxK@ g$V$18688$CSxK@))) g$t$11355$CSxK@ 'any))) g$C$18689$CSxK@ g$t$11345$CSxK@)))) g$C$18690$CSxK@ g$V$18691$CSxK@))) g$t$11345$CSxK@ '#(each+ any () any)))) g$C$18692$CSxK@ g$t$11333$CSxK@)))) g$C$18693$CSxK@ g$V$18694$CSxK@))) g$t$11333$CSxK@ 'each-any))) g$C$18695$CSxK@ g$V$18700$CSxK@))) g$lhs*$11329$CSxK@)))) g$lhs*$11329$CSxK@)))))) (case-lambda ((g$V$18703$CSxK@) (g$V$18703$CSxK@ (case-lambda ((g$V$18704$CSxK@) (g$bless$10673$CSxK@ g$C$18702$CSxK@ g$V$18704$CSxK@))) g$lhs*$11324$CSxK@ g$rhs*$11325$CSxK@ '() '()))) uninitialized))) g$ls/false$11323$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18705$CSxK@ '#f '"invalid syntax" g$t$11322$CSxK@)))) g$C$18706$CSxK@ g$V$18707$CSxK@))) g$t$11322$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$18708$CSxK@ g$t$11318$CSxK@)))) g$C$18709$CSxK@ g$V$18710$CSxK@))) g$t$11318$CSxK@ '(_ () any . each-any)))) g$C$18711$CSxK@ g$stx$11315$CSxK@))))) g$C$18712$CSxK@ uninitialized uninitialized)))))) (library-letrec*-identity 'g$let-values-macro$10677$CSxK@))) (g$let*-values-macro$10678$CSxK@ g$let*-values-macro$14220$CSxK@ ((case-lambda ((g$C$22745$CSxK@) (g$C$22745$CSxK@ (case-lambda ((g$C$18773$CSxK@ g$stx$11371$CSxK@) ((case-lambda ((g$C$18772$CSxK@ g$check$11372$CSxK@) (begin (set! g$check$11372$CSxK@ (case-lambda ((g$C$18722$CSxK@ g$x*$11396$CSxK@) (null? (case-lambda ((g$V$18723$CSxK@) (not (case-lambda ((g$T$18724$CSxK@) (if g$T$18724$CSxK@ (car (case-lambda ((g$V$18725$CSxK@) ((case-lambda ((g$C$18713$CSxK@ g$x$11397$CSxK@) ((case-lambda ((g$J$18719$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$18720$CSxK@) (not (case-lambda ((g$T$18721$CSxK@) (if g$T$18721$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$18719$CSxK@ '#f '"not an identifier" g$stx$11371$CSxK@ g$x$11397$CSxK@) (void g$J$18719$CSxK@)))) g$V$18720$CSxK@))) g$x$11397$CSxK@))) (case-lambda (g$IGNORE$18714$CSxK@ (cdr (case-lambda ((g$V$18715$CSxK@) (g$check$11372$CSxK@ (case-lambda (g$IGNORE$18716$CSxK@ (cdr (case-lambda ((g$V$18717$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$18718$CSxK@) (if g$T$18718$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$18713$CSxK@ '#f '"duplicate identifier" g$stx$11371$CSxK@ g$x$11397$CSxK@) (void g$C$18713$CSxK@)))) g$x$11397$CSxK@ g$V$18717$CSxK@))) g$x*$11396$CSxK@))) g$V$18715$CSxK@))) g$x*$11396$CSxK@)))))) g$C$18722$CSxK@ g$V$18725$CSxK@))) g$x*$11396$CSxK@) (void g$C$18722$CSxK@)))) g$V$18723$CSxK@))) g$x*$11396$CSxK@)))) ((case-lambda ((g$C$18770$CSxK@ g$t$11373$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18771$CSxK@) ((case-lambda ((g$C$18769$CSxK@ g$ls/false$11374$CSxK@) (if g$ls/false$11374$CSxK@ (apply g$C$18769$CSxK@ (case-lambda ((g$C$18726$CSxK@ g$b$11375$CSxK@ g$b*$11376$CSxK@) (g$bless$10673$CSxK@ (case-lambda ((g$V$18727$CSxK@) (g$cons*$6715$CSxK@ g$C$18726$CSxK@ g$V$18727$CSxK@ '() g$b$11375$CSxK@ g$b*$11376$CSxK@))) 'let))) g$ls/false$11374$CSxK@) ((case-lambda ((g$C$18767$CSxK@ g$t$11377$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18768$CSxK@) ((case-lambda ((g$C$18766$CSxK@ g$ls/false$11378$CSxK@) (if g$ls/false$11378$CSxK@ (apply g$C$18766$CSxK@ (case-lambda ((g$C$18763$CSxK@ g$lhs*$11379$CSxK@ g$rhs*$11380$CSxK@ g$b$11381$CSxK@ g$b*$11382$CSxK@) ((case-lambda ((g$C$18762$CSxK@ g$f$11383$CSxK@) ((case-lambda ((g$C$18729$CSxK@ g$f$18728$CSxK@) (begin (set! g$f$11383$CSxK@ g$f$18728$CSxK@) (g$C$18729$CSxK@ g$f$11383$CSxK@)))) g$C$18762$CSxK@ (case-lambda ((g$C$18758$CSxK@ g$lhs*$11384$CSxK@ g$rhs*$11385$CSxK@) (null? (case-lambda ((g$T$18759$CSxK@) (if g$T$18759$CSxK@ (cons (case-lambda ((g$V$18760$CSxK@) (cons g$C$18758$CSxK@ 'begin g$V$18760$CSxK@))) g$b$11381$CSxK@ g$b*$11382$CSxK@) (car (case-lambda ((g$V$18761$CSxK@) ((case-lambda ((g$C$18756$CSxK@ g$t$11386$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18757$CSxK@) ((case-lambda ((g$C$18755$CSxK@ g$ls/false$11387$CSxK@) (if g$ls/false$11387$CSxK@ (apply g$C$18755$CSxK@ (case-lambda ((g$C$18730$CSxK@ g$x*$11388$CSxK@) (g$check$11372$CSxK@ (case-lambda (g$IGNORE$18731$CSxK@ (cdr (case-lambda ((g$V$18732$CSxK@) (cdr (case-lambda ((g$V$18733$CSxK@) (g$f$11383$CSxK@ (case-lambda ((g$V$18734$CSxK@) (list (case-lambda ((g$V$18735$CSxK@) (car (case-lambda ((g$V$18736$CSxK@) (list (case-lambda ((g$V$18737$CSxK@) (list g$C$18730$CSxK@ 'call-with-values g$V$18737$CSxK@ g$V$18735$CSxK@))) 'lambda '() g$V$18736$CSxK@))) g$rhs*$11385$CSxK@))) 'lambda g$x*$11388$CSxK@ g$V$18734$CSxK@))) g$V$18733$CSxK@ g$V$18732$CSxK@))) g$lhs*$11384$CSxK@))) g$rhs*$11385$CSxK@))) g$x*$11388$CSxK@))) g$ls/false$11387$CSxK@) ((case-lambda ((g$C$18753$CSxK@ g$t$11389$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18754$CSxK@) ((case-lambda ((g$C$18752$CSxK@ g$ls/false$11390$CSxK@) (if g$ls/false$11390$CSxK@ (apply g$C$18752$CSxK@ (case-lambda ((g$C$18738$CSxK@ g$x*$11391$CSxK@ g$x$11392$CSxK@) (cons (case-lambda ((g$V$18739$CSxK@) (g$check$11372$CSxK@ (case-lambda (g$IGNORE$18740$CSxK@ (cdr (case-lambda ((g$V$18741$CSxK@) (cdr (case-lambda ((g$V$18742$CSxK@) (g$f$11383$CSxK@ (case-lambda ((g$V$18743$CSxK@) (append (case-lambda ((g$V$18744$CSxK@) (list (case-lambda ((g$V$18745$CSxK@) (car (case-lambda ((g$V$18746$CSxK@) (list (case-lambda ((g$V$18747$CSxK@) (list g$C$18738$CSxK@ 'call-with-values g$V$18747$CSxK@ g$V$18745$CSxK@))) 'lambda '() g$V$18746$CSxK@))) g$rhs*$11385$CSxK@))) 'lambda g$V$18744$CSxK@ g$V$18743$CSxK@))) g$x*$11391$CSxK@ g$x$11392$CSxK@))) g$V$18742$CSxK@ g$V$18741$CSxK@))) g$lhs*$11384$CSxK@))) g$rhs*$11385$CSxK@))) g$V$18739$CSxK@))) g$x$11392$CSxK@ g$x*$11391$CSxK@))) g$ls/false$11390$CSxK@) ((case-lambda ((g$C$18750$CSxK@ g$t$11393$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18751$CSxK@) ((case-lambda ((g$C$18749$CSxK@ g$ls/false$11394$CSxK@) (if g$ls/false$11394$CSxK@ (apply g$C$18749$CSxK@ (case-lambda ((g$C$18748$CSxK@ g$others$11395$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18748$CSxK@ '#f '"malformed bindings" g$stx$11371$CSxK@ g$others$11395$CSxK@))) g$ls/false$11394$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18749$CSxK@ '#f '"invalid syntax" g$t$11393$CSxK@)))) g$C$18750$CSxK@ g$V$18751$CSxK@))) g$t$11393$CSxK@ 'any))) g$C$18752$CSxK@ g$t$11389$CSxK@)))) g$C$18753$CSxK@ g$V$18754$CSxK@))) g$t$11389$CSxK@ '#(each+ any () any)))) g$C$18755$CSxK@ g$t$11386$CSxK@)))) g$C$18756$CSxK@ g$V$18757$CSxK@))) g$t$11386$CSxK@ 'each-any))) g$C$18758$CSxK@ g$V$18761$CSxK@))) g$lhs*$11384$CSxK@)))) g$lhs*$11384$CSxK@)))))) (case-lambda ((g$V$18764$CSxK@) (g$V$18764$CSxK@ (case-lambda ((g$V$18765$CSxK@) (g$bless$10673$CSxK@ g$C$18763$CSxK@ g$V$18765$CSxK@))) g$lhs*$11379$CSxK@ g$rhs*$11380$CSxK@))) uninitialized))) g$ls/false$11378$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18766$CSxK@ '#f '"invalid syntax" g$t$11377$CSxK@)))) g$C$18767$CSxK@ g$V$18768$CSxK@))) g$t$11377$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$18769$CSxK@ g$t$11373$CSxK@)))) g$C$18770$CSxK@ g$V$18771$CSxK@))) g$t$11373$CSxK@ '(_ () any . each-any)))) g$C$18772$CSxK@ g$stx$11371$CSxK@)))) g$C$18773$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$let*-values-macro$10678$CSxK@))) (g$trace-lambda-macro$10679$CSxK@ g$trace-lambda-macro$14221$CSxK@ ((case-lambda ((g$C$22746$CSxK@) (g$C$22746$CSxK@ (case-lambda ((g$C$18797$CSxK@ g$stx$11398$CSxK@) ((case-lambda ((g$C$18795$CSxK@ g$t$11399$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18796$CSxK@) ((case-lambda ((g$C$18794$CSxK@ g$ls/false$11400$CSxK@) (if g$ls/false$11400$CSxK@ (apply g$C$18794$CSxK@ (case-lambda ((g$C$18774$CSxK@ g$who$11401$CSxK@ g$fmls$11402$CSxK@ g$b$11403$CSxK@ g$b*$11404$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$18775$CSxK@) (if g$T$18775$CSxK@ (cons (case-lambda ((g$V$18776$CSxK@) (cons (case-lambda ((g$V$18777$CSxK@) (cons (case-lambda ((g$V$18778$CSxK@) (list (case-lambda ((g$V$18779$CSxK@) (list (case-lambda ((g$V$18780$CSxK@) (g$bless$10673$CSxK@ g$C$18774$CSxK@ g$V$18780$CSxK@))) 'make-traced-procedure g$V$18779$CSxK@ g$V$18778$CSxK@))) 'quote g$who$11401$CSxK@))) 'lambda g$V$18777$CSxK@))) g$fmls$11402$CSxK@ g$V$18776$CSxK@))) g$b$11403$CSxK@ g$b*$11404$CSxK@) (g$invalid-fmls-error$10675$CSxK@ g$C$18774$CSxK@ g$stx$11398$CSxK@ g$fmls$11402$CSxK@)))) g$fmls$11402$CSxK@))) g$ls/false$11400$CSxK@) ((case-lambda ((g$C$18792$CSxK@ g$t$11405$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18793$CSxK@) ((case-lambda ((g$C$18791$CSxK@ g$ls/false$11406$CSxK@) (if g$ls/false$11406$CSxK@ (apply g$C$18791$CSxK@ (case-lambda ((g$C$18781$CSxK@ g$who$11407$CSxK@ g$fmls$11408$CSxK@ g$last$11409$CSxK@ g$b$11410$CSxK@ g$b*$11411$CSxK@) (cons (case-lambda ((g$V$18782$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$18783$CSxK@) (if g$T$18783$CSxK@ (cons (case-lambda ((g$V$18784$CSxK@) (append (case-lambda ((g$V$18785$CSxK@) (cons (case-lambda ((g$V$18786$CSxK@) (cons (case-lambda ((g$V$18787$CSxK@) (list (case-lambda ((g$V$18788$CSxK@) (list (case-lambda ((g$V$18789$CSxK@) (g$bless$10673$CSxK@ g$C$18781$CSxK@ g$V$18789$CSxK@))) 'make-traced-procedure g$V$18788$CSxK@ g$V$18787$CSxK@))) 'quote g$who$11407$CSxK@))) 'lambda g$V$18786$CSxK@))) g$V$18785$CSxK@ g$V$18784$CSxK@))) g$fmls$11408$CSxK@ g$last$11409$CSxK@))) g$b$11410$CSxK@ g$b*$11411$CSxK@) (append (case-lambda ((g$V$18790$CSxK@) (g$invalid-fmls-error$10675$CSxK@ g$C$18781$CSxK@ g$stx$11398$CSxK@ g$V$18790$CSxK@))) g$fmls$11408$CSxK@ g$last$11409$CSxK@)))) g$V$18782$CSxK@))) g$last$11409$CSxK@ g$fmls$11408$CSxK@))) g$ls/false$11406$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18791$CSxK@ '#f '"invalid syntax" g$t$11405$CSxK@)))) g$C$18792$CSxK@ g$V$18793$CSxK@))) g$t$11405$CSxK@ '(_ any #(each+ any () any) any . each-any)))) g$C$18794$CSxK@ g$t$11399$CSxK@)))) g$C$18795$CSxK@ g$V$18796$CSxK@))) g$t$11399$CSxK@ '(_ any each-any any . each-any)))) g$C$18797$CSxK@ g$stx$11398$CSxK@)))))) (library-letrec*-identity 'g$trace-lambda-macro$10679$CSxK@))) (g$trace-define-macro$10680$CSxK@ g$trace-define-macro$14222$CSxK@ ((case-lambda ((g$C$22747$CSxK@) (g$C$22747$CSxK@ (case-lambda ((g$C$18838$CSxK@ g$stx$11412$CSxK@) ((case-lambda ((g$C$18836$CSxK@ g$t$11413$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18837$CSxK@) ((case-lambda ((g$C$18835$CSxK@ g$ls/false$11414$CSxK@) (if g$ls/false$11414$CSxK@ (apply g$C$18835$CSxK@ (case-lambda ((g$C$18798$CSxK@ g$who$11415$CSxK@ g$fmls$11416$CSxK@ g$b$11417$CSxK@ g$b*$11418$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$18799$CSxK@) (if g$T$18799$CSxK@ (cons (case-lambda ((g$V$18800$CSxK@) (cons (case-lambda ((g$V$18801$CSxK@) (cons (case-lambda ((g$V$18802$CSxK@) (list (case-lambda ((g$V$18803$CSxK@) (list (case-lambda ((g$V$18804$CSxK@) (list (case-lambda ((g$V$18805$CSxK@) (g$bless$10673$CSxK@ g$C$18798$CSxK@ g$V$18805$CSxK@))) 'define g$who$11415$CSxK@ g$V$18804$CSxK@))) 'make-traced-procedure g$V$18803$CSxK@ g$V$18802$CSxK@))) 'quote g$who$11415$CSxK@))) 'lambda g$V$18801$CSxK@))) g$fmls$11416$CSxK@ g$V$18800$CSxK@))) g$b$11417$CSxK@ g$b*$11418$CSxK@) (g$invalid-fmls-error$10675$CSxK@ g$C$18798$CSxK@ g$stx$11412$CSxK@ g$fmls$11416$CSxK@)))) g$fmls$11416$CSxK@))) g$ls/false$11414$CSxK@) ((case-lambda ((g$C$18833$CSxK@ g$t$11419$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18834$CSxK@) ((case-lambda ((g$C$18832$CSxK@ g$ls/false$11420$CSxK@) (if g$ls/false$11420$CSxK@ (apply g$C$18832$CSxK@ (case-lambda ((g$C$18806$CSxK@ g$who$11421$CSxK@ g$fmls$11422$CSxK@ g$last$11423$CSxK@ g$b$11424$CSxK@ g$b*$11425$CSxK@) (cons (case-lambda ((g$V$18807$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$18808$CSxK@) (if g$T$18808$CSxK@ (cons (case-lambda ((g$V$18809$CSxK@) (append (case-lambda ((g$V$18810$CSxK@) (cons (case-lambda ((g$V$18811$CSxK@) (cons (case-lambda ((g$V$18812$CSxK@) (list (case-lambda ((g$V$18813$CSxK@) (list (case-lambda ((g$V$18814$CSxK@) (list (case-lambda ((g$V$18815$CSxK@) (g$bless$10673$CSxK@ g$C$18806$CSxK@ g$V$18815$CSxK@))) 'define g$who$11421$CSxK@ g$V$18814$CSxK@))) 'make-traced-procedure g$V$18813$CSxK@ g$V$18812$CSxK@))) 'quote g$who$11421$CSxK@))) 'lambda g$V$18811$CSxK@))) g$V$18810$CSxK@ g$V$18809$CSxK@))) g$fmls$11422$CSxK@ g$last$11423$CSxK@))) g$b$11424$CSxK@ g$b*$11425$CSxK@) (append (case-lambda ((g$V$18816$CSxK@) (g$invalid-fmls-error$10675$CSxK@ g$C$18806$CSxK@ g$stx$11412$CSxK@ g$V$18816$CSxK@))) g$fmls$11422$CSxK@ g$last$11423$CSxK@)))) g$V$18807$CSxK@))) g$last$11423$CSxK@ g$fmls$11422$CSxK@))) g$ls/false$11420$CSxK@) ((case-lambda ((g$C$18830$CSxK@ g$t$11426$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18831$CSxK@) ((case-lambda ((g$C$18829$CSxK@ g$ls/false$11427$CSxK@) (if g$ls/false$11427$CSxK@ (apply g$C$18829$CSxK@ (case-lambda ((g$C$18817$CSxK@ g$who$11428$CSxK@ g$expr$11429$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$18818$CSxK@) (if g$T$18818$CSxK@ (list (case-lambda ((g$V$18819$CSxK@) (cons (case-lambda ((g$V$18820$CSxK@) (cons (case-lambda ((g$V$18821$CSxK@) (cons (case-lambda ((g$V$18822$CSxK@) (cons (case-lambda ((g$V$18823$CSxK@) (cons (case-lambda ((g$V$18824$CSxK@) (list (case-lambda ((g$V$18825$CSxK@) (list (case-lambda ((g$V$18826$CSxK@) (list (case-lambda ((g$V$18827$CSxK@) (list (case-lambda ((g$V$18828$CSxK@) (g$bless$10673$CSxK@ g$C$18817$CSxK@ g$V$18828$CSxK@))) 'define g$who$11428$CSxK@ g$V$18827$CSxK@))) 'let g$V$18826$CSxK@ g$V$18824$CSxK@))) g$V$18825$CSxK@))) 'v g$expr$11429$CSxK@))) 'if g$V$18823$CSxK@))) '(procedure? v) g$V$18822$CSxK@))) g$V$18821$CSxK@ '((assertion-violation 'trace-define "not a procedure" v))))) 'make-traced-procedure g$V$18820$CSxK@))) g$V$18819$CSxK@ '(v)))) 'quote g$who$11428$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18817$CSxK@ '#f '"invalid name" g$stx$11412$CSxK@)))) g$who$11428$CSxK@))) g$ls/false$11427$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18829$CSxK@ '#f '"invalid syntax" g$t$11426$CSxK@)))) g$C$18830$CSxK@ g$V$18831$CSxK@))) g$t$11426$CSxK@ '(_ any any)))) g$C$18832$CSxK@ g$t$11419$CSxK@)))) g$C$18833$CSxK@ g$V$18834$CSxK@))) g$t$11419$CSxK@ '(_ (any . #(each+ any () any)) any . each-any)))) g$C$18835$CSxK@ g$t$11413$CSxK@)))) g$C$18836$CSxK@ g$V$18837$CSxK@))) g$t$11413$CSxK@ '(_ (any . each-any) any . each-any)))) g$C$18838$CSxK@ g$stx$11412$CSxK@)))))) (library-letrec*-identity 'g$trace-define-macro$10680$CSxK@))) (g$trace-define-syntax-macro$10681$CSxK@ g$trace-define-syntax-macro$14223$CSxK@ ((case-lambda ((g$C$22748$CSxK@) (g$C$22748$CSxK@ (case-lambda ((g$C$18847$CSxK@ g$stx$11430$CSxK@) ((case-lambda ((g$C$18845$CSxK@ g$t$11431$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18846$CSxK@) ((case-lambda ((g$C$18844$CSxK@ g$ls/false$11432$CSxK@) (if g$ls/false$11432$CSxK@ (apply g$C$18844$CSxK@ (case-lambda ((g$C$18839$CSxK@ g$who$11433$CSxK@ g$expr$11434$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$18840$CSxK@) (if g$T$18840$CSxK@ (list (case-lambda ((g$V$18841$CSxK@) (list (case-lambda ((g$V$18842$CSxK@) (list (case-lambda ((g$V$18843$CSxK@) (g$bless$10673$CSxK@ g$C$18839$CSxK@ g$V$18843$CSxK@))) 'define-syntax g$who$11433$CSxK@ g$V$18842$CSxK@))) 'make-traced-macro g$V$18841$CSxK@ g$expr$11434$CSxK@))) 'quote g$who$11433$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18839$CSxK@ '#f '"invalid name" g$stx$11430$CSxK@)))) g$who$11433$CSxK@))) g$ls/false$11432$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18844$CSxK@ '#f '"invalid syntax" g$t$11431$CSxK@)))) g$C$18845$CSxK@ g$V$18846$CSxK@))) g$t$11431$CSxK@ '(_ any any)))) g$C$18847$CSxK@ g$stx$11430$CSxK@)))))) (library-letrec*-identity 'g$trace-define-syntax-macro$10681$CSxK@))) (g$trace-let/rec-syntax$10682$CSxK@ g$trace-let/rec-syntax$14224$CSxK@ ((case-lambda ((g$C$22749$CSxK@) (g$C$22749$CSxK@ (case-lambda ((g$C$18862$CSxK@ g$who$11435$CSxK@) (g$C$18862$CSxK@ (case-lambda ((g$C$18861$CSxK@ g$stx$11436$CSxK@) ((case-lambda ((g$C$18859$CSxK@ g$t$11437$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18860$CSxK@) ((case-lambda ((g$C$18858$CSxK@ g$ls/false$11438$CSxK@) (if g$ls/false$11438$CSxK@ (apply g$C$18858$CSxK@ (case-lambda ((g$C$18855$CSxK@ g$lhs*$11439$CSxK@ g$rhs*$11440$CSxK@ g$b$11441$CSxK@ g$b*$11442$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$18856$CSxK@) (if g$T$18856$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$18857$CSxK@) ((case-lambda ((g$C$18848$CSxK@ g$rhs*$11443$CSxK@) (cons (case-lambda ((g$V$18849$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$18850$CSxK@) (cons (case-lambda ((g$V$18851$CSxK@) (cons (case-lambda ((g$V$18852$CSxK@) (g$bless$10673$CSxK@ g$C$18848$CSxK@ g$V$18852$CSxK@))) g$who$11435$CSxK@ g$V$18851$CSxK@))) g$V$18850$CSxK@ g$V$18849$CSxK@))) list g$lhs*$11439$CSxK@ g$rhs*$11443$CSxK@))) g$b$11441$CSxK@ g$b*$11442$CSxK@))) g$C$18855$CSxK@ g$V$18857$CSxK@))) (case-lambda ((g$C$18853$CSxK@ g$lhs$11444$CSxK@ g$rhs$11445$CSxK@) (list (case-lambda ((g$V$18854$CSxK@) (list g$C$18853$CSxK@ 'make-traced-macro g$V$18854$CSxK@ g$rhs$11445$CSxK@))) 'quote g$lhs$11444$CSxK@))) g$lhs*$11439$CSxK@ g$rhs*$11440$CSxK@) (g$invalid-fmls-error$10675$CSxK@ g$C$18855$CSxK@ g$stx$11436$CSxK@ g$lhs*$11439$CSxK@)))) g$lhs*$11439$CSxK@))) g$ls/false$11438$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18858$CSxK@ '#f '"invalid syntax" g$t$11437$CSxK@)))) g$C$18859$CSxK@ g$V$18860$CSxK@))) g$t$11437$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$18861$CSxK@ g$stx$11436$CSxK@))))))))) (library-letrec*-identity 'g$trace-let/rec-syntax$10682$CSxK@))) (g$trace-let-syntax-macro$10683$CSxK@ g$trace-let-syntax-macro$14225$CSxK@ ((case-lambda ((g$C$22750$CSxK@) (g$trace-let/rec-syntax$10682$CSxK@ g$C$22750$CSxK@ 'let-syntax))) (library-letrec*-identity 'g$trace-let-syntax-macro$10683$CSxK@))) (g$trace-letrec-syntax-macro$10684$CSxK@ g$trace-letrec-syntax-macro$14226$CSxK@ ((case-lambda ((g$C$22751$CSxK@) (g$trace-let/rec-syntax$10682$CSxK@ g$C$22751$CSxK@ 'letrec-syntax))) (library-letrec*-identity 'g$trace-letrec-syntax-macro$10684$CSxK@))) (g$guard-macro$10685$CSxK@ g$guard-macro$14227$CSxK@ ((case-lambda ((g$C$22752$CSxK@) (g$C$22752$CSxK@ (case-lambda ((g$C$18955$CSxK@ g$x$11446$CSxK@) ((case-lambda ((g$C$18954$CSxK@ g$gen-clauses$11447$CSxK@) (begin (set! g$gen-clauses$11447$CSxK@ (case-lambda ((g$C$18931$CSxK@ g$con$11459$CSxK@ g$outerk$11460$CSxK@ g$clause*$11461$CSxK@) ((case-lambda ((g$C$18930$CSxK@ g$f$11462$CSxK@ g$f*$11463$CSxK@) (begin (set! g$f$11462$CSxK@ (case-lambda ((g$C$18892$CSxK@ g$x$11491$CSxK@ g$k$11492$CSxK@) ((case-lambda ((g$C$18890$CSxK@ g$t$11493$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18891$CSxK@) ((case-lambda ((g$C$18889$CSxK@ g$ls/false$11494$CSxK@) (if g$ls/false$11494$CSxK@ (apply g$C$18889$CSxK@ (case-lambda ((g$C$18868$CSxK@ g$e$11495$CSxK@ g$p$11496$CSxK@) (gensym (case-lambda ((g$V$18869$CSxK@) ((case-lambda ((g$C$18863$CSxK@ g$t$11497$CSxK@) (list (case-lambda ((g$V$18864$CSxK@) (list (case-lambda ((g$V$18865$CSxK@) (list (case-lambda ((g$V$18866$CSxK@) (list (case-lambda ((g$V$18867$CSxK@) (list g$C$18863$CSxK@ 'let g$V$18867$CSxK@ g$V$18865$CSxK@))) g$V$18866$CSxK@))) g$t$11497$CSxK@ g$e$11495$CSxK@))) 'if g$t$11497$CSxK@ g$V$18864$CSxK@ g$k$11492$CSxK@))) g$p$11496$CSxK@ g$t$11497$CSxK@))) g$C$18868$CSxK@ g$V$18869$CSxK@)))))) g$ls/false$11494$CSxK@) ((case-lambda ((g$C$18887$CSxK@ g$t$11498$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18888$CSxK@) ((case-lambda ((g$C$18886$CSxK@ g$ls/false$11499$CSxK@) (if g$ls/false$11499$CSxK@ (apply g$C$18886$CSxK@ (case-lambda ((g$C$18874$CSxK@ g$e$11500$CSxK@) (gensym (case-lambda ((g$V$18875$CSxK@) ((case-lambda ((g$C$18870$CSxK@ g$t$11501$CSxK@) (list (case-lambda ((g$V$18871$CSxK@) (list (case-lambda ((g$V$18872$CSxK@) (list (case-lambda ((g$V$18873$CSxK@) (list g$C$18870$CSxK@ 'let g$V$18873$CSxK@ g$V$18871$CSxK@))) g$V$18872$CSxK@))) g$t$11501$CSxK@ g$e$11500$CSxK@))) 'if g$t$11501$CSxK@ g$t$11501$CSxK@ g$k$11492$CSxK@))) g$C$18874$CSxK@ g$V$18875$CSxK@)))))) g$ls/false$11499$CSxK@) ((case-lambda ((g$C$18884$CSxK@ g$t$11502$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18885$CSxK@) ((case-lambda ((g$C$18883$CSxK@ g$ls/false$11503$CSxK@) (if g$ls/false$11503$CSxK@ (apply g$C$18883$CSxK@ (case-lambda ((g$C$18876$CSxK@ g$e$11504$CSxK@ g$v$11505$CSxK@ g$v*$11506$CSxK@) (cons (case-lambda ((g$V$18877$CSxK@) (cons (case-lambda ((g$V$18878$CSxK@) (list g$C$18876$CSxK@ 'if g$e$11504$CSxK@ g$V$18878$CSxK@ g$k$11492$CSxK@))) 'begin g$V$18877$CSxK@))) g$v$11505$CSxK@ g$v*$11506$CSxK@))) g$ls/false$11503$CSxK@) ((case-lambda ((g$C$18881$CSxK@ g$t$11507$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18882$CSxK@) ((case-lambda ((g$C$18880$CSxK@ g$ls/false$11508$CSxK@) (if g$ls/false$11508$CSxK@ (apply g$C$18880$CSxK@ (case-lambda ((g$C$18879$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18879$CSxK@ '#f '"invalid guard clause" g$x$11491$CSxK@))) g$ls/false$11508$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18880$CSxK@ '#f '"invalid syntax" g$t$11507$CSxK@)))) g$C$18881$CSxK@ g$V$18882$CSxK@))) g$t$11507$CSxK@ '_))) g$C$18883$CSxK@ g$t$11502$CSxK@)))) g$C$18884$CSxK@ g$V$18885$CSxK@))) g$t$11502$CSxK@ '(any any . each-any)))) g$C$18886$CSxK@ g$t$11498$CSxK@)))) g$C$18887$CSxK@ g$V$18888$CSxK@))) g$t$11498$CSxK@ '(any)))) g$C$18889$CSxK@ g$t$11493$CSxK@)))) g$C$18890$CSxK@ g$V$18891$CSxK@))) g$t$11493$CSxK@ '(any #(scheme-id =>) any)))) g$C$18892$CSxK@ g$x$11491$CSxK@)))) (begin (set! g$f*$11463$CSxK@ (case-lambda ((g$C$18920$CSxK@ g$x*$11470$CSxK@) ((case-lambda ((g$C$18918$CSxK@ g$t$11471$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18919$CSxK@) ((case-lambda ((g$C$18917$CSxK@ g$ls/false$11472$CSxK@) (if g$ls/false$11472$CSxK@ (apply g$C$18917$CSxK@ (case-lambda ((g$C$18897$CSxK@) (gensym (case-lambda ((g$V$18898$CSxK@) ((case-lambda ((g$C$18893$CSxK@ g$g$11473$CSxK@) (list (case-lambda ((g$V$18894$CSxK@) (list (case-lambda ((g$V$18895$CSxK@) (list (case-lambda ((g$V$18896$CSxK@) (values g$C$18893$CSxK@ g$V$18896$CSxK@ g$g$11473$CSxK@))) g$g$11473$CSxK@ g$V$18895$CSxK@))) 'lambda '() g$V$18894$CSxK@))) 'raise-continuable g$con$11459$CSxK@))) g$C$18897$CSxK@ g$V$18898$CSxK@)))))) g$ls/false$11472$CSxK@) ((case-lambda ((g$C$18915$CSxK@ g$t$11474$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18916$CSxK@) ((case-lambda ((g$C$18914$CSxK@ g$ls/false$11475$CSxK@) (if g$ls/false$11475$CSxK@ (apply g$C$18914$CSxK@ (case-lambda ((g$C$18899$CSxK@ g$e$11476$CSxK@ g$e*$11477$CSxK@) (cons (case-lambda ((g$V$18900$CSxK@) (cons (case-lambda ((g$V$18901$CSxK@) (values g$C$18899$CSxK@ g$V$18901$CSxK@ '#f))) 'begin g$V$18900$CSxK@))) g$e$11476$CSxK@ g$e*$11477$CSxK@))) g$ls/false$11475$CSxK@) ((case-lambda ((g$C$18912$CSxK@ g$t$11478$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18913$CSxK@) ((case-lambda ((g$C$18911$CSxK@ g$ls/false$11479$CSxK@) (if g$ls/false$11479$CSxK@ (apply g$C$18911$CSxK@ (case-lambda ((g$C$18906$CSxK@ g$cls$11480$CSxK@ g$cls*$11481$CSxK@) (call-with-values g$C$18906$CSxK@ (case-lambda ((g$C$18902$CSxK@) (g$f*$11463$CSxK@ g$C$18902$CSxK@ g$cls*$11481$CSxK@))) (case-lambda ((g$C$18905$CSxK@ g$e$11484$CSxK@ g$g$11485$CSxK@) ((case-lambda ((g$C$18903$CSxK@ g$g$11486$CSxK@ g$e$11487$CSxK@) (g$f$11462$CSxK@ (case-lambda ((g$V$18904$CSxK@) (values g$C$18903$CSxK@ g$V$18904$CSxK@ g$g$11486$CSxK@))) g$cls$11480$CSxK@ g$e$11487$CSxK@))) g$C$18905$CSxK@ g$g$11485$CSxK@ g$e$11484$CSxK@)))))) g$ls/false$11479$CSxK@) ((case-lambda ((g$C$18909$CSxK@ g$t$11488$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18910$CSxK@) ((case-lambda ((g$C$18908$CSxK@ g$ls/false$11489$CSxK@) (if g$ls/false$11489$CSxK@ (apply g$C$18908$CSxK@ (case-lambda ((g$C$18907$CSxK@ g$others$11490$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18907$CSxK@ '#f '"invalid guard clause" g$others$11490$CSxK@))) g$ls/false$11489$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18908$CSxK@ '#f '"invalid syntax" g$t$11488$CSxK@)))) g$C$18909$CSxK@ g$V$18910$CSxK@))) g$t$11488$CSxK@ 'any))) g$C$18911$CSxK@ g$t$11478$CSxK@)))) g$C$18912$CSxK@ g$V$18913$CSxK@))) g$t$11478$CSxK@ '(any . any)))) g$C$18914$CSxK@ g$t$11474$CSxK@)))) g$C$18915$CSxK@ g$V$18916$CSxK@))) g$t$11474$CSxK@ '((#(scheme-id else) any . each-any))))) g$C$18917$CSxK@ g$t$11471$CSxK@)))) g$C$18918$CSxK@ g$V$18919$CSxK@))) g$t$11471$CSxK@ '()))) g$C$18920$CSxK@ g$x*$11470$CSxK@)))) (call-with-values g$C$18930$CSxK@ (case-lambda ((g$C$18921$CSxK@) (g$f*$11463$CSxK@ g$C$18921$CSxK@ g$clause*$11461$CSxK@))) (case-lambda ((g$C$18929$CSxK@ g$code$11466$CSxK@ g$raisek$11467$CSxK@) ((case-lambda ((g$C$18922$CSxK@ g$raisek$11468$CSxK@ g$code$11469$CSxK@) (if g$raisek$11468$CSxK@ (list (case-lambda ((g$V$18923$CSxK@) (list (case-lambda ((g$V$18924$CSxK@) (list (case-lambda ((g$V$18925$CSxK@) (list (case-lambda ((g$V$18926$CSxK@) (list (case-lambda ((g$V$18927$CSxK@) (list g$C$18922$CSxK@ g$V$18927$CSxK@))) 'call/cc g$V$18926$CSxK@))) 'lambda g$V$18925$CSxK@ g$V$18924$CSxK@))) g$raisek$11468$CSxK@))) g$outerk$11460$CSxK@ g$V$18923$CSxK@))) 'lambda '() g$code$11469$CSxK@) (list (case-lambda ((g$V$18928$CSxK@) (list g$C$18922$CSxK@ g$outerk$11460$CSxK@ g$V$18928$CSxK@))) 'lambda '() g$code$11469$CSxK@)))) g$C$18929$CSxK@ g$raisek$11467$CSxK@ g$code$11466$CSxK@)))))))) g$C$18931$CSxK@ uninitialized uninitialized)))) ((case-lambda ((g$C$18952$CSxK@ g$t$11448$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$18953$CSxK@) ((case-lambda ((g$C$18949$CSxK@ g$ls/false$11449$CSxK@) ((case-lambda ((g$J$18951$CSxK@) (if g$ls/false$11449$CSxK@ (apply g$J$18951$CSxK@ (case-lambda ((g$C$18932$CSxK@ g$con$11450$CSxK@ g$clause*$11451$CSxK@ g$b$11452$CSxK@ g$b*$11453$CSxK@) (g$id?$10347$CSxK@ g$C$18932$CSxK@ g$con$11450$CSxK@))) g$ls/false$11449$CSxK@) (g$J$18951$CSxK@ '#f)))) (case-lambda ((g$T$18950$CSxK@) (if g$T$18950$CSxK@ (apply g$C$18949$CSxK@ (case-lambda ((g$C$18947$CSxK@ g$con$11454$CSxK@ g$clause*$11455$CSxK@ g$b$11456$CSxK@ g$b*$11457$CSxK@) (gensym (case-lambda ((g$V$18948$CSxK@) ((case-lambda ((g$C$18933$CSxK@ g$outerk$11458$CSxK@) (cons (case-lambda ((g$V$18934$CSxK@) (cons (case-lambda ((g$V$18935$CSxK@) (cons (case-lambda ((g$V$18936$CSxK@) (cons (case-lambda ((g$V$18937$CSxK@) (g$gen-clauses$11447$CSxK@ (case-lambda ((g$V$18938$CSxK@) (list (case-lambda ((g$V$18939$CSxK@) (list (case-lambda ((g$V$18940$CSxK@) (list (case-lambda ((g$V$18941$CSxK@) (list (case-lambda ((g$V$18942$CSxK@) (list (case-lambda ((g$V$18943$CSxK@) (list (case-lambda ((g$V$18944$CSxK@) (list (case-lambda ((g$V$18945$CSxK@) (list (case-lambda ((g$V$18946$CSxK@) (g$bless$10673$CSxK@ g$C$18933$CSxK@ g$V$18946$CSxK@))) g$V$18945$CSxK@))) 'call/cc g$V$18944$CSxK@))) 'lambda g$V$18943$CSxK@ g$V$18942$CSxK@))) g$outerk$11458$CSxK@))) 'lambda '() g$V$18941$CSxK@))) 'with-exception-handler g$V$18940$CSxK@ g$V$18937$CSxK@))) 'lambda g$V$18939$CSxK@ g$V$18938$CSxK@))) g$con$11454$CSxK@))) g$con$11454$CSxK@ g$outerk$11458$CSxK@ g$clause*$11455$CSxK@))) 'lambda g$V$18936$CSxK@))) '() g$V$18935$CSxK@))) '#f g$V$18934$CSxK@))) g$b$11456$CSxK@ g$b*$11457$CSxK@))) g$C$18947$CSxK@ g$V$18948$CSxK@)))))) g$ls/false$11449$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$18949$CSxK@ '#f '"invalid syntax" g$t$11448$CSxK@))))))) g$C$18952$CSxK@ g$V$18953$CSxK@))) g$t$11448$CSxK@ '(_ (any . each-any) any . each-any)))) g$C$18954$CSxK@ g$x$11446$CSxK@)))) g$C$18955$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$guard-macro$10685$CSxK@))) (g$define-enumeration-macro$10686$CSxK@ g$define-enumeration-macro$14228$CSxK@ ((case-lambda ((g$C$22753$CSxK@) (g$C$22753$CSxK@ (case-lambda ((g$C$19020$CSxK@ g$stx$11509$CSxK@) ((case-lambda ((g$C$19019$CSxK@ g$set?$11510$CSxK@ g$remove-dups$11511$CSxK@) (begin (set! g$set?$11510$CSxK@ (case-lambda ((g$C$18962$CSxK@ g$x$11523$CSxK@) (null? (case-lambda ((g$V$18963$CSxK@) ((case-lambda ((g$C$18956$CSxK@ g$t$11524$CSxK@) (if g$t$11524$CSxK@ (g$C$18956$CSxK@ g$t$11524$CSxK@) (cdr (case-lambda ((g$V$18957$CSxK@) (car (case-lambda ((g$V$18958$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$V$18959$CSxK@) (not (case-lambda ((g$T$18960$CSxK@) (if g$T$18960$CSxK@ (cdr (case-lambda ((g$V$18961$CSxK@) (g$set?$11510$CSxK@ g$C$18956$CSxK@ g$V$18961$CSxK@))) g$x$11523$CSxK@) (g$C$18956$CSxK@ '#f)))) g$V$18959$CSxK@))) g$V$18958$CSxK@ g$V$18957$CSxK@))) g$x$11523$CSxK@))) g$x$11523$CSxK@)))) g$C$18962$CSxK@ g$V$18963$CSxK@))) g$x$11523$CSxK@)))) (begin (set! g$remove-dups$11511$CSxK@ (case-lambda ((g$C$18964$CSxK@ g$ls$11522$CSxK@) (null? (case-lambda ((g$T$18965$CSxK@) (if g$T$18965$CSxK@ (g$C$18964$CSxK@ '()) (cdr (case-lambda ((g$V$18966$CSxK@) (car (case-lambda ((g$V$18967$CSxK@) (g$remq$6720$CSxK@ (case-lambda ((g$V$18968$CSxK@) (g$remove-dups$11511$CSxK@ (case-lambda ((g$V$18969$CSxK@) (car (case-lambda ((g$V$18970$CSxK@) (cons g$C$18964$CSxK@ g$V$18970$CSxK@ g$V$18969$CSxK@))) g$ls$11522$CSxK@))) g$V$18968$CSxK@))) g$V$18967$CSxK@ g$V$18966$CSxK@))) g$ls$11522$CSxK@))) g$ls$11522$CSxK@)))) g$ls$11522$CSxK@)))) ((case-lambda ((g$C$19017$CSxK@ g$t$11512$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19018$CSxK@) ((case-lambda ((g$C$19014$CSxK@ g$ls/false$11513$CSxK@) ((case-lambda ((g$J$19016$CSxK@) (if g$ls/false$11513$CSxK@ (apply g$J$19016$CSxK@ (case-lambda ((g$C$18971$CSxK@ g$name$11514$CSxK@ g$id*$11515$CSxK@ g$maker$11516$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$18972$CSxK@) (if g$T$18972$CSxK@ (g$id?$10347$CSxK@ (case-lambda ((g$T$18973$CSxK@) (if g$T$18973$CSxK@ (g$for-all$6711$CSxK@ g$C$18971$CSxK@ g$id?$10347$CSxK@ g$id*$11515$CSxK@) (g$C$18971$CSxK@ '#f)))) g$maker$11516$CSxK@) (g$C$18971$CSxK@ '#f)))) g$name$11514$CSxK@))) g$ls/false$11513$CSxK@) (g$J$19016$CSxK@ '#f)))) (case-lambda ((g$T$19015$CSxK@) (if g$T$19015$CSxK@ (apply g$C$19014$CSxK@ (case-lambda ((g$C$19010$CSxK@ g$name$11517$CSxK@ g$id*$11518$CSxK@ g$maker$11519$CSxK@) (gensym (case-lambda ((g$V$19011$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$19012$CSxK@) (g$remove-dups$11511$CSxK@ (case-lambda ((g$V$19013$CSxK@) ((case-lambda ((g$C$18974$CSxK@ g$name*$11520$CSxK@ g$mk$11521$CSxK@) (cons (case-lambda ((g$V$18975$CSxK@) (list (case-lambda ((g$V$18976$CSxK@) (list (case-lambda ((g$V$18977$CSxK@) (cons (case-lambda ((g$V$18978$CSxK@) (cons (case-lambda ((g$V$18979$CSxK@) (list (case-lambda ((g$V$18980$CSxK@) (list (case-lambda ((g$V$18981$CSxK@) (list (case-lambda ((g$V$18982$CSxK@) (list (case-lambda ((g$V$18983$CSxK@) (cons (case-lambda ((g$V$18984$CSxK@) (cons (case-lambda ((g$V$18985$CSxK@) (list (case-lambda ((g$V$18986$CSxK@) (list (case-lambda ((g$V$18987$CSxK@) (cons (case-lambda ((g$V$18988$CSxK@) (cons (case-lambda ((g$V$18989$CSxK@) (list (case-lambda ((g$V$18990$CSxK@) (list (case-lambda ((g$V$18991$CSxK@) (list (case-lambda ((g$V$18992$CSxK@) (list (case-lambda ((g$V$18993$CSxK@) (list (case-lambda ((g$V$18994$CSxK@) (list (case-lambda ((g$V$18995$CSxK@) (cons (case-lambda ((g$V$18996$CSxK@) (cons (case-lambda ((g$V$18997$CSxK@) (list (case-lambda ((g$V$18998$CSxK@) (list (case-lambda ((g$V$18999$CSxK@) (list (case-lambda ((g$V$19000$CSxK@) (list (case-lambda ((g$V$19001$CSxK@) (list (case-lambda ((g$V$19002$CSxK@) (list (case-lambda ((g$V$19003$CSxK@) (list (case-lambda ((g$V$19004$CSxK@) (list (case-lambda ((g$V$19005$CSxK@) (list (case-lambda ((g$V$19006$CSxK@) (list (case-lambda ((g$V$19007$CSxK@) (list (case-lambda ((g$V$19008$CSxK@) (list (case-lambda ((g$V$19009$CSxK@) (g$bless$10673$CSxK@ g$C$18974$CSxK@ g$V$19009$CSxK@))) 'begin g$V$19008$CSxK@ g$V$19004$CSxK@ g$V$18994$CSxK@))) 'define g$mk$11521$CSxK@ g$V$19007$CSxK@))) 'enum-set-constructor g$V$19006$CSxK@))) 'make-enumeration g$V$19005$CSxK@))) 'quote g$name*$11520$CSxK@))) 'define-syntax g$name$11517$CSxK@ g$V$19003$CSxK@))) 'lambda '(x) g$V$19002$CSxK@))) 'syntax-case 'x '() g$V$19001$CSxK@))) '(_ n) '(identifier? #'n) g$V$19000$CSxK@))) 'if g$V$18999$CSxK@ '#''n g$V$18997$CSxK@))) 'memq '(syntax->datum #'n) g$V$18998$CSxK@))) 'quote g$name*$11520$CSxK@))) 'syntax-violation g$V$18996$CSxK@))) g$V$18995$CSxK@ '("not a member of set" x #'n)))) 'quote g$name$11517$CSxK@))) 'define-syntax g$maker$11519$CSxK@ g$V$18993$CSxK@))) 'lambda '(x) g$V$18992$CSxK@))) 'syntax-case 'x '() g$V$18991$CSxK@))) '(_ n* ...) g$V$18990$CSxK@))) 'begin g$V$18989$CSxK@ g$V$18976$CSxK@))) 'for-each g$V$18988$CSxK@))) g$V$18987$CSxK@ '(#'(n* ...))))) 'lambda '(n) g$V$18986$CSxK@ g$V$18982$CSxK@))) 'unless '(identifier? n) g$V$18985$CSxK@))) 'syntax-violation g$V$18984$CSxK@))) g$V$18983$CSxK@ '("non-identifier argument" x n)))) 'quote g$maker$11519$CSxK@))) 'unless g$V$18981$CSxK@ g$V$18979$CSxK@))) 'memq '(syntax->datum n) g$V$18980$CSxK@))) 'quote g$name*$11520$CSxK@))) 'syntax-violation g$V$18978$CSxK@))) g$V$18977$CSxK@ '("not a member of set" x n)))) 'quote g$maker$11519$CSxK@))) 'syntax g$V$18975$CSxK@))) g$mk$11521$CSxK@ '('(n* ...))))) g$C$19010$CSxK@ g$V$19013$CSxK@ g$V$19011$CSxK@))) g$V$19012$CSxK@))) g$id*$11518$CSxK@)))))) g$ls/false$11513$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19014$CSxK@ '#f '"invalid syntax" g$t$11512$CSxK@))))))) g$C$19017$CSxK@ g$V$19018$CSxK@))) g$t$11512$CSxK@ '(_ any each-any any)))) g$C$19019$CSxK@ g$stx$11509$CSxK@))))) g$C$19020$CSxK@ uninitialized uninitialized)))))) (library-letrec*-identity 'g$define-enumeration-macro$10686$CSxK@))) (g$time-macro$10687$CSxK@ g$time-macro$14229$CSxK@ ((case-lambda ((g$C$22754$CSxK@) (g$C$22754$CSxK@ (case-lambda ((g$C$19034$CSxK@ g$stx$11525$CSxK@) ((case-lambda ((g$C$19032$CSxK@ g$t$11526$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19033$CSxK@) ((case-lambda ((g$C$19031$CSxK@ g$ls/false$11527$CSxK@) (if g$ls/false$11527$CSxK@ (apply g$C$19031$CSxK@ (case-lambda ((g$C$19029$CSxK@ g$expr$11528$CSxK@) (call-with-values (case-lambda ((g$V$19030$CSxK@) ((case-lambda ((g$C$19021$CSxK@ g$str$11529$CSxK@) (list (case-lambda ((g$V$19022$CSxK@) (list (case-lambda ((g$V$19023$CSxK@) (g$bless$10673$CSxK@ g$C$19021$CSxK@ g$V$19023$CSxK@))) 'time-it g$str$11529$CSxK@ g$V$19022$CSxK@))) 'lambda '() g$expr$11528$CSxK@))) g$C$19029$CSxK@ g$V$19030$CSxK@))) (case-lambda ((g$C$19024$CSxK@) (g$open-string-output-port$8848$CSxK@ g$C$19024$CSxK@))) (case-lambda ((g$C$19028$CSxK@ g$p$11532$CSxK@ g$e$11533$CSxK@) ((case-lambda ((g$C$19025$CSxK@ g$e$11534$CSxK@ g$p$11535$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$19026$CSxK@) (write (case-lambda (g$IGNORE$19027$CSxK@ (g$e$11534$CSxK@ g$C$19025$CSxK@))) g$V$19026$CSxK@ g$p$11535$CSxK@))) g$expr$11528$CSxK@))) g$C$19028$CSxK@ g$e$11533$CSxK@ g$p$11532$CSxK@)))))) g$ls/false$11527$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19031$CSxK@ '#f '"invalid syntax" g$t$11526$CSxK@)))) g$C$19032$CSxK@ g$V$19033$CSxK@))) g$t$11526$CSxK@ '(_ any)))) g$C$19034$CSxK@ g$stx$11525$CSxK@)))))) (library-letrec*-identity 'g$time-macro$10687$CSxK@))) (g$delay-macro$10688$CSxK@ g$delay-macro$14230$CSxK@ ((case-lambda ((g$C$22755$CSxK@) (g$C$22755$CSxK@ (case-lambda ((g$C$19041$CSxK@ g$stx$11536$CSxK@) ((case-lambda ((g$C$19039$CSxK@ g$t$11537$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19040$CSxK@) ((case-lambda ((g$C$19038$CSxK@ g$ls/false$11538$CSxK@) (if g$ls/false$11538$CSxK@ (apply g$C$19038$CSxK@ (case-lambda ((g$C$19035$CSxK@ g$expr$11539$CSxK@) (list (case-lambda ((g$V$19036$CSxK@) (list (case-lambda ((g$V$19037$CSxK@) (g$bless$10673$CSxK@ g$C$19035$CSxK@ g$V$19037$CSxK@))) 'make-promise g$V$19036$CSxK@))) 'lambda '() g$expr$11539$CSxK@))) g$ls/false$11538$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19038$CSxK@ '#f '"invalid syntax" g$t$11537$CSxK@)))) g$C$19039$CSxK@ g$V$19040$CSxK@))) g$t$11537$CSxK@ '(_ any)))) g$C$19041$CSxK@ g$stx$11536$CSxK@)))))) (library-letrec*-identity 'g$delay-macro$10688$CSxK@))) (g$assert-macro$10689$CSxK@ g$assert-macro$14231$CSxK@ ((case-lambda ((g$C$22756$CSxK@) (g$C$22756$CSxK@ (case-lambda ((g$C$19054$CSxK@ g$stx$11540$CSxK@) ((case-lambda ((g$C$19052$CSxK@ g$t$11541$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19053$CSxK@) ((case-lambda ((g$C$19051$CSxK@ g$ls/false$11542$CSxK@) (if g$ls/false$11542$CSxK@ (apply g$C$19051$CSxK@ (case-lambda ((g$C$19048$CSxK@ g$expr$11543$CSxK@) (g$expression-position$10823$CSxK@ (case-lambda ((g$V$19049$CSxK@) ((case-lambda ((g$C$19047$CSxK@ g$t$11545$CSxK@) (if g$t$11545$CSxK@ (g$C$19047$CSxK@ g$t$11545$CSxK@) (g$expression-position$10823$CSxK@ g$C$19047$CSxK@ g$expr$11543$CSxK@)))) (case-lambda ((g$V$19050$CSxK@) ((case-lambda ((g$C$19042$CSxK@ g$pos$11544$CSxK@) (list (case-lambda ((g$V$19043$CSxK@) (list (case-lambda ((g$V$19044$CSxK@) (list (case-lambda ((g$V$19045$CSxK@) (list (case-lambda ((g$V$19046$CSxK@) (g$bless$10673$CSxK@ g$C$19042$CSxK@ g$V$19046$CSxK@))) 'unless g$expr$11543$CSxK@ g$V$19045$CSxK@))) 'assertion-error g$V$19044$CSxK@ g$V$19043$CSxK@))) 'quote g$expr$11543$CSxK@))) 'quote g$pos$11544$CSxK@))) g$C$19048$CSxK@ g$V$19050$CSxK@))) g$V$19049$CSxK@))) g$stx$11540$CSxK@))) g$ls/false$11542$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19051$CSxK@ '#f '"invalid syntax" g$t$11541$CSxK@)))) g$C$19052$CSxK@ g$V$19053$CSxK@))) g$t$11541$CSxK@ '(_ any)))) g$C$19054$CSxK@ g$stx$11540$CSxK@)))))) (library-letrec*-identity 'g$assert-macro$10689$CSxK@))) (g$endianness-macro$10690$CSxK@ g$endianness-macro$14232$CSxK@ ((case-lambda ((g$C$22757$CSxK@) (g$C$22757$CSxK@ (case-lambda ((g$C$19063$CSxK@ g$stx$11546$CSxK@) ((case-lambda ((g$C$19061$CSxK@ g$t$11547$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19062$CSxK@) ((case-lambda ((g$C$19060$CSxK@ g$ls/false$11548$CSxK@) (if g$ls/false$11548$CSxK@ (apply g$C$19060$CSxK@ (case-lambda ((g$C$19058$CSxK@ g$e$11549$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$19059$CSxK@) ((case-lambda ((g$C$19055$CSxK@ g$t$11550$CSxK@) (eqv? (case-lambda ((g$T$19056$CSxK@) (if g$T$19056$CSxK@ (g$bless$10673$CSxK@ g$C$19055$CSxK@ ''little) (eqv? (case-lambda ((g$T$19057$CSxK@) (if g$T$19057$CSxK@ (g$bless$10673$CSxK@ g$C$19055$CSxK@ ''big) (g$syntax-violation$10828$CSxK@ g$C$19055$CSxK@ '#f '"endianness must be big or little" g$stx$11546$CSxK@)))) g$t$11550$CSxK@ 'big)))) g$t$11550$CSxK@ 'little))) g$C$19058$CSxK@ g$V$19059$CSxK@))) g$e$11549$CSxK@))) g$ls/false$11548$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19060$CSxK@ '#f '"invalid syntax" g$t$11547$CSxK@)))) g$C$19061$CSxK@ g$V$19062$CSxK@))) g$t$11547$CSxK@ '(_ any)))) g$C$19063$CSxK@ g$stx$11546$CSxK@)))))) (library-letrec*-identity 'g$endianness-macro$10690$CSxK@))) (g$identifier-syntax-macro$10691$CSxK@ g$identifier-syntax-macro$14233$CSxK@ ((case-lambda ((g$C$22758$CSxK@) (g$C$22758$CSxK@ (case-lambda ((g$C$19096$CSxK@ g$stx$11551$CSxK@) ((case-lambda ((g$C$19094$CSxK@ g$t$11552$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19095$CSxK@) ((case-lambda ((g$C$19093$CSxK@ g$ls/false$11553$CSxK@) (if g$ls/false$11553$CSxK@ (apply g$C$19093$CSxK@ (case-lambda ((g$C$19064$CSxK@ g$expr$11554$CSxK@) (list (case-lambda ((g$V$19065$CSxK@) (cons (case-lambda ((g$V$19066$CSxK@) (cons (case-lambda ((g$V$19067$CSxK@) (list (case-lambda ((g$V$19068$CSxK@) (list (case-lambda ((g$V$19069$CSxK@) (list (case-lambda ((g$V$19070$CSxK@) (list (case-lambda ((g$V$19071$CSxK@) (list (case-lambda ((g$V$19072$CSxK@) (g$bless$10673$CSxK@ g$C$19064$CSxK@ g$V$19072$CSxK@))) 'lambda '(x) g$V$19071$CSxK@))) 'syntax-case 'x '() g$V$19070$CSxK@ g$V$19068$CSxK@))) 'id '(identifier? #'id) g$V$19069$CSxK@))) 'syntax g$expr$11554$CSxK@))) '(id e* ...) '(identifier? #'id) g$V$19067$CSxK@))) 'cons g$V$19066$CSxK@))) g$V$19065$CSxK@ '(#'(e* ...))))) 'syntax g$expr$11554$CSxK@))) g$ls/false$11553$CSxK@) ((case-lambda ((g$C$19091$CSxK@ g$t$11555$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19092$CSxK@) ((case-lambda ((g$C$19088$CSxK@ g$ls/false$11556$CSxK@) ((case-lambda ((g$J$19090$CSxK@) (if g$ls/false$11556$CSxK@ (apply g$J$19090$CSxK@ (case-lambda ((g$C$19073$CSxK@ g$id1$11557$CSxK@ g$expr1$11558$CSxK@ g$id2$11559$CSxK@ g$expr2$11560$CSxK@ g$expr3$11561$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$19074$CSxK@) (if g$T$19074$CSxK@ (g$id?$10347$CSxK@ (case-lambda ((g$T$19075$CSxK@) (if g$T$19075$CSxK@ (g$id?$10347$CSxK@ g$C$19073$CSxK@ g$expr2$11560$CSxK@) (g$C$19073$CSxK@ '#f)))) g$id2$11559$CSxK@) (g$C$19073$CSxK@ '#f)))) g$id1$11557$CSxK@))) g$ls/false$11556$CSxK@) (g$J$19090$CSxK@ '#f)))) (case-lambda ((g$T$19089$CSxK@) (if g$T$19089$CSxK@ (apply g$C$19088$CSxK@ (case-lambda ((g$C$19076$CSxK@ g$id1$11562$CSxK@ g$expr1$11563$CSxK@ g$id2$11564$CSxK@ g$expr2$11565$CSxK@ g$expr3$11566$CSxK@) (cons (case-lambda ((g$V$19077$CSxK@) (list (case-lambda ((g$V$19078$CSxK@) (list (case-lambda ((g$V$19079$CSxK@) (list (case-lambda ((g$V$19080$CSxK@) (list (case-lambda ((g$V$19081$CSxK@) (list (case-lambda ((g$V$19082$CSxK@) (list (case-lambda ((g$V$19083$CSxK@) (list (case-lambda ((g$V$19084$CSxK@) (list (case-lambda ((g$V$19085$CSxK@) (list (case-lambda ((g$V$19086$CSxK@) (list (case-lambda ((g$V$19087$CSxK@) (g$bless$10673$CSxK@ g$C$19076$CSxK@ g$V$19087$CSxK@))) 'cons ''macro! g$V$19086$CSxK@))) 'lambda '(x) g$V$19085$CSxK@))) 'syntax-case 'x '(set!) g$V$19084$CSxK@ g$V$19082$CSxK@ g$V$19079$CSxK@))) 'id '(identifier? #'id) g$V$19083$CSxK@))) 'syntax g$expr1$11563$CSxK@))) g$V$19081$CSxK@ g$V$19080$CSxK@))) 'set! 'id g$expr2$11565$CSxK@))) 'syntax g$expr3$11566$CSxK@))) '(id e* ...) '(identifier? #'id) g$V$19078$CSxK@))) 'syntax g$V$19077$CSxK@))) g$expr1$11563$CSxK@ '(e* ...)))) g$ls/false$11556$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19088$CSxK@ '#f '"invalid syntax" g$t$11555$CSxK@))))))) g$C$19091$CSxK@ g$V$19092$CSxK@))) g$t$11555$CSxK@ '(_ (any any) ((#(scheme-id set!) any any) any))))) g$C$19093$CSxK@ g$t$11552$CSxK@)))) g$C$19094$CSxK@ g$V$19095$CSxK@))) g$t$11552$CSxK@ '(_ any)))) g$C$19096$CSxK@ g$stx$11551$CSxK@)))))) (library-letrec*-identity 'g$identifier-syntax-macro$10691$CSxK@))) (g$do-macro$10692$CSxK@ g$do-macro$14234$CSxK@ ((case-lambda ((g$C$22759$CSxK@) (g$C$22759$CSxK@ (case-lambda ((g$C$19133$CSxK@ g$stx$11567$CSxK@) ((case-lambda ((g$C$19132$CSxK@ g$bind$11568$CSxK@) (begin (set! g$bind$11568$CSxK@ (case-lambda ((g$C$19109$CSxK@ g$x$11580$CSxK@) ((case-lambda ((g$C$19107$CSxK@ g$t$11581$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19108$CSxK@) ((case-lambda ((g$C$19106$CSxK@ g$ls/false$11582$CSxK@) (if g$ls/false$11582$CSxK@ (apply g$C$19106$CSxK@ (case-lambda ((g$C$19097$CSxK@ g$x$11583$CSxK@ g$init$11584$CSxK@) (list g$C$19097$CSxK@ g$x$11583$CSxK@ g$init$11584$CSxK@ g$x$11583$CSxK@))) g$ls/false$11582$CSxK@) ((case-lambda ((g$C$19104$CSxK@ g$t$11585$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19105$CSxK@) ((case-lambda ((g$C$19103$CSxK@ g$ls/false$11586$CSxK@) (if g$ls/false$11586$CSxK@ (apply g$C$19103$CSxK@ (case-lambda ((g$C$19098$CSxK@ g$x$11587$CSxK@ g$init$11588$CSxK@ g$step$11589$CSxK@) (list g$C$19098$CSxK@ g$x$11587$CSxK@ g$init$11588$CSxK@ g$step$11589$CSxK@))) g$ls/false$11586$CSxK@) ((case-lambda ((g$C$19101$CSxK@ g$t$11590$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19102$CSxK@) ((case-lambda ((g$C$19100$CSxK@ g$ls/false$11591$CSxK@) (if g$ls/false$11591$CSxK@ (apply g$C$19100$CSxK@ (case-lambda ((g$C$19099$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19099$CSxK@ '#f '"invalid binding" g$stx$11567$CSxK@))) g$ls/false$11591$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19100$CSxK@ '#f '"invalid syntax" g$t$11590$CSxK@)))) g$C$19101$CSxK@ g$V$19102$CSxK@))) g$t$11590$CSxK@ '_))) g$C$19103$CSxK@ g$t$11585$CSxK@)))) g$C$19104$CSxK@ g$V$19105$CSxK@))) g$t$11585$CSxK@ '(any any any)))) g$C$19106$CSxK@ g$t$11581$CSxK@)))) g$C$19107$CSxK@ g$V$19108$CSxK@))) g$t$11581$CSxK@ '(any any)))) g$C$19109$CSxK@ g$x$11580$CSxK@)))) ((case-lambda ((g$C$19130$CSxK@ g$t$11569$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19131$CSxK@) ((case-lambda ((g$C$19129$CSxK@ g$ls/false$11570$CSxK@) (if g$ls/false$11570$CSxK@ (apply g$C$19129$CSxK@ (case-lambda ((g$C$19127$CSxK@ g$binding*$11571$CSxK@ g$test$11572$CSxK@ g$expr*$11573$CSxK@ g$command*$11574$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19128$CSxK@) ((case-lambda ((g$C$19125$CSxK@ g$t$11575$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19126$CSxK@) ((case-lambda ((g$C$19124$CSxK@ g$ls/false$11576$CSxK@) (if g$ls/false$11576$CSxK@ (apply g$C$19124$CSxK@ (case-lambda ((g$C$19110$CSxK@ g$x*$11577$CSxK@ g$init*$11578$CSxK@ g$step*$11579$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$T$19111$CSxK@) (if g$T$19111$CSxK@ (cons (case-lambda ((g$V$19112$CSxK@) (cons (case-lambda ((g$V$19113$CSxK@) (list (case-lambda ((g$V$19114$CSxK@) (append (case-lambda ((g$V$19115$CSxK@) (cons (case-lambda ((g$V$19116$CSxK@) (cons (case-lambda ((g$V$19117$CSxK@) (cons (case-lambda ((g$V$19118$CSxK@) (list (case-lambda ((g$V$19119$CSxK@) (list (case-lambda ((g$V$19120$CSxK@) (list (case-lambda ((g$V$19121$CSxK@) (list (case-lambda ((g$V$19122$CSxK@) (list (case-lambda ((g$V$19123$CSxK@) (g$bless$10673$CSxK@ g$C$19110$CSxK@ g$V$19123$CSxK@))) 'letrec g$V$19122$CSxK@ g$V$19112$CSxK@))) g$V$19121$CSxK@))) 'loop g$V$19120$CSxK@))) 'lambda g$x*$11577$CSxK@ g$V$19119$CSxK@))) 'if g$test$11572$CSxK@ g$V$19118$CSxK@ g$V$19116$CSxK@))) 'begin g$V$19117$CSxK@))) '(if #f #f) g$expr*$11573$CSxK@))) 'begin g$V$19115$CSxK@))) g$command*$11574$CSxK@ g$V$19114$CSxK@))) g$V$19113$CSxK@))) 'loop g$step*$11579$CSxK@))) 'loop g$init*$11578$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19110$CSxK@ '#f '"invalid bindings" g$stx$11567$CSxK@)))) g$x*$11577$CSxK@))) g$ls/false$11576$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19124$CSxK@ '#f '"invalid syntax" g$t$11575$CSxK@)))) g$C$19125$CSxK@ g$V$19126$CSxK@))) g$t$11575$CSxK@ '#(each (any any any))))) g$C$19127$CSxK@ g$V$19128$CSxK@))) g$bind$11568$CSxK@ g$binding*$11571$CSxK@))) g$ls/false$11570$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19129$CSxK@ '#f '"invalid syntax" g$t$11569$CSxK@)))) g$C$19130$CSxK@ g$V$19131$CSxK@))) g$t$11569$CSxK@ '(_ each-any (any . each-any) . each-any)))) g$C$19132$CSxK@ g$stx$11567$CSxK@)))) g$C$19133$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$do-macro$10692$CSxK@))) (g$let*-macro$10693$CSxK@ g$let*-macro$14235$CSxK@ ((case-lambda ((g$C$22760$CSxK@) (g$C$22760$CSxK@ (case-lambda ((g$C$19161$CSxK@ g$stx$11592$CSxK@) ((case-lambda ((g$C$19159$CSxK@ g$t$11593$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19160$CSxK@) ((case-lambda ((g$C$19156$CSxK@ g$ls/false$11594$CSxK@) ((case-lambda ((g$J$19158$CSxK@) (if g$ls/false$11594$CSxK@ (apply g$J$19158$CSxK@ (case-lambda ((g$C$19134$CSxK@ g$lhs*$11595$CSxK@ g$rhs*$11596$CSxK@ g$b$11597$CSxK@ g$b*$11598$CSxK@) (g$for-all$6711$CSxK@ g$C$19134$CSxK@ g$id?$10347$CSxK@ g$lhs*$11595$CSxK@))) g$ls/false$11594$CSxK@) (g$J$19158$CSxK@ '#f)))) (case-lambda ((g$T$19157$CSxK@) (if g$T$19157$CSxK@ (apply g$C$19156$CSxK@ (case-lambda ((g$C$19152$CSxK@ g$lhs*$11599$CSxK@ g$rhs*$11600$CSxK@ g$b$11601$CSxK@ g$b*$11602$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19153$CSxK@) ((case-lambda ((g$C$19151$CSxK@ g$f$11603$CSxK@) ((case-lambda ((g$C$19136$CSxK@ g$f$19135$CSxK@) (begin (set! g$f$11603$CSxK@ g$f$19135$CSxK@) (g$C$19136$CSxK@ g$f$11603$CSxK@)))) g$C$19151$CSxK@ (case-lambda ((g$C$19137$CSxK@ g$x*$11604$CSxK@) (null? (case-lambda ((g$T$19138$CSxK@) (if g$T$19138$CSxK@ (cons (case-lambda ((g$V$19139$CSxK@) (cons (case-lambda ((g$V$19140$CSxK@) (cons g$C$19137$CSxK@ 'let g$V$19140$CSxK@))) '() g$V$19139$CSxK@))) g$b$11601$CSxK@ g$b*$11602$CSxK@) (cdr (case-lambda ((g$V$19141$CSxK@) (null? (case-lambda ((g$T$19142$CSxK@) (if g$T$19142$CSxK@ (cons (case-lambda ((g$V$19143$CSxK@) (car (case-lambda ((g$V$19144$CSxK@) (list (case-lambda ((g$V$19145$CSxK@) (cons (case-lambda ((g$V$19146$CSxK@) (cons g$C$19137$CSxK@ 'let g$V$19146$CSxK@))) g$V$19145$CSxK@ g$V$19143$CSxK@))) g$V$19144$CSxK@))) g$x*$11604$CSxK@))) g$b$11601$CSxK@ g$b*$11602$CSxK@) (cdr (case-lambda ((g$V$19147$CSxK@) (g$f$11603$CSxK@ (case-lambda ((g$V$19148$CSxK@) (car (case-lambda ((g$V$19149$CSxK@) (list (case-lambda ((g$V$19150$CSxK@) (list g$C$19137$CSxK@ 'let g$V$19150$CSxK@ g$V$19148$CSxK@))) g$V$19149$CSxK@))) g$x*$11604$CSxK@))) g$V$19147$CSxK@))) g$x*$11604$CSxK@)))) g$V$19141$CSxK@))) g$x*$11604$CSxK@)))) g$x*$11604$CSxK@)))))) (case-lambda ((g$V$19154$CSxK@) (g$V$19154$CSxK@ (case-lambda ((g$V$19155$CSxK@) (g$bless$10673$CSxK@ g$C$19152$CSxK@ g$V$19155$CSxK@))) g$V$19153$CSxK@))) uninitialized))) list g$lhs*$11599$CSxK@ g$rhs*$11600$CSxK@))) g$ls/false$11594$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19156$CSxK@ '#f '"invalid syntax" g$t$11593$CSxK@))))))) g$C$19159$CSxK@ g$V$19160$CSxK@))) g$t$11593$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$19161$CSxK@ g$stx$11592$CSxK@)))))) (library-letrec*-identity 'g$let*-macro$10693$CSxK@))) (g$or-macro$10694$CSxK@ g$or-macro$14236$CSxK@ ((case-lambda ((g$C$22761$CSxK@) (g$C$22761$CSxK@ (case-lambda ((g$C$19183$CSxK@ g$stx$11605$CSxK@) ((case-lambda ((g$C$19181$CSxK@ g$t$11606$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19182$CSxK@) ((case-lambda ((g$C$19180$CSxK@ g$ls/false$11607$CSxK@) (if g$ls/false$11607$CSxK@ (apply g$C$19180$CSxK@ (case-lambda ((g$C$19162$CSxK@) (g$C$19162$CSxK@ '#f))) g$ls/false$11607$CSxK@) ((case-lambda ((g$C$19178$CSxK@ g$t$11608$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19179$CSxK@) ((case-lambda ((g$C$19177$CSxK@ g$ls/false$11609$CSxK@) (if g$ls/false$11609$CSxK@ (apply g$C$19177$CSxK@ (case-lambda ((g$C$19174$CSxK@ g$e$11610$CSxK@ g$e*$11611$CSxK@) ((case-lambda ((g$C$19173$CSxK@ g$f$11612$CSxK@) ((case-lambda ((g$C$19164$CSxK@ g$f$19163$CSxK@) (begin (set! g$f$11612$CSxK@ g$f$19163$CSxK@) (g$C$19164$CSxK@ g$f$11612$CSxK@)))) g$C$19173$CSxK@ (case-lambda ((g$C$19165$CSxK@ g$e$11613$CSxK@ g$e*$11614$CSxK@) (null? (case-lambda ((g$T$19166$CSxK@) (if g$T$19166$CSxK@ (list g$C$19165$CSxK@ 'begin '#f g$e$11613$CSxK@) (cdr (case-lambda ((g$V$19167$CSxK@) (car (case-lambda ((g$V$19168$CSxK@) (g$f$11612$CSxK@ (case-lambda ((g$V$19169$CSxK@) (list (case-lambda ((g$V$19170$CSxK@) (list (case-lambda ((g$V$19171$CSxK@) (list (case-lambda ((g$V$19172$CSxK@) (list g$C$19165$CSxK@ 'let g$V$19172$CSxK@ g$V$19170$CSxK@))) g$V$19171$CSxK@))) 't g$e$11613$CSxK@))) 'if 't 't g$V$19169$CSxK@))) g$V$19168$CSxK@ g$V$19167$CSxK@))) g$e*$11614$CSxK@))) g$e*$11614$CSxK@)))) g$e*$11614$CSxK@)))))) (case-lambda ((g$V$19175$CSxK@) (g$V$19175$CSxK@ (case-lambda ((g$V$19176$CSxK@) (g$bless$10673$CSxK@ g$C$19174$CSxK@ g$V$19176$CSxK@))) g$e$11610$CSxK@ g$e*$11611$CSxK@))) uninitialized))) g$ls/false$11609$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19177$CSxK@ '#f '"invalid syntax" g$t$11608$CSxK@)))) g$C$19178$CSxK@ g$V$19179$CSxK@))) g$t$11608$CSxK@ '(_ any . each-any)))) g$C$19180$CSxK@ g$t$11606$CSxK@)))) g$C$19181$CSxK@ g$V$19182$CSxK@))) g$t$11606$CSxK@ '(_)))) g$C$19183$CSxK@ g$stx$11605$CSxK@)))))) (library-letrec*-identity 'g$or-macro$10694$CSxK@))) (g$and-macro$10695$CSxK@ g$and-macro$14237$CSxK@ ((case-lambda ((g$C$22762$CSxK@) (g$C$22762$CSxK@ (case-lambda ((g$C$19204$CSxK@ g$stx$11615$CSxK@) ((case-lambda ((g$C$19202$CSxK@ g$t$11616$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19203$CSxK@) ((case-lambda ((g$C$19201$CSxK@ g$ls/false$11617$CSxK@) (if g$ls/false$11617$CSxK@ (apply g$C$19201$CSxK@ (case-lambda ((g$C$19184$CSxK@) (g$C$19184$CSxK@ '#t))) g$ls/false$11617$CSxK@) ((case-lambda ((g$C$19199$CSxK@ g$t$11618$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19200$CSxK@) ((case-lambda ((g$C$19198$CSxK@ g$ls/false$11619$CSxK@) (if g$ls/false$11619$CSxK@ (apply g$C$19198$CSxK@ (case-lambda ((g$C$19195$CSxK@ g$e$11620$CSxK@ g$e*$11621$CSxK@) ((case-lambda ((g$C$19194$CSxK@ g$f$11622$CSxK@) ((case-lambda ((g$C$19186$CSxK@ g$f$19185$CSxK@) (begin (set! g$f$11622$CSxK@ g$f$19185$CSxK@) (g$C$19186$CSxK@ g$f$11622$CSxK@)))) g$C$19194$CSxK@ (case-lambda ((g$C$19187$CSxK@ g$e$11623$CSxK@ g$e*$11624$CSxK@) (null? (case-lambda ((g$T$19188$CSxK@) (if g$T$19188$CSxK@ (list g$C$19187$CSxK@ 'begin '#f g$e$11623$CSxK@) (cdr (case-lambda ((g$V$19189$CSxK@) (car (case-lambda ((g$V$19190$CSxK@) (g$f$11622$CSxK@ (case-lambda ((g$V$19191$CSxK@) (cons (case-lambda ((g$V$19192$CSxK@) (cons (case-lambda ((g$V$19193$CSxK@) (cons g$C$19187$CSxK@ 'if g$V$19193$CSxK@))) g$e$11623$CSxK@ g$V$19192$CSxK@))) g$V$19191$CSxK@ '(#f)))) g$V$19190$CSxK@ g$V$19189$CSxK@))) g$e*$11624$CSxK@))) g$e*$11624$CSxK@)))) g$e*$11624$CSxK@)))))) (case-lambda ((g$V$19196$CSxK@) (g$V$19196$CSxK@ (case-lambda ((g$V$19197$CSxK@) (g$bless$10673$CSxK@ g$C$19195$CSxK@ g$V$19197$CSxK@))) g$e$11620$CSxK@ g$e*$11621$CSxK@))) uninitialized))) g$ls/false$11619$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19198$CSxK@ '#f '"invalid syntax" g$t$11618$CSxK@)))) g$C$19199$CSxK@ g$V$19200$CSxK@))) g$t$11618$CSxK@ '(_ any . each-any)))) g$C$19201$CSxK@ g$t$11616$CSxK@)))) g$C$19202$CSxK@ g$V$19203$CSxK@))) g$t$11616$CSxK@ '(_)))) g$C$19204$CSxK@ g$stx$11615$CSxK@)))))) (library-letrec*-identity 'g$and-macro$10695$CSxK@))) (g$cond-macro$10696$CSxK@ g$cond-macro$14238$CSxK@ ((case-lambda ((g$C$22763$CSxK@) (g$C$22763$CSxK@ (case-lambda ((g$C$19277$CSxK@ g$stx$11625$CSxK@) ((case-lambda ((g$C$19275$CSxK@ g$t$11626$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19276$CSxK@) ((case-lambda ((g$C$19274$CSxK@ g$ls/false$11627$CSxK@) (if g$ls/false$11627$CSxK@ (apply g$C$19274$CSxK@ (case-lambda ((g$C$19271$CSxK@ g$cls$11628$CSxK@ g$cls*$11629$CSxK@) ((case-lambda ((g$C$19270$CSxK@ g$f$11630$CSxK@) ((case-lambda ((g$C$19206$CSxK@ g$f$19205$CSxK@) (begin (set! g$f$11630$CSxK@ g$f$19205$CSxK@) (g$C$19206$CSxK@ g$f$11630$CSxK@)))) g$C$19270$CSxK@ (case-lambda ((g$C$19268$CSxK@ g$cls$11631$CSxK@ g$cls*$11632$CSxK@) (null? (case-lambda ((g$T$19269$CSxK@) (if g$T$19269$CSxK@ ((case-lambda ((g$C$19232$CSxK@ g$t$11633$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19233$CSxK@) ((case-lambda ((g$C$19231$CSxK@ g$ls/false$11634$CSxK@) (if g$ls/false$11634$CSxK@ (apply g$C$19231$CSxK@ (case-lambda ((g$C$19207$CSxK@ g$e$11635$CSxK@ g$e*$11636$CSxK@) (cons (case-lambda ((g$V$19208$CSxK@) (cons g$C$19207$CSxK@ 'begin g$V$19208$CSxK@))) g$e$11635$CSxK@ g$e*$11636$CSxK@))) g$ls/false$11634$CSxK@) ((case-lambda ((g$C$19229$CSxK@ g$t$11637$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19230$CSxK@) ((case-lambda ((g$C$19228$CSxK@ g$ls/false$11638$CSxK@) (if g$ls/false$11638$CSxK@ (apply g$C$19228$CSxK@ (case-lambda ((g$C$19209$CSxK@ g$e$11639$CSxK@ g$p$11640$CSxK@) (cons (case-lambda ((g$V$19210$CSxK@) (list (case-lambda ((g$V$19211$CSxK@) (list (case-lambda ((g$V$19212$CSxK@) (list (case-lambda ((g$V$19213$CSxK@) (list g$C$19209$CSxK@ 'let g$V$19213$CSxK@ g$V$19211$CSxK@))) g$V$19212$CSxK@))) 't g$e$11639$CSxK@))) 'if 't g$V$19210$CSxK@))) g$p$11640$CSxK@ '(t)))) g$ls/false$11638$CSxK@) ((case-lambda ((g$C$19226$CSxK@ g$t$11641$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19227$CSxK@) ((case-lambda ((g$C$19225$CSxK@ g$ls/false$11642$CSxK@) (if g$ls/false$11642$CSxK@ (apply g$C$19225$CSxK@ (case-lambda ((g$C$19214$CSxK@ g$e$11643$CSxK@) (cons (case-lambda ((g$V$19215$CSxK@) (cons g$C$19214$CSxK@ 'or g$V$19215$CSxK@))) g$e$11643$CSxK@ '((if #f #f))))) g$ls/false$11642$CSxK@) ((case-lambda ((g$C$19223$CSxK@ g$t$11644$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19224$CSxK@) ((case-lambda ((g$C$19222$CSxK@ g$ls/false$11645$CSxK@) (if g$ls/false$11645$CSxK@ (apply g$C$19222$CSxK@ (case-lambda ((g$C$19216$CSxK@ g$e$11646$CSxK@ g$e*$11647$CSxK@) (cons (case-lambda ((g$V$19217$CSxK@) (list g$C$19216$CSxK@ 'if g$e$11646$CSxK@ g$V$19217$CSxK@))) 'begin g$e*$11647$CSxK@))) g$ls/false$11645$CSxK@) ((case-lambda ((g$C$19220$CSxK@ g$t$11648$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19221$CSxK@) ((case-lambda ((g$C$19219$CSxK@ g$ls/false$11649$CSxK@) (if g$ls/false$11649$CSxK@ (apply g$C$19219$CSxK@ (case-lambda ((g$C$19218$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19218$CSxK@ '#f '"invalid last clause" g$stx$11625$CSxK@))) g$ls/false$11649$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19219$CSxK@ '#f '"invalid syntax" g$t$11648$CSxK@)))) g$C$19220$CSxK@ g$V$19221$CSxK@))) g$t$11648$CSxK@ '_))) g$C$19222$CSxK@ g$t$11644$CSxK@)))) g$C$19223$CSxK@ g$V$19224$CSxK@))) g$t$11644$CSxK@ '(any . each-any)))) g$C$19225$CSxK@ g$t$11641$CSxK@)))) g$C$19226$CSxK@ g$V$19227$CSxK@))) g$t$11641$CSxK@ '(any)))) g$C$19228$CSxK@ g$t$11637$CSxK@)))) g$C$19229$CSxK@ g$V$19230$CSxK@))) g$t$11637$CSxK@ '(any #(scheme-id =>) any)))) g$C$19231$CSxK@ g$t$11633$CSxK@)))) g$C$19232$CSxK@ g$V$19233$CSxK@))) g$t$11633$CSxK@ '(#(scheme-id else) any . each-any)))) g$C$19268$CSxK@ g$cls$11631$CSxK@) ((case-lambda ((g$C$19266$CSxK@ g$t$11650$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19267$CSxK@) ((case-lambda ((g$C$19265$CSxK@ g$ls/false$11651$CSxK@) (if g$ls/false$11651$CSxK@ (apply g$C$19265$CSxK@ (case-lambda ((g$C$19234$CSxK@ g$e$11652$CSxK@ g$e*$11653$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19234$CSxK@ '#f '"incorrect position of keyword else" g$stx$11625$CSxK@))) g$ls/false$11651$CSxK@) ((case-lambda ((g$C$19263$CSxK@ g$t$11654$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19264$CSxK@) ((case-lambda ((g$C$19262$CSxK@ g$ls/false$11655$CSxK@) (if g$ls/false$11655$CSxK@ (apply g$C$19262$CSxK@ (case-lambda ((g$C$19235$CSxK@ g$e$11656$CSxK@ g$p$11657$CSxK@) (cdr (case-lambda ((g$V$19236$CSxK@) (car (case-lambda ((g$V$19237$CSxK@) (g$f$11630$CSxK@ (case-lambda ((g$V$19238$CSxK@) (cons (case-lambda ((g$V$19239$CSxK@) (list (case-lambda ((g$V$19240$CSxK@) (list (case-lambda ((g$V$19241$CSxK@) (list (case-lambda ((g$V$19242$CSxK@) (list g$C$19235$CSxK@ 'let g$V$19242$CSxK@ g$V$19240$CSxK@))) g$V$19241$CSxK@))) 't g$e$11656$CSxK@))) 'if 't g$V$19239$CSxK@ g$V$19238$CSxK@))) g$p$11657$CSxK@ '(t)))) g$V$19237$CSxK@ g$V$19236$CSxK@))) g$cls*$11632$CSxK@))) g$cls*$11632$CSxK@))) g$ls/false$11655$CSxK@) ((case-lambda ((g$C$19260$CSxK@ g$t$11658$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19261$CSxK@) ((case-lambda ((g$C$19259$CSxK@ g$ls/false$11659$CSxK@) (if g$ls/false$11659$CSxK@ (apply g$C$19259$CSxK@ (case-lambda ((g$C$19243$CSxK@ g$e$11660$CSxK@) (cdr (case-lambda ((g$V$19244$CSxK@) (car (case-lambda ((g$V$19245$CSxK@) (g$f$11630$CSxK@ (case-lambda ((g$V$19246$CSxK@) (list g$C$19243$CSxK@ 'or g$e$11660$CSxK@ g$V$19246$CSxK@))) g$V$19245$CSxK@ g$V$19244$CSxK@))) g$cls*$11632$CSxK@))) g$cls*$11632$CSxK@))) g$ls/false$11659$CSxK@) ((case-lambda ((g$C$19257$CSxK@ g$t$11661$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19258$CSxK@) ((case-lambda ((g$C$19256$CSxK@ g$ls/false$11662$CSxK@) (if g$ls/false$11662$CSxK@ (apply g$C$19256$CSxK@ (case-lambda ((g$C$19247$CSxK@ g$e$11663$CSxK@ g$e*$11664$CSxK@) (cdr (case-lambda ((g$V$19248$CSxK@) (car (case-lambda ((g$V$19249$CSxK@) (g$f$11630$CSxK@ (case-lambda ((g$V$19250$CSxK@) (cons (case-lambda ((g$V$19251$CSxK@) (list g$C$19247$CSxK@ 'if g$e$11663$CSxK@ g$V$19251$CSxK@ g$V$19250$CSxK@))) 'begin g$e*$11664$CSxK@))) g$V$19249$CSxK@ g$V$19248$CSxK@))) g$cls*$11632$CSxK@))) g$cls*$11632$CSxK@))) g$ls/false$11662$CSxK@) ((case-lambda ((g$C$19254$CSxK@ g$t$11665$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19255$CSxK@) ((case-lambda ((g$C$19253$CSxK@ g$ls/false$11666$CSxK@) (if g$ls/false$11666$CSxK@ (apply g$C$19253$CSxK@ (case-lambda ((g$C$19252$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19252$CSxK@ '#f '"invalid last clause" g$stx$11625$CSxK@))) g$ls/false$11666$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19253$CSxK@ '#f '"invalid syntax" g$t$11665$CSxK@)))) g$C$19254$CSxK@ g$V$19255$CSxK@))) g$t$11665$CSxK@ '_))) g$C$19256$CSxK@ g$t$11661$CSxK@)))) g$C$19257$CSxK@ g$V$19258$CSxK@))) g$t$11661$CSxK@ '(any . each-any)))) g$C$19259$CSxK@ g$t$11658$CSxK@)))) g$C$19260$CSxK@ g$V$19261$CSxK@))) g$t$11658$CSxK@ '(any)))) g$C$19262$CSxK@ g$t$11654$CSxK@)))) g$C$19263$CSxK@ g$V$19264$CSxK@))) g$t$11654$CSxK@ '(any #(scheme-id =>) any)))) g$C$19265$CSxK@ g$t$11650$CSxK@)))) g$C$19266$CSxK@ g$V$19267$CSxK@))) g$t$11650$CSxK@ '(#(scheme-id else) any . each-any)))) g$C$19268$CSxK@ g$cls$11631$CSxK@)))) g$cls*$11632$CSxK@)))))) (case-lambda ((g$V$19272$CSxK@) (g$V$19272$CSxK@ (case-lambda ((g$V$19273$CSxK@) (g$bless$10673$CSxK@ g$C$19271$CSxK@ g$V$19273$CSxK@))) g$cls$11628$CSxK@ g$cls*$11629$CSxK@))) uninitialized))) g$ls/false$11627$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19274$CSxK@ '#f '"invalid syntax" g$t$11626$CSxK@)))) g$C$19275$CSxK@ g$V$19276$CSxK@))) g$t$11626$CSxK@ '(_ any . each-any)))) g$C$19277$CSxK@ g$stx$11625$CSxK@)))))) (library-letrec*-identity 'g$cond-macro$10696$CSxK@))) (g$do-include$10697$CSxK@ g$do-include$14239$CSxK@ ((case-lambda ((g$C$22764$CSxK@) (g$C$22764$CSxK@ (case-lambda ((g$C$19298$CSxK@ g$stx$11667$CSxK@ g$id$11668$CSxK@ g$filename$11669$CSxK@) (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$19299$CSxK@) ((case-lambda ((g$C$19289$CSxK@ g$filename$11670$CSxK@) ((case-lambda ((g$J$19293$CSxK@) ((case-lambda ((g$J$19296$CSxK@) (string? (case-lambda ((g$T$19297$CSxK@) (if g$T$19297$CSxK@ (g$id?$10347$CSxK@ g$J$19296$CSxK@ g$id$11668$CSxK@) (g$J$19296$CSxK@ '#f)))) g$filename$11670$CSxK@))) (case-lambda ((g$V$19294$CSxK@) (not (case-lambda ((g$T$19295$CSxK@) (if g$T$19295$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$19293$CSxK@ '#f '"invalid syntax" g$stx$11667$CSxK@) (void g$J$19293$CSxK@)))) g$V$19294$CSxK@)))))) (case-lambda (g$IGNORE$19290$CSxK@ (g$with-input-from-file$8907$CSxK@ (case-lambda ((g$V$19291$CSxK@) (g$bless$10673$CSxK@ (case-lambda ((g$V$19292$CSxK@) (cons g$C$19289$CSxK@ g$V$19292$CSxK@ g$V$19291$CSxK@))) 'begin))) g$filename$11670$CSxK@ (case-lambda ((g$C$19287$CSxK@) ((case-lambda ((g$C$19286$CSxK@ g$f$11671$CSxK@) ((case-lambda ((g$C$19279$CSxK@ g$f$19278$CSxK@) (begin (set! g$f$11671$CSxK@ g$f$19278$CSxK@) (g$C$19279$CSxK@ g$f$11671$CSxK@)))) g$C$19286$CSxK@ (case-lambda ((g$C$19284$CSxK@ g$ls$11672$CSxK@) (read-annotated (case-lambda ((g$V$19285$CSxK@) ((case-lambda ((g$C$19280$CSxK@ g$x$11673$CSxK@) (eof-object? (case-lambda ((g$T$19281$CSxK@) (if g$T$19281$CSxK@ (g$reverse$7391$CSxK@ g$C$19280$CSxK@ g$ls$11672$CSxK@) (g$datum->stx$10330$CSxK@ (case-lambda ((g$V$19282$CSxK@) (cons (case-lambda ((g$V$19283$CSxK@) (g$f$11671$CSxK@ g$C$19280$CSxK@ g$V$19283$CSxK@))) g$V$19282$CSxK@ g$ls$11672$CSxK@))) g$id$11668$CSxK@ g$x$11673$CSxK@)))) g$x$11673$CSxK@))) g$C$19284$CSxK@ g$V$19285$CSxK@))))))))) (case-lambda ((g$V$19288$CSxK@) (g$V$19288$CSxK@ g$C$19287$CSxK@ '()))) uninitialized))))))))) g$C$19298$CSxK@ g$V$19299$CSxK@))) g$filename$11669$CSxK@)))))) (library-letrec*-identity 'g$do-include$10697$CSxK@))) (g$include-macro$10698$CSxK@ g$include-macro$14240$CSxK@ ((case-lambda ((g$C$22765$CSxK@) (g$C$22765$CSxK@ (case-lambda ((g$C$19304$CSxK@ g$e$11674$CSxK@) ((case-lambda ((g$C$19302$CSxK@ g$t$11675$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19303$CSxK@) ((case-lambda ((g$C$19301$CSxK@ g$ls/false$11676$CSxK@) (if g$ls/false$11676$CSxK@ (apply g$C$19301$CSxK@ (case-lambda ((g$C$19300$CSxK@ g$id$11677$CSxK@ g$filename$11678$CSxK@) (g$do-include$10697$CSxK@ g$C$19300$CSxK@ g$e$11674$CSxK@ g$id$11677$CSxK@ g$filename$11678$CSxK@))) g$ls/false$11676$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19301$CSxK@ '#f '"invalid syntax" g$t$11675$CSxK@)))) g$C$19302$CSxK@ g$V$19303$CSxK@))) g$t$11675$CSxK@ '(any any)))) g$C$19304$CSxK@ g$e$11674$CSxK@)))))) (library-letrec*-identity 'g$include-macro$10698$CSxK@))) (g$include-into-macro$10699$CSxK@ g$include-into-macro$14241$CSxK@ ((case-lambda ((g$C$22766$CSxK@) (g$C$22766$CSxK@ (case-lambda ((g$C$19309$CSxK@ g$e$11679$CSxK@) ((case-lambda ((g$C$19307$CSxK@ g$t$11680$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19308$CSxK@) ((case-lambda ((g$C$19306$CSxK@ g$ls/false$11681$CSxK@) (if g$ls/false$11681$CSxK@ (apply g$C$19306$CSxK@ (case-lambda ((g$C$19305$CSxK@ g$id$11682$CSxK@ g$filename$11683$CSxK@) (g$do-include$10697$CSxK@ g$C$19305$CSxK@ g$e$11679$CSxK@ g$id$11682$CSxK@ g$filename$11683$CSxK@))) g$ls/false$11681$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19306$CSxK@ '#f '"invalid syntax" g$t$11680$CSxK@)))) g$C$19307$CSxK@ g$V$19308$CSxK@))) g$t$11680$CSxK@ '(_ any any)))) g$C$19309$CSxK@ g$e$11679$CSxK@)))))) (library-letrec*-identity 'g$include-into-macro$10699$CSxK@))) (g$syntax-rules-macro$10700$CSxK@ g$syntax-rules-macro$14242$CSxK@ ((case-lambda ((g$C$22767$CSxK@) (g$C$22767$CSxK@ (case-lambda ((g$C$19331$CSxK@ g$e$11684$CSxK@) ((case-lambda ((g$C$19329$CSxK@ g$t$11685$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19330$CSxK@) ((case-lambda ((g$C$19328$CSxK@ g$ls/false$11686$CSxK@) (if g$ls/false$11686$CSxK@ (apply g$C$19328$CSxK@ (case-lambda ((g$C$19321$CSxK@ g$lits$11687$CSxK@ g$pat*$11688$CSxK@ g$tmp*$11689$CSxK@) (g$verify-literals$10713$CSxK@ (case-lambda (g$IGNORE$19322$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$19323$CSxK@) (cons (case-lambda ((g$V$19324$CSxK@) (cons (case-lambda ((g$V$19325$CSxK@) (cons (case-lambda ((g$V$19326$CSxK@) (list (case-lambda ((g$V$19327$CSxK@) (g$bless$10673$CSxK@ g$C$19321$CSxK@ g$V$19327$CSxK@))) 'lambda '(x) g$V$19326$CSxK@))) 'syntax-case g$V$19325$CSxK@))) 'x g$V$19324$CSxK@))) g$lits$11687$CSxK@ g$V$19323$CSxK@))) (case-lambda ((g$C$19320$CSxK@ g$pat$11690$CSxK@ g$tmp$11691$CSxK@) ((case-lambda ((g$C$19318$CSxK@ g$t$11692$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19319$CSxK@) ((case-lambda ((g$C$19317$CSxK@ g$ls/false$11693$CSxK@) (if g$ls/false$11693$CSxK@ (apply g$C$19317$CSxK@ (case-lambda ((g$C$19310$CSxK@ g$rest$11694$CSxK@) (list (case-lambda ((g$V$19311$CSxK@) (cons (case-lambda ((g$V$19312$CSxK@) (list g$C$19310$CSxK@ g$V$19312$CSxK@ g$V$19311$CSxK@))) 'g g$rest$11694$CSxK@))) 'syntax g$tmp$11691$CSxK@))) g$ls/false$11693$CSxK@) ((case-lambda ((g$C$19315$CSxK@ g$t$11695$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19316$CSxK@) ((case-lambda ((g$C$19314$CSxK@ g$ls/false$11696$CSxK@) (if g$ls/false$11696$CSxK@ (apply g$C$19314$CSxK@ (case-lambda ((g$C$19313$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19313$CSxK@ '#f '"invalid syntax-rules pattern" g$e$11684$CSxK@ g$pat$11690$CSxK@))) g$ls/false$11696$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19314$CSxK@ '#f '"invalid syntax" g$t$11695$CSxK@)))) g$C$19315$CSxK@ g$V$19316$CSxK@))) g$t$11695$CSxK@ '_))) g$C$19317$CSxK@ g$t$11692$CSxK@)))) g$C$19318$CSxK@ g$V$19319$CSxK@))) g$t$11692$CSxK@ '(_ . any)))) g$C$19320$CSxK@ g$pat$11690$CSxK@))) g$pat*$11688$CSxK@ g$tmp*$11689$CSxK@))) g$lits$11687$CSxK@ g$e$11684$CSxK@))) g$ls/false$11686$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19328$CSxK@ '#f '"invalid syntax" g$t$11685$CSxK@)))) g$C$19329$CSxK@ g$V$19330$CSxK@))) g$t$11685$CSxK@ '(_ each-any . #(each (any any)))))) g$C$19331$CSxK@ g$e$11684$CSxK@)))))) (library-letrec*-identity 'g$syntax-rules-macro$10700$CSxK@))) (g$quasiquote-macro$10701$CSxK@ g$quasiquote-macro$14243$CSxK@ ((case-lambda ((g$C$22768$CSxK@) ((case-lambda ((g$C$19560$CSxK@) ((case-lambda ((g$C$19559$CSxK@ g$datum$11697$CSxK@ g$quasicons*$11726$CSxK@ g$quasicons$11727$CSxK@ g$quasiappend$11728$CSxK@ g$quasivector$11729$CSxK@ g$vquasi$11730$CSxK@ g$quasi$11731$CSxK@) (begin (set! g$datum$11697$CSxK@ (case-lambda ((g$C$19332$CSxK@ g$x$11841$CSxK@) (g$mkstx$10335$CSxK@ (case-lambda ((g$V$19333$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19334$CSxK@) (list g$C$19332$CSxK@ g$V$19334$CSxK@ g$V$19333$CSxK@))) 'quote))) g$x$11841$CSxK@ '() '() '())))) (begin (set! g$quasicons*$11726$CSxK@ (case-lambda ((g$C$19343$CSxK@ g$x$11837$CSxK@ g$y$11838$CSxK@) ((case-lambda ((g$C$19342$CSxK@ g$f$11839$CSxK@) ((case-lambda ((g$C$19336$CSxK@ g$f$19335$CSxK@) (begin (set! g$f$11839$CSxK@ g$f$19335$CSxK@) (g$C$19336$CSxK@ g$f$11839$CSxK@)))) g$C$19342$CSxK@ (case-lambda ((g$C$19337$CSxK@ g$x$11840$CSxK@) (null? (case-lambda ((g$T$19338$CSxK@) (if g$T$19338$CSxK@ (g$C$19337$CSxK@ g$y$11838$CSxK@) (cdr (case-lambda ((g$V$19339$CSxK@) (g$f$11839$CSxK@ (case-lambda ((g$V$19340$CSxK@) (car (case-lambda ((g$V$19341$CSxK@) (g$quasicons$11727$CSxK@ g$C$19337$CSxK@ g$V$19341$CSxK@ g$V$19340$CSxK@))) g$x$11840$CSxK@))) g$V$19339$CSxK@))) g$x$11840$CSxK@)))) g$x$11840$CSxK@)))))) (case-lambda ((g$V$19344$CSxK@) (g$V$19344$CSxK@ g$C$19343$CSxK@ g$x$11837$CSxK@))) uninitialized)))) (begin (set! g$quasicons$11727$CSxK@ (case-lambda ((g$C$19379$CSxK@ g$x$11818$CSxK@ g$y$11819$CSxK@) ((case-lambda ((g$C$19377$CSxK@ g$t$11820$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19378$CSxK@) ((case-lambda ((g$C$19376$CSxK@ g$ls/false$11821$CSxK@) (if g$ls/false$11821$CSxK@ (apply g$C$19376$CSxK@ (case-lambda ((g$C$19365$CSxK@ g$dy$11822$CSxK@) ((case-lambda ((g$C$19363$CSxK@ g$t$11823$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19364$CSxK@) ((case-lambda ((g$C$19362$CSxK@ g$ls/false$11824$CSxK@) (if g$ls/false$11824$CSxK@ (apply g$C$19362$CSxK@ (case-lambda ((g$C$19345$CSxK@ g$dx$11825$CSxK@) (cons (case-lambda ((g$V$19346$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19347$CSxK@) (list g$C$19345$CSxK@ g$V$19347$CSxK@ g$V$19346$CSxK@))) 'quote))) g$dx$11825$CSxK@ g$dy$11822$CSxK@))) g$ls/false$11824$CSxK@) ((case-lambda ((g$C$19360$CSxK@ g$t$11826$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19361$CSxK@) ((case-lambda ((g$C$19359$CSxK@ g$ls/false$11827$CSxK@) (if g$ls/false$11827$CSxK@ (apply g$C$19359$CSxK@ (case-lambda ((g$C$19358$CSxK@) ((case-lambda ((g$C$19356$CSxK@ g$t$11828$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19357$CSxK@) ((case-lambda ((g$C$19355$CSxK@ g$ls/false$11829$CSxK@) (if g$ls/false$11829$CSxK@ (apply g$C$19355$CSxK@ (case-lambda ((g$C$19348$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19349$CSxK@) (list g$C$19348$CSxK@ g$V$19349$CSxK@ g$x$11818$CSxK@))) 'list))) g$ls/false$11829$CSxK@) ((case-lambda ((g$C$19353$CSxK@ g$t$11830$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19354$CSxK@) ((case-lambda ((g$C$19352$CSxK@ g$ls/false$11831$CSxK@) (if g$ls/false$11831$CSxK@ (apply g$C$19352$CSxK@ (case-lambda ((g$C$19350$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19351$CSxK@) (list g$C$19350$CSxK@ g$V$19351$CSxK@ g$x$11818$CSxK@ g$y$11819$CSxK@))) 'cons))) g$ls/false$11831$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19352$CSxK@ '#f '"invalid syntax" g$t$11830$CSxK@)))) g$C$19353$CSxK@ g$V$19354$CSxK@))) g$t$11830$CSxK@ '_))) g$C$19355$CSxK@ g$t$11828$CSxK@)))) g$C$19356$CSxK@ g$V$19357$CSxK@))) g$t$11828$CSxK@ '()))) g$C$19358$CSxK@ g$dy$11822$CSxK@))) g$ls/false$11827$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19359$CSxK@ '#f '"invalid syntax" g$t$11826$CSxK@)))) g$C$19360$CSxK@ g$V$19361$CSxK@))) g$t$11826$CSxK@ '_))) g$C$19362$CSxK@ g$t$11823$CSxK@)))) g$C$19363$CSxK@ g$V$19364$CSxK@))) g$t$11823$CSxK@ '(#(scheme-id quote) any)))) g$C$19365$CSxK@ g$x$11818$CSxK@))) g$ls/false$11821$CSxK@) ((case-lambda ((g$C$19374$CSxK@ g$t$11832$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19375$CSxK@) ((case-lambda ((g$C$19373$CSxK@ g$ls/false$11833$CSxK@) (if g$ls/false$11833$CSxK@ (apply g$C$19373$CSxK@ (case-lambda ((g$C$19366$CSxK@ g$stuff$11834$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19367$CSxK@) (g$cons*$6715$CSxK@ g$C$19366$CSxK@ g$V$19367$CSxK@ g$x$11818$CSxK@ g$stuff$11834$CSxK@))) 'list))) g$ls/false$11833$CSxK@) ((case-lambda ((g$C$19371$CSxK@ g$t$11835$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19372$CSxK@) ((case-lambda ((g$C$19370$CSxK@ g$ls/false$11836$CSxK@) (if g$ls/false$11836$CSxK@ (apply g$C$19370$CSxK@ (case-lambda ((g$C$19368$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19369$CSxK@) (list g$C$19368$CSxK@ g$V$19369$CSxK@ g$x$11818$CSxK@ g$y$11819$CSxK@))) 'cons))) g$ls/false$11836$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19370$CSxK@ '#f '"invalid syntax" g$t$11835$CSxK@)))) g$C$19371$CSxK@ g$V$19372$CSxK@))) g$t$11835$CSxK@ '_))) g$C$19373$CSxK@ g$t$11832$CSxK@)))) g$C$19374$CSxK@ g$V$19375$CSxK@))) g$t$11832$CSxK@ '(#(scheme-id list) . each-any)))) g$C$19376$CSxK@ g$t$11820$CSxK@)))) g$C$19377$CSxK@ g$V$19378$CSxK@))) g$t$11820$CSxK@ '(#(scheme-id quote) any)))) g$C$19379$CSxK@ g$y$11819$CSxK@)))) (begin (set! g$quasiappend$11728$CSxK@ (case-lambda ((g$C$19412$CSxK@ g$x$11805$CSxK@ g$y$11806$CSxK@) ((case-lambda ((g$C$19411$CSxK@ g$f$11808$CSxK@) ((case-lambda ((g$C$19387$CSxK@ g$f$19386$CSxK@) (begin (set! g$f$11808$CSxK@ g$f$19386$CSxK@) (g$C$19387$CSxK@ g$f$11808$CSxK@)))) g$C$19411$CSxK@ (case-lambda ((g$C$19408$CSxK@ g$x$11809$CSxK@) (null? (case-lambda ((g$T$19409$CSxK@) (if g$T$19409$CSxK@ ((case-lambda ((g$C$19394$CSxK@ g$t$11810$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19395$CSxK@) ((case-lambda ((g$C$19393$CSxK@ g$ls/false$11811$CSxK@) (if g$ls/false$11811$CSxK@ (apply g$C$19393$CSxK@ (case-lambda ((g$C$19388$CSxK@) (g$C$19388$CSxK@ '()))) g$ls/false$11811$CSxK@) ((case-lambda ((g$C$19391$CSxK@ g$t$11812$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19392$CSxK@) ((case-lambda ((g$C$19390$CSxK@ g$ls/false$11813$CSxK@) (if g$ls/false$11813$CSxK@ (apply g$C$19390$CSxK@ (case-lambda ((g$C$19389$CSxK@) (list g$C$19389$CSxK@ g$y$11806$CSxK@))) g$ls/false$11813$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19390$CSxK@ '#f '"invalid syntax" g$t$11812$CSxK@)))) g$C$19391$CSxK@ g$V$19392$CSxK@))) g$t$11812$CSxK@ '_))) g$C$19393$CSxK@ g$t$11810$CSxK@)))) g$C$19394$CSxK@ g$V$19395$CSxK@))) g$t$11810$CSxK@ '(#(scheme-id quote) ())))) g$C$19408$CSxK@ g$y$11806$CSxK@) (car (case-lambda ((g$V$19410$CSxK@) ((case-lambda ((g$C$19406$CSxK@ g$t$11814$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19407$CSxK@) ((case-lambda ((g$C$19405$CSxK@ g$ls/false$11815$CSxK@) (if g$ls/false$11815$CSxK@ (apply g$C$19405$CSxK@ (case-lambda ((g$C$19396$CSxK@) (cdr (case-lambda ((g$V$19397$CSxK@) (g$f$11808$CSxK@ g$C$19396$CSxK@ g$V$19397$CSxK@))) g$x$11809$CSxK@))) g$ls/false$11815$CSxK@) ((case-lambda ((g$C$19403$CSxK@ g$t$11816$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19404$CSxK@) ((case-lambda ((g$C$19402$CSxK@ g$ls/false$11817$CSxK@) (if g$ls/false$11817$CSxK@ (apply g$C$19402$CSxK@ (case-lambda ((g$C$19398$CSxK@) (cdr (case-lambda ((g$V$19399$CSxK@) (g$f$11808$CSxK@ (case-lambda ((g$V$19400$CSxK@) (car (case-lambda ((g$V$19401$CSxK@) (cons g$C$19398$CSxK@ g$V$19401$CSxK@ g$V$19400$CSxK@))) g$x$11809$CSxK@))) g$V$19399$CSxK@))) g$x$11809$CSxK@))) g$ls/false$11817$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19402$CSxK@ '#f '"invalid syntax" g$t$11816$CSxK@)))) g$C$19403$CSxK@ g$V$19404$CSxK@))) g$t$11816$CSxK@ '_))) g$C$19405$CSxK@ g$t$11814$CSxK@)))) g$C$19406$CSxK@ g$V$19407$CSxK@))) g$t$11814$CSxK@ '(#(scheme-id quote) ())))) g$C$19408$CSxK@ g$V$19410$CSxK@))) g$x$11809$CSxK@)))) g$x$11809$CSxK@)))))) (case-lambda ((g$V$19413$CSxK@) (g$V$19413$CSxK@ (case-lambda ((g$V$19414$CSxK@) ((case-lambda ((g$C$19380$CSxK@ g$ls$11807$CSxK@) (null? (case-lambda ((g$T$19381$CSxK@) (if g$T$19381$CSxK@ (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19382$CSxK@) (list g$C$19380$CSxK@ g$V$19382$CSxK@ '()))) 'quote) (cdr (case-lambda ((g$V$19383$CSxK@) (null? (case-lambda ((g$T$19384$CSxK@) (if g$T$19384$CSxK@ (car g$C$19380$CSxK@ g$ls$11807$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19385$CSxK@) (g$cons*$6715$CSxK@ g$C$19380$CSxK@ g$V$19385$CSxK@ g$ls$11807$CSxK@))) 'append)))) g$V$19383$CSxK@))) g$ls$11807$CSxK@)))) g$ls$11807$CSxK@))) g$C$19412$CSxK@ g$V$19414$CSxK@))) g$x$11805$CSxK@))) uninitialized)))) (begin (set! g$quasivector$11729$CSxK@ (case-lambda ((g$C$19455$CSxK@ g$x$11780$CSxK@) ((case-lambda ((g$C$19454$CSxK@ g$pat-x$11781$CSxK@) ((case-lambda ((g$C$19452$CSxK@ g$t$11782$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19453$CSxK@) ((case-lambda ((g$C$19451$CSxK@ g$ls/false$11783$CSxK@) (if g$ls/false$11783$CSxK@ (apply g$C$19451$CSxK@ (case-lambda ((g$C$19415$CSxK@ g$x*$11784$CSxK@) (g$list->vector$7379$CSxK@ (case-lambda ((g$V$19416$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19417$CSxK@) (list g$C$19415$CSxK@ g$V$19417$CSxK@ g$V$19416$CSxK@))) 'quote))) g$x*$11784$CSxK@))) g$ls/false$11783$CSxK@) ((case-lambda ((g$C$19449$CSxK@ g$t$11785$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19450$CSxK@) ((case-lambda ((g$C$19448$CSxK@ g$ls/false$11786$CSxK@) (if g$ls/false$11786$CSxK@ (apply g$C$19448$CSxK@ (case-lambda ((g$C$19446$CSxK@) ((case-lambda ((g$C$19443$CSxK@ g$f$11787$CSxK@) ((case-lambda ((g$C$19419$CSxK@ g$f$19418$CSxK@) (begin (set! g$f$11787$CSxK@ g$f$19418$CSxK@) (g$C$19419$CSxK@ g$f$11787$CSxK@)))) g$C$19443$CSxK@ (case-lambda ((g$C$19442$CSxK@ g$x$11788$CSxK@ g$k$11789$CSxK@) ((case-lambda ((g$C$19440$CSxK@ g$t$11790$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19441$CSxK@) ((case-lambda ((g$C$19439$CSxK@ g$ls/false$11791$CSxK@) (if g$ls/false$11791$CSxK@ (apply g$C$19439$CSxK@ (case-lambda ((g$C$19422$CSxK@ g$x*$11792$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19423$CSxK@) (g$k$11789$CSxK@ g$C$19422$CSxK@ g$V$19423$CSxK@))) (case-lambda ((g$C$19420$CSxK@ g$x$11793$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19421$CSxK@) (list g$C$19420$CSxK@ g$V$19421$CSxK@ g$x$11793$CSxK@))) 'quote))) g$x*$11792$CSxK@))) g$ls/false$11791$CSxK@) ((case-lambda ((g$C$19437$CSxK@ g$t$11794$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19438$CSxK@) ((case-lambda ((g$C$19436$CSxK@ g$ls/false$11795$CSxK@) (if g$ls/false$11795$CSxK@ (apply g$C$19436$CSxK@ (case-lambda ((g$C$19424$CSxK@ g$x*$11796$CSxK@) (g$k$11789$CSxK@ g$C$19424$CSxK@ g$x*$11796$CSxK@))) g$ls/false$11795$CSxK@) ((case-lambda ((g$C$19434$CSxK@ g$t$11797$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19435$CSxK@) ((case-lambda ((g$C$19433$CSxK@ g$ls/false$11798$CSxK@) (if g$ls/false$11798$CSxK@ (apply g$C$19433$CSxK@ (case-lambda ((g$C$19427$CSxK@ g$x$11799$CSxK@ g$y$11800$CSxK@) (g$f$11787$CSxK@ g$C$19427$CSxK@ g$y$11800$CSxK@ (case-lambda ((g$C$19425$CSxK@ g$ls$11801$CSxK@) (cons (case-lambda ((g$V$19426$CSxK@) (g$k$11789$CSxK@ g$C$19425$CSxK@ g$V$19426$CSxK@))) g$x$11799$CSxK@ g$ls$11801$CSxK@)))))) g$ls/false$11798$CSxK@) ((case-lambda ((g$C$19431$CSxK@ g$t$11802$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19432$CSxK@) ((case-lambda ((g$C$19430$CSxK@ g$ls/false$11803$CSxK@) (if g$ls/false$11803$CSxK@ (apply g$C$19430$CSxK@ (case-lambda ((g$C$19428$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19429$CSxK@) (list g$C$19428$CSxK@ g$V$19429$CSxK@ g$pat-x$11781$CSxK@))) 'list->vector))) g$ls/false$11803$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19430$CSxK@ '#f '"invalid syntax" g$t$11802$CSxK@)))) g$C$19431$CSxK@ g$V$19432$CSxK@))) g$t$11802$CSxK@ '_))) g$C$19433$CSxK@ g$t$11797$CSxK@)))) g$C$19434$CSxK@ g$V$19435$CSxK@))) g$t$11797$CSxK@ '(#(scheme-id cons) any any)))) g$C$19436$CSxK@ g$t$11794$CSxK@)))) g$C$19437$CSxK@ g$V$19438$CSxK@))) g$t$11794$CSxK@ '(#(scheme-id list) . each-any)))) g$C$19439$CSxK@ g$t$11790$CSxK@)))) g$C$19440$CSxK@ g$V$19441$CSxK@))) g$t$11790$CSxK@ '(#(scheme-id quote) each-any)))) g$C$19442$CSxK@ g$x$11788$CSxK@)))))) (case-lambda ((g$V$19447$CSxK@) (g$V$19447$CSxK@ g$C$19446$CSxK@ g$x$11780$CSxK@ (case-lambda ((g$C$19444$CSxK@ g$ls$11804$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19445$CSxK@) (g$cons*$6715$CSxK@ g$C$19444$CSxK@ g$V$19445$CSxK@ g$ls$11804$CSxK@))) 'vector)))))) uninitialized))) g$ls/false$11786$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19448$CSxK@ '#f '"invalid syntax" g$t$11785$CSxK@)))) g$C$19449$CSxK@ g$V$19450$CSxK@))) g$t$11785$CSxK@ '_))) g$C$19451$CSxK@ g$t$11782$CSxK@)))) g$C$19452$CSxK@ g$V$19453$CSxK@))) g$t$11782$CSxK@ '(#(scheme-id quote) each-any)))) g$C$19454$CSxK@ g$pat-x$11781$CSxK@))) g$C$19455$CSxK@ g$x$11780$CSxK@)))) (begin (set! g$vquasi$11730$CSxK@ (case-lambda ((g$C$19493$CSxK@ g$p$11763$CSxK@ g$lev$11764$CSxK@) ((case-lambda ((g$C$19491$CSxK@ g$t$11765$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19492$CSxK@) ((case-lambda ((g$C$19490$CSxK@ g$ls/false$11766$CSxK@) (if g$ls/false$11766$CSxK@ (apply g$C$19490$CSxK@ (case-lambda ((g$C$19484$CSxK@ g$p$11767$CSxK@ g$q$11768$CSxK@) ((case-lambda ((g$C$19482$CSxK@ g$t$11769$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19483$CSxK@) ((case-lambda ((g$C$19481$CSxK@ g$ls/false$11770$CSxK@) (if g$ls/false$11770$CSxK@ (apply g$C$19481$CSxK@ (case-lambda ((g$C$19456$CSxK@ g$p$11771$CSxK@) (= (case-lambda ((g$T$19457$CSxK@) (if g$T$19457$CSxK@ (g$vquasi$11730$CSxK@ (case-lambda ((g$V$19458$CSxK@) (g$quasicons*$11726$CSxK@ g$C$19456$CSxK@ g$p$11771$CSxK@ g$V$19458$CSxK@))) g$q$11768$CSxK@ g$lev$11764$CSxK@) (g$vquasi$11730$CSxK@ (case-lambda ((g$V$19459$CSxK@) (- (case-lambda ((g$V$19460$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19461$CSxK@) (g$datum$11697$CSxK@ (case-lambda ((g$V$19462$CSxK@) (g$quasicons$11727$CSxK@ (case-lambda ((g$V$19463$CSxK@) (g$quasicons$11727$CSxK@ g$C$19456$CSxK@ g$V$19463$CSxK@ g$V$19459$CSxK@))) g$V$19462$CSxK@ g$V$19461$CSxK@))) 'unquote))) g$p$11771$CSxK@ g$V$19460$CSxK@))) g$lev$11764$CSxK@ '1))) g$q$11768$CSxK@ g$lev$11764$CSxK@)))) g$lev$11764$CSxK@ '0))) g$ls/false$11770$CSxK@) ((case-lambda ((g$C$19479$CSxK@ g$t$11772$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19480$CSxK@) ((case-lambda ((g$C$19478$CSxK@ g$ls/false$11773$CSxK@) (if g$ls/false$11773$CSxK@ (apply g$C$19478$CSxK@ (case-lambda ((g$C$19464$CSxK@ g$p$11774$CSxK@) (= (case-lambda ((g$T$19465$CSxK@) (if g$T$19465$CSxK@ (g$vquasi$11730$CSxK@ (case-lambda ((g$V$19466$CSxK@) (g$quasiappend$11728$CSxK@ g$C$19464$CSxK@ g$p$11774$CSxK@ g$V$19466$CSxK@))) g$q$11768$CSxK@ g$lev$11764$CSxK@) (g$vquasi$11730$CSxK@ (case-lambda ((g$V$19467$CSxK@) (- (case-lambda ((g$V$19468$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19469$CSxK@) (g$datum$11697$CSxK@ (case-lambda ((g$V$19470$CSxK@) (g$quasicons$11727$CSxK@ (case-lambda ((g$V$19471$CSxK@) (g$quasicons$11727$CSxK@ g$C$19464$CSxK@ g$V$19471$CSxK@ g$V$19467$CSxK@))) g$V$19470$CSxK@ g$V$19469$CSxK@))) 'unquote-splicing))) g$p$11774$CSxK@ g$V$19468$CSxK@))) g$lev$11764$CSxK@ '1))) g$q$11768$CSxK@ g$lev$11764$CSxK@)))) g$lev$11764$CSxK@ '0))) g$ls/false$11773$CSxK@) ((case-lambda ((g$C$19476$CSxK@ g$t$11775$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19477$CSxK@) ((case-lambda ((g$C$19475$CSxK@ g$ls/false$11776$CSxK@) (if g$ls/false$11776$CSxK@ (apply g$C$19475$CSxK@ (case-lambda ((g$C$19472$CSxK@ g$p$11777$CSxK@) (g$vquasi$11730$CSxK@ (case-lambda ((g$V$19473$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19474$CSxK@) (g$quasicons$11727$CSxK@ g$C$19472$CSxK@ g$V$19474$CSxK@ g$V$19473$CSxK@))) g$p$11777$CSxK@ g$lev$11764$CSxK@))) g$q$11768$CSxK@ g$lev$11764$CSxK@))) g$ls/false$11776$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19475$CSxK@ '#f '"invalid syntax" g$t$11775$CSxK@)))) g$C$19476$CSxK@ g$V$19477$CSxK@))) g$t$11775$CSxK@ 'any))) g$C$19478$CSxK@ g$t$11772$CSxK@)))) g$C$19479$CSxK@ g$V$19480$CSxK@))) g$t$11772$CSxK@ '(#(scheme-id unquote-splicing) . each-any)))) g$C$19481$CSxK@ g$t$11769$CSxK@)))) g$C$19482$CSxK@ g$V$19483$CSxK@))) g$t$11769$CSxK@ '(#(scheme-id unquote) . each-any)))) g$C$19484$CSxK@ g$p$11767$CSxK@))) g$ls/false$11766$CSxK@) ((case-lambda ((g$C$19488$CSxK@ g$t$11778$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19489$CSxK@) ((case-lambda ((g$C$19487$CSxK@ g$ls/false$11779$CSxK@) (if g$ls/false$11779$CSxK@ (apply g$C$19487$CSxK@ (case-lambda ((g$C$19485$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19486$CSxK@) (list g$C$19485$CSxK@ g$V$19486$CSxK@ '()))) 'quote))) g$ls/false$11779$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19487$CSxK@ '#f '"invalid syntax" g$t$11778$CSxK@)))) g$C$19488$CSxK@ g$V$19489$CSxK@))) g$t$11778$CSxK@ '()))) g$C$19490$CSxK@ g$t$11765$CSxK@)))) g$C$19491$CSxK@ g$V$19492$CSxK@))) g$t$11765$CSxK@ '(any . any)))) g$C$19493$CSxK@ g$p$11763$CSxK@)))) (begin (set! g$quasi$11731$CSxK@ (case-lambda ((g$C$19553$CSxK@ g$p$11736$CSxK@ g$lev$11737$CSxK@) ((case-lambda ((g$C$19551$CSxK@ g$t$11738$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19552$CSxK@) ((case-lambda ((g$C$19550$CSxK@ g$ls/false$11739$CSxK@) (if g$ls/false$11739$CSxK@ (apply g$C$19550$CSxK@ (case-lambda ((g$C$19494$CSxK@ g$p$11740$CSxK@) (= (case-lambda ((g$T$19495$CSxK@) (if g$T$19495$CSxK@ (g$C$19494$CSxK@ g$p$11740$CSxK@) (- (case-lambda ((g$V$19496$CSxK@) (list (case-lambda ((g$V$19497$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19498$CSxK@) (g$datum$11697$CSxK@ (case-lambda ((g$V$19499$CSxK@) (g$quasicons$11727$CSxK@ g$C$19494$CSxK@ g$V$19499$CSxK@ g$V$19498$CSxK@))) 'unquote))) g$V$19497$CSxK@ g$V$19496$CSxK@))) g$p$11740$CSxK@))) g$lev$11737$CSxK@ '1)))) g$lev$11737$CSxK@ '0))) g$ls/false$11739$CSxK@) ((case-lambda ((g$C$19548$CSxK@ g$t$11741$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19549$CSxK@) ((case-lambda ((g$C$19547$CSxK@ g$ls/false$11742$CSxK@) (if g$ls/false$11742$CSxK@ (apply g$C$19547$CSxK@ (case-lambda ((g$C$19500$CSxK@ g$p$11743$CSxK@ g$q$11744$CSxK@) (= (case-lambda ((g$T$19501$CSxK@) (if g$T$19501$CSxK@ (g$quasi$11731$CSxK@ (case-lambda ((g$V$19502$CSxK@) (g$quasicons*$11726$CSxK@ g$C$19500$CSxK@ g$p$11743$CSxK@ g$V$19502$CSxK@))) g$q$11744$CSxK@ g$lev$11737$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19503$CSxK@) (- (case-lambda ((g$V$19504$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19505$CSxK@) (g$datum$11697$CSxK@ (case-lambda ((g$V$19506$CSxK@) (g$quasicons$11727$CSxK@ (case-lambda ((g$V$19507$CSxK@) (g$quasicons$11727$CSxK@ g$C$19500$CSxK@ g$V$19507$CSxK@ g$V$19503$CSxK@))) g$V$19506$CSxK@ g$V$19505$CSxK@))) 'unquote))) g$p$11743$CSxK@ g$V$19504$CSxK@))) g$lev$11737$CSxK@ '1))) g$q$11744$CSxK@ g$lev$11737$CSxK@)))) g$lev$11737$CSxK@ '0))) g$ls/false$11742$CSxK@) ((case-lambda ((g$C$19545$CSxK@ g$t$11745$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19546$CSxK@) ((case-lambda ((g$C$19544$CSxK@ g$ls/false$11746$CSxK@) (if g$ls/false$11746$CSxK@ (apply g$C$19544$CSxK@ (case-lambda ((g$C$19508$CSxK@ g$p$11747$CSxK@ g$q$11748$CSxK@) (= (case-lambda ((g$T$19509$CSxK@) (if g$T$19509$CSxK@ (g$quasi$11731$CSxK@ (case-lambda ((g$V$19510$CSxK@) (g$quasiappend$11728$CSxK@ g$C$19508$CSxK@ g$p$11747$CSxK@ g$V$19510$CSxK@))) g$q$11748$CSxK@ g$lev$11737$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19511$CSxK@) (- (case-lambda ((g$V$19512$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19513$CSxK@) (g$datum$11697$CSxK@ (case-lambda ((g$V$19514$CSxK@) (g$quasicons$11727$CSxK@ (case-lambda ((g$V$19515$CSxK@) (g$quasicons$11727$CSxK@ g$C$19508$CSxK@ g$V$19515$CSxK@ g$V$19511$CSxK@))) g$V$19514$CSxK@ g$V$19513$CSxK@))) 'unquote-splicing))) g$p$11747$CSxK@ g$V$19512$CSxK@))) g$lev$11737$CSxK@ '1))) g$q$11748$CSxK@ g$lev$11737$CSxK@)))) g$lev$11737$CSxK@ '0))) g$ls/false$11746$CSxK@) ((case-lambda ((g$C$19542$CSxK@ g$t$11749$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19543$CSxK@) ((case-lambda ((g$C$19541$CSxK@ g$ls/false$11750$CSxK@) (if g$ls/false$11750$CSxK@ (apply g$C$19541$CSxK@ (case-lambda ((g$C$19516$CSxK@ g$p$11751$CSxK@) (+ (case-lambda ((g$V$19517$CSxK@) (list (case-lambda ((g$V$19518$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19519$CSxK@) (g$datum$11697$CSxK@ (case-lambda ((g$V$19520$CSxK@) (g$quasicons$11727$CSxK@ g$C$19516$CSxK@ g$V$19520$CSxK@ g$V$19519$CSxK@))) 'quasiquote))) g$V$19518$CSxK@ g$V$19517$CSxK@))) g$p$11751$CSxK@))) g$lev$11737$CSxK@ '1))) g$ls/false$11750$CSxK@) ((case-lambda ((g$C$19539$CSxK@ g$t$11752$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19540$CSxK@) ((case-lambda ((g$C$19538$CSxK@ g$ls/false$11753$CSxK@) (if g$ls/false$11753$CSxK@ (apply g$C$19538$CSxK@ (case-lambda ((g$C$19521$CSxK@ g$p$11754$CSxK@ g$q$11755$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19522$CSxK@) (g$quasi$11731$CSxK@ (case-lambda ((g$V$19523$CSxK@) (g$quasicons$11727$CSxK@ g$C$19521$CSxK@ g$V$19523$CSxK@ g$V$19522$CSxK@))) g$p$11754$CSxK@ g$lev$11737$CSxK@))) g$q$11755$CSxK@ g$lev$11737$CSxK@))) g$ls/false$11753$CSxK@) ((case-lambda ((g$C$19536$CSxK@ g$t$11756$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19537$CSxK@) ((case-lambda ((g$C$19533$CSxK@ g$ls/false$11757$CSxK@) ((case-lambda ((g$J$19535$CSxK@) (if g$ls/false$11757$CSxK@ (apply g$J$19535$CSxK@ (case-lambda ((g$C$19524$CSxK@ g$x$11758$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$V$19525$CSxK@) (not g$C$19524$CSxK@ g$V$19525$CSxK@))) g$x$11758$CSxK@))) g$ls/false$11757$CSxK@) (g$J$19535$CSxK@ '#f)))) (case-lambda ((g$T$19534$CSxK@) (if g$T$19534$CSxK@ (apply g$C$19533$CSxK@ (case-lambda ((g$C$19526$CSxK@ g$x$11759$CSxK@) (g$vquasi$11730$CSxK@ (case-lambda ((g$V$19527$CSxK@) (g$quasivector$11729$CSxK@ g$C$19526$CSxK@ g$V$19527$CSxK@))) g$x$11759$CSxK@ g$lev$11737$CSxK@))) g$ls/false$11757$CSxK@) ((case-lambda ((g$C$19531$CSxK@ g$t$11760$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19532$CSxK@) ((case-lambda ((g$C$19530$CSxK@ g$ls/false$11761$CSxK@) (if g$ls/false$11761$CSxK@ (apply g$C$19530$CSxK@ (case-lambda ((g$C$19528$CSxK@ g$p$11762$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$19529$CSxK@) (list g$C$19528$CSxK@ g$V$19529$CSxK@ g$p$11762$CSxK@))) 'quote))) g$ls/false$11761$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19530$CSxK@ '#f '"invalid syntax" g$t$11760$CSxK@)))) g$C$19531$CSxK@ g$V$19532$CSxK@))) g$t$11760$CSxK@ 'any))) g$C$19533$CSxK@ g$t$11756$CSxK@))))))) g$C$19536$CSxK@ g$V$19537$CSxK@))) g$t$11756$CSxK@ '#(vector each-any)))) g$C$19538$CSxK@ g$t$11752$CSxK@)))) g$C$19539$CSxK@ g$V$19540$CSxK@))) g$t$11752$CSxK@ '(any . any)))) g$C$19541$CSxK@ g$t$11749$CSxK@)))) g$C$19542$CSxK@ g$V$19543$CSxK@))) g$t$11749$CSxK@ '(#(scheme-id quasiquote) any)))) g$C$19544$CSxK@ g$t$11745$CSxK@)))) g$C$19545$CSxK@ g$V$19546$CSxK@))) g$t$11745$CSxK@ '((#(scheme-id unquote-splicing) . each-any) . any)))) g$C$19547$CSxK@ g$t$11741$CSxK@)))) g$C$19548$CSxK@ g$V$19549$CSxK@))) g$t$11741$CSxK@ '((#(scheme-id unquote) . each-any) . any)))) g$C$19550$CSxK@ g$t$11738$CSxK@)))) g$C$19551$CSxK@ g$V$19552$CSxK@))) g$t$11738$CSxK@ '(#(scheme-id unquote) any)))) g$C$19553$CSxK@ g$p$11736$CSxK@)))) (g$C$19559$CSxK@ (case-lambda ((g$C$19558$CSxK@ g$x$11732$CSxK@) ((case-lambda ((g$C$19556$CSxK@ g$t$11733$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19557$CSxK@) ((case-lambda ((g$C$19555$CSxK@ g$ls/false$11734$CSxK@) (if g$ls/false$11734$CSxK@ (apply g$C$19555$CSxK@ (case-lambda ((g$C$19554$CSxK@ g$e$11735$CSxK@) (g$quasi$11731$CSxK@ g$C$19554$CSxK@ g$e$11735$CSxK@ '0))) g$ls/false$11734$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19555$CSxK@ '#f '"invalid syntax" g$t$11733$CSxK@)))) g$C$19556$CSxK@ g$V$19557$CSxK@))) g$t$11733$CSxK@ '(_ any)))) g$C$19558$CSxK@ g$x$11732$CSxK@))))))))))))) g$C$19560$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$22768$CSxK@))) (library-letrec*-identity 'g$quasiquote-macro$10701$CSxK@))) (g$quasisyntax-macro$10702$CSxK@ g$quasisyntax-macro$14244$CSxK@ ((case-lambda ((g$C$22769$CSxK@) ((case-lambda ((g$C$19685$CSxK@) ((case-lambda ((g$C$19684$CSxK@ g$quasi$11842$CSxK@) (begin (set! g$quasi$11842$CSxK@ (case-lambda ((g$C$19671$CSxK@ g$p$11856$CSxK@ g$lev$11857$CSxK@) ((case-lambda ((g$C$19669$CSxK@ g$t$11858$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19670$CSxK@) ((case-lambda ((g$C$19668$CSxK@ g$ls/false$11859$CSxK@) (if g$ls/false$11859$CSxK@ (apply g$C$19668$CSxK@ (case-lambda ((g$C$19569$CSxK@ g$p$11860$CSxK@) (= (case-lambda ((g$T$19570$CSxK@) (if g$T$19570$CSxK@ (gensym (case-lambda ((g$V$19571$CSxK@) ((case-lambda ((g$C$19561$CSxK@ g$g$11861$CSxK@) (list (case-lambda ((g$V$19562$CSxK@) (list (case-lambda ((g$V$19563$CSxK@) (values g$C$19561$CSxK@ g$V$19563$CSxK@ g$V$19562$CSxK@ g$g$11861$CSxK@))) g$g$11861$CSxK@))) g$p$11860$CSxK@))) g$C$19569$CSxK@ g$V$19571$CSxK@)))) (call-with-values g$C$19569$CSxK@ (case-lambda ((g$C$19564$CSxK@) (- (case-lambda ((g$V$19565$CSxK@) (g$quasi$11842$CSxK@ g$C$19564$CSxK@ g$p$11860$CSxK@ g$V$19565$CSxK@))) g$lev$11857$CSxK@ '1))) (case-lambda ((g$C$19568$CSxK@ g$lhs*$11865$CSxK@ g$rhs*$11866$CSxK@ g$p$11867$CSxK@) ((case-lambda ((g$C$19566$CSxK@ g$p$11868$CSxK@ g$rhs*$11869$CSxK@ g$lhs*$11870$CSxK@) (list (case-lambda ((g$V$19567$CSxK@) (values g$C$19566$CSxK@ g$lhs*$11870$CSxK@ g$rhs*$11869$CSxK@ g$V$19567$CSxK@))) 'unsyntax g$p$11868$CSxK@))) g$C$19568$CSxK@ g$p$11867$CSxK@ g$rhs*$11866$CSxK@ g$lhs*$11865$CSxK@))))))) g$lev$11857$CSxK@ '0))) g$ls/false$11859$CSxK@) ((case-lambda ((g$C$19666$CSxK@ g$t$11871$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19667$CSxK@) ((case-lambda ((g$C$19663$CSxK@ g$ls/false$11872$CSxK@) ((case-lambda ((g$J$19665$CSxK@) (if g$ls/false$11872$CSxK@ (apply g$J$19665$CSxK@ (case-lambda ((g$C$19572$CSxK@) (= g$C$19572$CSxK@ g$lev$11857$CSxK@ '0))) g$ls/false$11872$CSxK@) (g$J$19665$CSxK@ '#f)))) (case-lambda ((g$T$19664$CSxK@) (if g$T$19664$CSxK@ (apply g$C$19663$CSxK@ (case-lambda ((g$C$19573$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19573$CSxK@ '#f '"incorrect use of unsyntax" g$p$11856$CSxK@))) g$ls/false$11872$CSxK@) ((case-lambda ((g$C$19661$CSxK@ g$t$11873$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19662$CSxK@) ((case-lambda ((g$C$19660$CSxK@ g$ls/false$11874$CSxK@) (if g$ls/false$11874$CSxK@ (apply g$C$19660$CSxK@ (case-lambda ((g$C$19592$CSxK@ g$p*$11875$CSxK@ g$q$11876$CSxK@) (call-with-values g$C$19592$CSxK@ (case-lambda ((g$C$19574$CSxK@) (g$quasi$11842$CSxK@ g$C$19574$CSxK@ g$q$11876$CSxK@ g$lev$11857$CSxK@))) (case-lambda ((g$C$19591$CSxK@ g$lhs*$11880$CSxK@ g$rhs*$11881$CSxK@ g$q$11882$CSxK@) ((case-lambda ((g$C$19588$CSxK@ g$q$11883$CSxK@ g$rhs*$11884$CSxK@ g$lhs*$11885$CSxK@) (= (case-lambda ((g$T$19589$CSxK@) (if g$T$19589$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$19590$CSxK@) ((case-lambda ((g$C$19575$CSxK@ g$g*$11886$CSxK@) (append (case-lambda ((g$V$19576$CSxK@) (append (case-lambda ((g$V$19577$CSxK@) (append (case-lambda ((g$V$19578$CSxK@) (values g$C$19575$CSxK@ g$V$19578$CSxK@ g$V$19577$CSxK@ g$V$19576$CSxK@))) g$g*$11886$CSxK@ g$lhs*$11885$CSxK@))) g$p*$11875$CSxK@ g$rhs*$11884$CSxK@))) g$g*$11886$CSxK@ g$q$11883$CSxK@))) g$C$19588$CSxK@ g$V$19590$CSxK@))) (case-lambda ((g$C$19579$CSxK@ g$x$11887$CSxK@) (gensym g$C$19579$CSxK@))) g$p*$11875$CSxK@) (call-with-values g$C$19588$CSxK@ (case-lambda ((g$C$19580$CSxK@) (- (case-lambda ((g$V$19581$CSxK@) (g$quasi$11842$CSxK@ g$C$19580$CSxK@ g$p*$11875$CSxK@ g$V$19581$CSxK@))) g$lev$11857$CSxK@ '1))) (case-lambda ((g$C$19587$CSxK@ g$lhs2*$11891$CSxK@ g$rhs2*$11892$CSxK@ g$p*$11893$CSxK@) ((case-lambda ((g$C$19582$CSxK@ g$p*$11894$CSxK@ g$rhs2*$11895$CSxK@ g$lhs2*$11896$CSxK@) (cons (case-lambda ((g$V$19583$CSxK@) (cons (case-lambda ((g$V$19584$CSxK@) (append (case-lambda ((g$V$19585$CSxK@) (append (case-lambda ((g$V$19586$CSxK@) (values g$C$19582$CSxK@ g$V$19586$CSxK@ g$V$19585$CSxK@ g$V$19584$CSxK@))) g$lhs2*$11896$CSxK@ g$lhs*$11885$CSxK@))) g$rhs2*$11895$CSxK@ g$rhs*$11884$CSxK@))) g$V$19583$CSxK@ g$q$11883$CSxK@))) 'unsyntax g$p*$11894$CSxK@))) g$C$19587$CSxK@ g$p*$11893$CSxK@ g$rhs2*$11892$CSxK@ g$lhs2*$11891$CSxK@))))))) g$lev$11857$CSxK@ '0))) g$C$19591$CSxK@ g$q$11882$CSxK@ g$rhs*$11881$CSxK@ g$lhs*$11880$CSxK@)))))) g$ls/false$11874$CSxK@) ((case-lambda ((g$C$19658$CSxK@ g$t$11897$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19659$CSxK@) ((case-lambda ((g$C$19657$CSxK@ g$ls/false$11898$CSxK@) (if g$ls/false$11898$CSxK@ (apply g$C$19657$CSxK@ (case-lambda ((g$C$19616$CSxK@ g$p*$11899$CSxK@ g$q$11900$CSxK@) (call-with-values g$C$19616$CSxK@ (case-lambda ((g$C$19593$CSxK@) (g$quasi$11842$CSxK@ g$C$19593$CSxK@ g$q$11900$CSxK@ g$lev$11857$CSxK@))) (case-lambda ((g$C$19615$CSxK@ g$lhs*$11904$CSxK@ g$rhs*$11905$CSxK@ g$q$11906$CSxK@) ((case-lambda ((g$C$19612$CSxK@ g$q$11907$CSxK@ g$rhs*$11908$CSxK@ g$lhs*$11909$CSxK@) (= (case-lambda ((g$T$19613$CSxK@) (if g$T$19613$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$19614$CSxK@) ((case-lambda ((g$C$19596$CSxK@ g$g*$11910$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19597$CSxK@) (apply (case-lambda ((g$V$19598$CSxK@) (append (case-lambda ((g$V$19599$CSxK@) (append (case-lambda ((g$V$19600$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19601$CSxK@) (append (case-lambda ((g$V$19602$CSxK@) (values g$C$19596$CSxK@ g$V$19602$CSxK@ g$V$19600$CSxK@ g$V$19599$CSxK@))) g$V$19601$CSxK@ g$lhs*$11909$CSxK@))) (case-lambda ((g$C$19594$CSxK@ g$g$11911$CSxK@) (cons g$C$19594$CSxK@ g$g$11911$CSxK@ '(...)))) g$g*$11910$CSxK@))) g$p*$11899$CSxK@ g$rhs*$11908$CSxK@))) g$V$19598$CSxK@ g$q$11907$CSxK@))) append g$V$19597$CSxK@))) (case-lambda ((g$C$19595$CSxK@ g$g$11912$CSxK@) (cons g$C$19595$CSxK@ g$g$11912$CSxK@ '(...)))) g$g*$11910$CSxK@))) g$C$19612$CSxK@ g$V$19614$CSxK@))) (case-lambda ((g$C$19603$CSxK@ g$x$11913$CSxK@) (gensym g$C$19603$CSxK@))) g$p*$11899$CSxK@) (call-with-values g$C$19612$CSxK@ (case-lambda ((g$C$19604$CSxK@) (- (case-lambda ((g$V$19605$CSxK@) (g$quasi$11842$CSxK@ g$C$19604$CSxK@ g$p*$11899$CSxK@ g$V$19605$CSxK@))) g$lev$11857$CSxK@ '1))) (case-lambda ((g$C$19611$CSxK@ g$lhs2*$11917$CSxK@ g$rhs2*$11918$CSxK@ g$p*$11919$CSxK@) ((case-lambda ((g$C$19606$CSxK@ g$p*$11920$CSxK@ g$rhs2*$11921$CSxK@ g$lhs2*$11922$CSxK@) (cons (case-lambda ((g$V$19607$CSxK@) (cons (case-lambda ((g$V$19608$CSxK@) (append (case-lambda ((g$V$19609$CSxK@) (append (case-lambda ((g$V$19610$CSxK@) (values g$C$19606$CSxK@ g$V$19610$CSxK@ g$V$19609$CSxK@ g$V$19608$CSxK@))) g$lhs2*$11922$CSxK@ g$lhs*$11909$CSxK@))) g$rhs2*$11921$CSxK@ g$rhs*$11908$CSxK@))) g$V$19607$CSxK@ g$q$11907$CSxK@))) 'unsyntax-splicing g$p*$11920$CSxK@))) g$C$19611$CSxK@ g$p*$11919$CSxK@ g$rhs2*$11918$CSxK@ g$lhs2*$11917$CSxK@))))))) g$lev$11857$CSxK@ '0))) g$C$19615$CSxK@ g$q$11906$CSxK@ g$rhs*$11905$CSxK@ g$lhs*$11904$CSxK@)))))) g$ls/false$11898$CSxK@) ((case-lambda ((g$C$19655$CSxK@ g$t$11923$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19656$CSxK@) ((case-lambda ((g$C$19652$CSxK@ g$ls/false$11924$CSxK@) ((case-lambda ((g$J$19654$CSxK@) (if g$ls/false$11924$CSxK@ (apply g$J$19654$CSxK@ (case-lambda ((g$C$19617$CSxK@) (= g$C$19617$CSxK@ g$lev$11857$CSxK@ '0))) g$ls/false$11924$CSxK@) (g$J$19654$CSxK@ '#f)))) (case-lambda ((g$T$19653$CSxK@) (if g$T$19653$CSxK@ (apply g$C$19652$CSxK@ (case-lambda ((g$C$19618$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19618$CSxK@ '#f '"incorrect use of unsyntax-splicing" g$p$11856$CSxK@))) g$ls/false$11924$CSxK@) ((case-lambda ((g$C$19650$CSxK@ g$t$11925$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19651$CSxK@) ((case-lambda ((g$C$19649$CSxK@ g$ls/false$11926$CSxK@) (if g$ls/false$11926$CSxK@ (apply g$C$19649$CSxK@ (case-lambda ((g$C$19624$CSxK@ g$p$11927$CSxK@) (call-with-values g$C$19624$CSxK@ (case-lambda ((g$C$19619$CSxK@) (+ (case-lambda ((g$V$19620$CSxK@) (g$quasi$11842$CSxK@ g$C$19619$CSxK@ g$p$11927$CSxK@ g$V$19620$CSxK@))) g$lev$11857$CSxK@ '1))) (case-lambda ((g$C$19623$CSxK@ g$lhs*$11931$CSxK@ g$rhs*$11932$CSxK@ g$p$11933$CSxK@) ((case-lambda ((g$C$19621$CSxK@ g$p$11934$CSxK@ g$rhs*$11935$CSxK@ g$lhs*$11936$CSxK@) (list (case-lambda ((g$V$19622$CSxK@) (values g$C$19621$CSxK@ g$lhs*$11936$CSxK@ g$rhs*$11935$CSxK@ g$V$19622$CSxK@))) 'quasisyntax g$p$11934$CSxK@))) g$C$19623$CSxK@ g$p$11933$CSxK@ g$rhs*$11932$CSxK@ g$lhs*$11931$CSxK@)))))) g$ls/false$11926$CSxK@) ((case-lambda ((g$C$19647$CSxK@ g$t$11937$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19648$CSxK@) ((case-lambda ((g$C$19646$CSxK@ g$ls/false$11938$CSxK@) (if g$ls/false$11938$CSxK@ (apply g$C$19646$CSxK@ (case-lambda ((g$C$19633$CSxK@ g$p$11939$CSxK@ g$q$11940$CSxK@) (call-with-values g$C$19633$CSxK@ (case-lambda ((g$C$19625$CSxK@) (g$quasi$11842$CSxK@ g$C$19625$CSxK@ g$p$11939$CSxK@ g$lev$11857$CSxK@))) (case-lambda ((g$C$19632$CSxK@ g$lhs*$11947$CSxK@ g$rhs*$11948$CSxK@ g$p$11949$CSxK@) (call-with-values g$C$19632$CSxK@ (case-lambda ((g$C$19626$CSxK@) (g$quasi$11842$CSxK@ g$C$19626$CSxK@ g$q$11940$CSxK@ g$lev$11857$CSxK@))) (case-lambda ((g$C$19631$CSxK@ g$lhs2*$11950$CSxK@ g$rhs2*$11951$CSxK@ g$q$11952$CSxK@) ((case-lambda ((g$C$19627$CSxK@ g$q$11953$CSxK@ g$rhs2*$11954$CSxK@ g$lhs2*$11955$CSxK@ g$p$11956$CSxK@ g$rhs*$11957$CSxK@ g$lhs*$11958$CSxK@) (cons (case-lambda ((g$V$19628$CSxK@) (append (case-lambda ((g$V$19629$CSxK@) (append (case-lambda ((g$V$19630$CSxK@) (values g$C$19627$CSxK@ g$V$19630$CSxK@ g$V$19629$CSxK@ g$V$19628$CSxK@))) g$lhs2*$11955$CSxK@ g$lhs*$11958$CSxK@))) g$rhs2*$11954$CSxK@ g$rhs*$11957$CSxK@))) g$p$11956$CSxK@ g$q$11953$CSxK@))) g$C$19631$CSxK@ g$q$11952$CSxK@ g$rhs2*$11951$CSxK@ g$lhs2*$11950$CSxK@ g$p$11949$CSxK@ g$rhs*$11948$CSxK@ g$lhs*$11947$CSxK@))))))))) g$ls/false$11938$CSxK@) ((case-lambda ((g$C$19644$CSxK@ g$t$11959$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19645$CSxK@) ((case-lambda ((g$C$19643$CSxK@ g$ls/false$11960$CSxK@) (if g$ls/false$11960$CSxK@ (apply g$C$19643$CSxK@ (case-lambda ((g$C$19638$CSxK@ g$x*$11961$CSxK@) (call-with-values g$C$19638$CSxK@ (case-lambda ((g$C$19634$CSxK@) (g$quasi$11842$CSxK@ g$C$19634$CSxK@ g$x*$11961$CSxK@ g$lev$11857$CSxK@))) (case-lambda ((g$C$19637$CSxK@ g$lhs*$11965$CSxK@ g$rhs*$11966$CSxK@ g$x*$11967$CSxK@) ((case-lambda ((g$C$19635$CSxK@ g$x*$11968$CSxK@ g$rhs*$11969$CSxK@ g$lhs*$11970$CSxK@) (g$list->vector$7379$CSxK@ (case-lambda ((g$V$19636$CSxK@) (values g$C$19635$CSxK@ g$lhs*$11970$CSxK@ g$rhs*$11969$CSxK@ g$V$19636$CSxK@))) g$x*$11968$CSxK@))) g$C$19637$CSxK@ g$x*$11967$CSxK@ g$rhs*$11966$CSxK@ g$lhs*$11965$CSxK@)))))) g$ls/false$11960$CSxK@) ((case-lambda ((g$C$19641$CSxK@ g$t$11971$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19642$CSxK@) ((case-lambda ((g$C$19640$CSxK@ g$ls/false$11972$CSxK@) (if g$ls/false$11972$CSxK@ (apply g$C$19640$CSxK@ (case-lambda ((g$C$19639$CSxK@) (values g$C$19639$CSxK@ '() '() g$p$11856$CSxK@))) g$ls/false$11972$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19640$CSxK@ '#f '"invalid syntax" g$t$11971$CSxK@)))) g$C$19641$CSxK@ g$V$19642$CSxK@))) g$t$11971$CSxK@ '_))) g$C$19643$CSxK@ g$t$11959$CSxK@)))) g$C$19644$CSxK@ g$V$19645$CSxK@))) g$t$11959$CSxK@ '#(vector each-any)))) g$C$19646$CSxK@ g$t$11937$CSxK@)))) g$C$19647$CSxK@ g$V$19648$CSxK@))) g$t$11937$CSxK@ '(any . any)))) g$C$19649$CSxK@ g$t$11925$CSxK@)))) g$C$19650$CSxK@ g$V$19651$CSxK@))) g$t$11925$CSxK@ '(#(scheme-id quasisyntax) any)))) g$C$19652$CSxK@ g$t$11923$CSxK@))))))) g$C$19655$CSxK@ g$V$19656$CSxK@))) g$t$11923$CSxK@ '#(scheme-id unsyntax-splicing)))) g$C$19657$CSxK@ g$t$11897$CSxK@)))) g$C$19658$CSxK@ g$V$19659$CSxK@))) g$t$11897$CSxK@ '((#(scheme-id unsyntax-splicing) . each-any) . any)))) g$C$19660$CSxK@ g$t$11873$CSxK@)))) g$C$19661$CSxK@ g$V$19662$CSxK@))) g$t$11873$CSxK@ '((#(scheme-id unsyntax) . each-any) . any)))) g$C$19663$CSxK@ g$t$11871$CSxK@))))))) g$C$19666$CSxK@ g$V$19667$CSxK@))) g$t$11871$CSxK@ '#(scheme-id unsyntax)))) g$C$19668$CSxK@ g$t$11858$CSxK@)))) g$C$19669$CSxK@ g$V$19670$CSxK@))) g$t$11858$CSxK@ '(#(scheme-id unsyntax) any)))) g$C$19671$CSxK@ g$p$11856$CSxK@)))) (g$C$19684$CSxK@ (case-lambda ((g$C$19683$CSxK@ g$x$11843$CSxK@) ((case-lambda ((g$C$19681$CSxK@ g$t$11844$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19682$CSxK@) ((case-lambda ((g$C$19680$CSxK@ g$ls/false$11845$CSxK@) (if g$ls/false$11845$CSxK@ (apply g$C$19680$CSxK@ (case-lambda ((g$C$19679$CSxK@ g$e$11846$CSxK@) (call-with-values g$C$19679$CSxK@ (case-lambda ((g$C$19672$CSxK@) (g$quasi$11842$CSxK@ g$C$19672$CSxK@ g$e$11846$CSxK@ '0))) (case-lambda ((g$C$19678$CSxK@ g$lhs*$11850$CSxK@ g$rhs*$11851$CSxK@ g$v$11852$CSxK@) ((case-lambda ((g$C$19673$CSxK@ g$v$11853$CSxK@ g$rhs*$11854$CSxK@ g$lhs*$11855$CSxK@) (list (case-lambda ((g$V$19674$CSxK@) (list (case-lambda ((g$V$19675$CSxK@) (cons (case-lambda ((g$V$19676$CSxK@) (list (case-lambda ((g$V$19677$CSxK@) (g$bless$10673$CSxK@ g$C$19673$CSxK@ g$V$19677$CSxK@))) 'syntax-case g$V$19676$CSxK@ '() g$V$19675$CSxK@))) 'list g$rhs*$11854$CSxK@))) g$lhs*$11855$CSxK@ g$V$19674$CSxK@))) 'syntax g$v$11853$CSxK@))) g$C$19678$CSxK@ g$v$11852$CSxK@ g$rhs*$11851$CSxK@ g$lhs*$11850$CSxK@)))))) g$ls/false$11845$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19680$CSxK@ '#f '"invalid syntax" g$t$11844$CSxK@)))) g$C$19681$CSxK@ g$V$19682$CSxK@))) g$t$11844$CSxK@ '(_ any)))) g$C$19683$CSxK@ g$x$11843$CSxK@))))))) g$C$19685$CSxK@ uninitialized))) g$C$22769$CSxK@))) (library-letrec*-identity 'g$quasisyntax-macro$10702$CSxK@))) (g$define-struct-macro$10703$CSxK@ g$define-struct-macro$14245$CSxK@ ((case-lambda ((g$C$22770$CSxK@) (g$C$22770$CSxK@ (case-lambda ((g$C$19686$CSxK@ g$stx$11973$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19686$CSxK@ '#f '"define-struct not supported" g$stx$11973$CSxK@)))))) (library-letrec*-identity 'g$define-struct-macro$10703$CSxK@))) (g$define-record-type-macro$10704$CSxK@ g$define-record-type-macro$14246$CSxK@ ((case-lambda ((g$C$22771$CSxK@) (g$C$22771$CSxK@ (case-lambda ((g$C$20076$CSxK@ g$x$11974$CSxK@) ((case-lambda ((g$C$20075$CSxK@ g$id$11975$CSxK@ g$get-record-name$11976$CSxK@ g$get-record-constructor-name$11977$CSxK@ g$get-record-predicate-name$11978$CSxK@ g$get-clause$11979$CSxK@ g$foo-rtd-code$11980$CSxK@ g$parent-rtd-code$11981$CSxK@ g$parent-rcd-code$11982$CSxK@ g$foo-rcd-code$11983$CSxK@ g$get-protocol-code$11984$CSxK@ g$get-fields$11985$CSxK@ g$get-mutator-indices$11986$CSxK@ g$get-mutators$11987$CSxK@ g$get-accessors$11988$CSxK@ g$enumerate$11989$CSxK@ g$do-define-record$11990$CSxK@ g$verify-clauses$11991$CSxK@) (begin (set! g$id$11975$CSxK@ (case-lambda ((g$C$19690$CSxK@ g$ctxt$12227$CSxK@ . g$str*$12228$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19691$CSxK@) (apply (case-lambda ((g$V$19692$CSxK@) (string->symbol (case-lambda ((g$V$19693$CSxK@) (g$datum->syntax$10830$CSxK@ g$C$19690$CSxK@ g$ctxt$12227$CSxK@ g$V$19693$CSxK@))) g$V$19692$CSxK@))) string-append g$V$19691$CSxK@))) (case-lambda ((g$C$19687$CSxK@ g$x$12229$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$19688$CSxK@) (if g$T$19688$CSxK@ (symbol->string g$C$19687$CSxK@ g$x$12229$CSxK@) (string? (case-lambda ((g$T$19689$CSxK@) (if g$T$19689$CSxK@ (g$C$19687$CSxK@ g$x$12229$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$19687$CSxK@ 'define-record-type '"BUG")))) g$x$12229$CSxK@)))) g$x$12229$CSxK@))) g$str*$12228$CSxK@)))) (begin (set! g$get-record-name$11976$CSxK@ (case-lambda ((g$C$19702$CSxK@ g$spec$12218$CSxK@) ((case-lambda ((g$C$19700$CSxK@ g$t$12219$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19701$CSxK@) ((case-lambda ((g$C$19699$CSxK@ g$ls/false$12220$CSxK@) (if g$ls/false$12220$CSxK@ (apply g$C$19699$CSxK@ (case-lambda ((g$C$19694$CSxK@ g$foo$12221$CSxK@ g$make-foo$12222$CSxK@ g$foo?$12223$CSxK@) (g$C$19694$CSxK@ g$foo$12221$CSxK@))) g$ls/false$12220$CSxK@) ((case-lambda ((g$C$19697$CSxK@ g$t$12224$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19698$CSxK@) ((case-lambda ((g$C$19696$CSxK@ g$ls/false$12225$CSxK@) (if g$ls/false$12225$CSxK@ (apply g$C$19696$CSxK@ (case-lambda ((g$C$19695$CSxK@ g$foo$12226$CSxK@) (g$C$19695$CSxK@ g$foo$12226$CSxK@))) g$ls/false$12225$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19696$CSxK@ '#f '"invalid syntax" g$t$12224$CSxK@)))) g$C$19697$CSxK@ g$V$19698$CSxK@))) g$t$12224$CSxK@ 'any))) g$C$19699$CSxK@ g$t$12219$CSxK@)))) g$C$19700$CSxK@ g$V$19701$CSxK@))) g$t$12219$CSxK@ '(any any any)))) g$C$19702$CSxK@ g$spec$12218$CSxK@)))) (begin (set! g$get-record-constructor-name$11977$CSxK@ (case-lambda ((g$C$19715$CSxK@ g$spec$12208$CSxK@) ((case-lambda ((g$C$19713$CSxK@ g$t$12209$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19714$CSxK@) ((case-lambda ((g$C$19712$CSxK@ g$ls/false$12210$CSxK@) (if g$ls/false$12210$CSxK@ (apply g$C$19712$CSxK@ (case-lambda ((g$C$19703$CSxK@ g$foo$12211$CSxK@ g$make-foo$12212$CSxK@ g$foo?$12213$CSxK@) (g$C$19703$CSxK@ g$make-foo$12212$CSxK@))) g$ls/false$12210$CSxK@) ((case-lambda ((g$C$19710$CSxK@ g$t$12214$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19711$CSxK@) ((case-lambda ((g$C$19707$CSxK@ g$ls/false$12215$CSxK@) ((case-lambda ((g$J$19709$CSxK@) (if g$ls/false$12215$CSxK@ (apply g$J$19709$CSxK@ (case-lambda ((g$C$19704$CSxK@ g$foo$12216$CSxK@) (g$id?$10347$CSxK@ g$C$19704$CSxK@ g$foo$12216$CSxK@))) g$ls/false$12215$CSxK@) (g$J$19709$CSxK@ '#f)))) (case-lambda ((g$T$19708$CSxK@) (if g$T$19708$CSxK@ (apply g$C$19707$CSxK@ (case-lambda ((g$C$19705$CSxK@ g$foo$12217$CSxK@) (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$19706$CSxK@) (g$id$11975$CSxK@ g$C$19705$CSxK@ g$foo$12217$CSxK@ '"make-" g$V$19706$CSxK@))) g$foo$12217$CSxK@))) g$ls/false$12215$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19707$CSxK@ '#f '"invalid syntax" g$t$12214$CSxK@))))))) g$C$19710$CSxK@ g$V$19711$CSxK@))) g$t$12214$CSxK@ 'any))) g$C$19712$CSxK@ g$t$12209$CSxK@)))) g$C$19713$CSxK@ g$V$19714$CSxK@))) g$t$12209$CSxK@ '(any any any)))) g$C$19715$CSxK@ g$spec$12208$CSxK@)))) (begin (set! g$get-record-predicate-name$11978$CSxK@ (case-lambda ((g$C$19728$CSxK@ g$spec$12198$CSxK@) ((case-lambda ((g$C$19726$CSxK@ g$t$12199$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19727$CSxK@) ((case-lambda ((g$C$19725$CSxK@ g$ls/false$12200$CSxK@) (if g$ls/false$12200$CSxK@ (apply g$C$19725$CSxK@ (case-lambda ((g$C$19716$CSxK@ g$foo$12201$CSxK@ g$make-foo$12202$CSxK@ g$foo?$12203$CSxK@) (g$C$19716$CSxK@ g$foo?$12203$CSxK@))) g$ls/false$12200$CSxK@) ((case-lambda ((g$C$19723$CSxK@ g$t$12204$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19724$CSxK@) ((case-lambda ((g$C$19720$CSxK@ g$ls/false$12205$CSxK@) ((case-lambda ((g$J$19722$CSxK@) (if g$ls/false$12205$CSxK@ (apply g$J$19722$CSxK@ (case-lambda ((g$C$19717$CSxK@ g$foo$12206$CSxK@) (g$id?$10347$CSxK@ g$C$19717$CSxK@ g$foo$12206$CSxK@))) g$ls/false$12205$CSxK@) (g$J$19722$CSxK@ '#f)))) (case-lambda ((g$T$19721$CSxK@) (if g$T$19721$CSxK@ (apply g$C$19720$CSxK@ (case-lambda ((g$C$19718$CSxK@ g$foo$12207$CSxK@) (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$19719$CSxK@) (g$id$11975$CSxK@ g$C$19718$CSxK@ g$foo$12207$CSxK@ g$V$19719$CSxK@ '"?"))) g$foo$12207$CSxK@))) g$ls/false$12205$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19720$CSxK@ '#f '"invalid syntax" g$t$12204$CSxK@))))))) g$C$19723$CSxK@ g$V$19724$CSxK@))) g$t$12204$CSxK@ 'any))) g$C$19725$CSxK@ g$t$12199$CSxK@)))) g$C$19726$CSxK@ g$V$19727$CSxK@))) g$t$12199$CSxK@ '(any any any)))) g$C$19728$CSxK@ g$spec$12198$CSxK@)))) (begin (set! g$get-clause$11979$CSxK@ (case-lambda ((g$C$19739$CSxK@ g$id$12189$CSxK@ g$ls$12190$CSxK@) ((case-lambda ((g$C$19737$CSxK@ g$t$12191$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19738$CSxK@) ((case-lambda ((g$C$19736$CSxK@ g$ls/false$12192$CSxK@) (if g$ls/false$12192$CSxK@ (apply g$C$19736$CSxK@ (case-lambda ((g$C$19729$CSxK@) (g$C$19729$CSxK@ '#f))) g$ls/false$12192$CSxK@) ((case-lambda ((g$C$19734$CSxK@ g$t$12193$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19735$CSxK@) ((case-lambda ((g$C$19733$CSxK@ g$ls/false$12194$CSxK@) (if g$ls/false$12194$CSxK@ (apply g$C$19733$CSxK@ (case-lambda ((g$C$19730$CSxK@ g$x$12195$CSxK@ g$rest$12196$CSxK@ g$ls$12197$CSxK@) (g$bless$10673$CSxK@ (case-lambda ((g$V$19731$CSxK@) (g$free-id=?$10351$CSxK@ (case-lambda ((g$T$19732$CSxK@) (if g$T$19732$CSxK@ (cons g$C$19730$CSxK@ g$x$12195$CSxK@ g$rest$12196$CSxK@) (g$get-clause$11979$CSxK@ g$C$19730$CSxK@ g$id$12189$CSxK@ g$ls$12197$CSxK@)))) g$V$19731$CSxK@ g$x$12195$CSxK@))) g$id$12189$CSxK@))) g$ls/false$12194$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19733$CSxK@ '#f '"invalid syntax" g$t$12193$CSxK@)))) g$C$19734$CSxK@ g$V$19735$CSxK@))) g$t$12193$CSxK@ '((any . any) . any)))) g$C$19736$CSxK@ g$t$12191$CSxK@)))) g$C$19737$CSxK@ g$V$19738$CSxK@))) g$t$12191$CSxK@ '()))) g$C$19739$CSxK@ g$ls$12190$CSxK@)))) (begin (set! g$foo-rtd-code$11980$CSxK@ (case-lambda ((g$C$19805$CSxK@ g$name$12148$CSxK@ g$clause*$12149$CSxK@ g$parent-rtd-code$12150$CSxK@) ((case-lambda ((g$C$19796$CSxK@ g$convert-field-spec*$12151$CSxK@) (begin (set! g$convert-field-spec*$12151$CSxK@ (case-lambda ((g$C$19753$CSxK@ g$ls$12176$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19754$CSxK@) (g$list->vector$7379$CSxK@ g$C$19753$CSxK@ g$V$19754$CSxK@))) (case-lambda ((g$C$19752$CSxK@ g$x$12177$CSxK@) ((case-lambda ((g$C$19750$CSxK@ g$t$12178$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19751$CSxK@) ((case-lambda ((g$C$19749$CSxK@ g$ls/false$12179$CSxK@) (if g$ls/false$12179$CSxK@ (apply g$C$19749$CSxK@ (case-lambda ((g$C$19740$CSxK@ g$name$12180$CSxK@ g$rest$12181$CSxK@) (list g$C$19740$CSxK@ 'mutable g$name$12180$CSxK@))) g$ls/false$12179$CSxK@) ((case-lambda ((g$C$19747$CSxK@ g$t$12182$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19748$CSxK@) ((case-lambda ((g$C$19746$CSxK@ g$ls/false$12183$CSxK@) (if g$ls/false$12183$CSxK@ (apply g$C$19746$CSxK@ (case-lambda ((g$C$19741$CSxK@ g$name$12184$CSxK@ g$rest$12185$CSxK@) (list g$C$19741$CSxK@ 'immutable g$name$12184$CSxK@))) g$ls/false$12183$CSxK@) ((case-lambda ((g$C$19744$CSxK@ g$t$12186$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19745$CSxK@) ((case-lambda ((g$C$19743$CSxK@ g$ls/false$12187$CSxK@) (if g$ls/false$12187$CSxK@ (apply g$C$19743$CSxK@ (case-lambda ((g$C$19742$CSxK@ g$name$12188$CSxK@) (list g$C$19742$CSxK@ 'immutable g$name$12188$CSxK@))) g$ls/false$12187$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19743$CSxK@ '#f '"invalid syntax" g$t$12186$CSxK@)))) g$C$19744$CSxK@ g$V$19745$CSxK@))) g$t$12186$CSxK@ 'any))) g$C$19746$CSxK@ g$t$12182$CSxK@)))) g$C$19747$CSxK@ g$V$19748$CSxK@))) g$t$12182$CSxK@ '(#(scheme-id immutable) any . any)))) g$C$19749$CSxK@ g$t$12178$CSxK@)))) g$C$19750$CSxK@ g$V$19751$CSxK@))) g$t$12178$CSxK@ '(#(scheme-id mutable) any . any)))) g$C$19752$CSxK@ g$x$12177$CSxK@))) g$ls$12176$CSxK@)))) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19797$CSxK@) ((case-lambda ((g$C$19794$CSxK@ g$t$12171$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19795$CSxK@) ((case-lambda ((g$C$19793$CSxK@ g$ls/false$12172$CSxK@) (if g$ls/false$12172$CSxK@ (apply g$C$19793$CSxK@ (case-lambda ((g$C$19787$CSxK@ g$field-spec*$12173$CSxK@) (g$convert-field-spec*$12151$CSxK@ (case-lambda ((g$V$19788$CSxK@) (list g$C$19787$CSxK@ 'quote g$V$19788$CSxK@))) g$field-spec*$12173$CSxK@))) g$ls/false$12172$CSxK@) ((case-lambda ((g$C$19791$CSxK@ g$t$12174$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19792$CSxK@) ((case-lambda ((g$C$19790$CSxK@ g$ls/false$12175$CSxK@) (if g$ls/false$12175$CSxK@ (apply g$C$19790$CSxK@ (case-lambda ((g$C$19789$CSxK@) (g$C$19789$CSxK@ ''#()))) g$ls/false$12175$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19790$CSxK@ '#f '"invalid syntax" g$t$12174$CSxK@)))) g$C$19791$CSxK@ g$V$19792$CSxK@))) g$t$12174$CSxK@ '_))) g$C$19793$CSxK@ g$t$12171$CSxK@)))) g$C$19794$CSxK@ g$V$19795$CSxK@))) g$t$12171$CSxK@ '(_ . each-any)))) (case-lambda ((g$V$19798$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19799$CSxK@) ((case-lambda ((g$C$19785$CSxK@ g$t$12167$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19786$CSxK@) ((case-lambda ((g$C$19784$CSxK@ g$ls/false$12168$CSxK@) (if g$ls/false$12168$CSxK@ (apply g$C$19784$CSxK@ (case-lambda ((g$C$19779$CSxK@) (g$C$19779$CSxK@ '#t))) g$ls/false$12168$CSxK@) ((case-lambda ((g$C$19782$CSxK@ g$t$12169$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19783$CSxK@) ((case-lambda ((g$C$19781$CSxK@ g$ls/false$12170$CSxK@) (if g$ls/false$12170$CSxK@ (apply g$C$19781$CSxK@ (case-lambda ((g$C$19780$CSxK@) (g$C$19780$CSxK@ '#f))) g$ls/false$12170$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19781$CSxK@ '#f '"invalid syntax" g$t$12169$CSxK@)))) g$C$19782$CSxK@ g$V$19783$CSxK@))) g$t$12169$CSxK@ '_))) g$C$19784$CSxK@ g$t$12167$CSxK@)))) g$C$19785$CSxK@ g$V$19786$CSxK@))) g$t$12167$CSxK@ '(_ #(atom #t))))) (case-lambda ((g$V$19800$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19801$CSxK@) ((case-lambda ((g$C$19777$CSxK@ g$t$12163$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19778$CSxK@) ((case-lambda ((g$C$19776$CSxK@ g$ls/false$12164$CSxK@) (if g$ls/false$12164$CSxK@ (apply g$C$19776$CSxK@ (case-lambda ((g$C$19771$CSxK@) (g$C$19771$CSxK@ '#t))) g$ls/false$12164$CSxK@) ((case-lambda ((g$C$19774$CSxK@ g$t$12165$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19775$CSxK@) ((case-lambda ((g$C$19773$CSxK@ g$ls/false$12166$CSxK@) (if g$ls/false$12166$CSxK@ (apply g$C$19773$CSxK@ (case-lambda ((g$C$19772$CSxK@) (g$C$19772$CSxK@ '#f))) g$ls/false$12166$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19773$CSxK@ '#f '"invalid syntax" g$t$12165$CSxK@)))) g$C$19774$CSxK@ g$V$19775$CSxK@))) g$t$12165$CSxK@ '_))) g$C$19776$CSxK@ g$t$12163$CSxK@)))) g$C$19777$CSxK@ g$V$19778$CSxK@))) g$t$12163$CSxK@ '(_ #(atom #t))))) (case-lambda ((g$V$19802$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19803$CSxK@) ((case-lambda ((g$C$19769$CSxK@ g$t$12156$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19770$CSxK@) ((case-lambda ((g$C$19768$CSxK@ g$ls/false$12157$CSxK@) (if g$ls/false$12157$CSxK@ (apply g$C$19768$CSxK@ (case-lambda ((g$C$19758$CSxK@) (gensym (case-lambda ((g$V$19759$CSxK@) (list g$C$19758$CSxK@ 'quote g$V$19759$CSxK@)))))) g$ls/false$12157$CSxK@) ((case-lambda ((g$C$19766$CSxK@ g$t$12158$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19767$CSxK@) ((case-lambda ((g$C$19765$CSxK@ g$ls/false$12159$CSxK@) (if g$ls/false$12159$CSxK@ (apply g$C$19765$CSxK@ (case-lambda ((g$C$19760$CSxK@ g$uid$12160$CSxK@) (list g$C$19760$CSxK@ 'quote g$uid$12160$CSxK@))) g$ls/false$12159$CSxK@) ((case-lambda ((g$C$19763$CSxK@ g$t$12161$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19764$CSxK@) ((case-lambda ((g$C$19762$CSxK@ g$ls/false$12162$CSxK@) (if g$ls/false$12162$CSxK@ (apply g$C$19762$CSxK@ (case-lambda ((g$C$19761$CSxK@) (g$C$19761$CSxK@ '#f))) g$ls/false$12162$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19762$CSxK@ '#f '"invalid syntax" g$t$12161$CSxK@)))) g$C$19763$CSxK@ g$V$19764$CSxK@))) g$t$12161$CSxK@ '_))) g$C$19765$CSxK@ g$t$12158$CSxK@)))) g$C$19766$CSxK@ g$V$19767$CSxK@))) g$t$12158$CSxK@ '(_ any)))) g$C$19768$CSxK@ g$t$12156$CSxK@)))) g$C$19769$CSxK@ g$V$19770$CSxK@))) g$t$12156$CSxK@ '(_)))) (case-lambda ((g$V$19804$CSxK@) ((case-lambda ((g$C$19755$CSxK@ g$uid-code$12152$CSxK@ g$sealed?$12153$CSxK@ g$opaque?$12154$CSxK@ g$fields$12155$CSxK@) (list (case-lambda ((g$V$19756$CSxK@) (list (case-lambda ((g$V$19757$CSxK@) (g$bless$10673$CSxK@ g$C$19755$CSxK@ g$V$19757$CSxK@))) 'make-record-type-descriptor g$V$19756$CSxK@ g$parent-rtd-code$12150$CSxK@ g$uid-code$12152$CSxK@ g$sealed?$12153$CSxK@ g$opaque?$12154$CSxK@ g$fields$12155$CSxK@))) 'quote g$name$12148$CSxK@))) g$C$19796$CSxK@ g$V$19804$CSxK@ g$V$19802$CSxK@ g$V$19800$CSxK@ g$V$19798$CSxK@))) g$V$19803$CSxK@))) 'nongenerative g$clause*$12149$CSxK@))) g$V$19801$CSxK@))) 'sealed g$clause*$12149$CSxK@))) g$V$19799$CSxK@))) 'opaque g$clause*$12149$CSxK@))) g$V$19797$CSxK@))) 'fields g$clause*$12149$CSxK@)))) g$C$19805$CSxK@ uninitialized)))) (begin (set! g$parent-rtd-code$11981$CSxK@ (case-lambda ((g$C$19823$CSxK@ g$clause*$12136$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19824$CSxK@) ((case-lambda ((g$C$19821$CSxK@ g$t$12137$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19822$CSxK@) ((case-lambda ((g$C$19820$CSxK@ g$ls/false$12138$CSxK@) (if g$ls/false$12138$CSxK@ (apply g$C$19820$CSxK@ (case-lambda ((g$C$19806$CSxK@ g$name$12139$CSxK@) (list g$C$19806$CSxK@ 'record-type-descriptor g$name$12139$CSxK@))) g$ls/false$12138$CSxK@) ((case-lambda ((g$C$19818$CSxK@ g$t$12140$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19819$CSxK@) ((case-lambda ((g$C$19817$CSxK@ g$ls/false$12141$CSxK@) (if g$ls/false$12141$CSxK@ (apply g$C$19817$CSxK@ (case-lambda ((g$C$19815$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19816$CSxK@) ((case-lambda ((g$C$19813$CSxK@ g$t$12142$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19814$CSxK@) ((case-lambda ((g$C$19812$CSxK@ g$ls/false$12143$CSxK@) (if g$ls/false$12143$CSxK@ (apply g$C$19812$CSxK@ (case-lambda ((g$C$19807$CSxK@ g$rtd$12144$CSxK@ g$rcd$12145$CSxK@) (g$C$19807$CSxK@ g$rtd$12144$CSxK@))) g$ls/false$12143$CSxK@) ((case-lambda ((g$C$19810$CSxK@ g$t$12146$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19811$CSxK@) ((case-lambda ((g$C$19809$CSxK@ g$ls/false$12147$CSxK@) (if g$ls/false$12147$CSxK@ (apply g$C$19809$CSxK@ (case-lambda ((g$C$19808$CSxK@) (g$C$19808$CSxK@ '#f))) g$ls/false$12147$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19809$CSxK@ '#f '"invalid syntax" g$t$12146$CSxK@)))) g$C$19810$CSxK@ g$V$19811$CSxK@))) g$t$12146$CSxK@ '#(atom #f)))) g$C$19812$CSxK@ g$t$12142$CSxK@)))) g$C$19813$CSxK@ g$V$19814$CSxK@))) g$t$12142$CSxK@ '(_ any any)))) g$C$19815$CSxK@ g$V$19816$CSxK@))) 'parent-rtd g$clause*$12136$CSxK@))) g$ls/false$12141$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19817$CSxK@ '#f '"invalid syntax" g$t$12140$CSxK@)))) g$C$19818$CSxK@ g$V$19819$CSxK@))) g$t$12140$CSxK@ '#(atom #f)))) g$C$19820$CSxK@ g$t$12137$CSxK@)))) g$C$19821$CSxK@ g$V$19822$CSxK@))) g$t$12137$CSxK@ '(_ any)))) g$C$19823$CSxK@ g$V$19824$CSxK@))) 'parent g$clause*$12136$CSxK@)))) (begin (set! g$parent-rcd-code$11982$CSxK@ (case-lambda ((g$C$19842$CSxK@ g$clause*$12124$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19843$CSxK@) ((case-lambda ((g$C$19840$CSxK@ g$t$12125$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19841$CSxK@) ((case-lambda ((g$C$19839$CSxK@ g$ls/false$12126$CSxK@) (if g$ls/false$12126$CSxK@ (apply g$C$19839$CSxK@ (case-lambda ((g$C$19825$CSxK@ g$name$12127$CSxK@) (list g$C$19825$CSxK@ 'record-constructor-descriptor g$name$12127$CSxK@))) g$ls/false$12126$CSxK@) ((case-lambda ((g$C$19837$CSxK@ g$t$12128$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19838$CSxK@) ((case-lambda ((g$C$19836$CSxK@ g$ls/false$12129$CSxK@) (if g$ls/false$12129$CSxK@ (apply g$C$19836$CSxK@ (case-lambda ((g$C$19834$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19835$CSxK@) ((case-lambda ((g$C$19832$CSxK@ g$t$12130$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19833$CSxK@) ((case-lambda ((g$C$19831$CSxK@ g$ls/false$12131$CSxK@) (if g$ls/false$12131$CSxK@ (apply g$C$19831$CSxK@ (case-lambda ((g$C$19826$CSxK@ g$rtd$12132$CSxK@ g$rcd$12133$CSxK@) (g$C$19826$CSxK@ g$rcd$12133$CSxK@))) g$ls/false$12131$CSxK@) ((case-lambda ((g$C$19829$CSxK@ g$t$12134$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19830$CSxK@) ((case-lambda ((g$C$19828$CSxK@ g$ls/false$12135$CSxK@) (if g$ls/false$12135$CSxK@ (apply g$C$19828$CSxK@ (case-lambda ((g$C$19827$CSxK@) (g$C$19827$CSxK@ '#f))) g$ls/false$12135$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19828$CSxK@ '#f '"invalid syntax" g$t$12134$CSxK@)))) g$C$19829$CSxK@ g$V$19830$CSxK@))) g$t$12134$CSxK@ '#(atom #f)))) g$C$19831$CSxK@ g$t$12130$CSxK@)))) g$C$19832$CSxK@ g$V$19833$CSxK@))) g$t$12130$CSxK@ '(_ any any)))) g$C$19834$CSxK@ g$V$19835$CSxK@))) 'parent-rtd g$clause*$12124$CSxK@))) g$ls/false$12129$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19836$CSxK@ '#f '"invalid syntax" g$t$12128$CSxK@)))) g$C$19837$CSxK@ g$V$19838$CSxK@))) g$t$12128$CSxK@ '#(atom #f)))) g$C$19839$CSxK@ g$t$12125$CSxK@)))) g$C$19840$CSxK@ g$V$19841$CSxK@))) g$t$12125$CSxK@ '(_ any)))) g$C$19842$CSxK@ g$V$19843$CSxK@))) 'parent g$clause*$12124$CSxK@)))) (begin (set! g$foo-rcd-code$11983$CSxK@ (case-lambda ((g$C$19844$CSxK@ g$clause*$12120$CSxK@ g$foo-rtd$12121$CSxK@ g$protocol$12122$CSxK@ g$parent-rcd-code$12123$CSxK@) (list g$C$19844$CSxK@ 'make-record-constructor-descriptor g$foo-rtd$12121$CSxK@ g$parent-rcd-code$12123$CSxK@ g$protocol$12122$CSxK@)))) (begin (set! g$get-protocol-code$11984$CSxK@ (case-lambda ((g$C$19853$CSxK@ g$clause*$12114$CSxK@) (g$get-clause$11979$CSxK@ (case-lambda ((g$V$19854$CSxK@) ((case-lambda ((g$C$19851$CSxK@ g$t$12115$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19852$CSxK@) ((case-lambda ((g$C$19850$CSxK@ g$ls/false$12116$CSxK@) (if g$ls/false$12116$CSxK@ (apply g$C$19850$CSxK@ (case-lambda ((g$C$19845$CSxK@ g$expr$12117$CSxK@) (g$C$19845$CSxK@ g$expr$12117$CSxK@))) g$ls/false$12116$CSxK@) ((case-lambda ((g$C$19848$CSxK@ g$t$12118$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19849$CSxK@) ((case-lambda ((g$C$19847$CSxK@ g$ls/false$12119$CSxK@) (if g$ls/false$12119$CSxK@ (apply g$C$19847$CSxK@ (case-lambda ((g$C$19846$CSxK@) (g$C$19846$CSxK@ '#f))) g$ls/false$12119$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19847$CSxK@ '#f '"invalid syntax" g$t$12118$CSxK@)))) g$C$19848$CSxK@ g$V$19849$CSxK@))) g$t$12118$CSxK@ '_))) g$C$19850$CSxK@ g$t$12115$CSxK@)))) g$C$19851$CSxK@ g$V$19852$CSxK@))) g$t$12115$CSxK@ '(_ any)))) g$C$19853$CSxK@ g$V$19854$CSxK@))) 'protocol g$clause*$12114$CSxK@)))) (begin (set! g$get-fields$11985$CSxK@ (case-lambda ((g$C$19867$CSxK@ g$clause*$12105$CSxK@) ((case-lambda ((g$C$19865$CSxK@ g$t$12106$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19866$CSxK@) ((case-lambda ((g$C$19864$CSxK@ g$ls/false$12107$CSxK@) (if g$ls/false$12107$CSxK@ (apply g$C$19864$CSxK@ (case-lambda ((g$C$19855$CSxK@) (g$C$19855$CSxK@ '()))) g$ls/false$12107$CSxK@) ((case-lambda ((g$C$19862$CSxK@ g$t$12108$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19863$CSxK@) ((case-lambda ((g$C$19861$CSxK@ g$ls/false$12109$CSxK@) (if g$ls/false$12109$CSxK@ (apply g$C$19861$CSxK@ (case-lambda ((g$C$19856$CSxK@ g$f*$12110$CSxK@) (g$C$19856$CSxK@ g$f*$12110$CSxK@))) g$ls/false$12109$CSxK@) ((case-lambda ((g$C$19859$CSxK@ g$t$12111$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19860$CSxK@) ((case-lambda ((g$C$19858$CSxK@ g$ls/false$12112$CSxK@) (if g$ls/false$12112$CSxK@ (apply g$C$19858$CSxK@ (case-lambda ((g$C$19857$CSxK@ g$rest$12113$CSxK@) (g$get-fields$11985$CSxK@ g$C$19857$CSxK@ g$rest$12113$CSxK@))) g$ls/false$12112$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19858$CSxK@ '#f '"invalid syntax" g$t$12111$CSxK@)))) g$C$19859$CSxK@ g$V$19860$CSxK@))) g$t$12111$CSxK@ '(_ . any)))) g$C$19861$CSxK@ g$t$12108$CSxK@)))) g$C$19862$CSxK@ g$V$19863$CSxK@))) g$t$12108$CSxK@ '((#(scheme-id fields) . each-any) . _)))) g$C$19864$CSxK@ g$t$12106$CSxK@)))) g$C$19865$CSxK@ g$V$19866$CSxK@))) g$t$12106$CSxK@ '()))) g$C$19867$CSxK@ g$clause*$12105$CSxK@)))) (begin (set! g$get-mutator-indices$11986$CSxK@ (case-lambda ((g$C$19887$CSxK@ g$fields$12093$CSxK@) ((case-lambda ((g$C$19886$CSxK@ g$f$12094$CSxK@) ((case-lambda ((g$C$19869$CSxK@ g$f$19868$CSxK@) (begin (set! g$f$12094$CSxK@ g$f$19868$CSxK@) (g$C$19869$CSxK@ g$f$12094$CSxK@)))) g$C$19886$CSxK@ (case-lambda ((g$C$19885$CSxK@ g$fields$12095$CSxK@ g$i$12096$CSxK@) ((case-lambda ((g$C$19883$CSxK@ g$t$12097$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19884$CSxK@) ((case-lambda ((g$C$19882$CSxK@ g$ls/false$12098$CSxK@) (if g$ls/false$12098$CSxK@ (apply g$C$19882$CSxK@ (case-lambda ((g$C$19870$CSxK@) (g$C$19870$CSxK@ '()))) g$ls/false$12098$CSxK@) ((case-lambda ((g$C$19880$CSxK@ g$t$12099$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19881$CSxK@) ((case-lambda ((g$C$19879$CSxK@ g$ls/false$12100$CSxK@) (if g$ls/false$12100$CSxK@ (apply g$C$19879$CSxK@ (case-lambda ((g$C$19871$CSxK@ g$rest$12101$CSxK@) (+ (case-lambda ((g$V$19872$CSxK@) (g$f$12094$CSxK@ (case-lambda ((g$V$19873$CSxK@) (cons g$C$19871$CSxK@ g$i$12096$CSxK@ g$V$19873$CSxK@))) g$rest$12101$CSxK@ g$V$19872$CSxK@))) g$i$12096$CSxK@ '1))) g$ls/false$12100$CSxK@) ((case-lambda ((g$C$19877$CSxK@ g$t$12102$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19878$CSxK@) ((case-lambda ((g$C$19876$CSxK@ g$ls/false$12103$CSxK@) (if g$ls/false$12103$CSxK@ (apply g$C$19876$CSxK@ (case-lambda ((g$C$19874$CSxK@ g$rest$12104$CSxK@) (+ (case-lambda ((g$V$19875$CSxK@) (g$f$12094$CSxK@ g$C$19874$CSxK@ g$rest$12104$CSxK@ g$V$19875$CSxK@))) g$i$12096$CSxK@ '1))) g$ls/false$12103$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19876$CSxK@ '#f '"invalid syntax" g$t$12102$CSxK@)))) g$C$19877$CSxK@ g$V$19878$CSxK@))) g$t$12102$CSxK@ '(_ . any)))) g$C$19879$CSxK@ g$t$12099$CSxK@)))) g$C$19880$CSxK@ g$V$19881$CSxK@))) g$t$12099$CSxK@ '((#(scheme-id mutable) . _) . any)))) g$C$19882$CSxK@ g$t$12097$CSxK@)))) g$C$19883$CSxK@ g$V$19884$CSxK@))) g$t$12097$CSxK@ '()))) g$C$19885$CSxK@ g$fields$12095$CSxK@)))))) (case-lambda ((g$V$19888$CSxK@) (g$V$19888$CSxK@ g$C$19887$CSxK@ g$fields$12093$CSxK@ '0))) uninitialized)))) (begin (set! g$get-mutators$11987$CSxK@ (case-lambda ((g$C$19921$CSxK@ g$foo$12072$CSxK@ g$fields$12073$CSxK@) ((case-lambda ((g$C$19919$CSxK@ g$gen-name$12074$CSxK@) (begin (set! g$gen-name$12074$CSxK@ (case-lambda ((g$C$19889$CSxK@ g$x$12092$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$19890$CSxK@) (symbol->string (case-lambda ((g$V$19891$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$19892$CSxK@) (symbol->string (case-lambda ((g$V$19893$CSxK@) (string-append (case-lambda ((g$V$19894$CSxK@) (string->symbol (case-lambda ((g$V$19895$CSxK@) (g$datum->syntax$10830$CSxK@ g$C$19889$CSxK@ g$foo$12072$CSxK@ g$V$19895$CSxK@))) g$V$19894$CSxK@))) g$V$19893$CSxK@ '"-" g$V$19891$CSxK@ '"-set!"))) g$V$19892$CSxK@))) g$foo$12072$CSxK@))) g$V$19890$CSxK@))) g$x$12092$CSxK@)))) ((case-lambda ((g$C$19918$CSxK@ g$f$12075$CSxK@) ((case-lambda ((g$C$19897$CSxK@ g$f$19896$CSxK@) (begin (set! g$f$12075$CSxK@ g$f$19896$CSxK@) (g$C$19897$CSxK@ g$f$12075$CSxK@)))) g$C$19918$CSxK@ (case-lambda ((g$C$19917$CSxK@ g$fields$12076$CSxK@) ((case-lambda ((g$C$19915$CSxK@ g$t$12077$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19916$CSxK@) ((case-lambda ((g$C$19914$CSxK@ g$ls/false$12078$CSxK@) (if g$ls/false$12078$CSxK@ (apply g$C$19914$CSxK@ (case-lambda ((g$C$19898$CSxK@) (g$C$19898$CSxK@ '()))) g$ls/false$12078$CSxK@) ((case-lambda ((g$C$19912$CSxK@ g$t$12079$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19913$CSxK@) ((case-lambda ((g$C$19911$CSxK@ g$ls/false$12080$CSxK@) (if g$ls/false$12080$CSxK@ (apply g$C$19911$CSxK@ (case-lambda ((g$C$19899$CSxK@ g$name$12081$CSxK@ g$accessor$12082$CSxK@ g$mutator$12083$CSxK@ g$rest$12084$CSxK@) (g$f$12075$CSxK@ (case-lambda ((g$V$19900$CSxK@) (cons g$C$19899$CSxK@ g$mutator$12083$CSxK@ g$V$19900$CSxK@))) g$rest$12084$CSxK@))) g$ls/false$12080$CSxK@) ((case-lambda ((g$C$19909$CSxK@ g$t$12085$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19910$CSxK@) ((case-lambda ((g$C$19908$CSxK@ g$ls/false$12086$CSxK@) (if g$ls/false$12086$CSxK@ (apply g$C$19908$CSxK@ (case-lambda ((g$C$19901$CSxK@ g$name$12087$CSxK@ g$rest$12088$CSxK@) (g$f$12075$CSxK@ (case-lambda ((g$V$19902$CSxK@) (g$gen-name$12074$CSxK@ (case-lambda ((g$V$19903$CSxK@) (cons g$C$19901$CSxK@ g$V$19903$CSxK@ g$V$19902$CSxK@))) g$name$12087$CSxK@))) g$rest$12088$CSxK@))) g$ls/false$12086$CSxK@) ((case-lambda ((g$C$19906$CSxK@ g$t$12089$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19907$CSxK@) ((case-lambda ((g$C$19905$CSxK@ g$ls/false$12090$CSxK@) (if g$ls/false$12090$CSxK@ (apply g$C$19905$CSxK@ (case-lambda ((g$C$19904$CSxK@ g$rest$12091$CSxK@) (g$f$12075$CSxK@ g$C$19904$CSxK@ g$rest$12091$CSxK@))) g$ls/false$12090$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19905$CSxK@ '#f '"invalid syntax" g$t$12089$CSxK@)))) g$C$19906$CSxK@ g$V$19907$CSxK@))) g$t$12089$CSxK@ '(_ . any)))) g$C$19908$CSxK@ g$t$12085$CSxK@)))) g$C$19909$CSxK@ g$V$19910$CSxK@))) g$t$12085$CSxK@ '((#(scheme-id mutable) any) . any)))) g$C$19911$CSxK@ g$t$12079$CSxK@)))) g$C$19912$CSxK@ g$V$19913$CSxK@))) g$t$12079$CSxK@ '((#(scheme-id mutable) any any any) . any)))) g$C$19914$CSxK@ g$t$12077$CSxK@)))) g$C$19915$CSxK@ g$V$19916$CSxK@))) g$t$12077$CSxK@ '()))) g$C$19917$CSxK@ g$fields$12076$CSxK@)))))) (case-lambda ((g$V$19920$CSxK@) (g$V$19920$CSxK@ g$C$19919$CSxK@ g$fields$12073$CSxK@))) uninitialized)))) g$C$19921$CSxK@ uninitialized)))) (begin (set! g$get-accessors$11988$CSxK@ (case-lambda ((g$C$19970$CSxK@ g$foo$12038$CSxK@ g$fields$12039$CSxK@) ((case-lambda ((g$C$19969$CSxK@ g$gen-name$12040$CSxK@) (begin (set! g$gen-name$12040$CSxK@ (case-lambda ((g$C$19922$CSxK@ g$x$12071$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$19923$CSxK@) (symbol->string (case-lambda ((g$V$19924$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$19925$CSxK@) (symbol->string (case-lambda ((g$V$19926$CSxK@) (string-append (case-lambda ((g$V$19927$CSxK@) (string->symbol (case-lambda ((g$V$19928$CSxK@) (g$datum->syntax$10830$CSxK@ g$C$19922$CSxK@ g$foo$12038$CSxK@ g$V$19928$CSxK@))) g$V$19927$CSxK@))) g$V$19926$CSxK@ '"-" g$V$19924$CSxK@))) g$V$19925$CSxK@))) g$foo$12038$CSxK@))) g$V$19923$CSxK@))) g$x$12071$CSxK@)))) (g$map$6713$CSxK@ g$C$19969$CSxK@ (case-lambda ((g$C$19968$CSxK@ g$field$12041$CSxK@) ((case-lambda ((g$C$19966$CSxK@ g$t$12042$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19967$CSxK@) ((case-lambda ((g$C$19963$CSxK@ g$ls/false$12043$CSxK@) ((case-lambda ((g$J$19965$CSxK@) (if g$ls/false$12043$CSxK@ (apply g$J$19965$CSxK@ (case-lambda ((g$C$19929$CSxK@ g$name$12044$CSxK@ g$accessor$12045$CSxK@ g$mutator$12046$CSxK@) (g$id?$10347$CSxK@ g$C$19929$CSxK@ g$accessor$12045$CSxK@))) g$ls/false$12043$CSxK@) (g$J$19965$CSxK@ '#f)))) (case-lambda ((g$T$19964$CSxK@) (if g$T$19964$CSxK@ (apply g$C$19963$CSxK@ (case-lambda ((g$C$19930$CSxK@ g$name$12047$CSxK@ g$accessor$12048$CSxK@ g$mutator$12049$CSxK@) (g$C$19930$CSxK@ g$accessor$12048$CSxK@))) g$ls/false$12043$CSxK@) ((case-lambda ((g$C$19961$CSxK@ g$t$12050$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19962$CSxK@) ((case-lambda ((g$C$19958$CSxK@ g$ls/false$12051$CSxK@) ((case-lambda ((g$J$19960$CSxK@) (if g$ls/false$12051$CSxK@ (apply g$J$19960$CSxK@ (case-lambda ((g$C$19931$CSxK@ g$name$12052$CSxK@ g$accessor$12053$CSxK@) (g$id?$10347$CSxK@ g$C$19931$CSxK@ g$accessor$12053$CSxK@))) g$ls/false$12051$CSxK@) (g$J$19960$CSxK@ '#f)))) (case-lambda ((g$T$19959$CSxK@) (if g$T$19959$CSxK@ (apply g$C$19958$CSxK@ (case-lambda ((g$C$19932$CSxK@ g$name$12054$CSxK@ g$accessor$12055$CSxK@) (g$C$19932$CSxK@ g$accessor$12055$CSxK@))) g$ls/false$12051$CSxK@) ((case-lambda ((g$C$19956$CSxK@ g$t$12056$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19957$CSxK@) ((case-lambda ((g$C$19953$CSxK@ g$ls/false$12057$CSxK@) ((case-lambda ((g$J$19955$CSxK@) (if g$ls/false$12057$CSxK@ (apply g$J$19955$CSxK@ (case-lambda ((g$C$19933$CSxK@ g$name$12058$CSxK@) (g$id?$10347$CSxK@ g$C$19933$CSxK@ g$name$12058$CSxK@))) g$ls/false$12057$CSxK@) (g$J$19955$CSxK@ '#f)))) (case-lambda ((g$T$19954$CSxK@) (if g$T$19954$CSxK@ (apply g$C$19953$CSxK@ (case-lambda ((g$C$19934$CSxK@ g$name$12059$CSxK@) (g$gen-name$12040$CSxK@ g$C$19934$CSxK@ g$name$12059$CSxK@))) g$ls/false$12057$CSxK@) ((case-lambda ((g$C$19951$CSxK@ g$t$12060$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19952$CSxK@) ((case-lambda ((g$C$19948$CSxK@ g$ls/false$12061$CSxK@) ((case-lambda ((g$J$19950$CSxK@) (if g$ls/false$12061$CSxK@ (apply g$J$19950$CSxK@ (case-lambda ((g$C$19935$CSxK@ g$name$12062$CSxK@) (g$id?$10347$CSxK@ g$C$19935$CSxK@ g$name$12062$CSxK@))) g$ls/false$12061$CSxK@) (g$J$19950$CSxK@ '#f)))) (case-lambda ((g$T$19949$CSxK@) (if g$T$19949$CSxK@ (apply g$C$19948$CSxK@ (case-lambda ((g$C$19936$CSxK@ g$name$12063$CSxK@) (g$gen-name$12040$CSxK@ g$C$19936$CSxK@ g$name$12063$CSxK@))) g$ls/false$12061$CSxK@) ((case-lambda ((g$C$19946$CSxK@ g$t$12064$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19947$CSxK@) ((case-lambda ((g$C$19943$CSxK@ g$ls/false$12065$CSxK@) ((case-lambda ((g$J$19945$CSxK@) (if g$ls/false$12065$CSxK@ (apply g$J$19945$CSxK@ (case-lambda ((g$C$19937$CSxK@ g$name$12066$CSxK@) (g$id?$10347$CSxK@ g$C$19937$CSxK@ g$name$12066$CSxK@))) g$ls/false$12065$CSxK@) (g$J$19945$CSxK@ '#f)))) (case-lambda ((g$T$19944$CSxK@) (if g$T$19944$CSxK@ (apply g$C$19943$CSxK@ (case-lambda ((g$C$19938$CSxK@ g$name$12067$CSxK@) (g$gen-name$12040$CSxK@ g$C$19938$CSxK@ g$name$12067$CSxK@))) g$ls/false$12065$CSxK@) ((case-lambda ((g$C$19941$CSxK@ g$t$12068$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$19942$CSxK@) ((case-lambda ((g$C$19940$CSxK@ g$ls/false$12069$CSxK@) (if g$ls/false$12069$CSxK@ (apply g$C$19940$CSxK@ (case-lambda ((g$C$19939$CSxK@ g$others$12070$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19939$CSxK@ '#f '"invalid field spec" g$field$12041$CSxK@))) g$ls/false$12069$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$19940$CSxK@ '#f '"invalid syntax" g$t$12068$CSxK@)))) g$C$19941$CSxK@ g$V$19942$CSxK@))) g$t$12068$CSxK@ 'any))) g$C$19943$CSxK@ g$t$12064$CSxK@))))))) g$C$19946$CSxK@ g$V$19947$CSxK@))) g$t$12064$CSxK@ 'any))) g$C$19948$CSxK@ g$t$12060$CSxK@))))))) g$C$19951$CSxK@ g$V$19952$CSxK@))) g$t$12060$CSxK@ '(#(scheme-id immutable) any)))) g$C$19953$CSxK@ g$t$12056$CSxK@))))))) g$C$19956$CSxK@ g$V$19957$CSxK@))) g$t$12056$CSxK@ '(#(scheme-id mutable) any)))) g$C$19958$CSxK@ g$t$12050$CSxK@))))))) g$C$19961$CSxK@ g$V$19962$CSxK@))) g$t$12050$CSxK@ '(#(scheme-id immutable) any any)))) g$C$19963$CSxK@ g$t$12042$CSxK@))))))) g$C$19966$CSxK@ g$V$19967$CSxK@))) g$t$12042$CSxK@ '(#(scheme-id mutable) any any any)))) g$C$19968$CSxK@ g$field$12041$CSxK@))) g$fields$12039$CSxK@)))) g$C$19970$CSxK@ uninitialized)))) (begin (set! g$enumerate$11989$CSxK@ (case-lambda ((g$C$19979$CSxK@ g$ls$12034$CSxK@) ((case-lambda ((g$C$19978$CSxK@ g$f$12035$CSxK@) ((case-lambda ((g$C$19972$CSxK@ g$f$19971$CSxK@) (begin (set! g$f$12035$CSxK@ g$f$19971$CSxK@) (g$C$19972$CSxK@ g$f$12035$CSxK@)))) g$C$19978$CSxK@ (case-lambda ((g$C$19973$CSxK@ g$ls$12036$CSxK@ g$i$12037$CSxK@) (null? (case-lambda ((g$T$19974$CSxK@) (if g$T$19974$CSxK@ (g$C$19973$CSxK@ '()) (+ (case-lambda ((g$V$19975$CSxK@) (cdr (case-lambda ((g$V$19976$CSxK@) (g$f$12035$CSxK@ (case-lambda ((g$V$19977$CSxK@) (cons g$C$19973$CSxK@ g$i$12037$CSxK@ g$V$19977$CSxK@))) g$V$19976$CSxK@ g$V$19975$CSxK@))) g$ls$12036$CSxK@))) g$i$12037$CSxK@ '1)))) g$ls$12036$CSxK@)))))) (case-lambda ((g$V$19980$CSxK@) (g$V$19980$CSxK@ g$C$19979$CSxK@ g$ls$12034$CSxK@ '0))) uninitialized)))) (begin (set! g$do-define-record$11990$CSxK@ (case-lambda ((g$C$20035$CSxK@ g$namespec$12014$CSxK@ g$clause*$12015$CSxK@) (g$get-record-name$11976$CSxK@ (case-lambda ((g$V$20036$CSxK@) ((case-lambda ((g$C$20033$CSxK@ g$foo$12016$CSxK@) (gensym (case-lambda ((g$V$20034$CSxK@) ((case-lambda ((g$C$20031$CSxK@ g$foo-rtd$12017$CSxK@) (gensym (case-lambda ((g$V$20032$CSxK@) ((case-lambda ((g$C$20029$CSxK@ g$foo-rcd$12018$CSxK@) (gensym (case-lambda ((g$V$20030$CSxK@) ((case-lambda ((g$C$20027$CSxK@ g$protocol$12019$CSxK@) (g$get-record-constructor-name$11977$CSxK@ (case-lambda ((g$V$20028$CSxK@) ((case-lambda ((g$C$20025$CSxK@ g$make-foo$12020$CSxK@) (g$get-fields$11985$CSxK@ (case-lambda ((g$V$20026$CSxK@) ((case-lambda ((g$C$20023$CSxK@ g$fields$12021$CSxK@) (g$enumerate$11989$CSxK@ (case-lambda ((g$V$20024$CSxK@) ((case-lambda ((g$C$20021$CSxK@ g$idx*$12022$CSxK@) (g$get-accessors$11988$CSxK@ (case-lambda ((g$V$20022$CSxK@) ((case-lambda ((g$C$20019$CSxK@ g$foo-x*$12023$CSxK@) (g$get-mutators$11987$CSxK@ (case-lambda ((g$V$20020$CSxK@) ((case-lambda ((g$C$20017$CSxK@ g$set-foo-x!*$12024$CSxK@) (g$get-mutator-indices$11986$CSxK@ (case-lambda ((g$V$20018$CSxK@) ((case-lambda ((g$C$20015$CSxK@ g$set-foo-idx*$12025$CSxK@) (g$get-record-predicate-name$11978$CSxK@ (case-lambda ((g$V$20016$CSxK@) ((case-lambda ((g$C$20012$CSxK@ g$foo?$12026$CSxK@) (g$parent-rtd-code$11981$CSxK@ (case-lambda ((g$V$20013$CSxK@) (g$foo-rtd-code$11980$CSxK@ (case-lambda ((g$V$20014$CSxK@) ((case-lambda ((g$C$20009$CSxK@ g$foo-rtd-code$12027$CSxK@) (g$parent-rcd-code$11982$CSxK@ (case-lambda ((g$V$20010$CSxK@) (g$foo-rcd-code$11983$CSxK@ (case-lambda ((g$V$20011$CSxK@) ((case-lambda ((g$C$20007$CSxK@ g$foo-rcd-code$12028$CSxK@) (g$get-protocol-code$11984$CSxK@ (case-lambda ((g$V$20008$CSxK@) ((case-lambda ((g$C$19985$CSxK@ g$protocol-code$12029$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19986$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$19987$CSxK@) (append (case-lambda ((g$V$19988$CSxK@) (list (case-lambda ((g$V$19989$CSxK@) (list (case-lambda ((g$V$19990$CSxK@) (cons (case-lambda ((g$V$19991$CSxK@) (list (case-lambda ((g$V$19992$CSxK@) (list (case-lambda ((g$V$19993$CSxK@) (cons (case-lambda ((g$V$19994$CSxK@) (list (case-lambda ((g$V$19995$CSxK@) (list (case-lambda ((g$V$19996$CSxK@) (list (case-lambda ((g$V$19997$CSxK@) (list (case-lambda ((g$V$19998$CSxK@) (cons (case-lambda ((g$V$19999$CSxK@) (list (case-lambda ((g$V$20000$CSxK@) (cons (case-lambda ((g$V$20001$CSxK@) (list (case-lambda ((g$V$20002$CSxK@) (cons (case-lambda ((g$V$20003$CSxK@) (list (case-lambda ((g$V$20004$CSxK@) (cons (case-lambda ((g$V$20005$CSxK@) (cons (case-lambda ((g$V$20006$CSxK@) (g$bless$10673$CSxK@ g$C$19985$CSxK@ g$V$20006$CSxK@))) 'begin g$V$20005$CSxK@))) g$V$20004$CSxK@ g$V$20003$CSxK@))) 'define g$foo-rtd$12017$CSxK@ g$foo-rtd-code$12027$CSxK@))) g$V$20002$CSxK@ g$V$20001$CSxK@))) 'define g$protocol$12019$CSxK@ g$protocol-code$12029$CSxK@))) g$V$20000$CSxK@ g$V$19999$CSxK@))) 'define g$foo-rcd$12018$CSxK@ g$foo-rcd-code$12028$CSxK@))) g$V$19998$CSxK@ g$V$19994$CSxK@))) 'define-syntax g$foo$12016$CSxK@ g$V$19997$CSxK@))) 'list ''$rtd g$V$19996$CSxK@ g$V$19995$CSxK@))) 'syntax g$foo-rtd$12017$CSxK@))) 'syntax g$foo-rcd$12018$CSxK@))) g$V$19993$CSxK@ g$V$19991$CSxK@))) 'define g$foo?$12026$CSxK@ g$V$19992$CSxK@))) 'record-predicate g$foo-rtd$12017$CSxK@))) g$V$19990$CSxK@ g$V$19988$CSxK@))) 'define g$make-foo$12020$CSxK@ g$V$19989$CSxK@))) 'record-constructor g$foo-rcd$12018$CSxK@))) g$V$19987$CSxK@ g$V$19986$CSxK@))) (case-lambda ((g$C$19981$CSxK@ g$foo-x$12030$CSxK@ g$idx$12031$CSxK@) (list (case-lambda ((g$V$19982$CSxK@) (list g$C$19981$CSxK@ 'define g$foo-x$12030$CSxK@ g$V$19982$CSxK@))) 'record-accessor g$foo-rtd$12017$CSxK@ g$idx$12031$CSxK@))) g$foo-x*$12023$CSxK@ g$idx*$12022$CSxK@))) (case-lambda ((g$C$19983$CSxK@ g$set-foo-x!$12032$CSxK@ g$idx$12033$CSxK@) (list (case-lambda ((g$V$19984$CSxK@) (list g$C$19983$CSxK@ 'define g$set-foo-x!$12032$CSxK@ g$V$19984$CSxK@))) 'record-mutator g$foo-rtd$12017$CSxK@ g$idx$12033$CSxK@))) g$set-foo-x!*$12024$CSxK@ g$set-foo-idx*$12025$CSxK@))) g$C$20007$CSxK@ g$V$20008$CSxK@))) g$clause*$12015$CSxK@))) g$C$20009$CSxK@ g$V$20011$CSxK@))) g$clause*$12015$CSxK@ g$foo-rtd$12017$CSxK@ g$protocol$12019$CSxK@ g$V$20010$CSxK@))) g$clause*$12015$CSxK@))) g$C$20012$CSxK@ g$V$20014$CSxK@))) g$foo$12016$CSxK@ g$clause*$12015$CSxK@ g$V$20013$CSxK@))) g$clause*$12015$CSxK@))) g$C$20015$CSxK@ g$V$20016$CSxK@))) g$namespec$12014$CSxK@))) g$C$20017$CSxK@ g$V$20018$CSxK@))) g$fields$12021$CSxK@))) g$C$20019$CSxK@ g$V$20020$CSxK@))) g$foo$12016$CSxK@ g$fields$12021$CSxK@))) g$C$20021$CSxK@ g$V$20022$CSxK@))) g$foo$12016$CSxK@ g$fields$12021$CSxK@))) g$C$20023$CSxK@ g$V$20024$CSxK@))) g$fields$12021$CSxK@))) g$C$20025$CSxK@ g$V$20026$CSxK@))) g$clause*$12015$CSxK@))) g$C$20027$CSxK@ g$V$20028$CSxK@))) g$namespec$12014$CSxK@))) g$C$20029$CSxK@ g$V$20030$CSxK@)))))) g$C$20031$CSxK@ g$V$20032$CSxK@)))))) g$C$20033$CSxK@ g$V$20034$CSxK@)))))) g$C$20035$CSxK@ g$V$20036$CSxK@))) g$namespec$12014$CSxK@)))) (begin (set! g$verify-clauses$11991$CSxK@ (case-lambda ((g$C$20069$CSxK@ g$x$11996$CSxK@ g$cls*$11997$CSxK@) ((case-lambda ((g$C$20066$CSxK@ g$valid-kwds$11998$CSxK@ g$free-id-member?$11999$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20067$CSxK@) (begin (set! g$valid-kwds$11998$CSxK@ g$V$20067$CSxK@) (begin (set! g$free-id-member?$11999$CSxK@ (case-lambda ((g$C$20039$CSxK@ g$x$12011$CSxK@ g$ls$12012$CSxK@) (pair? (case-lambda ((g$T$20040$CSxK@) (if g$T$20040$CSxK@ (car (case-lambda ((g$V$20041$CSxK@) (g$free-id=?$10351$CSxK@ (case-lambda ((g$V$20042$CSxK@) ((case-lambda ((g$C$20037$CSxK@ g$t$12013$CSxK@) (if g$t$12013$CSxK@ (g$C$20037$CSxK@ g$t$12013$CSxK@) (cdr (case-lambda ((g$V$20038$CSxK@) (g$free-id-member?$11999$CSxK@ g$C$20037$CSxK@ g$x$12011$CSxK@ g$V$20038$CSxK@))) g$ls$12012$CSxK@)))) g$C$20039$CSxK@ g$V$20042$CSxK@))) g$x$12011$CSxK@ g$V$20041$CSxK@))) g$ls$12012$CSxK@) (g$C$20039$CSxK@ '#f)))) g$ls$12012$CSxK@)))) ((case-lambda ((g$C$20065$CSxK@ g$f$12000$CSxK@) ((case-lambda ((g$C$20044$CSxK@ g$f$20043$CSxK@) (begin (set! g$f$12000$CSxK@ g$f$20043$CSxK@) (g$C$20044$CSxK@ g$f$12000$CSxK@)))) g$C$20065$CSxK@ (case-lambda ((g$C$20061$CSxK@ g$cls*$12001$CSxK@ g$seen*$12002$CSxK@) (null? (case-lambda ((g$V$20062$CSxK@) (not (case-lambda ((g$T$20063$CSxK@) (if g$T$20063$CSxK@ (car (case-lambda ((g$V$20064$CSxK@) ((case-lambda ((g$C$20059$CSxK@ g$t$12003$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20060$CSxK@) ((case-lambda ((g$C$20058$CSxK@ g$ls/false$12004$CSxK@) (if g$ls/false$12004$CSxK@ (apply g$C$20058$CSxK@ (case-lambda ((g$C$20047$CSxK@ g$kwd$12005$CSxK@ g$rest$12006$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$20048$CSxK@) (not (case-lambda ((g$V$20049$CSxK@) ((case-lambda ((g$C$20045$CSxK@ g$t$12007$CSxK@) (if g$t$12007$CSxK@ (g$C$20045$CSxK@ g$t$12007$CSxK@) (g$free-id-member?$11999$CSxK@ (case-lambda ((g$V$20046$CSxK@) (not g$C$20045$CSxK@ g$V$20046$CSxK@))) g$kwd$12005$CSxK@ g$valid-kwds$11998$CSxK@)))) (case-lambda ((g$T$20050$CSxK@) (if g$T$20050$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20047$CSxK@ '#f '"not a valid define-record-type keyword" g$kwd$12005$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$20051$CSxK@) (if g$T$20051$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20047$CSxK@ '#f '"duplicate use of keyword " g$x$11996$CSxK@ g$kwd$12005$CSxK@) (cons (case-lambda ((g$V$20052$CSxK@) (cdr (case-lambda ((g$V$20053$CSxK@) (g$f$12000$CSxK@ g$C$20047$CSxK@ g$V$20053$CSxK@ g$V$20052$CSxK@))) g$cls*$12001$CSxK@))) g$kwd$12005$CSxK@ g$seen*$12002$CSxK@)))) g$kwd$12005$CSxK@ g$seen*$12002$CSxK@)))) g$V$20049$CSxK@))) g$V$20048$CSxK@))) g$kwd$12005$CSxK@))) g$ls/false$12004$CSxK@) ((case-lambda ((g$C$20056$CSxK@ g$t$12008$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20057$CSxK@) ((case-lambda ((g$C$20055$CSxK@ g$ls/false$12009$CSxK@) (if g$ls/false$12009$CSxK@ (apply g$C$20055$CSxK@ (case-lambda ((g$C$20054$CSxK@ g$cls$12010$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20054$CSxK@ '#f '"malformed define-record-type clause" g$cls$12010$CSxK@))) g$ls/false$12009$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20055$CSxK@ '#f '"invalid syntax" g$t$12008$CSxK@)))) g$C$20056$CSxK@ g$V$20057$CSxK@))) g$t$12008$CSxK@ 'any))) g$C$20058$CSxK@ g$t$12003$CSxK@)))) g$C$20059$CSxK@ g$V$20060$CSxK@))) g$t$12003$CSxK@ '(any . any)))) g$C$20061$CSxK@ g$V$20064$CSxK@))) g$cls*$12001$CSxK@) (void g$C$20061$CSxK@)))) g$V$20062$CSxK@))) g$cls*$12001$CSxK@)))))) (case-lambda ((g$V$20068$CSxK@) (g$V$20068$CSxK@ g$C$20066$CSxK@ g$cls*$11997$CSxK@ '()))) uninitialized))))) g$bless$10673$CSxK@ '(fields parent parent-rtd protocol sealed opaque nongenerative)))) g$C$20069$CSxK@ uninitialized uninitialized)))) ((case-lambda ((g$C$20073$CSxK@ g$t$11992$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20074$CSxK@) ((case-lambda ((g$C$20072$CSxK@ g$ls/false$11993$CSxK@) (if g$ls/false$11993$CSxK@ (apply g$C$20072$CSxK@ (case-lambda ((g$C$20070$CSxK@ g$namespec$11994$CSxK@ g$clause*$11995$CSxK@) (g$verify-clauses$11991$CSxK@ (case-lambda (g$IGNORE$20071$CSxK@ (g$do-define-record$11990$CSxK@ g$C$20070$CSxK@ g$namespec$11994$CSxK@ g$clause*$11995$CSxK@))) g$x$11974$CSxK@ g$clause*$11995$CSxK@))) g$ls/false$11993$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20072$CSxK@ '#f '"invalid syntax" g$t$11992$CSxK@)))) g$C$20073$CSxK@ g$V$20074$CSxK@))) g$t$11992$CSxK@ '(_ any . each-any)))) g$C$20075$CSxK@ g$x$11974$CSxK@)))))))))))))))))))) g$C$20076$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$define-record-type-macro$10704$CSxK@))) (g$define-condition-type-macro$10705$CSxK@ g$define-condition-type-macro$14247$CSxK@ ((case-lambda ((g$C$22772$CSxK@) (g$C$22772$CSxK@ (case-lambda ((g$C$20118$CSxK@ g$x$12230$CSxK@) ((case-lambda ((g$C$20117$CSxK@ g$mkname$12231$CSxK@) (begin (set! g$mkname$12231$CSxK@ (case-lambda ((g$C$20077$CSxK@ g$name$12254$CSxK@ g$suffix$12255$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$20078$CSxK@) (symbol->string (case-lambda ((g$V$20079$CSxK@) (string-append (case-lambda ((g$V$20080$CSxK@) (string->symbol (case-lambda ((g$V$20081$CSxK@) (g$datum->syntax$10830$CSxK@ g$C$20077$CSxK@ g$name$12254$CSxK@ g$V$20081$CSxK@))) g$V$20080$CSxK@))) g$V$20079$CSxK@ g$suffix$12255$CSxK@))) g$V$20078$CSxK@))) g$name$12254$CSxK@)))) ((case-lambda ((g$C$20115$CSxK@ g$t$12232$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20116$CSxK@) ((case-lambda ((g$C$20112$CSxK@ g$ls/false$12233$CSxK@) ((case-lambda ((g$J$20114$CSxK@) (if g$ls/false$12233$CSxK@ (apply g$J$20114$CSxK@ (case-lambda ((g$C$20082$CSxK@ g$ctxt$12234$CSxK@ g$name$12235$CSxK@ g$super$12236$CSxK@ g$constructor$12237$CSxK@ g$predicate$12238$CSxK@ g$field*$12239$CSxK@ g$accessor*$12240$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$20083$CSxK@) (if g$T$20083$CSxK@ (g$id?$10347$CSxK@ (case-lambda ((g$T$20084$CSxK@) (if g$T$20084$CSxK@ (g$id?$10347$CSxK@ (case-lambda ((g$T$20085$CSxK@) (if g$T$20085$CSxK@ (g$id?$10347$CSxK@ (case-lambda ((g$T$20086$CSxK@) (if g$T$20086$CSxK@ (g$for-all$6711$CSxK@ (case-lambda ((g$T$20087$CSxK@) (if g$T$20087$CSxK@ (g$for-all$6711$CSxK@ g$C$20082$CSxK@ g$id?$10347$CSxK@ g$accessor*$12240$CSxK@) (g$C$20082$CSxK@ '#f)))) g$id?$10347$CSxK@ g$field*$12239$CSxK@) (g$C$20082$CSxK@ '#f)))) g$predicate$12238$CSxK@) (g$C$20082$CSxK@ '#f)))) g$constructor$12237$CSxK@) (g$C$20082$CSxK@ '#f)))) g$super$12236$CSxK@) (g$C$20082$CSxK@ '#f)))) g$name$12235$CSxK@))) g$ls/false$12233$CSxK@) (g$J$20114$CSxK@ '#f)))) (case-lambda ((g$T$20113$CSxK@) (if g$T$20113$CSxK@ (apply g$C$20112$CSxK@ (case-lambda ((g$C$20110$CSxK@ g$ctxt$12241$CSxK@ g$name$12242$CSxK@ g$super$12243$CSxK@ g$constructor$12244$CSxK@ g$predicate$12245$CSxK@ g$field*$12246$CSxK@ g$accessor*$12247$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20111$CSxK@) ((case-lambda ((g$C$20092$CSxK@ g$aux-accessor*$12248$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20093$CSxK@) (list (case-lambda ((g$V$20094$CSxK@) (list (case-lambda ((g$V$20095$CSxK@) (list (case-lambda ((g$V$20096$CSxK@) (cons (case-lambda ((g$V$20097$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20098$CSxK@) (cons (case-lambda ((g$V$20099$CSxK@) (cons (case-lambda ((g$V$20100$CSxK@) (list (case-lambda ((g$V$20101$CSxK@) (cons (case-lambda ((g$V$20102$CSxK@) (gensym (case-lambda ((g$V$20103$CSxK@) (list (case-lambda ((g$V$20104$CSxK@) (cons (case-lambda ((g$V$20105$CSxK@) (cons (case-lambda ((g$V$20106$CSxK@) (cons (case-lambda ((g$V$20107$CSxK@) (cons (case-lambda ((g$V$20108$CSxK@) (g$bless$10673$CSxK@ g$C$20092$CSxK@ g$V$20108$CSxK@))) 'begin g$V$20107$CSxK@))) g$V$20106$CSxK@ g$V$20097$CSxK@))) 'define-record-type g$V$20105$CSxK@))) g$V$20104$CSxK@ g$V$20102$CSxK@))) g$name$12242$CSxK@ g$constructor$12244$CSxK@ g$V$20103$CSxK@)))))) g$V$20101$CSxK@ g$V$20100$CSxK@))) 'parent g$super$12243$CSxK@))) g$V$20099$CSxK@ '((nongenerative) (sealed #f) (opaque #f))))) 'fields g$V$20098$CSxK@))) (case-lambda ((g$C$20088$CSxK@ g$field$12249$CSxK@ g$aux$12250$CSxK@) (list g$C$20088$CSxK@ 'immutable g$field$12249$CSxK@ g$aux$12250$CSxK@))) g$field*$12246$CSxK@ g$aux-accessor*$12248$CSxK@))) g$V$20096$CSxK@ g$V$20093$CSxK@))) 'define g$predicate$12245$CSxK@ g$V$20095$CSxK@))) 'condition-predicate g$V$20094$CSxK@))) 'record-type-descriptor g$name$12242$CSxK@))) (case-lambda ((g$C$20089$CSxK@ g$accessor$12251$CSxK@ g$aux$12252$CSxK@) (list (case-lambda ((g$V$20090$CSxK@) (list (case-lambda ((g$V$20091$CSxK@) (list g$C$20089$CSxK@ 'define g$accessor$12251$CSxK@ g$V$20091$CSxK@))) 'condition-accessor g$V$20090$CSxK@ g$aux$12252$CSxK@))) 'record-type-descriptor g$name$12242$CSxK@))) g$accessor*$12247$CSxK@ g$aux-accessor*$12248$CSxK@))) g$C$20110$CSxK@ g$V$20111$CSxK@))) (case-lambda ((g$C$20109$CSxK@ g$x$12253$CSxK@) (gensym g$C$20109$CSxK@))) g$accessor*$12247$CSxK@))) g$ls/false$12233$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20112$CSxK@ '#f '"invalid syntax" g$t$12232$CSxK@))))))) g$C$20115$CSxK@ g$V$20116$CSxK@))) g$t$12232$CSxK@ '(any any any any any . #(each (any any)))))) g$C$20117$CSxK@ g$x$12230$CSxK@)))) g$C$20118$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$define-condition-type-macro$10705$CSxK@))) (g$incorrect-usage-macro$10706$CSxK@ g$incorrect-usage-macro$14248$CSxK@ ((case-lambda ((g$C$22773$CSxK@) (g$C$22773$CSxK@ (case-lambda ((g$C$20119$CSxK@ g$e$12256$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20119$CSxK@ '#f '"incorrect usage of auxiliary keyword" g$e$12256$CSxK@)))))) (library-letrec*-identity 'g$incorrect-usage-macro$10706$CSxK@))) (g$parameterize-macro$10707$CSxK@ g$parameterize-macro$14249$CSxK@ ((case-lambda ((g$C$22774$CSxK@) (g$C$22774$CSxK@ (case-lambda ((g$C$20157$CSxK@ g$e$12257$CSxK@) ((case-lambda ((g$C$20155$CSxK@ g$t$12258$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20156$CSxK@) ((case-lambda ((g$C$20154$CSxK@ g$ls/false$12259$CSxK@) (if g$ls/false$12259$CSxK@ (apply g$C$20154$CSxK@ (case-lambda ((g$C$20120$CSxK@ g$b$12260$CSxK@ g$b*$12261$CSxK@) (cons (case-lambda ((g$V$20121$CSxK@) (cons (case-lambda ((g$V$20122$CSxK@) (cons (case-lambda ((g$V$20123$CSxK@) (g$bless$10673$CSxK@ g$C$20120$CSxK@ g$V$20123$CSxK@))) 'let g$V$20122$CSxK@))) '() g$V$20121$CSxK@))) g$b$12260$CSxK@ g$b*$12261$CSxK@))) g$ls/false$12259$CSxK@) ((case-lambda ((g$C$20152$CSxK@ g$t$12262$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20153$CSxK@) ((case-lambda ((g$C$20151$CSxK@ g$ls/false$12263$CSxK@) (if g$ls/false$12263$CSxK@ (apply g$C$20151$CSxK@ (case-lambda ((g$C$20148$CSxK@ g$olhs*$12264$CSxK@ g$orhs*$12265$CSxK@ g$b$12266$CSxK@ g$b*$12267$CSxK@) (g$generate-temporaries$10818$CSxK@ (case-lambda ((g$V$20149$CSxK@) (g$generate-temporaries$10818$CSxK@ (case-lambda ((g$V$20150$CSxK@) ((case-lambda ((g$C$20131$CSxK@ g$lhs*$12268$CSxK@ g$rhs*$12269$CSxK@) (append (case-lambda ((g$V$20132$CSxK@) (cons (case-lambda ((g$V$20133$CSxK@) (cons (case-lambda ((g$V$20134$CSxK@) (cons (case-lambda ((g$V$20135$CSxK@) (cons (case-lambda ((g$V$20136$CSxK@) (cons (case-lambda ((g$V$20137$CSxK@) (cons (case-lambda ((g$V$20138$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20139$CSxK@) (cons (case-lambda ((g$V$20140$CSxK@) (cons (case-lambda ((g$V$20141$CSxK@) (list (case-lambda ((g$V$20142$CSxK@) (list (case-lambda ((g$V$20143$CSxK@) (list (case-lambda ((g$V$20144$CSxK@) (append (case-lambda ((g$V$20145$CSxK@) (list (case-lambda ((g$V$20146$CSxK@) (cons (case-lambda ((g$V$20147$CSxK@) (g$bless$10673$CSxK@ g$C$20131$CSxK@ g$V$20147$CSxK@))) g$V$20146$CSxK@ g$V$20132$CSxK@))) 'lambda g$V$20145$CSxK@ g$V$20144$CSxK@))) g$lhs*$12268$CSxK@ g$rhs*$12269$CSxK@))) 'let g$V$20143$CSxK@ g$V$20138$CSxK@))) g$V$20142$CSxK@))) 'swap g$V$20141$CSxK@))) 'lambda g$V$20140$CSxK@))) '() g$V$20139$CSxK@))) (case-lambda ((g$C$20124$CSxK@ g$lhs$12270$CSxK@ g$rhs$12271$CSxK@) (cons (case-lambda ((g$V$20125$CSxK@) (cons (case-lambda ((g$V$20126$CSxK@) (list (case-lambda ((g$V$20127$CSxK@) (list (case-lambda ((g$V$20128$CSxK@) (list (case-lambda ((g$V$20129$CSxK@) (list (case-lambda ((g$V$20130$CSxK@) (list g$C$20124$CSxK@ 'let g$V$20130$CSxK@ g$V$20127$CSxK@ g$V$20126$CSxK@))) g$V$20129$CSxK@))) 't g$V$20128$CSxK@))) g$lhs$12270$CSxK@))) g$lhs$12270$CSxK@ g$rhs$12271$CSxK@))) 'set! g$V$20125$CSxK@))) g$rhs$12271$CSxK@ '(t)))) g$lhs*$12268$CSxK@ g$rhs*$12269$CSxK@))) 'dynamic-wind g$V$20137$CSxK@))) 'swap g$V$20136$CSxK@))) g$V$20135$CSxK@ '(swap)))) 'lambda g$V$20134$CSxK@))) '() g$V$20133$CSxK@))) g$b$12266$CSxK@ g$b*$12267$CSxK@))) g$olhs*$12264$CSxK@ g$orhs*$12265$CSxK@))) g$C$20148$CSxK@ g$V$20150$CSxK@ g$V$20149$CSxK@))) g$olhs*$12264$CSxK@))) g$orhs*$12265$CSxK@))) g$ls/false$12263$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20151$CSxK@ '#f '"invalid syntax" g$t$12262$CSxK@)))) g$C$20152$CSxK@ g$V$20153$CSxK@))) g$t$12262$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$20154$CSxK@ g$t$12258$CSxK@)))) g$C$20155$CSxK@ g$V$20156$CSxK@))) g$t$12258$CSxK@ '(_ () any . each-any)))) g$C$20157$CSxK@ g$e$12257$CSxK@)))))) (library-letrec*-identity 'g$parameterize-macro$10707$CSxK@))) (g$foreign-call-transformer$10708$CSxK@ g$foreign-call-transformer$14250$CSxK@ ((case-lambda ((g$C$22775$CSxK@) (g$C$22775$CSxK@ (case-lambda ((g$C$20165$CSxK@ g$e$12272$CSxK@ g$r$12273$CSxK@ g$mr$12274$CSxK@) ((case-lambda ((g$C$20163$CSxK@ g$t$12275$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20164$CSxK@) ((case-lambda ((g$C$20162$CSxK@ g$ls/false$12276$CSxK@) (if g$ls/false$12276$CSxK@ (apply g$C$20162$CSxK@ (case-lambda ((g$C$20158$CSxK@ g$name$12277$CSxK@ g$arg*$12278$CSxK@) (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$20159$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$20160$CSxK@) (cons (case-lambda ((g$V$20161$CSxK@) (cons g$C$20158$CSxK@ 'foreign-call g$V$20161$CSxK@))) g$V$20160$CSxK@ g$V$20159$CSxK@))) g$name$12277$CSxK@ g$r$12273$CSxK@ g$mr$12274$CSxK@))) g$arg*$12278$CSxK@ g$r$12273$CSxK@ g$mr$12274$CSxK@))) g$ls/false$12276$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20162$CSxK@ '#f '"invalid syntax" g$t$12275$CSxK@)))) g$C$20163$CSxK@ g$V$20164$CSxK@))) g$t$12275$CSxK@ '(_ any . each-any)))) g$C$20165$CSxK@ g$e$12272$CSxK@)))))) (library-letrec*-identity 'g$foreign-call-transformer$10708$CSxK@))) (g$convert-pattern$10709$CSxK@ g$convert-pattern$14251$CSxK@ ((case-lambda ((g$C$22776$CSxK@) (g$C$22776$CSxK@ (case-lambda ((g$C$20258$CSxK@ g$pattern$12279$CSxK@ g$keys$12280$CSxK@) ((case-lambda ((g$C$20257$CSxK@ g$cvt*$12281$CSxK@ g$cvt$12282$CSxK@) (begin (set! g$cvt*$12281$CSxK@ (case-lambda ((g$C$20175$CSxK@ g$p*$12361$CSxK@ g$n$12362$CSxK@ g$ids$12363$CSxK@) (null? (case-lambda ((g$T$20176$CSxK@) (if g$T$20176$CSxK@ (values g$C$20175$CSxK@ '() g$ids$12363$CSxK@) (call-with-values g$C$20175$CSxK@ (case-lambda ((g$C$20166$CSxK@) (cdr (case-lambda ((g$V$20167$CSxK@) (g$cvt*$12281$CSxK@ g$C$20166$CSxK@ g$V$20167$CSxK@ g$n$12362$CSxK@ g$ids$12363$CSxK@))) g$p*$12361$CSxK@))) (case-lambda ((g$C$20174$CSxK@ g$y$12366$CSxK@ g$ids$12367$CSxK@) ((case-lambda ((g$C$20173$CSxK@ g$ids$12368$CSxK@ g$y$12369$CSxK@) (call-with-values g$C$20173$CSxK@ (case-lambda ((g$C$20168$CSxK@) (car (case-lambda ((g$V$20169$CSxK@) (g$cvt$12282$CSxK@ g$C$20168$CSxK@ g$V$20169$CSxK@ g$n$12362$CSxK@ g$ids$12368$CSxK@))) g$p*$12361$CSxK@))) (case-lambda ((g$C$20172$CSxK@ g$x$12372$CSxK@ g$ids$12373$CSxK@) ((case-lambda ((g$C$20170$CSxK@ g$ids$12374$CSxK@ g$x$12375$CSxK@) (cons (case-lambda ((g$V$20171$CSxK@) (values g$C$20170$CSxK@ g$V$20171$CSxK@ g$ids$12374$CSxK@))) g$x$12375$CSxK@ g$y$12369$CSxK@))) g$C$20172$CSxK@ g$ids$12373$CSxK@ g$x$12372$CSxK@)))))) g$C$20174$CSxK@ g$ids$12367$CSxK@ g$y$12366$CSxK@))))))) g$p*$12361$CSxK@)))) (begin (set! g$cvt$12282$CSxK@ (case-lambda ((g$C$20256$CSxK@ g$p$12283$CSxK@ g$n$12284$CSxK@ g$ids$12285$CSxK@) ((case-lambda ((g$C$20254$CSxK@ g$t$12286$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20255$CSxK@) ((case-lambda ((g$C$20251$CSxK@ g$ls/false$12287$CSxK@) ((case-lambda ((g$J$20253$CSxK@) (if g$ls/false$12287$CSxK@ (apply g$J$20253$CSxK@ (case-lambda ((g$C$20177$CSxK@ g$id$12288$CSxK@) (g$id?$10347$CSxK@ g$C$20177$CSxK@ g$id$12288$CSxK@))) g$ls/false$12287$CSxK@) (g$J$20253$CSxK@ '#f)))) (case-lambda ((g$T$20252$CSxK@) (if g$T$20252$CSxK@ (apply g$C$20251$CSxK@ (case-lambda ((g$C$20178$CSxK@ g$id$12289$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$20179$CSxK@) (if g$T$20179$CSxK@ (vector (case-lambda ((g$V$20180$CSxK@) (values g$C$20178$CSxK@ g$V$20180$CSxK@ g$ids$12285$CSxK@))) 'free-id g$p$12283$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$20181$CSxK@) (g$free-id=?$10351$CSxK@ (case-lambda ((g$T$20182$CSxK@) (if g$T$20182$CSxK@ (values g$C$20178$CSxK@ '_ g$ids$12285$CSxK@) (cons (case-lambda ((g$V$20183$CSxK@) (cons (case-lambda ((g$V$20184$CSxK@) (values g$C$20178$CSxK@ 'any g$V$20184$CSxK@))) g$V$20183$CSxK@ g$ids$12285$CSxK@))) g$p$12283$CSxK@ g$n$12284$CSxK@)))) g$p$12283$CSxK@ g$V$20181$CSxK@))) '_)))) g$p$12283$CSxK@ g$keys$12280$CSxK@))) g$ls/false$12287$CSxK@) ((case-lambda ((g$C$20249$CSxK@ g$t$12290$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20250$CSxK@) ((case-lambda ((g$C$20246$CSxK@ g$ls/false$12291$CSxK@) ((case-lambda ((g$J$20248$CSxK@) (if g$ls/false$12291$CSxK@ (apply g$J$20248$CSxK@ (case-lambda ((g$C$20185$CSxK@ g$p$12292$CSxK@ g$dots$12293$CSxK@) (g$ellipsis?$10711$CSxK@ g$C$20185$CSxK@ g$dots$12293$CSxK@))) g$ls/false$12291$CSxK@) (g$J$20248$CSxK@ '#f)))) (case-lambda ((g$T$20247$CSxK@) (if g$T$20247$CSxK@ (apply g$C$20246$CSxK@ (case-lambda ((g$C$20193$CSxK@ g$p$12294$CSxK@ g$dots$12295$CSxK@) (call-with-values g$C$20193$CSxK@ (case-lambda ((g$C$20186$CSxK@) (+ (case-lambda ((g$V$20187$CSxK@) (g$cvt$12282$CSxK@ g$C$20186$CSxK@ g$p$12294$CSxK@ g$V$20187$CSxK@ g$ids$12285$CSxK@))) g$n$12284$CSxK@ '1))) (case-lambda ((g$C$20192$CSxK@ g$p$12298$CSxK@ g$ids$12299$CSxK@) ((case-lambda ((g$C$20188$CSxK@ g$ids$12300$CSxK@ g$p$12301$CSxK@) ((case-lambda ((g$J$20190$CSxK@) (eq? (case-lambda ((g$T$20191$CSxK@) (if g$T$20191$CSxK@ (g$J$20190$CSxK@ 'each-any) (vector g$J$20190$CSxK@ 'each g$p$12301$CSxK@)))) g$p$12301$CSxK@ 'any))) (case-lambda ((g$V$20189$CSxK@) (values g$C$20188$CSxK@ g$V$20189$CSxK@ g$ids$12300$CSxK@)))))) g$C$20192$CSxK@ g$ids$12299$CSxK@ g$p$12298$CSxK@)))))) g$ls/false$12291$CSxK@) ((case-lambda ((g$C$20244$CSxK@ g$t$12302$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20245$CSxK@) ((case-lambda ((g$C$20241$CSxK@ g$ls/false$12303$CSxK@) ((case-lambda ((g$J$20243$CSxK@) (if g$ls/false$12303$CSxK@ (apply g$J$20243$CSxK@ (case-lambda ((g$C$20194$CSxK@ g$x$12304$CSxK@ g$dots$12305$CSxK@ g$ys$12306$CSxK@ g$z$12307$CSxK@) (g$ellipsis?$10711$CSxK@ g$C$20194$CSxK@ g$dots$12305$CSxK@))) g$ls/false$12303$CSxK@) (g$J$20243$CSxK@ '#f)))) (case-lambda ((g$T$20242$CSxK@) (if g$T$20242$CSxK@ (apply g$C$20241$CSxK@ (case-lambda ((g$C$20207$CSxK@ g$x$12308$CSxK@ g$dots$12309$CSxK@ g$ys$12310$CSxK@ g$z$12311$CSxK@) (call-with-values g$C$20207$CSxK@ (case-lambda ((g$C$20195$CSxK@) (g$cvt$12282$CSxK@ g$C$20195$CSxK@ g$z$12311$CSxK@ g$n$12284$CSxK@ g$ids$12285$CSxK@))) (case-lambda ((g$C$20206$CSxK@ g$z$12314$CSxK@ g$ids$12315$CSxK@) ((case-lambda ((g$C$20205$CSxK@ g$ids$12316$CSxK@ g$z$12317$CSxK@) (call-with-values g$C$20205$CSxK@ (case-lambda ((g$C$20196$CSxK@) (g$cvt*$12281$CSxK@ g$C$20196$CSxK@ g$ys$12310$CSxK@ g$n$12284$CSxK@ g$ids$12316$CSxK@))) (case-lambda ((g$C$20204$CSxK@ g$ys$12320$CSxK@ g$ids$12321$CSxK@) ((case-lambda ((g$C$20203$CSxK@ g$ids$12322$CSxK@ g$ys$12323$CSxK@) (call-with-values g$C$20203$CSxK@ (case-lambda ((g$C$20197$CSxK@) (+ (case-lambda ((g$V$20198$CSxK@) (g$cvt$12282$CSxK@ g$C$20197$CSxK@ g$x$12308$CSxK@ g$V$20198$CSxK@ g$ids$12322$CSxK@))) g$n$12284$CSxK@ '1))) (case-lambda ((g$C$20202$CSxK@ g$x$12326$CSxK@ g$ids$12327$CSxK@) ((case-lambda ((g$C$20199$CSxK@ g$ids$12328$CSxK@ g$x$12329$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$20200$CSxK@) (vector (case-lambda ((g$V$20201$CSxK@) (values g$C$20199$CSxK@ g$V$20201$CSxK@ g$ids$12328$CSxK@))) 'each+ g$x$12329$CSxK@ g$V$20200$CSxK@ g$z$12317$CSxK@))) g$ys$12323$CSxK@))) g$C$20202$CSxK@ g$ids$12327$CSxK@ g$x$12326$CSxK@)))))) g$C$20204$CSxK@ g$ids$12321$CSxK@ g$ys$12320$CSxK@)))))) g$C$20206$CSxK@ g$ids$12315$CSxK@ g$z$12314$CSxK@)))))) g$ls/false$12303$CSxK@) ((case-lambda ((g$C$20239$CSxK@ g$t$12330$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20240$CSxK@) ((case-lambda ((g$C$20238$CSxK@ g$ls/false$12331$CSxK@) (if g$ls/false$12331$CSxK@ (apply g$C$20238$CSxK@ (case-lambda ((g$C$20215$CSxK@ g$x$12332$CSxK@ g$y$12333$CSxK@) (call-with-values g$C$20215$CSxK@ (case-lambda ((g$C$20208$CSxK@) (g$cvt$12282$CSxK@ g$C$20208$CSxK@ g$y$12333$CSxK@ g$n$12284$CSxK@ g$ids$12285$CSxK@))) (case-lambda ((g$C$20214$CSxK@ g$y$12336$CSxK@ g$ids$12337$CSxK@) ((case-lambda ((g$C$20213$CSxK@ g$ids$12338$CSxK@ g$y$12339$CSxK@) (call-with-values g$C$20213$CSxK@ (case-lambda ((g$C$20209$CSxK@) (g$cvt$12282$CSxK@ g$C$20209$CSxK@ g$x$12332$CSxK@ g$n$12284$CSxK@ g$ids$12338$CSxK@))) (case-lambda ((g$C$20212$CSxK@ g$x$12342$CSxK@ g$ids$12343$CSxK@) ((case-lambda ((g$C$20210$CSxK@ g$ids$12344$CSxK@ g$x$12345$CSxK@) (cons (case-lambda ((g$V$20211$CSxK@) (values g$C$20210$CSxK@ g$V$20211$CSxK@ g$ids$12344$CSxK@))) g$x$12345$CSxK@ g$y$12339$CSxK@))) g$C$20212$CSxK@ g$ids$12343$CSxK@ g$x$12342$CSxK@)))))) g$C$20214$CSxK@ g$ids$12337$CSxK@ g$y$12336$CSxK@)))))) g$ls/false$12331$CSxK@) ((case-lambda ((g$C$20236$CSxK@ g$t$12346$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20237$CSxK@) ((case-lambda ((g$C$20235$CSxK@ g$ls/false$12347$CSxK@) (if g$ls/false$12347$CSxK@ (apply g$C$20235$CSxK@ (case-lambda ((g$C$20216$CSxK@) (values g$C$20216$CSxK@ '() g$ids$12285$CSxK@))) g$ls/false$12347$CSxK@) ((case-lambda ((g$C$20233$CSxK@ g$t$12348$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20234$CSxK@) ((case-lambda ((g$C$20230$CSxK@ g$ls/false$12349$CSxK@) ((case-lambda ((g$J$20232$CSxK@) (if g$ls/false$12349$CSxK@ (apply g$J$20232$CSxK@ (case-lambda ((g$C$20217$CSxK@ g$p$12350$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$V$20218$CSxK@) (not g$C$20217$CSxK@ g$V$20218$CSxK@))) g$p$12350$CSxK@))) g$ls/false$12349$CSxK@) (g$J$20232$CSxK@ '#f)))) (case-lambda ((g$T$20231$CSxK@) (if g$T$20231$CSxK@ (apply g$C$20230$CSxK@ (case-lambda ((g$C$20223$CSxK@ g$p$12351$CSxK@) (call-with-values g$C$20223$CSxK@ (case-lambda ((g$C$20219$CSxK@) (g$cvt$12282$CSxK@ g$C$20219$CSxK@ g$p$12351$CSxK@ g$n$12284$CSxK@ g$ids$12285$CSxK@))) (case-lambda ((g$C$20222$CSxK@ g$p$12354$CSxK@ g$ids$12355$CSxK@) ((case-lambda ((g$C$20220$CSxK@ g$ids$12356$CSxK@ g$p$12357$CSxK@) (vector (case-lambda ((g$V$20221$CSxK@) (values g$C$20220$CSxK@ g$V$20221$CSxK@ g$ids$12356$CSxK@))) 'vector g$p$12357$CSxK@))) g$C$20222$CSxK@ g$ids$12355$CSxK@ g$p$12354$CSxK@)))))) g$ls/false$12349$CSxK@) ((case-lambda ((g$C$20228$CSxK@ g$t$12358$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20229$CSxK@) ((case-lambda ((g$C$20227$CSxK@ g$ls/false$12359$CSxK@) (if g$ls/false$12359$CSxK@ (apply g$C$20227$CSxK@ (case-lambda ((g$C$20224$CSxK@ g$datum$12360$CSxK@) (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$20225$CSxK@) (vector (case-lambda ((g$V$20226$CSxK@) (values g$C$20224$CSxK@ g$V$20226$CSxK@ g$ids$12285$CSxK@))) 'atom g$V$20225$CSxK@))) g$datum$12360$CSxK@))) g$ls/false$12359$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20227$CSxK@ '#f '"invalid syntax" g$t$12358$CSxK@)))) g$C$20228$CSxK@ g$V$20229$CSxK@))) g$t$12358$CSxK@ 'any))) g$C$20230$CSxK@ g$t$12348$CSxK@))))))) g$C$20233$CSxK@ g$V$20234$CSxK@))) g$t$12348$CSxK@ '#(vector each-any)))) g$C$20235$CSxK@ g$t$12346$CSxK@)))) g$C$20236$CSxK@ g$V$20237$CSxK@))) g$t$12346$CSxK@ '()))) g$C$20238$CSxK@ g$t$12330$CSxK@)))) g$C$20239$CSxK@ g$V$20240$CSxK@))) g$t$12330$CSxK@ '(any . any)))) g$C$20241$CSxK@ g$t$12302$CSxK@))))))) g$C$20244$CSxK@ g$V$20245$CSxK@))) g$t$12302$CSxK@ '(any any . #(each+ any () any))))) g$C$20246$CSxK@ g$t$12290$CSxK@))))))) g$C$20249$CSxK@ g$V$20250$CSxK@))) g$t$12290$CSxK@ '(any any)))) g$C$20251$CSxK@ g$t$12286$CSxK@))))))) g$C$20254$CSxK@ g$V$20255$CSxK@))) g$t$12286$CSxK@ 'any))) g$C$20256$CSxK@ g$p$12283$CSxK@)))) (g$cvt$12282$CSxK@ g$C$20257$CSxK@ g$pattern$12279$CSxK@ '0 '()))))) g$C$20258$CSxK@ uninitialized uninitialized)))))) (library-letrec*-identity 'g$convert-pattern$10709$CSxK@))) (g$syntax-dispatch$10710$CSxK@ g$syntax-dispatch$14252$CSxK@ ((case-lambda ((g$C$22777$CSxK@) ((case-lambda ((g$C$20427$CSxK@) ((case-lambda ((g$C$20426$CSxK@ g$stx^$12376$CSxK@ g$match-each$12377$CSxK@ g$match-each+$12378$CSxK@ g$match-each-any$12379$CSxK@ g$match-empty$12380$CSxK@ g$combine$12381$CSxK@ g$match*$12382$CSxK@ g$match$12383$CSxK@) (begin (set! g$stx^$12376$CSxK@ (case-lambda ((g$C$20259$CSxK@ g$e$12486$CSxK@ g$m*$12487$CSxK@ g$s*$12488$CSxK@ g$ae*$12489$CSxK@) ((case-lambda ((g$J$20261$CSxK@) (null? (case-lambda ((g$T$20262$CSxK@) (if g$T$20262$CSxK@ (null? (case-lambda ((g$T$20263$CSxK@) (if g$T$20263$CSxK@ (null? g$J$20261$CSxK@ g$ae*$12489$CSxK@) (g$J$20261$CSxK@ '#f)))) g$s*$12488$CSxK@) (g$J$20261$CSxK@ '#f)))) g$m*$12487$CSxK@))) (case-lambda ((g$T$20260$CSxK@) (if g$T$20260$CSxK@ (g$C$20259$CSxK@ g$e$12486$CSxK@) (g$mkstx$10335$CSxK@ g$C$20259$CSxK@ g$e$12486$CSxK@ g$m*$12487$CSxK@ g$s*$12488$CSxK@ g$ae*$12489$CSxK@)))))))) (begin (set! g$match-each$12377$CSxK@ (case-lambda ((g$C$20272$CSxK@ g$e$12470$CSxK@ g$p$12471$CSxK@ g$m*$12472$CSxK@ g$s*$12473$CSxK@ g$ae*$12474$CSxK@) (pair? (case-lambda ((g$T$20273$CSxK@) (if g$T$20273$CSxK@ (car (case-lambda ((g$V$20274$CSxK@) (g$match$12383$CSxK@ (case-lambda ((g$V$20275$CSxK@) ((case-lambda ((g$C$20265$CSxK@ g$first$12475$CSxK@) (if g$first$12475$CSxK@ (cdr (case-lambda ((g$V$20266$CSxK@) (g$match-each$12377$CSxK@ (case-lambda ((g$V$20267$CSxK@) ((case-lambda ((g$C$20264$CSxK@ g$rest$12476$CSxK@) (if g$rest$12476$CSxK@ (cons g$C$20264$CSxK@ g$first$12475$CSxK@ g$rest$12476$CSxK@) (g$C$20264$CSxK@ '#f)))) g$C$20265$CSxK@ g$V$20267$CSxK@))) g$V$20266$CSxK@ g$p$12471$CSxK@ g$m*$12472$CSxK@ g$s*$12473$CSxK@ g$ae*$12474$CSxK@))) g$e$12470$CSxK@) (g$C$20265$CSxK@ '#f)))) g$C$20272$CSxK@ g$V$20275$CSxK@))) g$V$20274$CSxK@ g$p$12471$CSxK@ g$m*$12472$CSxK@ g$s*$12473$CSxK@ g$ae*$12474$CSxK@ '()))) g$e$12470$CSxK@) (null? (case-lambda ((g$T$20276$CSxK@) (if g$T$20276$CSxK@ (g$C$20272$CSxK@ '()) (g$stx?$10319$CSxK@ (case-lambda ((g$T$20277$CSxK@) (if g$T$20277$CSxK@ (g$top-marked?$10281$CSxK@ (case-lambda ((g$V$20278$CSxK@) (not (case-lambda ((g$T$20279$CSxK@) (if g$T$20279$CSxK@ (call-with-values g$C$20272$CSxK@ (case-lambda ((g$C$20268$CSxK@) (g$join-wraps$10334$CSxK@ g$C$20268$CSxK@ g$m*$12472$CSxK@ g$s*$12473$CSxK@ g$ae*$12474$CSxK@ g$e$12470$CSxK@))) (case-lambda ((g$C$20271$CSxK@ g$m*$12480$CSxK@ g$s*$12481$CSxK@ g$ae*$12482$CSxK@) ((case-lambda ((g$C$20269$CSxK@ g$ae*$12483$CSxK@ g$s*$12484$CSxK@ g$m*$12485$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$20270$CSxK@) (g$match-each$12377$CSxK@ g$C$20269$CSxK@ g$V$20270$CSxK@ g$p$12471$CSxK@ g$m*$12485$CSxK@ g$s*$12484$CSxK@ g$ae*$12483$CSxK@))) g$e$12470$CSxK@))) g$C$20271$CSxK@ g$ae*$12482$CSxK@ g$s*$12481$CSxK@ g$m*$12480$CSxK@)))) (g$C$20272$CSxK@ '#f)))) g$V$20278$CSxK@))) g$m*$12472$CSxK@) (annotation? (case-lambda ((g$T$20280$CSxK@) (if g$T$20280$CSxK@ (annotation-expression (case-lambda ((g$V$20281$CSxK@) (g$match-each$12377$CSxK@ g$C$20272$CSxK@ g$V$20281$CSxK@ g$p$12471$CSxK@ g$m*$12472$CSxK@ g$s*$12473$CSxK@ g$ae*$12474$CSxK@))) g$e$12470$CSxK@) (g$C$20272$CSxK@ '#f)))) g$e$12470$CSxK@)))) g$e$12470$CSxK@)))) g$e$12470$CSxK@)))) g$e$12470$CSxK@)))) (begin (set! g$match-each+$12378$CSxK@ (case-lambda ((g$C$20310$CSxK@ g$e$12438$CSxK@ g$x-pat$12439$CSxK@ g$y-pat$12440$CSxK@ g$z-pat$12441$CSxK@ g$m*$12442$CSxK@ g$s*$12443$CSxK@ g$ae*$12444$CSxK@ g$r$12445$CSxK@) ((case-lambda ((g$C$20309$CSxK@ g$f$12446$CSxK@) ((case-lambda ((g$C$20283$CSxK@ g$f$20282$CSxK@) (begin (set! g$f$12446$CSxK@ g$f$20282$CSxK@) (g$C$20283$CSxK@ g$f$12446$CSxK@)))) g$C$20309$CSxK@ (case-lambda ((g$C$20301$CSxK@ g$e$12447$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@) (pair? (case-lambda ((g$T$20302$CSxK@) (if g$T$20302$CSxK@ (call-with-values g$C$20301$CSxK@ (case-lambda ((g$C$20284$CSxK@) (cdr (case-lambda ((g$V$20285$CSxK@) (g$f$12446$CSxK@ g$C$20284$CSxK@ g$V$20285$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@))) g$e$12447$CSxK@))) (case-lambda ((g$C$20296$CSxK@ g$xr*$12454$CSxK@ g$y-pat$12455$CSxK@ g$r$12456$CSxK@) ((case-lambda ((g$C$20288$CSxK@ g$r$12457$CSxK@ g$y-pat$12458$CSxK@ g$xr*$12459$CSxK@) (if g$r$12457$CSxK@ (null? (case-lambda ((g$T$20289$CSxK@) (if g$T$20289$CSxK@ (car (case-lambda ((g$V$20290$CSxK@) (g$match$12383$CSxK@ (case-lambda ((g$V$20291$CSxK@) ((case-lambda ((g$C$20286$CSxK@ g$xr$12460$CSxK@) (if g$xr$12460$CSxK@ (cons (case-lambda ((g$V$20287$CSxK@) (values g$C$20286$CSxK@ g$V$20287$CSxK@ g$y-pat$12458$CSxK@ g$r$12457$CSxK@))) g$xr$12460$CSxK@ g$xr*$12459$CSxK@) (values g$C$20286$CSxK@ '#f '#f '#f)))) g$C$20288$CSxK@ g$V$20291$CSxK@))) g$V$20290$CSxK@ g$x-pat$12439$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@ '()))) g$e$12447$CSxK@) (car (case-lambda ((g$V$20292$CSxK@) (car (case-lambda ((g$V$20293$CSxK@) (g$match$12383$CSxK@ (case-lambda ((g$V$20294$CSxK@) (cdr (case-lambda ((g$V$20295$CSxK@) (values g$C$20288$CSxK@ '() g$V$20295$CSxK@ g$V$20294$CSxK@))) g$y-pat$12458$CSxK@))) g$V$20293$CSxK@ g$V$20292$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@ g$r$12457$CSxK@))) g$e$12447$CSxK@))) g$y-pat$12458$CSxK@)))) g$y-pat$12458$CSxK@) (values g$C$20288$CSxK@ '#f '#f '#f)))) g$C$20296$CSxK@ g$r$12456$CSxK@ g$y-pat$12455$CSxK@ g$xr*$12454$CSxK@)))) (g$stx?$10319$CSxK@ (case-lambda ((g$T$20303$CSxK@) (if g$T$20303$CSxK@ (g$top-marked?$10281$CSxK@ (case-lambda ((g$T$20304$CSxK@) (if g$T$20304$CSxK@ (g$match$12383$CSxK@ (case-lambda ((g$V$20305$CSxK@) (values g$C$20301$CSxK@ '() g$y-pat$12440$CSxK@ g$V$20305$CSxK@))) g$e$12447$CSxK@ g$z-pat$12441$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@ g$r$12445$CSxK@) (call-with-values g$C$20301$CSxK@ (case-lambda ((g$C$20297$CSxK@) (g$join-wraps$10334$CSxK@ g$C$20297$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@ g$e$12447$CSxK@))) (case-lambda ((g$C$20300$CSxK@ g$m*$12464$CSxK@ g$s*$12465$CSxK@ g$ae*$12466$CSxK@) ((case-lambda ((g$C$20298$CSxK@ g$ae*$12467$CSxK@ g$s*$12468$CSxK@ g$m*$12469$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$20299$CSxK@) (g$f$12446$CSxK@ g$C$20298$CSxK@ g$V$20299$CSxK@ g$m*$12469$CSxK@ g$s*$12468$CSxK@ g$ae*$12467$CSxK@))) g$e$12447$CSxK@))) g$C$20300$CSxK@ g$ae*$12466$CSxK@ g$s*$12465$CSxK@ g$m*$12464$CSxK@))))))) g$m*$12448$CSxK@) (annotation? (case-lambda ((g$T$20306$CSxK@) (if g$T$20306$CSxK@ (annotation-expression (case-lambda ((g$V$20307$CSxK@) (g$f$12446$CSxK@ g$C$20301$CSxK@ g$V$20307$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@))) g$e$12447$CSxK@) (g$match$12383$CSxK@ (case-lambda ((g$V$20308$CSxK@) (values g$C$20301$CSxK@ '() g$y-pat$12440$CSxK@ g$V$20308$CSxK@))) g$e$12447$CSxK@ g$z-pat$12441$CSxK@ g$m*$12448$CSxK@ g$s*$12449$CSxK@ g$ae*$12450$CSxK@ g$r$12445$CSxK@)))) g$e$12447$CSxK@)))) g$e$12447$CSxK@)))) g$e$12447$CSxK@)))))) (case-lambda ((g$V$20311$CSxK@) (g$V$20311$CSxK@ g$C$20310$CSxK@ g$e$12438$CSxK@ g$m*$12442$CSxK@ g$s*$12443$CSxK@ g$ae*$12444$CSxK@))) uninitialized)))) (begin (set! g$match-each-any$12379$CSxK@ (case-lambda ((g$C$20319$CSxK@ g$e$12424$CSxK@ g$m*$12425$CSxK@ g$s*$12426$CSxK@ g$ae*$12427$CSxK@) (pair? (case-lambda ((g$T$20320$CSxK@) (if g$T$20320$CSxK@ (cdr (case-lambda ((g$V$20321$CSxK@) (g$match-each-any$12379$CSxK@ (case-lambda ((g$V$20322$CSxK@) ((case-lambda ((g$C$20312$CSxK@ g$l$12428$CSxK@) (if g$l$12428$CSxK@ (car (case-lambda ((g$V$20313$CSxK@) (g$stx^$12376$CSxK@ (case-lambda ((g$V$20314$CSxK@) (cons g$C$20312$CSxK@ g$V$20314$CSxK@ g$l$12428$CSxK@))) g$V$20313$CSxK@ g$m*$12425$CSxK@ g$s*$12426$CSxK@ g$ae*$12427$CSxK@))) g$e$12424$CSxK@) (g$C$20312$CSxK@ '#f)))) g$C$20319$CSxK@ g$V$20322$CSxK@))) g$V$20321$CSxK@ g$m*$12425$CSxK@ g$s*$12426$CSxK@ g$ae*$12427$CSxK@))) g$e$12424$CSxK@) (null? (case-lambda ((g$T$20323$CSxK@) (if g$T$20323$CSxK@ (g$C$20319$CSxK@ '()) (g$stx?$10319$CSxK@ (case-lambda ((g$T$20324$CSxK@) (if g$T$20324$CSxK@ (g$top-marked?$10281$CSxK@ (case-lambda ((g$V$20325$CSxK@) (not (case-lambda ((g$T$20326$CSxK@) (if g$T$20326$CSxK@ (call-with-values g$C$20319$CSxK@ (case-lambda ((g$C$20315$CSxK@) (g$join-wraps$10334$CSxK@ g$C$20315$CSxK@ g$m*$12425$CSxK@ g$s*$12426$CSxK@ g$ae*$12427$CSxK@ g$e$12424$CSxK@))) (case-lambda ((g$C$20318$CSxK@ g$m*$12432$CSxK@ g$s*$12433$CSxK@ g$ae*$12434$CSxK@) ((case-lambda ((g$C$20316$CSxK@ g$ae*$12435$CSxK@ g$s*$12436$CSxK@ g$m*$12437$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$20317$CSxK@) (g$match-each-any$12379$CSxK@ g$C$20316$CSxK@ g$V$20317$CSxK@ g$m*$12437$CSxK@ g$s*$12436$CSxK@ g$ae*$12435$CSxK@))) g$e$12424$CSxK@))) g$C$20318$CSxK@ g$ae*$12434$CSxK@ g$s*$12433$CSxK@ g$m*$12432$CSxK@)))) (g$C$20319$CSxK@ '#f)))) g$V$20325$CSxK@))) g$m*$12425$CSxK@) (annotation? (case-lambda ((g$T$20327$CSxK@) (if g$T$20327$CSxK@ (annotation-expression (case-lambda ((g$V$20328$CSxK@) (g$match-each-any$12379$CSxK@ g$C$20319$CSxK@ g$V$20328$CSxK@ g$m*$12425$CSxK@ g$s*$12426$CSxK@ g$ae*$12427$CSxK@))) g$e$12424$CSxK@) (g$C$20319$CSxK@ '#f)))) g$e$12424$CSxK@)))) g$e$12424$CSxK@)))) g$e$12424$CSxK@)))) g$e$12424$CSxK@)))) (begin (set! g$match-empty$12380$CSxK@ (case-lambda ((g$C$20343$CSxK@ g$p$12421$CSxK@ g$r$12422$CSxK@) (null? (case-lambda ((g$T$20344$CSxK@) (if g$T$20344$CSxK@ (g$C$20343$CSxK@ g$r$12422$CSxK@) (eq? (case-lambda ((g$T$20345$CSxK@) (if g$T$20345$CSxK@ (g$C$20343$CSxK@ g$r$12422$CSxK@) (eq? (case-lambda ((g$T$20346$CSxK@) (if g$T$20346$CSxK@ (cons g$C$20343$CSxK@ '() g$r$12422$CSxK@) (pair? (case-lambda ((g$T$20347$CSxK@) (if g$T$20347$CSxK@ (cdr (case-lambda ((g$V$20348$CSxK@) (g$match-empty$12380$CSxK@ (case-lambda ((g$V$20349$CSxK@) (car (case-lambda ((g$V$20350$CSxK@) (g$match-empty$12380$CSxK@ g$C$20343$CSxK@ g$V$20350$CSxK@ g$V$20349$CSxK@))) g$p$12421$CSxK@))) g$V$20348$CSxK@ g$r$12422$CSxK@))) g$p$12421$CSxK@) (eq? (case-lambda ((g$T$20351$CSxK@) (if g$T$20351$CSxK@ (cons g$C$20343$CSxK@ '() g$r$12422$CSxK@) (vector-ref (case-lambda ((g$V$20352$CSxK@) ((case-lambda ((g$C$20329$CSxK@ g$t$12423$CSxK@) (eqv? (case-lambda ((g$T$20330$CSxK@) (if g$T$20330$CSxK@ (vector-ref (case-lambda ((g$V$20331$CSxK@) (g$match-empty$12380$CSxK@ g$C$20329$CSxK@ g$V$20331$CSxK@ g$r$12422$CSxK@))) g$p$12421$CSxK@ '1) (eqv? (case-lambda ((g$T$20332$CSxK@) (if g$T$20332$CSxK@ (vector-ref (case-lambda ((g$V$20333$CSxK@) (g$match-empty$12380$CSxK@ (case-lambda ((g$V$20334$CSxK@) (vector-ref (case-lambda ((g$V$20335$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$20336$CSxK@) (g$match-empty$12380$CSxK@ (case-lambda ((g$V$20337$CSxK@) (vector-ref (case-lambda ((g$V$20338$CSxK@) (g$match-empty$12380$CSxK@ g$C$20329$CSxK@ g$V$20338$CSxK@ g$V$20337$CSxK@))) g$p$12421$CSxK@ '1))) g$V$20336$CSxK@ g$V$20334$CSxK@))) g$V$20335$CSxK@))) g$p$12421$CSxK@ '2))) g$V$20333$CSxK@ g$r$12422$CSxK@))) g$p$12421$CSxK@ '3) (g$memv$6706$CSxK@ (case-lambda ((g$T$20339$CSxK@) (if g$T$20339$CSxK@ (g$C$20329$CSxK@ g$r$12422$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$20340$CSxK@) (if g$T$20340$CSxK@ (g$C$20329$CSxK@ g$r$12422$CSxK@) (eqv? (case-lambda ((g$T$20341$CSxK@) (if g$T$20341$CSxK@ (vector-ref (case-lambda ((g$V$20342$CSxK@) (g$match-empty$12380$CSxK@ g$C$20329$CSxK@ g$V$20342$CSxK@ g$r$12422$CSxK@))) g$p$12421$CSxK@ '1) (g$assertion-violation$7672$CSxK@ g$C$20329$CSxK@ 'syntax-dispatch '"invalid pattern" g$p$12421$CSxK@)))) g$t$12423$CSxK@ 'vector)))) g$t$12423$CSxK@ '(scheme-id atom))))) g$t$12423$CSxK@ '(free-id atom))))) g$t$12423$CSxK@ 'each+)))) g$t$12423$CSxK@ 'each))) g$C$20343$CSxK@ g$V$20352$CSxK@))) g$p$12421$CSxK@ '0)))) g$p$12421$CSxK@ 'each-any)))) g$p$12421$CSxK@)))) g$p$12421$CSxK@ 'any)))) g$p$12421$CSxK@ '_)))) g$p$12421$CSxK@)))) (begin (set! g$combine$12381$CSxK@ (case-lambda ((g$C$20353$CSxK@ g$r*$12419$CSxK@ g$r$12420$CSxK@) (car (case-lambda ((g$V$20354$CSxK@) (null? (case-lambda ((g$T$20355$CSxK@) (if g$T$20355$CSxK@ (g$C$20353$CSxK@ g$r$12420$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20356$CSxK@) (g$combine$12381$CSxK@ (case-lambda ((g$V$20357$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20358$CSxK@) (cons g$C$20353$CSxK@ g$V$20358$CSxK@ g$V$20357$CSxK@))) car g$r*$12419$CSxK@))) g$V$20356$CSxK@ g$r$12420$CSxK@))) cdr g$r*$12419$CSxK@)))) g$V$20354$CSxK@))) g$r*$12419$CSxK@)))) (begin (set! g$match*$12382$CSxK@ (case-lambda ((g$C$20398$CSxK@ g$e$12401$CSxK@ g$p$12402$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@ g$r$12406$CSxK@) (null? (case-lambda ((g$T$20399$CSxK@) (if g$T$20399$CSxK@ (null? (case-lambda ((g$T$20400$CSxK@) (if g$T$20400$CSxK@ (g$C$20398$CSxK@ g$r$12406$CSxK@) (g$C$20398$CSxK@ '#f)))) g$e$12401$CSxK@) (pair? (case-lambda ((g$T$20401$CSxK@) (if g$T$20401$CSxK@ (pair? (case-lambda ((g$T$20402$CSxK@) (if g$T$20402$CSxK@ (cdr (case-lambda ((g$V$20403$CSxK@) (cdr (case-lambda ((g$V$20404$CSxK@) (g$match$12383$CSxK@ (case-lambda ((g$V$20405$CSxK@) (car (case-lambda ((g$V$20406$CSxK@) (car (case-lambda ((g$V$20407$CSxK@) (g$match$12383$CSxK@ g$C$20398$CSxK@ g$V$20407$CSxK@ g$V$20406$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@ g$V$20405$CSxK@))) g$e$12401$CSxK@))) g$p$12402$CSxK@))) g$V$20404$CSxK@ g$V$20403$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@ g$r$12406$CSxK@))) g$e$12401$CSxK@))) g$p$12402$CSxK@) (g$C$20398$CSxK@ '#f)))) g$e$12401$CSxK@) (eq? (case-lambda ((g$T$20408$CSxK@) (if g$T$20408$CSxK@ (g$match-each-any$12379$CSxK@ (case-lambda ((g$V$20409$CSxK@) ((case-lambda ((g$C$20359$CSxK@ g$l$12407$CSxK@) (if g$l$12407$CSxK@ (cons g$C$20359$CSxK@ g$l$12407$CSxK@ g$r$12406$CSxK@) (g$C$20359$CSxK@ '#f)))) g$C$20398$CSxK@ g$V$20409$CSxK@))) g$e$12401$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@) (vector-ref (case-lambda ((g$V$20410$CSxK@) ((case-lambda ((g$C$20370$CSxK@ g$t$12408$CSxK@) (eqv? (case-lambda ((g$T$20371$CSxK@) (if g$T$20371$CSxK@ (null? (case-lambda ((g$T$20372$CSxK@) (if g$T$20372$CSxK@ (vector-ref (case-lambda ((g$V$20373$CSxK@) (g$match-empty$12380$CSxK@ g$C$20370$CSxK@ g$V$20373$CSxK@ g$r$12406$CSxK@))) g$p$12402$CSxK@ '1) (vector-ref (case-lambda ((g$V$20374$CSxK@) (g$match-each$12377$CSxK@ (case-lambda ((g$V$20375$CSxK@) ((case-lambda ((g$C$20360$CSxK@ g$r*$12409$CSxK@) (if g$r*$12409$CSxK@ (g$combine$12381$CSxK@ g$C$20360$CSxK@ g$r*$12409$CSxK@ g$r$12406$CSxK@) (g$C$20360$CSxK@ '#f)))) g$C$20370$CSxK@ g$V$20375$CSxK@))) g$e$12401$CSxK@ g$V$20374$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@))) g$p$12402$CSxK@ '1)))) g$e$12401$CSxK@) (eqv? (case-lambda ((g$T$20376$CSxK@) (if g$T$20376$CSxK@ (g$symbol?$7384$CSxK@ (case-lambda ((g$T$20377$CSxK@) (if g$T$20377$CSxK@ (g$top-marked?$10281$CSxK@ (case-lambda ((g$T$20378$CSxK@) (if g$T$20378$CSxK@ (vector-ref (case-lambda ((g$V$20379$CSxK@) (g$stx^$12376$CSxK@ (case-lambda ((g$V$20380$CSxK@) (g$free-id=?$10351$CSxK@ (case-lambda ((g$T$20381$CSxK@) (if g$T$20381$CSxK@ (g$C$20370$CSxK@ g$r$12406$CSxK@) (g$C$20370$CSxK@ '#f)))) g$V$20380$CSxK@ g$V$20379$CSxK@))) g$e$12401$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@))) g$p$12402$CSxK@ '1) (g$C$20370$CSxK@ '#f)))) g$m*$12403$CSxK@) (g$C$20370$CSxK@ '#f)))) g$e$12401$CSxK@) (eqv? (case-lambda ((g$T$20382$CSxK@) (if g$T$20382$CSxK@ (g$symbol?$7384$CSxK@ (case-lambda ((g$T$20383$CSxK@) (if g$T$20383$CSxK@ (g$top-marked?$10281$CSxK@ (case-lambda ((g$T$20384$CSxK@) (if g$T$20384$CSxK@ (vector-ref (case-lambda ((g$V$20385$CSxK@) (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$20386$CSxK@) (g$stx^$12376$CSxK@ (case-lambda ((g$V$20387$CSxK@) (g$free-id=?$10351$CSxK@ (case-lambda ((g$T$20388$CSxK@) (if g$T$20388$CSxK@ (g$C$20370$CSxK@ g$r$12406$CSxK@) (g$C$20370$CSxK@ '#f)))) g$V$20387$CSxK@ g$V$20386$CSxK@))) g$e$12401$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@))) g$V$20385$CSxK@))) g$p$12402$CSxK@ '1) (g$C$20370$CSxK@ '#f)))) g$m*$12403$CSxK@) (g$C$20370$CSxK@ '#f)))) g$e$12401$CSxK@) (eqv? (case-lambda ((g$T$20389$CSxK@) (if g$T$20389$CSxK@ (call-with-values g$C$20370$CSxK@ (case-lambda ((g$C$20361$CSxK@) (vector-ref (case-lambda ((g$V$20362$CSxK@) (vector-ref (case-lambda ((g$V$20363$CSxK@) (vector-ref (case-lambda ((g$V$20364$CSxK@) (g$match-each+$12378$CSxK@ g$C$20361$CSxK@ g$e$12401$CSxK@ g$V$20364$CSxK@ g$V$20363$CSxK@ g$V$20362$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@ g$r$12406$CSxK@))) g$p$12402$CSxK@ '1))) g$p$12402$CSxK@ '2))) g$p$12402$CSxK@ '3))) (case-lambda ((g$C$20369$CSxK@ g$xr*$12413$CSxK@ g$y-pat$12414$CSxK@ g$r$12415$CSxK@) ((case-lambda ((g$C$20365$CSxK@ g$r$12416$CSxK@ g$y-pat$12417$CSxK@ g$xr*$12418$CSxK@) (if g$r$12416$CSxK@ (null? (case-lambda ((g$T$20366$CSxK@) (if g$T$20366$CSxK@ (null? (case-lambda ((g$T$20367$CSxK@) (if g$T$20367$CSxK@ (vector-ref (case-lambda ((g$V$20368$CSxK@) (g$match-empty$12380$CSxK@ g$C$20365$CSxK@ g$V$20368$CSxK@ g$r$12416$CSxK@))) g$p$12402$CSxK@ '1) (g$combine$12381$CSxK@ g$C$20365$CSxK@ g$xr*$12418$CSxK@ g$r$12416$CSxK@)))) g$xr*$12418$CSxK@) (g$C$20365$CSxK@ '#f)))) g$y-pat$12417$CSxK@) (g$C$20365$CSxK@ '#f)))) g$C$20369$CSxK@ g$r$12415$CSxK@ g$y-pat$12414$CSxK@ g$xr*$12413$CSxK@)))) (eqv? (case-lambda ((g$T$20390$CSxK@) (if g$T$20390$CSxK@ (g$strip$10357$CSxK@ (case-lambda ((g$V$20391$CSxK@) (vector-ref (case-lambda ((g$V$20392$CSxK@) (equal? (case-lambda ((g$T$20393$CSxK@) (if g$T$20393$CSxK@ (g$C$20370$CSxK@ g$r$12406$CSxK@) (g$C$20370$CSxK@ '#f)))) g$V$20392$CSxK@ g$V$20391$CSxK@))) g$p$12402$CSxK@ '1))) g$e$12401$CSxK@ g$m*$12403$CSxK@) (eqv? (case-lambda ((g$T$20394$CSxK@) (if g$T$20394$CSxK@ (g$vector?$7382$CSxK@ (case-lambda ((g$T$20395$CSxK@) (if g$T$20395$CSxK@ (vector-ref (case-lambda ((g$V$20396$CSxK@) (vector->list (case-lambda ((g$V$20397$CSxK@) (g$match$12383$CSxK@ g$C$20370$CSxK@ g$V$20397$CSxK@ g$V$20396$CSxK@ g$m*$12403$CSxK@ g$s*$12404$CSxK@ g$ae*$12405$CSxK@ g$r$12406$CSxK@))) g$e$12401$CSxK@))) g$p$12402$CSxK@ '1) (g$C$20370$CSxK@ '#f)))) g$e$12401$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$20370$CSxK@ 'syntax-dispatch '"invalid pattern" g$p$12402$CSxK@)))) g$t$12408$CSxK@ 'vector)))) g$t$12408$CSxK@ 'atom)))) g$t$12408$CSxK@ 'each+)))) g$t$12408$CSxK@ 'scheme-id)))) g$t$12408$CSxK@ 'free-id)))) g$t$12408$CSxK@ 'each))) g$C$20398$CSxK@ g$V$20410$CSxK@))) g$p$12402$CSxK@ '0)))) g$p$12402$CSxK@ 'each-any)))) g$p$12402$CSxK@)))) g$p$12402$CSxK@)))) (begin (set! g$match$12383$CSxK@ (case-lambda ((g$C$20415$CSxK@ g$e$12386$CSxK@ g$p$12387$CSxK@ g$m*$12388$CSxK@ g$s*$12389$CSxK@ g$ae*$12390$CSxK@ g$r$12391$CSxK@) (not (case-lambda ((g$T$20416$CSxK@) (if g$T$20416$CSxK@ (g$C$20415$CSxK@ '#f) (eq? (case-lambda ((g$T$20417$CSxK@) (if g$T$20417$CSxK@ (g$C$20415$CSxK@ g$r$12391$CSxK@) (eq? (case-lambda ((g$T$20418$CSxK@) (if g$T$20418$CSxK@ (g$stx^$12376$CSxK@ (case-lambda ((g$V$20419$CSxK@) (cons g$C$20415$CSxK@ g$V$20419$CSxK@ g$r$12391$CSxK@))) g$e$12386$CSxK@ g$m*$12388$CSxK@ g$s*$12389$CSxK@ g$ae*$12390$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$20420$CSxK@) (if g$T$20420$CSxK@ (g$top-marked?$10281$CSxK@ (case-lambda ((g$V$20421$CSxK@) (not (case-lambda ((g$T$20422$CSxK@) (if g$T$20422$CSxK@ (call-with-values g$C$20415$CSxK@ (case-lambda ((g$C$20411$CSxK@) (g$join-wraps$10334$CSxK@ g$C$20411$CSxK@ g$m*$12388$CSxK@ g$s*$12389$CSxK@ g$ae*$12390$CSxK@ g$e$12386$CSxK@))) (case-lambda ((g$C$20414$CSxK@ g$m*$12395$CSxK@ g$s*$12396$CSxK@ g$ae*$12397$CSxK@) ((case-lambda ((g$C$20412$CSxK@ g$ae*$12398$CSxK@ g$s*$12399$CSxK@ g$m*$12400$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$20413$CSxK@) (g$match$12383$CSxK@ g$C$20412$CSxK@ g$V$20413$CSxK@ g$p$12387$CSxK@ g$m*$12400$CSxK@ g$s*$12399$CSxK@ g$ae*$12398$CSxK@ g$r$12391$CSxK@))) g$e$12386$CSxK@))) g$C$20414$CSxK@ g$ae*$12397$CSxK@ g$s*$12396$CSxK@ g$m*$12395$CSxK@)))) (g$C$20415$CSxK@ '#f)))) g$V$20421$CSxK@))) g$m*$12388$CSxK@) (annotation? (case-lambda ((g$T$20423$CSxK@) (if g$T$20423$CSxK@ (annotation-expression (case-lambda ((g$V$20424$CSxK@) (g$match$12383$CSxK@ g$C$20415$CSxK@ g$V$20424$CSxK@ g$p$12387$CSxK@ g$m*$12388$CSxK@ g$s*$12389$CSxK@ g$ae*$12390$CSxK@ g$r$12391$CSxK@))) g$e$12386$CSxK@) (g$match*$12382$CSxK@ g$C$20415$CSxK@ g$e$12386$CSxK@ g$p$12387$CSxK@ g$m*$12388$CSxK@ g$s*$12389$CSxK@ g$ae*$12390$CSxK@ g$r$12391$CSxK@)))) g$e$12386$CSxK@)))) g$e$12386$CSxK@)))) g$p$12387$CSxK@ 'any)))) g$p$12387$CSxK@ '_)))) g$r$12391$CSxK@)))) (g$C$20426$CSxK@ (case-lambda ((g$C$20425$CSxK@ g$e$12384$CSxK@ g$p$12385$CSxK@) (g$match$12383$CSxK@ g$C$20425$CSxK@ g$e$12384$CSxK@ g$p$12385$CSxK@ '() '() '() '())))))))))))))) g$C$20427$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$22777$CSxK@))) (library-letrec*-identity 'g$syntax-dispatch$10710$CSxK@))) (g$ellipsis?$10711$CSxK@ g$ellipsis?$14253$CSxK@ ((case-lambda ((g$C$22778$CSxK@) (g$C$22778$CSxK@ (case-lambda ((g$C$20428$CSxK@ g$x$12490$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$20429$CSxK@) (if g$T$20429$CSxK@ (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$20430$CSxK@) (g$free-id=?$10351$CSxK@ g$C$20428$CSxK@ g$x$12490$CSxK@ g$V$20430$CSxK@))) '...) (g$C$20428$CSxK@ '#f)))) g$x$12490$CSxK@)))))) (library-letrec*-identity 'g$ellipsis?$10711$CSxK@))) (g$underscore?$10712$CSxK@ g$underscore?$14254$CSxK@ ((case-lambda ((g$C$22779$CSxK@) (g$C$22779$CSxK@ (case-lambda ((g$C$20431$CSxK@ g$x$12491$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$20432$CSxK@) (if g$T$20432$CSxK@ (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$20433$CSxK@) (g$free-id=?$10351$CSxK@ g$C$20431$CSxK@ g$x$12491$CSxK@ g$V$20433$CSxK@))) '_) (g$C$20431$CSxK@ '#f)))) g$x$12491$CSxK@)))))) (library-letrec*-identity 'g$underscore?$10712$CSxK@))) (g$verify-literals$10713$CSxK@ g$verify-literals$14255$CSxK@ ((case-lambda ((g$C$22780$CSxK@) (g$C$22780$CSxK@ (case-lambda ((g$C$20441$CSxK@ g$lits$12492$CSxK@ g$expr$12493$CSxK@) (g$for-each$6714$CSxK@ g$C$20441$CSxK@ (case-lambda ((g$C$20437$CSxK@ g$x$12494$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$20438$CSxK@) (not (case-lambda ((g$V$20439$CSxK@) ((case-lambda ((g$C$20435$CSxK@ g$t$12495$CSxK@) (if g$t$12495$CSxK@ (g$C$20435$CSxK@ g$t$12495$CSxK@) (g$ellipsis?$10711$CSxK@ (case-lambda ((g$V$20436$CSxK@) ((case-lambda ((g$C$20434$CSxK@ g$t$12496$CSxK@) (if g$t$12496$CSxK@ (g$C$20434$CSxK@ g$t$12496$CSxK@) (g$underscore?$10712$CSxK@ g$C$20434$CSxK@ g$x$12494$CSxK@)))) g$C$20435$CSxK@ g$V$20436$CSxK@))) g$x$12494$CSxK@)))) (case-lambda ((g$T$20440$CSxK@) (if g$T$20440$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20437$CSxK@ '#f '"invalid literal" g$expr$12493$CSxK@ g$x$12494$CSxK@) (void g$C$20437$CSxK@)))) g$V$20439$CSxK@))) g$V$20438$CSxK@))) g$x$12494$CSxK@))) g$lits$12492$CSxK@)))))) (library-letrec*-identity 'g$verify-literals$10713$CSxK@))) (g$syntax-case-transformer$10714$CSxK@ g$syntax-case-transformer$14256$CSxK@ ((case-lambda ((g$C$22781$CSxK@) ((case-lambda ((g$C$20557$CSxK@) ((case-lambda ((g$C$20556$CSxK@ g$build-dispatch-call$12497$CSxK@ g$invalid-ids-error$12498$CSxK@ g$gen-clause$12499$CSxK@ g$gen-syntax-case$12500$CSxK@) (begin (set! g$build-dispatch-call$12497$CSxK@ (case-lambda ((g$C$20457$CSxK@ g$pvars$12554$CSxK@ g$expr$12555$CSxK@ g$y$12556$CSxK@ g$r$12557$CSxK@ g$mr$12558$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20458$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20459$CSxK@) ((case-lambda ((g$C$20454$CSxK@ g$ids$12559$CSxK@ g$levels$12560$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20455$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20456$CSxK@) ((case-lambda ((g$C$20447$CSxK@ g$labels$12561$CSxK@ g$new-vars$12562$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20448$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20449$CSxK@) (append (case-lambda ((g$V$20450$CSxK@) (g$make-full-rib$10313$CSxK@ (case-lambda ((g$V$20451$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$20452$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$20453$CSxK@) ((case-lambda ((g$C$20442$CSxK@ g$body$12563$CSxK@) (g$build-lambda$10269$CSxK@ (case-lambda ((g$V$20443$CSxK@) (list g$C$20442$CSxK@ '(primitive apply) g$V$20443$CSxK@ g$y$12556$CSxK@))) '#f g$new-vars$12562$CSxK@ g$body$12563$CSxK@))) g$C$20447$CSxK@ g$V$20453$CSxK@))) g$V$20452$CSxK@ g$V$20450$CSxK@ g$mr$12558$CSxK@))) g$V$20451$CSxK@ g$expr$12555$CSxK@))) g$ids$12559$CSxK@ g$labels$12561$CSxK@))) g$V$20449$CSxK@ g$r$12557$CSxK@))) (case-lambda ((g$C$20444$CSxK@ g$label$12564$CSxK@ g$var$12565$CSxK@ g$level$12566$CSxK@) (cons (case-lambda ((g$V$20445$CSxK@) (g$make-binding$10363$CSxK@ (case-lambda ((g$V$20446$CSxK@) (cons g$C$20444$CSxK@ g$label$12564$CSxK@ g$V$20446$CSxK@))) 'syntax g$V$20445$CSxK@))) g$var$12565$CSxK@ g$level$12566$CSxK@))) g$labels$12561$CSxK@ g$new-vars$12562$CSxK@ g$V$20448$CSxK@))) cdr g$pvars$12554$CSxK@))) g$C$20454$CSxK@ g$V$20456$CSxK@ g$V$20455$CSxK@))) g$gen-label$10284$CSxK@ g$ids$12559$CSxK@))) g$gen-lexical$10282$CSxK@ g$ids$12559$CSxK@))) g$C$20457$CSxK@ g$V$20459$CSxK@ g$V$20458$CSxK@))) car g$pvars$12554$CSxK@))) cdr g$pvars$12554$CSxK@)))) (begin (set! g$invalid-ids-error$12498$CSxK@ (case-lambda ((g$C$20474$CSxK@ g$id*$12548$CSxK@ g$e$12549$CSxK@ g$class$12550$CSxK@) ((case-lambda ((g$C$20473$CSxK@ g$find$12551$CSxK@) ((case-lambda ((g$C$20461$CSxK@ g$find$20460$CSxK@) (begin (set! g$find$12551$CSxK@ g$find$20460$CSxK@) (g$C$20461$CSxK@ g$find$12551$CSxK@)))) g$C$20473$CSxK@ (case-lambda ((g$C$20462$CSxK@ g$id*$12552$CSxK@ g$ok*$12553$CSxK@) (null? (case-lambda ((g$T$20463$CSxK@) (if g$T$20463$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20462$CSxK@ '#f '"invalid syntax" g$e$12549$CSxK@) (car (case-lambda ((g$V$20464$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$20465$CSxK@) (if g$T$20465$CSxK@ (car (case-lambda ((g$V$20466$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$20467$CSxK@) (if g$T$20467$CSxK@ (car (case-lambda ((g$V$20468$CSxK@) (g$syntax-error$10825$CSxK@ g$C$20462$CSxK@ g$V$20468$CSxK@ '"duplicate " g$class$12550$CSxK@))) g$id*$12552$CSxK@) (car (case-lambda ((g$V$20469$CSxK@) (cons (case-lambda ((g$V$20470$CSxK@) (cdr (case-lambda ((g$V$20471$CSxK@) (g$find$12551$CSxK@ g$C$20462$CSxK@ g$V$20471$CSxK@ g$V$20470$CSxK@))) g$id*$12552$CSxK@))) g$V$20469$CSxK@ g$ok*$12553$CSxK@))) g$id*$12552$CSxK@)))) g$V$20466$CSxK@ g$ok*$12553$CSxK@))) g$id*$12552$CSxK@) (car (case-lambda ((g$V$20472$CSxK@) (g$syntax-error$10825$CSxK@ g$C$20462$CSxK@ g$V$20472$CSxK@ '"invalid " g$class$12550$CSxK@))) g$id*$12552$CSxK@)))) g$V$20464$CSxK@))) g$id*$12552$CSxK@)))) g$id*$12552$CSxK@)))))) (case-lambda ((g$V$20475$CSxK@) (g$V$20475$CSxK@ g$C$20474$CSxK@ g$id*$12548$CSxK@ '()))) uninitialized)))) (begin (set! g$gen-clause$12499$CSxK@ (case-lambda ((g$C$20506$CSxK@ g$x$12528$CSxK@ g$keys$12529$CSxK@ g$clauses$12530$CSxK@ g$r$12531$CSxK@ g$mr$12532$CSxK@ g$pat$12533$CSxK@ g$fender$12534$CSxK@ g$expr$12535$CSxK@) (call-with-values g$C$20506$CSxK@ (case-lambda ((g$C$20476$CSxK@) (g$convert-pattern$10709$CSxK@ g$C$20476$CSxK@ g$pat$12533$CSxK@ g$keys$12529$CSxK@))) (case-lambda ((g$C$20505$CSxK@ g$p$12538$CSxK@ g$pvars$12539$CSxK@) ((case-lambda ((g$C$20497$CSxK@ g$pvars$12540$CSxK@ g$p$12541$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20498$CSxK@) (g$distinct-bound-ids?$10353$CSxK@ (case-lambda ((g$V$20499$CSxK@) (not (case-lambda ((g$T$20500$CSxK@) (if g$T$20500$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$20501$CSxK@) (g$invalid-ids-error$12498$CSxK@ g$C$20497$CSxK@ g$V$20501$CSxK@ g$pat$12533$CSxK@ '"pattern variable"))) car g$pvars$12540$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$V$20502$CSxK@) (not (case-lambda ((g$T$20503$CSxK@) (if g$T$20503$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20497$CSxK@ '#f '"misplaced ellipsis in syntax-case pattern" g$pat$12533$CSxK@) (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$20504$CSxK@) ((case-lambda ((g$C$20492$CSxK@ g$y$12543$CSxK@) ((case-lambda ((g$J$20494$CSxK@) (eq? (case-lambda ((g$T$20495$CSxK@) (if g$T$20495$CSxK@ (g$J$20494$CSxK@ g$y$12543$CSxK@) (g$build-dispatch-call$12497$CSxK@ (case-lambda ((g$V$20496$CSxK@) ((case-lambda ((g$C$20490$CSxK@ g$call$12547$CSxK@) (list (case-lambda ((g$V$20491$CSxK@) (list g$C$20490$CSxK@ 'if g$y$12543$CSxK@ g$call$12547$CSxK@ g$V$20491$CSxK@))) 'quote '#f))) g$J$20494$CSxK@ g$V$20496$CSxK@))) g$pvars$12540$CSxK@ g$fender$12534$CSxK@ g$y$12543$CSxK@ g$r$12531$CSxK@ g$mr$12532$CSxK@)))) g$fender$12534$CSxK@ '#t))) (case-lambda ((g$V$20493$CSxK@) ((case-lambda ((g$C$20488$CSxK@ g$test$12544$CSxK@) (g$build-dispatch-call$12497$CSxK@ (case-lambda ((g$V$20489$CSxK@) ((case-lambda ((g$C$20486$CSxK@ g$conseq$12545$CSxK@) (g$gen-syntax-case$12500$CSxK@ (case-lambda ((g$V$20487$CSxK@) ((case-lambda ((g$C$20480$CSxK@ g$altern$12546$CSxK@) (list (case-lambda ((g$V$20481$CSxK@) (list (case-lambda ((g$V$20482$CSxK@) (list (case-lambda ((g$V$20483$CSxK@) (list (case-lambda ((g$V$20484$CSxK@) (g$build-lambda$10269$CSxK@ (case-lambda ((g$V$20485$CSxK@) (list g$C$20480$CSxK@ g$V$20485$CSxK@ g$V$20482$CSxK@))) '#f g$V$20484$CSxK@ g$V$20483$CSxK@))) g$y$12543$CSxK@))) 'if g$test$12544$CSxK@ g$conseq$12545$CSxK@ g$altern$12546$CSxK@))) '(primitive syntax-dispatch) g$x$12528$CSxK@ g$V$20481$CSxK@))) 'quote g$p$12541$CSxK@))) g$C$20486$CSxK@ g$V$20487$CSxK@))) g$x$12528$CSxK@ g$keys$12529$CSxK@ g$clauses$12530$CSxK@ g$r$12531$CSxK@ g$mr$12532$CSxK@))) g$C$20488$CSxK@ g$V$20489$CSxK@))) g$pvars$12540$CSxK@ g$expr$12535$CSxK@ g$y$12543$CSxK@ g$r$12531$CSxK@ g$mr$12532$CSxK@))) g$C$20492$CSxK@ g$V$20493$CSxK@)))))) g$C$20497$CSxK@ g$V$20504$CSxK@))) 'tmp)))) g$V$20502$CSxK@))) (case-lambda ((g$C$20477$CSxK@ g$x$12542$CSxK@) (car (case-lambda ((g$V$20478$CSxK@) (g$ellipsis?$10711$CSxK@ (case-lambda ((g$V$20479$CSxK@) (not g$C$20477$CSxK@ g$V$20479$CSxK@))) g$V$20478$CSxK@))) g$x$12542$CSxK@))) g$pvars$12540$CSxK@)))) g$V$20499$CSxK@))) g$V$20498$CSxK@))) car g$pvars$12540$CSxK@))) g$C$20505$CSxK@ g$pvars$12539$CSxK@ g$p$12538$CSxK@))))))) (begin (set! g$gen-syntax-case$12500$CSxK@ (case-lambda ((g$C$20540$CSxK@ g$x$12511$CSxK@ g$keys$12512$CSxK@ g$clauses$12513$CSxK@ g$r$12514$CSxK@ g$mr$12515$CSxK@) (null? (case-lambda ((g$T$20541$CSxK@) (if g$T$20541$CSxK@ (list g$C$20540$CSxK@ '(primitive syntax-error) g$x$12511$CSxK@) (car (case-lambda ((g$V$20542$CSxK@) ((case-lambda ((g$C$20538$CSxK@ g$t$12516$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20539$CSxK@) ((case-lambda ((g$C$20537$CSxK@ g$ls/false$12517$CSxK@) (if g$ls/false$12517$CSxK@ (apply g$C$20537$CSxK@ (case-lambda ((g$C$20520$CSxK@ g$pat$12518$CSxK@ g$expr$12519$CSxK@) ((case-lambda ((g$J$20527$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$20528$CSxK@) (if g$T$20528$CSxK@ (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$V$20529$CSxK@) (not (case-lambda ((g$T$20530$CSxK@) (if g$T$20530$CSxK@ (g$ellipsis?$10711$CSxK@ (case-lambda ((g$V$20531$CSxK@) (not g$J$20527$CSxK@ g$V$20531$CSxK@))) g$pat$12518$CSxK@) (g$J$20527$CSxK@ '#f)))) g$V$20529$CSxK@))) g$pat$12518$CSxK@ g$keys$12512$CSxK@) (g$J$20527$CSxK@ '#f)))) g$pat$12518$CSxK@))) (case-lambda ((g$T$20521$CSxK@) (if g$T$20521$CSxK@ (g$scheme-stx$10653$CSxK@ (case-lambda ((g$V$20522$CSxK@) (g$free-id=?$10351$CSxK@ (case-lambda ((g$T$20523$CSxK@) (if g$T$20523$CSxK@ (g$chi-expr$10728$CSxK@ g$C$20520$CSxK@ g$expr$12519$CSxK@ g$r$12514$CSxK@ g$mr$12515$CSxK@) (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$20524$CSxK@) (g$gen-label$10284$CSxK@ (case-lambda ((g$V$20525$CSxK@) ((case-lambda ((g$C$20510$CSxK@ g$lab$12520$CSxK@ g$lex$12521$CSxK@) (cons (case-lambda ((g$V$20511$CSxK@) (g$make-binding$10363$CSxK@ (case-lambda ((g$V$20512$CSxK@) (cons (case-lambda ((g$V$20513$CSxK@) (cons (case-lambda ((g$V$20514$CSxK@) (list (case-lambda ((g$V$20515$CSxK@) (list (case-lambda ((g$V$20516$CSxK@) (g$make-full-rib$10313$CSxK@ (case-lambda ((g$V$20517$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$20518$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$20519$CSxK@) ((case-lambda ((g$C$20507$CSxK@ g$body$12522$CSxK@) (list (case-lambda ((g$V$20508$CSxK@) (g$build-lambda$10269$CSxK@ (case-lambda ((g$V$20509$CSxK@) (list g$C$20507$CSxK@ g$V$20509$CSxK@ g$x$12511$CSxK@))) '#f g$V$20508$CSxK@ g$body$12522$CSxK@))) g$lex$12521$CSxK@))) g$C$20510$CSxK@ g$V$20519$CSxK@))) g$V$20518$CSxK@ g$V$20514$CSxK@ g$mr$12515$CSxK@))) g$V$20517$CSxK@ g$expr$12519$CSxK@))) g$V$20516$CSxK@ g$V$20515$CSxK@))) g$pat$12518$CSxK@))) g$lab$12520$CSxK@))) g$V$20513$CSxK@ g$r$12514$CSxK@))) g$lab$12520$CSxK@ g$V$20512$CSxK@))) 'syntax g$V$20511$CSxK@))) g$lex$12521$CSxK@ '0))) g$C$20520$CSxK@ g$V$20525$CSxK@ g$V$20524$CSxK@))) g$pat$12518$CSxK@))) g$pat$12518$CSxK@)))) g$pat$12518$CSxK@ g$V$20522$CSxK@))) '_) (cdr (case-lambda ((g$V$20526$CSxK@) (g$gen-clause$12499$CSxK@ g$C$20520$CSxK@ g$x$12511$CSxK@ g$keys$12512$CSxK@ g$V$20526$CSxK@ g$r$12514$CSxK@ g$mr$12515$CSxK@ g$pat$12518$CSxK@ '#t g$expr$12519$CSxK@))) g$clauses$12513$CSxK@))))))) g$ls/false$12517$CSxK@) ((case-lambda ((g$C$20535$CSxK@ g$t$12523$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20536$CSxK@) ((case-lambda ((g$C$20534$CSxK@ g$ls/false$12524$CSxK@) (if g$ls/false$12524$CSxK@ (apply g$C$20534$CSxK@ (case-lambda ((g$C$20532$CSxK@ g$pat$12525$CSxK@ g$fender$12526$CSxK@ g$expr$12527$CSxK@) (cdr (case-lambda ((g$V$20533$CSxK@) (g$gen-clause$12499$CSxK@ g$C$20532$CSxK@ g$x$12511$CSxK@ g$keys$12512$CSxK@ g$V$20533$CSxK@ g$r$12514$CSxK@ g$mr$12515$CSxK@ g$pat$12525$CSxK@ g$fender$12526$CSxK@ g$expr$12527$CSxK@))) g$clauses$12513$CSxK@))) g$ls/false$12524$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20534$CSxK@ '#f '"invalid syntax" g$t$12523$CSxK@)))) g$C$20535$CSxK@ g$V$20536$CSxK@))) g$t$12523$CSxK@ '(any any any)))) g$C$20537$CSxK@ g$t$12516$CSxK@)))) g$C$20538$CSxK@ g$V$20539$CSxK@))) g$t$12516$CSxK@ '(any any)))) g$C$20540$CSxK@ g$V$20542$CSxK@))) g$clauses$12513$CSxK@)))) g$clauses$12513$CSxK@)))) (g$C$20556$CSxK@ (case-lambda ((g$C$20555$CSxK@ g$e$12501$CSxK@ g$r$12502$CSxK@ g$mr$12503$CSxK@) ((case-lambda ((g$C$20553$CSxK@ g$t$12504$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20554$CSxK@) ((case-lambda ((g$C$20552$CSxK@ g$ls/false$12505$CSxK@) (if g$ls/false$12505$CSxK@ (apply g$C$20552$CSxK@ (case-lambda ((g$C$20549$CSxK@ g$expr$12506$CSxK@ g$keys$12507$CSxK@ g$clauses$12508$CSxK@) (g$verify-literals$10713$CSxK@ (case-lambda (g$IGNORE$20550$CSxK@ (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$20551$CSxK@) ((case-lambda ((g$C$20547$CSxK@ g$x$12509$CSxK@) (g$gen-syntax-case$12500$CSxK@ (case-lambda ((g$V$20548$CSxK@) ((case-lambda ((g$C$20543$CSxK@ g$body$12510$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$20544$CSxK@) (list (case-lambda ((g$V$20545$CSxK@) (g$build-lambda$10269$CSxK@ (case-lambda ((g$V$20546$CSxK@) (list g$C$20543$CSxK@ g$V$20546$CSxK@ g$V$20544$CSxK@))) '#f g$V$20545$CSxK@ g$body$12510$CSxK@))) g$x$12509$CSxK@))) g$expr$12506$CSxK@ g$r$12502$CSxK@ g$mr$12503$CSxK@))) g$C$20547$CSxK@ g$V$20548$CSxK@))) g$x$12509$CSxK@ g$keys$12507$CSxK@ g$clauses$12508$CSxK@ g$r$12502$CSxK@ g$mr$12503$CSxK@))) g$C$20549$CSxK@ g$V$20551$CSxK@))) 'tmp))) g$keys$12507$CSxK@ g$e$12501$CSxK@))) g$ls/false$12505$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20552$CSxK@ '#f '"invalid syntax" g$t$12504$CSxK@)))) g$C$20553$CSxK@ g$V$20554$CSxK@))) g$t$12504$CSxK@ '(_ any each-any . each-any)))) g$C$20555$CSxK@ g$e$12501$CSxK@)))))))))) g$C$20557$CSxK@ uninitialized uninitialized uninitialized uninitialized))) g$C$22781$CSxK@))) (library-letrec*-identity 'g$syntax-case-transformer$10714$CSxK@))) (g$ellipsis-map$10715$CSxK@ g$ellipsis-map$14257$CSxK@ ((case-lambda ((g$C$22782$CSxK@) (g$C$22782$CSxK@ (case-lambda ((g$C$20577$CSxK@ g$proc$12567$CSxK@ g$ls$12568$CSxK@ . g$ls*$12569$CSxK@) ((case-lambda ((g$C$20567$CSxK@ g$who$12570$CSxK@) (begin (set! g$who$12570$CSxK@ '...) ((case-lambda ((g$J$20574$CSxK@) (list? (case-lambda ((g$V$20575$CSxK@) (not (case-lambda ((g$T$20576$CSxK@) (if g$T$20576$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$20574$CSxK@ g$who$12570$CSxK@ '"not a list" g$ls$12568$CSxK@) (void g$J$20574$CSxK@)))) g$V$20575$CSxK@))) g$ls$12568$CSxK@))) (case-lambda (g$IGNORE$20568$CSxK@ ((case-lambda ((g$J$20570$CSxK@) (null? (case-lambda ((g$V$20571$CSxK@) (not (case-lambda ((g$T$20572$CSxK@) (if g$T$20572$CSxK@ (length (case-lambda ((g$V$20573$CSxK@) ((case-lambda ((g$C$20566$CSxK@ g$n$12571$CSxK@) (g$for-each$6714$CSxK@ g$C$20566$CSxK@ (case-lambda ((g$C$20558$CSxK@ g$x$12572$CSxK@) ((case-lambda ((g$J$20563$CSxK@) (list? (case-lambda ((g$V$20564$CSxK@) (not (case-lambda ((g$T$20565$CSxK@) (if g$T$20565$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$20563$CSxK@ g$who$12570$CSxK@ '"not a list" g$x$12572$CSxK@) (void g$J$20563$CSxK@)))) g$V$20564$CSxK@))) g$x$12572$CSxK@))) (case-lambda (g$IGNORE$20559$CSxK@ (length (case-lambda ((g$V$20560$CSxK@) (= (case-lambda ((g$V$20561$CSxK@) (not (case-lambda ((g$T$20562$CSxK@) (if g$T$20562$CSxK@ (g$assertion-violation$7672$CSxK@ g$C$20558$CSxK@ g$who$12570$CSxK@ '"length mismatch" g$ls$12568$CSxK@ g$x$12572$CSxK@) (void g$C$20558$CSxK@)))) g$V$20561$CSxK@))) g$V$20560$CSxK@ g$n$12571$CSxK@))) g$x$12572$CSxK@)))))) g$ls*$12569$CSxK@))) g$J$20570$CSxK@ g$V$20573$CSxK@))) g$ls$12568$CSxK@) (void g$J$20570$CSxK@)))) g$V$20571$CSxK@))) g$ls*$12569$CSxK@))) (case-lambda (g$IGNORE$20569$CSxK@ (apply g$C$20567$CSxK@ g$map$6713$CSxK@ g$proc$12567$CSxK@ g$ls$12568$CSxK@ g$ls*$12569$CSxK@)))))))))) g$C$20577$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$ellipsis-map$10715$CSxK@))) (g$syntax-transformer$10716$CSxK@ g$syntax-transformer$14258$CSxK@ ((case-lambda ((g$C$22783$CSxK@) ((case-lambda ((g$C$20801$CSxK@) ((case-lambda ((g$C$20800$CSxK@ g$gen-syntax$12573$CSxK@ g$gen-ref$12574$CSxK@ g$gen-append$12575$CSxK@ g$gen-mappend$12576$CSxK@ g$gen-map$12577$CSxK@ g$gen-cons$12578$CSxK@ g$gen-vector$12579$CSxK@ g$regen$12580$CSxK@) (begin (set! g$gen-syntax$12573$CSxK@ (case-lambda ((g$C$20693$CSxK@ g$src$12633$CSxK@ g$e$12634$CSxK@ g$r$12635$CSxK@ g$maps$12636$CSxK@ g$ellipsis?$12637$CSxK@ g$vec?$12638$CSxK@) ((case-lambda ((g$C$20691$CSxK@ g$t$12639$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20692$CSxK@) ((case-lambda ((g$C$20688$CSxK@ g$ls/false$12640$CSxK@) ((case-lambda ((g$J$20690$CSxK@) (if g$ls/false$12640$CSxK@ (apply g$J$20690$CSxK@ (case-lambda ((g$C$20578$CSxK@ g$dots$12641$CSxK@) (g$ellipsis?$12637$CSxK@ g$C$20578$CSxK@ g$dots$12641$CSxK@))) g$ls/false$12640$CSxK@) (g$J$20690$CSxK@ '#f)))) (case-lambda ((g$T$20689$CSxK@) (if g$T$20689$CSxK@ (apply g$C$20688$CSxK@ (case-lambda ((g$C$20579$CSxK@ g$dots$12642$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20579$CSxK@ '#f '"misplaced ellipsis in syntax form" g$src$12633$CSxK@))) g$ls/false$12640$CSxK@) ((case-lambda ((g$C$20686$CSxK@ g$t$12643$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20687$CSxK@) ((case-lambda ((g$C$20683$CSxK@ g$ls/false$12644$CSxK@) ((case-lambda ((g$J$20685$CSxK@) (if g$ls/false$12644$CSxK@ (apply g$J$20685$CSxK@ (case-lambda ((g$C$20580$CSxK@ g$id$12645$CSxK@) (g$id?$10347$CSxK@ g$C$20580$CSxK@ g$id$12645$CSxK@))) g$ls/false$12644$CSxK@) (g$J$20685$CSxK@ '#f)))) (case-lambda ((g$T$20684$CSxK@) (if g$T$20684$CSxK@ (apply g$C$20683$CSxK@ (case-lambda ((g$C$20595$CSxK@ g$id$12646$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$20596$CSxK@) ((case-lambda ((g$C$20593$CSxK@ g$label$12647$CSxK@) (g$label->binding$10362$CSxK@ (case-lambda ((g$V$20594$CSxK@) ((case-lambda ((g$C$20589$CSxK@ g$b$12648$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$20590$CSxK@) (eq? (case-lambda ((g$T$20591$CSxK@) (if g$T$20591$CSxK@ (call-with-values g$C$20589$CSxK@ (case-lambda ((g$C$20584$CSxK@) (g$binding-value$10365$CSxK@ (case-lambda ((g$V$20585$CSxK@) ((case-lambda ((g$C$20581$CSxK@ g$var.lev$12651$CSxK@) (cdr (case-lambda ((g$V$20582$CSxK@) (car (case-lambda ((g$V$20583$CSxK@) (g$gen-ref$12574$CSxK@ g$C$20581$CSxK@ g$src$12633$CSxK@ g$V$20583$CSxK@ g$V$20582$CSxK@ g$maps$12636$CSxK@))) g$var.lev$12651$CSxK@))) g$var.lev$12651$CSxK@))) g$C$20584$CSxK@ g$V$20585$CSxK@))) g$b$12648$CSxK@))) (case-lambda ((g$C$20588$CSxK@ g$var$12652$CSxK@ g$maps$12653$CSxK@) ((case-lambda ((g$C$20586$CSxK@ g$maps$12654$CSxK@ g$var$12655$CSxK@) (list (case-lambda ((g$V$20587$CSxK@) (values g$C$20586$CSxK@ g$V$20587$CSxK@ g$maps$12654$CSxK@))) 'ref g$var$12655$CSxK@))) g$C$20588$CSxK@ g$maps$12653$CSxK@ g$var$12652$CSxK@)))) (list (case-lambda ((g$V$20592$CSxK@) (values g$C$20589$CSxK@ g$V$20592$CSxK@ g$maps$12636$CSxK@))) 'quote g$e$12634$CSxK@)))) g$V$20590$CSxK@ 'syntax))) g$b$12648$CSxK@))) g$C$20593$CSxK@ g$V$20594$CSxK@))) g$label$12647$CSxK@ g$r$12635$CSxK@))) g$C$20595$CSxK@ g$V$20596$CSxK@))) g$e$12634$CSxK@))) g$ls/false$12644$CSxK@) ((case-lambda ((g$C$20681$CSxK@ g$t$12656$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20682$CSxK@) ((case-lambda ((g$C$20678$CSxK@ g$ls/false$12657$CSxK@) ((case-lambda ((g$J$20680$CSxK@) (if g$ls/false$12657$CSxK@ (apply g$J$20680$CSxK@ (case-lambda ((g$C$20597$CSxK@ g$dots$12658$CSxK@ g$e$12659$CSxK@) (g$ellipsis?$12637$CSxK@ g$C$20597$CSxK@ g$dots$12658$CSxK@))) g$ls/false$12657$CSxK@) (g$J$20680$CSxK@ '#f)))) (case-lambda ((g$T$20679$CSxK@) (if g$T$20679$CSxK@ (apply g$C$20678$CSxK@ (case-lambda ((g$C$20599$CSxK@ g$dots$12660$CSxK@ g$e$12661$CSxK@) (if g$vec?$12638$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20599$CSxK@ '#f '"misplaced ellipsis in syntax form" g$src$12633$CSxK@) (g$gen-syntax$12573$CSxK@ g$C$20599$CSxK@ g$src$12633$CSxK@ g$e$12661$CSxK@ g$r$12635$CSxK@ g$maps$12636$CSxK@ (case-lambda ((g$C$20598$CSxK@ g$x$12662$CSxK@) (g$C$20598$CSxK@ '#f))) '#f)))) g$ls/false$12657$CSxK@) ((case-lambda ((g$C$20676$CSxK@ g$t$12663$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20677$CSxK@) ((case-lambda ((g$C$20673$CSxK@ g$ls/false$12664$CSxK@) ((case-lambda ((g$J$20675$CSxK@) (if g$ls/false$12664$CSxK@ (apply g$J$20675$CSxK@ (case-lambda ((g$C$20600$CSxK@ g$x$12665$CSxK@ g$dots$12666$CSxK@ g$y$12667$CSxK@) (g$ellipsis?$12637$CSxK@ g$C$20600$CSxK@ g$dots$12666$CSxK@))) g$ls/false$12664$CSxK@) (g$J$20675$CSxK@ '#f)))) (case-lambda ((g$T$20674$CSxK@) (if g$T$20674$CSxK@ (apply g$C$20673$CSxK@ (case-lambda ((g$C$20647$CSxK@ g$x$12668$CSxK@ g$dots$12669$CSxK@ g$y$12670$CSxK@) ((case-lambda ((g$C$20636$CSxK@ g$f$12671$CSxK@) ((case-lambda ((g$C$20602$CSxK@ g$f$20601$CSxK@) (begin (set! g$f$12671$CSxK@ g$f$20601$CSxK@) (g$C$20602$CSxK@ g$f$12671$CSxK@)))) g$C$20636$CSxK@ (case-lambda ((g$C$20635$CSxK@ g$y$12672$CSxK@ g$k$12673$CSxK@) ((case-lambda ((g$C$20633$CSxK@ g$t$12674$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20634$CSxK@) ((case-lambda ((g$C$20632$CSxK@ g$ls/false$12675$CSxK@) (if g$ls/false$12675$CSxK@ (apply g$C$20632$CSxK@ (case-lambda ((g$C$20603$CSxK@) (g$k$12673$CSxK@ g$C$20603$CSxK@ g$maps$12636$CSxK@))) g$ls/false$12675$CSxK@) ((case-lambda ((g$C$20630$CSxK@ g$t$12676$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20631$CSxK@) ((case-lambda ((g$C$20627$CSxK@ g$ls/false$12677$CSxK@) ((case-lambda ((g$J$20629$CSxK@) (if g$ls/false$12677$CSxK@ (apply g$J$20629$CSxK@ (case-lambda ((g$C$20604$CSxK@ g$dots$12678$CSxK@ g$y$12679$CSxK@) (g$ellipsis?$12637$CSxK@ g$C$20604$CSxK@ g$dots$12678$CSxK@))) g$ls/false$12677$CSxK@) (g$J$20629$CSxK@ '#f)))) (case-lambda ((g$T$20628$CSxK@) (if g$T$20628$CSxK@ (apply g$C$20627$CSxK@ (case-lambda ((g$C$20615$CSxK@ g$dots$12680$CSxK@ g$y$12681$CSxK@) (g$f$12671$CSxK@ g$C$20615$CSxK@ g$y$12681$CSxK@ (case-lambda ((g$C$20614$CSxK@ g$maps$12682$CSxK@) (call-with-values g$C$20614$CSxK@ (case-lambda ((g$C$20605$CSxK@) (cons (case-lambda ((g$V$20606$CSxK@) (g$k$12673$CSxK@ g$C$20605$CSxK@ g$V$20606$CSxK@))) '() g$maps$12682$CSxK@))) (case-lambda ((g$C$20613$CSxK@ g$x$12685$CSxK@ g$maps$12686$CSxK@) ((case-lambda ((g$C$20607$CSxK@ g$maps$12687$CSxK@ g$x$12688$CSxK@) (car (case-lambda ((g$V$20608$CSxK@) (null? (case-lambda ((g$T$20609$CSxK@) (if g$T$20609$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20607$CSxK@ '#f '"extra ellipsis in syntax form" g$src$12633$CSxK@) (cdr (case-lambda ((g$V$20610$CSxK@) (car (case-lambda ((g$V$20611$CSxK@) (g$gen-mappend$12576$CSxK@ (case-lambda ((g$V$20612$CSxK@) (values g$C$20607$CSxK@ g$V$20612$CSxK@ g$V$20610$CSxK@))) g$x$12688$CSxK@ g$V$20611$CSxK@))) g$maps$12687$CSxK@))) g$maps$12687$CSxK@)))) g$V$20608$CSxK@))) g$maps$12687$CSxK@))) g$C$20613$CSxK@ g$maps$12686$CSxK@ g$x$12685$CSxK@))))))))) g$ls/false$12677$CSxK@) ((case-lambda ((g$C$20625$CSxK@ g$t$12689$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20626$CSxK@) ((case-lambda ((g$C$20624$CSxK@ g$ls/false$12690$CSxK@) (if g$ls/false$12690$CSxK@ (apply g$C$20624$CSxK@ (case-lambda ((g$C$20623$CSxK@) (call-with-values g$C$20623$CSxK@ (case-lambda ((g$C$20616$CSxK@) (g$gen-syntax$12573$CSxK@ g$C$20616$CSxK@ g$src$12633$CSxK@ g$y$12672$CSxK@ g$r$12635$CSxK@ g$maps$12636$CSxK@ g$ellipsis?$12637$CSxK@ g$vec?$12638$CSxK@))) (case-lambda ((g$C$20622$CSxK@ g$y$12693$CSxK@ g$maps$12694$CSxK@) ((case-lambda ((g$C$20621$CSxK@ g$maps$12695$CSxK@ g$y$12696$CSxK@) (call-with-values g$C$20621$CSxK@ (case-lambda ((g$C$20617$CSxK@) (g$k$12673$CSxK@ g$C$20617$CSxK@ g$maps$12695$CSxK@))) (case-lambda ((g$C$20620$CSxK@ g$x$12699$CSxK@ g$maps$12700$CSxK@) ((case-lambda ((g$C$20618$CSxK@ g$maps$12701$CSxK@ g$x$12702$CSxK@) (g$gen-append$12575$CSxK@ (case-lambda ((g$V$20619$CSxK@) (values g$C$20618$CSxK@ g$V$20619$CSxK@ g$maps$12701$CSxK@))) g$x$12702$CSxK@ g$y$12696$CSxK@))) g$C$20620$CSxK@ g$maps$12700$CSxK@ g$x$12699$CSxK@)))))) g$C$20622$CSxK@ g$maps$12694$CSxK@ g$y$12693$CSxK@)))))) g$ls/false$12690$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20624$CSxK@ '#f '"invalid syntax" g$t$12689$CSxK@)))) g$C$20625$CSxK@ g$V$20626$CSxK@))) g$t$12689$CSxK@ '_))) g$C$20627$CSxK@ g$t$12676$CSxK@))))))) g$C$20630$CSxK@ g$V$20631$CSxK@))) g$t$12676$CSxK@ '(any . any)))) g$C$20632$CSxK@ g$t$12674$CSxK@)))) g$C$20633$CSxK@ g$V$20634$CSxK@))) g$t$12674$CSxK@ '()))) g$C$20635$CSxK@ g$y$12672$CSxK@)))))) (case-lambda ((g$V$20648$CSxK@) (g$V$20648$CSxK@ g$C$20647$CSxK@ g$y$12670$CSxK@ (case-lambda ((g$C$20646$CSxK@ g$maps$12703$CSxK@) (call-with-values g$C$20646$CSxK@ (case-lambda ((g$C$20637$CSxK@) (cons (case-lambda ((g$V$20638$CSxK@) (g$gen-syntax$12573$CSxK@ g$C$20637$CSxK@ g$src$12633$CSxK@ g$x$12668$CSxK@ g$r$12635$CSxK@ g$V$20638$CSxK@ g$ellipsis?$12637$CSxK@ '#f))) '() g$maps$12703$CSxK@))) (case-lambda ((g$C$20645$CSxK@ g$x$12706$CSxK@ g$maps$12707$CSxK@) ((case-lambda ((g$C$20639$CSxK@ g$maps$12708$CSxK@ g$x$12709$CSxK@) (car (case-lambda ((g$V$20640$CSxK@) (null? (case-lambda ((g$T$20641$CSxK@) (if g$T$20641$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20639$CSxK@ '#f '"extra ellipsis in syntax form" g$src$12633$CSxK@) (cdr (case-lambda ((g$V$20642$CSxK@) (car (case-lambda ((g$V$20643$CSxK@) (g$gen-map$12577$CSxK@ (case-lambda ((g$V$20644$CSxK@) (values g$C$20639$CSxK@ g$V$20644$CSxK@ g$V$20642$CSxK@))) g$x$12709$CSxK@ g$V$20643$CSxK@))) g$maps$12708$CSxK@))) g$maps$12708$CSxK@)))) g$V$20640$CSxK@))) g$maps$12708$CSxK@))) g$C$20645$CSxK@ g$maps$12707$CSxK@ g$x$12706$CSxK@))))))))) uninitialized))) g$ls/false$12664$CSxK@) ((case-lambda ((g$C$20671$CSxK@ g$t$12710$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20672$CSxK@) ((case-lambda ((g$C$20670$CSxK@ g$ls/false$12711$CSxK@) (if g$ls/false$12711$CSxK@ (apply g$C$20670$CSxK@ (case-lambda ((g$C$20656$CSxK@ g$x$12712$CSxK@ g$y$12713$CSxK@) (call-with-values g$C$20656$CSxK@ (case-lambda ((g$C$20649$CSxK@) (g$gen-syntax$12573$CSxK@ g$C$20649$CSxK@ g$src$12633$CSxK@ g$x$12712$CSxK@ g$r$12635$CSxK@ g$maps$12636$CSxK@ g$ellipsis?$12637$CSxK@ '#f))) (case-lambda ((g$C$20655$CSxK@ g$xnew$12716$CSxK@ g$maps$12717$CSxK@) ((case-lambda ((g$C$20654$CSxK@ g$maps$12718$CSxK@ g$xnew$12719$CSxK@) (call-with-values g$C$20654$CSxK@ (case-lambda ((g$C$20650$CSxK@) (g$gen-syntax$12573$CSxK@ g$C$20650$CSxK@ g$src$12633$CSxK@ g$y$12713$CSxK@ g$r$12635$CSxK@ g$maps$12718$CSxK@ g$ellipsis?$12637$CSxK@ g$vec?$12638$CSxK@))) (case-lambda ((g$C$20653$CSxK@ g$ynew$12722$CSxK@ g$maps$12723$CSxK@) ((case-lambda ((g$C$20651$CSxK@ g$maps$12724$CSxK@ g$ynew$12725$CSxK@) (g$gen-cons$12578$CSxK@ (case-lambda ((g$V$20652$CSxK@) (values g$C$20651$CSxK@ g$V$20652$CSxK@ g$maps$12724$CSxK@))) g$e$12634$CSxK@ g$x$12712$CSxK@ g$y$12713$CSxK@ g$xnew$12719$CSxK@ g$ynew$12725$CSxK@))) g$C$20653$CSxK@ g$maps$12723$CSxK@ g$ynew$12722$CSxK@)))))) g$C$20655$CSxK@ g$maps$12717$CSxK@ g$xnew$12716$CSxK@)))))) g$ls/false$12711$CSxK@) ((case-lambda ((g$C$20668$CSxK@ g$t$12726$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20669$CSxK@) ((case-lambda ((g$C$20667$CSxK@ g$ls/false$12727$CSxK@) (if g$ls/false$12727$CSxK@ (apply g$C$20667$CSxK@ (case-lambda ((g$C$20661$CSxK@ g$ls$12728$CSxK@) (call-with-values g$C$20661$CSxK@ (case-lambda ((g$C$20657$CSxK@) (g$gen-syntax$12573$CSxK@ g$C$20657$CSxK@ g$src$12633$CSxK@ g$ls$12728$CSxK@ g$r$12635$CSxK@ g$maps$12636$CSxK@ g$ellipsis?$12637$CSxK@ '#t))) (case-lambda ((g$C$20660$CSxK@ g$lsnew$12731$CSxK@ g$maps$12732$CSxK@) ((case-lambda ((g$C$20658$CSxK@ g$maps$12733$CSxK@ g$lsnew$12734$CSxK@) (g$gen-vector$12579$CSxK@ (case-lambda ((g$V$20659$CSxK@) (values g$C$20658$CSxK@ g$V$20659$CSxK@ g$maps$12733$CSxK@))) g$e$12634$CSxK@ g$ls$12728$CSxK@ g$lsnew$12734$CSxK@))) g$C$20660$CSxK@ g$maps$12732$CSxK@ g$lsnew$12731$CSxK@)))))) g$ls/false$12727$CSxK@) ((case-lambda ((g$C$20665$CSxK@ g$t$12735$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20666$CSxK@) ((case-lambda ((g$C$20664$CSxK@ g$ls/false$12736$CSxK@) (if g$ls/false$12736$CSxK@ (apply g$C$20664$CSxK@ (case-lambda ((g$C$20662$CSxK@) (list (case-lambda ((g$V$20663$CSxK@) (values g$C$20662$CSxK@ g$V$20663$CSxK@ g$maps$12636$CSxK@))) 'quote g$e$12634$CSxK@))) g$ls/false$12736$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20664$CSxK@ '#f '"invalid syntax" g$t$12735$CSxK@)))) g$C$20665$CSxK@ g$V$20666$CSxK@))) g$t$12735$CSxK@ '_))) g$C$20667$CSxK@ g$t$12726$CSxK@)))) g$C$20668$CSxK@ g$V$20669$CSxK@))) g$t$12726$CSxK@ '#(vector each-any)))) g$C$20670$CSxK@ g$t$12710$CSxK@)))) g$C$20671$CSxK@ g$V$20672$CSxK@))) g$t$12710$CSxK@ '(any . any)))) g$C$20673$CSxK@ g$t$12663$CSxK@))))))) g$C$20676$CSxK@ g$V$20677$CSxK@))) g$t$12663$CSxK@ '(any any . any)))) g$C$20678$CSxK@ g$t$12656$CSxK@))))))) g$C$20681$CSxK@ g$V$20682$CSxK@))) g$t$12656$CSxK@ '(any any)))) g$C$20683$CSxK@ g$t$12643$CSxK@))))))) g$C$20686$CSxK@ g$V$20687$CSxK@))) g$t$12643$CSxK@ 'any))) g$C$20688$CSxK@ g$t$12639$CSxK@))))))) g$C$20691$CSxK@ g$V$20692$CSxK@))) g$t$12639$CSxK@ 'any))) g$C$20693$CSxK@ g$e$12634$CSxK@)))) (begin (set! g$gen-ref$12574$CSxK@ (case-lambda ((g$C$20710$CSxK@ g$src$12620$CSxK@ g$var$12621$CSxK@ g$level$12622$CSxK@ g$maps$12623$CSxK@) (= (case-lambda ((g$T$20711$CSxK@) (if g$T$20711$CSxK@ (values g$C$20710$CSxK@ g$var$12621$CSxK@ g$maps$12623$CSxK@) (null? (case-lambda ((g$T$20712$CSxK@) (if g$T$20712$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20710$CSxK@ '#f '"missing ellipsis in syntax form" g$src$12620$CSxK@) (call-with-values g$C$20710$CSxK@ (case-lambda ((g$C$20694$CSxK@) (cdr (case-lambda ((g$V$20695$CSxK@) (- (case-lambda ((g$V$20696$CSxK@) (g$gen-ref$12574$CSxK@ g$C$20694$CSxK@ g$src$12620$CSxK@ g$var$12621$CSxK@ g$V$20696$CSxK@ g$V$20695$CSxK@))) g$level$12622$CSxK@ '1))) g$maps$12623$CSxK@))) (case-lambda ((g$C$20709$CSxK@ g$outer-var$12626$CSxK@ g$outer-maps$12627$CSxK@) ((case-lambda ((g$C$20706$CSxK@ g$outer-maps$12628$CSxK@ g$outer-var$12629$CSxK@) (car (case-lambda ((g$V$20707$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$20708$CSxK@) ((case-lambda ((g$C$20704$CSxK@ g$t$12630$CSxK@) (if g$t$12630$CSxK@ ((case-lambda ((g$C$20697$CSxK@ g$b$12631$CSxK@) (cdr (case-lambda ((g$V$20698$CSxK@) (values g$C$20697$CSxK@ g$V$20698$CSxK@ g$maps$12623$CSxK@))) g$b$12631$CSxK@))) g$C$20704$CSxK@ g$t$12630$CSxK@) (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$20705$CSxK@) ((case-lambda ((g$C$20699$CSxK@ g$inner-var$12632$CSxK@) (car (case-lambda ((g$V$20700$CSxK@) (cons (case-lambda ((g$V$20701$CSxK@) (cons (case-lambda ((g$V$20702$CSxK@) (cons (case-lambda ((g$V$20703$CSxK@) (values g$C$20699$CSxK@ g$inner-var$12632$CSxK@ g$V$20703$CSxK@))) g$V$20702$CSxK@ g$outer-maps$12628$CSxK@))) g$V$20701$CSxK@ g$V$20700$CSxK@))) g$outer-var$12629$CSxK@ g$inner-var$12632$CSxK@))) g$maps$12623$CSxK@))) g$C$20704$CSxK@ g$V$20705$CSxK@))) 'tmp)))) g$C$20706$CSxK@ g$V$20708$CSxK@))) g$outer-var$12629$CSxK@ g$V$20707$CSxK@))) g$maps$12623$CSxK@))) g$C$20709$CSxK@ g$outer-maps$12627$CSxK@ g$outer-var$12626$CSxK@))))))) g$maps$12623$CSxK@)))) g$level$12622$CSxK@ '0)))) (begin (set! g$gen-append$12575$CSxK@ (case-lambda ((g$C$20713$CSxK@ g$x$12618$CSxK@ g$y$12619$CSxK@) (equal? (case-lambda ((g$T$20714$CSxK@) (if g$T$20714$CSxK@ (g$C$20713$CSxK@ g$x$12618$CSxK@) (list g$C$20713$CSxK@ 'append g$x$12618$CSxK@ g$y$12619$CSxK@)))) g$y$12619$CSxK@ ''())))) (begin (set! g$gen-mappend$12576$CSxK@ (case-lambda ((g$C$20715$CSxK@ g$e$12616$CSxK@ g$map-env$12617$CSxK@) (g$gen-map$12577$CSxK@ (case-lambda ((g$V$20716$CSxK@) (list g$C$20715$CSxK@ 'apply '(primitive append) g$V$20716$CSxK@))) g$e$12616$CSxK@ g$map-env$12617$CSxK@)))) (begin (set! g$gen-map$12577$CSxK@ (case-lambda ((g$C$20741$CSxK@ g$e$12607$CSxK@ g$map-env$12608$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20742$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20743$CSxK@) ((case-lambda ((g$C$20729$CSxK@ g$formals$12609$CSxK@ g$actuals$12610$CSxK@) (car (case-lambda ((g$V$20730$CSxK@) (eq? (case-lambda ((g$T$20731$CSxK@) (if g$T$20731$CSxK@ (car g$C$20729$CSxK@ g$actuals$12610$CSxK@) (cdr (case-lambda ((g$V$20732$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$T$20733$CSxK@) (if g$T$20733$CSxK@ (cdr (case-lambda ((g$V$20734$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20735$CSxK@) ((case-lambda ((g$C$20728$CSxK@ g$r$12613$CSxK@) (g$C$20728$CSxK@ (case-lambda ((g$C$20725$CSxK@ g$x$12614$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$20726$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$20727$CSxK@) (cdr g$C$20725$CSxK@ g$V$20727$CSxK@))) g$V$20726$CSxK@ g$r$12613$CSxK@))) g$x$12614$CSxK@)))))) (case-lambda ((g$V$20736$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20737$CSxK@) ((case-lambda ((g$C$20721$CSxK@ g$args$12612$CSxK@) (car (case-lambda ((g$V$20722$CSxK@) (list (case-lambda ((g$V$20723$CSxK@) (cons (case-lambda ((g$V$20724$CSxK@) (cons g$C$20721$CSxK@ 'map g$V$20724$CSxK@))) g$V$20723$CSxK@ g$args$12612$CSxK@))) 'primitive g$V$20722$CSxK@))) g$e$12607$CSxK@))) g$C$20729$CSxK@ g$V$20737$CSxK@))) g$V$20736$CSxK@ g$V$20734$CSxK@))) g$V$20735$CSxK@))) cons g$formals$12609$CSxK@ g$actuals$12610$CSxK@))) g$e$12607$CSxK@) (list (case-lambda ((g$V$20738$CSxK@) (g$cons*$6715$CSxK@ g$C$20729$CSxK@ 'map g$V$20738$CSxK@ g$actuals$12610$CSxK@))) 'lambda g$formals$12609$CSxK@ g$e$12607$CSxK@)))) (case-lambda ((g$C$20717$CSxK@ g$x$12611$CSxK@) (car (case-lambda ((g$V$20718$CSxK@) (eq? (case-lambda ((g$T$20719$CSxK@) (if g$T$20719$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$20720$CSxK@) (g$memq$6705$CSxK@ g$C$20717$CSxK@ g$V$20720$CSxK@ g$formals$12609$CSxK@))) g$x$12611$CSxK@) (g$C$20717$CSxK@ '#f)))) g$V$20718$CSxK@ 'ref))) g$x$12611$CSxK@))) g$V$20732$CSxK@))) g$e$12607$CSxK@)))) g$V$20730$CSxK@ 'ref))) g$e$12607$CSxK@))) g$C$20741$CSxK@ g$V$20743$CSxK@ g$V$20742$CSxK@))) cdr g$map-env$12608$CSxK@))) (case-lambda ((g$C$20739$CSxK@ g$x$12615$CSxK@) (car (case-lambda ((g$V$20740$CSxK@) (list g$C$20739$CSxK@ 'ref g$V$20740$CSxK@))) g$x$12615$CSxK@))) g$map-env$12608$CSxK@)))) (begin (set! g$gen-cons$12578$CSxK@ (case-lambda ((g$C$20760$CSxK@ g$e$12599$CSxK@ g$x$12600$CSxK@ g$y$12601$CSxK@ g$xnew$12602$CSxK@ g$ynew$12603$CSxK@) (car (case-lambda ((g$V$20761$CSxK@) ((case-lambda ((g$C$20749$CSxK@ g$t$12604$CSxK@) (eqv? (case-lambda ((g$T$20750$CSxK@) (if g$T$20750$CSxK@ (car (case-lambda ((g$V$20751$CSxK@) (eq? (case-lambda ((g$T$20752$CSxK@) (if g$T$20752$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$20753$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$20754$CSxK@) ((case-lambda ((g$C$20744$CSxK@ g$xnew$12605$CSxK@ g$ynew$12606$CSxK@) ((case-lambda ((g$J$20747$CSxK@) (eq? (case-lambda ((g$T$20748$CSxK@) (if g$T$20748$CSxK@ (eq? g$J$20747$CSxK@ g$ynew$12606$CSxK@ g$y$12601$CSxK@) (g$J$20747$CSxK@ '#f)))) g$xnew$12605$CSxK@ g$x$12600$CSxK@))) (case-lambda ((g$T$20745$CSxK@) (if g$T$20745$CSxK@ (list g$C$20744$CSxK@ 'quote g$e$12599$CSxK@) (cons (case-lambda ((g$V$20746$CSxK@) (list g$C$20744$CSxK@ 'quote g$V$20746$CSxK@))) g$xnew$12605$CSxK@ g$ynew$12606$CSxK@))))))) g$C$20749$CSxK@ g$V$20754$CSxK@ g$V$20753$CSxK@))) g$xnew$12602$CSxK@))) g$ynew$12603$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$20755$CSxK@) (null? (case-lambda ((g$T$20756$CSxK@) (if g$T$20756$CSxK@ (list g$C$20749$CSxK@ 'list g$xnew$12602$CSxK@) (list g$C$20749$CSxK@ 'cons g$xnew$12602$CSxK@ g$ynew$12603$CSxK@)))) g$V$20755$CSxK@))) g$ynew$12603$CSxK@)))) g$V$20751$CSxK@ 'quote))) g$xnew$12602$CSxK@) (eqv? (case-lambda ((g$T$20757$CSxK@) (if g$T$20757$CSxK@ (cdr (case-lambda ((g$V$20758$CSxK@) (cons (case-lambda ((g$V$20759$CSxK@) (cons g$C$20749$CSxK@ 'list g$V$20759$CSxK@))) g$xnew$12602$CSxK@ g$V$20758$CSxK@))) g$ynew$12603$CSxK@) (list g$C$20749$CSxK@ 'cons g$xnew$12602$CSxK@ g$ynew$12603$CSxK@)))) g$t$12604$CSxK@ 'list)))) g$t$12604$CSxK@ 'quote))) g$C$20760$CSxK@ g$V$20761$CSxK@))) g$ynew$12603$CSxK@)))) (begin (set! g$gen-vector$12579$CSxK@ (case-lambda ((g$C$20762$CSxK@ g$e$12596$CSxK@ g$ls$12597$CSxK@ g$lsnew$12598$CSxK@) (car (case-lambda ((g$V$20763$CSxK@) (eq? (case-lambda ((g$T$20764$CSxK@) (if g$T$20764$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$20765$CSxK@) (eq? (case-lambda ((g$T$20766$CSxK@) (if g$T$20766$CSxK@ (list g$C$20762$CSxK@ 'quote g$e$12596$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$20767$CSxK@) (g$list->vector$7379$CSxK@ (case-lambda ((g$V$20768$CSxK@) (list g$C$20762$CSxK@ 'quote g$V$20768$CSxK@))) g$V$20767$CSxK@))) g$lsnew$12598$CSxK@)))) g$V$20765$CSxK@ g$ls$12597$CSxK@))) g$lsnew$12598$CSxK@) (car (case-lambda ((g$V$20769$CSxK@) (eq? (case-lambda ((g$T$20770$CSxK@) (if g$T$20770$CSxK@ (cdr (case-lambda ((g$V$20771$CSxK@) (cons g$C$20762$CSxK@ 'vector g$V$20771$CSxK@))) g$lsnew$12598$CSxK@) (list g$C$20762$CSxK@ 'list->vector g$lsnew$12598$CSxK@)))) g$V$20769$CSxK@ 'list))) g$lsnew$12598$CSxK@)))) g$V$20763$CSxK@ 'quote))) g$lsnew$12598$CSxK@)))) (begin (set! g$regen$12580$CSxK@ (case-lambda ((g$C$20790$CSxK@ g$x$12593$CSxK@) (car (case-lambda ((g$V$20791$CSxK@) ((case-lambda ((g$C$20773$CSxK@ g$t$12594$CSxK@) (eqv? (case-lambda ((g$T$20774$CSxK@) (if g$T$20774$CSxK@ (g$cadr$7393$CSxK@ g$C$20773$CSxK@ g$x$12593$CSxK@) (eqv? (case-lambda ((g$T$20775$CSxK@) (if g$T$20775$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$20776$CSxK@) (list g$C$20773$CSxK@ 'primitive g$V$20776$CSxK@))) g$x$12593$CSxK@) (eqv? (case-lambda ((g$T$20777$CSxK@) (if g$T$20777$CSxK@ (g$cadr$7393$CSxK@ (case-lambda ((g$V$20778$CSxK@) (list g$C$20773$CSxK@ 'quote g$V$20778$CSxK@))) g$x$12593$CSxK@) (eqv? (case-lambda ((g$T$20779$CSxK@) (if g$T$20779$CSxK@ (g$caddr$7399$CSxK@ (case-lambda ((g$V$20780$CSxK@) (g$regen$12580$CSxK@ (case-lambda ((g$V$20781$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$20782$CSxK@) (g$build-lambda$10269$CSxK@ g$C$20773$CSxK@ '#f g$V$20782$CSxK@ g$V$20781$CSxK@))) g$x$12593$CSxK@))) g$V$20780$CSxK@))) g$x$12593$CSxK@) (eqv? (case-lambda ((g$T$20783$CSxK@) (if g$T$20783$CSxK@ (cdr (case-lambda ((g$V$20784$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20785$CSxK@) ((case-lambda ((g$C$20772$CSxK@ g$ls$12595$CSxK@) (cons g$C$20772$CSxK@ '(primitive ellipsis-map) g$ls$12595$CSxK@))) g$C$20773$CSxK@ g$V$20785$CSxK@))) g$regen$12580$CSxK@ g$V$20784$CSxK@))) g$x$12593$CSxK@) (cdr (case-lambda ((g$V$20786$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20787$CSxK@) (car (case-lambda ((g$V$20788$CSxK@) (list (case-lambda ((g$V$20789$CSxK@) (cons g$C$20773$CSxK@ g$V$20789$CSxK@ g$V$20787$CSxK@))) 'primitive g$V$20788$CSxK@))) g$x$12593$CSxK@))) g$regen$12580$CSxK@ g$V$20786$CSxK@))) g$x$12593$CSxK@)))) g$t$12594$CSxK@ 'map)))) g$t$12594$CSxK@ 'lambda)))) g$t$12594$CSxK@ 'quote)))) g$t$12594$CSxK@ 'primitive)))) g$t$12594$CSxK@ 'ref))) g$C$20790$CSxK@ g$V$20791$CSxK@))) g$x$12593$CSxK@)))) (g$C$20800$CSxK@ (case-lambda ((g$C$20799$CSxK@ g$e$12581$CSxK@ g$r$12582$CSxK@ g$mr$12583$CSxK@) ((case-lambda ((g$C$20797$CSxK@ g$t$12584$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20798$CSxK@) ((case-lambda ((g$C$20796$CSxK@ g$ls/false$12585$CSxK@) (if g$ls/false$12585$CSxK@ (apply g$C$20796$CSxK@ (case-lambda ((g$C$20795$CSxK@ g$x$12586$CSxK@) (call-with-values g$C$20795$CSxK@ (case-lambda ((g$C$20792$CSxK@) (g$gen-syntax$12573$CSxK@ g$C$20792$CSxK@ g$e$12581$CSxK@ g$x$12586$CSxK@ g$r$12582$CSxK@ '() g$ellipsis?$10711$CSxK@ '#f))) (case-lambda ((g$C$20794$CSxK@ g$e$12589$CSxK@ g$maps$12590$CSxK@) ((case-lambda ((g$C$20793$CSxK@ g$maps$12591$CSxK@ g$e$12592$CSxK@) (g$regen$12580$CSxK@ g$C$20793$CSxK@ g$e$12592$CSxK@))) g$C$20794$CSxK@ g$maps$12590$CSxK@ g$e$12589$CSxK@)))))) g$ls/false$12585$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20796$CSxK@ '#f '"invalid syntax" g$t$12584$CSxK@)))) g$C$20797$CSxK@ g$V$20798$CSxK@))) g$t$12584$CSxK@ '(_ any)))) g$C$20799$CSxK@ g$e$12581$CSxK@)))))))))))))) g$C$20801$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$22783$CSxK@))) (library-letrec*-identity 'g$syntax-transformer$10716$CSxK@))) (g$core-macro-transformer$10717$CSxK@ g$core-macro-transformer$14259$CSxK@ ((case-lambda ((g$C$22784$CSxK@) (g$C$22784$CSxK@ (case-lambda ((g$C$20816$CSxK@ g$name$12737$CSxK@) ((case-lambda ((g$C$20802$CSxK@ g$t$12738$CSxK@) (eqv? (case-lambda ((g$T$20803$CSxK@) (if g$T$20803$CSxK@ (g$C$20802$CSxK@ g$quote-transformer$10670$CSxK@) (eqv? (case-lambda ((g$T$20804$CSxK@) (if g$T$20804$CSxK@ (g$C$20802$CSxK@ g$lambda-transformer$10672$CSxK@) (eqv? (case-lambda ((g$T$20805$CSxK@) (if g$T$20805$CSxK@ (g$C$20802$CSxK@ g$case-lambda-transformer$10671$CSxK@) (eqv? (case-lambda ((g$T$20806$CSxK@) (if g$T$20806$CSxK@ (g$C$20802$CSxK@ g$letrec-transformer$10660$CSxK@) (eqv? (case-lambda ((g$T$20807$CSxK@) (if g$T$20807$CSxK@ (g$C$20802$CSxK@ g$letrec*-transformer$10661$CSxK@) (eqv? (case-lambda ((g$T$20808$CSxK@) (if g$T$20808$CSxK@ (g$C$20802$CSxK@ g$if-transformer$10668$CSxK@) (eqv? (case-lambda ((g$T$20809$CSxK@) (if g$T$20809$CSxK@ (g$C$20802$CSxK@ g$foreign-call-transformer$10708$CSxK@) (eqv? (case-lambda ((g$T$20810$CSxK@) (if g$T$20810$CSxK@ (g$C$20802$CSxK@ g$syntax-case-transformer$10714$CSxK@) (eqv? (case-lambda ((g$T$20811$CSxK@) (if g$T$20811$CSxK@ (g$C$20802$CSxK@ g$syntax-transformer$10716$CSxK@) (eqv? (case-lambda ((g$T$20812$CSxK@) (if g$T$20812$CSxK@ (g$C$20802$CSxK@ g$type-descriptor-transformer$10663$CSxK@) (eqv? (case-lambda ((g$T$20813$CSxK@) (if g$T$20813$CSxK@ (g$C$20802$CSxK@ g$record-type-descriptor-transformer$10664$CSxK@) (eqv? (case-lambda ((g$T$20814$CSxK@) (if g$T$20814$CSxK@ (g$C$20802$CSxK@ g$record-constructor-descriptor-transformer$10665$CSxK@) (eqv? (case-lambda ((g$T$20815$CSxK@) (if g$T$20815$CSxK@ (g$C$20802$CSxK@ g$fluid-let-syntax-transformer$10662$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$20802$CSxK@ 'macro-transformer '"BUG: cannot find transformer" g$name$12737$CSxK@)))) g$t$12738$CSxK@ 'fluid-let-syntax)))) g$t$12738$CSxK@ 'record-constructor-descriptor)))) g$t$12738$CSxK@ 'record-type-descriptor)))) g$t$12738$CSxK@ 'type-descriptor)))) g$t$12738$CSxK@ 'syntax)))) g$t$12738$CSxK@ 'syntax-case)))) g$t$12738$CSxK@ 'foreign-call)))) g$t$12738$CSxK@ 'if)))) g$t$12738$CSxK@ 'letrec*)))) g$t$12738$CSxK@ 'letrec)))) g$t$12738$CSxK@ 'case-lambda)))) g$t$12738$CSxK@ 'lambda)))) g$t$12738$CSxK@ 'quote))) g$C$20816$CSxK@ g$name$12737$CSxK@)))))) (library-letrec*-identity 'g$core-macro-transformer$10717$CSxK@))) (g$file-options-macro$10718$CSxK@ g$file-options-macro$14260$CSxK@ ((case-lambda ((g$C$22785$CSxK@) (g$C$22785$CSxK@ (case-lambda ((g$C$20833$CSxK@ g$x$12739$CSxK@) ((case-lambda ((g$C$20832$CSxK@ g$valid-option?$12740$CSxK@) (begin (set! g$valid-option?$12740$CSxK@ (case-lambda ((g$C$20817$CSxK@ g$x$12745$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$20818$CSxK@) (if g$T$20818$CSxK@ (g$id->sym$10348$CSxK@ (case-lambda ((g$V$20819$CSxK@) (g$memq$6705$CSxK@ g$C$20817$CSxK@ g$V$20819$CSxK@ '(no-fail no-create no-truncate)))) g$x$12745$CSxK@) (g$C$20817$CSxK@ '#f)))) g$x$12745$CSxK@)))) ((case-lambda ((g$C$20830$CSxK@ g$t$12741$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20831$CSxK@) ((case-lambda ((g$C$20827$CSxK@ g$ls/false$12742$CSxK@) ((case-lambda ((g$J$20829$CSxK@) (if g$ls/false$12742$CSxK@ (apply g$J$20829$CSxK@ (case-lambda ((g$C$20820$CSxK@ g$opt*$12743$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$T$20821$CSxK@) (if g$T$20821$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$20822$CSxK@) (g$file-options-spec$9570$CSxK@ g$C$20820$CSxK@ g$V$20822$CSxK@))) g$id->sym$10348$CSxK@ g$opt*$12743$CSxK@) (g$C$20820$CSxK@ '#f)))) g$valid-option?$12740$CSxK@ g$opt*$12743$CSxK@))) g$ls/false$12742$CSxK@) (g$J$20829$CSxK@ '#f)))) (case-lambda ((g$T$20828$CSxK@) (if g$T$20828$CSxK@ (apply g$C$20827$CSxK@ (case-lambda ((g$C$20823$CSxK@ g$opt*$12744$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20824$CSxK@) (g$file-options-spec$9570$CSxK@ (case-lambda ((g$V$20825$CSxK@) (list (case-lambda ((g$V$20826$CSxK@) (g$bless$10673$CSxK@ g$C$20823$CSxK@ g$V$20826$CSxK@))) 'quote g$V$20825$CSxK@))) g$V$20824$CSxK@))) g$id->sym$10348$CSxK@ g$opt*$12744$CSxK@))) g$ls/false$12742$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20827$CSxK@ '#f '"invalid syntax" g$t$12741$CSxK@))))))) g$C$20830$CSxK@ g$V$20831$CSxK@))) g$t$12741$CSxK@ '(_ . each-any)))) g$C$20832$CSxK@ g$x$12739$CSxK@)))) g$C$20833$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$file-options-macro$10718$CSxK@))) (g$symbol-macro$10719$CSxK@ g$symbol-macro$14261$CSxK@ ((case-lambda ((g$C$22786$CSxK@) (g$C$22786$CSxK@ (case-lambda ((g$C$20844$CSxK@ g$x$12746$CSxK@ g$set$12747$CSxK@) ((case-lambda ((g$C$20842$CSxK@ g$t$12748$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20843$CSxK@) ((case-lambda ((g$C$20839$CSxK@ g$ls/false$12749$CSxK@) ((case-lambda ((g$J$20841$CSxK@) (if g$ls/false$12749$CSxK@ (apply g$J$20841$CSxK@ (case-lambda ((g$C$20834$CSxK@ g$name$12750$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$20835$CSxK@) (if g$T$20835$CSxK@ (g$id->sym$10348$CSxK@ (case-lambda ((g$V$20836$CSxK@) (g$memq$6705$CSxK@ g$C$20834$CSxK@ g$V$20836$CSxK@ g$set$12747$CSxK@))) g$name$12750$CSxK@) (g$C$20834$CSxK@ '#f)))) g$name$12750$CSxK@))) g$ls/false$12749$CSxK@) (g$J$20841$CSxK@ '#f)))) (case-lambda ((g$T$20840$CSxK@) (if g$T$20840$CSxK@ (apply g$C$20839$CSxK@ (case-lambda ((g$C$20837$CSxK@ g$name$12751$CSxK@) (list (case-lambda ((g$V$20838$CSxK@) (g$bless$10673$CSxK@ g$C$20837$CSxK@ g$V$20838$CSxK@))) 'quote g$name$12751$CSxK@))) g$ls/false$12749$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20839$CSxK@ '#f '"invalid syntax" g$t$12748$CSxK@))))))) g$C$20842$CSxK@ g$V$20843$CSxK@))) g$t$12748$CSxK@ '(_ any)))) g$C$20844$CSxK@ g$x$12746$CSxK@)))))) (library-letrec*-identity 'g$symbol-macro$10719$CSxK@))) (g$macro-transformer$10720$CSxK@ g$macro-transformer$14262$CSxK@ ((case-lambda ((g$C$22787$CSxK@) (g$C$22787$CSxK@ (case-lambda ((g$C$20887$CSxK@ g$x$12752$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$20888$CSxK@) (if g$T$20888$CSxK@ (g$C$20887$CSxK@ g$x$12752$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$20889$CSxK@) (if g$T$20889$CSxK@ ((case-lambda ((g$C$20848$CSxK@ g$t$12753$CSxK@) (eqv? (case-lambda ((g$T$20849$CSxK@) (if g$T$20849$CSxK@ (g$C$20848$CSxK@ g$define-record-type-macro$10704$CSxK@) (eqv? (case-lambda ((g$T$20850$CSxK@) (if g$T$20850$CSxK@ (g$C$20848$CSxK@ g$define-struct-macro$10703$CSxK@) (eqv? (case-lambda ((g$T$20851$CSxK@) (if g$T$20851$CSxK@ (g$C$20848$CSxK@ g$include-macro$10698$CSxK@) (eqv? (case-lambda ((g$T$20852$CSxK@) (if g$T$20852$CSxK@ (g$C$20848$CSxK@ g$cond-macro$10696$CSxK@) (eqv? (case-lambda ((g$T$20853$CSxK@) (if g$T$20853$CSxK@ (g$C$20848$CSxK@ g$let-macro$10676$CSxK@) (eqv? (case-lambda ((g$T$20854$CSxK@) (if g$T$20854$CSxK@ (g$C$20848$CSxK@ g$do-macro$10692$CSxK@) (eqv? (case-lambda ((g$T$20855$CSxK@) (if g$T$20855$CSxK@ (g$C$20848$CSxK@ g$or-macro$10694$CSxK@) (eqv? (case-lambda ((g$T$20856$CSxK@) (if g$T$20856$CSxK@ (g$C$20848$CSxK@ g$and-macro$10695$CSxK@) (eqv? (case-lambda ((g$T$20857$CSxK@) (if g$T$20857$CSxK@ (g$C$20848$CSxK@ g$let*-macro$10693$CSxK@) (eqv? (case-lambda ((g$T$20858$CSxK@) (if g$T$20858$CSxK@ (g$C$20848$CSxK@ g$let-values-macro$10677$CSxK@) (eqv? (case-lambda ((g$T$20859$CSxK@) (if g$T$20859$CSxK@ (g$C$20848$CSxK@ g$let*-values-macro$10678$CSxK@) (eqv? (case-lambda ((g$T$20860$CSxK@) (if g$T$20860$CSxK@ (g$C$20848$CSxK@ g$syntax-rules-macro$10700$CSxK@) (eqv? (case-lambda ((g$T$20861$CSxK@) (if g$T$20861$CSxK@ (g$C$20848$CSxK@ g$quasiquote-macro$10701$CSxK@) (eqv? (case-lambda ((g$T$20862$CSxK@) (if g$T$20862$CSxK@ (g$C$20848$CSxK@ g$quasisyntax-macro$10702$CSxK@) (eqv? (case-lambda ((g$T$20863$CSxK@) (if g$T$20863$CSxK@ (g$C$20848$CSxK@ g$with-syntax-macro$10674$CSxK@) (eqv? (case-lambda ((g$T$20864$CSxK@) (if g$T$20864$CSxK@ (g$C$20848$CSxK@ g$when-macro$10666$CSxK@) (eqv? (case-lambda ((g$T$20865$CSxK@) (if g$T$20865$CSxK@ (g$C$20848$CSxK@ g$unless-macro$10667$CSxK@) (eqv? (case-lambda ((g$T$20866$CSxK@) (if g$T$20866$CSxK@ (g$C$20848$CSxK@ g$case-macro$10669$CSxK@) (eqv? (case-lambda ((g$T$20867$CSxK@) (if g$T$20867$CSxK@ (g$C$20848$CSxK@ g$identifier-syntax-macro$10691$CSxK@) (eqv? (case-lambda ((g$T$20868$CSxK@) (if g$T$20868$CSxK@ (g$C$20848$CSxK@ g$time-macro$10687$CSxK@) (eqv? (case-lambda ((g$T$20869$CSxK@) (if g$T$20869$CSxK@ (g$C$20848$CSxK@ g$delay-macro$10688$CSxK@) (eqv? (case-lambda ((g$T$20870$CSxK@) (if g$T$20870$CSxK@ (g$C$20848$CSxK@ g$assert-macro$10689$CSxK@) (eqv? (case-lambda ((g$T$20871$CSxK@) (if g$T$20871$CSxK@ (g$C$20848$CSxK@ g$endianness-macro$10690$CSxK@) (eqv? (case-lambda ((g$T$20872$CSxK@) (if g$T$20872$CSxK@ (g$C$20848$CSxK@ g$guard-macro$10685$CSxK@) (eqv? (case-lambda ((g$T$20873$CSxK@) (if g$T$20873$CSxK@ (g$C$20848$CSxK@ g$define-enumeration-macro$10686$CSxK@) (eqv? (case-lambda ((g$T$20874$CSxK@) (if g$T$20874$CSxK@ (g$C$20848$CSxK@ g$trace-lambda-macro$10679$CSxK@) (eqv? (case-lambda ((g$T$20875$CSxK@) (if g$T$20875$CSxK@ (g$C$20848$CSxK@ g$trace-define-macro$10680$CSxK@) (eqv? (case-lambda ((g$T$20876$CSxK@) (if g$T$20876$CSxK@ (g$C$20848$CSxK@ g$trace-define-syntax-macro$10681$CSxK@) (eqv? (case-lambda ((g$T$20877$CSxK@) (if g$T$20877$CSxK@ (g$C$20848$CSxK@ g$trace-let-syntax-macro$10683$CSxK@) (eqv? (case-lambda ((g$T$20878$CSxK@) (if g$T$20878$CSxK@ (g$C$20848$CSxK@ g$trace-letrec-syntax-macro$10684$CSxK@) (eqv? (case-lambda ((g$T$20879$CSxK@) (if g$T$20879$CSxK@ (g$C$20848$CSxK@ g$define-condition-type-macro$10705$CSxK@) (eqv? (case-lambda ((g$T$20880$CSxK@) (if g$T$20880$CSxK@ (g$C$20848$CSxK@ g$parameterize-macro$10707$CSxK@) (eqv? (case-lambda ((g$T$20881$CSxK@) (if g$T$20881$CSxK@ (g$C$20848$CSxK@ g$include-into-macro$10699$CSxK@) (eqv? (case-lambda ((g$T$20882$CSxK@) (if g$T$20882$CSxK@ (g$C$20848$CSxK@ (case-lambda ((g$C$20845$CSxK@ g$x$12754$CSxK@) (g$symbol-macro$10719$CSxK@ g$C$20845$CSxK@ g$x$12754$CSxK@ '(none lf cr crlf nel crnel ls))))) (eqv? (case-lambda ((g$T$20883$CSxK@) (if g$T$20883$CSxK@ (g$C$20848$CSxK@ (case-lambda ((g$C$20846$CSxK@ g$x$12755$CSxK@) (g$symbol-macro$10719$CSxK@ g$C$20846$CSxK@ g$x$12755$CSxK@ '(ignore raise replace))))) (eqv? (case-lambda ((g$T$20884$CSxK@) (if g$T$20884$CSxK@ (g$C$20848$CSxK@ (case-lambda ((g$C$20847$CSxK@ g$x$12756$CSxK@) (g$symbol-macro$10719$CSxK@ g$C$20847$CSxK@ g$x$12756$CSxK@ '(none line block))))) (eqv? (case-lambda ((g$T$20885$CSxK@) (if g$T$20885$CSxK@ (g$C$20848$CSxK@ g$file-options-macro$10718$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$20886$CSxK@) (if g$T$20886$CSxK@ (g$C$20848$CSxK@ g$incorrect-usage-macro$10706$CSxK@) (g$error$7673$CSxK@ g$C$20848$CSxK@ 'macro-transformer '"BUG: invalid macro" g$x$12752$CSxK@)))) g$t$12753$CSxK@ '(... => _ else unquote unquote-splicing unsyntax unsyntax-splicing fields mutable immutable parent protocol sealed opaque nongenerative parent-rtd))))) g$t$12753$CSxK@ 'file-options)))) g$t$12753$CSxK@ 'buffer-mode)))) g$t$12753$CSxK@ 'error-handling-mode)))) g$t$12753$CSxK@ 'eol-style)))) g$t$12753$CSxK@ 'include-into)))) g$t$12753$CSxK@ 'parameterize)))) g$t$12753$CSxK@ 'define-condition-type)))) g$t$12753$CSxK@ 'trace-letrec-syntax)))) g$t$12753$CSxK@ 'trace-let-syntax)))) g$t$12753$CSxK@ 'trace-define-syntax)))) g$t$12753$CSxK@ 'trace-define)))) g$t$12753$CSxK@ 'trace-lambda)))) g$t$12753$CSxK@ 'define-enumeration)))) g$t$12753$CSxK@ 'guard)))) g$t$12753$CSxK@ 'endianness)))) g$t$12753$CSxK@ 'assert)))) g$t$12753$CSxK@ 'delay)))) g$t$12753$CSxK@ 'time)))) g$t$12753$CSxK@ 'identifier-syntax)))) g$t$12753$CSxK@ 'case)))) g$t$12753$CSxK@ 'unless)))) g$t$12753$CSxK@ 'when)))) g$t$12753$CSxK@ 'with-syntax)))) g$t$12753$CSxK@ 'quasisyntax)))) g$t$12753$CSxK@ 'quasiquote)))) g$t$12753$CSxK@ 'syntax-rules)))) g$t$12753$CSxK@ 'let*-values)))) g$t$12753$CSxK@ 'let-values)))) g$t$12753$CSxK@ 'let*)))) g$t$12753$CSxK@ 'and)))) g$t$12753$CSxK@ 'or)))) g$t$12753$CSxK@ 'do)))) g$t$12753$CSxK@ 'let)))) g$t$12753$CSxK@ 'cond)))) g$t$12753$CSxK@ 'include)))) g$t$12753$CSxK@ 'define-struct)))) g$t$12753$CSxK@ 'define-record-type))) g$C$20887$CSxK@ g$x$12752$CSxK@) (g$error$7673$CSxK@ g$C$20887$CSxK@ 'core-macro-transformer '"BUG: invalid macro" g$x$12752$CSxK@)))) g$x$12752$CSxK@)))) g$x$12752$CSxK@)))))) (library-letrec*-identity 'g$macro-transformer$10720$CSxK@))) (g$local-macro-transformer$10721$CSxK@ g$local-macro-transformer$14263$CSxK@ ((case-lambda ((g$C$22788$CSxK@) (g$C$22788$CSxK@ (case-lambda ((g$C$20890$CSxK@ g$x$12757$CSxK@) (car g$C$20890$CSxK@ g$x$12757$CSxK@)))))) (library-letrec*-identity 'g$local-macro-transformer$10721$CSxK@))) (g$do-macro-call$10722$CSxK@ g$do-macro-call$14264$CSxK@ ((case-lambda ((g$C$22789$CSxK@) (g$C$22789$CSxK@ (case-lambda ((g$C$20930$CSxK@ g$transformer$12758$CSxK@ g$expr$12759$CSxK@ g$r$12760$CSxK@) ((case-lambda ((g$C$20927$CSxK@ g$return$12761$CSxK@) (begin (set! g$return$12761$CSxK@ (case-lambda ((g$C$20903$CSxK@ g$x$12769$CSxK@) ((case-lambda ((g$C$20902$CSxK@ g$f$12770$CSxK@) ((case-lambda ((g$C$20892$CSxK@ g$f$20891$CSxK@) (begin (set! g$f$12770$CSxK@ g$f$20891$CSxK@) (g$C$20892$CSxK@ g$f$12770$CSxK@)))) g$C$20902$CSxK@ (case-lambda ((g$C$20893$CSxK@ g$x$12771$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$V$20894$CSxK@) (not (case-lambda ((g$T$20895$CSxK@) (if g$T$20895$CSxK@ (pair? (case-lambda ((g$T$20896$CSxK@) (if g$T$20896$CSxK@ (car (case-lambda ((g$V$20897$CSxK@) (g$f$12770$CSxK@ (case-lambda (g$IGNORE$20898$CSxK@ (cdr (case-lambda ((g$V$20899$CSxK@) (g$f$12770$CSxK@ g$C$20893$CSxK@ g$V$20899$CSxK@))) g$x$12771$CSxK@))) g$V$20897$CSxK@))) g$x$12771$CSxK@) (g$vector?$7382$CSxK@ (case-lambda ((g$T$20900$CSxK@) (if g$T$20900$CSxK@ (g$vector-for-each$7445$CSxK@ g$C$20893$CSxK@ g$f$12770$CSxK@ g$x$12771$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$T$20901$CSxK@) (if g$T$20901$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20893$CSxK@ '#f '"raw symbol encountered in output of macro" g$expr$12759$CSxK@ g$x$12771$CSxK@) (void g$C$20893$CSxK@)))) g$x$12771$CSxK@)))) g$x$12771$CSxK@)))) g$x$12771$CSxK@) (void g$C$20893$CSxK@)))) g$V$20894$CSxK@))) g$x$12771$CSxK@)))))) (case-lambda ((g$V$20904$CSxK@) (g$V$20904$CSxK@ (case-lambda (g$IGNORE$20905$CSxK@ (g$gen-mark$10331$CSxK@ (case-lambda ((g$V$20906$CSxK@) (g$add-mark$10336$CSxK@ g$C$20903$CSxK@ g$V$20906$CSxK@ g$x$12769$CSxK@ g$expr$12759$CSxK@)))))) g$x$12769$CSxK@))) uninitialized)))) (g$add-mark$10336$CSxK@ (case-lambda ((g$V$20928$CSxK@) (g$transformer$12758$CSxK@ (case-lambda ((g$V$20929$CSxK@) ((case-lambda ((g$C$20924$CSxK@ g$x$12762$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$20925$CSxK@) (if g$T$20925$CSxK@ (g$x$12762$CSxK@ (case-lambda ((g$V$20926$CSxK@) (g$return$12761$CSxK@ g$C$20924$CSxK@ g$V$20926$CSxK@))) (case-lambda ((g$C$20918$CSxK@ g$id$12763$CSxK@) ((case-lambda ((g$J$20921$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$20922$CSxK@) (not (case-lambda ((g$T$20923$CSxK@) (if g$T$20923$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$20921$CSxK@ 'rho '"not an identifier" g$id$12763$CSxK@) (void g$J$20921$CSxK@)))) g$V$20922$CSxK@))) g$id$12763$CSxK@))) (case-lambda (g$IGNORE$20919$CSxK@ (g$id->label$10360$CSxK@ (case-lambda ((g$V$20920$CSxK@) ((case-lambda ((g$C$20916$CSxK@ g$label$12764$CSxK@) (g$label->binding$10362$CSxK@ (case-lambda ((g$V$20917$CSxK@) ((case-lambda ((g$C$20914$CSxK@ g$binding$12765$CSxK@) (car (case-lambda ((g$V$20915$CSxK@) ((case-lambda ((g$C$20909$CSxK@ g$t$12766$CSxK@) (eqv? (case-lambda ((g$T$20910$CSxK@) (if g$T$20910$CSxK@ (g$cadr$7393$CSxK@ g$C$20909$CSxK@ g$binding$12765$CSxK@) (eqv? (case-lambda ((g$T$20911$CSxK@) (if g$T$20911$CSxK@ (g$cddr$7395$CSxK@ (case-lambda ((g$V$20912$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$20913$CSxK@) ((case-lambda ((g$C$20907$CSxK@ g$lib$12767$CSxK@ g$loc$12768$CSxK@) (g$visit-library$10084$CSxK@ (case-lambda (g$IGNORE$20908$CSxK@ (symbol-value g$C$20907$CSxK@ g$loc$12768$CSxK@))) g$lib$12767$CSxK@))) g$C$20909$CSxK@ g$V$20913$CSxK@ g$V$20912$CSxK@))) g$binding$12765$CSxK@))) g$binding$12765$CSxK@) (g$C$20909$CSxK@ '#f)))) g$t$12766$CSxK@ 'global-ctv)))) g$t$12766$CSxK@ 'local-ctv))) g$C$20914$CSxK@ g$V$20915$CSxK@))) g$binding$12765$CSxK@))) g$C$20916$CSxK@ g$V$20917$CSxK@))) g$label$12764$CSxK@ g$r$12760$CSxK@))) g$C$20918$CSxK@ g$V$20920$CSxK@))) g$id$12763$CSxK@))))))) (g$return$12761$CSxK@ g$C$20924$CSxK@ g$x$12762$CSxK@)))) g$x$12762$CSxK@))) g$C$20927$CSxK@ g$V$20929$CSxK@))) g$V$20928$CSxK@))) g$anti-mark$10332$CSxK@ g$expr$12759$CSxK@ '#f)))) g$C$20930$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$do-macro-call$10722$CSxK@))) (g$chi-macro$10723$CSxK@ g$chi-macro$14265$CSxK@ ((case-lambda ((g$C$22790$CSxK@) (g$C$22790$CSxK@ (case-lambda ((g$C$20931$CSxK@ g$p$12772$CSxK@ g$e$12773$CSxK@ g$r$12774$CSxK@) (g$macro-transformer$10720$CSxK@ (case-lambda ((g$V$20932$CSxK@) (g$do-macro-call$10722$CSxK@ g$C$20931$CSxK@ g$V$20932$CSxK@ g$e$12773$CSxK@ g$r$12774$CSxK@))) g$p$12772$CSxK@)))))) (library-letrec*-identity 'g$chi-macro$10723$CSxK@))) (g$chi-local-macro$10724$CSxK@ g$chi-local-macro$14266$CSxK@ ((case-lambda ((g$C$22791$CSxK@) (g$C$22791$CSxK@ (case-lambda ((g$C$20933$CSxK@ g$p$12775$CSxK@ g$e$12776$CSxK@ g$r$12777$CSxK@) (g$local-macro-transformer$10721$CSxK@ (case-lambda ((g$V$20934$CSxK@) (g$do-macro-call$10722$CSxK@ g$C$20933$CSxK@ g$V$20934$CSxK@ g$e$12776$CSxK@ g$r$12777$CSxK@))) g$p$12775$CSxK@)))))) (library-letrec*-identity 'g$chi-local-macro$10724$CSxK@))) (g$chi-global-macro$10725$CSxK@ g$chi-global-macro$14267$CSxK@ ((case-lambda ((g$C$22792$CSxK@) (g$C$22792$CSxK@ (case-lambda ((g$C$20943$CSxK@ g$p$12778$CSxK@ g$e$12779$CSxK@ g$r$12780$CSxK@) (cdr (case-lambda ((g$V$20944$CSxK@) (car (case-lambda ((g$V$20945$CSxK@) ((case-lambda ((g$C$20940$CSxK@ g$lib$12781$CSxK@ g$loc$12782$CSxK@) (g$visit-library$10084$CSxK@ (case-lambda (g$IGNORE$20941$CSxK@ (symbol-value (case-lambda ((g$V$20942$CSxK@) ((case-lambda ((g$C$20936$CSxK@ g$x$12783$CSxK@) ((case-lambda ((g$J$20938$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$T$20939$CSxK@) (if g$T$20939$CSxK@ (g$J$20938$CSxK@ g$x$12783$CSxK@) (g$assertion-violation$7672$CSxK@ g$J$20938$CSxK@ 'chi-global-macro '"BUG: not a procedure" g$x$12783$CSxK@)))) g$x$12783$CSxK@))) (case-lambda ((g$V$20937$CSxK@) ((case-lambda ((g$C$20935$CSxK@ g$transformer$12784$CSxK@) (g$do-macro-call$10722$CSxK@ g$C$20935$CSxK@ g$transformer$12784$CSxK@ g$e$12779$CSxK@ g$r$12780$CSxK@))) g$C$20936$CSxK@ g$V$20937$CSxK@)))))) g$C$20940$CSxK@ g$V$20942$CSxK@))) g$loc$12782$CSxK@))) g$lib$12781$CSxK@))) g$C$20943$CSxK@ g$V$20945$CSxK@ g$V$20944$CSxK@))) g$p$12778$CSxK@))) g$p$12778$CSxK@)))))) (library-letrec*-identity 'g$chi-global-macro$10725$CSxK@))) (g$chi-expr*$10726$CSxK@ g$chi-expr*$14268$CSxK@ ((case-lambda ((g$C$22793$CSxK@) (g$C$22793$CSxK@ (case-lambda ((g$C$20949$CSxK@ g$e*$12785$CSxK@ g$r$12786$CSxK@ g$mr$12787$CSxK@) (null? (case-lambda ((g$T$20950$CSxK@) (if g$T$20950$CSxK@ (g$C$20949$CSxK@ '()) (car (case-lambda ((g$V$20951$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$20952$CSxK@) ((case-lambda ((g$C$20946$CSxK@ g$e$12788$CSxK@) (cdr (case-lambda ((g$V$20947$CSxK@) (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$20948$CSxK@) (cons g$C$20946$CSxK@ g$e$12788$CSxK@ g$V$20948$CSxK@))) g$V$20947$CSxK@ g$r$12786$CSxK@ g$mr$12787$CSxK@))) g$e*$12785$CSxK@))) g$C$20949$CSxK@ g$V$20952$CSxK@))) g$V$20951$CSxK@ g$r$12786$CSxK@ g$mr$12787$CSxK@))) g$e*$12785$CSxK@)))) g$e*$12785$CSxK@)))))) (library-letrec*-identity 'g$chi-expr*$10726$CSxK@))) (g$chi-application$10727$CSxK@ g$chi-application$14269$CSxK@ ((case-lambda ((g$C$22794$CSxK@) (g$C$22794$CSxK@ (case-lambda ((g$C$20960$CSxK@ g$e$12789$CSxK@ g$r$12790$CSxK@ g$mr$12791$CSxK@) ((case-lambda ((g$C$20958$CSxK@ g$t$12792$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20959$CSxK@) ((case-lambda ((g$C$20957$CSxK@ g$ls/false$12793$CSxK@) (if g$ls/false$12793$CSxK@ (apply g$C$20957$CSxK@ (case-lambda ((g$C$20955$CSxK@ g$rator$12794$CSxK@ g$rands$12795$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$20956$CSxK@) ((case-lambda ((g$C$20953$CSxK@ g$rator$12796$CSxK@) (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$20954$CSxK@) (cons g$C$20953$CSxK@ g$rator$12796$CSxK@ g$V$20954$CSxK@))) g$rands$12795$CSxK@ g$r$12790$CSxK@ g$mr$12791$CSxK@))) g$C$20955$CSxK@ g$V$20956$CSxK@))) g$rator$12794$CSxK@ g$r$12790$CSxK@ g$mr$12791$CSxK@))) g$ls/false$12793$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20957$CSxK@ '#f '"invalid syntax" g$t$12792$CSxK@)))) g$C$20958$CSxK@ g$V$20959$CSxK@))) g$t$12792$CSxK@ '(any . each-any)))) g$C$20960$CSxK@ g$e$12789$CSxK@)))))) (library-letrec*-identity 'g$chi-application$10727$CSxK@))) (g$chi-expr$10728$CSxK@ g$chi-expr$14270$CSxK@ ((case-lambda ((g$C$22795$CSxK@) (g$C$22795$CSxK@ (case-lambda ((g$C$21039$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@) (call-with-values g$C$21039$CSxK@ (case-lambda ((g$C$20961$CSxK@) (g$syntax-type$10367$CSxK@ g$C$20961$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@))) (case-lambda ((g$C$21038$CSxK@ g$type$12803$CSxK@ g$value$12804$CSxK@ g$kwd$12805$CSxK@) ((case-lambda ((g$C$21037$CSxK@ g$kwd$12806$CSxK@ g$value$12807$CSxK@ g$type$12808$CSxK@) ((case-lambda ((g$C$21012$CSxK@ g$t$12809$CSxK@) (eqv? (case-lambda ((g$T$21013$CSxK@) (if g$T$21013$CSxK@ (g$core-macro-transformer$10717$CSxK@ (case-lambda ((g$V$21014$CSxK@) ((case-lambda ((g$C$20962$CSxK@ g$transformer$12810$CSxK@) (g$transformer$12810$CSxK@ g$C$20962$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@))) g$C$21012$CSxK@ g$V$21014$CSxK@))) g$value$12807$CSxK@) (eqv? (case-lambda ((g$T$21015$CSxK@) (if g$T$21015$CSxK@ (car (case-lambda ((g$V$21016$CSxK@) ((case-lambda ((g$C$20966$CSxK@ g$lib$12811$CSxK@) (cdr (case-lambda ((g$V$20967$CSxK@) ((case-lambda ((g$C$20963$CSxK@ g$loc$12812$CSxK@) (g$inv-collector$10764$CSxK@ (case-lambda ((g$V$20964$CSxK@) (g$V$20964$CSxK@ (case-lambda (g$IGNORE$20965$CSxK@ (g$C$20963$CSxK@ g$loc$12812$CSxK@))) g$lib$12811$CSxK@)))))) g$C$20966$CSxK@ g$V$20967$CSxK@))) g$value$12807$CSxK@))) g$C$21012$CSxK@ g$V$21016$CSxK@))) g$value$12807$CSxK@) (eqv? (case-lambda ((g$T$21017$CSxK@) (if g$T$21017$CSxK@ ((case-lambda ((g$C$20968$CSxK@ g$name$12813$CSxK@) (list g$C$20968$CSxK@ 'primitive g$name$12813$CSxK@))) g$C$21012$CSxK@ g$value$12807$CSxK@) (eqv? (case-lambda ((g$T$21018$CSxK@) (if g$T$21018$CSxK@ (g$chi-application$10727$CSxK@ g$C$21012$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@) (eqv? (case-lambda ((g$T$21019$CSxK@) (if g$T$21019$CSxK@ (g$lexical-var$10654$CSxK@ (case-lambda ((g$V$21020$CSxK@) ((case-lambda ((g$C$20969$CSxK@ g$lex$12814$CSxK@) (g$C$20969$CSxK@ g$lex$12814$CSxK@))) g$C$21012$CSxK@ g$V$21020$CSxK@))) g$value$12807$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21021$CSxK@) (if g$T$21021$CSxK@ (g$chi-global-macro$10725$CSxK@ (case-lambda ((g$V$21022$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21012$CSxK@ g$V$21022$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@))) g$value$12807$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21023$CSxK@) (if g$T$21023$CSxK@ (g$chi-local-macro$10724$CSxK@ (case-lambda ((g$V$21024$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21012$CSxK@ g$V$21024$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@))) g$value$12807$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21025$CSxK@) (if g$T$21025$CSxK@ (g$chi-macro$10723$CSxK@ (case-lambda ((g$V$21026$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21012$CSxK@ g$V$21026$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@))) g$value$12807$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@) (eqv? (case-lambda ((g$T$21027$CSxK@) (if g$T$21027$CSxK@ ((case-lambda ((g$C$20970$CSxK@ g$datum$12815$CSxK@) (list g$C$20970$CSxK@ 'quote g$datum$12815$CSxK@))) g$C$21012$CSxK@ g$value$12807$CSxK@) (eqv? (case-lambda ((g$T$21028$CSxK@) (if g$T$21028$CSxK@ (g$chi-set!$10729$CSxK@ g$C$21012$CSxK@ g$e$12797$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@) (eqv? (case-lambda ((g$T$21029$CSxK@) (if g$T$21029$CSxK@ ((case-lambda ((g$C$20975$CSxK@ g$t$12816$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$20976$CSxK@) ((case-lambda ((g$C$20974$CSxK@ g$ls/false$12817$CSxK@) (if g$ls/false$12817$CSxK@ (apply g$C$20974$CSxK@ (case-lambda ((g$C$20971$CSxK@ g$x$12818$CSxK@ g$x*$12819$CSxK@) (cons (case-lambda ((g$V$20972$CSxK@) (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$20973$CSxK@) (g$build-sequence$10272$CSxK@ g$C$20971$CSxK@ '#f g$V$20973$CSxK@))) g$V$20972$CSxK@ g$r$12798$CSxK@ g$mr$12799$CSxK@))) g$x$12818$CSxK@ g$x*$12819$CSxK@))) g$ls/false$12817$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$20974$CSxK@ '#f '"invalid syntax" g$t$12816$CSxK@)))) g$C$20975$CSxK@ g$V$20976$CSxK@))) g$t$12816$CSxK@ '(_ any . each-any)))) g$C$21012$CSxK@ g$e$12797$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21030$CSxK@) (if g$T$21030$CSxK@ ((case-lambda ((g$C$21003$CSxK@ g$t$12820$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21004$CSxK@) ((case-lambda ((g$C$21000$CSxK@ g$ls/false$12821$CSxK@) ((case-lambda ((g$J$21002$CSxK@) (if g$ls/false$12821$CSxK@ (apply g$J$21002$CSxK@ (case-lambda ((g$C$20977$CSxK@ g$xlhs*$12822$CSxK@ g$xrhs*$12823$CSxK@ g$xbody$12824$CSxK@ g$xbody*$12825$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$V$20978$CSxK@) (not (case-lambda ((g$T$20979$CSxK@) (if g$T$20979$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$20977$CSxK@ '#f '"invalid identifiers" g$e$12797$CSxK@) (void g$C$20977$CSxK@)))) g$V$20978$CSxK@))) g$xlhs*$12822$CSxK@))) g$ls/false$12821$CSxK@) (g$J$21002$CSxK@ '#f)))) (case-lambda ((g$T$21001$CSxK@) (if g$T$21001$CSxK@ (apply g$C$21000$CSxK@ (case-lambda ((g$C$20998$CSxK@ g$xlhs*$12826$CSxK@ g$xrhs*$12827$CSxK@ g$xbody$12828$CSxK@ g$xbody*$12829$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20999$CSxK@) ((case-lambda ((g$C$20996$CSxK@ g$xlab*$12830$CSxK@) (g$make-full-rib$10313$CSxK@ (case-lambda ((g$V$20997$CSxK@) ((case-lambda ((g$C$20994$CSxK@ g$xrib$12831$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20995$CSxK@) ((case-lambda ((g$C$20981$CSxK@ g$xb*$12832$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20982$CSxK@) (append (case-lambda ((g$V$20983$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20984$CSxK@) (append (case-lambda ((g$V$20985$CSxK@) (cons (case-lambda ((g$V$20986$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$20987$CSxK@) (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$20988$CSxK@) (g$build-sequence$10272$CSxK@ g$C$20981$CSxK@ '#f g$V$20988$CSxK@))) g$V$20987$CSxK@ g$V$20985$CSxK@ g$V$20983$CSxK@))) (case-lambda ((g$C$20980$CSxK@ g$x$12833$CSxK@) (g$add-subst$10337$CSxK@ g$C$20980$CSxK@ g$xrib$12831$CSxK@ g$x$12833$CSxK@))) g$V$20986$CSxK@))) g$xbody$12828$CSxK@ g$xbody*$12829$CSxK@))) g$V$20984$CSxK@ g$r$12798$CSxK@))) cons g$xlab*$12830$CSxK@ g$xb*$12832$CSxK@))) g$V$20982$CSxK@ g$mr$12799$CSxK@))) cons g$xlab*$12830$CSxK@ g$xb*$12832$CSxK@))) g$C$20994$CSxK@ g$V$20995$CSxK@))) (case-lambda ((g$C$20989$CSxK@ g$x$12834$CSxK@) ((case-lambda ((g$J$20992$CSxK@) (eq? (case-lambda ((g$T$20993$CSxK@) (if g$T$20993$CSxK@ (g$J$20992$CSxK@ g$x$12834$CSxK@) (g$add-subst$10337$CSxK@ g$J$20992$CSxK@ g$xrib$12831$CSxK@ g$x$12834$CSxK@)))) g$type$12808$CSxK@ 'let-syntax))) (case-lambda ((g$V$20990$CSxK@) (g$expand-transformer$10757$CSxK@ (case-lambda ((g$V$20991$CSxK@) (g$make-eval-transformer$10389$CSxK@ g$C$20989$CSxK@ g$V$20991$CSxK@))) g$V$20990$CSxK@ g$mr$12799$CSxK@)))))) g$xrhs*$12827$CSxK@))) g$C$20996$CSxK@ g$V$20997$CSxK@))) g$xlhs*$12826$CSxK@ g$xlab*$12830$CSxK@))) g$C$20998$CSxK@ g$V$20999$CSxK@))) g$gen-label$10284$CSxK@ g$xlhs*$12826$CSxK@))) g$ls/false$12821$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21000$CSxK@ '#f '"invalid syntax" g$t$12820$CSxK@))))))) g$C$21003$CSxK@ g$V$21004$CSxK@))) g$t$12820$CSxK@ '(_ #(each (any any)) any . each-any)))) g$C$21012$CSxK@ g$e$12797$CSxK@) (eqv? (case-lambda ((g$T$21031$CSxK@) (if g$T$21031$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21012$CSxK@ '#f '"identifier out of context" g$e$12797$CSxK@) (eqv? (case-lambda ((g$T$21032$CSxK@) (if g$T$21032$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21012$CSxK@ '#f '"reference to pattern variable outside a syntax form" g$e$12797$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21033$CSxK@) (if g$T$21033$CSxK@ ((case-lambda ((g$C$21005$CSxK@ g$t$12835$CSxK@) (eqv? (case-lambda ((g$T$21006$CSxK@) (if g$T$21006$CSxK@ (g$C$21005$CSxK@ '"a definition") (eqv? (case-lambda ((g$T$21007$CSxK@) (if g$T$21007$CSxK@ (g$C$21005$CSxK@ '"a define-syntax") (eqv? (case-lambda ((g$T$21008$CSxK@) (if g$T$21008$CSxK@ (g$C$21005$CSxK@ '"a module definition") (eqv? (case-lambda ((g$T$21009$CSxK@) (if g$T$21009$CSxK@ (g$C$21005$CSxK@ '"a library definition") (eqv? (case-lambda ((g$T$21010$CSxK@) (if g$T$21010$CSxK@ (g$C$21005$CSxK@ '"an import declaration") (eqv? (case-lambda ((g$T$21011$CSxK@) (if g$T$21011$CSxK@ (g$C$21005$CSxK@ '"an export declaration") (g$C$21005$CSxK@ '"a non-expression")))) g$t$12835$CSxK@ 'export)))) g$t$12835$CSxK@ 'import)))) g$t$12835$CSxK@ 'library)))) g$t$12835$CSxK@ 'module)))) g$t$12835$CSxK@ 'define-syntax)))) g$t$12835$CSxK@ 'define))) (case-lambda ((g$V$21034$CSxK@) (string-append (case-lambda ((g$V$21035$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21012$CSxK@ '#f g$V$21035$CSxK@ g$e$12797$CSxK@))) g$V$21034$CSxK@ '" was found where an expression was expected"))) g$type$12808$CSxK@) (eqv? (case-lambda ((g$T$21036$CSxK@) (if g$T$21036$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21012$CSxK@ '#f '"attempt to reference an unexportable variable" g$e$12797$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21012$CSxK@ '#f '"invalid expression" g$e$12797$CSxK@)))) g$t$12809$CSxK@ 'mutable)))) g$t$12809$CSxK@ '(define define-syntax module import library))))) g$t$12809$CSxK@ 'syntax)))) g$t$12809$CSxK@ 'displaced-lexical)))) g$t$12809$CSxK@ '(let-syntax letrec-syntax))))) g$t$12809$CSxK@ 'begin)))) g$t$12809$CSxK@ 'set!)))) g$t$12809$CSxK@ 'constant)))) g$t$12809$CSxK@ '(macro macro!))))) g$t$12809$CSxK@ '(local-macro local-macro!))))) g$t$12809$CSxK@ '(global-macro global-macro!))))) g$t$12809$CSxK@ 'lexical)))) g$t$12809$CSxK@ 'call)))) g$t$12809$CSxK@ 'core-prim)))) g$t$12809$CSxK@ 'global)))) g$t$12809$CSxK@ 'core-macro))) g$C$21037$CSxK@ g$type$12808$CSxK@))) g$C$21038$CSxK@ g$kwd$12805$CSxK@ g$value$12804$CSxK@ g$type$12803$CSxK@))))))))) (library-letrec*-identity 'g$chi-expr$10728$CSxK@))) (g$chi-set!$10729$CSxK@ g$chi-set!$14271$CSxK@ ((case-lambda ((g$C$22796$CSxK@) (g$C$22796$CSxK@ (case-lambda ((g$C$21062$CSxK@ g$e$12836$CSxK@ g$r$12837$CSxK@ g$mr$12838$CSxK@) ((case-lambda ((g$C$21060$CSxK@ g$t$12839$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21061$CSxK@) ((case-lambda ((g$C$21057$CSxK@ g$ls/false$12840$CSxK@) ((case-lambda ((g$J$21059$CSxK@) (if g$ls/false$12840$CSxK@ (apply g$J$21059$CSxK@ (case-lambda ((g$C$21040$CSxK@ g$x$12841$CSxK@ g$v$12842$CSxK@) (g$id?$10347$CSxK@ g$C$21040$CSxK@ g$x$12841$CSxK@))) g$ls/false$12840$CSxK@) (g$J$21059$CSxK@ '#f)))) (case-lambda ((g$T$21058$CSxK@) (if g$T$21058$CSxK@ (apply g$C$21057$CSxK@ (case-lambda ((g$C$21056$CSxK@ g$x$12843$CSxK@ g$v$12844$CSxK@) (call-with-values g$C$21056$CSxK@ (case-lambda ((g$C$21041$CSxK@) (g$syntax-type$10367$CSxK@ g$C$21041$CSxK@ g$x$12843$CSxK@ g$r$12837$CSxK@))) (case-lambda ((g$C$21055$CSxK@ g$type$12848$CSxK@ g$value$12849$CSxK@ g$kwd$12850$CSxK@) ((case-lambda ((g$C$21054$CSxK@ g$kwd$12851$CSxK@ g$value$12852$CSxK@ g$type$12853$CSxK@) ((case-lambda ((g$C$21042$CSxK@ g$t$12854$CSxK@) (eqv? (case-lambda ((g$T$21043$CSxK@) (if g$T$21043$CSxK@ (g$set-lexical-mutable!$10656$CSxK@ (case-lambda (g$IGNORE$21044$CSxK@ (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$21045$CSxK@) (g$lexical-var$10654$CSxK@ (case-lambda ((g$V$21046$CSxK@) (list g$C$21042$CSxK@ 'set! g$V$21046$CSxK@ g$V$21045$CSxK@))) g$value$12852$CSxK@))) g$v$12844$CSxK@ g$r$12837$CSxK@ g$mr$12838$CSxK@))) g$value$12852$CSxK@ '#t) (eqv? (case-lambda ((g$T$21047$CSxK@) (if g$T$21047$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21042$CSxK@ '#f '"cannot modify imported core primitive" g$e$12836$CSxK@) (eqv? (case-lambda ((g$T$21048$CSxK@) (if g$T$21048$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21042$CSxK@ '#f '"attempt to modify imported binding" g$e$12836$CSxK@) (eqv? (case-lambda ((g$T$21049$CSxK@) (if g$T$21049$CSxK@ (g$chi-global-macro$10725$CSxK@ (case-lambda ((g$V$21050$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21042$CSxK@ g$V$21050$CSxK@ g$r$12837$CSxK@ g$mr$12838$CSxK@))) g$value$12852$CSxK@ g$e$12836$CSxK@ g$r$12837$CSxK@) (eqv? (case-lambda ((g$T$21051$CSxK@) (if g$T$21051$CSxK@ (g$chi-local-macro$10724$CSxK@ (case-lambda ((g$V$21052$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21042$CSxK@ g$V$21052$CSxK@ g$r$12837$CSxK@ g$mr$12838$CSxK@))) g$value$12852$CSxK@ g$e$12836$CSxK@ g$r$12837$CSxK@) (eqv? (case-lambda ((g$T$21053$CSxK@) (if g$T$21053$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21042$CSxK@ '#f '"attempt to assign to an unexportable variable" g$e$12836$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21042$CSxK@ '#f '"invalid syntax" g$e$12836$CSxK@)))) g$t$12854$CSxK@ 'mutable)))) g$t$12854$CSxK@ 'local-macro!)))) g$t$12854$CSxK@ 'global-macro!)))) g$t$12854$CSxK@ 'global)))) g$t$12854$CSxK@ 'core-prim)))) g$t$12854$CSxK@ 'lexical))) g$C$21054$CSxK@ g$type$12853$CSxK@))) g$C$21055$CSxK@ g$kwd$12850$CSxK@ g$value$12849$CSxK@ g$type$12848$CSxK@)))))) g$ls/false$12840$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21057$CSxK@ '#f '"invalid syntax" g$t$12839$CSxK@))))))) g$C$21060$CSxK@ g$V$21061$CSxK@))) g$t$12839$CSxK@ '(_ any any)))) g$C$21062$CSxK@ g$e$12836$CSxK@)))))) (library-letrec*-identity 'g$chi-set!$10729$CSxK@))) (g$verify-formals$10730$CSxK@ g$verify-formals$14272$CSxK@ ((case-lambda ((g$C$22797$CSxK@) (g$C$22797$CSxK@ (case-lambda ((g$C$21080$CSxK@ g$fmls$12855$CSxK@ g$stx$12856$CSxK@) ((case-lambda ((g$C$21078$CSxK@ g$t$12857$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21079$CSxK@) ((case-lambda ((g$C$21077$CSxK@ g$ls/false$12858$CSxK@) (if g$ls/false$12858$CSxK@ (apply g$C$21077$CSxK@ (case-lambda ((g$C$21063$CSxK@ g$x*$12859$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$V$21064$CSxK@) (not (case-lambda ((g$T$21065$CSxK@) (if g$T$21065$CSxK@ (g$invalid-fmls-error$10675$CSxK@ g$C$21063$CSxK@ g$stx$12856$CSxK@ g$fmls$12855$CSxK@) (void g$C$21063$CSxK@)))) g$V$21064$CSxK@))) g$x*$12859$CSxK@))) g$ls/false$12858$CSxK@) ((case-lambda ((g$C$21075$CSxK@ g$t$12860$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21076$CSxK@) ((case-lambda ((g$C$21074$CSxK@ g$ls/false$12861$CSxK@) (if g$ls/false$12861$CSxK@ (apply g$C$21074$CSxK@ (case-lambda ((g$C$21066$CSxK@ g$x*$12862$CSxK@ g$x$12863$CSxK@) (cons (case-lambda ((g$V$21067$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$V$21068$CSxK@) (not (case-lambda ((g$T$21069$CSxK@) (if g$T$21069$CSxK@ (g$invalid-fmls-error$10675$CSxK@ g$C$21066$CSxK@ g$stx$12856$CSxK@ g$fmls$12855$CSxK@) (void g$C$21066$CSxK@)))) g$V$21068$CSxK@))) g$V$21067$CSxK@))) g$x$12863$CSxK@ g$x*$12862$CSxK@))) g$ls/false$12861$CSxK@) ((case-lambda ((g$C$21072$CSxK@ g$t$12864$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21073$CSxK@) ((case-lambda ((g$C$21071$CSxK@ g$ls/false$12865$CSxK@) (if g$ls/false$12865$CSxK@ (apply g$C$21071$CSxK@ (case-lambda ((g$C$21070$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21070$CSxK@ '#f '"invalid syntax" g$stx$12856$CSxK@))) g$ls/false$12865$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21071$CSxK@ '#f '"invalid syntax" g$t$12864$CSxK@)))) g$C$21072$CSxK@ g$V$21073$CSxK@))) g$t$12864$CSxK@ '_))) g$C$21074$CSxK@ g$t$12860$CSxK@)))) g$C$21075$CSxK@ g$V$21076$CSxK@))) g$t$12860$CSxK@ '#(each+ any () any)))) g$C$21077$CSxK@ g$t$12857$CSxK@)))) g$C$21078$CSxK@ g$V$21079$CSxK@))) g$t$12857$CSxK@ 'each-any))) g$C$21080$CSxK@ g$fmls$12855$CSxK@)))))) (library-letrec*-identity 'g$verify-formals$10730$CSxK@))) (g$chi-lambda-clause$10731$CSxK@ g$chi-lambda-clause$14273$CSxK@ ((case-lambda ((g$C$22798$CSxK@) (g$C$22798$CSxK@ (case-lambda ((g$C$21116$CSxK@ g$stx$12866$CSxK@ g$fmls$12867$CSxK@ g$body*$12868$CSxK@ g$r$12869$CSxK@ g$mr$12870$CSxK@) ((case-lambda ((g$C$21114$CSxK@ g$t$12871$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21115$CSxK@) ((case-lambda ((g$C$21113$CSxK@ g$ls/false$12872$CSxK@) (if g$ls/false$12872$CSxK@ (apply g$C$21113$CSxK@ (case-lambda ((g$C$21086$CSxK@ g$x*$12873$CSxK@) (g$verify-formals$10730$CSxK@ (case-lambda (g$IGNORE$21087$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$21088$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21089$CSxK@) ((case-lambda ((g$C$21081$CSxK@ g$lex*$12874$CSxK@ g$lab*$12875$CSxK@) (g$add-lexicals$10658$CSxK@ (case-lambda ((g$V$21082$CSxK@) (g$make-full-rib$10313$CSxK@ (case-lambda ((g$V$21083$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$21084$CSxK@) (g$chi-internal$10739$CSxK@ (case-lambda ((g$V$21085$CSxK@) (values g$C$21081$CSxK@ g$lex*$12874$CSxK@ g$V$21085$CSxK@))) g$V$21084$CSxK@ g$V$21082$CSxK@ g$mr$12870$CSxK@))) g$V$21083$CSxK@ g$body*$12868$CSxK@))) g$x*$12873$CSxK@ g$lab*$12875$CSxK@))) g$lab*$12875$CSxK@ g$lex*$12874$CSxK@ g$r$12869$CSxK@))) g$C$21086$CSxK@ g$V$21089$CSxK@ g$V$21088$CSxK@))) g$gen-lexical$10282$CSxK@ g$x*$12873$CSxK@))) g$gen-label$10284$CSxK@ g$x*$12873$CSxK@))) g$fmls$12867$CSxK@ g$stx$12866$CSxK@))) g$ls/false$12872$CSxK@) ((case-lambda ((g$C$21111$CSxK@ g$t$12876$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21112$CSxK@) ((case-lambda ((g$C$21110$CSxK@ g$ls/false$12877$CSxK@) (if g$ls/false$12877$CSxK@ (apply g$C$21110$CSxK@ (case-lambda ((g$C$21100$CSxK@ g$x*$12878$CSxK@ g$x$12879$CSxK@) (g$verify-formals$10730$CSxK@ (case-lambda (g$IGNORE$21101$CSxK@ (g$gen-label$10284$CSxK@ (case-lambda ((g$V$21102$CSxK@) (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$21103$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21104$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21105$CSxK@) ((case-lambda ((g$C$21090$CSxK@ g$lex*$12880$CSxK@ g$lab*$12881$CSxK@ g$lex$12882$CSxK@ g$lab$12883$CSxK@) (cons (case-lambda ((g$V$21091$CSxK@) (cons (case-lambda ((g$V$21092$CSxK@) (g$add-lexicals$10658$CSxK@ (case-lambda ((g$V$21093$CSxK@) (cons (case-lambda ((g$V$21094$CSxK@) (cons (case-lambda ((g$V$21095$CSxK@) (g$make-full-rib$10313$CSxK@ (case-lambda ((g$V$21096$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$21097$CSxK@) (g$chi-internal$10739$CSxK@ (case-lambda ((g$V$21098$CSxK@) (append (case-lambda ((g$V$21099$CSxK@) (values g$C$21090$CSxK@ g$V$21099$CSxK@ g$V$21098$CSxK@))) g$lex*$12880$CSxK@ g$lex$12882$CSxK@))) g$V$21097$CSxK@ g$V$21093$CSxK@ g$mr$12870$CSxK@))) g$V$21096$CSxK@ g$body*$12868$CSxK@))) g$V$21095$CSxK@ g$V$21094$CSxK@))) g$x$12879$CSxK@ g$x*$12878$CSxK@))) g$lab$12883$CSxK@ g$lab*$12881$CSxK@))) g$V$21092$CSxK@ g$V$21091$CSxK@ g$r$12869$CSxK@))) g$lab$12883$CSxK@ g$lab*$12881$CSxK@))) g$lex$12882$CSxK@ g$lex*$12880$CSxK@))) g$C$21100$CSxK@ g$V$21105$CSxK@ g$V$21104$CSxK@ g$V$21103$CSxK@ g$V$21102$CSxK@))) g$gen-lexical$10282$CSxK@ g$x*$12878$CSxK@))) g$gen-label$10284$CSxK@ g$x*$12878$CSxK@))) g$x$12879$CSxK@))) g$x$12879$CSxK@))) g$fmls$12867$CSxK@ g$stx$12866$CSxK@))) g$ls/false$12877$CSxK@) ((case-lambda ((g$C$21108$CSxK@ g$t$12884$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21109$CSxK@) ((case-lambda ((g$C$21107$CSxK@ g$ls/false$12885$CSxK@) (if g$ls/false$12885$CSxK@ (apply g$C$21107$CSxK@ (case-lambda ((g$C$21106$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21106$CSxK@ '#f '"invalid syntax" g$fmls$12867$CSxK@))) g$ls/false$12885$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21107$CSxK@ '#f '"invalid syntax" g$t$12884$CSxK@)))) g$C$21108$CSxK@ g$V$21109$CSxK@))) g$t$12884$CSxK@ '_))) g$C$21110$CSxK@ g$t$12876$CSxK@)))) g$C$21111$CSxK@ g$V$21112$CSxK@))) g$t$12876$CSxK@ '#(each+ any () any)))) g$C$21113$CSxK@ g$t$12871$CSxK@)))) g$C$21114$CSxK@ g$V$21115$CSxK@))) g$t$12871$CSxK@ 'each-any))) g$C$21116$CSxK@ g$fmls$12867$CSxK@)))))) (library-letrec*-identity 'g$chi-lambda-clause$10731$CSxK@))) (g$chi-lambda-clause*$10732$CSxK@ g$chi-lambda-clause*$14274$CSxK@ ((case-lambda ((g$C$22799$CSxK@) (g$C$22799$CSxK@ (case-lambda ((g$C$21129$CSxK@ g$stx$12886$CSxK@ g$fmls*$12887$CSxK@ g$body**$12888$CSxK@ g$r$12889$CSxK@ g$mr$12890$CSxK@) (null? (case-lambda ((g$T$21130$CSxK@) (if g$T$21130$CSxK@ (values g$C$21129$CSxK@ '() '()) (call-with-values g$C$21129$CSxK@ (case-lambda ((g$C$21117$CSxK@) (car (case-lambda ((g$V$21118$CSxK@) (car (case-lambda ((g$V$21119$CSxK@) (g$chi-lambda-clause$10731$CSxK@ g$C$21117$CSxK@ g$stx$12886$CSxK@ g$V$21119$CSxK@ g$V$21118$CSxK@ g$r$12889$CSxK@ g$mr$12890$CSxK@))) g$fmls*$12887$CSxK@))) g$body**$12888$CSxK@))) (case-lambda ((g$C$21128$CSxK@ g$a$12893$CSxK@ g$b$12894$CSxK@) ((case-lambda ((g$C$21127$CSxK@ g$b$12895$CSxK@ g$a$12896$CSxK@) (call-with-values g$C$21127$CSxK@ (case-lambda ((g$C$21120$CSxK@) (cdr (case-lambda ((g$V$21121$CSxK@) (cdr (case-lambda ((g$V$21122$CSxK@) (g$chi-lambda-clause*$10732$CSxK@ g$C$21120$CSxK@ g$stx$12886$CSxK@ g$V$21122$CSxK@ g$V$21121$CSxK@ g$r$12889$CSxK@ g$mr$12890$CSxK@))) g$fmls*$12887$CSxK@))) g$body**$12888$CSxK@))) (case-lambda ((g$C$21126$CSxK@ g$a*$12899$CSxK@ g$b*$12900$CSxK@) ((case-lambda ((g$C$21123$CSxK@ g$b*$12901$CSxK@ g$a*$12902$CSxK@) (cons (case-lambda ((g$V$21124$CSxK@) (cons (case-lambda ((g$V$21125$CSxK@) (values g$C$21123$CSxK@ g$V$21125$CSxK@ g$V$21124$CSxK@))) g$a$12896$CSxK@ g$a*$12902$CSxK@))) g$b$12895$CSxK@ g$b*$12901$CSxK@))) g$C$21126$CSxK@ g$b*$12900$CSxK@ g$a*$12899$CSxK@)))))) g$C$21128$CSxK@ g$b$12894$CSxK@ g$a$12893$CSxK@))))))) g$fmls*$12887$CSxK@)))))) (library-letrec*-identity 'g$chi-lambda-clause*$10732$CSxK@))) (g$chi-defun$10733$CSxK@ g$chi-defun$14275$CSxK@ ((case-lambda ((g$C$22800$CSxK@) (g$C$22800$CSxK@ (case-lambda ((g$C$21135$CSxK@ g$x$12903$CSxK@ g$r$12904$CSxK@ g$mr$12905$CSxK@) (cdr (case-lambda ((g$V$21136$CSxK@) (car (case-lambda ((g$V$21137$CSxK@) ((case-lambda ((g$C$21134$CSxK@ g$fmls$12906$CSxK@ g$body*$12907$CSxK@) (call-with-values g$C$21134$CSxK@ (case-lambda ((g$C$21131$CSxK@) (g$chi-lambda-clause$10731$CSxK@ g$C$21131$CSxK@ g$fmls$12906$CSxK@ g$fmls$12906$CSxK@ g$body*$12907$CSxK@ g$r$12904$CSxK@ g$mr$12905$CSxK@))) (case-lambda ((g$C$21133$CSxK@ g$fmls$12910$CSxK@ g$body$12911$CSxK@) ((case-lambda ((g$C$21132$CSxK@ g$body$12912$CSxK@ g$fmls$12913$CSxK@) (g$build-lambda$10269$CSxK@ g$C$21132$CSxK@ '#f g$fmls$12913$CSxK@ g$body$12912$CSxK@))) g$C$21133$CSxK@ g$body$12911$CSxK@ g$fmls$12910$CSxK@)))))) g$C$21135$CSxK@ g$V$21137$CSxK@ g$V$21136$CSxK@))) g$x$12903$CSxK@))) g$x$12903$CSxK@)))))) (library-letrec*-identity 'g$chi-defun$10733$CSxK@))) (g$chi-rhs$10734$CSxK@ g$chi-rhs$14276$CSxK@ ((case-lambda ((g$C$22801$CSxK@) (g$C$22801$CSxK@ (case-lambda ((g$C$21150$CSxK@ g$rhs$12914$CSxK@ g$r$12915$CSxK@ g$mr$12916$CSxK@) (car (case-lambda ((g$V$21151$CSxK@) ((case-lambda ((g$C$21143$CSxK@ g$t$12917$CSxK@) (eqv? (case-lambda ((g$T$21144$CSxK@) (if g$T$21144$CSxK@ (cdr (case-lambda ((g$V$21145$CSxK@) (g$chi-defun$10733$CSxK@ g$C$21143$CSxK@ g$V$21145$CSxK@ g$r$12915$CSxK@ g$mr$12916$CSxK@))) g$rhs$12914$CSxK@) (eqv? (case-lambda ((g$T$21146$CSxK@) (if g$T$21146$CSxK@ (cdr (case-lambda ((g$V$21147$CSxK@) ((case-lambda ((g$C$21138$CSxK@ g$expr$12918$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21138$CSxK@ g$expr$12918$CSxK@ g$r$12915$CSxK@ g$mr$12916$CSxK@))) g$C$21143$CSxK@ g$V$21147$CSxK@))) g$rhs$12914$CSxK@) (eqv? (case-lambda ((g$T$21148$CSxK@) (if g$T$21148$CSxK@ (cdr (case-lambda ((g$V$21149$CSxK@) ((case-lambda ((g$C$21139$CSxK@ g$expr$12919$CSxK@) (g$build-void$10273$CSxK@ (case-lambda ((g$V$21140$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$21141$CSxK@) (list (case-lambda ((g$V$21142$CSxK@) (g$build-sequence$10272$CSxK@ g$C$21139$CSxK@ '#f g$V$21142$CSxK@))) g$V$21141$CSxK@ g$V$21140$CSxK@))) g$expr$12919$CSxK@ g$r$12915$CSxK@ g$mr$12916$CSxK@)))))) g$C$21143$CSxK@ g$V$21149$CSxK@))) g$rhs$12914$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$21143$CSxK@ 'chi-rhs '"BUG: invalid rhs" g$rhs$12914$CSxK@)))) g$t$12917$CSxK@ 'top-expr)))) g$t$12917$CSxK@ 'expr)))) g$t$12917$CSxK@ 'defun))) g$C$21150$CSxK@ g$V$21151$CSxK@))) g$rhs$12914$CSxK@)))))) (library-letrec*-identity 'g$chi-rhs$10734$CSxK@))) (g$expand-interaction-rhs*/init*$10735$CSxK@ g$expand-interaction-rhs*/init*$14277$CSxK@ ((case-lambda ((g$C$22802$CSxK@) (g$C$22802$CSxK@ (case-lambda ((g$C$21186$CSxK@ g$lhs*$12920$CSxK@ g$rhs*$12921$CSxK@ g$init*$12922$CSxK@ g$r$12923$CSxK@ g$mr$12924$CSxK@) ((case-lambda ((g$C$21185$CSxK@ g$f$12925$CSxK@) ((case-lambda ((g$C$21153$CSxK@ g$f$21152$CSxK@) (begin (set! g$f$12925$CSxK@ g$f$21152$CSxK@) (g$C$21153$CSxK@ g$f$12925$CSxK@)))) g$C$21185$CSxK@ (case-lambda ((g$C$21181$CSxK@ g$lhs*$12926$CSxK@ g$rhs*$12927$CSxK@) (null? (case-lambda ((g$T$21182$CSxK@) (if g$T$21182$CSxK@ (g$map$6713$CSxK@ g$C$21181$CSxK@ (case-lambda ((g$C$21154$CSxK@ g$x$12928$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21154$CSxK@ g$x$12928$CSxK@ g$r$12923$CSxK@ g$mr$12924$CSxK@))) g$init*$12922$CSxK@) (car (case-lambda ((g$V$21183$CSxK@) (car (case-lambda ((g$V$21184$CSxK@) ((case-lambda ((g$C$21179$CSxK@ g$lhs$12929$CSxK@ g$rhs$12930$CSxK@) (car (case-lambda ((g$V$21180$CSxK@) ((case-lambda ((g$C$21169$CSxK@ g$t$12931$CSxK@) (eqv? (case-lambda ((g$T$21170$CSxK@) (if g$T$21170$CSxK@ (cdr (case-lambda ((g$V$21171$CSxK@) (g$chi-defun$10733$CSxK@ (case-lambda ((g$V$21172$CSxK@) ((case-lambda ((g$C$21155$CSxK@ g$rhs$12932$CSxK@) (cdr (case-lambda ((g$V$21156$CSxK@) (cdr (case-lambda ((g$V$21157$CSxK@) (g$f$12925$CSxK@ (case-lambda ((g$V$21158$CSxK@) (list (case-lambda ((g$V$21159$CSxK@) (cons g$C$21155$CSxK@ g$V$21159$CSxK@ g$V$21158$CSxK@))) 'set! g$lhs$12929$CSxK@ g$rhs$12932$CSxK@))) g$V$21157$CSxK@ g$V$21156$CSxK@))) g$lhs*$12926$CSxK@))) g$rhs*$12927$CSxK@))) g$C$21169$CSxK@ g$V$21172$CSxK@))) g$V$21171$CSxK@ g$r$12923$CSxK@ g$mr$12924$CSxK@))) g$rhs$12930$CSxK@) (eqv? (case-lambda ((g$T$21173$CSxK@) (if g$T$21173$CSxK@ (cdr (case-lambda ((g$V$21174$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$21175$CSxK@) ((case-lambda ((g$C$21160$CSxK@ g$rhs$12933$CSxK@) (cdr (case-lambda ((g$V$21161$CSxK@) (cdr (case-lambda ((g$V$21162$CSxK@) (g$f$12925$CSxK@ (case-lambda ((g$V$21163$CSxK@) (list (case-lambda ((g$V$21164$CSxK@) (cons g$C$21160$CSxK@ g$V$21164$CSxK@ g$V$21163$CSxK@))) 'set! g$lhs$12929$CSxK@ g$rhs$12933$CSxK@))) g$V$21162$CSxK@ g$V$21161$CSxK@))) g$lhs*$12926$CSxK@))) g$rhs*$12927$CSxK@))) g$C$21169$CSxK@ g$V$21175$CSxK@))) g$V$21174$CSxK@ g$r$12923$CSxK@ g$mr$12924$CSxK@))) g$rhs$12930$CSxK@) (eqv? (case-lambda ((g$T$21176$CSxK@) (if g$T$21176$CSxK@ (cdr (case-lambda ((g$V$21177$CSxK@) (g$chi-expr$10728$CSxK@ (case-lambda ((g$V$21178$CSxK@) ((case-lambda ((g$C$21165$CSxK@ g$e$12934$CSxK@) (cdr (case-lambda ((g$V$21166$CSxK@) (cdr (case-lambda ((g$V$21167$CSxK@) (g$f$12925$CSxK@ (case-lambda ((g$V$21168$CSxK@) (cons g$C$21165$CSxK@ g$e$12934$CSxK@ g$V$21168$CSxK@))) g$V$21167$CSxK@ g$V$21166$CSxK@))) g$lhs*$12926$CSxK@))) g$rhs*$12927$CSxK@))) g$C$21169$CSxK@ g$V$21178$CSxK@))) g$V$21177$CSxK@ g$r$12923$CSxK@ g$mr$12924$CSxK@))) g$rhs$12930$CSxK@) (g$error$7673$CSxK@ g$C$21169$CSxK@ 'expand-interaction '"invallid" g$rhs$12930$CSxK@)))) g$t$12931$CSxK@ 'top-expr)))) g$t$12931$CSxK@ 'expr)))) g$t$12931$CSxK@ 'defun))) g$C$21179$CSxK@ g$V$21180$CSxK@))) g$rhs$12930$CSxK@))) g$C$21181$CSxK@ g$V$21184$CSxK@ g$V$21183$CSxK@))) g$lhs*$12926$CSxK@))) g$rhs*$12927$CSxK@)))) g$lhs*$12926$CSxK@)))))) (case-lambda ((g$V$21187$CSxK@) (g$V$21187$CSxK@ g$C$21186$CSxK@ g$lhs*$12920$CSxK@ g$rhs*$12921$CSxK@))) uninitialized)))))) (library-letrec*-identity 'g$expand-interaction-rhs*/init*$10735$CSxK@))) (g$chi-rhs*$10736$CSxK@ g$chi-rhs*$14278$CSxK@ ((case-lambda ((g$C$22803$CSxK@) (g$C$22803$CSxK@ (case-lambda ((g$C$21198$CSxK@ g$rhs*$12935$CSxK@ g$r$12936$CSxK@ g$mr$12937$CSxK@) ((case-lambda ((g$C$21197$CSxK@ g$f$12938$CSxK@) ((case-lambda ((g$C$21189$CSxK@ g$f$21188$CSxK@) (begin (set! g$f$12938$CSxK@ g$f$21188$CSxK@) (g$C$21189$CSxK@ g$f$12938$CSxK@)))) g$C$21197$CSxK@ (case-lambda ((g$C$21193$CSxK@ g$ls$12939$CSxK@) (null? (case-lambda ((g$T$21194$CSxK@) (if g$T$21194$CSxK@ (g$C$21193$CSxK@ '()) (car (case-lambda ((g$V$21195$CSxK@) (g$chi-rhs$10734$CSxK@ (case-lambda ((g$V$21196$CSxK@) ((case-lambda ((g$C$21190$CSxK@ g$a$12940$CSxK@) (cdr (case-lambda ((g$V$21191$CSxK@) (g$f$12938$CSxK@ (case-lambda ((g$V$21192$CSxK@) (cons g$C$21190$CSxK@ g$a$12940$CSxK@ g$V$21192$CSxK@))) g$V$21191$CSxK@))) g$ls$12939$CSxK@))) g$C$21193$CSxK@ g$V$21196$CSxK@))) g$V$21195$CSxK@ g$r$12936$CSxK@ g$mr$12937$CSxK@))) g$ls$12939$CSxK@)))) g$ls$12939$CSxK@)))))) (case-lambda ((g$V$21199$CSxK@) (g$V$21199$CSxK@ g$C$21198$CSxK@ g$rhs*$12935$CSxK@))) uninitialized)))))) (library-letrec*-identity 'g$chi-rhs*$10736$CSxK@))) (g$find-bound=?$10737$CSxK@ g$find-bound=?$14279$CSxK@ ((case-lambda ((g$C$22804$CSxK@) (g$C$22804$CSxK@ (case-lambda ((g$C$21200$CSxK@ g$x$12941$CSxK@ g$lhs*$12942$CSxK@ g$rhs*$12943$CSxK@) (null? (case-lambda ((g$T$21201$CSxK@) (if g$T$21201$CSxK@ (g$C$21200$CSxK@ '#f) (car (case-lambda ((g$V$21202$CSxK@) (g$bound-id=?$10350$CSxK@ (case-lambda ((g$T$21203$CSxK@) (if g$T$21203$CSxK@ (car g$C$21200$CSxK@ g$rhs*$12943$CSxK@) (cdr (case-lambda ((g$V$21204$CSxK@) (cdr (case-lambda ((g$V$21205$CSxK@) (g$find-bound=?$10737$CSxK@ g$C$21200$CSxK@ g$x$12941$CSxK@ g$V$21205$CSxK@ g$V$21204$CSxK@))) g$lhs*$12942$CSxK@))) g$rhs*$12943$CSxK@)))) g$x$12941$CSxK@ g$V$21202$CSxK@))) g$lhs*$12942$CSxK@)))) g$lhs*$12942$CSxK@)))))) (library-letrec*-identity 'g$find-bound=?$10737$CSxK@))) (g$find-dups$10738$CSxK@ g$find-dups$14280$CSxK@ ((case-lambda ((g$C$22805$CSxK@) (g$C$22805$CSxK@ (case-lambda ((g$C$21222$CSxK@ g$ls$12944$CSxK@) ((case-lambda ((g$C$21221$CSxK@ g$f$12945$CSxK@) ((case-lambda ((g$C$21207$CSxK@ g$f$21206$CSxK@) (begin (set! g$f$12945$CSxK@ g$f$21206$CSxK@) (g$C$21207$CSxK@ g$f$12945$CSxK@)))) g$C$21221$CSxK@ (case-lambda ((g$C$21215$CSxK@ g$ls$12946$CSxK@ g$dups$12947$CSxK@) (null? (case-lambda ((g$T$21216$CSxK@) (if g$T$21216$CSxK@ (g$C$21215$CSxK@ g$dups$12947$CSxK@) (cdr (case-lambda ((g$V$21217$CSxK@) (cdr (case-lambda ((g$V$21218$CSxK@) (car (case-lambda ((g$V$21219$CSxK@) (g$find-bound=?$10737$CSxK@ (case-lambda ((g$V$21220$CSxK@) ((case-lambda ((g$C$21213$CSxK@ g$t$12948$CSxK@) (if g$t$12948$CSxK@ ((case-lambda ((g$C$21208$CSxK@ g$x$12949$CSxK@) (car (case-lambda ((g$V$21209$CSxK@) (list (case-lambda ((g$V$21210$CSxK@) (cons (case-lambda ((g$V$21211$CSxK@) (cdr (case-lambda ((g$V$21212$CSxK@) (g$f$12945$CSxK@ g$C$21208$CSxK@ g$V$21212$CSxK@ g$V$21211$CSxK@))) g$ls$12946$CSxK@))) g$V$21210$CSxK@ g$dups$12947$CSxK@))) g$V$21209$CSxK@ g$x$12949$CSxK@))) g$ls$12946$CSxK@))) g$C$21213$CSxK@ g$t$12948$CSxK@) (cdr (case-lambda ((g$V$21214$CSxK@) (g$f$12945$CSxK@ g$C$21213$CSxK@ g$V$21214$CSxK@ g$dups$12947$CSxK@))) g$ls$12946$CSxK@)))) g$C$21215$CSxK@ g$V$21220$CSxK@))) g$V$21219$CSxK@ g$V$21218$CSxK@ g$V$21217$CSxK@))) g$ls$12946$CSxK@))) g$ls$12946$CSxK@))) g$ls$12946$CSxK@)))) g$ls$12946$CSxK@)))))) (case-lambda ((g$V$21223$CSxK@) (g$V$21223$CSxK@ g$C$21222$CSxK@ g$ls$12944$CSxK@ '()))) uninitialized)))))) (library-letrec*-identity 'g$find-dups$10738$CSxK@))) (g$chi-internal$10739$CSxK@ g$chi-internal$14281$CSxK@ ((case-lambda ((g$C$22806$CSxK@) (g$C$22806$CSxK@ (case-lambda ((g$C$21244$CSxK@ g$e*$12950$CSxK@ g$r$12951$CSxK@ g$mr$12952$CSxK@) (g$make-empty-rib$10305$CSxK@ (case-lambda ((g$V$21245$CSxK@) ((case-lambda ((g$C$21243$CSxK@ g$rib$12953$CSxK@) (call-with-values g$C$21243$CSxK@ (case-lambda ((g$C$21225$CSxK@) (g$syntax->list$10346$CSxK@ (case-lambda ((g$V$21226$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21227$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21225$CSxK@ g$V$21227$CSxK@ g$r$12951$CSxK@ g$mr$12952$CSxK@ '() '() '() '() '() g$rib$12953$CSxK@ '#f '#t))) (case-lambda ((g$C$21224$CSxK@ g$x$12962$CSxK@) (g$add-subst$10337$CSxK@ g$C$21224$CSxK@ g$rib$12953$CSxK@ g$x$12962$CSxK@))) g$V$21226$CSxK@))) g$e*$12950$CSxK@))) (case-lambda ((g$C$21242$CSxK@ g$e*$12963$CSxK@ g$r$12964$CSxK@ g$mr$12965$CSxK@ g$lex*$12966$CSxK@ g$rhs*$12967$CSxK@ g$mod**$12968$CSxK@ g$kwd*$12969$CSxK@ g$_exp*$12970$CSxK@) ((case-lambda ((g$C$21234$CSxK@ g$_exp*$12971$CSxK@ g$kwd*$12972$CSxK@ g$mod**$12973$CSxK@ g$rhs*$12974$CSxK@ g$lex*$12975$CSxK@ g$mr$12976$CSxK@ g$r$12977$CSxK@ g$e*$12978$CSxK@) ((case-lambda ((g$J$21240$CSxK@) (null? (case-lambda ((g$T$21241$CSxK@) (if g$T$21241$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21240$CSxK@ '#f '"no expression in body" g$e*$12978$CSxK@) (void g$J$21240$CSxK@)))) g$e*$12978$CSxK@))) (case-lambda (g$IGNORE$21235$CSxK@ (g$reverse$7391$CSxK@ (case-lambda ((g$V$21236$CSxK@) (apply (case-lambda ((g$V$21237$CSxK@) (append (case-lambda ((g$V$21238$CSxK@) (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$21239$CSxK@) ((case-lambda ((g$C$21232$CSxK@ g$init*$12979$CSxK@) (g$chi-rhs*$10736$CSxK@ (case-lambda ((g$V$21233$CSxK@) ((case-lambda ((g$C$21228$CSxK@ g$rhs*$12980$CSxK@) (g$build-sequence$10272$CSxK@ (case-lambda ((g$V$21229$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$21230$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$21231$CSxK@) (g$build-letrec*$10275$CSxK@ g$C$21228$CSxK@ '#f g$V$21231$CSxK@ g$V$21230$CSxK@ g$V$21229$CSxK@))) g$lex*$12975$CSxK@))) g$rhs*$12980$CSxK@))) '#f g$init*$12979$CSxK@))) g$C$21232$CSxK@ g$V$21233$CSxK@))) g$rhs*$12974$CSxK@ g$r$12977$CSxK@ g$mr$12976$CSxK@))) g$C$21234$CSxK@ g$V$21239$CSxK@))) g$V$21238$CSxK@ g$r$12977$CSxK@ g$mr$12976$CSxK@))) g$V$21237$CSxK@ g$e*$12978$CSxK@))) append g$V$21236$CSxK@))) g$mod**$12973$CSxK@)))))) g$C$21242$CSxK@ g$_exp*$12970$CSxK@ g$kwd*$12969$CSxK@ g$mod**$12968$CSxK@ g$rhs*$12967$CSxK@ g$lex*$12966$CSxK@ g$mr$12965$CSxK@ g$r$12964$CSxK@ g$e*$12963$CSxK@)))))) g$C$21244$CSxK@ g$V$21245$CSxK@))))))))) (library-letrec*-identity 'g$chi-internal$10739$CSxK@))) (g$parse-module$10740$CSxK@ g$parse-module$14282$CSxK@ ((case-lambda ((g$C$22807$CSxK@) (g$C$22807$CSxK@ (case-lambda ((g$C$21268$CSxK@ g$e$12981$CSxK@) ((case-lambda ((g$C$21266$CSxK@ g$t$12982$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21267$CSxK@) ((case-lambda ((g$C$21265$CSxK@ g$ls/false$12983$CSxK@) (if g$ls/false$12983$CSxK@ (apply g$C$21265$CSxK@ (case-lambda ((g$C$21246$CSxK@ g$export*$12984$CSxK@ g$b*$12985$CSxK@) ((case-lambda ((g$J$21249$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$V$21250$CSxK@) (not (case-lambda ((g$T$21251$CSxK@) (if g$T$21251$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21249$CSxK@ '#f '"module exports must be identifiers" g$e$12981$CSxK@) (void g$J$21249$CSxK@)))) g$V$21250$CSxK@))) g$id?$10347$CSxK@ g$export*$12984$CSxK@))) (case-lambda (g$IGNORE$21247$CSxK@ (g$list->vector$7379$CSxK@ (case-lambda ((g$V$21248$CSxK@) (values g$C$21246$CSxK@ '#f g$V$21248$CSxK@ g$b*$12985$CSxK@))) g$export*$12984$CSxK@)))))) g$ls/false$12983$CSxK@) ((case-lambda ((g$C$21263$CSxK@ g$t$12986$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21264$CSxK@) ((case-lambda ((g$C$21262$CSxK@ g$ls/false$12987$CSxK@) (if g$ls/false$12987$CSxK@ (apply g$C$21262$CSxK@ (case-lambda ((g$C$21252$CSxK@ g$name$12988$CSxK@ g$export*$12989$CSxK@ g$b*$12990$CSxK@) ((case-lambda ((g$J$21259$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$21260$CSxK@) (not (case-lambda ((g$T$21261$CSxK@) (if g$T$21261$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21259$CSxK@ '#f '"module name must be an identifier" g$e$12981$CSxK@) (void g$J$21259$CSxK@)))) g$V$21260$CSxK@))) g$name$12988$CSxK@))) (case-lambda (g$IGNORE$21253$CSxK@ ((case-lambda ((g$J$21256$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$V$21257$CSxK@) (not (case-lambda ((g$T$21258$CSxK@) (if g$T$21258$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21256$CSxK@ '#f '"module exports must be identifiers" g$e$12981$CSxK@) (void g$J$21256$CSxK@)))) g$V$21257$CSxK@))) g$id?$10347$CSxK@ g$export*$12989$CSxK@))) (case-lambda (g$IGNORE$21254$CSxK@ (g$list->vector$7379$CSxK@ (case-lambda ((g$V$21255$CSxK@) (values g$C$21252$CSxK@ g$name$12988$CSxK@ g$V$21255$CSxK@ g$b*$12990$CSxK@))) g$export*$12989$CSxK@))))))))) g$ls/false$12987$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21262$CSxK@ '#f '"invalid syntax" g$t$12986$CSxK@)))) g$C$21263$CSxK@ g$V$21264$CSxK@))) g$t$12986$CSxK@ '(_ any each-any . each-any)))) g$C$21265$CSxK@ g$t$12982$CSxK@)))) g$C$21266$CSxK@ g$V$21267$CSxK@))) g$t$12982$CSxK@ '(_ each-any . each-any)))) g$C$21268$CSxK@ g$e$12981$CSxK@)))))) (library-letrec*-identity 'g$parse-module$10740$CSxK@))) (g$8472$10741$CSxK@ g$8472$14283$CSxK@ ((case-lambda ((g$C$22808$CSxK@) (make-record-type-descriptor g$C$22808$CSxK@ 'module-interface '#f 'g$8475$CSxK@ '#t '#t '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))) (library-letrec*-identity 'g$8472$10741$CSxK@))) (g$8474$10742$CSxK@ g$8474$14284$CSxK@ ((case-lambda ((g$C$22809$CSxK@) (g$C$22809$CSxK@ '#f))) (library-letrec*-identity 'g$8474$10742$CSxK@))) (g$8473$10743$CSxK@ g$8473$14285$CSxK@ ((case-lambda ((g$C$22810$CSxK@) (make-record-constructor-descriptor g$C$22810$CSxK@ g$8472$10741$CSxK@ '#f g$8474$10742$CSxK@))) (library-letrec*-identity 'g$8473$10743$CSxK@))) (g$module-interface?$10746$CSxK@ g$module-interface?$14286$CSxK@ ((case-lambda ((g$C$22811$CSxK@) (record-predicate g$C$22811$CSxK@ g$8472$10741$CSxK@))) (library-letrec*-identity 'g$module-interface?$10746$CSxK@))) (g$make-module-interface$10747$CSxK@ g$make-module-interface$14287$CSxK@ ((case-lambda ((g$C$22812$CSxK@) (record-constructor g$C$22812$CSxK@ g$8473$10743$CSxK@))) (library-letrec*-identity 'g$make-module-interface$10747$CSxK@))) (g$module-interface-first-mark$10748$CSxK@ g$module-interface-first-mark$14288$CSxK@ ((case-lambda ((g$C$22813$CSxK@) (record-accessor g$C$22813$CSxK@ g$8472$10741$CSxK@ '0))) (library-letrec*-identity 'g$module-interface-first-mark$10748$CSxK@))) (g$module-interface-exp-id-vec$10749$CSxK@ g$module-interface-exp-id-vec$14289$CSxK@ ((case-lambda ((g$C$22814$CSxK@) (record-accessor g$C$22814$CSxK@ g$8472$10741$CSxK@ '1))) (library-letrec*-identity 'g$module-interface-exp-id-vec$10749$CSxK@))) (g$module-interface-exp-lab-vec$10750$CSxK@ g$module-interface-exp-lab-vec$14290$CSxK@ ((case-lambda ((g$C$22815$CSxK@) (record-accessor g$C$22815$CSxK@ g$8472$10741$CSxK@ '2))) (library-letrec*-identity 'g$module-interface-exp-lab-vec$10750$CSxK@))) (g$set-module-interface-first-mark!$10751$CSxK@ g$set-module-interface-first-mark!$14291$CSxK@ ((case-lambda ((g$C$22816$CSxK@) (record-mutator g$C$22816$CSxK@ g$8472$10741$CSxK@ '0))) (library-letrec*-identity 'g$set-module-interface-first-mark!$10751$CSxK@))) (g$set-module-interface-exp-id-vec!$10752$CSxK@ g$set-module-interface-exp-id-vec!$14292$CSxK@ ((case-lambda ((g$C$22817$CSxK@) (record-mutator g$C$22817$CSxK@ g$8472$10741$CSxK@ '1))) (library-letrec*-identity 'g$set-module-interface-exp-id-vec!$10752$CSxK@))) (g$set-module-interface-exp-lab-vec!$10753$CSxK@ g$set-module-interface-exp-lab-vec!$14293$CSxK@ ((case-lambda ((g$C$22818$CSxK@) (record-mutator g$C$22818$CSxK@ g$8472$10741$CSxK@ '2))) (library-letrec*-identity 'g$set-module-interface-exp-lab-vec!$10753$CSxK@))) (g$module-interface-exp-id*$10754$CSxK@ g$module-interface-exp-id*$14294$CSxK@ ((case-lambda ((g$C$22819$CSxK@) (g$C$22819$CSxK@ (case-lambda ((g$C$21289$CSxK@ g$iface$12991$CSxK@ g$id$12992$CSxK@) ((case-lambda ((g$C$21284$CSxK@ g$diff-marks$12993$CSxK@) (begin (set! g$diff-marks$12993$CSxK@ (case-lambda ((g$C$21273$CSxK@ g$ls$12997$CSxK@ g$x$12998$CSxK@) ((case-lambda ((g$J$21276$CSxK@) (null? (case-lambda ((g$T$21277$CSxK@) (if g$T$21277$CSxK@ (g$error$7673$CSxK@ g$J$21276$CSxK@ 'diff-marks '"BUG: should not happen") (void g$J$21276$CSxK@)))) g$ls$12997$CSxK@))) (case-lambda (g$IGNORE$21274$CSxK@ (car (case-lambda ((g$V$21275$CSxK@) ((case-lambda ((g$C$21269$CSxK@ g$a$12999$CSxK@) (eq? (case-lambda ((g$T$21270$CSxK@) (if g$T$21270$CSxK@ (g$C$21269$CSxK@ '()) (cdr (case-lambda ((g$V$21271$CSxK@) (g$diff-marks$12993$CSxK@ (case-lambda ((g$V$21272$CSxK@) (cons g$C$21269$CSxK@ g$a$12999$CSxK@ g$V$21272$CSxK@))) g$V$21271$CSxK@ g$x$12998$CSxK@))) g$ls$12997$CSxK@)))) g$a$12999$CSxK@ g$x$12998$CSxK@))) g$C$21273$CSxK@ g$V$21275$CSxK@))) g$ls$12997$CSxK@))))))) (g$module-interface-exp-id-vec$10749$CSxK@ (case-lambda ((g$V$21285$CSxK@) (g$module-interface-first-mark$10748$CSxK@ (case-lambda ((g$V$21286$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$21287$CSxK@) (g$diff-marks$12993$CSxK@ (case-lambda ((g$V$21288$CSxK@) ((case-lambda ((g$C$21282$CSxK@ g$diff$12994$CSxK@ g$id-vec$12995$CSxK@) (null? (case-lambda ((g$T$21283$CSxK@) (if g$T$21283$CSxK@ (g$C$21282$CSxK@ g$id-vec$12995$CSxK@) (g$vector-map$7444$CSxK@ g$C$21282$CSxK@ (case-lambda ((g$C$21278$CSxK@ g$x$12996$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$21279$CSxK@) (append (case-lambda ((g$V$21280$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$21281$CSxK@) (g$make-stx$10320$CSxK@ g$C$21278$CSxK@ g$V$21281$CSxK@ g$V$21280$CSxK@ '() '()))) g$x$12996$CSxK@))) g$diff$12994$CSxK@ g$V$21279$CSxK@))) g$x$12996$CSxK@))) g$id-vec$12995$CSxK@)))) g$diff$12994$CSxK@))) g$C$21284$CSxK@ g$V$21288$CSxK@ g$V$21285$CSxK@))) g$V$21287$CSxK@ g$V$21286$CSxK@))) g$id$12992$CSxK@))) g$iface$12991$CSxK@))) g$iface$12991$CSxK@)))) g$C$21289$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$module-interface-exp-id*$10754$CSxK@))) (g$chi-internal-module$10755$CSxK@ g$chi-internal-module$14295$CSxK@ ((case-lambda ((g$C$22820$CSxK@) (g$C$22820$CSxK@ (case-lambda ((g$C$21330$CSxK@ g$e$13000$CSxK@ g$r$13001$CSxK@ g$mr$13002$CSxK@ g$lex*$13003$CSxK@ g$rhs*$13004$CSxK@ g$mod**$13005$CSxK@ g$kwd*$13006$CSxK@) (call-with-values g$C$21330$CSxK@ (case-lambda ((g$C$21290$CSxK@) (g$parse-module$10740$CSxK@ g$C$21290$CSxK@ g$e$13000$CSxK@))) (case-lambda ((g$C$21329$CSxK@ g$name$13010$CSxK@ g$exp-id*$13011$CSxK@ g$e*$13012$CSxK@) ((case-lambda ((g$C$21327$CSxK@ g$e*$13013$CSxK@ g$exp-id*$13014$CSxK@ g$name$13015$CSxK@) (g$make-empty-rib$10305$CSxK@ (case-lambda ((g$V$21328$CSxK@) ((case-lambda ((g$C$21324$CSxK@ g$rib$13016$CSxK@) (g$syntax->list$10346$CSxK@ (case-lambda ((g$V$21325$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21326$CSxK@) ((case-lambda ((g$C$21322$CSxK@ g$e*$13017$CSxK@) (call-with-values g$C$21322$CSxK@ (case-lambda ((g$C$21291$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21291$CSxK@ g$e*$13017$CSxK@ g$r$13001$CSxK@ g$mr$13002$CSxK@ g$lex*$13003$CSxK@ g$rhs*$13004$CSxK@ g$mod**$13005$CSxK@ g$kwd*$13006$CSxK@ '() g$rib$13016$CSxK@ '#f '#t))) (case-lambda ((g$C$21321$CSxK@ g$e*$13026$CSxK@ g$r$13027$CSxK@ g$mr$13028$CSxK@ g$lex*$13029$CSxK@ g$rhs*$13030$CSxK@ g$mod**$13031$CSxK@ g$kwd*$13032$CSxK@ g$_exp*$13033$CSxK@) ((case-lambda ((g$C$21318$CSxK@ g$_exp*$13034$CSxK@ g$kwd*$13035$CSxK@ g$mod**$13036$CSxK@ g$rhs*$13037$CSxK@ g$lex*$13038$CSxK@ g$mr$13039$CSxK@ g$r$13040$CSxK@ g$e*$13041$CSxK@) (cons (case-lambda ((g$V$21319$CSxK@) (g$vector-map$7444$CSxK@ (case-lambda ((g$V$21320$CSxK@) ((case-lambda ((g$C$21304$CSxK@ g$exp-lab*$13042$CSxK@ g$mod**$13043$CSxK@) (not (case-lambda ((g$T$21305$CSxK@) (if g$T$21305$CSxK@ (values g$C$21304$CSxK@ g$lex*$13038$CSxK@ g$rhs*$13037$CSxK@ g$exp-id*$13014$CSxK@ g$exp-lab*$13042$CSxK@ g$r$13040$CSxK@ g$mr$13039$CSxK@ g$mod**$13043$CSxK@ g$kwd*$13035$CSxK@) (g$vector-map$7444$CSxK@ (case-lambda ((g$V$21306$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$21307$CSxK@) (car (case-lambda ((g$V$21308$CSxK@) (g$make-module-interface$10747$CSxK@ (case-lambda ((g$V$21309$CSxK@) (g$gen-label$10284$CSxK@ (case-lambda ((g$V$21310$CSxK@) ((case-lambda ((g$C$21292$CSxK@ g$lab$13044$CSxK@ g$iface$13045$CSxK@) (cons (case-lambda ((g$V$21293$CSxK@) (cons (case-lambda ((g$V$21294$CSxK@) (cons (case-lambda ((g$V$21295$CSxK@) (cons (case-lambda ((g$V$21296$CSxK@) (cons (case-lambda ((g$V$21297$CSxK@) (cons (case-lambda ((g$V$21298$CSxK@) (vector (case-lambda ((g$V$21299$CSxK@) (vector (case-lambda ((g$V$21300$CSxK@) (values g$C$21292$CSxK@ g$lex*$13038$CSxK@ g$rhs*$13037$CSxK@ g$V$21300$CSxK@ g$V$21299$CSxK@ g$V$21298$CSxK@ g$V$21295$CSxK@ g$mod**$13043$CSxK@ g$kwd*$13035$CSxK@))) g$name$13015$CSxK@))) g$lab$13044$CSxK@))) g$V$21297$CSxK@ g$r$13040$CSxK@))) g$lab$13044$CSxK@ g$V$21296$CSxK@))) '$module g$iface$13045$CSxK@))) g$V$21294$CSxK@ g$mr$13039$CSxK@))) g$lab$13044$CSxK@ g$V$21293$CSxK@))) '$module g$iface$13045$CSxK@))) g$C$21304$CSxK@ g$V$21310$CSxK@ g$V$21309$CSxK@))) 'module))) g$V$21308$CSxK@ g$V$21306$CSxK@ g$exp-lab*$13042$CSxK@))) g$V$21307$CSxK@))) g$name$13015$CSxK@))) (case-lambda ((g$C$21301$CSxK@ g$x$13046$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$21302$CSxK@) (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$21303$CSxK@) (g$make-stx$10320$CSxK@ g$C$21301$CSxK@ g$V$21303$CSxK@ g$V$21302$CSxK@ '() '()))) g$x$13046$CSxK@))) g$x$13046$CSxK@))) g$exp-id*$13014$CSxK@)))) g$name$13015$CSxK@))) g$C$21318$CSxK@ g$V$21320$CSxK@ g$V$21319$CSxK@))) (case-lambda ((g$C$21312$CSxK@ g$x$13047$CSxK@) (list (case-lambda ((g$V$21313$CSxK@) (g$stx-mark*$10322$CSxK@ (case-lambda ((g$V$21314$CSxK@) (g$id->sym$10348$CSxK@ (case-lambda ((g$V$21315$CSxK@) (g$make-stx$10320$CSxK@ (case-lambda ((g$V$21316$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$21317$CSxK@) ((case-lambda ((g$C$21311$CSxK@ g$t$13048$CSxK@) (if g$t$13048$CSxK@ (g$C$21311$CSxK@ g$t$13048$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21311$CSxK@ '#f '"cannot find module export" g$x$13047$CSxK@)))) g$C$21312$CSxK@ g$V$21317$CSxK@))) g$V$21316$CSxK@))) g$V$21315$CSxK@ g$V$21314$CSxK@ g$V$21313$CSxK@ '()))) g$x$13047$CSxK@))) g$x$13047$CSxK@))) g$rib$13016$CSxK@))) g$exp-id*$13014$CSxK@))) g$e*$13041$CSxK@ g$mod**$13036$CSxK@))) g$C$21321$CSxK@ g$_exp*$13033$CSxK@ g$kwd*$13032$CSxK@ g$mod**$13031$CSxK@ g$rhs*$13030$CSxK@ g$lex*$13029$CSxK@ g$mr$13028$CSxK@ g$r$13027$CSxK@ g$e*$13026$CSxK@)))))) g$C$21324$CSxK@ g$V$21326$CSxK@))) (case-lambda ((g$C$21323$CSxK@ g$x$13049$CSxK@) (g$add-subst$10337$CSxK@ g$C$21323$CSxK@ g$rib$13016$CSxK@ g$x$13049$CSxK@))) g$V$21325$CSxK@))) g$e*$13013$CSxK@))) g$C$21327$CSxK@ g$V$21328$CSxK@)))))) g$C$21329$CSxK@ g$e*$13012$CSxK@ g$exp-id*$13011$CSxK@ g$name$13010$CSxK@))))))))) (library-letrec*-identity 'g$chi-internal-module$10755$CSxK@))) (g$chi-body*$10756$CSxK@ g$chi-body*$14296$CSxK@ ((case-lambda ((g$C$22821$CSxK@) (g$C$22821$CSxK@ (case-lambda ((g$C$21505$CSxK@ g$e*$13050$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13056$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@) (null? (case-lambda ((g$T$21506$CSxK@) (if g$T$21506$CSxK@ (values g$C$21505$CSxK@ g$e*$13050$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13056$CSxK@ g$exp*$13057$CSxK@) (car (case-lambda ((g$V$21507$CSxK@) ((case-lambda ((g$C$21504$CSxK@ g$e$13061$CSxK@) (call-with-values g$C$21504$CSxK@ (case-lambda ((g$C$21331$CSxK@) (g$syntax-type$10367$CSxK@ g$C$21331$CSxK@ g$e$13061$CSxK@ g$r$13051$CSxK@))) (case-lambda ((g$C$21503$CSxK@ g$type$13065$CSxK@ g$value$13066$CSxK@ g$kwd$13067$CSxK@) ((case-lambda ((g$C$21499$CSxK@ g$kwd$13068$CSxK@ g$value$13069$CSxK@ g$type$13070$CSxK@) ((case-lambda ((g$J$21501$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$21502$CSxK@) (if g$T$21502$CSxK@ (cons g$J$21501$CSxK@ g$kwd$13068$CSxK@ g$kwd*$13056$CSxK@) (g$J$21501$CSxK@ g$kwd*$13056$CSxK@)))) g$kwd$13068$CSxK@))) (case-lambda ((g$V$21500$CSxK@) ((case-lambda ((g$C$21498$CSxK@ g$kwd*$13071$CSxK@) ((case-lambda ((g$C$21466$CSxK@ g$t$13072$CSxK@) (eqv? (case-lambda ((g$T$21467$CSxK@) (if g$T$21467$CSxK@ (call-with-values g$C$21466$CSxK@ (case-lambda ((g$C$21332$CSxK@) (g$parse-define$10650$CSxK@ g$C$21332$CSxK@ g$e$13061$CSxK@))) (case-lambda ((g$C$21345$CSxK@ g$id$13075$CSxK@ g$rhs$13076$CSxK@) ((case-lambda ((g$C$21341$CSxK@ g$rhs$13077$CSxK@ g$id$13078$CSxK@) ((case-lambda ((g$J$21343$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$21344$CSxK@) (if g$T$21344$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21343$CSxK@ '#f '"cannot redefine keyword" g$e$13061$CSxK@) (void g$J$21343$CSxK@)))) g$id$13078$CSxK@ g$kwd*$13071$CSxK@))) (case-lambda (g$IGNORE$21342$CSxK@ (call-with-values g$C$21341$CSxK@ (case-lambda ((g$C$21333$CSxK@) (g$gen-define-label+loc$10286$CSxK@ g$C$21333$CSxK@ g$id$13078$CSxK@ g$rib$13058$CSxK@ g$sd?$13060$CSxK@))) (case-lambda ((g$C$21340$CSxK@ g$lab$13081$CSxK@ g$lex$13082$CSxK@) ((case-lambda ((g$C$21334$CSxK@ g$lex$13083$CSxK@ g$lab$13084$CSxK@) (g$extend-rib!$10308$CSxK@ (case-lambda (g$IGNORE$21335$CSxK@ (cons (case-lambda ((g$V$21336$CSxK@) (cons (case-lambda ((g$V$21337$CSxK@) (g$add-lexical$10657$CSxK@ (case-lambda ((g$V$21338$CSxK@) (cdr (case-lambda ((g$V$21339$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21334$CSxK@ g$V$21339$CSxK@ g$V$21338$CSxK@ g$mr$13052$CSxK@ g$V$21337$CSxK@ g$V$21336$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$e*$13050$CSxK@))) g$lab$13084$CSxK@ g$lex$13083$CSxK@ g$r$13051$CSxK@))) g$lex$13083$CSxK@ g$lex*$13053$CSxK@))) g$rhs$13077$CSxK@ g$rhs*$13054$CSxK@))) g$rib$13058$CSxK@ g$id$13078$CSxK@ g$lab$13084$CSxK@ g$sd?$13060$CSxK@))) g$C$21340$CSxK@ g$lex$13082$CSxK@ g$lab$13081$CSxK@))))))))) g$C$21345$CSxK@ g$rhs$13076$CSxK@ g$id$13075$CSxK@)))) (eqv? (case-lambda ((g$T$21468$CSxK@) (if g$T$21468$CSxK@ (call-with-values g$C$21466$CSxK@ (case-lambda ((g$C$21346$CSxK@) (g$parse-define-syntax$10651$CSxK@ g$C$21346$CSxK@ g$e$13061$CSxK@))) (case-lambda ((g$C$21363$CSxK@ g$id$13087$CSxK@ g$rhs$13088$CSxK@) ((case-lambda ((g$C$21358$CSxK@ g$rhs$13089$CSxK@ g$id$13090$CSxK@) ((case-lambda ((g$J$21361$CSxK@) (g$bound-id-member?$10354$CSxK@ (case-lambda ((g$T$21362$CSxK@) (if g$T$21362$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21361$CSxK@ '#f '"cannot redefine keyword" g$e$13061$CSxK@) (void g$J$21361$CSxK@)))) g$id$13090$CSxK@ g$kwd*$13071$CSxK@))) (case-lambda (g$IGNORE$21359$CSxK@ (g$gen-define-label$10287$CSxK@ (case-lambda ((g$V$21360$CSxK@) ((case-lambda ((g$C$21356$CSxK@ g$lab$13091$CSxK@) (g$expand-transformer$10757$CSxK@ (case-lambda ((g$V$21357$CSxK@) ((case-lambda ((g$C$21353$CSxK@ g$expanded-rhs$13092$CSxK@) (g$extend-rib!$10308$CSxK@ (case-lambda (g$IGNORE$21354$CSxK@ (g$make-eval-transformer$10389$CSxK@ (case-lambda ((g$V$21355$CSxK@) ((case-lambda ((g$C$21347$CSxK@ g$b$13093$CSxK@) (cons (case-lambda ((g$V$21348$CSxK@) (cons (case-lambda ((g$V$21349$CSxK@) (cons (case-lambda ((g$V$21350$CSxK@) (cons (case-lambda ((g$V$21351$CSxK@) (cdr (case-lambda ((g$V$21352$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21347$CSxK@ g$V$21352$CSxK@ g$V$21351$CSxK@ g$V$21349$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$e*$13050$CSxK@))) g$V$21350$CSxK@ g$r$13051$CSxK@))) g$lab$13091$CSxK@ g$b$13093$CSxK@))) g$V$21348$CSxK@ g$mr$13052$CSxK@))) g$lab$13091$CSxK@ g$b$13093$CSxK@))) g$C$21353$CSxK@ g$V$21355$CSxK@))) g$expanded-rhs$13092$CSxK@))) g$rib$13058$CSxK@ g$id$13090$CSxK@ g$lab$13091$CSxK@ g$sd?$13060$CSxK@))) g$C$21356$CSxK@ g$V$21357$CSxK@))) g$rhs$13089$CSxK@ g$mr$13052$CSxK@))) g$C$21358$CSxK@ g$V$21360$CSxK@))) g$id$13090$CSxK@ g$rib$13058$CSxK@ g$sd?$13060$CSxK@)))))) g$C$21363$CSxK@ g$rhs$13088$CSxK@ g$id$13087$CSxK@)))) (g$memv$6706$CSxK@ (case-lambda ((g$T$21469$CSxK@) (if g$T$21469$CSxK@ ((case-lambda ((g$C$21390$CSxK@ g$t$13094$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21391$CSxK@) ((case-lambda ((g$C$21387$CSxK@ g$ls/false$13095$CSxK@) ((case-lambda ((g$J$21389$CSxK@) (if g$ls/false$13095$CSxK@ (apply g$J$21389$CSxK@ (case-lambda ((g$C$21364$CSxK@ g$xlhs*$13096$CSxK@ g$xrhs*$13097$CSxK@ g$xbody*$13098$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$V$21365$CSxK@) (not (case-lambda ((g$T$21366$CSxK@) (if g$T$21366$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21364$CSxK@ '#f '"invalid identifiers" g$e$13061$CSxK@) (void g$C$21364$CSxK@)))) g$V$21365$CSxK@))) g$xlhs*$13096$CSxK@))) g$ls/false$13095$CSxK@) (g$J$21389$CSxK@ '#f)))) (case-lambda ((g$T$21388$CSxK@) (if g$T$21388$CSxK@ (apply g$C$21387$CSxK@ (case-lambda ((g$C$21385$CSxK@ g$xlhs*$13099$CSxK@ g$xrhs*$13100$CSxK@ g$xbody*$13101$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21386$CSxK@) ((case-lambda ((g$C$21383$CSxK@ g$xlab*$13102$CSxK@) (g$make-full-rib$10313$CSxK@ (case-lambda ((g$V$21384$CSxK@) ((case-lambda ((g$C$21381$CSxK@ g$xrib$13103$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21382$CSxK@) ((case-lambda ((g$C$21368$CSxK@ g$xb*$13104$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21369$CSxK@) (append (case-lambda ((g$V$21370$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21371$CSxK@) (append (case-lambda ((g$V$21372$CSxK@) (cdr (case-lambda ((g$V$21373$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21374$CSxK@) (append (case-lambda ((g$V$21375$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21368$CSxK@ g$V$21375$CSxK@ g$V$21372$CSxK@ g$V$21370$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$V$21374$CSxK@ g$V$21373$CSxK@))) (case-lambda ((g$C$21367$CSxK@ g$x$13105$CSxK@) (g$add-subst$10337$CSxK@ g$C$21367$CSxK@ g$xrib$13103$CSxK@ g$x$13105$CSxK@))) g$xbody*$13101$CSxK@))) g$e*$13050$CSxK@))) g$V$21371$CSxK@ g$r$13051$CSxK@))) cons g$xlab*$13102$CSxK@ g$xb*$13104$CSxK@))) g$V$21369$CSxK@ g$mr$13052$CSxK@))) cons g$xlab*$13102$CSxK@ g$xb*$13104$CSxK@))) g$C$21381$CSxK@ g$V$21382$CSxK@))) (case-lambda ((g$C$21376$CSxK@ g$x$13106$CSxK@) ((case-lambda ((g$J$21379$CSxK@) (eq? (case-lambda ((g$T$21380$CSxK@) (if g$T$21380$CSxK@ (g$J$21379$CSxK@ g$x$13106$CSxK@) (g$add-subst$10337$CSxK@ g$J$21379$CSxK@ g$xrib$13103$CSxK@ g$x$13106$CSxK@)))) g$type$13070$CSxK@ 'let-syntax))) (case-lambda ((g$V$21377$CSxK@) (g$expand-transformer$10757$CSxK@ (case-lambda ((g$V$21378$CSxK@) (g$make-eval-transformer$10389$CSxK@ g$C$21376$CSxK@ g$V$21378$CSxK@))) g$V$21377$CSxK@ g$mr$13052$CSxK@)))))) g$xrhs*$13100$CSxK@))) g$C$21383$CSxK@ g$V$21384$CSxK@))) g$xlhs*$13099$CSxK@ g$xlab*$13102$CSxK@))) g$C$21385$CSxK@ g$V$21386$CSxK@))) g$gen-label$10284$CSxK@ g$xlhs*$13099$CSxK@))) g$ls/false$13095$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21387$CSxK@ '#f '"invalid syntax" g$t$13094$CSxK@))))))) g$C$21390$CSxK@ g$V$21391$CSxK@))) g$t$13094$CSxK@ '(_ #(each (any any)) . each-any)))) g$C$21466$CSxK@ g$e$13061$CSxK@) (eqv? (case-lambda ((g$T$21470$CSxK@) (if g$T$21470$CSxK@ ((case-lambda ((g$C$21396$CSxK@ g$t$13107$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21397$CSxK@) ((case-lambda ((g$C$21395$CSxK@ g$ls/false$13108$CSxK@) (if g$ls/false$13108$CSxK@ (apply g$C$21395$CSxK@ (case-lambda ((g$C$21392$CSxK@ g$x*$13109$CSxK@) (cdr (case-lambda ((g$V$21393$CSxK@) (append (case-lambda ((g$V$21394$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21392$CSxK@ g$V$21394$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$x*$13109$CSxK@ g$V$21393$CSxK@))) g$e*$13050$CSxK@))) g$ls/false$13108$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21395$CSxK@ '#f '"invalid syntax" g$t$13107$CSxK@)))) g$C$21396$CSxK@ g$V$21397$CSxK@))) g$t$13107$CSxK@ '(_ . each-any)))) g$C$21466$CSxK@ g$e$13061$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21471$CSxK@) (if g$T$21471$CSxK@ (cdr (case-lambda ((g$V$21472$CSxK@) (g$chi-global-macro$10725$CSxK@ (case-lambda ((g$V$21473$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$21474$CSxK@) (cons (case-lambda ((g$V$21475$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21466$CSxK@ g$V$21475$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$V$21474$CSxK@ g$V$21472$CSxK@))) g$rib$13058$CSxK@ g$V$21473$CSxK@))) g$value$13069$CSxK@ g$e$13061$CSxK@ g$r$13051$CSxK@))) g$e*$13050$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21476$CSxK@) (if g$T$21476$CSxK@ (cdr (case-lambda ((g$V$21477$CSxK@) (g$chi-local-macro$10724$CSxK@ (case-lambda ((g$V$21478$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$21479$CSxK@) (cons (case-lambda ((g$V$21480$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21466$CSxK@ g$V$21480$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$V$21479$CSxK@ g$V$21477$CSxK@))) g$rib$13058$CSxK@ g$V$21478$CSxK@))) g$value$13069$CSxK@ g$e$13061$CSxK@ g$r$13051$CSxK@))) g$e*$13050$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$21481$CSxK@) (if g$T$21481$CSxK@ (cdr (case-lambda ((g$V$21482$CSxK@) (g$chi-macro$10723$CSxK@ (case-lambda ((g$V$21483$CSxK@) (g$add-subst$10337$CSxK@ (case-lambda ((g$V$21484$CSxK@) (cons (case-lambda ((g$V$21485$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21466$CSxK@ g$V$21485$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$V$21484$CSxK@ g$V$21482$CSxK@))) g$rib$13058$CSxK@ g$V$21483$CSxK@))) g$value$13069$CSxK@ g$e$13061$CSxK@ g$r$13051$CSxK@))) g$e*$13050$CSxK@) (eqv? (case-lambda ((g$T$21486$CSxK@) (if g$T$21486$CSxK@ (call-with-values g$C$21466$CSxK@ (case-lambda ((g$C$21398$CSxK@) (g$chi-internal-module$10755$CSxK@ g$C$21398$CSxK@ g$e$13061$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@))) (case-lambda ((g$C$21403$CSxK@ g$lex*$13118$CSxK@ g$rhs*$13119$CSxK@ g$m-exp-id*$13120$CSxK@ g$m-exp-lab*$13121$CSxK@ g$r$13122$CSxK@ g$mr$13123$CSxK@ g$mod**$13124$CSxK@ g$kwd*$13125$CSxK@) ((case-lambda ((g$C$21400$CSxK@ g$kwd*$13126$CSxK@ g$mod**$13127$CSxK@ g$mr$13128$CSxK@ g$r$13129$CSxK@ g$m-exp-lab*$13130$CSxK@ g$m-exp-id*$13131$CSxK@ g$rhs*$13132$CSxK@ g$lex*$13133$CSxK@) (g$vector-for-each$7445$CSxK@ (case-lambda (g$IGNORE$21401$CSxK@ (cdr (case-lambda ((g$V$21402$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21400$CSxK@ g$V$21402$CSxK@ g$r$13129$CSxK@ g$mr$13128$CSxK@ g$lex*$13133$CSxK@ g$rhs*$13132$CSxK@ g$mod**$13127$CSxK@ g$kwd*$13126$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$e*$13050$CSxK@))) (case-lambda ((g$C$21399$CSxK@ g$id$13134$CSxK@ g$lab$13135$CSxK@) (g$extend-rib!$10308$CSxK@ g$C$21399$CSxK@ g$rib$13058$CSxK@ g$id$13134$CSxK@ g$lab$13135$CSxK@ g$sd?$13060$CSxK@))) g$m-exp-id*$13131$CSxK@ g$m-exp-lab*$13130$CSxK@))) g$C$21403$CSxK@ g$kwd*$13125$CSxK@ g$mod**$13124$CSxK@ g$mr$13123$CSxK@ g$r$13122$CSxK@ g$m-exp-lab*$13121$CSxK@ g$m-exp-id*$13120$CSxK@ g$rhs*$13119$CSxK@ g$lex*$13118$CSxK@)))) (eqv? (case-lambda ((g$T$21487$CSxK@) (if g$T$21487$CSxK@ (g$stx->datum$10358$CSxK@ (case-lambda ((g$V$21488$CSxK@) (g$library-expander$10812$CSxK@ (case-lambda (g$IGNORE$21489$CSxK@ (cdr (case-lambda ((g$V$21490$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21466$CSxK@ g$V$21490$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$e*$13050$CSxK@))) g$V$21488$CSxK@))) g$e$13061$CSxK@) (eqv? (case-lambda ((g$T$21491$CSxK@) (if g$T$21491$CSxK@ ((case-lambda ((g$C$21408$CSxK@ g$t$13136$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21409$CSxK@) ((case-lambda ((g$C$21407$CSxK@ g$ls/false$13137$CSxK@) (if g$ls/false$13137$CSxK@ (apply g$C$21407$CSxK@ (case-lambda ((g$C$21404$CSxK@ g$exp-decl*$13138$CSxK@) (append (case-lambda ((g$V$21405$CSxK@) (cdr (case-lambda ((g$V$21406$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21404$CSxK@ g$V$21406$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$V$21405$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$e*$13050$CSxK@))) g$exp-decl*$13138$CSxK@ g$exp*$13057$CSxK@))) g$ls/false$13137$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21407$CSxK@ '#f '"invalid syntax" g$t$13136$CSxK@)))) g$C$21408$CSxK@ g$V$21409$CSxK@))) g$t$13136$CSxK@ '(_ . each-any)))) g$C$21466$CSxK@ g$e$13061$CSxK@) (eqv? (case-lambda ((g$T$21492$CSxK@) (if g$T$21492$CSxK@ ((case-lambda ((g$C$21465$CSxK@) ((case-lambda ((g$C$21462$CSxK@ g$module-import?$13139$CSxK@ g$module-import$13140$CSxK@ g$library-import$13141$CSxK@) (begin (set! g$module-import?$13139$CSxK@ (case-lambda ((g$C$21425$CSxK@ g$e$13181$CSxK@) ((case-lambda ((g$C$21423$CSxK@ g$t$13182$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21424$CSxK@) ((case-lambda ((g$C$21420$CSxK@ g$ls/false$13183$CSxK@) ((case-lambda ((g$J$21422$CSxK@) (if g$ls/false$13183$CSxK@ (apply g$J$21422$CSxK@ (case-lambda ((g$C$21410$CSxK@ g$id$13184$CSxK@) (g$id?$10347$CSxK@ g$C$21410$CSxK@ g$id$13184$CSxK@))) g$ls/false$13183$CSxK@) (g$J$21422$CSxK@ '#f)))) (case-lambda ((g$T$21421$CSxK@) (if g$T$21421$CSxK@ (apply g$C$21420$CSxK@ (case-lambda ((g$C$21411$CSxK@ g$id$13185$CSxK@) (g$C$21411$CSxK@ '#t))) g$ls/false$13183$CSxK@) ((case-lambda ((g$C$21418$CSxK@ g$t$13186$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21419$CSxK@) ((case-lambda ((g$C$21417$CSxK@ g$ls/false$13187$CSxK@) (if g$ls/false$13187$CSxK@ (apply g$C$21417$CSxK@ (case-lambda ((g$C$21412$CSxK@ g$imp*$13188$CSxK@) (g$C$21412$CSxK@ '#f))) g$ls/false$13187$CSxK@) ((case-lambda ((g$C$21415$CSxK@ g$t$13189$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21416$CSxK@) ((case-lambda ((g$C$21414$CSxK@ g$ls/false$13190$CSxK@) (if g$ls/false$13190$CSxK@ (apply g$C$21414$CSxK@ (case-lambda ((g$C$21413$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21413$CSxK@ '#f '"malformed import form" g$e$13181$CSxK@))) g$ls/false$13190$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21414$CSxK@ '#f '"invalid syntax" g$t$13189$CSxK@)))) g$C$21415$CSxK@ g$V$21416$CSxK@))) g$t$13189$CSxK@ '_))) g$C$21417$CSxK@ g$t$13186$CSxK@)))) g$C$21418$CSxK@ g$V$21419$CSxK@))) g$t$13186$CSxK@ '(_ . each-any)))) g$C$21420$CSxK@ g$t$13182$CSxK@))))))) g$C$21423$CSxK@ g$V$21424$CSxK@))) g$t$13182$CSxK@ '(_ any)))) g$C$21425$CSxK@ g$e$13181$CSxK@)))) (begin (set! g$module-import$13140$CSxK@ (case-lambda ((g$C$21441$CSxK@ g$e$13164$CSxK@ g$r$13165$CSxK@) ((case-lambda ((g$C$21439$CSxK@ g$t$13166$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21440$CSxK@) ((case-lambda ((g$C$21436$CSxK@ g$ls/false$13167$CSxK@) ((case-lambda ((g$J$21438$CSxK@) (if g$ls/false$13167$CSxK@ (apply g$J$21438$CSxK@ (case-lambda ((g$C$21426$CSxK@ g$id$13168$CSxK@) (g$id?$10347$CSxK@ g$C$21426$CSxK@ g$id$13168$CSxK@))) g$ls/false$13167$CSxK@) (g$J$21438$CSxK@ '#f)))) (case-lambda ((g$T$21437$CSxK@) (if g$T$21437$CSxK@ (apply g$C$21436$CSxK@ (case-lambda ((g$C$21435$CSxK@ g$id$13169$CSxK@) (call-with-values g$C$21435$CSxK@ (case-lambda ((g$C$21427$CSxK@) (g$syntax-type$10367$CSxK@ g$C$21427$CSxK@ g$id$13169$CSxK@ g$r$13165$CSxK@))) (case-lambda ((g$C$21434$CSxK@ g$type$13173$CSxK@ g$value$13174$CSxK@ g$kwd$13175$CSxK@) ((case-lambda ((g$C$21433$CSxK@ g$kwd$13176$CSxK@ g$value$13177$CSxK@ g$type$13178$CSxK@) ((case-lambda ((g$C$21431$CSxK@ g$t$13179$CSxK@) (eqv? (case-lambda ((g$T$21432$CSxK@) (if g$T$21432$CSxK@ ((case-lambda ((g$C$21428$CSxK@ g$iface$13180$CSxK@) (g$module-interface-exp-lab-vec$10750$CSxK@ (case-lambda ((g$V$21429$CSxK@) (g$module-interface-exp-id*$10754$CSxK@ (case-lambda ((g$V$21430$CSxK@) (values g$C$21428$CSxK@ g$V$21430$CSxK@ g$V$21429$CSxK@))) g$iface$13180$CSxK@ g$id$13169$CSxK@))) g$iface$13180$CSxK@))) g$C$21431$CSxK@ g$value$13177$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21431$CSxK@ '#f '"invalid import" g$e$13164$CSxK@)))) g$t$13179$CSxK@ '$module))) g$C$21433$CSxK@ g$type$13178$CSxK@))) g$C$21434$CSxK@ g$kwd$13175$CSxK@ g$value$13174$CSxK@ g$type$13173$CSxK@)))))) g$ls/false$13167$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21436$CSxK@ '#f '"invalid syntax" g$t$13166$CSxK@))))))) g$C$21439$CSxK@ g$V$21440$CSxK@))) g$t$13166$CSxK@ '(_ any)))) g$C$21441$CSxK@ g$e$13164$CSxK@)))) (begin (set! g$library-import$13141$CSxK@ (case-lambda ((g$C$21456$CSxK@ g$e$13150$CSxK@) ((case-lambda ((g$C$21454$CSxK@ g$t$13151$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21455$CSxK@) ((case-lambda ((g$C$21453$CSxK@ g$ls/false$13152$CSxK@) (if g$ls/false$13152$CSxK@ (apply g$C$21453$CSxK@ (case-lambda ((g$C$21448$CSxK@ g$ctxt$13153$CSxK@ g$imp*$13154$CSxK@) (call-with-values g$C$21448$CSxK@ (case-lambda ((g$C$21442$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21443$CSxK@) (g$parse-import-spec*$10761$CSxK@ g$C$21442$CSxK@ g$V$21443$CSxK@))) g$imp*$13154$CSxK@))) (case-lambda ((g$C$21447$CSxK@ g$subst-names$13157$CSxK@ g$subst-labels$13158$CSxK@) ((case-lambda ((g$C$21445$CSxK@ g$subst-labels$13159$CSxK@ g$subst-names$13160$CSxK@) (g$vector-map$7444$CSxK@ (case-lambda ((g$V$21446$CSxK@) (values g$C$21445$CSxK@ g$V$21446$CSxK@ g$subst-labels$13159$CSxK@))) (case-lambda ((g$C$21444$CSxK@ g$name$13161$CSxK@) (g$datum->stx$10330$CSxK@ g$C$21444$CSxK@ g$ctxt$13153$CSxK@ g$name$13161$CSxK@))) g$subst-names$13160$CSxK@))) g$C$21447$CSxK@ g$subst-labels$13158$CSxK@ g$subst-names$13157$CSxK@)))))) g$ls/false$13152$CSxK@) ((case-lambda ((g$C$21451$CSxK@ g$t$13162$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21452$CSxK@) ((case-lambda ((g$C$21450$CSxK@ g$ls/false$13163$CSxK@) (if g$ls/false$13163$CSxK@ (apply g$C$21450$CSxK@ (case-lambda ((g$C$21449$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21449$CSxK@ '#f '"invalid import form" g$e$13150$CSxK@))) g$ls/false$13163$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21450$CSxK@ '#f '"invalid syntax" g$t$13162$CSxK@)))) g$C$21451$CSxK@ g$V$21452$CSxK@))) g$t$13162$CSxK@ '_))) g$C$21453$CSxK@ g$t$13151$CSxK@)))) g$C$21454$CSxK@ g$V$21455$CSxK@))) g$t$13151$CSxK@ '(any . each-any)))) g$C$21456$CSxK@ g$e$13150$CSxK@)))) (call-with-values (case-lambda (g$IGNORE$21463$CSxK@ (cdr (case-lambda ((g$V$21464$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21462$CSxK@ g$V$21464$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ g$mix?$13059$CSxK@ g$sd?$13060$CSxK@))) g$e*$13050$CSxK@))) (case-lambda ((g$C$21457$CSxK@) (g$module-import?$13139$CSxK@ (case-lambda ((g$T$21458$CSxK@) (if g$T$21458$CSxK@ (g$module-import$13140$CSxK@ g$C$21457$CSxK@ g$e$13061$CSxK@ g$r$13051$CSxK@) (g$library-import$13141$CSxK@ g$C$21457$CSxK@ g$e$13061$CSxK@)))) g$e$13061$CSxK@))) (case-lambda ((g$C$21461$CSxK@ g$id*$13144$CSxK@ g$lab*$13145$CSxK@) ((case-lambda ((g$C$21460$CSxK@ g$lab*$13146$CSxK@ g$id*$13147$CSxK@) (g$vector-for-each$7445$CSxK@ g$C$21460$CSxK@ (case-lambda ((g$C$21459$CSxK@ g$id$13148$CSxK@ g$lab$13149$CSxK@) (g$extend-rib!$10308$CSxK@ g$C$21459$CSxK@ g$rib$13058$CSxK@ g$id$13148$CSxK@ g$lab$13149$CSxK@ g$sd?$13060$CSxK@))) g$id*$13147$CSxK@ g$lab*$13146$CSxK@))) g$C$21461$CSxK@ g$lab*$13145$CSxK@ g$id*$13144$CSxK@))))))))) g$C$21465$CSxK@ uninitialized uninitialized uninitialized))) g$C$21466$CSxK@) (if g$mix?$13059$CSxK@ (cons (case-lambda ((g$V$21493$CSxK@) (cons (case-lambda ((g$V$21494$CSxK@) (g$gen-lexical$10282$CSxK@ (case-lambda ((g$V$21495$CSxK@) (cons (case-lambda ((g$V$21496$CSxK@) (cdr (case-lambda ((g$V$21497$CSxK@) (g$chi-body*$10756$CSxK@ g$C$21466$CSxK@ g$V$21497$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$V$21496$CSxK@ g$V$21494$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@ g$rib$13058$CSxK@ '#t g$sd?$13060$CSxK@))) g$e*$13050$CSxK@))) g$V$21495$CSxK@ g$lex*$13053$CSxK@))) 'dummy))) g$V$21493$CSxK@ g$rhs*$13054$CSxK@))) 'top-expr g$e$13061$CSxK@) (values g$C$21466$CSxK@ g$e*$13050$CSxK@ g$r$13051$CSxK@ g$mr$13052$CSxK@ g$lex*$13053$CSxK@ g$rhs*$13054$CSxK@ g$mod**$13055$CSxK@ g$kwd*$13071$CSxK@ g$exp*$13057$CSxK@))))) g$t$13072$CSxK@ 'import)))) g$t$13072$CSxK@ 'export)))) g$t$13072$CSxK@ 'library)))) g$t$13072$CSxK@ 'module)))) g$t$13072$CSxK@ '(macro macro!))))) g$t$13072$CSxK@ '(local-macro local-macro!))))) g$t$13072$CSxK@ '(global-macro global-macro!))))) g$t$13072$CSxK@ 'begin)))) g$t$13072$CSxK@ '(let-syntax letrec-syntax))))) g$t$13072$CSxK@ 'define-syntax)))) g$t$13072$CSxK@ 'define))) g$C$21498$CSxK@ g$type$13070$CSxK@))) g$C$21499$CSxK@ g$V$21500$CSxK@)))))) g$C$21503$CSxK@ g$kwd$13067$CSxK@ g$value$13066$CSxK@ g$type$13065$CSxK@)))))) g$C$21505$CSxK@ g$V$21507$CSxK@))) g$e*$13050$CSxK@)))) g$e*$13050$CSxK@)))))) (library-letrec*-identity 'g$chi-body*$10756$CSxK@))) (g$expand-transformer$10757$CSxK@ g$expand-transformer$14297$CSxK@ ((case-lambda ((g$C$22822$CSxK@) (g$C$22822$CSxK@ (case-lambda ((g$C$21530$CSxK@ g$expr$13191$CSxK@ g$r$13192$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$21531$CSxK@) ((case-lambda ((g$C$21528$CSxK@ g$rtc$13193$CSxK@) ((case-lambda ((g$C$21526$CSxK@ g$inv-collector$13201$CSxK@ g$vis-collector$13202$CSxK@ g$inv-collector$13203$CSxK@ g$vis-collector$13204$CSxK@) ((case-lambda ((g$C$21517$CSxK@ g$swap$13205$CSxK@) (dynamic-wind g$C$21517$CSxK@ g$swap$13205$CSxK@ (case-lambda ((g$C$21516$CSxK@) (g$chi-expr$10728$CSxK@ g$C$21516$CSxK@ g$expr$13191$CSxK@ g$r$13192$CSxK@ g$r$13192$CSxK@))) g$swap$13205$CSxK@))) g$C$21526$CSxK@ (case-lambda ((g$C$21522$CSxK@) (g$inv-collector$13201$CSxK@ (case-lambda ((g$V$21523$CSxK@) ((case-lambda ((g$C$21518$CSxK@ g$t$13206$CSxK@) (g$inv-collector$13201$CSxK@ (case-lambda (g$IGNORE$21519$CSxK@ (begin (set! g$inv-collector$13203$CSxK@ g$t$13206$CSxK@) (g$C$21518$CSxK@ (cps-void))))) g$inv-collector$13203$CSxK@))) (case-lambda (g$IGNORE$21524$CSxK@ (g$vis-collector$13202$CSxK@ (case-lambda ((g$V$21525$CSxK@) ((case-lambda ((g$C$21520$CSxK@ g$t$13207$CSxK@) (g$vis-collector$13202$CSxK@ (case-lambda (g$IGNORE$21521$CSxK@ (begin (set! g$vis-collector$13204$CSxK@ g$t$13207$CSxK@) (g$C$21520$CSxK@ (cps-void))))) g$vis-collector$13204$CSxK@))) g$C$21522$CSxK@ g$V$21525$CSxK@)))))) g$V$21523$CSxK@))))))))) (case-lambda ((g$V$21529$CSxK@) ((case-lambda ((g$C$21511$CSxK@ g$expanded-rhs$13194$CSxK@) (g$rtc$13193$CSxK@ (case-lambda ((g$V$21512$CSxK@) (g$vis-collector$10765$CSxK@ (case-lambda ((g$V$21513$CSxK@) ((case-lambda ((g$C$21510$CSxK@ g$mark-visit$13195$CSxK@) (g$C$21510$CSxK@ (case-lambda ((g$C$21508$CSxK@ g$x$13196$CSxK@) (g$invoke-library$10083$CSxK@ (case-lambda (g$IGNORE$21509$CSxK@ (g$mark-visit$13195$CSxK@ g$C$21508$CSxK@ g$x$13196$CSxK@))) g$x$13196$CSxK@)))))) (case-lambda ((g$V$21514$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$21515$CSxK@ (g$C$21511$CSxK@ g$expanded-rhs$13194$CSxK@))) g$V$21514$CSxK@ g$V$21512$CSxK@))) g$V$21513$CSxK@))))))))) g$C$21528$CSxK@ g$V$21529$CSxK@))) g$inv-collector$10764$CSxK@ g$vis-collector$10765$CSxK@ g$rtc$13193$CSxK@ (case-lambda ((g$C$21527$CSxK@ g$x$13208$CSxK@) (values g$C$21527$CSxK@)))))) g$C$21530$CSxK@ g$V$21531$CSxK@))))))))) (library-letrec*-identity 'g$expand-transformer$10757$CSxK@))) (g$parse-exports$10758$CSxK@ g$parse-exports$14298$CSxK@ ((case-lambda ((g$C$22823$CSxK@) (g$C$22823$CSxK@ (case-lambda ((g$C$21571$CSxK@ g$exp*$13209$CSxK@) ((case-lambda ((g$C$21570$CSxK@ g$f$13210$CSxK@) ((case-lambda ((g$C$21533$CSxK@ g$f$21532$CSxK@) (begin (set! g$f$13210$CSxK@ g$f$21532$CSxK@) (g$C$21533$CSxK@ g$f$13210$CSxK@)))) g$C$21570$CSxK@ (case-lambda ((g$C$21561$CSxK@ g$exp*$13211$CSxK@ g$int*$13212$CSxK@ g$ext*$13213$CSxK@) (null? (case-lambda ((g$T$21562$CSxK@) (if g$T$21562$CSxK@ ((case-lambda ((g$J$21565$CSxK@) (g$valid-bound-ids?$10352$CSxK@ (case-lambda ((g$V$21566$CSxK@) (not (case-lambda ((g$T$21567$CSxK@) (if g$T$21567$CSxK@ (g$find-dups$10738$CSxK@ (case-lambda ((g$V$21568$CSxK@) (g$syntax-violation$10828$CSxK@ g$J$21565$CSxK@ 'export '"invalid exports" g$V$21568$CSxK@))) g$ext*$13213$CSxK@) (void g$J$21565$CSxK@)))) g$V$21566$CSxK@))) g$ext*$13213$CSxK@))) (case-lambda (g$IGNORE$21563$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$21564$CSxK@) (values g$C$21561$CSxK@ g$V$21564$CSxK@ g$int*$13212$CSxK@))) g$syntax->datum$10831$CSxK@ g$ext*$13213$CSxK@)))) (car (case-lambda ((g$V$21569$CSxK@) ((case-lambda ((g$C$21559$CSxK@ g$t$13214$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21560$CSxK@) ((case-lambda ((g$C$21558$CSxK@ g$ls/false$13215$CSxK@) (if g$ls/false$13215$CSxK@ (apply g$C$21558$CSxK@ (case-lambda ((g$C$21534$CSxK@ g$rename$13216$CSxK@ g$i*$13217$CSxK@ g$e*$13218$CSxK@) ((case-lambda ((g$J$21539$CSxK@) ((case-lambda ((g$J$21543$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21544$CSxK@) (eq? (case-lambda ((g$T$21545$CSxK@) (if g$T$21545$CSxK@ (g$for-all$6711$CSxK@ (case-lambda ((g$T$21546$CSxK@) (if g$T$21546$CSxK@ (g$for-all$6711$CSxK@ g$J$21543$CSxK@ g$id?$10347$CSxK@ g$e*$13218$CSxK@) (g$J$21543$CSxK@ '#f)))) g$id?$10347$CSxK@ g$i*$13217$CSxK@) (g$J$21543$CSxK@ '#f)))) g$V$21544$CSxK@ 'rename))) g$rename$13216$CSxK@))) (case-lambda ((g$V$21540$CSxK@) (not (case-lambda ((g$T$21541$CSxK@) (if g$T$21541$CSxK@ (car (case-lambda ((g$V$21542$CSxK@) (g$syntax-violation$10828$CSxK@ g$J$21539$CSxK@ 'export '"invalid export specifier" g$V$21542$CSxK@))) g$exp*$13211$CSxK@) (void g$J$21539$CSxK@)))) g$V$21540$CSxK@)))))) (case-lambda (g$IGNORE$21535$CSxK@ (append (case-lambda ((g$V$21536$CSxK@) (append (case-lambda ((g$V$21537$CSxK@) (cdr (case-lambda ((g$V$21538$CSxK@) (g$f$13210$CSxK@ g$C$21534$CSxK@ g$V$21538$CSxK@ g$V$21537$CSxK@ g$V$21536$CSxK@))) g$exp*$13211$CSxK@))) g$i*$13217$CSxK@ g$int*$13212$CSxK@))) g$e*$13218$CSxK@ g$ext*$13213$CSxK@)))))) g$ls/false$13215$CSxK@) ((case-lambda ((g$C$21556$CSxK@ g$t$13219$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21557$CSxK@) ((case-lambda ((g$C$21555$CSxK@ g$ls/false$13220$CSxK@) (if g$ls/false$13220$CSxK@ (apply g$C$21555$CSxK@ (case-lambda ((g$C$21547$CSxK@ g$ie$13221$CSxK@) ((case-lambda ((g$J$21552$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$V$21553$CSxK@) (not (case-lambda ((g$T$21554$CSxK@) (if g$T$21554$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21552$CSxK@ 'export '"invalid export" g$ie$13221$CSxK@) (void g$J$21552$CSxK@)))) g$V$21553$CSxK@))) g$ie$13221$CSxK@))) (case-lambda (g$IGNORE$21548$CSxK@ (cons (case-lambda ((g$V$21549$CSxK@) (cons (case-lambda ((g$V$21550$CSxK@) (cdr (case-lambda ((g$V$21551$CSxK@) (g$f$13210$CSxK@ g$C$21547$CSxK@ g$V$21551$CSxK@ g$V$21550$CSxK@ g$V$21549$CSxK@))) g$exp*$13211$CSxK@))) g$ie$13221$CSxK@ g$int*$13212$CSxK@))) g$ie$13221$CSxK@ g$ext*$13213$CSxK@)))))) g$ls/false$13220$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21555$CSxK@ '#f '"invalid syntax" g$t$13219$CSxK@)))) g$C$21556$CSxK@ g$V$21557$CSxK@))) g$t$13219$CSxK@ 'any))) g$C$21558$CSxK@ g$t$13214$CSxK@)))) g$C$21559$CSxK@ g$V$21560$CSxK@))) g$t$13214$CSxK@ '(any . #(each (any any)))))) g$C$21561$CSxK@ g$V$21569$CSxK@))) g$exp*$13211$CSxK@)))) g$exp*$13211$CSxK@)))))) (case-lambda ((g$V$21572$CSxK@) (g$V$21572$CSxK@ g$C$21571$CSxK@ g$exp*$13209$CSxK@ '() '()))) uninitialized)))))) (library-letrec*-identity 'g$parse-exports$10758$CSxK@))) (g$parse-library-name$10759$CSxK@ g$parse-library-name$14299$CSxK@ ((case-lambda ((g$C$22824$CSxK@) (g$C$22824$CSxK@ (case-lambda ((g$C$21614$CSxK@ g$spec$13222$CSxK@) ((case-lambda ((g$C$21613$CSxK@ g$parse$13223$CSxK@) (begin (set! g$parse$13223$CSxK@ (case-lambda ((g$C$21606$CSxK@ g$x$13230$CSxK@) ((case-lambda ((g$C$21604$CSxK@ g$t$13231$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21605$CSxK@) ((case-lambda ((g$C$21601$CSxK@ g$ls/false$13232$CSxK@) ((case-lambda ((g$J$21603$CSxK@) (if g$ls/false$13232$CSxK@ (apply g$J$21603$CSxK@ (case-lambda ((g$C$21577$CSxK@ g$v*$13233$CSxK@) (g$for-all$6711$CSxK@ g$C$21577$CSxK@ (case-lambda ((g$C$21575$CSxK@ g$x$13234$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21576$CSxK@) ((case-lambda ((g$C$21573$CSxK@ g$x$13235$CSxK@) (integer? (case-lambda ((g$T$21574$CSxK@) (if g$T$21574$CSxK@ (exact? g$C$21573$CSxK@ g$x$13235$CSxK@) (g$C$21573$CSxK@ '#f)))) g$x$13235$CSxK@))) g$C$21575$CSxK@ g$V$21576$CSxK@))) g$x$13234$CSxK@))) g$v*$13233$CSxK@))) g$ls/false$13232$CSxK@) (g$J$21603$CSxK@ '#f)))) (case-lambda ((g$T$21602$CSxK@) (if g$T$21602$CSxK@ (apply g$C$21601$CSxK@ (case-lambda ((g$C$21578$CSxK@ g$v*$13236$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21579$CSxK@) (values g$C$21578$CSxK@ '() g$V$21579$CSxK@))) g$syntax->datum$10831$CSxK@ g$v*$13236$CSxK@))) g$ls/false$13232$CSxK@) ((case-lambda ((g$C$21599$CSxK@ g$t$13237$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21600$CSxK@) ((case-lambda ((g$C$21596$CSxK@ g$ls/false$13238$CSxK@) ((case-lambda ((g$J$21598$CSxK@) (if g$ls/false$13238$CSxK@ (apply g$J$21598$CSxK@ (case-lambda ((g$C$21580$CSxK@ g$x$13239$CSxK@ g$rest$13240$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21581$CSxK@) (g$symbol?$7384$CSxK@ g$C$21580$CSxK@ g$V$21581$CSxK@))) g$x$13239$CSxK@))) g$ls/false$13238$CSxK@) (g$J$21598$CSxK@ '#f)))) (case-lambda ((g$T$21597$CSxK@) (if g$T$21597$CSxK@ (apply g$C$21596$CSxK@ (case-lambda ((g$C$21587$CSxK@ g$x$13241$CSxK@ g$rest$13242$CSxK@) (call-with-values g$C$21587$CSxK@ (case-lambda ((g$C$21582$CSxK@) (g$parse$13223$CSxK@ g$C$21582$CSxK@ g$rest$13242$CSxK@))) (case-lambda ((g$C$21586$CSxK@ g$x*$13245$CSxK@ g$v*$13246$CSxK@) ((case-lambda ((g$C$21583$CSxK@ g$v*$13247$CSxK@ g$x*$13248$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21584$CSxK@) (cons (case-lambda ((g$V$21585$CSxK@) (values g$C$21583$CSxK@ g$V$21585$CSxK@ g$v*$13247$CSxK@))) g$V$21584$CSxK@ g$x*$13248$CSxK@))) g$x$13241$CSxK@))) g$C$21586$CSxK@ g$v*$13246$CSxK@ g$x*$13245$CSxK@)))))) g$ls/false$13238$CSxK@) ((case-lambda ((g$C$21594$CSxK@ g$t$13249$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21595$CSxK@) ((case-lambda ((g$C$21593$CSxK@ g$ls/false$13250$CSxK@) (if g$ls/false$13250$CSxK@ (apply g$C$21593$CSxK@ (case-lambda ((g$C$21588$CSxK@) (values g$C$21588$CSxK@ '() '()))) g$ls/false$13250$CSxK@) ((case-lambda ((g$C$21591$CSxK@ g$t$13251$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21592$CSxK@) ((case-lambda ((g$C$21590$CSxK@ g$ls/false$13252$CSxK@) (if g$ls/false$13252$CSxK@ (apply g$C$21590$CSxK@ (case-lambda ((g$C$21589$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21589$CSxK@ '#f '"invalid library name" g$spec$13222$CSxK@))) g$ls/false$13252$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21590$CSxK@ '#f '"invalid syntax" g$t$13251$CSxK@)))) g$C$21591$CSxK@ g$V$21592$CSxK@))) g$t$13251$CSxK@ '_))) g$C$21593$CSxK@ g$t$13249$CSxK@)))) g$C$21594$CSxK@ g$V$21595$CSxK@))) g$t$13249$CSxK@ '()))) g$C$21596$CSxK@ g$t$13237$CSxK@))))))) g$C$21599$CSxK@ g$V$21600$CSxK@))) g$t$13237$CSxK@ '(any . any)))) g$C$21601$CSxK@ g$t$13231$CSxK@))))))) g$C$21604$CSxK@ g$V$21605$CSxK@))) g$t$13231$CSxK@ '(each-any)))) g$C$21606$CSxK@ g$x$13230$CSxK@)))) (call-with-values g$C$21613$CSxK@ (case-lambda ((g$C$21607$CSxK@) (g$parse$13223$CSxK@ g$C$21607$CSxK@ g$spec$13222$CSxK@))) (case-lambda ((g$C$21612$CSxK@ g$name*$13226$CSxK@ g$ver*$13227$CSxK@) ((case-lambda ((g$C$21608$CSxK@ g$ver*$13228$CSxK@ g$name*$13229$CSxK@) ((case-lambda ((g$J$21610$CSxK@) (null? (case-lambda ((g$T$21611$CSxK@) (if g$T$21611$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21610$CSxK@ '#f '"empty library name" g$spec$13222$CSxK@) (void g$J$21610$CSxK@)))) g$name*$13229$CSxK@))) (case-lambda (g$IGNORE$21609$CSxK@ (values g$C$21608$CSxK@ g$name*$13229$CSxK@ g$ver*$13228$CSxK@)))))) g$C$21612$CSxK@ g$ver*$13227$CSxK@ g$name*$13226$CSxK@))))))) g$C$21614$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$parse-library-name$10759$CSxK@))) (g$parse-library$10760$CSxK@ g$parse-library$14300$CSxK@ ((case-lambda ((g$C$22825$CSxK@) (g$C$22825$CSxK@ (case-lambda ((g$C$21631$CSxK@ g$e$13253$CSxK@) ((case-lambda ((g$C$21629$CSxK@ g$t$13254$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21630$CSxK@) ((case-lambda ((g$C$21626$CSxK@ g$ls/false$13255$CSxK@) ((case-lambda ((g$J$21628$CSxK@) (if g$ls/false$13255$CSxK@ (apply g$J$21628$CSxK@ (case-lambda ((g$C$21615$CSxK@ g$library$13256$CSxK@ g$name*$13257$CSxK@ g$export$13258$CSxK@ g$exp*$13259$CSxK@ g$import$13260$CSxK@ g$imp*$13261$CSxK@ g$b*$13262$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21616$CSxK@) (eq? (case-lambda ((g$T$21617$CSxK@) (if g$T$21617$CSxK@ (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21618$CSxK@) (eq? (case-lambda ((g$T$21619$CSxK@) (if g$T$21619$CSxK@ (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21620$CSxK@) (eq? g$C$21615$CSxK@ g$V$21620$CSxK@ 'library))) g$library$13256$CSxK@) (g$C$21615$CSxK@ '#f)))) g$V$21618$CSxK@ 'import))) g$import$13260$CSxK@) (g$C$21615$CSxK@ '#f)))) g$V$21616$CSxK@ 'export))) g$export$13258$CSxK@))) g$ls/false$13255$CSxK@) (g$J$21628$CSxK@ '#f)))) (case-lambda ((g$T$21627$CSxK@) (if g$T$21627$CSxK@ (apply g$C$21626$CSxK@ (case-lambda ((g$C$21621$CSxK@ g$library$13263$CSxK@ g$name*$13264$CSxK@ g$export$13265$CSxK@ g$exp*$13266$CSxK@ g$import$13267$CSxK@ g$imp*$13268$CSxK@ g$b*$13269$CSxK@) (values g$C$21621$CSxK@ g$name*$13264$CSxK@ g$exp*$13266$CSxK@ g$imp*$13268$CSxK@ g$b*$13269$CSxK@))) g$ls/false$13255$CSxK@) ((case-lambda ((g$C$21624$CSxK@ g$t$13270$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21625$CSxK@) ((case-lambda ((g$C$21623$CSxK@ g$ls/false$13271$CSxK@) (if g$ls/false$13271$CSxK@ (apply g$C$21623$CSxK@ (case-lambda ((g$C$21622$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21622$CSxK@ '#f '"malformed library" g$e$13253$CSxK@))) g$ls/false$13271$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21623$CSxK@ '#f '"invalid syntax" g$t$13270$CSxK@)))) g$C$21624$CSxK@ g$V$21625$CSxK@))) g$t$13270$CSxK@ '_))) g$C$21626$CSxK@ g$t$13254$CSxK@))))))) g$C$21629$CSxK@ g$V$21630$CSxK@))) g$t$13254$CSxK@ '(any each-any (any . each-any) (any . each-any) . each-any)))) g$C$21631$CSxK@ g$e$13253$CSxK@)))))) (library-letrec*-identity 'g$parse-library$10760$CSxK@))) (g$parse-import-spec*$10761$CSxK@ g$parse-import-spec*$14301$CSxK@ ((case-lambda ((g$C$22826$CSxK@) (g$C$22826$CSxK@ (case-lambda ((g$C$22015$CSxK@ g$imp*$13272$CSxK@) ((case-lambda ((g$C$22012$CSxK@ g$idsyn?$13273$CSxK@ g$dup-error$13274$CSxK@ g$merge-substs$13275$CSxK@ g$exclude*$13276$CSxK@ g$find*$13277$CSxK@ g$rem*$13278$CSxK@ g$remove-dups$13279$CSxK@ g$parse-library-name$13280$CSxK@ g$import-library$13281$CSxK@ g$get-import$13282$CSxK@ g$add-imports!$13283$CSxK@) (begin (set! g$idsyn?$13273$CSxK@ (case-lambda ((g$C$21632$CSxK@ g$x$13533$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21633$CSxK@) (g$symbol?$7384$CSxK@ g$C$21632$CSxK@ g$V$21633$CSxK@))) g$x$13533$CSxK@)))) (begin (set! g$dup-error$13274$CSxK@ (case-lambda ((g$C$21634$CSxK@ g$name$13532$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21634$CSxK@ 'import '"two imports with different bindings" g$name$13532$CSxK@)))) (begin (set! g$merge-substs$13275$CSxK@ (case-lambda ((g$C$21649$CSxK@ g$s$13523$CSxK@ g$subst$13524$CSxK@) ((case-lambda ((g$C$21644$CSxK@ g$insert-to-subst$13525$CSxK@) (begin (set! g$insert-to-subst$13525$CSxK@ (case-lambda ((g$C$21641$CSxK@ g$a$13526$CSxK@ g$subst$13527$CSxK@) (cdr (case-lambda ((g$V$21642$CSxK@) (car (case-lambda ((g$V$21643$CSxK@) ((case-lambda ((g$C$21639$CSxK@ g$name$13528$CSxK@ g$label$13529$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$21640$CSxK@) ((case-lambda ((g$C$21638$CSxK@ g$t$13530$CSxK@) (if g$t$13530$CSxK@ ((case-lambda ((g$C$21635$CSxK@ g$x$13531$CSxK@) (cdr (case-lambda ((g$V$21636$CSxK@) (eq? (case-lambda ((g$T$21637$CSxK@) (if g$T$21637$CSxK@ (g$C$21635$CSxK@ g$subst$13527$CSxK@) (g$dup-error$13274$CSxK@ g$C$21635$CSxK@ g$name$13528$CSxK@)))) g$V$21636$CSxK@ g$label$13529$CSxK@))) g$x$13531$CSxK@))) g$C$21638$CSxK@ g$t$13530$CSxK@) (cons g$C$21638$CSxK@ g$a$13526$CSxK@ g$subst$13527$CSxK@)))) g$C$21639$CSxK@ g$V$21640$CSxK@))) g$name$13528$CSxK@ g$subst$13527$CSxK@))) g$C$21641$CSxK@ g$V$21643$CSxK@ g$V$21642$CSxK@))) g$a$13526$CSxK@))) g$a$13526$CSxK@)))) (null? (case-lambda ((g$T$21645$CSxK@) (if g$T$21645$CSxK@ (g$C$21644$CSxK@ g$subst$13524$CSxK@) (cdr (case-lambda ((g$V$21646$CSxK@) (g$merge-substs$13275$CSxK@ (case-lambda ((g$V$21647$CSxK@) (car (case-lambda ((g$V$21648$CSxK@) (g$insert-to-subst$13525$CSxK@ g$C$21644$CSxK@ g$V$21648$CSxK@ g$V$21647$CSxK@))) g$s$13523$CSxK@))) g$V$21646$CSxK@ g$subst$13524$CSxK@))) g$s$13523$CSxK@)))) g$s$13523$CSxK@)))) g$C$21649$CSxK@ uninitialized)))) (begin (set! g$exclude*$13276$CSxK@ (case-lambda ((g$C$21674$CSxK@ g$sym*$13499$CSxK@ g$subst$13500$CSxK@) ((case-lambda ((g$C$21672$CSxK@ g$exclude$13501$CSxK@) (begin (set! g$exclude$13501$CSxK@ (case-lambda ((g$C$21656$CSxK@ g$sym$13514$CSxK@ g$subst$13515$CSxK@) (null? (case-lambda ((g$T$21657$CSxK@) (if g$T$21657$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$21656$CSxK@ 'import '"cannot rename unbound identifier" g$sym$13514$CSxK@) (g$caar$7392$CSxK@ (case-lambda ((g$V$21658$CSxK@) (eq? (case-lambda ((g$T$21659$CSxK@) (if g$T$21659$CSxK@ (cdr (case-lambda ((g$V$21660$CSxK@) (g$cdar$7394$CSxK@ (case-lambda ((g$V$21661$CSxK@) (values g$C$21656$CSxK@ g$V$21661$CSxK@ g$V$21660$CSxK@))) g$subst$13515$CSxK@))) g$subst$13515$CSxK@) (car (case-lambda ((g$V$21662$CSxK@) ((case-lambda ((g$C$21655$CSxK@ g$a$13516$CSxK@) (call-with-values g$C$21655$CSxK@ (case-lambda ((g$C$21650$CSxK@) (cdr (case-lambda ((g$V$21651$CSxK@) (g$exclude$13501$CSxK@ g$C$21650$CSxK@ g$sym$13514$CSxK@ g$V$21651$CSxK@))) g$subst$13515$CSxK@))) (case-lambda ((g$C$21654$CSxK@ g$old$13519$CSxK@ g$subst$13520$CSxK@) ((case-lambda ((g$C$21652$CSxK@ g$subst$13521$CSxK@ g$old$13522$CSxK@) (cons (case-lambda ((g$V$21653$CSxK@) (values g$C$21652$CSxK@ g$old$13522$CSxK@ g$V$21653$CSxK@))) g$a$13516$CSxK@ g$subst$13521$CSxK@))) g$C$21654$CSxK@ g$subst$13520$CSxK@ g$old$13519$CSxK@)))))) g$C$21656$CSxK@ g$V$21662$CSxK@))) g$subst$13515$CSxK@)))) g$sym$13514$CSxK@ g$V$21658$CSxK@))) g$subst$13515$CSxK@)))) g$subst$13515$CSxK@)))) (null? (case-lambda ((g$T$21673$CSxK@) (if g$T$21673$CSxK@ (values g$C$21672$CSxK@ '() g$subst$13500$CSxK@) (call-with-values g$C$21672$CSxK@ (case-lambda ((g$C$21663$CSxK@) (car (case-lambda ((g$V$21664$CSxK@) (g$exclude$13501$CSxK@ g$C$21663$CSxK@ g$V$21664$CSxK@ g$subst$13500$CSxK@))) g$sym*$13499$CSxK@))) (case-lambda ((g$C$21671$CSxK@ g$old$13504$CSxK@ g$subst$13505$CSxK@) ((case-lambda ((g$C$21670$CSxK@ g$subst$13506$CSxK@ g$old$13507$CSxK@) (call-with-values g$C$21670$CSxK@ (case-lambda ((g$C$21665$CSxK@) (cdr (case-lambda ((g$V$21666$CSxK@) (g$exclude*$13276$CSxK@ g$C$21665$CSxK@ g$V$21666$CSxK@ g$subst$13506$CSxK@))) g$sym*$13499$CSxK@))) (case-lambda ((g$C$21669$CSxK@ g$old*$13510$CSxK@ g$subst$13511$CSxK@) ((case-lambda ((g$C$21667$CSxK@ g$subst$13512$CSxK@ g$old*$13513$CSxK@) (cons (case-lambda ((g$V$21668$CSxK@) (values g$C$21667$CSxK@ g$V$21668$CSxK@ g$subst$13512$CSxK@))) g$old$13507$CSxK@ g$old*$13513$CSxK@))) g$C$21669$CSxK@ g$subst$13511$CSxK@ g$old*$13510$CSxK@)))))) g$C$21671$CSxK@ g$subst$13505$CSxK@ g$old$13504$CSxK@))))))) g$sym*$13499$CSxK@)))) g$C$21674$CSxK@ uninitialized)))) (begin (set! g$find*$13277$CSxK@ (case-lambda ((g$C$21678$CSxK@ g$sym*$13495$CSxK@ g$subst$13496$CSxK@) (g$map$6713$CSxK@ g$C$21678$CSxK@ (case-lambda ((g$C$21676$CSxK@ g$x$13497$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$21677$CSxK@) ((case-lambda ((g$C$21675$CSxK@ g$t$13498$CSxK@) (if g$t$13498$CSxK@ (cdr g$C$21675$CSxK@ g$t$13498$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21675$CSxK@ 'import '"cannot find identifier" g$x$13497$CSxK@)))) g$C$21676$CSxK@ g$V$21677$CSxK@))) g$x$13497$CSxK@ g$subst$13496$CSxK@))) g$sym*$13495$CSxK@)))) (begin (set! g$rem*$13278$CSxK@ (case-lambda ((g$C$21690$CSxK@ g$sym*$13491$CSxK@ g$subst$13492$CSxK@) ((case-lambda ((g$C$21689$CSxK@ g$f$13493$CSxK@) ((case-lambda ((g$C$21680$CSxK@ g$f$21679$CSxK@) (begin (set! g$f$13493$CSxK@ g$f$21679$CSxK@) (g$C$21680$CSxK@ g$f$13493$CSxK@)))) g$C$21689$CSxK@ (case-lambda ((g$C$21681$CSxK@ g$subst$13494$CSxK@) (null? (case-lambda ((g$T$21682$CSxK@) (if g$T$21682$CSxK@ (g$C$21681$CSxK@ '()) (g$caar$7392$CSxK@ (case-lambda ((g$V$21683$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$21684$CSxK@) (if g$T$21684$CSxK@ (cdr (case-lambda ((g$V$21685$CSxK@) (g$f$13493$CSxK@ g$C$21681$CSxK@ g$V$21685$CSxK@))) g$subst$13494$CSxK@) (cdr (case-lambda ((g$V$21686$CSxK@) (g$f$13493$CSxK@ (case-lambda ((g$V$21687$CSxK@) (car (case-lambda ((g$V$21688$CSxK@) (cons g$C$21681$CSxK@ g$V$21688$CSxK@ g$V$21687$CSxK@))) g$subst$13494$CSxK@))) g$V$21686$CSxK@))) g$subst$13494$CSxK@)))) g$V$21683$CSxK@ g$sym*$13491$CSxK@))) g$subst$13494$CSxK@)))) g$subst$13494$CSxK@)))))) (case-lambda ((g$V$21691$CSxK@) (g$V$21691$CSxK@ g$C$21690$CSxK@ g$subst$13492$CSxK@))) uninitialized)))) (begin (set! g$remove-dups$13279$CSxK@ (case-lambda ((g$C$21692$CSxK@ g$ls$13490$CSxK@) (null? (case-lambda ((g$T$21693$CSxK@) (if g$T$21693$CSxK@ (g$C$21692$CSxK@ '()) (cdr (case-lambda ((g$V$21694$CSxK@) (car (case-lambda ((g$V$21695$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$T$21696$CSxK@) (if g$T$21696$CSxK@ (cdr (case-lambda ((g$V$21697$CSxK@) (g$remove-dups$13279$CSxK@ g$C$21692$CSxK@ g$V$21697$CSxK@))) g$ls$13490$CSxK@) (cdr (case-lambda ((g$V$21698$CSxK@) (g$remove-dups$13279$CSxK@ (case-lambda ((g$V$21699$CSxK@) (car (case-lambda ((g$V$21700$CSxK@) (cons g$C$21692$CSxK@ g$V$21700$CSxK@ g$V$21699$CSxK@))) g$ls$13490$CSxK@))) g$V$21698$CSxK@))) g$ls$13490$CSxK@)))) g$V$21695$CSxK@ g$V$21694$CSxK@))) g$ls$13490$CSxK@))) g$ls$13490$CSxK@)))) g$ls$13490$CSxK@)))) (begin (set! g$parse-library-name$13280$CSxK@ (case-lambda ((g$C$21875$CSxK@ g$spec$13374$CSxK@) ((case-lambda ((g$C$21873$CSxK@ g$subversion?$13375$CSxK@ g$subversion-pred$13376$CSxK@ g$version-pred$13377$CSxK@) (begin (set! g$subversion?$13375$CSxK@ (case-lambda ((g$C$21704$CSxK@ g$x$13488$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21705$CSxK@) ((case-lambda ((g$C$21701$CSxK@ g$x$13489$CSxK@) (integer? (case-lambda ((g$T$21702$CSxK@) (if g$T$21702$CSxK@ (exact? (case-lambda ((g$T$21703$CSxK@) (if g$T$21703$CSxK@ (>= g$C$21701$CSxK@ g$x$13489$CSxK@ '0) (g$C$21701$CSxK@ '#f)))) g$x$13489$CSxK@) (g$C$21701$CSxK@ '#f)))) g$x$13489$CSxK@))) g$C$21704$CSxK@ g$V$21705$CSxK@))) g$x$13488$CSxK@)))) (begin (set! g$subversion-pred$13376$CSxK@ (case-lambda ((g$C$21777$CSxK@ g$x*$13440$CSxK@) ((case-lambda ((g$C$21775$CSxK@ g$t$13441$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21776$CSxK@) ((case-lambda ((g$C$21772$CSxK@ g$ls/false$13442$CSxK@) ((case-lambda ((g$J$21774$CSxK@) (if g$ls/false$13442$CSxK@ (apply g$J$21774$CSxK@ (case-lambda ((g$C$21706$CSxK@ g$n$13443$CSxK@) (g$subversion?$13375$CSxK@ g$C$21706$CSxK@ g$n$13443$CSxK@))) g$ls/false$13442$CSxK@) (g$J$21774$CSxK@ '#f)))) (case-lambda ((g$T$21773$CSxK@) (if g$T$21773$CSxK@ (apply g$C$21772$CSxK@ (case-lambda ((g$C$21709$CSxK@ g$n$13444$CSxK@) (g$C$21709$CSxK@ (case-lambda ((g$C$21707$CSxK@ g$x$13445$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21708$CSxK@) (= g$C$21707$CSxK@ g$x$13445$CSxK@ g$V$21708$CSxK@))) g$n$13444$CSxK@)))))) g$ls/false$13442$CSxK@) ((case-lambda ((g$C$21770$CSxK@ g$t$13446$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21771$CSxK@) ((case-lambda ((g$C$21767$CSxK@ g$ls/false$13447$CSxK@) ((case-lambda ((g$J$21769$CSxK@) (if g$ls/false$13447$CSxK@ (apply g$J$21769$CSxK@ (case-lambda ((g$C$21710$CSxK@ g$p?$13448$CSxK@ g$sub*$13449$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21711$CSxK@) (eq? g$C$21710$CSxK@ g$V$21711$CSxK@ 'and))) g$p?$13448$CSxK@))) g$ls/false$13447$CSxK@) (g$J$21769$CSxK@ '#f)))) (case-lambda ((g$T$21768$CSxK@) (if g$T$21768$CSxK@ (apply g$C$21767$CSxK@ (case-lambda ((g$C$21715$CSxK@ g$p?$13450$CSxK@ g$sub*$13451$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21716$CSxK@) ((case-lambda ((g$C$21714$CSxK@ g$p*$13452$CSxK@) (g$C$21714$CSxK@ (case-lambda ((g$C$21713$CSxK@ g$x$13453$CSxK@) (g$for-all$6711$CSxK@ g$C$21713$CSxK@ (case-lambda ((g$C$21712$CSxK@ g$p$13454$CSxK@) (g$p$13454$CSxK@ g$C$21712$CSxK@ g$x$13453$CSxK@))) g$p*$13452$CSxK@)))))) g$C$21715$CSxK@ g$V$21716$CSxK@))) g$subversion-pred$13376$CSxK@ g$sub*$13451$CSxK@))) g$ls/false$13447$CSxK@) ((case-lambda ((g$C$21765$CSxK@ g$t$13455$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21766$CSxK@) ((case-lambda ((g$C$21762$CSxK@ g$ls/false$13456$CSxK@) ((case-lambda ((g$J$21764$CSxK@) (if g$ls/false$13456$CSxK@ (apply g$J$21764$CSxK@ (case-lambda ((g$C$21717$CSxK@ g$p?$13457$CSxK@ g$sub*$13458$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21718$CSxK@) (eq? g$C$21717$CSxK@ g$V$21718$CSxK@ 'or))) g$p?$13457$CSxK@))) g$ls/false$13456$CSxK@) (g$J$21764$CSxK@ '#f)))) (case-lambda ((g$T$21763$CSxK@) (if g$T$21763$CSxK@ (apply g$C$21762$CSxK@ (case-lambda ((g$C$21722$CSxK@ g$p?$13459$CSxK@ g$sub*$13460$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21723$CSxK@) ((case-lambda ((g$C$21721$CSxK@ g$p*$13461$CSxK@) (g$C$21721$CSxK@ (case-lambda ((g$C$21720$CSxK@ g$x$13462$CSxK@) (g$exists$6712$CSxK@ g$C$21720$CSxK@ (case-lambda ((g$C$21719$CSxK@ g$p$13463$CSxK@) (g$p$13463$CSxK@ g$C$21719$CSxK@ g$x$13462$CSxK@))) g$p*$13461$CSxK@)))))) g$C$21722$CSxK@ g$V$21723$CSxK@))) g$subversion-pred$13376$CSxK@ g$sub*$13460$CSxK@))) g$ls/false$13456$CSxK@) ((case-lambda ((g$C$21760$CSxK@ g$t$13464$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21761$CSxK@) ((case-lambda ((g$C$21757$CSxK@ g$ls/false$13465$CSxK@) ((case-lambda ((g$J$21759$CSxK@) (if g$ls/false$13465$CSxK@ (apply g$J$21759$CSxK@ (case-lambda ((g$C$21724$CSxK@ g$p?$13466$CSxK@ g$sub$13467$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21725$CSxK@) (eq? g$C$21724$CSxK@ g$V$21725$CSxK@ 'not))) g$p?$13466$CSxK@))) g$ls/false$13465$CSxK@) (g$J$21759$CSxK@ '#f)))) (case-lambda ((g$T$21758$CSxK@) (if g$T$21758$CSxK@ (apply g$C$21757$CSxK@ (case-lambda ((g$C$21729$CSxK@ g$p?$13468$CSxK@ g$sub$13469$CSxK@) (g$subversion-pred$13376$CSxK@ (case-lambda ((g$V$21730$CSxK@) ((case-lambda ((g$C$21728$CSxK@ g$p$13470$CSxK@) (g$C$21728$CSxK@ (case-lambda ((g$C$21726$CSxK@ g$x$13471$CSxK@) (g$p$13470$CSxK@ (case-lambda ((g$V$21727$CSxK@) (not g$C$21726$CSxK@ g$V$21727$CSxK@))) g$x$13471$CSxK@)))))) g$C$21729$CSxK@ g$V$21730$CSxK@))) g$sub$13469$CSxK@))) g$ls/false$13465$CSxK@) ((case-lambda ((g$C$21755$CSxK@ g$t$13472$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21756$CSxK@) ((case-lambda ((g$C$21752$CSxK@ g$ls/false$13473$CSxK@) ((case-lambda ((g$J$21754$CSxK@) (if g$ls/false$13473$CSxK@ (apply g$J$21754$CSxK@ (case-lambda ((g$C$21731$CSxK@ g$p?$13474$CSxK@ g$n$13475$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21732$CSxK@) (eq? (case-lambda ((g$T$21733$CSxK@) (if g$T$21733$CSxK@ (g$subversion?$13375$CSxK@ g$C$21731$CSxK@ g$n$13475$CSxK@) (g$C$21731$CSxK@ '#f)))) g$V$21732$CSxK@ '<=))) g$p?$13474$CSxK@))) g$ls/false$13473$CSxK@) (g$J$21754$CSxK@ '#f)))) (case-lambda ((g$T$21753$CSxK@) (if g$T$21753$CSxK@ (apply g$C$21752$CSxK@ (case-lambda ((g$C$21736$CSxK@ g$p?$13476$CSxK@ g$n$13477$CSxK@) (g$C$21736$CSxK@ (case-lambda ((g$C$21734$CSxK@ g$x$13478$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21735$CSxK@) (<= g$C$21734$CSxK@ g$x$13478$CSxK@ g$V$21735$CSxK@))) g$n$13477$CSxK@)))))) g$ls/false$13473$CSxK@) ((case-lambda ((g$C$21750$CSxK@ g$t$13479$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21751$CSxK@) ((case-lambda ((g$C$21747$CSxK@ g$ls/false$13480$CSxK@) ((case-lambda ((g$J$21749$CSxK@) (if g$ls/false$13480$CSxK@ (apply g$J$21749$CSxK@ (case-lambda ((g$C$21737$CSxK@ g$p?$13481$CSxK@ g$n$13482$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21738$CSxK@) (eq? (case-lambda ((g$T$21739$CSxK@) (if g$T$21739$CSxK@ (g$subversion?$13375$CSxK@ g$C$21737$CSxK@ g$n$13482$CSxK@) (g$C$21737$CSxK@ '#f)))) g$V$21738$CSxK@ '>=))) g$p?$13481$CSxK@))) g$ls/false$13480$CSxK@) (g$J$21749$CSxK@ '#f)))) (case-lambda ((g$T$21748$CSxK@) (if g$T$21748$CSxK@ (apply g$C$21747$CSxK@ (case-lambda ((g$C$21742$CSxK@ g$p?$13483$CSxK@ g$n$13484$CSxK@) (g$C$21742$CSxK@ (case-lambda ((g$C$21740$CSxK@ g$x$13485$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21741$CSxK@) (>= g$C$21740$CSxK@ g$x$13485$CSxK@ g$V$21741$CSxK@))) g$n$13484$CSxK@)))))) g$ls/false$13480$CSxK@) ((case-lambda ((g$C$21745$CSxK@ g$t$13486$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21746$CSxK@) ((case-lambda ((g$C$21744$CSxK@ g$ls/false$13487$CSxK@) (if g$ls/false$13487$CSxK@ (apply g$C$21744$CSxK@ (case-lambda ((g$C$21743$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21743$CSxK@ 'import '"invalid sub-version spec" g$spec$13374$CSxK@ g$x*$13440$CSxK@))) g$ls/false$13487$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21744$CSxK@ '#f '"invalid syntax" g$t$13486$CSxK@)))) g$C$21745$CSxK@ g$V$21746$CSxK@))) g$t$13486$CSxK@ '_))) g$C$21747$CSxK@ g$t$13479$CSxK@))))))) g$C$21750$CSxK@ g$V$21751$CSxK@))) g$t$13479$CSxK@ '(any any)))) g$C$21752$CSxK@ g$t$13472$CSxK@))))))) g$C$21755$CSxK@ g$V$21756$CSxK@))) g$t$13472$CSxK@ '(any any)))) g$C$21757$CSxK@ g$t$13464$CSxK@))))))) g$C$21760$CSxK@ g$V$21761$CSxK@))) g$t$13464$CSxK@ '(any any)))) g$C$21762$CSxK@ g$t$13455$CSxK@))))))) g$C$21765$CSxK@ g$V$21766$CSxK@))) g$t$13455$CSxK@ '(any . each-any)))) g$C$21767$CSxK@ g$t$13446$CSxK@))))))) g$C$21770$CSxK@ g$V$21771$CSxK@))) g$t$13446$CSxK@ '(any . each-any)))) g$C$21772$CSxK@ g$t$13441$CSxK@))))))) g$C$21775$CSxK@ g$V$21776$CSxK@))) g$t$13441$CSxK@ 'any))) g$C$21777$CSxK@ g$x*$13440$CSxK@)))) (begin (set! g$version-pred$13377$CSxK@ (case-lambda ((g$C$21842$CSxK@ g$x*$13400$CSxK@) ((case-lambda ((g$C$21840$CSxK@ g$t$13401$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21841$CSxK@) ((case-lambda ((g$C$21839$CSxK@ g$ls/false$13402$CSxK@) (if g$ls/false$13402$CSxK@ (apply g$C$21839$CSxK@ (case-lambda ((g$C$21779$CSxK@) (g$C$21779$CSxK@ (case-lambda ((g$C$21778$CSxK@ g$x$13403$CSxK@) (g$C$21778$CSxK@ '#t)))))) g$ls/false$13402$CSxK@) ((case-lambda ((g$C$21837$CSxK@ g$t$13404$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21838$CSxK@) ((case-lambda ((g$C$21834$CSxK@ g$ls/false$13405$CSxK@) ((case-lambda ((g$J$21836$CSxK@) (if g$ls/false$13405$CSxK@ (apply g$J$21836$CSxK@ (case-lambda ((g$C$21780$CSxK@ g$c$13406$CSxK@ g$ver*$13407$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21781$CSxK@) (eq? g$C$21780$CSxK@ g$V$21781$CSxK@ 'and))) g$c$13406$CSxK@))) g$ls/false$13405$CSxK@) (g$J$21836$CSxK@ '#f)))) (case-lambda ((g$T$21835$CSxK@) (if g$T$21835$CSxK@ (apply g$C$21834$CSxK@ (case-lambda ((g$C$21785$CSxK@ g$c$13408$CSxK@ g$ver*$13409$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21786$CSxK@) ((case-lambda ((g$C$21784$CSxK@ g$p*$13410$CSxK@) (g$C$21784$CSxK@ (case-lambda ((g$C$21783$CSxK@ g$x$13411$CSxK@) (g$for-all$6711$CSxK@ g$C$21783$CSxK@ (case-lambda ((g$C$21782$CSxK@ g$p$13412$CSxK@) (g$p$13412$CSxK@ g$C$21782$CSxK@ g$x$13411$CSxK@))) g$p*$13410$CSxK@)))))) g$C$21785$CSxK@ g$V$21786$CSxK@))) g$version-pred$13377$CSxK@ g$ver*$13409$CSxK@))) g$ls/false$13405$CSxK@) ((case-lambda ((g$C$21832$CSxK@ g$t$13413$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21833$CSxK@) ((case-lambda ((g$C$21829$CSxK@ g$ls/false$13414$CSxK@) ((case-lambda ((g$J$21831$CSxK@) (if g$ls/false$13414$CSxK@ (apply g$J$21831$CSxK@ (case-lambda ((g$C$21787$CSxK@ g$c$13415$CSxK@ g$ver*$13416$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21788$CSxK@) (eq? g$C$21787$CSxK@ g$V$21788$CSxK@ 'or))) g$c$13415$CSxK@))) g$ls/false$13414$CSxK@) (g$J$21831$CSxK@ '#f)))) (case-lambda ((g$T$21830$CSxK@) (if g$T$21830$CSxK@ (apply g$C$21829$CSxK@ (case-lambda ((g$C$21792$CSxK@ g$c$13417$CSxK@ g$ver*$13418$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21793$CSxK@) ((case-lambda ((g$C$21791$CSxK@ g$p*$13419$CSxK@) (g$C$21791$CSxK@ (case-lambda ((g$C$21790$CSxK@ g$x$13420$CSxK@) (g$exists$6712$CSxK@ g$C$21790$CSxK@ (case-lambda ((g$C$21789$CSxK@ g$p$13421$CSxK@) (g$p$13421$CSxK@ g$C$21789$CSxK@ g$x$13420$CSxK@))) g$p*$13419$CSxK@)))))) g$C$21792$CSxK@ g$V$21793$CSxK@))) g$version-pred$13377$CSxK@ g$ver*$13418$CSxK@))) g$ls/false$13414$CSxK@) ((case-lambda ((g$C$21827$CSxK@ g$t$13422$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21828$CSxK@) ((case-lambda ((g$C$21824$CSxK@ g$ls/false$13423$CSxK@) ((case-lambda ((g$J$21826$CSxK@) (if g$ls/false$13423$CSxK@ (apply g$J$21826$CSxK@ (case-lambda ((g$C$21794$CSxK@ g$c$13424$CSxK@ g$ver$13425$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21795$CSxK@) (eq? g$C$21794$CSxK@ g$V$21795$CSxK@ 'not))) g$c$13424$CSxK@))) g$ls/false$13423$CSxK@) (g$J$21826$CSxK@ '#f)))) (case-lambda ((g$T$21825$CSxK@) (if g$T$21825$CSxK@ (apply g$C$21824$CSxK@ (case-lambda ((g$C$21799$CSxK@ g$c$13426$CSxK@ g$ver$13427$CSxK@) (g$version-pred$13377$CSxK@ (case-lambda ((g$V$21800$CSxK@) ((case-lambda ((g$C$21798$CSxK@ g$p$13428$CSxK@) (g$C$21798$CSxK@ (case-lambda ((g$C$21796$CSxK@ g$x$13429$CSxK@) (g$p$13428$CSxK@ (case-lambda ((g$V$21797$CSxK@) (not g$C$21796$CSxK@ g$V$21797$CSxK@))) g$x$13429$CSxK@)))))) g$C$21799$CSxK@ g$V$21800$CSxK@))) g$ver$13427$CSxK@))) g$ls/false$13423$CSxK@) ((case-lambda ((g$C$21822$CSxK@ g$t$13430$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21823$CSxK@) ((case-lambda ((g$C$21821$CSxK@ g$ls/false$13431$CSxK@) (if g$ls/false$13431$CSxK@ (apply g$C$21821$CSxK@ (case-lambda ((g$C$21815$CSxK@ g$sub*$13432$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21816$CSxK@) ((case-lambda ((g$C$21814$CSxK@ g$p*$13433$CSxK@) (g$C$21814$CSxK@ (case-lambda ((g$C$21812$CSxK@ g$x$13434$CSxK@) ((case-lambda ((g$C$21811$CSxK@ g$f$13435$CSxK@) ((case-lambda ((g$C$21802$CSxK@ g$f$21801$CSxK@) (begin (set! g$f$13435$CSxK@ g$f$21801$CSxK@) (g$C$21802$CSxK@ g$f$13435$CSxK@)))) g$C$21811$CSxK@ (case-lambda ((g$C$21803$CSxK@ g$p*$13436$CSxK@ g$x$13437$CSxK@) (null? (case-lambda ((g$T$21804$CSxK@) (if g$T$21804$CSxK@ (g$C$21803$CSxK@ '#t) (null? (case-lambda ((g$T$21805$CSxK@) (if g$T$21805$CSxK@ (g$C$21803$CSxK@ '#f) (car (case-lambda ((g$V$21806$CSxK@) (car (case-lambda ((g$V$21807$CSxK@) (g$V$21807$CSxK@ (case-lambda ((g$T$21808$CSxK@) (if g$T$21808$CSxK@ (cdr (case-lambda ((g$V$21809$CSxK@) (cdr (case-lambda ((g$V$21810$CSxK@) (g$f$13435$CSxK@ g$C$21803$CSxK@ g$V$21810$CSxK@ g$V$21809$CSxK@))) g$p*$13436$CSxK@))) g$x$13437$CSxK@) (g$C$21803$CSxK@ '#f)))) g$V$21806$CSxK@))) g$p*$13436$CSxK@))) g$x$13437$CSxK@)))) g$x$13437$CSxK@)))) g$p*$13436$CSxK@)))))) (case-lambda ((g$V$21813$CSxK@) (g$V$21813$CSxK@ g$C$21812$CSxK@ g$p*$13433$CSxK@ g$x$13434$CSxK@))) uninitialized)))))) g$C$21815$CSxK@ g$V$21816$CSxK@))) g$subversion-pred$13376$CSxK@ g$sub*$13432$CSxK@))) g$ls/false$13431$CSxK@) ((case-lambda ((g$C$21819$CSxK@ g$t$13438$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21820$CSxK@) ((case-lambda ((g$C$21818$CSxK@ g$ls/false$13439$CSxK@) (if g$ls/false$13439$CSxK@ (apply g$C$21818$CSxK@ (case-lambda ((g$C$21817$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21817$CSxK@ 'import '"invalid version spec" g$spec$13374$CSxK@ g$x*$13400$CSxK@))) g$ls/false$13439$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21818$CSxK@ '#f '"invalid syntax" g$t$13438$CSxK@)))) g$C$21819$CSxK@ g$V$21820$CSxK@))) g$t$13438$CSxK@ '_))) g$C$21821$CSxK@ g$t$13430$CSxK@)))) g$C$21822$CSxK@ g$V$21823$CSxK@))) g$t$13430$CSxK@ 'each-any))) g$C$21824$CSxK@ g$t$13422$CSxK@))))))) g$C$21827$CSxK@ g$V$21828$CSxK@))) g$t$13422$CSxK@ '(any any)))) g$C$21829$CSxK@ g$t$13413$CSxK@))))))) g$C$21832$CSxK@ g$V$21833$CSxK@))) g$t$13413$CSxK@ '(any . each-any)))) g$C$21834$CSxK@ g$t$13404$CSxK@))))))) g$C$21837$CSxK@ g$V$21838$CSxK@))) g$t$13404$CSxK@ '(any . each-any)))) g$C$21839$CSxK@ g$t$13401$CSxK@)))) g$C$21840$CSxK@ g$V$21841$CSxK@))) g$t$13401$CSxK@ '()))) g$C$21842$CSxK@ g$x*$13400$CSxK@)))) ((case-lambda ((g$C$21872$CSxK@ g$f$13378$CSxK@) ((case-lambda ((g$C$21844$CSxK@ g$f$21843$CSxK@) (begin (set! g$f$13378$CSxK@ g$f$21843$CSxK@) (g$C$21844$CSxK@ g$f$13378$CSxK@)))) g$C$21872$CSxK@ (case-lambda ((g$C$21871$CSxK@ g$x$13379$CSxK@) ((case-lambda ((g$C$21869$CSxK@ g$t$13380$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21870$CSxK@) ((case-lambda ((g$C$21868$CSxK@ g$ls/false$13381$CSxK@) (if g$ls/false$13381$CSxK@ (apply g$C$21868$CSxK@ (case-lambda ((g$C$21845$CSxK@ g$version-spec*$13382$CSxK@) (g$version-pred$13377$CSxK@ (case-lambda ((g$V$21846$CSxK@) (values g$C$21845$CSxK@ '() g$V$21846$CSxK@))) g$version-spec*$13382$CSxK@))) g$ls/false$13381$CSxK@) ((case-lambda ((g$C$21866$CSxK@ g$t$13383$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21867$CSxK@) ((case-lambda ((g$C$21863$CSxK@ g$ls/false$13384$CSxK@) ((case-lambda ((g$J$21865$CSxK@) (if g$ls/false$13384$CSxK@ (apply g$J$21865$CSxK@ (case-lambda ((g$C$21847$CSxK@ g$x$13385$CSxK@ g$x*$13386$CSxK@) (g$idsyn?$13273$CSxK@ g$C$21847$CSxK@ g$x$13385$CSxK@))) g$ls/false$13384$CSxK@) (g$J$21865$CSxK@ '#f)))) (case-lambda ((g$T$21864$CSxK@) (if g$T$21864$CSxK@ (apply g$C$21863$CSxK@ (case-lambda ((g$C$21853$CSxK@ g$x$13387$CSxK@ g$x*$13388$CSxK@) (call-with-values g$C$21853$CSxK@ (case-lambda ((g$C$21848$CSxK@) (g$f$13378$CSxK@ g$C$21848$CSxK@ g$x*$13388$CSxK@))) (case-lambda ((g$C$21852$CSxK@ g$name$13391$CSxK@ g$pred$13392$CSxK@) ((case-lambda ((g$C$21849$CSxK@ g$pred$13393$CSxK@ g$name$13394$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21850$CSxK@) (cons (case-lambda ((g$V$21851$CSxK@) (values g$C$21849$CSxK@ g$V$21851$CSxK@ g$pred$13393$CSxK@))) g$V$21850$CSxK@ g$name$13394$CSxK@))) g$x$13387$CSxK@))) g$C$21852$CSxK@ g$pred$13392$CSxK@ g$name$13391$CSxK@)))))) g$ls/false$13384$CSxK@) ((case-lambda ((g$C$21861$CSxK@ g$t$13395$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21862$CSxK@) ((case-lambda ((g$C$21860$CSxK@ g$ls/false$13396$CSxK@) (if g$ls/false$13396$CSxK@ (apply g$C$21860$CSxK@ (case-lambda ((g$C$21855$CSxK@) (values g$C$21855$CSxK@ '() (case-lambda ((g$C$21854$CSxK@ g$x$13397$CSxK@) (g$C$21854$CSxK@ '#t)))))) g$ls/false$13396$CSxK@) ((case-lambda ((g$C$21858$CSxK@ g$t$13398$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21859$CSxK@) ((case-lambda ((g$C$21857$CSxK@ g$ls/false$13399$CSxK@) (if g$ls/false$13399$CSxK@ (apply g$C$21857$CSxK@ (case-lambda ((g$C$21856$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21856$CSxK@ '#f '"invalid import spec" g$spec$13374$CSxK@))) g$ls/false$13399$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21857$CSxK@ '#f '"invalid syntax" g$t$13398$CSxK@)))) g$C$21858$CSxK@ g$V$21859$CSxK@))) g$t$13398$CSxK@ '_))) g$C$21860$CSxK@ g$t$13395$CSxK@)))) g$C$21861$CSxK@ g$V$21862$CSxK@))) g$t$13395$CSxK@ '()))) g$C$21863$CSxK@ g$t$13383$CSxK@))))))) g$C$21866$CSxK@ g$V$21867$CSxK@))) g$t$13383$CSxK@ '(any . any)))) g$C$21868$CSxK@ g$t$13380$CSxK@)))) g$C$21869$CSxK@ g$V$21870$CSxK@))) g$t$13380$CSxK@ '(each-any)))) g$C$21871$CSxK@ g$x$13379$CSxK@)))))) (case-lambda ((g$V$21874$CSxK@) (g$V$21874$CSxK@ g$C$21873$CSxK@ g$spec$13374$CSxK@))) uninitialized)))))) g$C$21875$CSxK@ uninitialized uninitialized uninitialized)))) (begin (set! g$import-library$13281$CSxK@ (case-lambda ((g$C$21894$CSxK@ g$spec*$13366$CSxK@) (call-with-values g$C$21894$CSxK@ (case-lambda ((g$C$21876$CSxK@) (g$parse-library-name$13280$CSxK@ g$C$21876$CSxK@ g$spec*$13366$CSxK@))) (case-lambda ((g$C$21893$CSxK@ g$name$13369$CSxK@ g$pred$13370$CSxK@) ((case-lambda ((g$C$21888$CSxK@ g$pred$13371$CSxK@ g$name$13372$CSxK@) ((case-lambda ((g$J$21891$CSxK@) (null? (case-lambda ((g$T$21892$CSxK@) (if g$T$21892$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21891$CSxK@ 'import '"empty library name" g$spec*$13366$CSxK@) (void g$J$21891$CSxK@)))) g$name$13372$CSxK@))) (case-lambda (g$IGNORE$21889$CSxK@ (g$find-library-by-name$10076$CSxK@ (case-lambda ((g$V$21890$CSxK@) ((case-lambda ((g$C$21877$CSxK@ g$lib$13373$CSxK@) ((case-lambda ((g$J$21886$CSxK@) (not (case-lambda ((g$T$21887$CSxK@) (if g$T$21887$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21886$CSxK@ 'import '"cannot find library with required name" g$name$13372$CSxK@) (void g$J$21886$CSxK@)))) g$lib$13373$CSxK@))) (case-lambda (g$IGNORE$21878$CSxK@ ((case-lambda ((g$J$21882$CSxK@) (g$library-version$10036$CSxK@ (case-lambda ((g$V$21883$CSxK@) (g$pred$13371$CSxK@ (case-lambda ((g$V$21884$CSxK@) (not (case-lambda ((g$T$21885$CSxK@) (if g$T$21885$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$21882$CSxK@ 'import '"library does not satisfy version specification" g$spec*$13366$CSxK@ g$lib$13373$CSxK@) (void g$J$21882$CSxK@)))) g$V$21884$CSxK@))) g$V$21883$CSxK@))) g$lib$13373$CSxK@))) (case-lambda (g$IGNORE$21879$CSxK@ (g$imp-collector$10766$CSxK@ (case-lambda ((g$V$21880$CSxK@) (g$V$21880$CSxK@ (case-lambda (g$IGNORE$21881$CSxK@ (g$library-subst$10040$CSxK@ g$C$21877$CSxK@ g$lib$13373$CSxK@))) g$lib$13373$CSxK@)))))))))))) g$C$21888$CSxK@ g$V$21890$CSxK@))) g$name$13372$CSxK@)))))) g$C$21893$CSxK@ g$pred$13370$CSxK@ g$name$13369$CSxK@))))))) (begin (set! g$get-import$13282$CSxK@ (case-lambda ((g$C$21991$CSxK@ g$spec$13295$CSxK@) ((case-lambda ((g$C$21989$CSxK@ g$t$13296$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21990$CSxK@) ((case-lambda ((g$C$21986$CSxK@ g$ls/false$13297$CSxK@) ((case-lambda ((g$J$21988$CSxK@) (if g$ls/false$13297$CSxK@ (apply g$J$21988$CSxK@ (case-lambda ((g$C$21895$CSxK@ g$x$13298$CSxK@ g$x*$13299$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21896$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$V$21897$CSxK@) (not g$C$21895$CSxK@ g$V$21897$CSxK@))) g$V$21896$CSxK@ '(for rename except only prefix library)))) g$x$13298$CSxK@))) g$ls/false$13297$CSxK@) (g$J$21988$CSxK@ '#f)))) (case-lambda ((g$T$21987$CSxK@) (if g$T$21987$CSxK@ (apply g$C$21986$CSxK@ (case-lambda ((g$C$21898$CSxK@ g$x$13300$CSxK@ g$x*$13301$CSxK@) (cons (case-lambda ((g$V$21899$CSxK@) (g$import-library$13281$CSxK@ g$C$21898$CSxK@ g$V$21899$CSxK@))) g$x$13300$CSxK@ g$x*$13301$CSxK@))) g$ls/false$13297$CSxK@) ((case-lambda ((g$C$21984$CSxK@ g$t$13302$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21985$CSxK@) ((case-lambda ((g$C$21981$CSxK@ g$ls/false$13303$CSxK@) ((case-lambda ((g$J$21983$CSxK@) (if g$ls/false$13303$CSxK@ (apply g$J$21983$CSxK@ (case-lambda ((g$C$21900$CSxK@ g$rename$13304$CSxK@ g$isp$13305$CSxK@ g$old*$13306$CSxK@ g$new*$13307$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21901$CSxK@) (eq? (case-lambda ((g$T$21902$CSxK@) (if g$T$21902$CSxK@ (g$for-all$6711$CSxK@ (case-lambda ((g$T$21903$CSxK@) (if g$T$21903$CSxK@ (g$for-all$6711$CSxK@ g$C$21900$CSxK@ g$idsyn?$13273$CSxK@ g$new*$13307$CSxK@) (g$C$21900$CSxK@ '#f)))) g$idsyn?$13273$CSxK@ g$old*$13306$CSxK@) (g$C$21900$CSxK@ '#f)))) g$V$21901$CSxK@ 'rename))) g$rename$13304$CSxK@))) g$ls/false$13303$CSxK@) (g$J$21983$CSxK@ '#f)))) (case-lambda ((g$T$21982$CSxK@) (if g$T$21982$CSxK@ (apply g$C$21981$CSxK@ (case-lambda ((g$C$21910$CSxK@ g$rename$13308$CSxK@ g$isp$13309$CSxK@ g$old*$13310$CSxK@ g$new*$13311$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21911$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21912$CSxK@) (g$get-import$13282$CSxK@ (case-lambda ((g$V$21913$CSxK@) ((case-lambda ((g$C$21908$CSxK@ g$subst$13312$CSxK@ g$old*$13313$CSxK@ g$new*$13314$CSxK@) (g$find*$13277$CSxK@ (case-lambda ((g$V$21909$CSxK@) ((case-lambda ((g$C$21906$CSxK@ g$old-label*$13315$CSxK@) (g$rem*$13278$CSxK@ (case-lambda ((g$V$21907$CSxK@) ((case-lambda ((g$C$21904$CSxK@ g$subst$13316$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21905$CSxK@) (g$merge-substs$13275$CSxK@ g$C$21904$CSxK@ g$V$21905$CSxK@ g$subst$13316$CSxK@))) cons g$new*$13314$CSxK@ g$old-label*$13315$CSxK@))) g$C$21906$CSxK@ g$V$21907$CSxK@))) g$old*$13313$CSxK@ g$subst$13312$CSxK@))) g$C$21908$CSxK@ g$V$21909$CSxK@))) g$old*$13313$CSxK@ g$subst$13312$CSxK@))) g$C$21910$CSxK@ g$V$21913$CSxK@ g$V$21912$CSxK@ g$V$21911$CSxK@))) g$isp$13309$CSxK@))) g$syntax->datum$10831$CSxK@ g$old*$13310$CSxK@))) g$syntax->datum$10831$CSxK@ g$new*$13311$CSxK@))) g$ls/false$13303$CSxK@) ((case-lambda ((g$C$21979$CSxK@ g$t$13317$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21980$CSxK@) ((case-lambda ((g$C$21976$CSxK@ g$ls/false$13318$CSxK@) ((case-lambda ((g$J$21978$CSxK@) (if g$ls/false$13318$CSxK@ (apply g$J$21978$CSxK@ (case-lambda ((g$C$21914$CSxK@ g$except$13319$CSxK@ g$isp$13320$CSxK@ g$sym*$13321$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21915$CSxK@) (eq? (case-lambda ((g$T$21916$CSxK@) (if g$T$21916$CSxK@ (g$for-all$6711$CSxK@ g$C$21914$CSxK@ g$idsyn?$13273$CSxK@ g$sym*$13321$CSxK@) (g$C$21914$CSxK@ '#f)))) g$V$21915$CSxK@ 'except))) g$except$13319$CSxK@))) g$ls/false$13318$CSxK@) (g$J$21978$CSxK@ '#f)))) (case-lambda ((g$T$21977$CSxK@) (if g$T$21977$CSxK@ (apply g$C$21976$CSxK@ (case-lambda ((g$C$21919$CSxK@ g$except$13322$CSxK@ g$isp$13323$CSxK@ g$sym*$13324$CSxK@) (g$get-import$13282$CSxK@ (case-lambda ((g$V$21920$CSxK@) ((case-lambda ((g$C$21917$CSxK@ g$subst$13325$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21918$CSxK@) (g$rem*$13278$CSxK@ g$C$21917$CSxK@ g$V$21918$CSxK@ g$subst$13325$CSxK@))) g$syntax->datum$10831$CSxK@ g$sym*$13324$CSxK@))) g$C$21919$CSxK@ g$V$21920$CSxK@))) g$isp$13323$CSxK@))) g$ls/false$13318$CSxK@) ((case-lambda ((g$C$21974$CSxK@ g$t$13326$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21975$CSxK@) ((case-lambda ((g$C$21971$CSxK@ g$ls/false$13327$CSxK@) ((case-lambda ((g$J$21973$CSxK@) (if g$ls/false$13327$CSxK@ (apply g$J$21973$CSxK@ (case-lambda ((g$C$21921$CSxK@ g$only$13328$CSxK@ g$isp$13329$CSxK@ g$sym*$13330$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21922$CSxK@) (eq? (case-lambda ((g$T$21923$CSxK@) (if g$T$21923$CSxK@ (g$for-all$6711$CSxK@ g$C$21921$CSxK@ g$idsyn?$13273$CSxK@ g$sym*$13330$CSxK@) (g$C$21921$CSxK@ '#f)))) g$V$21922$CSxK@ 'only))) g$only$13328$CSxK@))) g$ls/false$13327$CSxK@) (g$J$21973$CSxK@ '#f)))) (case-lambda ((g$T$21972$CSxK@) (if g$T$21972$CSxK@ (apply g$C$21971$CSxK@ (case-lambda ((g$C$21929$CSxK@ g$only$13331$CSxK@ g$isp$13332$CSxK@ g$sym*$13333$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$21930$CSxK@) (g$get-import$13282$CSxK@ (case-lambda ((g$V$21931$CSxK@) ((case-lambda ((g$C$21927$CSxK@ g$subst$13334$CSxK@ g$sym*$13335$CSxK@) (g$remove-dups$13279$CSxK@ (case-lambda ((g$V$21928$CSxK@) ((case-lambda ((g$C$21925$CSxK@ g$sym*$13336$CSxK@) (g$find*$13277$CSxK@ (case-lambda ((g$V$21926$CSxK@) ((case-lambda ((g$C$21924$CSxK@ g$lab*$13337$CSxK@) (g$map$6713$CSxK@ g$C$21924$CSxK@ cons g$sym*$13336$CSxK@ g$lab*$13337$CSxK@))) g$C$21925$CSxK@ g$V$21926$CSxK@))) g$sym*$13336$CSxK@ g$subst$13334$CSxK@))) g$C$21927$CSxK@ g$V$21928$CSxK@))) g$sym*$13335$CSxK@))) g$C$21929$CSxK@ g$V$21931$CSxK@ g$V$21930$CSxK@))) g$isp$13332$CSxK@))) g$syntax->datum$10831$CSxK@ g$sym*$13333$CSxK@))) g$ls/false$13327$CSxK@) ((case-lambda ((g$C$21969$CSxK@ g$t$13338$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21970$CSxK@) ((case-lambda ((g$C$21966$CSxK@ g$ls/false$13339$CSxK@) ((case-lambda ((g$J$21968$CSxK@) (if g$ls/false$13339$CSxK@ (apply g$J$21968$CSxK@ (case-lambda ((g$C$21932$CSxK@ g$prefix$13340$CSxK@ g$isp$13341$CSxK@ g$p$13342$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21933$CSxK@) (eq? (case-lambda ((g$T$21934$CSxK@) (if g$T$21934$CSxK@ (g$idsyn?$13273$CSxK@ g$C$21932$CSxK@ g$p$13342$CSxK@) (g$C$21932$CSxK@ '#f)))) g$V$21933$CSxK@ 'prefix))) g$prefix$13340$CSxK@))) g$ls/false$13339$CSxK@) (g$J$21968$CSxK@ '#f)))) (case-lambda ((g$T$21967$CSxK@) (if g$T$21967$CSxK@ (apply g$C$21966$CSxK@ (case-lambda ((g$C$21942$CSxK@ g$prefix$13343$CSxK@ g$isp$13344$CSxK@ g$p$13345$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21943$CSxK@) (symbol->string (case-lambda ((g$V$21944$CSxK@) (g$get-import$13282$CSxK@ (case-lambda ((g$V$21945$CSxK@) ((case-lambda ((g$C$21941$CSxK@ g$subst$13346$CSxK@ g$prefix$13347$CSxK@) (g$map$6713$CSxK@ g$C$21941$CSxK@ (case-lambda ((g$C$21935$CSxK@ g$x$13348$CSxK@) (cdr (case-lambda ((g$V$21936$CSxK@) (car (case-lambda ((g$V$21937$CSxK@) (symbol->string (case-lambda ((g$V$21938$CSxK@) (string-append (case-lambda ((g$V$21939$CSxK@) (string->symbol (case-lambda ((g$V$21940$CSxK@) (cons g$C$21935$CSxK@ g$V$21940$CSxK@ g$V$21936$CSxK@))) g$V$21939$CSxK@))) g$prefix$13347$CSxK@ g$V$21938$CSxK@))) g$V$21937$CSxK@))) g$x$13348$CSxK@))) g$x$13348$CSxK@))) g$subst$13346$CSxK@))) g$C$21942$CSxK@ g$V$21945$CSxK@ g$V$21944$CSxK@))) g$isp$13344$CSxK@))) g$V$21943$CSxK@))) g$p$13345$CSxK@))) g$ls/false$13339$CSxK@) ((case-lambda ((g$C$21964$CSxK@ g$t$13349$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21965$CSxK@) ((case-lambda ((g$C$21961$CSxK@ g$ls/false$13350$CSxK@) ((case-lambda ((g$J$21963$CSxK@) (if g$ls/false$13350$CSxK@ (apply g$J$21963$CSxK@ (case-lambda ((g$C$21946$CSxK@ g$library$13351$CSxK@ g$spec*$13352$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21947$CSxK@) (eq? g$C$21946$CSxK@ g$V$21947$CSxK@ 'library))) g$library$13351$CSxK@))) g$ls/false$13350$CSxK@) (g$J$21963$CSxK@ '#f)))) (case-lambda ((g$T$21962$CSxK@) (if g$T$21962$CSxK@ (apply g$C$21961$CSxK@ (case-lambda ((g$C$21948$CSxK@ g$library$13353$CSxK@ g$spec*$13354$CSxK@) (g$import-library$13281$CSxK@ g$C$21948$CSxK@ g$spec*$13354$CSxK@))) g$ls/false$13350$CSxK@) ((case-lambda ((g$C$21959$CSxK@ g$t$13355$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21960$CSxK@) ((case-lambda ((g$C$21956$CSxK@ g$ls/false$13356$CSxK@) ((case-lambda ((g$J$21958$CSxK@) (if g$ls/false$13356$CSxK@ (apply g$J$21958$CSxK@ (case-lambda ((g$C$21949$CSxK@ g$for$13357$CSxK@ g$isp$13358$CSxK@ g$rest$13359$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$21950$CSxK@) (eq? g$C$21949$CSxK@ g$V$21950$CSxK@ 'for))) g$for$13357$CSxK@))) g$ls/false$13356$CSxK@) (g$J$21958$CSxK@ '#f)))) (case-lambda ((g$T$21957$CSxK@) (if g$T$21957$CSxK@ (apply g$C$21956$CSxK@ (case-lambda ((g$C$21951$CSxK@ g$for$13360$CSxK@ g$isp$13361$CSxK@ g$rest$13362$CSxK@) (g$get-import$13282$CSxK@ g$C$21951$CSxK@ g$isp$13361$CSxK@))) g$ls/false$13356$CSxK@) ((case-lambda ((g$C$21954$CSxK@ g$t$13363$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$21955$CSxK@) ((case-lambda ((g$C$21953$CSxK@ g$ls/false$13364$CSxK@) (if g$ls/false$13364$CSxK@ (apply g$C$21953$CSxK@ (case-lambda ((g$C$21952$CSxK@ g$spec$13365$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21952$CSxK@ 'import '"invalid import spec" g$spec$13365$CSxK@))) g$ls/false$13364$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$21953$CSxK@ '#f '"invalid syntax" g$t$13363$CSxK@)))) g$C$21954$CSxK@ g$V$21955$CSxK@))) g$t$13363$CSxK@ 'any))) g$C$21956$CSxK@ g$t$13355$CSxK@))))))) g$C$21959$CSxK@ g$V$21960$CSxK@))) g$t$13355$CSxK@ '(any any . any)))) g$C$21961$CSxK@ g$t$13349$CSxK@))))))) g$C$21964$CSxK@ g$V$21965$CSxK@))) g$t$13349$CSxK@ '(any each-any)))) g$C$21966$CSxK@ g$t$13338$CSxK@))))))) g$C$21969$CSxK@ g$V$21970$CSxK@))) g$t$13338$CSxK@ '(any any any)))) g$C$21971$CSxK@ g$t$13326$CSxK@))))))) g$C$21974$CSxK@ g$V$21975$CSxK@))) g$t$13326$CSxK@ '(any any . each-any)))) g$C$21976$CSxK@ g$t$13317$CSxK@))))))) g$C$21979$CSxK@ g$V$21980$CSxK@))) g$t$13317$CSxK@ '(any any . each-any)))) g$C$21981$CSxK@ g$t$13302$CSxK@))))))) g$C$21984$CSxK@ g$V$21985$CSxK@))) g$t$13302$CSxK@ '(any any . #(each (any any)))))) g$C$21986$CSxK@ g$t$13296$CSxK@))))))) g$C$21989$CSxK@ g$V$21990$CSxK@))) g$t$13296$CSxK@ '(any . each-any)))) g$C$21991$CSxK@ g$spec$13295$CSxK@)))) (begin (set! g$add-imports!$13283$CSxK@ (case-lambda ((g$C$22002$CSxK@ g$imp$13287$CSxK@ g$h$13288$CSxK@) (g$get-import$13282$CSxK@ (case-lambda ((g$V$22003$CSxK@) ((case-lambda ((g$C$22001$CSxK@ g$subst$13289$CSxK@) (g$for-each$6714$CSxK@ g$C$22001$CSxK@ (case-lambda ((g$C$21998$CSxK@ g$x$13290$CSxK@) (cdr (case-lambda ((g$V$21999$CSxK@) (car (case-lambda ((g$V$22000$CSxK@) ((case-lambda ((g$C$21996$CSxK@ g$name$13291$CSxK@ g$label$13292$CSxK@) (g$hashtable-ref$7486$CSxK@ (case-lambda ((g$V$21997$CSxK@) ((case-lambda ((g$C$21995$CSxK@ g$t$13293$CSxK@) (if g$t$13293$CSxK@ ((case-lambda ((g$C$21992$CSxK@ g$l$13294$CSxK@) (eq? (case-lambda ((g$V$21993$CSxK@) (not (case-lambda ((g$T$21994$CSxK@) (if g$T$21994$CSxK@ (g$dup-error$13274$CSxK@ g$C$21992$CSxK@ g$name$13291$CSxK@) (void g$C$21992$CSxK@)))) g$V$21993$CSxK@))) g$l$13294$CSxK@ g$label$13292$CSxK@))) g$C$21995$CSxK@ g$t$13293$CSxK@) (g$hashtable-set!$7487$CSxK@ g$C$21995$CSxK@ g$h$13288$CSxK@ g$name$13291$CSxK@ g$label$13292$CSxK@)))) g$C$21996$CSxK@ g$V$21997$CSxK@))) g$h$13288$CSxK@ g$name$13291$CSxK@ '#f))) g$C$21998$CSxK@ g$V$22000$CSxK@ g$V$21999$CSxK@))) g$x$13290$CSxK@))) g$x$13290$CSxK@))) g$subst$13289$CSxK@))) g$C$22002$CSxK@ g$V$22003$CSxK@))) g$imp$13287$CSxK@)))) (g$make-eq-hashtable$7483$CSxK@ (case-lambda ((g$V$22013$CSxK@) ((case-lambda ((g$C$22011$CSxK@ g$f$13284$CSxK@) ((case-lambda ((g$C$22005$CSxK@ g$f$22004$CSxK@) (begin (set! g$f$13284$CSxK@ g$f$22004$CSxK@) (g$C$22005$CSxK@ g$f$13284$CSxK@)))) g$C$22011$CSxK@ (case-lambda ((g$C$22006$CSxK@ g$imp*$13285$CSxK@ g$h$13286$CSxK@) (null? (case-lambda ((g$T$22007$CSxK@) (if g$T$22007$CSxK@ (hashtable-entries g$C$22006$CSxK@ g$h$13286$CSxK@) (car (case-lambda ((g$V$22008$CSxK@) (g$add-imports!$13283$CSxK@ (case-lambda (g$IGNORE$22009$CSxK@ (cdr (case-lambda ((g$V$22010$CSxK@) (g$f$13284$CSxK@ g$C$22006$CSxK@ g$V$22010$CSxK@ g$h$13286$CSxK@))) g$imp*$13285$CSxK@))) g$V$22008$CSxK@ g$h$13286$CSxK@))) g$imp*$13285$CSxK@)))) g$imp*$13285$CSxK@)))))) (case-lambda ((g$V$22014$CSxK@) (g$V$22014$CSxK@ g$C$22012$CSxK@ g$imp*$13272$CSxK@ g$V$22013$CSxK@))) uninitialized))))))))))))))))) g$C$22015$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$parse-import-spec*$10761$CSxK@))) (g$make-top-rib$10762$CSxK@ g$make-top-rib$14302$CSxK@ ((case-lambda ((g$C$22827$CSxK@) (g$C$22827$CSxK@ (case-lambda ((g$C$22024$CSxK@ g$names$13534$CSxK@ g$labels$13535$CSxK@) (g$make-cache-rib$10306$CSxK@ (case-lambda ((g$V$22025$CSxK@) ((case-lambda ((g$C$22022$CSxK@ g$rib$13536$CSxK@) (g$vector-for-each$7445$CSxK@ (case-lambda (g$IGNORE$22023$CSxK@ (g$C$22022$CSxK@ g$rib$13536$CSxK@))) (case-lambda ((g$C$22016$CSxK@ g$name$13537$CSxK@ g$label$13538$CSxK@) ((case-lambda ((g$J$22019$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$V$22020$CSxK@) (not (case-lambda ((g$T$22021$CSxK@) (if g$T$22021$CSxK@ (g$error$7673$CSxK@ g$J$22019$CSxK@ 'make-top-rib '"BUG: not a symbol" g$name$13537$CSxK@) (void g$J$22019$CSxK@)))) g$V$22020$CSxK@))) g$name$13537$CSxK@))) (case-lambda (g$IGNORE$22017$CSxK@ (g$make-stx$10320$CSxK@ (case-lambda ((g$V$22018$CSxK@) (g$extend-rib/nc!$10309$CSxK@ g$C$22016$CSxK@ g$rib$13536$CSxK@ g$V$22018$CSxK@ g$label$13538$CSxK@))) g$name$13537$CSxK@ g$top-mark*$10280$CSxK@ '() '())))))) g$names$13534$CSxK@ g$labels$13535$CSxK@))) g$C$22024$CSxK@ g$V$22025$CSxK@))))))))) (library-letrec*-identity 'g$make-top-rib$10762$CSxK@))) (g$make-collector$10763$CSxK@ g$make-collector$14303$CSxK@ ((case-lambda ((g$C$22828$CSxK@) (g$C$22828$CSxK@ (case-lambda ((g$C$22029$CSxK@) ((case-lambda ((g$C$22028$CSxK@ g$ls$13539$CSxK@) (g$C$22028$CSxK@ (case-lambda ((g$C$22026$CSxK@) (g$C$22026$CSxK@ g$ls$13539$CSxK@)) ((g$C$22026$CSxK@ g$x$13540$CSxK@) (g$set-cons$10277$CSxK@ (case-lambda ((g$V$22027$CSxK@) (begin (set! g$ls$13539$CSxK@ g$V$22027$CSxK@) (g$C$22026$CSxK@ (cps-void))))) g$x$13540$CSxK@ g$ls$13539$CSxK@)))))) g$C$22029$CSxK@ '())))))) (library-letrec*-identity 'g$make-collector$10763$CSxK@))) (g$inv-collector$10764$CSxK@ g$inv-collector$14304$CSxK@ ((case-lambda ((g$C$22829$CSxK@) (g$make-parameter$9568$CSxK@ g$C$22829$CSxK@ (case-lambda ((g$C$22030$CSxK@ . g$args$13541$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22030$CSxK@ 'inv-collector '"BUG: not initialized"))) (case-lambda ((g$C$22031$CSxK@ g$x$13542$CSxK@) ((case-lambda ((g$J$22033$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$V$22034$CSxK@) (not (case-lambda ((g$T$22035$CSxK@) (if g$T$22035$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$22033$CSxK@ 'inv-collector '"BUG: not a procedure" g$x$13542$CSxK@) (void g$J$22033$CSxK@)))) g$V$22034$CSxK@))) g$x$13542$CSxK@))) (case-lambda (g$IGNORE$22032$CSxK@ (g$C$22031$CSxK@ g$x$13542$CSxK@))))))))) (library-letrec*-identity 'g$inv-collector$10764$CSxK@))) (g$vis-collector$10765$CSxK@ g$vis-collector$14305$CSxK@ ((case-lambda ((g$C$22830$CSxK@) (g$make-parameter$9568$CSxK@ g$C$22830$CSxK@ (case-lambda ((g$C$22036$CSxK@ . g$args$13543$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22036$CSxK@ 'vis-collector '"BUG: not initialized"))) (case-lambda ((g$C$22037$CSxK@ g$x$13544$CSxK@) ((case-lambda ((g$J$22039$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$V$22040$CSxK@) (not (case-lambda ((g$T$22041$CSxK@) (if g$T$22041$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$22039$CSxK@ 'vis-collector '"BUG: not a procedure" g$x$13544$CSxK@) (void g$J$22039$CSxK@)))) g$V$22040$CSxK@))) g$x$13544$CSxK@))) (case-lambda (g$IGNORE$22038$CSxK@ (g$C$22037$CSxK@ g$x$13544$CSxK@))))))))) (library-letrec*-identity 'g$vis-collector$10765$CSxK@))) (g$imp-collector$10766$CSxK@ g$imp-collector$14306$CSxK@ ((case-lambda ((g$C$22831$CSxK@) (g$make-parameter$9568$CSxK@ g$C$22831$CSxK@ (case-lambda ((g$C$22042$CSxK@ . g$args$13545$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22042$CSxK@ 'imp-collector '"BUG: not initialized"))) (case-lambda ((g$C$22043$CSxK@ g$x$13546$CSxK@) ((case-lambda ((g$J$22045$CSxK@) (g$procedure?$7386$CSxK@ (case-lambda ((g$V$22046$CSxK@) (not (case-lambda ((g$T$22047$CSxK@) (if g$T$22047$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$22045$CSxK@ 'imp-collector '"BUG: not a procedure" g$x$13546$CSxK@) (void g$J$22045$CSxK@)))) g$V$22046$CSxK@))) g$x$13546$CSxK@))) (case-lambda (g$IGNORE$22044$CSxK@ (g$C$22043$CSxK@ g$x$13546$CSxK@))))))))) (library-letrec*-identity 'g$imp-collector$10766$CSxK@))) (g$chi-library-internal$10767$CSxK@ g$chi-library-internal$14307$CSxK@ ((case-lambda ((g$C$22832$CSxK@) (g$C$22832$CSxK@ (case-lambda ((g$C$22056$CSxK@ g$e*$13547$CSxK@ g$rib$13548$CSxK@ g$mix?$13549$CSxK@) (call-with-values g$C$22056$CSxK@ (case-lambda ((g$C$22048$CSxK@) (g$chi-body*$10756$CSxK@ g$C$22048$CSxK@ g$e*$13547$CSxK@ '() '() '() '() '() '() '() g$rib$13548$CSxK@ g$mix?$13549$CSxK@ '#t))) (case-lambda ((g$C$22055$CSxK@ g$e*$13558$CSxK@ g$r$13559$CSxK@ g$mr$13560$CSxK@ g$lex*$13561$CSxK@ g$rhs*$13562$CSxK@ g$mod**$13563$CSxK@ g$_kwd*$13564$CSxK@ g$exp*$13565$CSxK@) ((case-lambda ((g$C$22049$CSxK@ g$exp*$13566$CSxK@ g$_kwd*$13567$CSxK@ g$mod**$13568$CSxK@ g$rhs*$13569$CSxK@ g$lex*$13570$CSxK@ g$mr$13571$CSxK@ g$r$13572$CSxK@ g$e*$13573$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$22050$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$22051$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$22052$CSxK@) (apply (case-lambda ((g$V$22053$CSxK@) (append (case-lambda ((g$V$22054$CSxK@) (values g$C$22049$CSxK@ g$V$22054$CSxK@ g$r$13572$CSxK@ g$mr$13571$CSxK@ g$V$22051$CSxK@ g$V$22050$CSxK@ g$exp*$13566$CSxK@))) g$V$22053$CSxK@ g$e*$13573$CSxK@))) append g$V$22052$CSxK@))) g$mod**$13568$CSxK@))) g$lex*$13570$CSxK@))) g$rhs*$13569$CSxK@))) g$C$22055$CSxK@ g$exp*$13565$CSxK@ g$_kwd*$13564$CSxK@ g$mod**$13563$CSxK@ g$rhs*$13562$CSxK@ g$lex*$13561$CSxK@ g$mr$13560$CSxK@ g$r$13559$CSxK@ g$e*$13558$CSxK@))))))))) (library-letrec*-identity 'g$chi-library-internal$10767$CSxK@))) (g$chi-interaction-expr$10768$CSxK@ g$chi-interaction-expr$14308$CSxK@ ((case-lambda ((g$C$22833$CSxK@) (g$C$22833$CSxK@ (case-lambda ((g$C$22074$CSxK@ g$e$13574$CSxK@ g$rib$13575$CSxK@ g$r$13576$CSxK@) (call-with-values g$C$22074$CSxK@ (case-lambda ((g$C$22057$CSxK@) (list (case-lambda ((g$V$22058$CSxK@) (g$chi-body*$10756$CSxK@ g$C$22057$CSxK@ g$V$22058$CSxK@ g$r$13576$CSxK@ g$r$13576$CSxK@ '() '() '() '() '() g$rib$13575$CSxK@ '#t '#f))) g$e$13574$CSxK@))) (case-lambda ((g$C$22073$CSxK@ g$e*$13585$CSxK@ g$r$13586$CSxK@ g$mr$13587$CSxK@ g$lex*$13588$CSxK@ g$rhs*$13589$CSxK@ g$mod**$13590$CSxK@ g$_kwd*$13591$CSxK@ g$_exp*$13592$CSxK@) ((case-lambda ((g$C$22066$CSxK@ g$_exp*$13593$CSxK@ g$_kwd*$13594$CSxK@ g$mod**$13595$CSxK@ g$rhs*$13596$CSxK@ g$lex*$13597$CSxK@ g$mr$13598$CSxK@ g$r$13599$CSxK@ g$e*$13600$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$22067$CSxK@) (apply (case-lambda ((g$V$22068$CSxK@) (append (case-lambda ((g$V$22069$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$22070$CSxK@) (g$reverse$7391$CSxK@ (case-lambda ((g$V$22071$CSxK@) (g$expand-interaction-rhs*/init*$10735$CSxK@ (case-lambda ((g$V$22072$CSxK@) ((case-lambda ((g$C$22060$CSxK@ g$e*$13601$CSxK@) ((case-lambda ((g$J$22062$CSxK@) (null? (case-lambda ((g$T$22063$CSxK@) (if g$T$22063$CSxK@ (g$build-void$10273$CSxK@ g$J$22062$CSxK@) (cdr (case-lambda ((g$V$22064$CSxK@) (null? (case-lambda ((g$T$22065$CSxK@) (if g$T$22065$CSxK@ (car g$J$22062$CSxK@ g$e*$13601$CSxK@) (g$build-sequence$10272$CSxK@ g$J$22062$CSxK@ '#f g$e*$13601$CSxK@)))) g$V$22064$CSxK@))) g$e*$13601$CSxK@)))) g$e*$13601$CSxK@))) (case-lambda ((g$V$22061$CSxK@) ((case-lambda ((g$C$22059$CSxK@ g$e$13602$CSxK@) (values g$C$22059$CSxK@ g$e$13602$CSxK@ g$r$13599$CSxK@))) g$C$22060$CSxK@ g$V$22061$CSxK@)))))) g$C$22066$CSxK@ g$V$22072$CSxK@))) g$V$22071$CSxK@ g$V$22070$CSxK@ g$V$22069$CSxK@ g$r$13599$CSxK@ g$mr$13598$CSxK@))) g$lex*$13597$CSxK@))) g$rhs*$13596$CSxK@))) g$V$22068$CSxK@ g$e*$13600$CSxK@))) append g$V$22067$CSxK@))) g$mod**$13595$CSxK@))) g$C$22073$CSxK@ g$_exp*$13592$CSxK@ g$_kwd*$13591$CSxK@ g$mod**$13590$CSxK@ g$rhs*$13589$CSxK@ g$lex*$13588$CSxK@ g$mr$13587$CSxK@ g$r$13586$CSxK@ g$e*$13585$CSxK@))))))))) (library-letrec*-identity 'g$chi-interaction-expr$10768$CSxK@))) (g$library-body-expander$10769$CSxK@ g$library-body-expander$14309$CSxK@ ((case-lambda ((g$C$22834$CSxK@) (g$C$22834$CSxK@ (case-lambda ((g$C$22157$CSxK@ g$name$13603$CSxK@ g$main-exp*$13604$CSxK@ g$imp*$13605$CSxK@ g$b*$13606$CSxK@ g$mix?$13607$CSxK@) ((case-lambda ((g$C$22155$CSxK@ g$itc$13608$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22156$CSxK@) (begin (set! g$itc$13608$CSxK@ g$V$22156$CSxK@) ((case-lambda ((g$C$22154$CSxK@ g$imp-collector$13613$CSxK@ g$top-level-context$13614$CSxK@ g$imp-collector$13615$CSxK@ g$top-level-context$13616$CSxK@) ((case-lambda ((g$C$22145$CSxK@ g$swap$13617$CSxK@) (dynamic-wind g$C$22145$CSxK@ g$swap$13617$CSxK@ (case-lambda ((g$C$22144$CSxK@) (call-with-values g$C$22144$CSxK@ (case-lambda ((g$C$22075$CSxK@) (g$parse-import-spec*$10761$CSxK@ g$C$22075$CSxK@ g$imp*$13605$CSxK@))) (case-lambda ((g$C$22143$CSxK@ g$subst-names$13620$CSxK@ g$subst-labels$13621$CSxK@) ((case-lambda ((g$C$22141$CSxK@ g$subst-labels$13622$CSxK@ g$subst-names$13623$CSxK@) (g$make-top-rib$10762$CSxK@ (case-lambda ((g$V$22142$CSxK@) ((case-lambda ((g$C$22140$CSxK@ g$rib$13624$CSxK@) ((case-lambda ((g$C$22135$CSxK@ g$wrap$13625$CSxK@) (begin (set! g$wrap$13625$CSxK@ (case-lambda ((g$C$22076$CSxK@ g$x$13687$CSxK@) (list (case-lambda ((g$V$22077$CSxK@) (g$make-stx$10320$CSxK@ g$C$22076$CSxK@ g$x$13687$CSxK@ g$top-mark*$10280$CSxK@ g$V$22077$CSxK@ '()))) g$rib$13624$CSxK@)))) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22136$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22137$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22138$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22139$CSxK@) ((case-lambda ((g$C$22134$CSxK@ g$b*$13626$CSxK@ g$main-exp*$13627$CSxK@ g$rtc$13628$CSxK@ g$vtc$13629$CSxK@) ((case-lambda ((g$C$22133$CSxK@ g$inv-collector$13634$CSxK@ g$vis-collector$13635$CSxK@ g$inv-collector$13636$CSxK@ g$vis-collector$13637$CSxK@) ((case-lambda ((g$C$22124$CSxK@ g$swap$13638$CSxK@) (dynamic-wind g$C$22124$CSxK@ g$swap$13638$CSxK@ (case-lambda ((g$C$22123$CSxK@) (call-with-values g$C$22123$CSxK@ (case-lambda ((g$C$22078$CSxK@) (g$chi-library-internal$10767$CSxK@ g$C$22078$CSxK@ g$b*$13626$CSxK@ g$rib$13624$CSxK@ g$mix?$13607$CSxK@))) (case-lambda ((g$C$22122$CSxK@ g$init*$13645$CSxK@ g$r$13646$CSxK@ g$mr$13647$CSxK@ g$lex*$13648$CSxK@ g$rhs*$13649$CSxK@ g$internal-exp*$13650$CSxK@) ((case-lambda ((g$C$22121$CSxK@ g$internal-exp*$13651$CSxK@ g$rhs*$13652$CSxK@ g$lex*$13653$CSxK@ g$mr$13654$CSxK@ g$r$13655$CSxK@ g$init*$13656$CSxK@) (call-with-values g$C$22121$CSxK@ (case-lambda ((g$C$22079$CSxK@) (append (case-lambda ((g$V$22080$CSxK@) (g$parse-exports$10758$CSxK@ g$C$22079$CSxK@ g$V$22080$CSxK@))) g$main-exp*$13627$CSxK@ g$internal-exp*$13651$CSxK@))) (case-lambda ((g$C$22120$CSxK@ g$exp-name*$13659$CSxK@ g$exp-id*$13660$CSxK@) ((case-lambda ((g$C$22117$CSxK@ g$exp-id*$13661$CSxK@ g$exp-name*$13662$CSxK@) (g$seal-rib!$10311$CSxK@ (case-lambda (g$IGNORE$22118$CSxK@ (g$chi-expr*$10726$CSxK@ (case-lambda ((g$V$22119$CSxK@) ((case-lambda ((g$C$22115$CSxK@ g$init*$13663$CSxK@) (g$chi-rhs*$10736$CSxK@ (case-lambda ((g$V$22116$CSxK@) ((case-lambda ((g$C$22111$CSxK@ g$rhs*$13664$CSxK@) (g$unseal-rib!$10312$CSxK@ (case-lambda (g$IGNORE$22112$CSxK@ (g$make-export-subst$10816$CSxK@ (case-lambda ((g$V$22113$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22114$CSxK@) ((case-lambda ((g$C$22110$CSxK@ g$loc*$13665$CSxK@ g$export-subst$13666$CSxK@) ((case-lambda ((g$C$22109$CSxK@ g$errstr$13667$CSxK@) (begin (set! g$errstr$13667$CSxK@ '"attempt to export mutated variable") (call-with-values g$C$22109$CSxK@ (case-lambda ((g$C$22081$CSxK@) (g$make-export-env/macros$10817$CSxK@ g$C$22081$CSxK@ g$lex*$13653$CSxK@ g$loc*$13665$CSxK@ g$r$13655$CSxK@))) (case-lambda ((g$C$22108$CSxK@ g$export-env$13671$CSxK@ g$global*$13672$CSxK@ g$macro*$13673$CSxK@) ((case-lambda ((g$C$22100$CSxK@ g$macro*$13674$CSxK@ g$global*$13675$CSxK@ g$export-env$13676$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$22101$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$22102$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22103$CSxK@) ((case-lambda ((g$J$22106$CSxK@) (null? (case-lambda ((g$T$22107$CSxK@) (if g$T$22107$CSxK@ (g$build-void$10273$CSxK@ g$J$22106$CSxK@) (g$build-sequence$10272$CSxK@ g$J$22106$CSxK@ '#f g$init*$13663$CSxK@)))) g$init*$13663$CSxK@))) (case-lambda ((g$V$22104$CSxK@) (g$build-library-letrec*$10276$CSxK@ (case-lambda ((g$V$22105$CSxK@) ((case-lambda ((g$C$22093$CSxK@ g$invoke-body$13683$CSxK@ g$invoke-definitions$13684$CSxK@) (list (case-lambda ((g$V$22094$CSxK@) (append (case-lambda ((g$V$22095$CSxK@) (g$build-sequence$10272$CSxK@ (case-lambda ((g$V$22096$CSxK@) (g$vtc$13629$CSxK@ (case-lambda ((g$V$22097$CSxK@) (g$rtc$13628$CSxK@ (case-lambda ((g$V$22098$CSxK@) (g$itc$13608$CSxK@ (case-lambda ((g$V$22099$CSxK@) (values g$C$22093$CSxK@ g$V$22099$CSxK@ g$V$22098$CSxK@ g$V$22097$CSxK@ g$V$22096$CSxK@ g$macro*$13674$CSxK@ g$export-subst$13666$CSxK@ g$export-env$13676$CSxK@)))))))))))) '#f g$V$22095$CSxK@))) g$invoke-definitions$13684$CSxK@ g$V$22094$CSxK@))) g$invoke-body$13683$CSxK@))) g$C$22100$CSxK@ g$V$22105$CSxK@ g$V$22103$CSxK@))) '#f g$name$13603$CSxK@ g$lex*$13653$CSxK@ g$loc*$13665$CSxK@ g$rhs*$13664$CSxK@ g$V$22104$CSxK@)))))) g$build-global-define$10268$CSxK@ g$V$22102$CSxK@))) cdr g$global*$13675$CSxK@))) (case-lambda ((g$C$22090$CSxK@ g$s$13677$CSxK@) (cdr (case-lambda ((g$V$22091$CSxK@) (car (case-lambda ((g$V$22092$CSxK@) ((case-lambda ((g$C$22088$CSxK@ g$name$13678$CSxK@ g$label$13679$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$22089$CSxK@) ((case-lambda ((g$C$22086$CSxK@ g$p$13680$CSxK@) (if g$p$13680$CSxK@ (cdr (case-lambda ((g$V$22087$CSxK@) ((case-lambda ((g$C$22084$CSxK@ g$b$13681$CSxK@) (car (case-lambda ((g$V$22085$CSxK@) ((case-lambda ((g$C$22082$CSxK@ g$type$13682$CSxK@) (eq? (case-lambda ((g$T$22083$CSxK@) (if g$T$22083$CSxK@ (g$syntax-violation$10828$CSxK@ g$C$22082$CSxK@ 'export g$errstr$13667$CSxK@ g$name$13678$CSxK@) (void g$C$22082$CSxK@)))) g$type$13682$CSxK@ 'mutable))) g$C$22084$CSxK@ g$V$22085$CSxK@))) g$b$13681$CSxK@))) g$C$22086$CSxK@ g$V$22087$CSxK@))) g$p$13680$CSxK@) (void g$C$22086$CSxK@)))) g$C$22088$CSxK@ g$V$22089$CSxK@))) g$label$13679$CSxK@ g$export-env$13676$CSxK@))) g$C$22090$CSxK@ g$V$22092$CSxK@ g$V$22091$CSxK@))) g$s$13677$CSxK@))) g$s$13677$CSxK@))) g$export-subst$13666$CSxK@))) g$C$22108$CSxK@ g$macro*$13673$CSxK@ g$global*$13672$CSxK@ g$export-env$13671$CSxK@))))))) g$C$22110$CSxK@ uninitialized))) g$C$22111$CSxK@ g$V$22114$CSxK@ g$V$22113$CSxK@))) g$gen-global$10283$CSxK@ g$lex*$13653$CSxK@))) g$exp-name*$13662$CSxK@ g$exp-id*$13661$CSxK@))) g$rib$13624$CSxK@))) g$C$22115$CSxK@ g$V$22116$CSxK@))) g$rhs*$13652$CSxK@ g$r$13655$CSxK@ g$mr$13654$CSxK@))) g$C$22117$CSxK@ g$V$22119$CSxK@))) g$init*$13656$CSxK@ g$r$13655$CSxK@ g$mr$13654$CSxK@))) g$rib$13624$CSxK@))) g$C$22120$CSxK@ g$exp-id*$13660$CSxK@ g$exp-name*$13659$CSxK@)))))) g$C$22122$CSxK@ g$internal-exp*$13650$CSxK@ g$rhs*$13649$CSxK@ g$lex*$13648$CSxK@ g$mr$13647$CSxK@ g$r$13646$CSxK@ g$init*$13645$CSxK@)))))) g$swap$13638$CSxK@))) g$C$22133$CSxK@ (case-lambda ((g$C$22129$CSxK@) (g$inv-collector$13634$CSxK@ (case-lambda ((g$V$22130$CSxK@) ((case-lambda ((g$C$22125$CSxK@ g$t$13685$CSxK@) (g$inv-collector$13634$CSxK@ (case-lambda (g$IGNORE$22126$CSxK@ (begin (set! g$inv-collector$13636$CSxK@ g$t$13685$CSxK@) (g$C$22125$CSxK@ (cps-void))))) g$inv-collector$13636$CSxK@))) (case-lambda (g$IGNORE$22131$CSxK@ (g$vis-collector$13635$CSxK@ (case-lambda ((g$V$22132$CSxK@) ((case-lambda ((g$C$22127$CSxK@ g$t$13686$CSxK@) (g$vis-collector$13635$CSxK@ (case-lambda (g$IGNORE$22128$CSxK@ (begin (set! g$vis-collector$13637$CSxK@ g$t$13686$CSxK@) (g$C$22127$CSxK@ (cps-void))))) g$vis-collector$13637$CSxK@))) g$C$22129$CSxK@ g$V$22132$CSxK@)))))) g$V$22130$CSxK@))))))))) g$C$22134$CSxK@ g$inv-collector$10764$CSxK@ g$vis-collector$10765$CSxK@ g$rtc$13628$CSxK@ g$vtc$13629$CSxK@))) g$C$22135$CSxK@ g$V$22139$CSxK@ g$V$22138$CSxK@ g$V$22137$CSxK@ g$V$22136$CSxK@))) g$wrap$13625$CSxK@ g$b*$13606$CSxK@))) g$wrap$13625$CSxK@ g$main-exp*$13604$CSxK@)))))))))) g$C$22140$CSxK@ uninitialized))) g$C$22141$CSxK@ g$V$22142$CSxK@))) g$subst-names$13623$CSxK@ g$subst-labels$13622$CSxK@))) g$C$22143$CSxK@ g$subst-labels$13621$CSxK@ g$subst-names$13620$CSxK@)))))) g$swap$13617$CSxK@))) g$C$22154$CSxK@ (case-lambda ((g$C$22150$CSxK@) (g$imp-collector$13613$CSxK@ (case-lambda ((g$V$22151$CSxK@) ((case-lambda ((g$C$22146$CSxK@ g$t$13688$CSxK@) (g$imp-collector$13613$CSxK@ (case-lambda (g$IGNORE$22147$CSxK@ (begin (set! g$imp-collector$13615$CSxK@ g$t$13688$CSxK@) (g$C$22146$CSxK@ (cps-void))))) g$imp-collector$13615$CSxK@))) (case-lambda (g$IGNORE$22152$CSxK@ (g$top-level-context$13614$CSxK@ (case-lambda ((g$V$22153$CSxK@) ((case-lambda ((g$C$22148$CSxK@ g$t$13689$CSxK@) (g$top-level-context$13614$CSxK@ (case-lambda (g$IGNORE$22149$CSxK@ (begin (set! g$top-level-context$13616$CSxK@ g$t$13689$CSxK@) (g$C$22148$CSxK@ (cps-void))))) g$top-level-context$13616$CSxK@))) g$C$22150$CSxK@ g$V$22153$CSxK@)))))) g$V$22151$CSxK@))))))))) g$C$22155$CSxK@ g$imp-collector$10766$CSxK@ g$top-level-context$10836$CSxK@ g$itc$13608$CSxK@ '#f))))))) g$C$22157$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$library-body-expander$10769$CSxK@))) (g$core-library-expander$10770$CSxK@ g$core-library-expander$14310$CSxK@ ((case-lambda ((g$C$22835$CSxK@) (g$C$22835$CSxK@ (case-lambda ((g$C$22168$CSxK@ g$e$13690$CSxK@ g$verify-name$13691$CSxK@) (call-with-values g$C$22168$CSxK@ (case-lambda ((g$C$22158$CSxK@) (g$parse-library$10760$CSxK@ g$C$22158$CSxK@ g$e$13690$CSxK@))) (case-lambda ((g$C$22167$CSxK@ g$name*$13696$CSxK@ g$exp*$13697$CSxK@ g$imp*$13698$CSxK@ g$b*$13699$CSxK@) ((case-lambda ((g$C$22166$CSxK@ g$b*$13700$CSxK@ g$imp*$13701$CSxK@ g$exp*$13702$CSxK@ g$name*$13703$CSxK@) (call-with-values g$C$22166$CSxK@ (case-lambda ((g$C$22159$CSxK@) (g$parse-library-name$10759$CSxK@ g$C$22159$CSxK@ g$name*$13703$CSxK@))) (case-lambda ((g$C$22165$CSxK@ g$name$13706$CSxK@ g$ver$13707$CSxK@) ((case-lambda ((g$C$22163$CSxK@ g$ver$13708$CSxK@ g$name$13709$CSxK@) (g$verify-name$13691$CSxK@ (case-lambda (g$IGNORE$22164$CSxK@ (call-with-values g$C$22163$CSxK@ (case-lambda ((g$C$22160$CSxK@) (g$library-body-expander$10769$CSxK@ g$C$22160$CSxK@ g$name$13709$CSxK@ g$exp*$13702$CSxK@ g$imp*$13701$CSxK@ g$b*$13700$CSxK@ '#f))) (case-lambda ((g$C$22162$CSxK@ g$imp*$13717$CSxK@ g$invoke-req*$13718$CSxK@ g$visit-req*$13719$CSxK@ g$invoke-code$13720$CSxK@ g$visit-code$13721$CSxK@ g$export-subst$13722$CSxK@ g$export-env$13723$CSxK@) ((case-lambda ((g$C$22161$CSxK@ g$export-env$13724$CSxK@ g$export-subst$13725$CSxK@ g$visit-code$13726$CSxK@ g$invoke-code$13727$CSxK@ g$visit-req*$13728$CSxK@ g$invoke-req*$13729$CSxK@ g$imp*$13730$CSxK@) (values g$C$22161$CSxK@ g$name$13709$CSxK@ g$ver$13708$CSxK@ g$imp*$13730$CSxK@ g$invoke-req*$13729$CSxK@ g$visit-req*$13728$CSxK@ g$invoke-code$13727$CSxK@ g$visit-code$13726$CSxK@ g$export-subst$13725$CSxK@ g$export-env$13724$CSxK@))) g$C$22162$CSxK@ g$export-env$13723$CSxK@ g$export-subst$13722$CSxK@ g$visit-code$13721$CSxK@ g$invoke-code$13720$CSxK@ g$visit-req*$13719$CSxK@ g$invoke-req*$13718$CSxK@ g$imp*$13717$CSxK@)))))) g$name$13709$CSxK@))) g$C$22165$CSxK@ g$ver$13707$CSxK@ g$name$13706$CSxK@)))))) g$C$22167$CSxK@ g$b*$13699$CSxK@ g$imp*$13698$CSxK@ g$exp*$13697$CSxK@ g$name*$13696$CSxK@))))))))) (library-letrec*-identity 'g$core-library-expander$10770$CSxK@))) (g$parse-top-level-program$10771$CSxK@ g$parse-top-level-program$14311$CSxK@ ((case-lambda ((g$C$22836$CSxK@) (g$C$22836$CSxK@ (case-lambda ((g$C$22190$CSxK@ g$e*$13731$CSxK@) ((case-lambda ((g$C$22188$CSxK@ g$t$13732$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22189$CSxK@) ((case-lambda ((g$C$22185$CSxK@ g$ls/false$13733$CSxK@) ((case-lambda ((g$J$22187$CSxK@) (if g$ls/false$13733$CSxK@ (apply g$J$22187$CSxK@ (case-lambda ((g$C$22169$CSxK@ g$import$13734$CSxK@ g$imp*$13735$CSxK@ g$b*$13736$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$22170$CSxK@) (eq? g$C$22169$CSxK@ g$V$22170$CSxK@ 'import))) g$import$13734$CSxK@))) g$ls/false$13733$CSxK@) (g$J$22187$CSxK@ '#f)))) (case-lambda ((g$T$22186$CSxK@) (if g$T$22186$CSxK@ (apply g$C$22185$CSxK@ (case-lambda ((g$C$22171$CSxK@ g$import$13737$CSxK@ g$imp*$13738$CSxK@ g$b*$13739$CSxK@) (values g$C$22171$CSxK@ g$imp*$13738$CSxK@ g$b*$13739$CSxK@))) g$ls/false$13733$CSxK@) ((case-lambda ((g$C$22183$CSxK@ g$t$13740$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22184$CSxK@) ((case-lambda ((g$C$22180$CSxK@ g$ls/false$13741$CSxK@) ((case-lambda ((g$J$22182$CSxK@) (if g$ls/false$13741$CSxK@ (apply g$J$22182$CSxK@ (case-lambda ((g$C$22172$CSxK@ g$import$13742$CSxK@ g$x$13743$CSxK@ g$y$13744$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$22173$CSxK@) (eq? g$C$22172$CSxK@ g$V$22173$CSxK@ 'import))) g$import$13742$CSxK@))) g$ls/false$13741$CSxK@) (g$J$22182$CSxK@ '#f)))) (case-lambda ((g$T$22181$CSxK@) (if g$T$22181$CSxK@ (apply g$C$22180$CSxK@ (case-lambda ((g$C$22174$CSxK@ g$import$13745$CSxK@ g$x$13746$CSxK@ g$y$13747$CSxK@) (g$syntax-car$10344$CSxK@ (case-lambda ((g$V$22175$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$22174$CSxK@ 'expander '"invalid syntax of top-level program" g$V$22175$CSxK@))) g$e*$13731$CSxK@))) g$ls/false$13741$CSxK@) ((case-lambda ((g$C$22178$CSxK@ g$t$13748$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22179$CSxK@) ((case-lambda ((g$C$22177$CSxK@ g$ls/false$13749$CSxK@) (if g$ls/false$13749$CSxK@ (apply g$C$22177$CSxK@ (case-lambda ((g$C$22176$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22176$CSxK@ 'expander '"top-level program is missing an (import ---) clause"))) g$ls/false$13749$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$22177$CSxK@ '#f '"invalid syntax" g$t$13748$CSxK@)))) g$C$22178$CSxK@ g$V$22179$CSxK@))) g$t$13748$CSxK@ '_))) g$C$22180$CSxK@ g$t$13740$CSxK@))))))) g$C$22183$CSxK@ g$V$22184$CSxK@))) g$t$13740$CSxK@ '((any . any) . any)))) g$C$22185$CSxK@ g$t$13732$CSxK@))))))) g$C$22188$CSxK@ g$V$22189$CSxK@))) g$t$13732$CSxK@ '((any . each-any) . each-any)))) g$C$22190$CSxK@ g$e*$13731$CSxK@)))))) (library-letrec*-identity 'g$parse-top-level-program$10771$CSxK@))) (g$top-level-expander$10772$CSxK@ g$top-level-expander$14312$CSxK@ ((case-lambda ((g$C$22837$CSxK@) (g$C$22837$CSxK@ (case-lambda ((g$C$22197$CSxK@ g$e*$13750$CSxK@) (call-with-values g$C$22197$CSxK@ (case-lambda ((g$C$22191$CSxK@) (g$parse-top-level-program$10771$CSxK@ g$C$22191$CSxK@ g$e*$13750$CSxK@))) (case-lambda ((g$C$22196$CSxK@ g$imp*$13753$CSxK@ g$b*$13754$CSxK@) ((case-lambda ((g$C$22195$CSxK@ g$b*$13755$CSxK@ g$imp*$13756$CSxK@) (call-with-values g$C$22195$CSxK@ (case-lambda ((g$C$22192$CSxK@) (g$library-body-expander$10769$CSxK@ g$C$22192$CSxK@ '() '() g$imp*$13756$CSxK@ g$b*$13755$CSxK@ '#t))) (case-lambda ((g$C$22194$CSxK@ g$imp*$13764$CSxK@ g$invoke-req*$13765$CSxK@ g$visit-req*$13766$CSxK@ g$invoke-code$13767$CSxK@ g$visit-code$13768$CSxK@ g$export-subst$13769$CSxK@ g$export-env$13770$CSxK@) ((case-lambda ((g$C$22193$CSxK@ g$export-env$13771$CSxK@ g$export-subst$13772$CSxK@ g$visit-code$13773$CSxK@ g$invoke-code$13774$CSxK@ g$visit-req*$13775$CSxK@ g$invoke-req*$13776$CSxK@ g$imp*$13777$CSxK@) (values g$C$22193$CSxK@ g$invoke-req*$13776$CSxK@ g$invoke-code$13774$CSxK@))) g$C$22194$CSxK@ g$export-env$13770$CSxK@ g$export-subst$13769$CSxK@ g$visit-code$13768$CSxK@ g$invoke-code$13767$CSxK@ g$visit-req*$13766$CSxK@ g$invoke-req*$13765$CSxK@ g$imp*$13764$CSxK@)))))) g$C$22196$CSxK@ g$b*$13754$CSxK@ g$imp*$13753$CSxK@))))))))) (library-letrec*-identity 'g$top-level-expander$10772$CSxK@))) (g$8507$10773$CSxK@ g$8507$14313$CSxK@ ((case-lambda ((g$C$22838$CSxK@) (make-record-type-descriptor g$C$22838$CSxK@ 'env '#f 'g$8510$CSxK@ '#t '#t '#((mutable names) (mutable labels) (mutable itc))))) (library-letrec*-identity 'g$8507$10773$CSxK@))) (g$8509$10774$CSxK@ g$8509$14314$CSxK@ ((case-lambda ((g$C$22839$CSxK@) (g$C$22839$CSxK@ '#f))) (library-letrec*-identity 'g$8509$10774$CSxK@))) (g$8508$10775$CSxK@ g$8508$14315$CSxK@ ((case-lambda ((g$C$22840$CSxK@) (make-record-constructor-descriptor g$C$22840$CSxK@ g$8507$10773$CSxK@ '#f g$8509$10774$CSxK@))) (library-letrec*-identity 'g$8508$10775$CSxK@))) (g$env?$10778$CSxK@ g$env?$14316$CSxK@ ((case-lambda ((g$C$22841$CSxK@) (record-predicate g$C$22841$CSxK@ g$8507$10773$CSxK@))) (library-letrec*-identity 'g$env?$10778$CSxK@))) (g$make-env$10779$CSxK@ g$make-env$14317$CSxK@ ((case-lambda ((g$C$22842$CSxK@) (record-constructor g$C$22842$CSxK@ g$8508$10775$CSxK@))) (library-letrec*-identity 'g$make-env$10779$CSxK@))) (g$env-names$10780$CSxK@ g$env-names$14318$CSxK@ ((case-lambda ((g$C$22843$CSxK@) (record-accessor g$C$22843$CSxK@ g$8507$10773$CSxK@ '0))) (library-letrec*-identity 'g$env-names$10780$CSxK@))) (g$env-labels$10781$CSxK@ g$env-labels$14319$CSxK@ ((case-lambda ((g$C$22844$CSxK@) (record-accessor g$C$22844$CSxK@ g$8507$10773$CSxK@ '1))) (library-letrec*-identity 'g$env-labels$10781$CSxK@))) (g$env-itc$10782$CSxK@ g$env-itc$14320$CSxK@ ((case-lambda ((g$C$22845$CSxK@) (record-accessor g$C$22845$CSxK@ g$8507$10773$CSxK@ '2))) (library-letrec*-identity 'g$env-itc$10782$CSxK@))) (g$set-env-names!$10783$CSxK@ g$set-env-names!$14321$CSxK@ ((case-lambda ((g$C$22846$CSxK@) (record-mutator g$C$22846$CSxK@ g$8507$10773$CSxK@ '0))) (library-letrec*-identity 'g$set-env-names!$10783$CSxK@))) (g$set-env-labels!$10784$CSxK@ g$set-env-labels!$14322$CSxK@ ((case-lambda ((g$C$22847$CSxK@) (record-mutator g$C$22847$CSxK@ g$8507$10773$CSxK@ '1))) (library-letrec*-identity 'g$set-env-labels!$10784$CSxK@))) (g$set-env-itc!$10785$CSxK@ g$set-env-itc!$14323$CSxK@ ((case-lambda ((g$C$22848$CSxK@) (record-mutator g$C$22848$CSxK@ g$8507$10773$CSxK@ '2))) (library-letrec*-identity 'g$set-env-itc!$10785$CSxK@))) (g$rp$10786$CSxK@ g$rp$14324$CSxK@ ((case-lambda ((g$C$22849$CSxK@) (make-record-printer g$C$22849$CSxK@ 'env (case-lambda ((g$C$22198$CSxK@ g$x$13778$CSxK@ g$p$13779$CSxK@ g$wr$13780$CSxK@) (display g$C$22198$CSxK@ '"#<environment>" g$p$13779$CSxK@)))))) (library-letrec*-identity 'g$rp$10786$CSxK@))) (g$8524$10787$CSxK@ g$8524$14325$CSxK@ ((case-lambda ((g$C$22850$CSxK@) (make-record-type-descriptor g$C$22850$CSxK@ 'interaction-env '#f 'g$8527$CSxK@ '#t '#t '#((mutable rib) (mutable r) (mutable locs))))) (library-letrec*-identity 'g$8524$10787$CSxK@))) (g$8526$10788$CSxK@ g$8526$14326$CSxK@ ((case-lambda ((g$C$22851$CSxK@) (g$C$22851$CSxK@ '#f))) (library-letrec*-identity 'g$8526$10788$CSxK@))) (g$8525$10789$CSxK@ g$8525$14327$CSxK@ ((case-lambda ((g$C$22852$CSxK@) (make-record-constructor-descriptor g$C$22852$CSxK@ g$8524$10787$CSxK@ '#f g$8526$10788$CSxK@))) (library-letrec*-identity 'g$8525$10789$CSxK@))) (g$interaction-env?$10792$CSxK@ g$interaction-env?$14328$CSxK@ ((case-lambda ((g$C$22853$CSxK@) (record-predicate g$C$22853$CSxK@ g$8524$10787$CSxK@))) (library-letrec*-identity 'g$interaction-env?$10792$CSxK@))) (g$make-interaction-env$10793$CSxK@ g$make-interaction-env$14329$CSxK@ ((case-lambda ((g$C$22854$CSxK@) (record-constructor g$C$22854$CSxK@ g$8525$10789$CSxK@))) (library-letrec*-identity 'g$make-interaction-env$10793$CSxK@))) (g$interaction-env-rib$10794$CSxK@ g$interaction-env-rib$14330$CSxK@ ((case-lambda ((g$C$22855$CSxK@) (record-accessor g$C$22855$CSxK@ g$8524$10787$CSxK@ '0))) (library-letrec*-identity 'g$interaction-env-rib$10794$CSxK@))) (g$interaction-env-r$10795$CSxK@ g$interaction-env-r$14331$CSxK@ ((case-lambda ((g$C$22856$CSxK@) (record-accessor g$C$22856$CSxK@ g$8524$10787$CSxK@ '1))) (library-letrec*-identity 'g$interaction-env-r$10795$CSxK@))) (g$interaction-env-locs$10796$CSxK@ g$interaction-env-locs$14332$CSxK@ ((case-lambda ((g$C$22857$CSxK@) (record-accessor g$C$22857$CSxK@ g$8524$10787$CSxK@ '2))) (library-letrec*-identity 'g$interaction-env-locs$10796$CSxK@))) (g$set-interaction-env-rib!$10797$CSxK@ g$set-interaction-env-rib!$14333$CSxK@ ((case-lambda ((g$C$22858$CSxK@) (record-mutator g$C$22858$CSxK@ g$8524$10787$CSxK@ '0))) (library-letrec*-identity 'g$set-interaction-env-rib!$10797$CSxK@))) (g$set-interaction-env-r!$10798$CSxK@ g$set-interaction-env-r!$14334$CSxK@ ((case-lambda ((g$C$22859$CSxK@) (record-mutator g$C$22859$CSxK@ g$8524$10787$CSxK@ '1))) (library-letrec*-identity 'g$set-interaction-env-r!$10798$CSxK@))) (g$set-interaction-env-locs!$10799$CSxK@ g$set-interaction-env-locs!$14335$CSxK@ ((case-lambda ((g$C$22860$CSxK@) (record-mutator g$C$22860$CSxK@ g$8524$10787$CSxK@ '2))) (library-letrec*-identity 'g$set-interaction-env-locs!$10799$CSxK@))) (g$rp$10800$CSxK@ g$rp$14336$CSxK@ ((case-lambda ((g$C$22861$CSxK@) (make-record-printer g$C$22861$CSxK@ 'interaction-env (case-lambda ((g$C$22199$CSxK@ g$x$13781$CSxK@ g$p$13782$CSxK@ g$wr$13783$CSxK@) (display g$C$22199$CSxK@ '"#<environment>" g$p$13782$CSxK@)))))) (library-letrec*-identity 'g$rp$10800$CSxK@))) (g$interaction-environment-symbols$10801$CSxK@ g$interaction-environment-symbols$14337$CSxK@ ((case-lambda ((g$C$22862$CSxK@) (g$C$22862$CSxK@ (case-lambda ((g$C$22200$CSxK@) (g$interaction-environment$10835$CSxK@ (case-lambda ((g$V$22201$CSxK@) (g$environment-symbols$10805$CSxK@ g$C$22200$CSxK@ g$V$22201$CSxK@))))))))) (library-letrec*-identity 'g$interaction-environment-symbols$10801$CSxK@))) (g$environment-bindings$10802$CSxK@ g$environment-bindings$14338$CSxK@ ((case-lambda ((g$C$22863$CSxK@) (g$C$22863$CSxK@ (case-lambda ((g$C$22205$CSxK@ g$e$13784$CSxK@) (g$env-labels$10781$CSxK@ (case-lambda ((g$V$22206$CSxK@) (g$env-names$10780$CSxK@ (case-lambda ((g$V$22207$CSxK@) (g$vector-map$7444$CSxK@ (case-lambda ((g$V$22208$CSxK@) (vector->list g$C$22205$CSxK@ g$V$22208$CSxK@))) (case-lambda ((g$C$22202$CSxK@ g$name$13785$CSxK@ g$label$13786$CSxK@) (g$imported-label->binding$10082$CSxK@ (case-lambda ((g$V$22203$CSxK@) (cons (case-lambda ((g$V$22204$CSxK@) (g$parse-binding$10803$CSxK@ g$C$22202$CSxK@ g$V$22204$CSxK@))) g$name$13785$CSxK@ g$V$22203$CSxK@))) g$label$13786$CSxK@))) g$V$22207$CSxK@ g$V$22206$CSxK@))) g$e$13784$CSxK@))) g$e$13784$CSxK@)))))) (library-letrec*-identity 'g$environment-bindings$10802$CSxK@))) (g$parse-binding$10803$CSxK@ g$parse-binding$14339$CSxK@ ((case-lambda ((g$C$22864$CSxK@) (g$C$22864$CSxK@ (case-lambda ((g$C$22216$CSxK@ g$b$13787$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$22217$CSxK@) ((case-lambda ((g$C$22209$CSxK@ g$t$13788$CSxK@) (g$memv$6706$CSxK@ (case-lambda ((g$T$22210$CSxK@) (if g$T$22210$CSxK@ (g$C$22209$CSxK@ 'procedure) (g$memv$6706$CSxK@ (case-lambda ((g$T$22211$CSxK@) (if g$T$22211$CSxK@ (g$C$22209$CSxK@ 'syntax) (eqv? (case-lambda ((g$T$22212$CSxK@) (if g$T$22212$CSxK@ (g$C$22209$CSxK@ 'record) (g$cadr$7393$CSxK@ (case-lambda ((g$V$22213$CSxK@) (car (case-lambda ((g$V$22214$CSxK@) (eq? (case-lambda ((g$T$22215$CSxK@) (if g$T$22215$CSxK@ (g$C$22209$CSxK@ 'syntax) (g$C$22209$CSxK@ 'unknown)))) g$V$22214$CSxK@ g$V$22213$CSxK@))) g$b$13787$CSxK@))) g$b$13787$CSxK@)))) g$t$13788$CSxK@ '$core-rtd)))) g$t$13788$CSxK@ '(core-macro macro global-macro))))) g$t$13788$CSxK@ '(core-prim global)))) (case-lambda ((g$V$22218$CSxK@) (car (case-lambda ((g$V$22219$CSxK@) (cons g$C$22216$CSxK@ g$V$22219$CSxK@ g$V$22218$CSxK@))) g$b$13787$CSxK@))) g$V$22217$CSxK@))) g$b$13787$CSxK@)))))) (library-letrec*-identity 'g$parse-binding$10803$CSxK@))) (g$environment?$10804$CSxK@ g$environment?$14340$CSxK@ ((case-lambda ((g$C$22865$CSxK@) (g$C$22865$CSxK@ (case-lambda ((g$C$22221$CSxK@ g$x$13789$CSxK@) (g$env?$10778$CSxK@ (case-lambda ((g$V$22222$CSxK@) ((case-lambda ((g$C$22220$CSxK@ g$t$13790$CSxK@) (if g$t$13790$CSxK@ (g$C$22220$CSxK@ g$t$13790$CSxK@) (g$interaction-env?$10792$CSxK@ g$C$22220$CSxK@ g$x$13789$CSxK@)))) g$C$22221$CSxK@ g$V$22222$CSxK@))) g$x$13789$CSxK@)))))) (library-letrec*-identity 'g$environment?$10804$CSxK@))) (g$environment-symbols$10805$CSxK@ g$environment-symbols$14341$CSxK@ ((case-lambda ((g$C$22866$CSxK@) (g$C$22866$CSxK@ (case-lambda ((g$C$22223$CSxK@ g$x$13791$CSxK@) (g$env?$10778$CSxK@ (case-lambda ((g$T$22224$CSxK@) (if g$T$22224$CSxK@ (g$env-names$10780$CSxK@ (case-lambda ((g$V$22225$CSxK@) (vector->list g$C$22223$CSxK@ g$V$22225$CSxK@))) g$x$13791$CSxK@) (g$interaction-env?$10792$CSxK@ (case-lambda ((g$T$22226$CSxK@) (if g$T$22226$CSxK@ (g$interaction-env-rib$10794$CSxK@ (case-lambda ((g$V$22227$CSxK@) (g$rib-sym*$10295$CSxK@ (case-lambda ((g$V$22228$CSxK@) (g$map$6713$CSxK@ g$C$22223$CSxK@ values g$V$22228$CSxK@))) g$V$22227$CSxK@))) g$x$13791$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22223$CSxK@ 'environment-symbols '"not an environment" g$x$13791$CSxK@)))) g$x$13791$CSxK@)))) g$x$13791$CSxK@)))))) (library-letrec*-identity 'g$environment-symbols$10805$CSxK@))) (g$environment$10806$CSxK@ g$environment$14342$CSxK@ ((case-lambda ((g$C$22867$CSxK@) (g$C$22867$CSxK@ (case-lambda ((g$C$22240$CSxK@ . g$imp*$13792$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22241$CSxK@) ((case-lambda ((g$C$22239$CSxK@ g$itc$13793$CSxK@) ((case-lambda ((g$C$22238$CSxK@ g$imp-collector$13796$CSxK@ g$imp-collector$13797$CSxK@) ((case-lambda ((g$C$22233$CSxK@ g$swap$13798$CSxK@) (dynamic-wind g$C$22233$CSxK@ g$swap$13798$CSxK@ (case-lambda ((g$C$22232$CSxK@) (call-with-values g$C$22232$CSxK@ (case-lambda ((g$C$22229$CSxK@) (g$parse-import-spec*$10761$CSxK@ g$C$22229$CSxK@ g$imp*$13792$CSxK@))) (case-lambda ((g$C$22231$CSxK@ g$subst-names$13801$CSxK@ g$subst-labels$13802$CSxK@) ((case-lambda ((g$C$22230$CSxK@ g$subst-labels$13803$CSxK@ g$subst-names$13804$CSxK@) (g$make-env$10779$CSxK@ g$C$22230$CSxK@ g$subst-names$13804$CSxK@ g$subst-labels$13803$CSxK@ g$itc$13793$CSxK@))) g$C$22231$CSxK@ g$subst-labels$13802$CSxK@ g$subst-names$13801$CSxK@)))))) g$swap$13798$CSxK@))) g$C$22238$CSxK@ (case-lambda ((g$C$22236$CSxK@) (g$imp-collector$13796$CSxK@ (case-lambda ((g$V$22237$CSxK@) ((case-lambda ((g$C$22234$CSxK@ g$t$13805$CSxK@) (g$imp-collector$13796$CSxK@ (case-lambda (g$IGNORE$22235$CSxK@ (begin (set! g$imp-collector$13797$CSxK@ g$t$13805$CSxK@) (g$C$22234$CSxK@ (cps-void))))) g$imp-collector$13797$CSxK@))) g$C$22236$CSxK@ g$V$22237$CSxK@))))))))) g$C$22239$CSxK@ g$imp-collector$10766$CSxK@ g$itc$13793$CSxK@))) g$C$22240$CSxK@ g$V$22241$CSxK@))))))))) (library-letrec*-identity 'g$environment$10806$CSxK@))) (g$null-environment$10807$CSxK@ g$null-environment$14343$CSxK@ ((case-lambda ((g$C$22868$CSxK@) (g$C$22868$CSxK@ (case-lambda ((g$C$22242$CSxK@ g$n$13806$CSxK@) ((case-lambda ((g$J$22244$CSxK@) (eqv? (case-lambda ((g$V$22245$CSxK@) (not (case-lambda ((g$T$22246$CSxK@) (if g$T$22246$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$22244$CSxK@ 'null-environment '"not 5" g$n$13806$CSxK@) (void g$J$22244$CSxK@)))) g$V$22245$CSxK@))) g$n$13806$CSxK@ '5))) (case-lambda (g$IGNORE$22243$CSxK@ (g$environment$10806$CSxK@ g$C$22242$CSxK@ '(psyntax null-environment-5)))))))))) (library-letrec*-identity 'g$null-environment$10807$CSxK@))) (g$scheme-report-environment$10808$CSxK@ g$scheme-report-environment$14344$CSxK@ ((case-lambda ((g$C$22869$CSxK@) (g$C$22869$CSxK@ (case-lambda ((g$C$22247$CSxK@ g$n$13807$CSxK@) ((case-lambda ((g$J$22249$CSxK@) (eqv? (case-lambda ((g$V$22250$CSxK@) (not (case-lambda ((g$T$22251$CSxK@) (if g$T$22251$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$22249$CSxK@ 'scheme-report-environment '"not 5" g$n$13807$CSxK@) (void g$J$22249$CSxK@)))) g$V$22250$CSxK@))) g$n$13807$CSxK@ '5))) (case-lambda (g$IGNORE$22248$CSxK@ (g$environment$10806$CSxK@ g$C$22247$CSxK@ '(psyntax scheme-report-environment-5)))))))))) (library-letrec*-identity 'g$scheme-report-environment$10808$CSxK@))) (g$expand$10809$CSxK@ g$expand$14345$CSxK@ ((case-lambda ((g$C$22870$CSxK@) (g$C$22870$CSxK@ (case-lambda ((g$C$22312$CSxK@ g$x$13808$CSxK@ g$env$13809$CSxK@) (g$env?$10778$CSxK@ (case-lambda ((g$T$22313$CSxK@) (if g$T$22313$CSxK@ (g$env-labels$10781$CSxK@ (case-lambda ((g$V$22314$CSxK@) (g$env-names$10780$CSxK@ (case-lambda ((g$V$22315$CSxK@) (g$make-top-rib$10762$CSxK@ (case-lambda ((g$V$22316$CSxK@) ((case-lambda ((g$C$22276$CSxK@ g$rib$13810$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22277$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22278$CSxK@) (g$env-itc$10782$CSxK@ (case-lambda ((g$V$22279$CSxK@) (list (case-lambda ((g$V$22280$CSxK@) (g$make-stx$10320$CSxK@ (case-lambda ((g$V$22281$CSxK@) ((case-lambda ((g$C$22274$CSxK@ g$x$13811$CSxK@ g$itc$13812$CSxK@ g$rtc$13813$CSxK@ g$vtc$13814$CSxK@) ((case-lambda ((g$C$22273$CSxK@ g$top-level-context$13824$CSxK@ g$inv-collector$13825$CSxK@ g$vis-collector$13826$CSxK@ g$imp-collector$13827$CSxK@ g$top-level-context$13828$CSxK@ g$inv-collector$13829$CSxK@ g$vis-collector$13830$CSxK@ g$imp-collector$13831$CSxK@) ((case-lambda ((g$C$22256$CSxK@ g$swap$13832$CSxK@) (dynamic-wind g$C$22256$CSxK@ g$swap$13832$CSxK@ (case-lambda ((g$C$22255$CSxK@) (g$chi-expr$10728$CSxK@ g$C$22255$CSxK@ g$x$13811$CSxK@ '() '()))) g$swap$13832$CSxK@))) g$C$22273$CSxK@ (case-lambda ((g$C$22265$CSxK@) (g$top-level-context$13824$CSxK@ (case-lambda ((g$V$22266$CSxK@) ((case-lambda ((g$C$22257$CSxK@ g$t$13833$CSxK@) (g$top-level-context$13824$CSxK@ (case-lambda (g$IGNORE$22258$CSxK@ (begin (set! g$top-level-context$13828$CSxK@ g$t$13833$CSxK@) (g$C$22257$CSxK@ (cps-void))))) g$top-level-context$13828$CSxK@))) (case-lambda (g$IGNORE$22267$CSxK@ (g$inv-collector$13825$CSxK@ (case-lambda ((g$V$22268$CSxK@) ((case-lambda ((g$C$22259$CSxK@ g$t$13834$CSxK@) (g$inv-collector$13825$CSxK@ (case-lambda (g$IGNORE$22260$CSxK@ (begin (set! g$inv-collector$13829$CSxK@ g$t$13834$CSxK@) (g$C$22259$CSxK@ (cps-void))))) g$inv-collector$13829$CSxK@))) (case-lambda (g$IGNORE$22269$CSxK@ (g$vis-collector$13826$CSxK@ (case-lambda ((g$V$22270$CSxK@) ((case-lambda ((g$C$22261$CSxK@ g$t$13835$CSxK@) (g$vis-collector$13826$CSxK@ (case-lambda (g$IGNORE$22262$CSxK@ (begin (set! g$vis-collector$13830$CSxK@ g$t$13835$CSxK@) (g$C$22261$CSxK@ (cps-void))))) g$vis-collector$13830$CSxK@))) (case-lambda (g$IGNORE$22271$CSxK@ (g$imp-collector$13827$CSxK@ (case-lambda ((g$V$22272$CSxK@) ((case-lambda ((g$C$22263$CSxK@ g$t$13836$CSxK@) (g$imp-collector$13827$CSxK@ (case-lambda (g$IGNORE$22264$CSxK@ (begin (set! g$imp-collector$13831$CSxK@ g$t$13836$CSxK@) (g$C$22263$CSxK@ (cps-void))))) g$imp-collector$13831$CSxK@))) g$C$22265$CSxK@ g$V$22272$CSxK@)))))) g$V$22270$CSxK@)))))) g$V$22268$CSxK@)))))) g$V$22266$CSxK@))))))))) (case-lambda ((g$V$22275$CSxK@) ((case-lambda ((g$C$22252$CSxK@ g$x$13815$CSxK@) (g$seal-rib!$10311$CSxK@ (case-lambda (g$IGNORE$22253$CSxK@ (g$rtc$13813$CSxK@ (case-lambda ((g$V$22254$CSxK@) (values g$C$22252$CSxK@ g$x$13815$CSxK@ g$V$22254$CSxK@)))))) g$rib$13810$CSxK@))) g$C$22274$CSxK@ g$V$22275$CSxK@))) g$top-level-context$10836$CSxK@ g$inv-collector$10764$CSxK@ g$vis-collector$10765$CSxK@ g$imp-collector$10766$CSxK@ '#f g$rtc$13813$CSxK@ g$vtc$13814$CSxK@ g$itc$13812$CSxK@))) g$C$22276$CSxK@ g$V$22281$CSxK@ g$V$22279$CSxK@ g$V$22278$CSxK@ g$V$22277$CSxK@))) g$x$13808$CSxK@ g$top-mark*$10280$CSxK@ g$V$22280$CSxK@ '()))) g$rib$13810$CSxK@))) g$env$13809$CSxK@))))))))) g$C$22312$CSxK@ g$V$22316$CSxK@))) g$V$22315$CSxK@ g$V$22314$CSxK@))) g$env$13809$CSxK@))) g$env$13809$CSxK@) (g$interaction-env?$10792$CSxK@ (case-lambda ((g$T$22317$CSxK@) (if g$T$22317$CSxK@ (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22318$CSxK@) (g$interaction-env-r$10795$CSxK@ (case-lambda ((g$V$22319$CSxK@) (g$interaction-env-rib$10794$CSxK@ (case-lambda ((g$V$22320$CSxK@) ((case-lambda ((g$C$22309$CSxK@ g$rib$13837$CSxK@ g$r$13838$CSxK@ g$rtc$13839$CSxK@) (list (case-lambda ((g$V$22310$CSxK@) (g$make-stx$10320$CSxK@ (case-lambda ((g$V$22311$CSxK@) ((case-lambda ((g$C$22308$CSxK@ g$x$13840$CSxK@) (call-with-values g$C$22308$CSxK@ (case-lambda ((g$C$22301$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22302$CSxK@) (g$make-collector$10763$CSxK@ (case-lambda ((g$V$22303$CSxK@) ((case-lambda ((g$C$22300$CSxK@ g$top-level-context$13851$CSxK@ g$inv-collector$13852$CSxK@ g$vis-collector$13853$CSxK@ g$imp-collector$13854$CSxK@ g$top-level-context$13855$CSxK@ g$inv-collector$13856$CSxK@ g$vis-collector$13857$CSxK@ g$imp-collector$13858$CSxK@) ((case-lambda ((g$C$22283$CSxK@ g$swap$13859$CSxK@) (dynamic-wind g$C$22283$CSxK@ g$swap$13859$CSxK@ (case-lambda ((g$C$22282$CSxK@) (g$chi-interaction-expr$10768$CSxK@ g$C$22282$CSxK@ g$x$13840$CSxK@ g$rib$13837$CSxK@ g$r$13838$CSxK@))) g$swap$13859$CSxK@))) g$C$22300$CSxK@ (case-lambda ((g$C$22292$CSxK@) (g$top-level-context$13851$CSxK@ (case-lambda ((g$V$22293$CSxK@) ((case-lambda ((g$C$22284$CSxK@ g$t$13860$CSxK@) (g$top-level-context$13851$CSxK@ (case-lambda (g$IGNORE$22285$CSxK@ (begin (set! g$top-level-context$13855$CSxK@ g$t$13860$CSxK@) (g$C$22284$CSxK@ (cps-void))))) g$top-level-context$13855$CSxK@))) (case-lambda (g$IGNORE$22294$CSxK@ (g$inv-collector$13852$CSxK@ (case-lambda ((g$V$22295$CSxK@) ((case-lambda ((g$C$22286$CSxK@ g$t$13861$CSxK@) (g$inv-collector$13852$CSxK@ (case-lambda (g$IGNORE$22287$CSxK@ (begin (set! g$inv-collector$13856$CSxK@ g$t$13861$CSxK@) (g$C$22286$CSxK@ (cps-void))))) g$inv-collector$13856$CSxK@))) (case-lambda (g$IGNORE$22296$CSxK@ (g$vis-collector$13853$CSxK@ (case-lambda ((g$V$22297$CSxK@) ((case-lambda ((g$C$22288$CSxK@ g$t$13862$CSxK@) (g$vis-collector$13853$CSxK@ (case-lambda (g$IGNORE$22289$CSxK@ (begin (set! g$vis-collector$13857$CSxK@ g$t$13862$CSxK@) (g$C$22288$CSxK@ (cps-void))))) g$vis-collector$13857$CSxK@))) (case-lambda (g$IGNORE$22298$CSxK@ (g$imp-collector$13854$CSxK@ (case-lambda ((g$V$22299$CSxK@) ((case-lambda ((g$C$22290$CSxK@ g$t$13863$CSxK@) (g$imp-collector$13854$CSxK@ (case-lambda (g$IGNORE$22291$CSxK@ (begin (set! g$imp-collector$13858$CSxK@ g$t$13863$CSxK@) (g$C$22290$CSxK@ (cps-void))))) g$imp-collector$13858$CSxK@))) g$C$22292$CSxK@ g$V$22299$CSxK@)))))) g$V$22297$CSxK@)))))) g$V$22295$CSxK@)))))) g$V$22293$CSxK@))))))))) g$C$22301$CSxK@ g$top-level-context$10836$CSxK@ g$inv-collector$10764$CSxK@ g$vis-collector$10765$CSxK@ g$imp-collector$10766$CSxK@ g$env$13809$CSxK@ g$rtc$13839$CSxK@ g$V$22303$CSxK@ g$V$22302$CSxK@))))))))) (case-lambda ((g$C$22307$CSxK@ g$e$13864$CSxK@ g$r^$13865$CSxK@) ((case-lambda ((g$C$22304$CSxK@ g$r^$13866$CSxK@ g$e$13867$CSxK@) (g$set-interaction-env-r!$10798$CSxK@ (case-lambda (g$IGNORE$22305$CSxK@ (g$rtc$13839$CSxK@ (case-lambda ((g$V$22306$CSxK@) (values g$C$22304$CSxK@ g$e$13867$CSxK@ g$V$22306$CSxK@)))))) g$env$13809$CSxK@ g$r^$13866$CSxK@))) g$C$22307$CSxK@ g$r^$13865$CSxK@ g$e$13864$CSxK@)))))) g$C$22309$CSxK@ g$V$22311$CSxK@))) g$x$13808$CSxK@ g$top-mark*$10280$CSxK@ g$V$22310$CSxK@ '()))) g$rib$13837$CSxK@))) g$C$22312$CSxK@ g$V$22320$CSxK@ g$V$22319$CSxK@ g$V$22318$CSxK@))) g$env$13809$CSxK@))) g$env$13809$CSxK@)))) (g$assertion-violation$7672$CSxK@ g$C$22312$CSxK@ 'expand '"not an environment" g$env$13809$CSxK@)))) g$env$13809$CSxK@)))) g$env$13809$CSxK@)))))) (library-letrec*-identity 'g$expand$10809$CSxK@))) (g$eval$10810$CSxK@ g$eval$14346$CSxK@ ((case-lambda ((g$C$22871$CSxK@) (g$C$22871$CSxK@ (case-lambda ((g$C$22326$CSxK@ g$x$13868$CSxK@ g$env$13869$CSxK@) ((case-lambda ((g$J$22328$CSxK@) (g$environment?$10804$CSxK@ (case-lambda ((g$V$22329$CSxK@) (not (case-lambda ((g$T$22330$CSxK@) (if g$T$22330$CSxK@ (g$error$7673$CSxK@ g$J$22328$CSxK@ 'eval '"not an environment" g$env$13869$CSxK@) (void g$J$22328$CSxK@)))) g$V$22329$CSxK@))) g$env$13869$CSxK@))) (case-lambda (g$IGNORE$22327$CSxK@ (call-with-values g$C$22326$CSxK@ (case-lambda ((g$C$22321$CSxK@) (g$expand$10809$CSxK@ g$C$22321$CSxK@ g$x$13868$CSxK@ g$env$13869$CSxK@))) (case-lambda ((g$C$22325$CSxK@ g$x$13872$CSxK@ g$invoke-req*$13873$CSxK@) ((case-lambda ((g$C$22322$CSxK@ g$invoke-req*$13874$CSxK@ g$x$13875$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$22323$CSxK@ (g$expanded->core$9816$CSxK@ (case-lambda ((g$V$22324$CSxK@) (eval-core g$C$22322$CSxK@ g$V$22324$CSxK@))) g$x$13875$CSxK@))) g$invoke-library$10083$CSxK@ g$invoke-req*$13874$CSxK@))) g$C$22325$CSxK@ g$invoke-req*$13873$CSxK@ g$x$13872$CSxK@)))))))))))) (library-letrec*-identity 'g$eval$10810$CSxK@))) (g$expand->core$10811$CSxK@ g$expand->core$14347$CSxK@ ((case-lambda ((g$C$22872$CSxK@) (g$C$22872$CSxK@ (case-lambda ((g$C$22335$CSxK@ g$x$13876$CSxK@ g$env$13877$CSxK@) ((case-lambda ((g$J$22337$CSxK@) (g$environment?$10804$CSxK@ (case-lambda ((g$V$22338$CSxK@) (not (case-lambda ((g$T$22339$CSxK@) (if g$T$22339$CSxK@ (g$error$7673$CSxK@ g$J$22337$CSxK@ 'eval '"not an environment" g$env$13877$CSxK@) (void g$J$22337$CSxK@)))) g$V$22338$CSxK@))) g$env$13877$CSxK@))) (case-lambda (g$IGNORE$22336$CSxK@ (call-with-values g$C$22335$CSxK@ (case-lambda ((g$C$22331$CSxK@) (g$expand$10809$CSxK@ g$C$22331$CSxK@ g$x$13876$CSxK@ g$env$13877$CSxK@))) (case-lambda ((g$C$22334$CSxK@ g$x$13880$CSxK@ g$invoke-req*$13881$CSxK@) ((case-lambda ((g$C$22332$CSxK@ g$invoke-req*$13882$CSxK@ g$x$13883$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$22333$CSxK@ (g$expanded->core$9816$CSxK@ g$C$22332$CSxK@ g$x$13883$CSxK@))) g$invoke-library$10083$CSxK@ g$invoke-req*$13882$CSxK@))) g$C$22334$CSxK@ g$invoke-req*$13881$CSxK@ g$x$13880$CSxK@)))))))))))) (library-letrec*-identity 'g$expand->core$10811$CSxK@))) (g$library-expander$10812$CSxK@ g$library-expander$14348$CSxK@ ((case-lambda ((g$C$22873$CSxK@) (g$C$22873$CSxK@ (case-lambda ((g$C$22368$CSxK@ g$x$13884$CSxK@ g$filename$13885$CSxK@ g$verify-name$13886$CSxK@) ((case-lambda ((g$C$22365$CSxK@ g$build-visit-code$13887$CSxK@ g$visit!$13888$CSxK@) (begin (set! g$build-visit-code$13887$CSxK@ (case-lambda ((g$C$22344$CSxK@ g$macro*$13930$CSxK@) (null? (case-lambda ((g$T$22345$CSxK@) (if g$T$22345$CSxK@ (g$build-void$10273$CSxK@ g$C$22344$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22346$CSxK@) (g$build-sequence$10272$CSxK@ g$C$22344$CSxK@ '#f g$V$22346$CSxK@))) (case-lambda ((g$C$22341$CSxK@ g$x$13931$CSxK@) (g$cddr$7395$CSxK@ (case-lambda ((g$V$22342$CSxK@) (car (case-lambda ((g$V$22343$CSxK@) ((case-lambda ((g$C$22340$CSxK@ g$loc$13932$CSxK@ g$src$13933$CSxK@) (list g$C$22340$CSxK@ 'set! g$loc$13932$CSxK@ g$src$13933$CSxK@))) g$C$22341$CSxK@ g$V$22343$CSxK@ g$V$22342$CSxK@))) g$x$13931$CSxK@))) g$x$13931$CSxK@))) g$macro*$13930$CSxK@)))) g$macro*$13930$CSxK@)))) (begin (set! g$visit!$13888$CSxK@ (case-lambda ((g$C$22351$CSxK@ g$macro*$13926$CSxK@) (g$for-each$6714$CSxK@ g$C$22351$CSxK@ (case-lambda ((g$C$22348$CSxK@ g$x$13927$CSxK@) (g$cadr$7393$CSxK@ (case-lambda ((g$V$22349$CSxK@) (car (case-lambda ((g$V$22350$CSxK@) ((case-lambda ((g$C$22347$CSxK@ g$loc$13928$CSxK@ g$proc$13929$CSxK@) (set-symbol-value! g$C$22347$CSxK@ g$loc$13928$CSxK@ g$proc$13929$CSxK@))) g$C$22348$CSxK@ g$V$22350$CSxK@ g$V$22349$CSxK@))) g$x$13927$CSxK@))) g$x$13927$CSxK@))) g$macro*$13926$CSxK@)))) (call-with-values g$C$22365$CSxK@ (case-lambda ((g$C$22352$CSxK@) (g$core-library-expander$10770$CSxK@ g$C$22352$CSxK@ g$x$13884$CSxK@ g$verify-name$13886$CSxK@))) (case-lambda ((g$C$22364$CSxK@ g$name$13898$CSxK@ g$ver$13899$CSxK@ g$imp*$13900$CSxK@ g$inv*$13901$CSxK@ g$vis*$13902$CSxK@ g$invoke-code$13903$CSxK@ g$macro*$13904$CSxK@ g$export-subst$13905$CSxK@ g$export-env$13906$CSxK@) ((case-lambda ((g$C$22358$CSxK@ g$export-env$13907$CSxK@ g$export-subst$13908$CSxK@ g$macro*$13909$CSxK@ g$invoke-code$13910$CSxK@ g$vis*$13911$CSxK@ g$inv*$13912$CSxK@ g$imp*$13913$CSxK@ g$ver$13914$CSxK@ g$name$13915$CSxK@) (g$build-visit-code$13887$CSxK@ (case-lambda ((g$V$22359$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22360$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22361$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22362$CSxK@) (gensym (case-lambda ((g$V$22363$CSxK@) ((case-lambda ((g$C$22353$CSxK@ g$id$13916$CSxK@ g$name$13917$CSxK@ g$ver$13918$CSxK@ g$imp*$13919$CSxK@ g$vis*$13920$CSxK@ g$inv*$13921$CSxK@ g$visit-proc$13922$CSxK@ g$invoke-proc$13923$CSxK@ g$visit-code$13924$CSxK@ g$invoke-code$13925$CSxK@) (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22354$CSxK@ (values g$C$22353$CSxK@ g$id$13916$CSxK@ g$name$13917$CSxK@ g$ver$13918$CSxK@ g$imp*$13919$CSxK@ g$vis*$13920$CSxK@ g$inv*$13921$CSxK@ g$invoke-code$13925$CSxK@ g$visit-code$13924$CSxK@ g$export-subst$13908$CSxK@ g$export-env$13907$CSxK@))) g$id$13916$CSxK@ g$name$13917$CSxK@ g$ver$13918$CSxK@ g$imp*$13919$CSxK@ g$vis*$13920$CSxK@ g$inv*$13921$CSxK@ g$export-subst$13908$CSxK@ g$export-env$13907$CSxK@ g$visit-proc$13922$CSxK@ g$invoke-proc$13923$CSxK@ g$visit-code$13924$CSxK@ g$invoke-code$13925$CSxK@ '#t g$filename$13885$CSxK@))) g$C$22358$CSxK@ g$V$22363$CSxK@ g$name$13915$CSxK@ g$ver$13914$CSxK@ g$V$22362$CSxK@ g$V$22361$CSxK@ g$V$22360$CSxK@ (case-lambda ((g$C$22355$CSxK@) (g$visit!$13888$CSxK@ g$C$22355$CSxK@ g$macro*$13909$CSxK@))) (case-lambda ((g$C$22356$CSxK@) (g$expanded->core$9816$CSxK@ (case-lambda ((g$V$22357$CSxK@) (eval-core g$C$22356$CSxK@ g$V$22357$CSxK@))) g$invoke-code$13910$CSxK@))) g$V$22359$CSxK@ g$invoke-code$13910$CSxK@)))))) g$library-spec$10087$CSxK@ g$imp*$13913$CSxK@))) g$library-spec$10087$CSxK@ g$vis*$13911$CSxK@))) g$library-spec$10087$CSxK@ g$inv*$13912$CSxK@))) g$macro*$13909$CSxK@))) g$C$22364$CSxK@ g$export-env$13906$CSxK@ g$export-subst$13905$CSxK@ g$macro*$13904$CSxK@ g$invoke-code$13903$CSxK@ g$vis*$13902$CSxK@ g$inv*$13901$CSxK@ g$imp*$13900$CSxK@ g$ver$13899$CSxK@ g$name$13898$CSxK@)))))))) g$C$22368$CSxK@ uninitialized uninitialized)) ((g$C$22368$CSxK@ g$x$13934$CSxK@ g$filename$13935$CSxK@) (g$library-expander$10812$CSxK@ g$C$22368$CSxK@ g$x$13934$CSxK@ g$filename$13935$CSxK@ (case-lambda ((g$C$22366$CSxK@ g$x$13936$CSxK@) (values g$C$22366$CSxK@))))) ((g$C$22368$CSxK@ g$x$13937$CSxK@) (g$library-expander$10812$CSxK@ g$C$22368$CSxK@ g$x$13937$CSxK@ '#f (case-lambda ((g$C$22367$CSxK@ g$x$13938$CSxK@) (values g$C$22367$CSxK@))))))))) (library-letrec*-identity 'g$library-expander$10812$CSxK@))) (g$boot-library-expand$10813$CSxK@ g$boot-library-expand$14349$CSxK@ ((case-lambda ((g$C$22874$CSxK@) (g$C$22874$CSxK@ (case-lambda ((g$C$22372$CSxK@ g$x$13939$CSxK@) (call-with-values g$C$22372$CSxK@ (case-lambda ((g$C$22369$CSxK@) (g$library-expander$10812$CSxK@ g$C$22369$CSxK@ g$x$13939$CSxK@))) (case-lambda ((g$C$22371$CSxK@ g$id$13950$CSxK@ g$name$13951$CSxK@ g$ver$13952$CSxK@ g$imp*$13953$CSxK@ g$vis*$13954$CSxK@ g$inv*$13955$CSxK@ g$invoke-code$13956$CSxK@ g$visit-code$13957$CSxK@ g$export-subst$13958$CSxK@ g$export-env$13959$CSxK@) ((case-lambda ((g$C$22370$CSxK@ g$export-env$13960$CSxK@ g$export-subst$13961$CSxK@ g$visit-code$13962$CSxK@ g$invoke-code$13963$CSxK@ g$inv*$13964$CSxK@ g$vis*$13965$CSxK@ g$imp*$13966$CSxK@ g$ver$13967$CSxK@ g$name$13968$CSxK@ g$id$13969$CSxK@) (values g$C$22370$CSxK@ g$name$13968$CSxK@ g$invoke-code$13963$CSxK@ g$export-subst$13961$CSxK@ g$export-env$13960$CSxK@))) g$C$22371$CSxK@ g$export-env$13959$CSxK@ g$export-subst$13958$CSxK@ g$visit-code$13957$CSxK@ g$invoke-code$13956$CSxK@ g$inv*$13955$CSxK@ g$vis*$13954$CSxK@ g$imp*$13953$CSxK@ g$ver$13952$CSxK@ g$name$13951$CSxK@ g$id$13950$CSxK@))))))))) (library-letrec*-identity 'g$boot-library-expand$10813$CSxK@))) (g$rev-map-append$10814$CSxK@ g$rev-map-append$14350$CSxK@ ((case-lambda ((g$C$22875$CSxK@) (g$C$22875$CSxK@ (case-lambda ((g$C$22373$CSxK@ g$f$13970$CSxK@ g$ls$13971$CSxK@ g$ac$13972$CSxK@) (null? (case-lambda ((g$T$22374$CSxK@) (if g$T$22374$CSxK@ (g$C$22373$CSxK@ g$ac$13972$CSxK@) (car (case-lambda ((g$V$22375$CSxK@) (g$f$13970$CSxK@ (case-lambda ((g$V$22376$CSxK@) (cons (case-lambda ((g$V$22377$CSxK@) (cdr (case-lambda ((g$V$22378$CSxK@) (g$rev-map-append$10814$CSxK@ g$C$22373$CSxK@ g$f$13970$CSxK@ g$V$22378$CSxK@ g$V$22377$CSxK@))) g$ls$13971$CSxK@))) g$V$22376$CSxK@ g$ac$13972$CSxK@))) g$V$22375$CSxK@))) g$ls$13971$CSxK@)))) g$ls$13971$CSxK@)))))) (library-letrec*-identity 'g$rev-map-append$10814$CSxK@))) (g$build-exports$10815$CSxK@ g$build-exports$14351$CSxK@ ((case-lambda ((g$C$22876$CSxK@) (g$C$22876$CSxK@ (case-lambda ((g$C$22382$CSxK@ g$lex*+loc*$13973$CSxK@ g$init*$13974$CSxK@) (g$rev-map-append$10814$CSxK@ (case-lambda ((g$V$22383$CSxK@) (g$build-void$10273$CSxK@ (case-lambda ((g$V$22384$CSxK@) (cons (case-lambda ((g$V$22385$CSxK@) (g$build-sequence$10272$CSxK@ g$C$22382$CSxK@ '#f g$V$22385$CSxK@))) g$V$22384$CSxK@ g$V$22383$CSxK@)))))) (case-lambda ((g$C$22379$CSxK@ g$x$13975$CSxK@) (car (case-lambda ((g$V$22380$CSxK@) (cdr (case-lambda ((g$V$22381$CSxK@) (list g$C$22379$CSxK@ 'set! g$V$22381$CSxK@ g$V$22380$CSxK@))) g$x$13975$CSxK@))) g$x$13975$CSxK@))) g$lex*+loc*$13973$CSxK@ g$init*$13974$CSxK@)))))) (library-letrec*-identity 'g$build-exports$10815$CSxK@))) (g$make-export-subst$10816$CSxK@ g$make-export-subst$14352$CSxK@ ((case-lambda ((g$C$22877$CSxK@) (g$C$22877$CSxK@ (case-lambda ((g$C$22392$CSxK@ g$name*$13976$CSxK@ g$id*$13977$CSxK@) (g$map$6713$CSxK@ g$C$22392$CSxK@ (case-lambda ((g$C$22390$CSxK@ g$name$13978$CSxK@ g$id$13979$CSxK@) (g$id->label$10360$CSxK@ (case-lambda ((g$V$22391$CSxK@) ((case-lambda ((g$C$22386$CSxK@ g$label$13980$CSxK@) ((case-lambda ((g$J$22388$CSxK@) (not (case-lambda ((g$T$22389$CSxK@) (if g$T$22389$CSxK@ (g$syntax-violation$10828$CSxK@ g$J$22388$CSxK@ '#f '"cannot export unbound identifier" g$id$13979$CSxK@) (void g$J$22388$CSxK@)))) g$label$13980$CSxK@))) (case-lambda (g$IGNORE$22387$CSxK@ (cons g$C$22386$CSxK@ g$name$13978$CSxK@ g$label$13980$CSxK@)))))) g$C$22390$CSxK@ g$V$22391$CSxK@))) g$id$13979$CSxK@))) g$name*$13976$CSxK@ g$id*$13977$CSxK@)))))) (library-letrec*-identity 'g$make-export-subst$10816$CSxK@))) (g$make-export-env/macros$10817$CSxK@ g$make-export-env/macros$14353$CSxK@ ((case-lambda ((g$C$22878$CSxK@) (g$C$22878$CSxK@ (case-lambda ((g$C$22465$CSxK@ g$lex*$13981$CSxK@ g$loc*$13982$CSxK@ g$r$13983$CSxK@) ((case-lambda ((g$C$22463$CSxK@ g$lookup$13984$CSxK@) (begin (set! g$lookup$13984$CSxK@ (case-lambda ((g$C$22402$CSxK@ g$x$14000$CSxK@) ((case-lambda ((g$C$22401$CSxK@ g$f$14001$CSxK@) ((case-lambda ((g$C$22394$CSxK@ g$f$22393$CSxK@) (begin (set! g$f$14001$CSxK@ g$f$22393$CSxK@) (g$C$22394$CSxK@ g$f$14001$CSxK@)))) g$C$22401$CSxK@ (case-lambda ((g$C$22395$CSxK@ g$x$14002$CSxK@ g$lex*$14003$CSxK@ g$loc*$14004$CSxK@) (pair? (case-lambda ((g$T$22396$CSxK@) (if g$T$22396$CSxK@ (car (case-lambda ((g$V$22397$CSxK@) (eq? (case-lambda ((g$T$22398$CSxK@) (if g$T$22398$CSxK@ (car g$C$22395$CSxK@ g$loc*$14004$CSxK@) (cdr (case-lambda ((g$V$22399$CSxK@) (cdr (case-lambda ((g$V$22400$CSxK@) (g$f$14001$CSxK@ g$C$22395$CSxK@ g$x$14002$CSxK@ g$V$22400$CSxK@ g$V$22399$CSxK@))) g$lex*$14003$CSxK@))) g$loc*$14004$CSxK@)))) g$x$14002$CSxK@ g$V$22397$CSxK@))) g$lex*$14003$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22395$CSxK@ 'lookup-make-export '"BUG")))) g$lex*$14003$CSxK@)))))) (case-lambda ((g$V$22403$CSxK@) (g$V$22403$CSxK@ g$C$22402$CSxK@ g$x$14000$CSxK@ g$lex*$13981$CSxK@ g$loc*$13982$CSxK@))) uninitialized)))) ((case-lambda ((g$C$22462$CSxK@ g$f$13985$CSxK@) ((case-lambda ((g$C$22405$CSxK@ g$f$22404$CSxK@) (begin (set! g$f$13985$CSxK@ g$f$22404$CSxK@) (g$C$22405$CSxK@ g$f$13985$CSxK@)))) g$C$22462$CSxK@ (case-lambda ((g$C$22459$CSxK@ g$r$13986$CSxK@ g$env$13987$CSxK@ g$global*$13988$CSxK@ g$macro*$13989$CSxK@) (null? (case-lambda ((g$T$22460$CSxK@) (if g$T$22460$CSxK@ (values g$C$22459$CSxK@ g$env$13987$CSxK@ g$global*$13988$CSxK@ g$macro*$13989$CSxK@) (car (case-lambda ((g$V$22461$CSxK@) ((case-lambda ((g$C$22456$CSxK@ g$x$13990$CSxK@) (cdr (case-lambda ((g$V$22457$CSxK@) (car (case-lambda ((g$V$22458$CSxK@) ((case-lambda ((g$C$22454$CSxK@ g$label$13991$CSxK@ g$b$13992$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$22455$CSxK@) ((case-lambda ((g$C$22440$CSxK@ g$t$13993$CSxK@) (eqv? (case-lambda ((g$T$22441$CSxK@) (if g$T$22441$CSxK@ (g$binding-value$10365$CSxK@ (case-lambda ((g$V$22442$CSxK@) ((case-lambda ((g$C$22413$CSxK@ g$v$13994$CSxK@) ((case-lambda ((g$J$22417$CSxK@) (g$lexical-mutable?$10655$CSxK@ (case-lambda ((g$T$22418$CSxK@) (if g$T$22418$CSxK@ (g$J$22417$CSxK@ 'mutable) (g$J$22417$CSxK@ 'global)))) g$v$13994$CSxK@))) (case-lambda ((g$V$22414$CSxK@) (g$lexical-var$10654$CSxK@ (case-lambda ((g$V$22415$CSxK@) (g$lookup$13984$CSxK@ (case-lambda ((g$V$22416$CSxK@) ((case-lambda ((g$C$22406$CSxK@ g$loc$13995$CSxK@ g$type$13996$CSxK@) (g$lexical-var$10654$CSxK@ (case-lambda ((g$V$22407$CSxK@) (cons (case-lambda ((g$V$22408$CSxK@) (cons (case-lambda ((g$V$22409$CSxK@) (g$cons*$6715$CSxK@ (case-lambda ((g$V$22410$CSxK@) (cons (case-lambda ((g$V$22411$CSxK@) (cdr (case-lambda ((g$V$22412$CSxK@) (g$f$13985$CSxK@ g$C$22406$CSxK@ g$V$22412$CSxK@ g$V$22411$CSxK@ g$V$22409$CSxK@ g$macro*$13989$CSxK@))) g$r$13986$CSxK@))) g$V$22410$CSxK@ g$env$13987$CSxK@))) g$label$13991$CSxK@ g$type$13996$CSxK@ g$loc$13995$CSxK@))) g$V$22408$CSxK@ g$global*$13988$CSxK@))) g$V$22407$CSxK@ g$loc$13995$CSxK@))) g$v$13994$CSxK@))) g$C$22413$CSxK@ g$V$22416$CSxK@ g$V$22414$CSxK@))) g$V$22415$CSxK@))) g$v$13994$CSxK@)))))) g$C$22440$CSxK@ g$V$22442$CSxK@))) g$b$13992$CSxK@) (eqv? (case-lambda ((g$T$22443$CSxK@) (if g$T$22443$CSxK@ (gensym (case-lambda ((g$V$22444$CSxK@) ((case-lambda ((g$C$22419$CSxK@ g$loc$13997$CSxK@) (g$binding-value$10365$CSxK@ (case-lambda ((g$V$22420$CSxK@) (cons (case-lambda ((g$V$22421$CSxK@) (cons (case-lambda ((g$V$22422$CSxK@) (g$cons*$6715$CSxK@ (case-lambda ((g$V$22423$CSxK@) (cons (case-lambda ((g$V$22424$CSxK@) (cdr (case-lambda ((g$V$22425$CSxK@) (g$f$13985$CSxK@ g$C$22419$CSxK@ g$V$22425$CSxK@ g$V$22424$CSxK@ g$global*$13988$CSxK@ g$V$22422$CSxK@))) g$r$13986$CSxK@))) g$V$22423$CSxK@ g$env$13987$CSxK@))) g$label$13991$CSxK@ 'global-macro g$loc$13997$CSxK@))) g$V$22421$CSxK@ g$macro*$13989$CSxK@))) g$loc$13997$CSxK@ g$V$22420$CSxK@))) g$b$13992$CSxK@))) g$C$22440$CSxK@ g$V$22444$CSxK@)))) (eqv? (case-lambda ((g$T$22445$CSxK@) (if g$T$22445$CSxK@ (gensym (case-lambda ((g$V$22446$CSxK@) ((case-lambda ((g$C$22426$CSxK@ g$loc$13998$CSxK@) (g$binding-value$10365$CSxK@ (case-lambda ((g$V$22427$CSxK@) (cons (case-lambda ((g$V$22428$CSxK@) (cons (case-lambda ((g$V$22429$CSxK@) (g$cons*$6715$CSxK@ (case-lambda ((g$V$22430$CSxK@) (cons (case-lambda ((g$V$22431$CSxK@) (cdr (case-lambda ((g$V$22432$CSxK@) (g$f$13985$CSxK@ g$C$22426$CSxK@ g$V$22432$CSxK@ g$V$22431$CSxK@ g$global*$13988$CSxK@ g$V$22429$CSxK@))) g$r$13986$CSxK@))) g$V$22430$CSxK@ g$env$13987$CSxK@))) g$label$13991$CSxK@ 'global-macro! g$loc$13998$CSxK@))) g$V$22428$CSxK@ g$macro*$13989$CSxK@))) g$loc$13998$CSxK@ g$V$22427$CSxK@))) g$b$13992$CSxK@))) g$C$22440$CSxK@ g$V$22446$CSxK@)))) (eqv? (case-lambda ((g$T$22447$CSxK@) (if g$T$22447$CSxK@ (gensym (case-lambda ((g$V$22448$CSxK@) ((case-lambda ((g$C$22433$CSxK@ g$loc$13999$CSxK@) (g$binding-value$10365$CSxK@ (case-lambda ((g$V$22434$CSxK@) (cons (case-lambda ((g$V$22435$CSxK@) (cons (case-lambda ((g$V$22436$CSxK@) (g$cons*$6715$CSxK@ (case-lambda ((g$V$22437$CSxK@) (cons (case-lambda ((g$V$22438$CSxK@) (cdr (case-lambda ((g$V$22439$CSxK@) (g$f$13985$CSxK@ g$C$22433$CSxK@ g$V$22439$CSxK@ g$V$22438$CSxK@ g$global*$13988$CSxK@ g$V$22436$CSxK@))) g$r$13986$CSxK@))) g$V$22437$CSxK@ g$env$13987$CSxK@))) g$label$13991$CSxK@ 'global-ctv g$loc$13999$CSxK@))) g$V$22435$CSxK@ g$macro*$13989$CSxK@))) g$loc$13999$CSxK@ g$V$22434$CSxK@))) g$b$13992$CSxK@))) g$C$22440$CSxK@ g$V$22448$CSxK@)))) (g$memv$6706$CSxK@ (case-lambda ((g$T$22449$CSxK@) (if g$T$22449$CSxK@ (cons (case-lambda ((g$V$22450$CSxK@) (cdr (case-lambda ((g$V$22451$CSxK@) (g$f$13985$CSxK@ g$C$22440$CSxK@ g$V$22451$CSxK@ g$V$22450$CSxK@ g$global*$13988$CSxK@ g$macro*$13989$CSxK@))) g$r$13986$CSxK@))) g$x$13990$CSxK@ g$env$13987$CSxK@) (g$binding-value$10365$CSxK@ (case-lambda ((g$V$22452$CSxK@) (g$binding-type$10364$CSxK@ (case-lambda ((g$V$22453$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22440$CSxK@ 'expander '"BUG: do not know how to export" g$V$22453$CSxK@ g$V$22452$CSxK@))) g$b$13992$CSxK@))) g$b$13992$CSxK@)))) g$t$13993$CSxK@ '($rtd $module))))) g$t$13993$CSxK@ 'local-ctv)))) g$t$13993$CSxK@ 'local-macro!)))) g$t$13993$CSxK@ 'local-macro)))) g$t$13993$CSxK@ 'lexical))) g$C$22454$CSxK@ g$V$22455$CSxK@))) g$b$13992$CSxK@))) g$C$22456$CSxK@ g$V$22458$CSxK@ g$V$22457$CSxK@))) g$x$13990$CSxK@))) g$x$13990$CSxK@))) g$C$22459$CSxK@ g$V$22461$CSxK@))) g$r$13986$CSxK@)))) g$r$13986$CSxK@)))))) (case-lambda ((g$V$22464$CSxK@) (g$V$22464$CSxK@ g$C$22463$CSxK@ g$r$13983$CSxK@ '() '() '()))) uninitialized)))) g$C$22465$CSxK@ uninitialized)))))) (library-letrec*-identity 'g$make-export-env/macros$10817$CSxK@))) (g$generate-temporaries$10818$CSxK@ g$generate-temporaries$14354$CSxK@ ((case-lambda ((g$C$22879$CSxK@) (g$C$22879$CSxK@ (case-lambda ((g$C$22481$CSxK@ g$ls$14005$CSxK@) ((case-lambda ((g$C$22479$CSxK@ g$t$14006$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22480$CSxK@) ((case-lambda ((g$C$22478$CSxK@ g$ls/false$14007$CSxK@) (if g$ls/false$14007$CSxK@ (apply g$C$22478$CSxK@ (case-lambda ((g$C$22473$CSxK@ g$ls$14008$CSxK@) (g$map$6713$CSxK@ g$C$22473$CSxK@ (case-lambda ((g$C$22470$CSxK@ g$x$14009$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$22471$CSxK@) ((case-lambda ((g$C$22467$CSxK@ g$x$14010$CSxK@) (g$symbol?$7384$CSxK@ (case-lambda ((g$V$22468$CSxK@) ((case-lambda ((g$C$22466$CSxK@ g$t$14011$CSxK@) (if g$t$14011$CSxK@ (g$C$22466$CSxK@ g$t$14011$CSxK@) (string? g$C$22466$CSxK@ g$x$14010$CSxK@)))) (case-lambda ((g$T$22469$CSxK@) (if g$T$22469$CSxK@ (gensym g$C$22467$CSxK@ g$x$14010$CSxK@) (gensym g$C$22467$CSxK@ 't)))) g$V$22468$CSxK@))) g$x$14010$CSxK@))) (case-lambda ((g$V$22472$CSxK@) (g$make-stx$10320$CSxK@ g$C$22470$CSxK@ g$V$22472$CSxK@ g$top-mark*$10280$CSxK@ '() '()))) g$V$22471$CSxK@))) g$x$14009$CSxK@))) g$ls$14008$CSxK@))) g$ls/false$14007$CSxK@) ((case-lambda ((g$C$22476$CSxK@ g$t$14012$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22477$CSxK@) ((case-lambda ((g$C$22475$CSxK@ g$ls/false$14013$CSxK@) (if g$ls/false$14013$CSxK@ (apply g$C$22475$CSxK@ (case-lambda ((g$C$22474$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22474$CSxK@ 'generate-temporaries '"not a list"))) g$ls/false$14013$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$22475$CSxK@ '#f '"invalid syntax" g$t$14012$CSxK@)))) g$C$22476$CSxK@ g$V$22477$CSxK@))) g$t$14012$CSxK@ '_))) g$C$22478$CSxK@ g$t$14006$CSxK@)))) g$C$22479$CSxK@ g$V$22480$CSxK@))) g$t$14006$CSxK@ 'each-any))) g$C$22481$CSxK@ g$ls$14005$CSxK@)))))) (library-letrec*-identity 'g$generate-temporaries$10818$CSxK@))) (g$free-identifier=?$10819$CSxK@ g$free-identifier=?$14355$CSxK@ ((case-lambda ((g$C$22880$CSxK@) (g$C$22880$CSxK@ (case-lambda ((g$C$22482$CSxK@ g$x$14014$CSxK@ g$y$14015$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$22483$CSxK@) (if g$T$22483$CSxK@ (g$id?$10347$CSxK@ (case-lambda ((g$T$22484$CSxK@) (if g$T$22484$CSxK@ (g$free-id=?$10351$CSxK@ g$C$22482$CSxK@ g$x$14014$CSxK@ g$y$14015$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22482$CSxK@ 'free-identifier=? '"not an identifier" g$y$14015$CSxK@)))) g$y$14015$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22482$CSxK@ 'free-identifier=? '"not an identifier" g$x$14014$CSxK@)))) g$x$14014$CSxK@)))))) (library-letrec*-identity 'g$free-identifier=?$10819$CSxK@))) (g$bound-identifier=?$10820$CSxK@ g$bound-identifier=?$14356$CSxK@ ((case-lambda ((g$C$22881$CSxK@) (g$C$22881$CSxK@ (case-lambda ((g$C$22485$CSxK@ g$x$14016$CSxK@ g$y$14017$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$22486$CSxK@) (if g$T$22486$CSxK@ (g$id?$10347$CSxK@ (case-lambda ((g$T$22487$CSxK@) (if g$T$22487$CSxK@ (g$bound-id=?$10350$CSxK@ g$C$22485$CSxK@ g$x$14016$CSxK@ g$y$14017$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22485$CSxK@ 'bound-identifier=? '"not an identifier" g$y$14017$CSxK@)))) g$y$14017$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22485$CSxK@ 'bound-identifier=? '"not an identifier" g$x$14016$CSxK@)))) g$x$14016$CSxK@)))))) (library-letrec*-identity 'g$bound-identifier=?$10820$CSxK@))) (g$make-source-condition$10821$CSxK@ g$make-source-condition$14357$CSxK@ ((case-lambda ((g$C$22882$CSxK@) (g$C$22882$CSxK@ (case-lambda ((g$C$22501$CSxK@ g$x$14018$CSxK@) ((case-lambda ((g$C$22488$CSxK@ g$11460$14019$CSxK@ g$11462$14020$CSxK@ g$11461$14021$CSxK@ g$11459$14024$CSxK@ g$make-source-condition$14025$CSxK@ g$11457$14026$CSxK@ g$11458$14027$CSxK@ g$source-condition?$14028$CSxK@ g$source-filename$14029$CSxK@ g$source-character$14030$CSxK@) (make-record-type-descriptor (case-lambda ((g$V$22489$CSxK@) (begin (set! g$11460$14019$CSxK@ g$V$22489$CSxK@) (begin (set! g$11462$14020$CSxK@ '#f) (make-record-constructor-descriptor (case-lambda ((g$V$22490$CSxK@) (begin (set! g$11461$14021$CSxK@ g$V$22490$CSxK@) (record-predicate (case-lambda ((g$V$22491$CSxK@) (begin (set! g$11459$14024$CSxK@ g$V$22491$CSxK@) (record-constructor (case-lambda ((g$V$22492$CSxK@) (begin (set! g$make-source-condition$14025$CSxK@ g$V$22492$CSxK@) (record-accessor (case-lambda ((g$V$22493$CSxK@) (begin (set! g$11457$14026$CSxK@ g$V$22493$CSxK@) (record-accessor (case-lambda ((g$V$22494$CSxK@) (begin (set! g$11458$14027$CSxK@ g$V$22494$CSxK@) (condition-predicate (case-lambda ((g$V$22495$CSxK@) (begin (set! g$source-condition?$14028$CSxK@ g$V$22495$CSxK@) (condition-accessor (case-lambda ((g$V$22496$CSxK@) (begin (set! g$source-filename$14029$CSxK@ g$V$22496$CSxK@) (condition-accessor (case-lambda ((g$V$22497$CSxK@) (begin (set! g$source-character$14030$CSxK@ g$V$22497$CSxK@) (pair? (case-lambda ((g$T$22498$CSxK@) (if g$T$22498$CSxK@ (cdr (case-lambda ((g$V$22499$CSxK@) (car (case-lambda ((g$V$22500$CSxK@) (g$make-source-condition$14025$CSxK@ g$C$22488$CSxK@ g$V$22500$CSxK@ g$V$22499$CSxK@))) g$x$14018$CSxK@))) g$x$14018$CSxK@) (condition g$C$22488$CSxK@)))) g$x$14018$CSxK@)))) g$11460$14019$CSxK@ g$11458$14027$CSxK@)))) g$11460$14019$CSxK@ g$11457$14026$CSxK@)))) g$11460$14019$CSxK@)))) g$11460$14019$CSxK@ '1)))) g$11460$14019$CSxK@ '0)))) g$11461$14021$CSxK@)))) g$11460$14019$CSxK@)))) g$11460$14019$CSxK@ g$&condition-rcd$8058$CSxK@ g$11462$14020$CSxK@))))) '&source-information g$&condition-rtd$8057$CSxK@ 'g$11463$CSxK@ '#f '#f '#((immutable file-name) (immutable character))))) g$C$22501$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$make-source-condition$10821$CSxK@))) (g$extract-position-condition$10822$CSxK@ g$extract-position-condition$14358$CSxK@ ((case-lambda ((g$C$22883$CSxK@) (g$C$22883$CSxK@ (case-lambda ((g$C$22502$CSxK@ g$x$14031$CSxK@) (g$expression-position$10823$CSxK@ (case-lambda ((g$V$22503$CSxK@) (g$make-source-condition$10821$CSxK@ g$C$22502$CSxK@ g$V$22503$CSxK@))) g$x$14031$CSxK@)))))) (library-letrec*-identity 'g$extract-position-condition$10822$CSxK@))) (g$expression-position$10823$CSxK@ g$expression-position$14359$CSxK@ ((case-lambda ((g$C$22884$CSxK@) (g$C$22884$CSxK@ (case-lambda ((g$C$22506$CSxK@ g$x$14032$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$22507$CSxK@) (if g$T$22507$CSxK@ (g$stx-expr$10321$CSxK@ (case-lambda ((g$V$22508$CSxK@) ((case-lambda ((g$C$22504$CSxK@ g$x$14033$CSxK@) (annotation? (case-lambda ((g$T$22505$CSxK@) (if g$T$22505$CSxK@ (annotation-source g$C$22504$CSxK@ g$x$14033$CSxK@) (g$C$22504$CSxK@ '#f)))) g$x$14033$CSxK@))) g$C$22506$CSxK@ g$V$22508$CSxK@))) g$x$14032$CSxK@) (g$C$22506$CSxK@ '#f)))) g$x$14032$CSxK@)))))) (library-letrec*-identity 'g$expression-position$10823$CSxK@))) (g$assertion-error$10824$CSxK@ g$assertion-error$14360$CSxK@ ((case-lambda ((g$C$22885$CSxK@) (g$C$22885$CSxK@ (case-lambda ((g$C$22509$CSxK@ g$expr$14034$CSxK@ g$pos$14035$CSxK@) (g$make-source-condition$10821$CSxK@ (case-lambda ((g$V$22510$CSxK@) (list (case-lambda ((g$V$22511$CSxK@) (g$make-irritants-condition$8113$CSxK@ (case-lambda ((g$V$22512$CSxK@) (g$make-message-condition$8063$CSxK@ (case-lambda ((g$V$22513$CSxK@) (g$make-who-condition$8123$CSxK@ (case-lambda ((g$V$22514$CSxK@) (g$make-assertion-violation$8105$CSxK@ (case-lambda ((g$V$22515$CSxK@) (condition (case-lambda ((g$V$22516$CSxK@) (g$raise$7670$CSxK@ g$C$22509$CSxK@ g$V$22516$CSxK@))) g$V$22515$CSxK@ g$V$22514$CSxK@ g$V$22513$CSxK@ g$V$22512$CSxK@ g$V$22510$CSxK@)))))) 'assert))) '"assertion failed"))) g$V$22511$CSxK@))) g$expr$14034$CSxK@))) g$pos$14035$CSxK@)))))) (library-letrec*-identity 'g$assertion-error$10824$CSxK@))) (g$syntax-error$10825$CSxK@ g$syntax-error$14361$CSxK@ ((case-lambda ((g$C$22886$CSxK@) (g$C$22886$CSxK@ (case-lambda ((g$C$22517$CSxK@ g$x$14036$CSxK@ . g$args$14037$CSxK@) ((case-lambda ((g$J$22528$CSxK@) (g$for-all$6711$CSxK@ (case-lambda ((g$V$22529$CSxK@) (not (case-lambda ((g$T$22530$CSxK@) (if g$T$22530$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$22528$CSxK@ 'syntax-error '"invalid argument" g$args$14037$CSxK@) (void g$J$22528$CSxK@)))) g$V$22529$CSxK@))) string? g$args$14037$CSxK@))) (case-lambda (g$IGNORE$22518$CSxK@ (g$extract-trace$10826$CSxK@ (case-lambda ((g$V$22519$CSxK@) (g$extract-position-condition$10822$CSxK@ (case-lambda ((g$V$22520$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$22521$CSxK@) (g$make-syntax-violation$8157$CSxK@ (case-lambda ((g$V$22522$CSxK@) ((case-lambda ((g$J$22526$CSxK@) (null? (case-lambda ((g$T$22527$CSxK@) (if g$T$22527$CSxK@ (g$J$22526$CSxK@ '"invalid syntax") (apply g$J$22526$CSxK@ string-append g$args$14037$CSxK@)))) g$args$14037$CSxK@))) (case-lambda ((g$V$22523$CSxK@) (g$make-message-condition$8063$CSxK@ (case-lambda ((g$V$22524$CSxK@) (condition (case-lambda ((g$V$22525$CSxK@) (g$raise$7670$CSxK@ g$C$22517$CSxK@ g$V$22525$CSxK@))) g$V$22524$CSxK@ g$V$22522$CSxK@ g$V$22520$CSxK@ g$V$22519$CSxK@))) g$V$22523$CSxK@)))))) g$V$22521$CSxK@ '#f))) g$x$14036$CSxK@))) g$x$14036$CSxK@))) g$x$14036$CSxK@))))))))) (library-letrec*-identity 'g$syntax-error$10825$CSxK@))) (g$extract-trace$10826$CSxK@ g$extract-trace$14362$CSxK@ ((case-lambda ((g$C$22887$CSxK@) (g$C$22887$CSxK@ (case-lambda ((g$C$22550$CSxK@ g$x$14038$CSxK@) ((case-lambda ((g$C$22541$CSxK@ g$11485$14039$CSxK@ g$11487$14040$CSxK@ g$11486$14041$CSxK@ g$11484$14044$CSxK@ g$make-trace$14045$CSxK@ g$11483$14046$CSxK@ g$trace?$14047$CSxK@ g$trace-form$14048$CSxK@) (make-record-type-descriptor (case-lambda ((g$V$22542$CSxK@) (begin (set! g$11485$14039$CSxK@ g$V$22542$CSxK@) (begin (set! g$11487$14040$CSxK@ '#f) (make-record-constructor-descriptor (case-lambda ((g$V$22543$CSxK@) (begin (set! g$11486$14041$CSxK@ g$V$22543$CSxK@) (record-predicate (case-lambda ((g$V$22544$CSxK@) (begin (set! g$11484$14044$CSxK@ g$V$22544$CSxK@) (record-constructor (case-lambda ((g$V$22545$CSxK@) (begin (set! g$make-trace$14045$CSxK@ g$V$22545$CSxK@) (record-accessor (case-lambda ((g$V$22546$CSxK@) (begin (set! g$11483$14046$CSxK@ g$V$22546$CSxK@) (condition-predicate (case-lambda ((g$V$22547$CSxK@) (begin (set! g$trace?$14047$CSxK@ g$V$22547$CSxK@) (condition-accessor (case-lambda ((g$V$22548$CSxK@) (begin (set! g$trace-form$14048$CSxK@ g$V$22548$CSxK@) ((case-lambda ((g$C$22540$CSxK@ g$f$14049$CSxK@) ((case-lambda ((g$C$22532$CSxK@ g$f$22531$CSxK@) (begin (set! g$f$14049$CSxK@ g$f$22531$CSxK@) (g$C$22532$CSxK@ g$f$14049$CSxK@)))) g$C$22540$CSxK@ (case-lambda ((g$C$22533$CSxK@ g$x$14050$CSxK@) (g$stx?$10319$CSxK@ (case-lambda ((g$T$22534$CSxK@) (if g$T$22534$CSxK@ (g$stx-ae*$10324$CSxK@ (case-lambda ((g$V$22535$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22536$CSxK@) (g$make-trace$14045$CSxK@ (case-lambda ((g$V$22537$CSxK@) (apply g$C$22533$CSxK@ condition g$V$22537$CSxK@ g$V$22536$CSxK@))) g$x$14050$CSxK@))) g$f$14049$CSxK@ g$V$22535$CSxK@))) g$x$14050$CSxK@) (annotation? (case-lambda ((g$T$22538$CSxK@) (if g$T$22538$CSxK@ (g$make-stx$10320$CSxK@ (case-lambda ((g$V$22539$CSxK@) (g$make-trace$14045$CSxK@ g$C$22533$CSxK@ g$V$22539$CSxK@))) g$x$14050$CSxK@ '() '() '()) (condition g$C$22533$CSxK@)))) g$x$14050$CSxK@)))) g$x$14050$CSxK@)))))) (case-lambda ((g$V$22549$CSxK@) (g$V$22549$CSxK@ g$C$22541$CSxK@ g$x$14038$CSxK@))) uninitialized)))) g$11485$14039$CSxK@ g$11483$14046$CSxK@)))) g$11485$14039$CSxK@)))) g$11485$14039$CSxK@ '0)))) g$11486$14041$CSxK@)))) g$11485$14039$CSxK@)))) g$11485$14039$CSxK@ g$&condition-rcd$8058$CSxK@ g$11487$14040$CSxK@))))) '&trace g$&condition-rtd$8057$CSxK@ 'g$11488$CSxK@ '#f '#f '#((immutable form))))) g$C$22550$CSxK@ uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$extract-trace$10826$CSxK@))) (g$syntax-violation*$10827$CSxK@ g$syntax-violation*$14363$CSxK@ ((case-lambda ((g$C$22888$CSxK@) (g$C$22888$CSxK@ (case-lambda ((g$C$22577$CSxK@ g$who$14051$CSxK@ g$msg$14052$CSxK@ g$form$14053$CSxK@ g$condition-object$14054$CSxK@) ((case-lambda ((g$J$22584$CSxK@) (string? (case-lambda ((g$V$22585$CSxK@) (not (case-lambda ((g$T$22586$CSxK@) (if g$T$22586$CSxK@ (g$assertion-violation$7672$CSxK@ g$J$22584$CSxK@ 'syntax-violation '"message is not a string" g$msg$14052$CSxK@) (void g$J$22584$CSxK@)))) g$V$22585$CSxK@))) g$msg$14052$CSxK@))) (case-lambda (g$IGNORE$22578$CSxK@ ((case-lambda ((g$J$22580$CSxK@) (string? (case-lambda ((g$V$22581$CSxK@) ((case-lambda ((g$C$22558$CSxK@ g$t$14056$CSxK@) (if g$t$14056$CSxK@ (g$C$22558$CSxK@ g$t$14056$CSxK@) (g$symbol?$7384$CSxK@ g$C$22558$CSxK@ g$who$14051$CSxK@)))) (case-lambda ((g$T$22582$CSxK@) (if g$T$22582$CSxK@ (g$J$22580$CSxK@ g$who$14051$CSxK@) (not (case-lambda ((g$T$22583$CSxK@) (if g$T$22583$CSxK@ ((case-lambda ((g$C$22575$CSxK@ g$t$14057$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22576$CSxK@) ((case-lambda ((g$C$22572$CSxK@ g$ls/false$14058$CSxK@) ((case-lambda ((g$J$22574$CSxK@) (if g$ls/false$14058$CSxK@ (apply g$J$22574$CSxK@ (case-lambda ((g$C$22559$CSxK@ g$id$14059$CSxK@) (g$id?$10347$CSxK@ g$C$22559$CSxK@ g$id$14059$CSxK@))) g$ls/false$14058$CSxK@) (g$J$22574$CSxK@ '#f)))) (case-lambda ((g$T$22573$CSxK@) (if g$T$22573$CSxK@ (apply g$C$22572$CSxK@ (case-lambda ((g$C$22560$CSxK@ g$id$14060$CSxK@) (g$syntax->datum$10831$CSxK@ g$C$22560$CSxK@ g$id$14060$CSxK@))) g$ls/false$14058$CSxK@) ((case-lambda ((g$C$22570$CSxK@ g$t$14061$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22571$CSxK@) ((case-lambda ((g$C$22567$CSxK@ g$ls/false$14062$CSxK@) ((case-lambda ((g$J$22569$CSxK@) (if g$ls/false$14062$CSxK@ (apply g$J$22569$CSxK@ (case-lambda ((g$C$22561$CSxK@ g$id$14063$CSxK@ g$rest$14064$CSxK@) (g$id?$10347$CSxK@ g$C$22561$CSxK@ g$id$14063$CSxK@))) g$ls/false$14062$CSxK@) (g$J$22569$CSxK@ '#f)))) (case-lambda ((g$T$22568$CSxK@) (if g$T$22568$CSxK@ (apply g$C$22567$CSxK@ (case-lambda ((g$C$22562$CSxK@ g$id$14065$CSxK@ g$rest$14066$CSxK@) (g$syntax->datum$10831$CSxK@ g$C$22562$CSxK@ g$id$14065$CSxK@))) g$ls/false$14062$CSxK@) ((case-lambda ((g$C$22565$CSxK@ g$t$14067$CSxK@) (g$syntax-dispatch$10710$CSxK@ (case-lambda ((g$V$22566$CSxK@) ((case-lambda ((g$C$22564$CSxK@ g$ls/false$14068$CSxK@) (if g$ls/false$14068$CSxK@ (apply g$C$22564$CSxK@ (case-lambda ((g$C$22563$CSxK@) (g$C$22563$CSxK@ '#f))) g$ls/false$14068$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$22564$CSxK@ '#f '"invalid syntax" g$t$14067$CSxK@)))) g$C$22565$CSxK@ g$V$22566$CSxK@))) g$t$14067$CSxK@ '_))) g$C$22567$CSxK@ g$t$14061$CSxK@))))))) g$C$22570$CSxK@ g$V$22571$CSxK@))) g$t$14061$CSxK@ '(any . any)))) g$C$22572$CSxK@ g$t$14057$CSxK@))))))) g$C$22575$CSxK@ g$V$22576$CSxK@))) g$t$14057$CSxK@ 'any))) g$J$22580$CSxK@ g$form$14053$CSxK@) (g$assertion-violation$7672$CSxK@ g$J$22580$CSxK@ 'syntax-violation '"invalid who argument" g$who$14051$CSxK@)))) g$who$14051$CSxK@)))) g$V$22581$CSxK@))) g$who$14051$CSxK@))) (case-lambda ((g$V$22579$CSxK@) ((case-lambda ((g$C$22551$CSxK@ g$who$14055$CSxK@) (g$extract-trace$10826$CSxK@ (case-lambda ((g$V$22552$CSxK@) (g$extract-position-condition$10822$CSxK@ (case-lambda ((g$V$22553$CSxK@) (g$make-message-condition$8063$CSxK@ (case-lambda ((g$V$22554$CSxK@) ((case-lambda ((g$J$22557$CSxK@) (if g$who$14055$CSxK@ (g$make-who-condition$8123$CSxK@ g$J$22557$CSxK@ g$who$14055$CSxK@) (condition g$J$22557$CSxK@)))) (case-lambda ((g$V$22555$CSxK@) (condition (case-lambda ((g$V$22556$CSxK@) (g$raise$7670$CSxK@ g$C$22551$CSxK@ g$V$22556$CSxK@))) g$V$22555$CSxK@ g$V$22554$CSxK@ g$condition-object$14054$CSxK@ g$V$22553$CSxK@ g$V$22552$CSxK@)))))) g$msg$14052$CSxK@))) g$form$14053$CSxK@))) g$form$14053$CSxK@))) g$C$22577$CSxK@ g$V$22579$CSxK@)))))))))))) (library-letrec*-identity 'g$syntax-violation*$10827$CSxK@))) (g$syntax-violation$10828$CSxK@ g$syntax-violation$14364$CSxK@ ((case-lambda ((g$C$22889$CSxK@) (g$C$22889$CSxK@ (case-lambda ((g$C$22587$CSxK@ g$who$14069$CSxK@ g$msg$14070$CSxK@ g$form$14071$CSxK@) (g$syntax-violation$10828$CSxK@ g$C$22587$CSxK@ g$who$14069$CSxK@ g$msg$14070$CSxK@ g$form$14071$CSxK@ '#f)) ((g$C$22587$CSxK@ g$who$14072$CSxK@ g$msg$14073$CSxK@ g$form$14074$CSxK@ g$subform$14075$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$22588$CSxK@) (g$syntax->datum$10831$CSxK@ (case-lambda ((g$V$22589$CSxK@) (g$make-syntax-violation$8157$CSxK@ (case-lambda ((g$V$22590$CSxK@) (g$syntax-violation*$10827$CSxK@ g$C$22587$CSxK@ g$who$14072$CSxK@ g$msg$14073$CSxK@ g$form$14074$CSxK@ g$V$22590$CSxK@))) g$V$22589$CSxK@ g$V$22588$CSxK@))) g$form$14074$CSxK@))) g$subform$14075$CSxK@)))))) (library-letrec*-identity 'g$syntax-violation$10828$CSxK@))) (g$identifier?$10829$CSxK@ g$identifier?$14365$CSxK@ ((case-lambda ((g$C$22890$CSxK@) (g$C$22890$CSxK@ (case-lambda ((g$C$22591$CSxK@ g$x$14076$CSxK@) (g$id?$10347$CSxK@ g$C$22591$CSxK@ g$x$14076$CSxK@)))))) (library-letrec*-identity 'g$identifier?$10829$CSxK@))) (g$datum->syntax$10830$CSxK@ g$datum->syntax$14366$CSxK@ ((case-lambda ((g$C$22891$CSxK@) (g$C$22891$CSxK@ (case-lambda ((g$C$22592$CSxK@ g$id$14077$CSxK@ g$datum$14078$CSxK@) (g$id?$10347$CSxK@ (case-lambda ((g$T$22593$CSxK@) (if g$T$22593$CSxK@ (g$datum->stx$10330$CSxK@ g$C$22592$CSxK@ g$id$14077$CSxK@ g$datum$14078$CSxK@) (g$assertion-violation$7672$CSxK@ g$C$22592$CSxK@ 'datum->syntax '"not an identifier" g$id$14077$CSxK@)))) g$id$14077$CSxK@)))))) (library-letrec*-identity 'g$datum->syntax$10830$CSxK@))) (g$syntax->datum$10831$CSxK@ g$syntax->datum$14367$CSxK@ ((case-lambda ((g$C$22892$CSxK@) (g$C$22892$CSxK@ (case-lambda ((g$C$22594$CSxK@ g$x$14079$CSxK@) (g$stx->datum$10358$CSxK@ g$C$22594$CSxK@ g$x$14079$CSxK@)))))) (library-letrec*-identity 'g$syntax->datum$10831$CSxK@))) (g$compile-r6rs-top-level$10832$CSxK@ g$compile-r6rs-top-level$14368$CSxK@ ((case-lambda ((g$C$22893$CSxK@) (g$C$22893$CSxK@ (case-lambda ((g$C$22601$CSxK@ g$x*$14080$CSxK@) (call-with-values g$C$22601$CSxK@ (case-lambda ((g$C$22595$CSxK@) (g$top-level-expander$10772$CSxK@ g$C$22595$CSxK@ g$x*$14080$CSxK@))) (case-lambda ((g$C$22600$CSxK@ g$lib*$14083$CSxK@ g$invoke-code$14084$CSxK@) ((case-lambda ((g$C$22599$CSxK@ g$invoke-code$14085$CSxK@ g$lib*$14086$CSxK@) (g$C$22599$CSxK@ (case-lambda ((g$C$22596$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$22597$CSxK@ (g$expanded->core$9816$CSxK@ (case-lambda ((g$V$22598$CSxK@) (eval-core g$C$22596$CSxK@ g$V$22598$CSxK@))) g$invoke-code$14085$CSxK@))) g$invoke-library$10083$CSxK@ g$lib*$14086$CSxK@)))))) g$C$22600$CSxK@ g$invoke-code$14084$CSxK@ g$lib*$14083$CSxK@))))))))) (library-letrec*-identity 'g$compile-r6rs-top-level$10832$CSxK@))) (g$pre-compile-r6rs-top-level$10833$CSxK@ g$pre-compile-r6rs-top-level$14369$CSxK@ ((case-lambda ((g$C$22894$CSxK@) (g$C$22894$CSxK@ (case-lambda ((g$C$22607$CSxK@ g$x*$14087$CSxK@) (call-with-values g$C$22607$CSxK@ (case-lambda ((g$C$22602$CSxK@) (g$top-level-expander$10772$CSxK@ g$C$22602$CSxK@ g$x*$14087$CSxK@))) (case-lambda ((g$C$22606$CSxK@ g$lib*$14090$CSxK@ g$invoke-code$14091$CSxK@) ((case-lambda ((g$C$22603$CSxK@ g$invoke-code$14092$CSxK@ g$lib*$14093$CSxK@) (g$for-each$6714$CSxK@ (case-lambda (g$IGNORE$22604$CSxK@ (g$expanded->core$9816$CSxK@ (case-lambda ((g$V$22605$CSxK@) (compile-core g$C$22603$CSxK@ g$V$22605$CSxK@))) g$invoke-code$14092$CSxK@))) g$invoke-library$10083$CSxK@ g$lib*$14093$CSxK@))) g$C$22606$CSxK@ g$invoke-code$14091$CSxK@ g$lib*$14090$CSxK@))))))))) (library-letrec*-identity 'g$pre-compile-r6rs-top-level$10833$CSxK@))) (g$new-interaction-environment$10834$CSxK@ g$new-interaction-environment$14370$CSxK@ ((case-lambda ((g$C$22895$CSxK@) (g$C$22895$CSxK@ (case-lambda ((g$C$22618$CSxK@) (g$make-empty-rib$10305$CSxK@ (case-lambda ((g$V$22619$CSxK@) (g$find-library-by-name$10076$CSxK@ (case-lambda ((g$V$22620$CSxK@) ((case-lambda ((g$C$22615$CSxK@ g$lib$14094$CSxK@ g$rib$14095$CSxK@) (g$library-subst$10040$CSxK@ (case-lambda ((g$V$22616$CSxK@) ((case-lambda ((g$C$22609$CSxK@ g$subst$14096$CSxK@) (g$map$6713$CSxK@ (case-lambda ((g$V$22610$CSxK@) (g$set-rib-sym*!$10300$CSxK@ (case-lambda (g$IGNORE$22611$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$22612$CSxK@) (g$set-rib-mark**!$10301$CSxK@ (case-lambda (g$IGNORE$22613$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$22614$CSxK@) (g$set-rib-label*!$10302$CSxK@ g$C$22609$CSxK@ g$rib$14095$CSxK@ g$V$22614$CSxK@))) cdr g$subst$14096$CSxK@))) g$rib$14095$CSxK@ g$V$22612$CSxK@))) (case-lambda ((g$C$22608$CSxK@ g$x$14097$CSxK@) (g$C$22608$CSxK@ g$top-mark*$10280$CSxK@))) g$subst$14096$CSxK@))) g$rib$14095$CSxK@ g$V$22610$CSxK@))) car g$subst$14096$CSxK@))) (case-lambda (g$IGNORE$22617$CSxK@ (g$make-interaction-env$10793$CSxK@ g$C$22615$CSxK@ g$rib$14095$CSxK@ '() '()))) g$V$22616$CSxK@))) g$lib$14094$CSxK@))) g$C$22618$CSxK@ g$V$22620$CSxK@ g$V$22619$CSxK@))) '(ironscheme)))))))))) (library-letrec*-identity 'g$new-interaction-environment$10834$CSxK@))) (g$interaction-environment$10835$CSxK@ g$interaction-environment$14371$CSxK@ ((case-lambda ((g$C$22896$CSxK@) ((case-lambda ((g$C$22624$CSxK@ g$e$14098$CSxK@) (g$C$22624$CSxK@ (case-lambda ((g$C$22623$CSxK@) ((case-lambda ((g$C$22621$CSxK@ g$t$14099$CSxK@) (if g$t$14099$CSxK@ (g$C$22621$CSxK@ g$t$14099$CSxK@) (g$new-interaction-environment$10834$CSxK@ (case-lambda ((g$V$22622$CSxK@) (begin (set! g$e$14098$CSxK@ g$V$22622$CSxK@) (g$C$22621$CSxK@ g$e$14098$CSxK@)))))))) g$C$22623$CSxK@ g$e$14098$CSxK@)))))) g$C$22896$CSxK@ '#f))) (library-letrec*-identity 'g$interaction-environment$10835$CSxK@))) (g$top-level-context$10836$CSxK@ g$top-level-context$14372$CSxK@ ((case-lambda ((g$C$22897$CSxK@) (g$make-parameter$9568$CSxK@ g$C$22897$CSxK@ '#f))) (library-letrec*-identity 'g$top-level-context$10836$CSxK@)))) (g$current-library-expander$10073$CSxK@ identity-for-cps g$library-expander$10812$CSxK@))(library-letrec* (psyntax primlocs) () (g$current-primitive-locations$9813$CSxK@ (case-lambda (g$IGNORE$22901$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22902$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22903$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22904$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22905$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22906$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22907$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22908$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22909$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22910$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22911$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22912$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22913$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22914$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22915$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22916$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22917$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22918$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22919$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22920$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22921$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22922$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22923$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22924$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22925$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22926$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22927$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22928$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22929$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22930$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22931$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22932$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22933$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22934$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22935$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22936$CSxK@ (g$install-library$10081$CSxK@ (case-lambda (g$IGNORE$22937$CSxK@ (g$install-library$10081$CSxK@ identity-for-cps 'g$12104$CSxK@ '(psyntax system $bootstrap) '() '() '() '() '((compile-core . g$12043$CSxK@) (eval-core . g$12042$CSxK@) (set-symbol-value! . g$12040$CSxK@) (symbol-value . g$12039$CSxK@) (gensym . g$12036$CSxK@) (void . g$12035$CSxK@)) '() values values '#f '#f '#f '#f))) 'g$12103$CSxK@ '(psyntax system $all) '() '() '() '() '((ellipsis-map . g$8446$CSxK@) (&no-nans-rcd . g$6666$CSxK@) (&no-nans-rtd . g$6665$CSxK@) (&no-infinities-rcd . g$6653$CSxK@) (&no-infinities-rtd . g$6652$CSxK@) (&i/o-encoding-rcd . g$6640$CSxK@) (&i/o-encoding-rtd . g$6639$CSxK@) (&i/o-decoding-rcd . g$6625$CSxK@) (&i/o-decoding-rtd . g$6624$CSxK@) (&i/o-port-rcd . g$6612$CSxK@) (&i/o-port-rtd . g$6611$CSxK@) (&i/o-file-does-not-exist-rcd . g$6597$CSxK@) (&i/o-file-does-not-exist-rtd . g$6596$CSxK@) (&i/o-file-already-exists-rcd . g$6584$CSxK@) (&i/o-file-already-exists-rtd . g$6583$CSxK@) (&i/o-file-is-read-only-rcd . g$6571$CSxK@) (&i/o-file-is-read-only-rtd . g$6570$CSxK@) (&i/o-file-protection-rcd . g$6558$CSxK@) (&i/o-file-protection-rtd . g$6557$CSxK@) (&i/o-filename-rcd . g$6545$CSxK@) (&i/o-filename-rtd . g$6544$CSxK@) (&i/o-invalid-position-rcd . g$6530$CSxK@) (&i/o-invalid-position-rtd . g$6529$CSxK@) (&i/o-write-rcd . g$6515$CSxK@) (&i/o-write-rtd . g$6514$CSxK@) (&i/o-read-rcd . g$6502$CSxK@) (&i/o-read-rtd . g$6501$CSxK@) (&i/o-rcd . g$6489$CSxK@) (&i/o-rtd . g$6488$CSxK@) (&undefined-rcd . g$6476$CSxK@) (&undefined-rtd . g$6475$CSxK@) (&syntax-rcd . g$6463$CSxK@) (&syntax-rtd . g$6462$CSxK@) (&lexical-rcd . g$6446$CSxK@) (&lexical-rtd . g$6445$CSxK@) (&implementation-restriction-rcd . g$6433$CSxK@) (&implementation-restriction-rtd . g$6432$CSxK@) (&non-continuable-rcd . g$6420$CSxK@) (&non-continuable-rtd . g$6419$CSxK@) (&who-rcd . g$6407$CSxK@) (&who-rtd . g$6406$CSxK@) (&irritants-rcd . g$6392$CSxK@) (&irritants-rtd . g$6391$CSxK@) (&assertion-rcd . g$6377$CSxK@) (&assertion-rtd . g$6376$CSxK@) (&violation-rcd . g$6364$CSxK@) (&violation-rtd . g$6363$CSxK@) (&error-rcd . g$6351$CSxK@) (&error-rtd . g$6350$CSxK@) (&serious-rcd . g$6338$CSxK@) (&serious-rtd . g$6337$CSxK@) (&warning-rcd . g$6325$CSxK@) (&warning-rtd . g$6324$CSxK@) (&message-rcd . g$6312$CSxK@) (&message-rtd . g$6311$CSxK@) (&condition-rcd . g$6272$CSxK@) (&condition-rtd . g$6271$CSxK@) (library-letrec* . g$12067$CSxK@) (annotation-stripped . g$12066$CSxK@) (annotation-source . g$12065$CSxK@) (annotation-expression . g$12064$CSxK@) (annotation? . g$12063$CSxK@) (read-annotated . g$12062$CSxK@) (tanh . g$12061$CSxK@) (cosh . g$12060$CSxK@) (sinh . g$12059$CSxK@) (make-guid . g$12058$CSxK@) (unspecified? . g$12057$CSxK@) (make-list . g$5492$CSxK@) (last-pair . g$5491$CSxK@) (load-r5rs . g$12056$CSxK@) (license . g$12055$CSxK@) (stacktrace . g$12054$CSxK@) (ironscheme-build . g$11555$CSxK@) (define-clr-class-internal . g$12053$CSxK@) (clr-field-set!-internal . g$12052$CSxK@) (clr-field-get-internal . g$12051$CSxK@) (clr-cast-internal . g$12050$CSxK@) (clr-call-internal . g$12049$CSxK@) (clr-new-internal . g$12048$CSxK@) (clr-new-array-internal . g$12047$CSxK@) (clr-is-internal . g$12046$CSxK@) (clr-reference-internal . g$12045$CSxK@) (clr-using-internal . g$12044$CSxK@) (syntax-error . g$8565$CSxK@) (syntax-dispatch . g$8441$CSxK@) (compile-core . g$12043$CSxK@) (eval-core . g$12042$CSxK@) (remove-location . g$12041$CSxK@) (set-symbol-value! . g$12040$CSxK@) (symbol-value . g$12039$CSxK@) (symbol-bound? . g$12038$CSxK@) (ungensym . g$12037$CSxK@) (gensym . g$12036$CSxK@) (void . g$12035$CSxK@) (load-serialized-library . g$12034$CSxK@) (serialize-library . g$12033$CSxK@) (compile-system-libraries . g$11558$CSxK@) (compile->closure . g$11560$CSxK@) (compile . g$11559$CSxK@) (load . g$11554$CSxK@) (string-normalize . g$12032$CSxK@) (interaction-environment . g$8575$CSxK@) (char-ready? . g$12031$CSxK@) (string-upcase . g$12030$CSxK@) (string-titlecase . g$12029$CSxK@) (string-normalize-nfkd . g$6749$CSxK@) (string-normalize-nfkc . g$6748$CSxK@) (string-normalize-nfd . g$6747$CSxK@) (string-normalize-nfc . g$6746$CSxK@) (string-foldcase . g$12028$CSxK@) (string-downcase . g$12027$CSxK@) (string-ci>? . g$6733$CSxK@) (string-ci>=? . g$6735$CSxK@) (string-ci=? . g$6731$CSxK@) (string-ci<? . g$6732$CSxK@) (string-ci<=? . g$6734$CSxK@) (char-whitespace? . g$12026$CSxK@) (char-upper-case? . g$12025$CSxK@) (char-title-case? . g$12024$CSxK@) (char-numeric? . g$12023$CSxK@) (char-lower-case? . g$12022$CSxK@) (char-general-category . g$12021$CSxK@) (char-upcase . g$12020$CSxK@) (char-titlecase . g$12019$CSxK@) (char-foldcase . g$12018$CSxK@) (char-downcase . g$12017$CSxK@) (char-ci>? . g$6743$CSxK@) (char-ci>=? . g$6745$CSxK@) (char-ci=? . g$6741$CSxK@) (char-ci<? . g$6742$CSxK@) (char-ci<=? . g$6744$CSxK@) (char-alphabetic? . g$12016$CSxK@) (variable-transformer-procedure . g$8253$CSxK@) (variable-transformer? . g$8252$CSxK@) (make-variable-transformer . g$8250$CSxK@) (identifier? . g$8569$CSxK@) (generate-temporaries . g$8558$CSxK@) (free-identifier=? . g$8559$CSxK@) (syntax->datum . g$8571$CSxK@) (datum->syntax . g$8570$CSxK@) (bound-identifier=? . g$8560$CSxK@) (record-type-descriptor? . g$12015$CSxK@) (record-predicate . g$12014$CSxK@) (record-mutator . g$12013$CSxK@) (record-constructor . g$12012$CSxK@) (record-accessor . g$12011$CSxK@) (make-record-type-descriptor . g$12010$CSxK@) (make-record-constructor-descriptor . g$12009$CSxK@) (record? . g$12008$CSxK@) (record-type-uid . g$12007$CSxK@) (record-type-sealed? . g$12006$CSxK@) (record-type-parent . g$12005$CSxK@) (record-type-opaque? . g$12004$CSxK@) (record-type-name . g$12003$CSxK@) (record-type-generative? . g$12002$CSxK@) (record-type-field-names . g$12001$CSxK@) (record-rtd . g$12000$CSxK@) (record-field-mutable? . g$11999$CSxK@) (delete-file . g$6117$CSxK@) (file-exists? . g$6116$CSxK@) (vector-sort! . g$11998$CSxK@) (vector-sort . g$11997$CSxK@) (list-sort . g$6702$CSxK@) (symbol-hash . g$11996$CSxK@) (string-ci-hash . g$11995$CSxK@) (string-hash . g$11994$CSxK@) (equal-hash . g$11993$CSxK@) (hashtable-equivalence-function . g$11992$CSxK@) (make-hashtable . g$11991$CSxK@) (hashtable-hash-function . g$11990$CSxK@) (make-eqv-hashtable . g$6085$CSxK@) (make-eq-hashtable . g$6084$CSxK@) (hashtable? . g$11989$CSxK@) (hashtable-update! . g$6091$CSxK@) (hashtable-size . g$6086$CSxK@) (hashtable-set! . g$6088$CSxK@) (hashtable-ref . g$6087$CSxK@) (hashtable-mutable? . g$11988$CSxK@) (hashtable-keys . g$11987$CSxK@) (hashtable-entries . g$11986$CSxK@) (hashtable-delete! . g$6089$CSxK@) (hashtable-copy . g$11985$CSxK@) (hashtable-contains? . g$6090$CSxK@) (hashtable-clear! . g$6092$CSxK@) (call-with-output-file . g$7075$CSxK@) (call-with-input-file . g$7074$CSxK@) (write-char . g$7066$CSxK@) (write . g$11984$CSxK@) (with-output-to-file . g$7073$CSxK@) (with-input-from-file . g$7072$CSxK@) (read-char . g$7065$CSxK@) (read . g$11983$CSxK@) (peek-char . g$7064$CSxK@) (open-output-file . g$11982$CSxK@) (open-input-file . g$11981$CSxK@) (newline . g$7076$CSxK@) (display . g$11980$CSxK@) (close-output-port . g$11979$CSxK@) (close-input-port . g$11978$CSxK@) (eof-object? . g$11977$CSxK@) (eof-object . g$11976$CSxK@) (current-error-port . g$11975$CSxK@) (current-output-port . g$11974$CSxK@) (current-input-port . g$11973$CSxK@) (output-port? . g$11972$CSxK@) (input-port? . g$11971$CSxK@) (utf-8-codec . g$11970$CSxK@) (utf-16-codec . g$11969$CSxK@) (transcoder-error-handling-mode . g$11968$CSxK@) (transcoder-eol-style . g$11967$CSxK@) (transcoder-codec . g$11966$CSxK@) (transcoded-port . g$11965$CSxK@) (textual-port? . g$11964$CSxK@) (string->bytevector . g$11963$CSxK@) (standard-output-port . g$11962$CSxK@) (standard-input-port . g$11961$CSxK@) (standard-error-port . g$11960$CSxK@) (set-port-position! . g$11959$CSxK@) (put-u8 . g$11958$CSxK@) (put-string . g$11957$CSxK@) (put-datum . g$7044$CSxK@) (put-char . g$11956$CSxK@) (put-bytevector . g$11955$CSxK@) (port? . g$7049$CSxK@) (port-transcoder . g$11954$CSxK@) (port-position . g$11953$CSxK@) (port-has-set-port-position!? . g$11952$CSxK@) (port-has-port-position? . g$11951$CSxK@) (port-eof? . g$11950$CSxK@) (output-port-buffer-mode . g$11949$CSxK@) (open-string-output-port . g$7048$CSxK@) (open-string-input-port . g$11948$CSxK@) (open-file-output-port . g$11947$CSxK@) (open-file-input/output-port . g$11946$CSxK@) (open-file-input-port . g$11945$CSxK@) (open-bytevector-output-port . g$11944$CSxK@) (open-bytevector-input-port . g$11943$CSxK@) (native-transcoder . g$11942$CSxK@) (native-eol-style . g$11941$CSxK@) (make-transcoder . g$11940$CSxK@) (latin-1-codec . g$11939$CSxK@) (make-i/o-write-error . g$6512$CSxK@) (make-i/o-read-error . g$6499$CSxK@) (make-i/o-port-error . g$6607$CSxK@) (make-i/o-invalid-position-error . g$6525$CSxK@) (make-i/o-filename-error . g$6540$CSxK@) (make-i/o-file-protection-error . g$6555$CSxK@) (make-i/o-file-is-read-only-error . g$6568$CSxK@) (make-i/o-file-does-not-exist-error . g$6594$CSxK@) (make-i/o-file-already-exists-error . g$6581$CSxK@) (make-i/o-error . g$6486$CSxK@) (make-i/o-encoding-error . g$6635$CSxK@) (make-i/o-decoding-error . g$6622$CSxK@) (make-custom-textual-output-port . g$11938$CSxK@) (make-custom-textual-input/output-port . g$11937$CSxK@) (make-custom-textual-input-port . g$11936$CSxK@) (make-custom-binary-output-port . g$11935$CSxK@) (make-custom-binary-input/output-port . g$11934$CSxK@) (make-custom-binary-input-port . g$11933$CSxK@) (make-bytevector . g$11932$CSxK@) (lookahead-u8 . g$11931$CSxK@) (lookahead-char . g$11930$CSxK@) (i/o-write-error? . g$6513$CSxK@) (i/o-read-error? . g$6500$CSxK@) (i/o-port-error? . g$6609$CSxK@) (i/o-invalid-position-error? . g$6527$CSxK@) (i/o-error-position . g$6528$CSxK@) (i/o-filename-error? . g$6542$CSxK@) (i/o-file-protection-error? . g$6556$CSxK@) (i/o-file-is-read-only-error? . g$6569$CSxK@) (i/o-file-does-not-exist-error? . g$6595$CSxK@) (i/o-file-already-exists-error? . g$6582$CSxK@) (i/o-error? . g$6487$CSxK@) (i/o-error-port . g$6610$CSxK@) (i/o-error-filename . g$6543$CSxK@) (i/o-encoding-error? . g$6637$CSxK@) (i/o-encoding-error-char . g$6638$CSxK@) (i/o-decoding-error? . g$6623$CSxK@) (get-u8 . g$11929$CSxK@) (get-string-n! . g$11928$CSxK@) (get-string-n . g$11927$CSxK@) (get-string-all . g$11926$CSxK@) (get-line . g$11925$CSxK@) (get-datum . g$7045$CSxK@) (get-char . g$11924$CSxK@) (get-bytevector-some . g$11923$CSxK@) (get-bytevector-n! . g$11922$CSxK@) (get-bytevector-n . g$11921$CSxK@) (get-bytevector-all . g$11920$CSxK@) (flush-output-port . g$11919$CSxK@) (close-port . g$11918$CSxK@) (call-with-string-output-port . g$7050$CSxK@) (call-with-port . g$7051$CSxK@) (call-with-bytevector-output-port . g$11917$CSxK@) (bytevector->string . g$11916$CSxK@) (buffer-mode? . g$11915$CSxK@) (binary-port? . g$11914$CSxK@) (scheme-report-environment . g$8548$CSxK@) (quotient . g$6681$CSxK@) (null-environment . g$8547$CSxK@) (remainder . g$6682$CSxK@) (modulo . g$6683$CSxK@) (inexact->exact . g$6678$CSxK@) (force . g$6685$CSxK@) (exact->inexact . g$6679$CSxK@) (exit . g$11913$CSxK@) (command-line . g$11550$CSxK@) (string-fill! . g$11912$CSxK@) (string-set! . g$11911$CSxK@) (set-cdr! . g$11910$CSxK@) (set-car! . g$11909$CSxK@) (remove . g$5514$CSxK@) (remv . g$5515$CSxK@) (remp . g$5495$CSxK@) (remq . g$5516$CSxK@) (partition . g$5494$CSxK@) (memv . g$5502$CSxK@) (memq . g$5501$CSxK@) (memp . g$5504$CSxK@) (member . g$5503$CSxK@) (exists . g$5508$CSxK@) (for-all . g$5507$CSxK@) (fold-right . g$5513$CSxK@) (fold-left . g$5512$CSxK@) (find . g$5493$CSxK@) (filter . g$5496$CSxK@) (cons* . g$5511$CSxK@) (assv . g$5498$CSxK@) (assq . g$5497$CSxK@) (assp . g$5500$CSxK@) (assoc . g$5499$CSxK@) (with-exception-handler . g$6238$CSxK@) (raise-continuable . g$6241$CSxK@) (raise . g$6240$CSxK@) (eval . g$8550$CSxK@) (environment . g$8546$CSxK@) (make-enumeration . g$7136$CSxK@) (enum-set=? . g$7143$CSxK@) (enum-set-universe . g$7137$CSxK@) (enum-set-union . g$7144$CSxK@) (enum-set-subset? . g$7142$CSxK@) (enum-set-projection . g$7148$CSxK@) (enum-set-member? . g$7141$CSxK@) (enum-set-intersection . g$7145$CSxK@) (enum-set-indexer . g$7138$CSxK@) (enum-set-difference . g$7146$CSxK@) (enum-set-constructor . g$7139$CSxK@) (enum-set-complement . g$7147$CSxK@) (enum-set->list . g$7140$CSxK@) (who-condition? . g$6404$CSxK@) (warning? . g$6323$CSxK@) (violation? . g$6362$CSxK@) (undefined-violation? . g$6474$CSxK@) (syntax-violation? . g$6459$CSxK@) (syntax-violation-subform . g$6461$CSxK@) (syntax-violation-form . g$6460$CSxK@) (syntax-violation . g$8568$CSxK@) (simple-conditions . g$11908$CSxK@) (serious-condition? . g$6336$CSxK@) (non-continuable-violation? . g$6418$CSxK@) (message-condition? . g$6309$CSxK@) (make-who-condition . g$6402$CSxK@) (make-warning . g$6322$CSxK@) (make-violation . g$6361$CSxK@) (make-undefined-violation . g$6473$CSxK@) (make-syntax-violation . g$6456$CSxK@) (make-serious-condition . g$6335$CSxK@) (make-non-continuable-violation . g$6417$CSxK@) (make-message-condition . g$6307$CSxK@) (make-lexical-violation . g$6443$CSxK@) (make-irritants-condition . g$6387$CSxK@) (make-implementation-restriction-violation . g$6430$CSxK@) (make-error . g$6348$CSxK@) (make-assertion-violation . g$6374$CSxK@) (lexical-violation? . g$6444$CSxK@) (irritants-condition? . g$6389$CSxK@) (implementation-restriction-violation? . g$6431$CSxK@) (error? . g$6349$CSxK@) (condition-who . g$6405$CSxK@) (condition-predicate . g$11907$CSxK@) (condition-message . g$6310$CSxK@) (condition-irritants . g$6390$CSxK@) (condition-accessor . g$11906$CSxK@) (condition . g$11905$CSxK@) (assertion-violation? . g$6375$CSxK@) (condition? . g$11904$CSxK@) (utf32->string . g$11903$CSxK@) (utf16->string . g$11902$CSxK@) (utf8->string . g$11901$CSxK@) (uint-list->bytevector . g$11900$CSxK@) (u8-list->bytevector . g$11899$CSxK@) (string->utf8 . g$11898$CSxK@) (string->utf32 . g$11897$CSxK@) (string->utf16 . g$11896$CSxK@) (sint-list->bytevector . g$11895$CSxK@) (native-endianness . g$6123$CSxK@) (bytevector? . g$5813$CSxK@) (bytevector=? . g$11894$CSxK@) (bytevector-uint-set! . g$11893$CSxK@) (bytevector-uint-ref . g$11892$CSxK@) (bytevector-u8-set! . g$11891$CSxK@) (bytevector-u8-ref . g$11890$CSxK@) (bytevector-u64-set! . g$6144$CSxK@) (bytevector-u64-ref . g$6140$CSxK@) (bytevector-u64-native-set! . g$6146$CSxK@) (bytevector-u64-native-ref . g$6142$CSxK@) (bytevector-u32-set! . g$6136$CSxK@) (bytevector-u32-ref . g$6132$CSxK@) (bytevector-u32-native-set! . g$6138$CSxK@) (bytevector-u32-native-ref . g$6134$CSxK@) (bytevector-u16-set! . g$6128$CSxK@) (bytevector-u16-ref . g$6124$CSxK@) (bytevector-u16-native-set! . g$6130$CSxK@) (bytevector-u16-native-ref . g$6126$CSxK@) (bytevector-sint-set! . g$11889$CSxK@) (bytevector-sint-ref . g$11888$CSxK@) (bytevector-s8-set! . g$11887$CSxK@) (bytevector-s8-ref . g$11886$CSxK@) (bytevector-s64-set! . g$6145$CSxK@) (bytevector-s64-ref . g$6141$CSxK@) (bytevector-s64-native-set! . g$6147$CSxK@) (bytevector-s64-native-ref . g$6143$CSxK@) (bytevector-s32-set! . g$6137$CSxK@) (bytevector-s32-ref . g$6133$CSxK@) (bytevector-s32-native-set! . g$6139$CSxK@) (bytevector-s32-native-ref . g$6135$CSxK@) (bytevector-s16-set! . g$6129$CSxK@) (bytevector-s16-ref . g$6125$CSxK@) (bytevector-s16-native-set! . g$6131$CSxK@) (bytevector-s16-native-ref . g$6127$CSxK@) (bytevector-length . g$11885$CSxK@) (bytevector-ieee-single-set! . g$11884$CSxK@) (bytevector-ieee-single-ref . g$11883$CSxK@) (bytevector-ieee-single-native-set! . g$6150$CSxK@) (bytevector-ieee-single-native-ref . g$6148$CSxK@) (bytevector-ieee-double-set! . g$11882$CSxK@) (bytevector-ieee-double-ref . g$11881$CSxK@) (bytevector-ieee-double-native-set! . g$6151$CSxK@) (bytevector-ieee-double-native-ref . g$6149$CSxK@) (bytevector-fill! . g$11880$CSxK@) (bytevector-copy! . g$11879$CSxK@) (bytevector-copy . g$11878$CSxK@) (bytevector->uint-list . g$11877$CSxK@) (bytevector->u8-list . g$11876$CSxK@) (bytevector->sint-list . g$11875$CSxK@) (no-nans-violation? . g$6664$CSxK@) (no-infinities-violation? . g$6651$CSxK@) (make-no-nans-violation . g$6663$CSxK@) (make-no-infinities-violation . g$6650$CSxK@) (real->flonum . g$11874$CSxK@) (flzero? . g$6964$CSxK@) (fltruncate . g$6959$CSxK@) (fltan . g$6949$CSxK@) (flsqrt . g$6954$CSxK@) (flsin . g$6947$CSxK@) (flround . g$6960$CSxK@) (flpositive? . g$6962$CSxK@) (flonum? . g$5818$CSxK@) (flodd? . g$6966$CSxK@) (flnumerator . g$11873$CSxK@) (flnegative? . g$6963$CSxK@) (flnan? . g$6946$CSxK@) (flmod0 . g$6942$CSxK@) (flmod . g$6941$CSxK@) (flmin . g$6968$CSxK@) (flmax . g$6967$CSxK@) (fllog . g$6953$CSxK@) (flinteger? . g$6943$CSxK@) (flinfinite? . g$6945$CSxK@) (flfloor . g$6958$CSxK@) (flfinite? . g$6944$CSxK@) (flexpt . g$6956$CSxK@) (flexp . g$6955$CSxK@) (fleven? . g$6965$CSxK@) (fldiv0-and-mod0 . g$6938$CSxK@) (fldiv0 . g$6940$CSxK@) (fldiv-and-mod . g$6937$CSxK@) (fldiv . g$6939$CSxK@) (fldenominator . g$11872$CSxK@) (flcos . g$6948$CSxK@) (flceiling . g$6957$CSxK@) (flatan . g$6952$CSxK@) (flasin . g$6950$CSxK@) (flacos . g$6951$CSxK@) (flabs . g$6961$CSxK@) (fl>? . g$11871$CSxK@) (fl>=? . g$11870$CSxK@) (fl=? . g$11869$CSxK@) (fl<? . g$11868$CSxK@) (fl<=? . g$11867$CSxK@) (fl/ . g$11866$CSxK@) (fl- . g$11865$CSxK@) (fl+ . g$11864$CSxK@) (fl* . g$11863$CSxK@) (fixnum->flonum . g$11862$CSxK@) (fxzero? . g$6845$CSxK@) (fxxor . g$11861$CSxK@) (fxrotate-bit-field . g$6859$CSxK@) (fxreverse-bit-field . g$11860$CSxK@) (fxpositive? . g$6843$CSxK@) (fxodd? . g$6847$CSxK@) (fxnot . g$11859$CSxK@) (fxnegative? . g$6844$CSxK@) (fxmod0 . g$6842$CSxK@) (fxmod . g$6841$CSxK@) (fxmin . g$6849$CSxK@) (fxmax . g$6848$CSxK@) (fxlength . g$11858$CSxK@) (fxior . g$11857$CSxK@) (fxif . g$6853$CSxK@) (fxfirst-bit-set . g$11856$CSxK@) (fxeven? . g$6846$CSxK@) (fxdiv0-and-mod0 . g$11855$CSxK@) (fxdiv0 . g$6840$CSxK@) (fxdiv-and-mod . g$11854$CSxK@) (fxdiv . g$6839$CSxK@) (fxcopy-bit-field . g$6856$CSxK@) (fxcopy-bit . g$6854$CSxK@) (fxbit-set? . g$11853$CSxK@) (fxbit-field . g$6855$CSxK@) (fxbit-count . g$11852$CSxK@) (fxarithmetic-shift-right . g$6858$CSxK@) (fxarithmetic-shift-left . g$6857$CSxK@) (fxarithmetic-shift . g$11851$CSxK@) (fxand . g$11850$CSxK@) (fx>? . g$11849$CSxK@) (fx>=? . g$11848$CSxK@) (fx=? . g$11847$CSxK@) (fx<? . g$11846$CSxK@) (fx<=? . g$11845$CSxK@) (fx-/carry . g$6851$CSxK@) (fx- . g$11844$CSxK@) (fx+/carry . g$6852$CSxK@) (fx+ . g$11843$CSxK@) (fx*/carry . g$6850$CSxK@) (fx* . g$11842$CSxK@) (greatest-fixnum . g$11841$CSxK@) (least-fixnum . g$11840$CSxK@) (fixnum-width . g$5819$CSxK@) (fixnum? . g$5817$CSxK@) (bitwise-rotate-bit-field . g$6813$CSxK@) (bitwise-reverse-bit-field . g$11839$CSxK@) (bitwise-length . g$11838$CSxK@) (bitwise-if . g$6807$CSxK@) (bitwise-first-bit-set . g$11837$CSxK@) (bitwise-copy-bit-field . g$6810$CSxK@) (bitwise-copy-bit . g$6808$CSxK@) (bitwise-bit-set? . g$11836$CSxK@) (bitwise-bit-field . g$6809$CSxK@) (bitwise-bit-count . g$11835$CSxK@) (bitwise-xor . g$11834$CSxK@) (bitwise-ior . g$11833$CSxK@) (bitwise-and . g$11832$CSxK@) (bitwise-not . g$11831$CSxK@) (bitwise-arithmetic-shift-right . g$6812$CSxK@) (bitwise-arithmetic-shift-left . g$6811$CSxK@) (bitwise-arithmetic-shift . g$11830$CSxK@) (zero? . g$5852$CSxK@) (vector? . g$5812$CSxK@) (vector-set! . g$11829$CSxK@) (vector-ref . g$11828$CSxK@) (vector-map . g$5884$CSxK@) (vector-length . g$11827$CSxK@) (vector-for-each . g$5885$CSxK@) (vector-fill! . g$5820$CSxK@) (vector->list . g$11826$CSxK@) (vector . g$11825$CSxK@) (values . g$11824$CSxK@) (truncate . g$11823$CSxK@) (tan . g$11822$CSxK@) (symbol? . g$5814$CSxK@) (symbol=? . g$5869$CSxK@) (symbol->string . g$11821$CSxK@) (substring . g$11820$CSxK@) (string? . g$11819$CSxK@) (string>? . g$5866$CSxK@) (string>=? . g$5868$CSxK@) (string=? . g$5864$CSxK@) (string<? . g$5865$CSxK@) (string<=? . g$5867$CSxK@) (string-ref . g$11818$CSxK@) (string-length . g$11817$CSxK@) (string-for-each . g$5886$CSxK@) (string-copy . g$11816$CSxK@) (string-append . g$11815$CSxK@) (string->symbol . g$11814$CSxK@) (string->number . g$11813$CSxK@) (string->list . g$11812$CSxK@) (string . g$11811$CSxK@) (sqrt . g$11810$CSxK@) (sin . g$11809$CSxK@) (round . g$11808$CSxK@) (reverse . g$5821$CSxK@) (real? . g$11807$CSxK@) (real-valued? . g$11806$CSxK@) (real-part . g$11805$CSxK@) (rationalize . g$5881$CSxK@) (rational? . g$11804$CSxK@) (rational-valued? . g$11803$CSxK@) (procedure? . g$5816$CSxK@) (positive? . g$5850$CSxK@) (pair? . g$11802$CSxK@) (odd? . g$5854$CSxK@) (numerator . g$11801$CSxK@) (number? . g$11800$CSxK@) (number->string . g$11799$CSxK@) (null? . g$11798$CSxK@) (not . g$11797$CSxK@) (negative? . g$5851$CSxK@) (nan? . g$11796$CSxK@) (min . g$5856$CSxK@) (max . g$5855$CSxK@) (map . g$5509$CSxK@) (make-vector . g$11795$CSxK@) (make-string . g$11794$CSxK@) (make-rectangular . g$11793$CSxK@) (make-polar . g$11792$CSxK@) (magnitude . g$11791$CSxK@) (log . g$11790$CSxK@) (list? . g$11789$CSxK@) (list-tail . g$5489$CSxK@) (list-ref . g$5490$CSxK@) (list->vector . g$5809$CSxK@) (list->string . g$5810$CSxK@) (list . g$11788$CSxK@) (length . g$11787$CSxK@) (lcm . g$5858$CSxK@) (integer? . g$11786$CSxK@) (integer-valued? . g$11785$CSxK@) (integer->char . g$11784$CSxK@) (infinite? . g$11783$CSxK@) (inexact? . g$11782$CSxK@) (inexact . g$11781$CSxK@) (imag-part . g$11780$CSxK@) (gcd . g$5857$CSxK@) (for-each . g$5510$CSxK@) (floor . g$11779$CSxK@) (finite? . g$11778$CSxK@) (expt . g$11777$CSxK@) (exp . g$11776$CSxK@) (exact? . g$11775$CSxK@) (exact-integer-sqrt . g$11774$CSxK@) (exact . g$11773$CSxK@) (even? . g$5853$CSxK@) (error . g$6243$CSxK@) (eqv? . g$11772$CSxK@) (equal? . g$11771$CSxK@) (eq? . g$11770$CSxK@) (dynamic-wind . g$11769$CSxK@) (div0-and-mod0 . g$11768$CSxK@) (mod0 . g$5808$CSxK@) (div0 . g$5806$CSxK@) (div-and-mod . g$11767$CSxK@) (mod . g$5807$CSxK@) (div . g$5805$CSxK@) (denominator . g$11766$CSxK@) (cos . g$11765$CSxK@) (cons . g$11764$CSxK@) (complex? . g$11763$CSxK@) (char? . g$5811$CSxK@) (char>? . g$5878$CSxK@) (char>=? . g$5880$CSxK@) (char=? . g$5876$CSxK@) (char<? . g$5877$CSxK@) (char<=? . g$5879$CSxK@) (char->integer . g$11762$CSxK@) (ceiling . g$11761$CSxK@) (call-with-values . g$11760$CSxK@) (call/cc . g$11759$CSxK@) (call-with-current-continuation . g$11758$CSxK@) (cddddr . g$5849$CSxK@) (cdddar . g$5848$CSxK@) (cddadr . g$5847$CSxK@) (cddaar . g$5846$CSxK@) (cdaddr . g$5845$CSxK@) (cdadar . g$5844$CSxK@) (cdaadr . g$5843$CSxK@) (cdaaar . g$5842$CSxK@) (cadddr . g$5841$CSxK@) (caddar . g$5840$CSxK@) (cadadr . g$5839$CSxK@) (cadaar . g$5838$CSxK@) (caaddr . g$5837$CSxK@) (caadar . g$5836$CSxK@) (caaadr . g$5835$CSxK@) (caaaar . g$5834$CSxK@) (cdddr . g$5833$CSxK@) (cddar . g$5832$CSxK@) (cdadr . g$5831$CSxK@) (cdaar . g$5830$CSxK@) (caddr . g$5829$CSxK@) (cadar . g$5828$CSxK@) (caadr . g$5827$CSxK@) (caaar . g$5826$CSxK@) (cddr . g$5825$CSxK@) (cdar . g$5824$CSxK@) (cadr . g$5823$CSxK@) (caar . g$5822$CSxK@) (cdr . g$11757$CSxK@) (car . g$11756$CSxK@) (boolean? . g$5815$CSxK@) (boolean=? . g$5870$CSxK@) (atan . g$11755$CSxK@) (assertion-violation . g$6242$CSxK@) (asin . g$11754$CSxK@) (apply . g$11753$CSxK@) (append . g$11752$CSxK@) (angle . g$11751$CSxK@) (acos . g$11750$CSxK@) (abs . g$11749$CSxK@) (/ . g$11748$CSxK@) (* . g$11747$CSxK@) (- . g$11746$CSxK@) (+ . g$11745$CSxK@) (>= . g$11744$CSxK@) (> . g$11743$CSxK@) (= . g$11742$CSxK@) (<= . g$11741$CSxK@) (< . g$11740$CSxK@) (make-record-printer . g$11739$CSxK@) (eqv-hash . g$11738$CSxK@) (reverse! . g$11737$CSxK@) (deserialize-port . g$11736$CSxK@) (serialize-port . g$11735$CSxK@) (enum-set? . g$7113$CSxK@) (make-promise . g$6684$CSxK@) (load/unload . g$11553$CSxK@) (load/args . g$11552$CSxK@) (printf . g$7222$CSxK@) (fprintf . g$7223$CSxK@) (format . g$7224$CSxK@) (procedure-form . g$11734$CSxK@) (procedure-environment . g$11733$CSxK@) (procedure-name . g$11732$CSxK@) (procedure-arity . g$11731$CSxK@) (gc-collect . g$11730$CSxK@) (typeof . g$11729$CSxK@) (clr-type? . g$11728$CSxK@) (get-clr-type . g$11727$CSxK@) (get-command-line . g$11726$CSxK@) (vector-append . g$11725$CSxK@) (vector-filter . g$11724$CSxK@) (vector-reverse! . g$11723$CSxK@) (vector-contains? . g$11722$CSxK@) (vector-index-of . g$11721$CSxK@) (vector-copy . g$11720$CSxK@) (vector-binary-search . g$11719$CSxK@) (string-ci-compare . g$11718$CSxK@) (string-compare . g$11717$CSxK@) (string-format . g$11716$CSxK@) (trace-printer . g$11549$CSxK@) (make-traced-procedure . g$11715$CSxK@) (make-traced-macro . g$7244$CSxK@) (assertion-error . g$8564$CSxK@) (time-it . g$11714$CSxK@) (make-parameter . g$7517$CSxK@) (library-locator . g$11713$CSxK@) (get-library-paths . g$11712$CSxK@) (open-tcp-input/output-port . g$11711$CSxK@) (hashtable-for-each . g$11710$CSxK@) (hashtable-map . g$11709$CSxK@) (environment-bindings . g$8542$CSxK@) (environment-symbols . g$8545$CSxK@) (interaction-environment-symbols . g$8541$CSxK@) (optimization-level . g$11708$CSxK@) (library-path . g$7870$CSxK@) (make-compile-time-value . g$8251$CSxK@) (expand->core . g$8551$CSxK@) (expand . g$8549$CSxK@) (convert->cps . g$7300$CSxK@) (installed-libraries . g$7891$CSxK@) (uninstall-library . g$7882$CSxK@) (&no-nans . g$11707$CSxK@) (&no-infinities . g$11706$CSxK@) (&i/o-encoding . g$11705$CSxK@) (&i/o-decoding . g$11704$CSxK@) (&i/o-port . g$11703$CSxK@) (&i/o-file-does-not-exist . g$11702$CSxK@) (&i/o-file-already-exists . g$11701$CSxK@) (&i/o-file-is-read-only . g$11700$CSxK@) (&i/o-file-protection . g$11699$CSxK@) (&i/o-filename . g$11698$CSxK@) (&i/o-invalid-position . g$11697$CSxK@) (&i/o-write . g$11696$CSxK@) (&i/o-read . g$11695$CSxK@) (&i/o . g$11694$CSxK@) (&non-continuable . g$11693$CSxK@) (&undefined . g$11692$CSxK@) (&syntax . g$11691$CSxK@) (&lexical . g$11690$CSxK@) (&implementation-restriction . g$11689$CSxK@) (&who . g$11688$CSxK@) (&irritants . g$11687$CSxK@) (&assertion . g$11686$CSxK@) (&violation . g$11685$CSxK@) (&error . g$11684$CSxK@) (&serious . g$11683$CSxK@) (&warning . g$11682$CSxK@) (&message . g$11681$CSxK@) (&condition . g$11680$CSxK@) (define-condition-type . g$11679$CSxK@) (define-enumeration . g$11678$CSxK@) (define-record-type . g$11677$CSxK@) (parent-rtd . g$11676$CSxK@) (nongenerative . g$11675$CSxK@) (opaque . g$11674$CSxK@) (sealed . g$11673$CSxK@) (protocol . g$11672$CSxK@) (parent . g$11671$CSxK@) (immutable . g$11670$CSxK@) (mutable . g$11669$CSxK@) (fields . g$11668$CSxK@) (error-handling-mode . g$11667$CSxK@) (file-options . g$11666$CSxK@) (buffer-mode . g$11665$CSxK@) (eol-style . g$11664$CSxK@) (guard . g$11663$CSxK@) (trace-letrec-syntax . g$11662$CSxK@) (trace-let-syntax . g$11661$CSxK@) (trace-define-syntax . g$11660$CSxK@) (trace-define . g$11659$CSxK@) (trace-lambda . g$11658$CSxK@) (unsyntax-splicing . g$11657$CSxK@) (unsyntax . g$11656$CSxK@) (unquote-splicing . g$11655$CSxK@) (unquote . g$11654$CSxK@) (_ . g$11653$CSxK@) (else . g$11652$CSxK@) (=> . g$11651$CSxK@) (... . g$11650$CSxK@) (assert . g$11649$CSxK@) (endianness . g$11648$CSxK@) (delay . g$11647$CSxK@) (time . g$11646$CSxK@) (or . g$11645$CSxK@) (and . g$11644$CSxK@) (do . g$11643$CSxK@) (cond . g$11642$CSxK@) (let* . g$11641$CSxK@) (let . g$11640$CSxK@) (identifier-syntax . g$11639$CSxK@) (with-syntax . g$11638$CSxK@) (quasisyntax . g$11637$CSxK@) (quasiquote . g$11636$CSxK@) (syntax-rules . g$11635$CSxK@) (include-into . g$11634$CSxK@) (include . g$11633$CSxK@) (define-struct . g$11632$CSxK@) (let-values . g$11631$CSxK@) (let*-values . g$11630$CSxK@) (record-constructor-descriptor . g$11629$CSxK@) (record-type-descriptor . g$11628$CSxK@) (fluid-let-syntax . g$11627$CSxK@) (case . g$11626$CSxK@) (parameterize . g$11625$CSxK@) (unless . g$11624$CSxK@) (when . g$11623$CSxK@) (if . g$11622$CSxK@) (letrec* . g$11621$CSxK@) (letrec . g$11620$CSxK@) (type-descriptor . g$11619$CSxK@) (case-lambda . g$11618$CSxK@) (lambda . g$11617$CSxK@) (syntax . g$11616$CSxK@) (syntax-case . g$11615$CSxK@) (quote . g$11614$CSxK@) (foreign-call . g$11613$CSxK@) (letrec-syntax . g$11612$CSxK@) (let-syntax . g$11611$CSxK@) (set! . g$11610$CSxK@) (export . g$11609$CSxK@) (import . g$11608$CSxK@) (library . g$11607$CSxK@) (begin . g$11606$CSxK@) (module . g$11605$CSxK@) (define-syntax . g$11604$CSxK@) (define . g$11603$CSxK@)) '((g$8446$CSxK@ core-prim . ellipsis-map) (g$6666$CSxK@ core-prim . &no-nans-rcd) (g$6665$CSxK@ core-prim . &no-nans-rtd) (g$6653$CSxK@ core-prim . &no-infinities-rcd) (g$6652$CSxK@ core-prim . &no-infinities-rtd) (g$6640$CSxK@ core-prim . &i/o-encoding-rcd) (g$6639$CSxK@ core-prim . &i/o-encoding-rtd) (g$6625$CSxK@ core-prim . &i/o-decoding-rcd) (g$6624$CSxK@ core-prim . &i/o-decoding-rtd) (g$6612$CSxK@ core-prim . &i/o-port-rcd) (g$6611$CSxK@ core-prim . &i/o-port-rtd) (g$6597$CSxK@ core-prim . &i/o-file-does-not-exist-rcd) (g$6596$CSxK@ core-prim . &i/o-file-does-not-exist-rtd) (g$6584$CSxK@ core-prim . &i/o-file-already-exists-rcd) (g$6583$CSxK@ core-prim . &i/o-file-already-exists-rtd) (g$6571$CSxK@ core-prim . &i/o-file-is-read-only-rcd) (g$6570$CSxK@ core-prim . &i/o-file-is-read-only-rtd) (g$6558$CSxK@ core-prim . &i/o-file-protection-rcd) (g$6557$CSxK@ core-prim . &i/o-file-protection-rtd) (g$6545$CSxK@ core-prim . &i/o-filename-rcd) (g$6544$CSxK@ core-prim . &i/o-filename-rtd) (g$6530$CSxK@ core-prim . &i/o-invalid-position-rcd) (g$6529$CSxK@ core-prim . &i/o-invalid-position-rtd) (g$6515$CSxK@ core-prim . &i/o-write-rcd) (g$6514$CSxK@ core-prim . &i/o-write-rtd) (g$6502$CSxK@ core-prim . &i/o-read-rcd) (g$6501$CSxK@ core-prim . &i/o-read-rtd) (g$6489$CSxK@ core-prim . &i/o-rcd) (g$6488$CSxK@ core-prim . &i/o-rtd) (g$6476$CSxK@ core-prim . &undefined-rcd) (g$6475$CSxK@ core-prim . &undefined-rtd) (g$6463$CSxK@ core-prim . &syntax-rcd) (g$6462$CSxK@ core-prim . &syntax-rtd) (g$6446$CSxK@ core-prim . &lexical-rcd) (g$6445$CSxK@ core-prim . &lexical-rtd) (g$6433$CSxK@ core-prim . &implementation-restriction-rcd) (g$6432$CSxK@ core-prim . &implementation-restriction-rtd) (g$6420$CSxK@ core-prim . &non-continuable-rcd) (g$6419$CSxK@ core-prim . &non-continuable-rtd) (g$6407$CSxK@ core-prim . &who-rcd) (g$6406$CSxK@ core-prim . &who-rtd) (g$6392$CSxK@ core-prim . &irritants-rcd) (g$6391$CSxK@ core-prim . &irritants-rtd) (g$6377$CSxK@ core-prim . &assertion-rcd) (g$6376$CSxK@ core-prim . &assertion-rtd) (g$6364$CSxK@ core-prim . &violation-rcd) (g$6363$CSxK@ core-prim . &violation-rtd) (g$6351$CSxK@ core-prim . &error-rcd) (g$6350$CSxK@ core-prim . &error-rtd) (g$6338$CSxK@ core-prim . &serious-rcd) (g$6337$CSxK@ core-prim . &serious-rtd) (g$6325$CSxK@ core-prim . &warning-rcd) (g$6324$CSxK@ core-prim . &warning-rtd) (g$6312$CSxK@ core-prim . &message-rcd) (g$6311$CSxK@ core-prim . &message-rtd) (g$6272$CSxK@ core-prim . &condition-rcd) (g$6271$CSxK@ core-prim . &condition-rtd) (g$12067$CSxK@ core-prim . library-letrec*) (g$12066$CSxK@ core-prim . annotation-stripped) (g$12065$CSxK@ core-prim . annotation-source) (g$12064$CSxK@ core-prim . annotation-expression) (g$12063$CSxK@ core-prim . annotation?) (g$12062$CSxK@ core-prim . read-annotated) (g$12061$CSxK@ core-prim . tanh) (g$12060$CSxK@ core-prim . cosh) (g$12059$CSxK@ core-prim . sinh) (g$12058$CSxK@ core-prim . make-guid) (g$12057$CSxK@ core-prim . unspecified?) (g$5492$CSxK@ core-prim . make-list) (g$5491$CSxK@ core-prim . last-pair) (g$12056$CSxK@ core-prim . load-r5rs) (g$12055$CSxK@ core-prim . license) (g$12054$CSxK@ core-prim . stacktrace) (g$11555$CSxK@ core-prim . ironscheme-build) (g$12053$CSxK@ core-prim . define-clr-class-internal) (g$12052$CSxK@ core-prim . clr-field-set!-internal) (g$12051$CSxK@ core-prim . clr-field-get-internal) (g$12050$CSxK@ core-prim . clr-cast-internal) (g$12049$CSxK@ core-prim . clr-call-internal) (g$12048$CSxK@ core-prim . clr-new-internal) (g$12047$CSxK@ core-prim . clr-new-array-internal) (g$12046$CSxK@ core-prim . clr-is-internal) (g$12045$CSxK@ core-prim . clr-reference-internal) (g$12044$CSxK@ core-prim . clr-using-internal) (g$8565$CSxK@ core-prim . syntax-error) (g$8441$CSxK@ core-prim . syntax-dispatch) (g$12043$CSxK@ core-prim . compile-core) (g$12042$CSxK@ core-prim . eval-core) (g$12041$CSxK@ core-prim . remove-location) (g$12040$CSxK@ core-prim . set-symbol-value!) (g$12039$CSxK@ core-prim . symbol-value) (g$12038$CSxK@ core-prim . symbol-bound?) (g$12037$CSxK@ core-prim . ungensym) (g$12036$CSxK@ core-prim . gensym) (g$12035$CSxK@ core-prim . void) (g$12034$CSxK@ core-prim . load-serialized-library) (g$12033$CSxK@ core-prim . serialize-library) (g$11558$CSxK@ core-prim . compile-system-libraries) (g$11560$CSxK@ core-prim . compile->closure) (g$11559$CSxK@ core-prim . compile) (g$11554$CSxK@ core-prim . load) (g$12032$CSxK@ core-prim . string-normalize) (g$8575$CSxK@ core-prim . interaction-environment) (g$12031$CSxK@ core-prim . char-ready?) (g$12030$CSxK@ core-prim . string-upcase) (g$12029$CSxK@ core-prim . string-titlecase) (g$6749$CSxK@ core-prim . string-normalize-nfkd) (g$6748$CSxK@ core-prim . string-normalize-nfkc) (g$6747$CSxK@ core-prim . string-normalize-nfd) (g$6746$CSxK@ core-prim . string-normalize-nfc) (g$12028$CSxK@ core-prim . string-foldcase) (g$12027$CSxK@ core-prim . string-downcase) (g$6733$CSxK@ core-prim . string-ci>?) (g$6735$CSxK@ core-prim . string-ci>=?) (g$6731$CSxK@ core-prim . string-ci=?) (g$6732$CSxK@ core-prim . string-ci<?) (g$6734$CSxK@ core-prim . string-ci<=?) (g$12026$CSxK@ core-prim . char-whitespace?) (g$12025$CSxK@ core-prim . char-upper-case?) (g$12024$CSxK@ core-prim . char-title-case?) (g$12023$CSxK@ core-prim . char-numeric?) (g$12022$CSxK@ core-prim . char-lower-case?) (g$12021$CSxK@ core-prim . char-general-category) (g$12020$CSxK@ core-prim . char-upcase) (g$12019$CSxK@ core-prim . char-titlecase) (g$12018$CSxK@ core-prim . char-foldcase) (g$12017$CSxK@ core-prim . char-downcase) (g$6743$CSxK@ core-prim . char-ci>?) (g$6745$CSxK@ core-prim . char-ci>=?) (g$6741$CSxK@ core-prim . char-ci=?) (g$6742$CSxK@ core-prim . char-ci<?) (g$6744$CSxK@ core-prim . char-ci<=?) (g$12016$CSxK@ core-prim . char-alphabetic?) (g$8253$CSxK@ core-prim . variable-transformer-procedure) (g$8252$CSxK@ core-prim . variable-transformer?) (g$8250$CSxK@ core-prim . make-variable-transformer) (g$8569$CSxK@ core-prim . identifier?) (g$8558$CSxK@ core-prim . generate-temporaries) (g$8559$CSxK@ core-prim . free-identifier=?) (g$8571$CSxK@ core-prim . syntax->datum) (g$8570$CSxK@ core-prim . datum->syntax) (g$8560$CSxK@ core-prim . bound-identifier=?) (g$12015$CSxK@ core-prim . record-type-descriptor?) (g$12014$CSxK@ core-prim . record-predicate) (g$12013$CSxK@ core-prim . record-mutator) (g$12012$CSxK@ core-prim . record-constructor) (g$12011$CSxK@ core-prim . record-accessor) (g$12010$CSxK@ core-prim . make-record-type-descriptor) (g$12009$CSxK@ core-prim . make-record-constructor-descriptor) (g$12008$CSxK@ core-prim . record?) (g$12007$CSxK@ core-prim . record-type-uid) (g$12006$CSxK@ core-prim . record-type-sealed?) (g$12005$CSxK@ core-prim . record-type-parent) (g$12004$CSxK@ core-prim . record-type-opaque?) (g$12003$CSxK@ core-prim . record-type-name) (g$12002$CSxK@ core-prim . record-type-generative?) (g$12001$CSxK@ core-prim . record-type-field-names) (g$12000$CSxK@ core-prim . record-rtd) (g$11999$CSxK@ core-prim . record-field-mutable?) (g$6117$CSxK@ core-prim . delete-file) (g$6116$CSxK@ core-prim . file-exists?) (g$11998$CSxK@ core-prim . vector-sort!) (g$11997$CSxK@ core-prim . vector-sort) (g$6702$CSxK@ core-prim . list-sort) (g$11996$CSxK@ core-prim . symbol-hash) (g$11995$CSxK@ core-prim . string-ci-hash) (g$11994$CSxK@ core-prim . string-hash) (g$11993$CSxK@ core-prim . equal-hash) (g$11992$CSxK@ core-prim . hashtable-equivalence-function) (g$11991$CSxK@ core-prim . make-hashtable) (g$11990$CSxK@ core-prim . hashtable-hash-function) (g$6085$CSxK@ core-prim . make-eqv-hashtable) (g$6084$CSxK@ core-prim . make-eq-hashtable) (g$11989$CSxK@ core-prim . hashtable?) (g$6091$CSxK@ core-prim . hashtable-update!) (g$6086$CSxK@ core-prim . hashtable-size) (g$6088$CSxK@ core-prim . hashtable-set!) (g$6087$CSxK@ core-prim . hashtable-ref) (g$11988$CSxK@ core-prim . hashtable-mutable?) (g$11987$CSxK@ core-prim . hashtable-keys) (g$11986$CSxK@ core-prim . hashtable-entries) (g$6089$CSxK@ core-prim . hashtable-delete!) (g$11985$CSxK@ core-prim . hashtable-copy) (g$6090$CSxK@ core-prim . hashtable-contains?) (g$6092$CSxK@ core-prim . hashtable-clear!) (g$7075$CSxK@ core-prim . call-with-output-file) (g$7074$CSxK@ core-prim . call-with-input-file) (g$7066$CSxK@ core-prim . write-char) (g$11984$CSxK@ core-prim . write) (g$7073$CSxK@ core-prim . with-output-to-file) (g$7072$CSxK@ core-prim . with-input-from-file) (g$7065$CSxK@ core-prim . read-char) (g$11983$CSxK@ core-prim . read) (g$7064$CSxK@ core-prim . peek-char) (g$11982$CSxK@ core-prim . open-output-file) (g$11981$CSxK@ core-prim . open-input-file) (g$7076$CSxK@ core-prim . newline) (g$11980$CSxK@ core-prim . display) (g$11979$CSxK@ core-prim . close-output-port) (g$11978$CSxK@ core-prim . close-input-port) (g$11977$CSxK@ core-prim . eof-object?) (g$11976$CSxK@ core-prim . eof-object) (g$11975$CSxK@ core-prim . current-error-port) (g$11974$CSxK@ core-prim . current-output-port) (g$11973$CSxK@ core-prim . current-input-port) (g$11972$CSxK@ core-prim . output-port?) (g$11971$CSxK@ core-prim . input-port?) (g$11970$CSxK@ core-prim . utf-8-codec) (g$11969$CSxK@ core-prim . utf-16-codec) (g$11968$CSxK@ core-prim . transcoder-error-handling-mode) (g$11967$CSxK@ core-prim . transcoder-eol-style) (g$11966$CSxK@ core-prim . transcoder-codec) (g$11965$CSxK@ core-prim . transcoded-port) (g$11964$CSxK@ core-prim . textual-port?) (g$11963$CSxK@ core-prim . string->bytevector) (g$11962$CSxK@ core-prim . standard-output-port) (g$11961$CSxK@ core-prim . standard-input-port) (g$11960$CSxK@ core-prim . standard-error-port) (g$11959$CSxK@ core-prim . set-port-position!) (g$11958$CSxK@ core-prim . put-u8) (g$11957$CSxK@ core-prim . put-string) (g$7044$CSxK@ core-prim . put-datum) (g$11956$CSxK@ core-prim . put-char) (g$11955$CSxK@ core-prim . put-bytevector) (g$7049$CSxK@ core-prim . port?) (g$11954$CSxK@ core-prim . port-transcoder) (g$11953$CSxK@ core-prim . port-position) (g$11952$CSxK@ core-prim . port-has-set-port-position!?) (g$11951$CSxK@ core-prim . port-has-port-position?) (g$11950$CSxK@ core-prim . port-eof?) (g$11949$CSxK@ core-prim . output-port-buffer-mode) (g$7048$CSxK@ core-prim . open-string-output-port) (g$11948$CSxK@ core-prim . open-string-input-port) (g$11947$CSxK@ core-prim . open-file-output-port) (g$11946$CSxK@ core-prim . open-file-input/output-port) (g$11945$CSxK@ core-prim . open-file-input-port) (g$11944$CSxK@ core-prim . open-bytevector-output-port) (g$11943$CSxK@ core-prim . open-bytevector-input-port) (g$11942$CSxK@ core-prim . native-transcoder) (g$11941$CSxK@ core-prim . native-eol-style) (g$11940$CSxK@ core-prim . make-transcoder) (g$11939$CSxK@ core-prim . latin-1-codec) (g$6512$CSxK@ core-prim . make-i/o-write-error) (g$6499$CSxK@ core-prim . make-i/o-read-error) (g$6607$CSxK@ core-prim . make-i/o-port-error) (g$6525$CSxK@ core-prim . make-i/o-invalid-position-error) (g$6540$CSxK@ core-prim . make-i/o-filename-error) (g$6555$CSxK@ core-prim . make-i/o-file-protection-error) (g$6568$CSxK@ core-prim . make-i/o-file-is-read-only-error) (g$6594$CSxK@ core-prim . make-i/o-file-does-not-exist-error) (g$6581$CSxK@ core-prim . make-i/o-file-already-exists-error) (g$6486$CSxK@ core-prim . make-i/o-error) (g$6635$CSxK@ core-prim . make-i/o-encoding-error) (g$6622$CSxK@ core-prim . make-i/o-decoding-error) (g$11938$CSxK@ core-prim . make-custom-textual-output-port) (g$11937$CSxK@ core-prim . make-custom-textual-input/output-port) (g$11936$CSxK@ core-prim . make-custom-textual-input-port) (g$11935$CSxK@ core-prim . make-custom-binary-output-port) (g$11934$CSxK@ core-prim . make-custom-binary-input/output-port) (g$11933$CSxK@ core-prim . make-custom-binary-input-port) (g$11932$CSxK@ core-prim . make-bytevector) (g$11931$CSxK@ core-prim . lookahead-u8) (g$11930$CSxK@ core-prim . lookahead-char) (g$6513$CSxK@ core-prim . i/o-write-error?) (g$6500$CSxK@ core-prim . i/o-read-error?) (g$6609$CSxK@ core-prim . i/o-port-error?) (g$6527$CSxK@ core-prim . i/o-invalid-position-error?) (g$6528$CSxK@ core-prim . i/o-error-position) (g$6542$CSxK@ core-prim . i/o-filename-error?) (g$6556$CSxK@ core-prim . i/o-file-protection-error?) (g$6569$CSxK@ core-prim . i/o-file-is-read-only-error?) (g$6595$CSxK@ core-prim . i/o-file-does-not-exist-error?) (g$6582$CSxK@ core-prim . i/o-file-already-exists-error?) (g$6487$CSxK@ core-prim . i/o-error?) (g$6610$CSxK@ core-prim . i/o-error-port) (g$6543$CSxK@ core-prim . i/o-error-filename) (g$6637$CSxK@ core-prim . i/o-encoding-error?) (g$6638$CSxK@ core-prim . i/o-encoding-error-char) (g$6623$CSxK@ core-prim . i/o-decoding-error?) (g$11929$CSxK@ core-prim . get-u8) (g$11928$CSxK@ core-prim . get-string-n!) (g$11927$CSxK@ core-prim . get-string-n) (g$11926$CSxK@ core-prim . get-string-all) (g$11925$CSxK@ core-prim . get-line) (g$7045$CSxK@ core-prim . get-datum) (g$11924$CSxK@ core-prim . get-char) (g$11923$CSxK@ core-prim . get-bytevector-some) (g$11922$CSxK@ core-prim . get-bytevector-n!) (g$11921$CSxK@ core-prim . get-bytevector-n) (g$11920$CSxK@ core-prim . get-bytevector-all) (g$11919$CSxK@ core-prim . flush-output-port) (g$11918$CSxK@ core-prim . close-port) (g$7050$CSxK@ core-prim . call-with-string-output-port) (g$7051$CSxK@ core-prim . call-with-port) (g$11917$CSxK@ core-prim . call-with-bytevector-output-port) (g$11916$CSxK@ core-prim . bytevector->string) (g$11915$CSxK@ core-prim . buffer-mode?) (g$11914$CSxK@ core-prim . binary-port?) (g$8548$CSxK@ core-prim . scheme-report-environment) (g$6681$CSxK@ core-prim . quotient) (g$8547$CSxK@ core-prim . null-environment) (g$6682$CSxK@ core-prim . remainder) (g$6683$CSxK@ core-prim . modulo) (g$6678$CSxK@ core-prim . inexact->exact) (g$6685$CSxK@ core-prim . force) (g$6679$CSxK@ core-prim . exact->inexact) (g$11913$CSxK@ core-prim . exit) (g$11550$CSxK@ core-prim . command-line) (g$11912$CSxK@ core-prim . string-fill!) (g$11911$CSxK@ core-prim . string-set!) (g$11910$CSxK@ core-prim . set-cdr!) (g$11909$CSxK@ core-prim . set-car!) (g$5514$CSxK@ core-prim . remove) (g$5515$CSxK@ core-prim . remv) (g$5495$CSxK@ core-prim . remp) (g$5516$CSxK@ core-prim . remq) (g$5494$CSxK@ core-prim . partition) (g$5502$CSxK@ core-prim . memv) (g$5501$CSxK@ core-prim . memq) (g$5504$CSxK@ core-prim . memp) (g$5503$CSxK@ core-prim . member) (g$5508$CSxK@ core-prim . exists) (g$5507$CSxK@ core-prim . for-all) (g$5513$CSxK@ core-prim . fold-right) (g$5512$CSxK@ core-prim . fold-left) (g$5493$CSxK@ core-prim . find) (g$5496$CSxK@ core-prim . filter) (g$5511$CSxK@ core-prim . cons*) (g$5498$CSxK@ core-prim . assv) (g$5497$CSxK@ core-prim . assq) (g$5500$CSxK@ core-prim . assp) (g$5499$CSxK@ core-prim . assoc) (g$6238$CSxK@ core-prim . with-exception-handler) (g$6241$CSxK@ core-prim . raise-continuable) (g$6240$CSxK@ core-prim . raise) (g$8550$CSxK@ core-prim . eval) (g$8546$CSxK@ core-prim . environment) (g$7136$CSxK@ core-prim . make-enumeration) (g$7143$CSxK@ core-prim . enum-set=?) (g$7137$CSxK@ core-prim . enum-set-universe) (g$7144$CSxK@ core-prim . enum-set-union) (g$7142$CSxK@ core-prim . enum-set-subset?) (g$7148$CSxK@ core-prim . enum-set-projection) (g$7141$CSxK@ core-prim . enum-set-member?) (g$7145$CSxK@ core-prim . enum-set-intersection) (g$7138$CSxK@ core-prim . enum-set-indexer) (g$7146$CSxK@ core-prim . enum-set-difference) (g$7139$CSxK@ core-prim . enum-set-constructor) (g$7147$CSxK@ core-prim . enum-set-complement) (g$7140$CSxK@ core-prim . enum-set->list) (g$6404$CSxK@ core-prim . who-condition?) (g$6323$CSxK@ core-prim . warning?) (g$6362$CSxK@ core-prim . violation?) (g$6474$CSxK@ core-prim . undefined-violation?) (g$6459$CSxK@ core-prim . syntax-violation?) (g$6461$CSxK@ core-prim . syntax-violation-subform) (g$6460$CSxK@ core-prim . syntax-violation-form) (g$8568$CSxK@ core-prim . syntax-violation) (g$11908$CSxK@ core-prim . simple-conditions) (g$6336$CSxK@ core-prim . serious-condition?) (g$6418$CSxK@ core-prim . non-continuable-violation?) (g$6309$CSxK@ core-prim . message-condition?) (g$6402$CSxK@ core-prim . make-who-condition) (g$6322$CSxK@ core-prim . make-warning) (g$6361$CSxK@ core-prim . make-violation) (g$6473$CSxK@ core-prim . make-undefined-violation) (g$6456$CSxK@ core-prim . make-syntax-violation) (g$6335$CSxK@ core-prim . make-serious-condition) (g$6417$CSxK@ core-prim . make-non-continuable-violation) (g$6307$CSxK@ core-prim . make-message-condition) (g$6443$CSxK@ core-prim . make-lexical-violation) (g$6387$CSxK@ core-prim . make-irritants-condition) (g$6430$CSxK@ core-prim . make-implementation-restriction-violation) (g$6348$CSxK@ core-prim . make-error) (g$6374$CSxK@ core-prim . make-assertion-violation) (g$6444$CSxK@ core-prim . lexical-violation?) (g$6389$CSxK@ core-prim . irritants-condition?) (g$6431$CSxK@ core-prim . implementation-restriction-violation?) (g$6349$CSxK@ core-prim . error?) (g$6405$CSxK@ core-prim . condition-who) (g$11907$CSxK@ core-prim . condition-predicate) (g$6310$CSxK@ core-prim . condition-message) (g$6390$CSxK@ core-prim . condition-irritants) (g$11906$CSxK@ core-prim . condition-accessor) (g$11905$CSxK@ core-prim . condition) (g$6375$CSxK@ core-prim . assertion-violation?) (g$11904$CSxK@ core-prim . condition?) (g$11903$CSxK@ core-prim . utf32->string) (g$11902$CSxK@ core-prim . utf16->string) (g$11901$CSxK@ core-prim . utf8->string) (g$11900$CSxK@ core-prim . uint-list->bytevector) (g$11899$CSxK@ core-prim . u8-list->bytevector) (g$11898$CSxK@ core-prim . string->utf8) (g$11897$CSxK@ core-prim . string->utf32) (g$11896$CSxK@ core-prim . string->utf16) (g$11895$CSxK@ core-prim . sint-list->bytevector) (g$6123$CSxK@ core-prim . native-endianness) (g$5813$CSxK@ core-prim . bytevector?) (g$11894$CSxK@ core-prim . bytevector=?) (g$11893$CSxK@ core-prim . bytevector-uint-set!) (g$11892$CSxK@ core-prim . bytevector-uint-ref) (g$11891$CSxK@ core-prim . bytevector-u8-set!) (g$11890$CSxK@ core-prim . bytevector-u8-ref) (g$6144$CSxK@ core-prim . bytevector-u64-set!) (g$6140$CSxK@ core-prim . bytevector-u64-ref) (g$6146$CSxK@ core-prim . bytevector-u64-native-set!) (g$6142$CSxK@ core-prim . bytevector-u64-native-ref) (g$6136$CSxK@ core-prim . bytevector-u32-set!) (g$6132$CSxK@ core-prim . bytevector-u32-ref) (g$6138$CSxK@ core-prim . bytevector-u32-native-set!) (g$6134$CSxK@ core-prim . bytevector-u32-native-ref) (g$6128$CSxK@ core-prim . bytevector-u16-set!) (g$6124$CSxK@ core-prim . bytevector-u16-ref) (g$6130$CSxK@ core-prim . bytevector-u16-native-set!) (g$6126$CSxK@ core-prim . bytevector-u16-native-ref) (g$11889$CSxK@ core-prim . bytevector-sint-set!) (g$11888$CSxK@ core-prim . bytevector-sint-ref) (g$11887$CSxK@ core-prim . bytevector-s8-set!) (g$11886$CSxK@ core-prim . bytevector-s8-ref) (g$6145$CSxK@ core-prim . bytevector-s64-set!) (g$6141$CSxK@ core-prim . bytevector-s64-ref) (g$6147$CSxK@ core-prim . bytevector-s64-native-set!) (g$6143$CSxK@ core-prim . bytevector-s64-native-ref) (g$6137$CSxK@ core-prim . bytevector-s32-set!) (g$6133$CSxK@ core-prim . bytevector-s32-ref) (g$6139$CSxK@ core-prim . bytevector-s32-native-set!) (g$6135$CSxK@ core-prim . bytevector-s32-native-ref) (g$6129$CSxK@ core-prim . bytevector-s16-set!) (g$6125$CSxK@ core-prim . bytevector-s16-ref) (g$6131$CSxK@ core-prim . bytevector-s16-native-set!) (g$6127$CSxK@ core-prim . bytevector-s16-native-ref) (g$11885$CSxK@ core-prim . bytevector-length) (g$11884$CSxK@ core-prim . bytevector-ieee-single-set!) (g$11883$CSxK@ core-prim . bytevector-ieee-single-ref) (g$6150$CSxK@ core-prim . bytevector-ieee-single-native-set!) (g$6148$CSxK@ core-prim . bytevector-ieee-single-native-ref) (g$11882$CSxK@ core-prim . bytevector-ieee-double-set!) (g$11881$CSxK@ core-prim . bytevector-ieee-double-ref) (g$6151$CSxK@ core-prim . bytevector-ieee-double-native-set!) (g$6149$CSxK@ core-prim . bytevector-ieee-double-native-ref) (g$11880$CSxK@ core-prim . bytevector-fill!) (g$11879$CSxK@ core-prim . bytevector-copy!) (g$11878$CSxK@ core-prim . bytevector-copy) (g$11877$CSxK@ core-prim . bytevector->uint-list) (g$11876$CSxK@ core-prim . bytevector->u8-list) (g$11875$CSxK@ core-prim . bytevector->sint-list) (g$6664$CSxK@ core-prim . no-nans-violation?) (g$6651$CSxK@ core-prim . no-infinities-violation?) (g$6663$CSxK@ core-prim . make-no-nans-violation) (g$6650$CSxK@ core-prim . make-no-infinities-violation) (g$11874$CSxK@ core-prim . real->flonum) (g$6964$CSxK@ core-prim . flzero?) (g$6959$CSxK@ core-prim . fltruncate) (g$6949$CSxK@ core-prim . fltan) (g$6954$CSxK@ core-prim . flsqrt) (g$6947$CSxK@ core-prim . flsin) (g$6960$CSxK@ core-prim . flround) (g$6962$CSxK@ core-prim . flpositive?) (g$5818$CSxK@ core-prim . flonum?) (g$6966$CSxK@ core-prim . flodd?) (g$11873$CSxK@ core-prim . flnumerator) (g$6963$CSxK@ core-prim . flnegative?) (g$6946$CSxK@ core-prim . flnan?) (g$6942$CSxK@ core-prim . flmod0) (g$6941$CSxK@ core-prim . flmod) (g$6968$CSxK@ core-prim . flmin) (g$6967$CSxK@ core-prim . flmax) (g$6953$CSxK@ core-prim . fllog) (g$6943$CSxK@ core-prim . flinteger?) (g$6945$CSxK@ core-prim . flinfinite?) (g$6958$CSxK@ core-prim . flfloor) (g$6944$CSxK@ core-prim . flfinite?) (g$6956$CSxK@ core-prim . flexpt) (g$6955$CSxK@ core-prim . flexp) (g$6965$CSxK@ core-prim . fleven?) (g$6938$CSxK@ core-prim . fldiv0-and-mod0) (g$6940$CSxK@ core-prim . fldiv0) (g$6937$CSxK@ core-prim . fldiv-and-mod) (g$6939$CSxK@ core-prim . fldiv) (g$11872$CSxK@ core-prim . fldenominator) (g$6948$CSxK@ core-prim . flcos) (g$6957$CSxK@ core-prim . flceiling) (g$6952$CSxK@ core-prim . flatan) (g$6950$CSxK@ core-prim . flasin) (g$6951$CSxK@ core-prim . flacos) (g$6961$CSxK@ core-prim . flabs) (g$11871$CSxK@ core-prim . fl>?) (g$11870$CSxK@ core-prim . fl>=?) (g$11869$CSxK@ core-prim . fl=?) (g$11868$CSxK@ core-prim . fl<?) (g$11867$CSxK@ core-prim . fl<=?) (g$11866$CSxK@ core-prim . fl/) (g$11865$CSxK@ core-prim . fl-) (g$11864$CSxK@ core-prim . fl+) (g$11863$CSxK@ core-prim . fl*) (g$11862$CSxK@ core-prim . fixnum->flonum) (g$6845$CSxK@ core-prim . fxzero?) (g$11861$CSxK@ core-prim . fxxor) (g$6859$CSxK@ core-prim . fxrotate-bit-field) (g$11860$CSxK@ core-prim . fxreverse-bit-field) (g$6843$CSxK@ core-prim . fxpositive?) (g$6847$CSxK@ core-prim . fxodd?) (g$11859$CSxK@ core-prim . fxnot) (g$6844$CSxK@ core-prim . fxnegative?) (g$6842$CSxK@ core-prim . fxmod0) (g$6841$CSxK@ core-prim . fxmod) (g$6849$CSxK@ core-prim . fxmin) (g$6848$CSxK@ core-prim . fxmax) (g$11858$CSxK@ core-prim . fxlength) (g$11857$CSxK@ core-prim . fxior) (g$6853$CSxK@ core-prim . fxif) (g$11856$CSxK@ core-prim . fxfirst-bit-set) (g$6846$CSxK@ core-prim . fxeven?) (g$11855$CSxK@ core-prim . fxdiv0-and-mod0) (g$6840$CSxK@ core-prim . fxdiv0) (g$11854$CSxK@ core-prim . fxdiv-and-mod) (g$6839$CSxK@ core-prim . fxdiv) (g$6856$CSxK@ core-prim . fxcopy-bit-field) (g$6854$CSxK@ core-prim . fxcopy-bit) (g$11853$CSxK@ core-prim . fxbit-set?) (g$6855$CSxK@ core-prim . fxbit-field) (g$11852$CSxK@ core-prim . fxbit-count) (g$6858$CSxK@ core-prim . fxarithmetic-shift-right) (g$6857$CSxK@ core-prim . fxarithmetic-shift-left) (g$11851$CSxK@ core-prim . fxarithmetic-shift) (g$11850$CSxK@ core-prim . fxand) (g$11849$CSxK@ core-prim . fx>?) (g$11848$CSxK@ core-prim . fx>=?) (g$11847$CSxK@ core-prim . fx=?) (g$11846$CSxK@ core-prim . fx<?) (g$11845$CSxK@ core-prim . fx<=?) (g$6851$CSxK@ core-prim . fx-/carry) (g$11844$CSxK@ core-prim . fx-) (g$6852$CSxK@ core-prim . fx+/carry) (g$11843$CSxK@ core-prim . fx+) (g$6850$CSxK@ core-prim . fx*/carry) (g$11842$CSxK@ core-prim . fx*) (g$11841$CSxK@ core-prim . greatest-fixnum) (g$11840$CSxK@ core-prim . least-fixnum) (g$5819$CSxK@ core-prim . fixnum-width) (g$5817$CSxK@ core-prim . fixnum?) (g$6813$CSxK@ core-prim . bitwise-rotate-bit-field) (g$11839$CSxK@ core-prim . bitwise-reverse-bit-field) (g$11838$CSxK@ core-prim . bitwise-length) (g$6807$CSxK@ core-prim . bitwise-if) (g$11837$CSxK@ core-prim . bitwise-first-bit-set) (g$6810$CSxK@ core-prim . bitwise-copy-bit-field) (g$6808$CSxK@ core-prim . bitwise-copy-bit) (g$11836$CSxK@ core-prim . bitwise-bit-set?) (g$6809$CSxK@ core-prim . bitwise-bit-field) (g$11835$CSxK@ core-prim . bitwise-bit-count) (g$11834$CSxK@ core-prim . bitwise-xor) (g$11833$CSxK@ core-prim . bitwise-ior) (g$11832$CSxK@ core-prim . bitwise-and) (g$11831$CSxK@ core-prim . bitwise-not) (g$6812$CSxK@ core-prim . bitwise-arithmetic-shift-right) (g$6811$CSxK@ core-prim . bitwise-arithmetic-shift-left) (g$11830$CSxK@ core-prim . bitwise-arithmetic-shift) (g$5852$CSxK@ core-prim . zero?) (g$5812$CSxK@ core-prim . vector?) (g$11829$CSxK@ core-prim . vector-set!) (g$11828$CSxK@ core-prim . vector-ref) (g$5884$CSxK@ core-prim . vector-map) (g$11827$CSxK@ core-prim . vector-length) (g$5885$CSxK@ core-prim . vector-for-each) (g$5820$CSxK@ core-prim . vector-fill!) (g$11826$CSxK@ core-prim . vector->list) (g$11825$CSxK@ core-prim . vector) (g$11824$CSxK@ core-prim . values) (g$11823$CSxK@ core-prim . truncate) (g$11822$CSxK@ core-prim . tan) (g$5814$CSxK@ core-prim . symbol?) (g$5869$CSxK@ core-prim . symbol=?) (g$11821$CSxK@ core-prim . symbol->string) (g$11820$CSxK@ core-prim . substring) (g$11819$CSxK@ core-prim . string?) (g$5866$CSxK@ core-prim . string>?) (g$5868$CSxK@ core-prim . string>=?) (g$5864$CSxK@ core-prim . string=?) (g$5865$CSxK@ core-prim . string<?) (g$5867$CSxK@ core-prim . string<=?) (g$11818$CSxK@ core-prim . string-ref) (g$11817$CSxK@ core-prim . string-length) (g$5886$CSxK@ core-prim . string-for-each) (g$11816$CSxK@ core-prim . string-copy) (g$11815$CSxK@ core-prim . string-append) (g$11814$CSxK@ core-prim . string->symbol) (g$11813$CSxK@ core-prim . string->number) (g$11812$CSxK@ core-prim . string->list) (g$11811$CSxK@ core-prim . string) (g$11810$CSxK@ core-prim . sqrt) (g$11809$CSxK@ core-prim . sin) (g$11808$CSxK@ core-prim . round) (g$5821$CSxK@ core-prim . reverse) (g$11807$CSxK@ core-prim . real?) (g$11806$CSxK@ core-prim . real-valued?) (g$11805$CSxK@ core-prim . real-part) (g$5881$CSxK@ core-prim . rationalize) (g$11804$CSxK@ core-prim . rational?) (g$11803$CSxK@ core-prim . rational-valued?) (g$5816$CSxK@ core-prim . procedure?) (g$5850$CSxK@ core-prim . positive?) (g$11802$CSxK@ core-prim . pair?) (g$5854$CSxK@ core-prim . odd?) (g$11801$CSxK@ core-prim . numerator) (g$11800$CSxK@ core-prim . number?) (g$11799$CSxK@ core-prim . number->string) (g$11798$CSxK@ core-prim . null?) (g$11797$CSxK@ core-prim . not) (g$5851$CSxK@ core-prim . negative?) (g$11796$CSxK@ core-prim . nan?) (g$5856$CSxK@ core-prim . min) (g$5855$CSxK@ core-prim . max) (g$5509$CSxK@ core-prim . map) (g$11795$CSxK@ core-prim . make-vector) (g$11794$CSxK@ core-prim . make-string) (g$11793$CSxK@ core-prim . make-rectangular) (g$11792$CSxK@ core-prim . make-polar) (g$11791$CSxK@ core-prim . magnitude) (g$11790$CSxK@ core-prim . log) (g$11789$CSxK@ core-prim . list?) (g$5489$CSxK@ core-prim . list-tail) (g$5490$CSxK@ core-prim . list-ref) (g$5809$CSxK@ core-prim . list->vector) (g$5810$CSxK@ core-prim . list->string) (g$11788$CSxK@ core-prim . list) (g$11787$CSxK@ core-prim . length) (g$5858$CSxK@ core-prim . lcm) (g$11786$CSxK@ core-prim . integer?) (g$11785$CSxK@ core-prim . integer-valued?) (g$11784$CSxK@ core-prim . integer->char) (g$11783$CSxK@ core-prim . infinite?) (g$11782$CSxK@ core-prim . inexact?) (g$11781$CSxK@ core-prim . inexact) (g$11780$CSxK@ core-prim . imag-part) (g$5857$CSxK@ core-prim . gcd) (g$5510$CSxK@ core-prim . for-each) (g$11779$CSxK@ core-prim . floor) (g$11778$CSxK@ core-prim . finite?) (g$11777$CSxK@ core-prim . expt) (g$11776$CSxK@ core-prim . exp) (g$11775$CSxK@ core-prim . exact?) (g$11774$CSxK@ core-prim . exact-integer-sqrt) (g$11773$CSxK@ core-prim . exact) (g$5853$CSxK@ core-prim . even?) (g$6243$CSxK@ core-prim . error) (g$11772$CSxK@ core-prim . eqv?) (g$11771$CSxK@ core-prim . equal?) (g$11770$CSxK@ core-prim . eq?) (g$11769$CSxK@ core-prim . dynamic-wind) (g$11768$CSxK@ core-prim . div0-and-mod0) (g$5808$CSxK@ core-prim . mod0) (g$5806$CSxK@ core-prim . div0) (g$11767$CSxK@ core-prim . div-and-mod) (g$5807$CSxK@ core-prim . mod) (g$5805$CSxK@ core-prim . div) (g$11766$CSxK@ core-prim . denominator) (g$11765$CSxK@ core-prim . cos) (g$11764$CSxK@ core-prim . cons) (g$11763$CSxK@ core-prim . complex?) (g$5811$CSxK@ core-prim . char?) (g$5878$CSxK@ core-prim . char>?) (g$5880$CSxK@ core-prim . char>=?) (g$5876$CSxK@ core-prim . char=?) (g$5877$CSxK@ core-prim . char<?) (g$5879$CSxK@ core-prim . char<=?) (g$11762$CSxK@ core-prim . char->integer) (g$11761$CSxK@ core-prim . ceiling) (g$11760$CSxK@ core-prim . call-with-values) (g$11759$CSxK@ core-prim . call/cc) (g$11758$CSxK@ core-prim . call-with-current-continuation) (g$5849$CSxK@ core-prim . cddddr) (g$5848$CSxK@ core-prim . cdddar) (g$5847$CSxK@ core-prim . cddadr) (g$5846$CSxK@ core-prim . cddaar) (g$5845$CSxK@ core-prim . cdaddr) (g$5844$CSxK@ core-prim . cdadar) (g$5843$CSxK@ core-prim . cdaadr) (g$5842$CSxK@ core-prim . cdaaar) (g$5841$CSxK@ core-prim . cadddr) (g$5840$CSxK@ core-prim . caddar) (g$5839$CSxK@ core-prim . cadadr) (g$5838$CSxK@ core-prim . cadaar) (g$5837$CSxK@ core-prim . caaddr) (g$5836$CSxK@ core-prim . caadar) (g$5835$CSxK@ core-prim . caaadr) (g$5834$CSxK@ core-prim . caaaar) (g$5833$CSxK@ core-prim . cdddr) (g$5832$CSxK@ core-prim . cddar) (g$5831$CSxK@ core-prim . cdadr) (g$5830$CSxK@ core-prim . cdaar) (g$5829$CSxK@ core-prim . caddr) (g$5828$CSxK@ core-prim . cadar) (g$5827$CSxK@ core-prim . caadr) (g$5826$CSxK@ core-prim . caaar) (g$5825$CSxK@ core-prim . cddr) (g$5824$CSxK@ core-prim . cdar) (g$5823$CSxK@ core-prim . cadr) (g$5822$CSxK@ core-prim . caar) (g$11757$CSxK@ core-prim . cdr) (g$11756$CSxK@ core-prim . car) (g$5815$CSxK@ core-prim . boolean?) (g$5870$CSxK@ core-prim . boolean=?) (g$11755$CSxK@ core-prim . atan) (g$6242$CSxK@ core-prim . assertion-violation) (g$11754$CSxK@ core-prim . asin) (g$11753$CSxK@ core-prim . apply) (g$11752$CSxK@ core-prim . append) (g$11751$CSxK@ core-prim . angle) (g$11750$CSxK@ core-prim . acos) (g$11749$CSxK@ core-prim . abs) (g$11748$CSxK@ core-prim . /) (g$11747$CSxK@ core-prim . *) (g$11746$CSxK@ core-prim . -) (g$11745$CSxK@ core-prim . +) (g$11744$CSxK@ core-prim . >=) (g$11743$CSxK@ core-prim . >) (g$11742$CSxK@ core-prim . =) (g$11741$CSxK@ core-prim . <=) (g$11740$CSxK@ core-prim . <) (g$11739$CSxK@ core-prim . make-record-printer) (g$11738$CSxK@ core-prim . eqv-hash) (g$11737$CSxK@ core-prim . reverse!) (g$11736$CSxK@ core-prim . deserialize-port) (g$11735$CSxK@ core-prim . serialize-port) (g$7113$CSxK@ core-prim . enum-set?) (g$6684$CSxK@ core-prim . make-promise) (g$11553$CSxK@ core-prim . load/unload) (g$11552$CSxK@ core-prim . load/args) (g$7222$CSxK@ core-prim . printf) (g$7223$CSxK@ core-prim . fprintf) (g$7224$CSxK@ core-prim . format) (g$11734$CSxK@ core-prim . procedure-form) (g$11733$CSxK@ core-prim . procedure-environment) (g$11732$CSxK@ core-prim . procedure-name) (g$11731$CSxK@ core-prim . procedure-arity) (g$11730$CSxK@ core-prim . gc-collect) (g$11729$CSxK@ core-prim . typeof) (g$11728$CSxK@ core-prim . clr-type?) (g$11727$CSxK@ core-prim . get-clr-type) (g$11726$CSxK@ core-prim . get-command-line) (g$11725$CSxK@ core-prim . vector-append) (g$11724$CSxK@ core-prim . vector-filter) (g$11723$CSxK@ core-prim . vector-reverse!) (g$11722$CSxK@ core-prim . vector-contains?) (g$11721$CSxK@ core-prim . vector-index-of) (g$11720$CSxK@ core-prim . vector-copy) (g$11719$CSxK@ core-prim . vector-binary-search) (g$11718$CSxK@ core-prim . string-ci-compare) (g$11717$CSxK@ core-prim . string-compare) (g$11716$CSxK@ core-prim . string-format) (g$11549$CSxK@ core-prim . trace-printer) (g$11715$CSxK@ core-prim . make-traced-procedure) (g$7244$CSxK@ core-prim . make-traced-macro) (g$8564$CSxK@ core-prim . assertion-error) (g$11714$CSxK@ core-prim . time-it) (g$7517$CSxK@ core-prim . make-parameter) (g$11713$CSxK@ core-prim . library-locator) (g$11712$CSxK@ core-prim . get-library-paths) (g$11711$CSxK@ core-prim . open-tcp-input/output-port) (g$11710$CSxK@ core-prim . hashtable-for-each) (g$11709$CSxK@ core-prim . hashtable-map) (g$8542$CSxK@ core-prim . environment-bindings) (g$8545$CSxK@ core-prim . environment-symbols) (g$8541$CSxK@ core-prim . interaction-environment-symbols) (g$11708$CSxK@ core-prim . optimization-level) (g$7870$CSxK@ core-prim . library-path) (g$8251$CSxK@ core-prim . make-compile-time-value) (g$8551$CSxK@ core-prim . expand->core) (g$8549$CSxK@ core-prim . expand) (g$7300$CSxK@ core-prim . convert->cps) (g$7891$CSxK@ core-prim . installed-libraries) (g$7882$CSxK@ core-prim . uninstall-library) (g$11707$CSxK@ $core-rtd &no-nans-rtd &no-nans-rcd) (g$11706$CSxK@ $core-rtd &no-infinities-rtd &no-infinities-rcd) (g$11705$CSxK@ $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd) (g$11704$CSxK@ $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd) (g$11703$CSxK@ $core-rtd &i/o-port-rtd &i/o-port-rcd) (g$11702$CSxK@ $core-rtd &i/o-file-does-not-exist-rtd &i/o-file-does-not-exist-rcd) (g$11701$CSxK@ $core-rtd &i/o-file-already-exists-rtd &i/o-file-already-exists-rcd) (g$11700$CSxK@ $core-rtd &i/o-file-is-read-only-rtd &i/o-fie-is-read-only-rcd) (g$11699$CSxK@ $core-rtd &i/o-file-protection-rtd &i/o-file-protection-rcd) (g$11698$CSxK@ $core-rtd &i/o-filename-rtd &i/o-filename-rcd) (g$11697$CSxK@ $core-rtd &i/o-invalid-position-rtd &i/o-invalid-position-rcd) (g$11696$CSxK@ $core-rtd &i/o-write-rtd &i/o-write-rcd) (g$11695$CSxK@ $core-rtd &i/o-read-rtd &i/o-read-rcd) (g$11694$CSxK@ $core-rtd &i/o-rtd &i/o-rcd) (g$11693$CSxK@ $core-rtd &non-continuable-rtd &non-continuable-rcd) (g$11692$CSxK@ $core-rtd &undefined-rtd &undefined-rcd) (g$11691$CSxK@ $core-rtd &syntax-rtd &syntax-rcd) (g$11690$CSxK@ $core-rtd &lexical-rtd &lexical-rcd) (g$11689$CSxK@ $core-rtd &implementation-restriction-rtd &implementation-restriction-rcd) (g$11688$CSxK@ $core-rtd &who-rtd &who-rcd) (g$11687$CSxK@ $core-rtd &irritants-rtd &irritants-rcd) (g$11686$CSxK@ $core-rtd &assertion-rtd &assertion-rcd) (g$11685$CSxK@ $core-rtd &violation-rtd &violation-rcd) (g$11684$CSxK@ $core-rtd &error-rtd &error-rcd) (g$11683$CSxK@ $core-rtd &serious-rtd &serious-rcd) (g$11682$CSxK@ $core-rtd &warning-rtd &warning-rcd) (g$11681$CSxK@ $core-rtd &message-rtd &message-rcd) (g$11680$CSxK@ $core-rtd &condition-rtd &condition-rcd) (g$11679$CSxK@ macro . define-condition-type) (g$11678$CSxK@ macro . define-enumeration) (g$11677$CSxK@ macro . define-record-type) (g$11676$CSxK@ macro . parent-rtd) (g$11675$CSxK@ macro . nongenerative) (g$11674$CSxK@ macro . opaque) (g$11673$CSxK@ macro . sealed) (g$11672$CSxK@ macro . protocol) (g$11671$CSxK@ macro . parent) (g$11670$CSxK@ macro . immutable) (g$11669$CSxK@ macro . mutable) (g$11668$CSxK@ macro . fields) (g$11667$CSxK@ macro . error-handling-mode) (g$11666$CSxK@ macro . file-options) (g$11665$CSxK@ macro . buffer-mode) (g$11664$CSxK@ macro . eol-style) (g$11663$CSxK@ macro . guard) (g$11662$CSxK@ macro . trace-letrec-syntax) (g$11661$CSxK@ macro . trace-let-syntax) (g$11660$CSxK@ macro . trace-define-syntax) (g$11659$CSxK@ macro . trace-define) (g$11658$CSxK@ macro . trace-lambda) (g$11657$CSxK@ macro . unsyntax-splicing) (g$11656$CSxK@ macro . unsyntax) (g$11655$CSxK@ macro . unquote-splicing) (g$11654$CSxK@ macro . unquote) (g$11653$CSxK@ macro . _) (g$11652$CSxK@ macro . else) (g$11651$CSxK@ macro . =>) (g$11650$CSxK@ macro . ...) (g$11649$CSxK@ macro . assert) (g$11648$CSxK@ macro . endianness) (g$11647$CSxK@ macro . delay) (g$11646$CSxK@ macro . time) (g$11645$CSxK@ macro . or) (g$11644$CSxK@ macro . and) (g$11643$CSxK@ macro . do) (g$11642$CSxK@ macro . cond) (g$11641$CSxK@ macro . let*) (g$11640$CSxK@ macro . let) (g$11639$CSxK@ macro . identifier-syntax) (g$11638$CSxK@ macro . with-syntax) (g$11637$CSxK@ macro . quasisyntax) (g$11636$CSxK@ macro . quasiquote) (g$11635$CSxK@ macro . syntax-rules) (g$11634$CSxK@ macro . include-into) (g$11633$CSxK@ macro . include) (g$11632$CSxK@ macro . define-struct) (g$11631$CSxK@ macro . let-values) (g$11630$CSxK@ macro . let*-values) (g$11629$CSxK@ core-macro . record-constructor-descriptor) (g$11628$CSxK@ core-macro . record-type-descriptor) (g$11627$CSxK@ core-macro . fluid-let-syntax) (g$11626$CSxK@ macro . case) (g$11625$CSxK@ macro . parameterize) (g$11624$CSxK@ macro . unless) (g$11623$CSxK@ macro . when) (g$11622$CSxK@ core-macro . if) (g$11621$CSxK@ core-macro . letrec*) (g$11620$CSxK@ core-macro . letrec) (g$11619$CSxK@ core-macro . type-descriptor) (g$11618$CSxK@ core-macro . case-lambda) (g$11617$CSxK@ core-macro . lambda) (g$11616$CSxK@ core-macro . syntax) (g$11615$CSxK@ core-macro . syntax-case) (g$11614$CSxK@ core-macro . quote) (g$11613$CSxK@ core-macro . foreign-call) (g$11612$CSxK@ letrec-syntax) (g$11611$CSxK@ let-syntax) (g$11610$CSxK@ set!) (g$11609$CSxK@ export) (g$11608$CSxK@ import) (g$11607$CSxK@ library) (g$11606$CSxK@ begin) (g$11605$CSxK@ module) (g$11604$CSxK@ define-syntax) (g$11603$CSxK@ define)) values values '#f '#f '#f '#f))) 'g$12102$CSxK@ '(rnrs records syntactic) '(6) '() '() '() '((define-record-type . g$11677$CSxK@) (parent-rtd . g$11676$CSxK@) (nongenerative . g$11675$CSxK@) (opaque . g$11674$CSxK@) (sealed . g$11673$CSxK@) (protocol . g$11672$CSxK@) (parent . g$11671$CSxK@) (immutable . g$11670$CSxK@) (mutable . g$11669$CSxK@) (fields . g$11668$CSxK@) (record-constructor-descriptor . g$11629$CSxK@) (record-type-descriptor . g$11628$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12101$CSxK@ '(rnrs records procedural) '(6) '() '() '() '((record-type-descriptor? . g$12015$CSxK@) (record-predicate . g$12014$CSxK@) (record-mutator . g$12013$CSxK@) (record-constructor . g$12012$CSxK@) (record-accessor . g$12011$CSxK@) (make-record-type-descriptor . g$12010$CSxK@) (make-record-constructor-descriptor . g$12009$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12100$CSxK@ '(rnrs records inspection) '(6) '() '() '() '((record? . g$12008$CSxK@) (record-type-uid . g$12007$CSxK@) (record-type-sealed? . g$12006$CSxK@) (record-type-parent . g$12005$CSxK@) (record-type-opaque? . g$12004$CSxK@) (record-type-name . g$12003$CSxK@) (record-type-generative? . g$12002$CSxK@) (record-type-field-names . g$12001$CSxK@) (record-rtd . g$12000$CSxK@) (record-field-mutable? . g$11999$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12099$CSxK@ '(rnrs conditions) '(6) '() '() '() '((who-condition? . g$6404$CSxK@) (warning? . g$6323$CSxK@) (violation? . g$6362$CSxK@) (undefined-violation? . g$6474$CSxK@) (syntax-violation? . g$6459$CSxK@) (syntax-violation-subform . g$6461$CSxK@) (syntax-violation-form . g$6460$CSxK@) (simple-conditions . g$11908$CSxK@) (serious-condition? . g$6336$CSxK@) (non-continuable-violation? . g$6418$CSxK@) (message-condition? . g$6309$CSxK@) (make-who-condition . g$6402$CSxK@) (make-warning . g$6322$CSxK@) (make-violation . g$6361$CSxK@) (make-undefined-violation . g$6473$CSxK@) (make-syntax-violation . g$6456$CSxK@) (make-serious-condition . g$6335$CSxK@) (make-non-continuable-violation . g$6417$CSxK@) (make-message-condition . g$6307$CSxK@) (make-lexical-violation . g$6443$CSxK@) (make-irritants-condition . g$6387$CSxK@) (make-implementation-restriction-violation . g$6430$CSxK@) (make-error . g$6348$CSxK@) (make-assertion-violation . g$6374$CSxK@) (lexical-violation? . g$6444$CSxK@) (irritants-condition? . g$6389$CSxK@) (implementation-restriction-violation? . g$6431$CSxK@) (error? . g$6349$CSxK@) (condition-who . g$6405$CSxK@) (condition-predicate . g$11907$CSxK@) (condition-message . g$6310$CSxK@) (condition-irritants . g$6390$CSxK@) (condition-accessor . g$11906$CSxK@) (condition . g$11905$CSxK@) (assertion-violation? . g$6375$CSxK@) (condition? . g$11904$CSxK@) (&non-continuable . g$11693$CSxK@) (&undefined . g$11692$CSxK@) (&syntax . g$11691$CSxK@) (&lexical . g$11690$CSxK@) (&implementation-restriction . g$11689$CSxK@) (&who . g$11688$CSxK@) (&irritants . g$11687$CSxK@) (&assertion . g$11686$CSxK@) (&violation . g$11685$CSxK@) (&error . g$11684$CSxK@) (&serious . g$11683$CSxK@) (&warning . g$11682$CSxK@) (&message . g$11681$CSxK@) (&condition . g$11680$CSxK@) (define-condition-type . g$11679$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12098$CSxK@ '(rnrs enums) '(6) '() '() '() '((make-enumeration . g$7136$CSxK@) (enum-set=? . g$7143$CSxK@) (enum-set-universe . g$7137$CSxK@) (enum-set-union . g$7144$CSxK@) (enum-set-subset? . g$7142$CSxK@) (enum-set-projection . g$7148$CSxK@) (enum-set-member? . g$7141$CSxK@) (enum-set-intersection . g$7145$CSxK@) (enum-set-indexer . g$7138$CSxK@) (enum-set-difference . g$7146$CSxK@) (enum-set-constructor . g$7139$CSxK@) (enum-set-complement . g$7147$CSxK@) (enum-set->list . g$7140$CSxK@) (define-enumeration . g$11678$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12097$CSxK@ '(rnrs io ports) '(6) '() '() '() '((eof-object? . g$11977$CSxK@) (eof-object . g$11976$CSxK@) (current-error-port . g$11975$CSxK@) (current-output-port . g$11974$CSxK@) (current-input-port . g$11973$CSxK@) (output-port? . g$11972$CSxK@) (input-port? . g$11971$CSxK@) (utf-8-codec . g$11970$CSxK@) (utf-16-codec . g$11969$CSxK@) (transcoder-error-handling-mode . g$11968$CSxK@) (transcoder-eol-style . g$11967$CSxK@) (transcoder-codec . g$11966$CSxK@) (transcoded-port . g$11965$CSxK@) (textual-port? . g$11964$CSxK@) (string->bytevector . g$11963$CSxK@) (standard-output-port . g$11962$CSxK@) (standard-input-port . g$11961$CSxK@) (standard-error-port . g$11960$CSxK@) (set-port-position! . g$11959$CSxK@) (put-u8 . g$11958$CSxK@) (put-string . g$11957$CSxK@) (put-datum . g$7044$CSxK@) (put-char . g$11956$CSxK@) (put-bytevector . g$11955$CSxK@) (port? . g$7049$CSxK@) (port-transcoder . g$11954$CSxK@) (port-position . g$11953$CSxK@) (port-has-set-port-position!? . g$11952$CSxK@) (port-has-port-position? . g$11951$CSxK@) (port-eof? . g$11950$CSxK@) (output-port-buffer-mode . g$11949$CSxK@) (open-string-output-port . g$7048$CSxK@) (open-string-input-port . g$11948$CSxK@) (open-file-output-port . g$11947$CSxK@) (open-file-input/output-port . g$11946$CSxK@) (open-file-input-port . g$11945$CSxK@) (open-bytevector-output-port . g$11944$CSxK@) (open-bytevector-input-port . g$11943$CSxK@) (native-transcoder . g$11942$CSxK@) (native-eol-style . g$11941$CSxK@) (make-transcoder . g$11940$CSxK@) (latin-1-codec . g$11939$CSxK@) (make-i/o-write-error . g$6512$CSxK@) (make-i/o-read-error . g$6499$CSxK@) (make-i/o-port-error . g$6607$CSxK@) (make-i/o-invalid-position-error . g$6525$CSxK@) (make-i/o-filename-error . g$6540$CSxK@) (make-i/o-file-protection-error . g$6555$CSxK@) (make-i/o-file-is-read-only-error . g$6568$CSxK@) (make-i/o-file-does-not-exist-error . g$6594$CSxK@) (make-i/o-file-already-exists-error . g$6581$CSxK@) (make-i/o-error . g$6486$CSxK@) (make-i/o-encoding-error . g$6635$CSxK@) (make-i/o-decoding-error . g$6622$CSxK@) (make-custom-textual-output-port . g$11938$CSxK@) (make-custom-textual-input/output-port . g$11937$CSxK@) (make-custom-textual-input-port . g$11936$CSxK@) (make-custom-binary-output-port . g$11935$CSxK@) (make-custom-binary-input/output-port . g$11934$CSxK@) (make-custom-binary-input-port . g$11933$CSxK@) (lookahead-u8 . g$11931$CSxK@) (lookahead-char . g$11930$CSxK@) (i/o-write-error? . g$6513$CSxK@) (i/o-read-error? . g$6500$CSxK@) (i/o-port-error? . g$6609$CSxK@) (i/o-invalid-position-error? . g$6527$CSxK@) (i/o-error-position . g$6528$CSxK@) (i/o-filename-error? . g$6542$CSxK@) (i/o-file-protection-error? . g$6556$CSxK@) (i/o-file-is-read-only-error? . g$6569$CSxK@) (i/o-file-does-not-exist-error? . g$6595$CSxK@) (i/o-file-already-exists-error? . g$6582$CSxK@) (i/o-error? . g$6487$CSxK@) (i/o-error-port . g$6610$CSxK@) (i/o-error-filename . g$6543$CSxK@) (i/o-encoding-error? . g$6637$CSxK@) (i/o-encoding-error-char . g$6638$CSxK@) (i/o-decoding-error? . g$6623$CSxK@) (get-u8 . g$11929$CSxK@) (get-string-n! . g$11928$CSxK@) (get-string-n . g$11927$CSxK@) (get-string-all . g$11926$CSxK@) (get-line . g$11925$CSxK@) (get-datum . g$7045$CSxK@) (get-char . g$11924$CSxK@) (get-bytevector-some . g$11923$CSxK@) (get-bytevector-n! . g$11922$CSxK@) (get-bytevector-n . g$11921$CSxK@) (get-bytevector-all . g$11920$CSxK@) (flush-output-port . g$11919$CSxK@) (close-port . g$11918$CSxK@) (call-with-string-output-port . g$7050$CSxK@) (call-with-port . g$7051$CSxK@) (call-with-bytevector-output-port . g$11917$CSxK@) (bytevector->string . g$11916$CSxK@) (buffer-mode? . g$11915$CSxK@) (binary-port? . g$11914$CSxK@) (&i/o-encoding . g$11705$CSxK@) (&i/o-decoding . g$11704$CSxK@) (&i/o-port . g$11703$CSxK@) (&i/o-file-does-not-exist . g$11702$CSxK@) (&i/o-file-already-exists . g$11701$CSxK@) (&i/o-file-is-read-only . g$11700$CSxK@) (&i/o-file-protection . g$11699$CSxK@) (&i/o-filename . g$11698$CSxK@) (&i/o-invalid-position . g$11697$CSxK@) (&i/o-write . g$11696$CSxK@) (&i/o-read . g$11695$CSxK@) (&i/o . g$11694$CSxK@) (error-handling-mode . g$11667$CSxK@) (file-options . g$11666$CSxK@) (buffer-mode . g$11665$CSxK@) (eol-style . g$11664$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12096$CSxK@ '(rnrs hashtables) '(6) '() '() '() '((symbol-hash . g$11996$CSxK@) (string-ci-hash . g$11995$CSxK@) (string-hash . g$11994$CSxK@) (equal-hash . g$11993$CSxK@) (hashtable-equivalence-function . g$11992$CSxK@) (make-hashtable . g$11991$CSxK@) (hashtable-hash-function . g$11990$CSxK@) (make-eqv-hashtable . g$6085$CSxK@) (make-eq-hashtable . g$6084$CSxK@) (hashtable? . g$11989$CSxK@) (hashtable-update! . g$6091$CSxK@) (hashtable-size . g$6086$CSxK@) (hashtable-set! . g$6088$CSxK@) (hashtable-ref . g$6087$CSxK@) (hashtable-mutable? . g$11988$CSxK@) (hashtable-keys . g$11987$CSxK@) (hashtable-entries . g$11986$CSxK@) (hashtable-delete! . g$6089$CSxK@) (hashtable-copy . g$11985$CSxK@) (hashtable-contains? . g$6090$CSxK@) (hashtable-clear! . g$6092$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12095$CSxK@ '(rnrs arithmetic flonums) '(6) '() '() '() '((no-nans-violation? . g$6664$CSxK@) (no-infinities-violation? . g$6651$CSxK@) (make-no-nans-violation . g$6663$CSxK@) (make-no-infinities-violation . g$6650$CSxK@) (real->flonum . g$11874$CSxK@) (flzero? . g$6964$CSxK@) (fltruncate . g$6959$CSxK@) (fltan . g$6949$CSxK@) (flsqrt . g$6954$CSxK@) (flsin . g$6947$CSxK@) (flround . g$6960$CSxK@) (flpositive? . g$6962$CSxK@) (flonum? . g$5818$CSxK@) (flodd? . g$6966$CSxK@) (flnumerator . g$11873$CSxK@) (flnegative? . g$6963$CSxK@) (flnan? . g$6946$CSxK@) (flmod0 . g$6942$CSxK@) (flmod . g$6941$CSxK@) (flmin . g$6968$CSxK@) (flmax . g$6967$CSxK@) (fllog . g$6953$CSxK@) (flinteger? . g$6943$CSxK@) (flinfinite? . g$6945$CSxK@) (flfloor . g$6958$CSxK@) (flfinite? . g$6944$CSxK@) (flexpt . g$6956$CSxK@) (flexp . g$6955$CSxK@) (fleven? . g$6965$CSxK@) (fldiv0-and-mod0 . g$6938$CSxK@) (fldiv0 . g$6940$CSxK@) (fldiv-and-mod . g$6937$CSxK@) (fldiv . g$6939$CSxK@) (fldenominator . g$11872$CSxK@) (flcos . g$6948$CSxK@) (flceiling . g$6957$CSxK@) (flatan . g$6952$CSxK@) (flasin . g$6950$CSxK@) (flacos . g$6951$CSxK@) (flabs . g$6961$CSxK@) (fl>? . g$11871$CSxK@) (fl>=? . g$11870$CSxK@) (fl=? . g$11869$CSxK@) (fl<? . g$11868$CSxK@) (fl<=? . g$11867$CSxK@) (fl/ . g$11866$CSxK@) (fl- . g$11865$CSxK@) (fl+ . g$11864$CSxK@) (fl* . g$11863$CSxK@) (fixnum->flonum . g$11862$CSxK@) (&no-nans . g$11707$CSxK@) (&no-infinities . g$11706$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12094$CSxK@ '(rnrs arithmetic fixnums) '(6) '() '() '() '((fxzero? . g$6845$CSxK@) (fxxor . g$11861$CSxK@) (fxrotate-bit-field . g$6859$CSxK@) (fxreverse-bit-field . g$11860$CSxK@) (fxpositive? . g$6843$CSxK@) (fxodd? . g$6847$CSxK@) (fxnot . g$11859$CSxK@) (fxnegative? . g$6844$CSxK@) (fxmod0 . g$6842$CSxK@) (fxmod . g$6841$CSxK@) (fxmin . g$6849$CSxK@) (fxmax . g$6848$CSxK@) (fxlength . g$11858$CSxK@) (fxior . g$11857$CSxK@) (fxif . g$6853$CSxK@) (fxfirst-bit-set . g$11856$CSxK@) (fxeven? . g$6846$CSxK@) (fxdiv0-and-mod0 . g$11855$CSxK@) (fxdiv0 . g$6840$CSxK@) (fxdiv-and-mod . g$11854$CSxK@) (fxdiv . g$6839$CSxK@) (fxcopy-bit-field . g$6856$CSxK@) (fxcopy-bit . g$6854$CSxK@) (fxbit-set? . g$11853$CSxK@) (fxbit-field . g$6855$CSxK@) (fxbit-count . g$11852$CSxK@) (fxarithmetic-shift-right . g$6858$CSxK@) (fxarithmetic-shift-left . g$6857$CSxK@) (fxarithmetic-shift . g$11851$CSxK@) (fxand . g$11850$CSxK@) (fx>? . g$11849$CSxK@) (fx>=? . g$11848$CSxK@) (fx=? . g$11847$CSxK@) (fx<? . g$11846$CSxK@) (fx<=? . g$11845$CSxK@) (fx-/carry . g$6851$CSxK@) (fx- . g$11844$CSxK@) (fx+/carry . g$6852$CSxK@) (fx+ . g$11843$CSxK@) (fx*/carry . g$6850$CSxK@) (fx* . g$11842$CSxK@) (greatest-fixnum . g$11841$CSxK@) (least-fixnum . g$11840$CSxK@) (fixnum-width . g$5819$CSxK@) (fixnum? . g$5817$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12093$CSxK@ '(rnrs arithmetic bitwise) '(6) '() '() '() '((bitwise-rotate-bit-field . g$6813$CSxK@) (bitwise-reverse-bit-field . g$11839$CSxK@) (bitwise-length . g$11838$CSxK@) (bitwise-if . g$6807$CSxK@) (bitwise-first-bit-set . g$11837$CSxK@) (bitwise-copy-bit-field . g$6810$CSxK@) (bitwise-copy-bit . g$6808$CSxK@) (bitwise-bit-set? . g$11836$CSxK@) (bitwise-bit-field . g$6809$CSxK@) (bitwise-bit-count . g$11835$CSxK@) (bitwise-xor . g$11834$CSxK@) (bitwise-ior . g$11833$CSxK@) (bitwise-and . g$11832$CSxK@) (bitwise-not . g$11831$CSxK@) (bitwise-arithmetic-shift-right . g$6812$CSxK@) (bitwise-arithmetic-shift-left . g$6811$CSxK@) (bitwise-arithmetic-shift . g$11830$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12092$CSxK@ '(rnrs exceptions) '(6) '() '() '() '((with-exception-handler . g$6238$CSxK@) (raise-continuable . g$6241$CSxK@) (raise . g$6240$CSxK@) (guard . g$11663$CSxK@) (else . g$11652$CSxK@) (=> . g$11651$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12091$CSxK@ '(rnrs unicode) '(6) '() '() '() '((string-upcase . g$12030$CSxK@) (string-titlecase . g$12029$CSxK@) (string-normalize-nfkd . g$6749$CSxK@) (string-normalize-nfkc . g$6748$CSxK@) (string-normalize-nfd . g$6747$CSxK@) (string-normalize-nfc . g$6746$CSxK@) (string-foldcase . g$12028$CSxK@) (string-downcase . g$12027$CSxK@) (string-ci>? . g$6733$CSxK@) (string-ci>=? . g$6735$CSxK@) (string-ci=? . g$6731$CSxK@) (string-ci<? . g$6732$CSxK@) (string-ci<=? . g$6734$CSxK@) (char-whitespace? . g$12026$CSxK@) (char-upper-case? . g$12025$CSxK@) (char-title-case? . g$12024$CSxK@) (char-numeric? . g$12023$CSxK@) (char-lower-case? . g$12022$CSxK@) (char-general-category . g$12021$CSxK@) (char-upcase . g$12020$CSxK@) (char-titlecase . g$12019$CSxK@) (char-foldcase . g$12018$CSxK@) (char-downcase . g$12017$CSxK@) (char-ci>? . g$6743$CSxK@) (char-ci>=? . g$6745$CSxK@) (char-ci=? . g$6741$CSxK@) (char-ci<? . g$6742$CSxK@) (char-ci<=? . g$6744$CSxK@) (char-alphabetic? . g$12016$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12090$CSxK@ '(rnrs bytevectors) '(6) '() '() '() '((make-bytevector . g$11932$CSxK@) (utf32->string . g$11903$CSxK@) (utf16->string . g$11902$CSxK@) (utf8->string . g$11901$CSxK@) (uint-list->bytevector . g$11900$CSxK@) (u8-list->bytevector . g$11899$CSxK@) (string->utf8 . g$11898$CSxK@) (string->utf32 . g$11897$CSxK@) (string->utf16 . g$11896$CSxK@) (sint-list->bytevector . g$11895$CSxK@) (native-endianness . g$6123$CSxK@) (bytevector? . g$5813$CSxK@) (bytevector=? . g$11894$CSxK@) (bytevector-uint-set! . g$11893$CSxK@) (bytevector-uint-ref . g$11892$CSxK@) (bytevector-u8-set! . g$11891$CSxK@) (bytevector-u8-ref . g$11890$CSxK@) (bytevector-u64-set! . g$6144$CSxK@) (bytevector-u64-ref . g$6140$CSxK@) (bytevector-u64-native-set! . g$6146$CSxK@) (bytevector-u64-native-ref . g$6142$CSxK@) (bytevector-u32-set! . g$6136$CSxK@) (bytevector-u32-ref . g$6132$CSxK@) (bytevector-u32-native-set! . g$6138$CSxK@) (bytevector-u32-native-ref . g$6134$CSxK@) (bytevector-u16-set! . g$6128$CSxK@) (bytevector-u16-ref . g$6124$CSxK@) (bytevector-u16-native-set! . g$6130$CSxK@) (bytevector-u16-native-ref . g$6126$CSxK@) (bytevector-sint-set! . g$11889$CSxK@) (bytevector-sint-ref . g$11888$CSxK@) (bytevector-s8-set! . g$11887$CSxK@) (bytevector-s8-ref . g$11886$CSxK@) (bytevector-s64-set! . g$6145$CSxK@) (bytevector-s64-ref . g$6141$CSxK@) (bytevector-s64-native-set! . g$6147$CSxK@) (bytevector-s64-native-ref . g$6143$CSxK@) (bytevector-s32-set! . g$6137$CSxK@) (bytevector-s32-ref . g$6133$CSxK@) (bytevector-s32-native-set! . g$6139$CSxK@) (bytevector-s32-native-ref . g$6135$CSxK@) (bytevector-s16-set! . g$6129$CSxK@) (bytevector-s16-ref . g$6125$CSxK@) (bytevector-s16-native-set! . g$6131$CSxK@) (bytevector-s16-native-ref . g$6127$CSxK@) (bytevector-length . g$11885$CSxK@) (bytevector-ieee-single-set! . g$11884$CSxK@) (bytevector-ieee-single-ref . g$11883$CSxK@) (bytevector-ieee-single-native-set! . g$6150$CSxK@) (bytevector-ieee-single-native-ref . g$6148$CSxK@) (bytevector-ieee-double-set! . g$11882$CSxK@) (bytevector-ieee-double-ref . g$11881$CSxK@) (bytevector-ieee-double-native-set! . g$6151$CSxK@) (bytevector-ieee-double-native-ref . g$6149$CSxK@) (bytevector-fill! . g$11880$CSxK@) (bytevector-copy! . g$11879$CSxK@) (bytevector-copy . g$11878$CSxK@) (bytevector->uint-list . g$11877$CSxK@) (bytevector->u8-list . g$11876$CSxK@) (bytevector->sint-list . g$11875$CSxK@) (endianness . g$11648$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12089$CSxK@ '(rnrs io simple) '(6) '() '() '() '((call-with-output-file . g$7075$CSxK@) (call-with-input-file . g$7074$CSxK@) (write-char . g$7066$CSxK@) (write . g$11984$CSxK@) (with-output-to-file . g$7073$CSxK@) (with-input-from-file . g$7072$CSxK@) (read-char . g$7065$CSxK@) (read . g$11983$CSxK@) (peek-char . g$7064$CSxK@) (open-output-file . g$11982$CSxK@) (open-input-file . g$11981$CSxK@) (newline . g$7076$CSxK@) (display . g$11980$CSxK@) (close-output-port . g$11979$CSxK@) (close-input-port . g$11978$CSxK@) (eof-object? . g$11977$CSxK@) (eof-object . g$11976$CSxK@) (current-error-port . g$11975$CSxK@) (current-output-port . g$11974$CSxK@) (current-input-port . g$11973$CSxK@) (output-port? . g$11972$CSxK@) (input-port? . g$11971$CSxK@) (make-i/o-write-error . g$6512$CSxK@) (make-i/o-read-error . g$6499$CSxK@) (make-i/o-port-error . g$6607$CSxK@) (make-i/o-invalid-position-error . g$6525$CSxK@) (make-i/o-filename-error . g$6540$CSxK@) (make-i/o-file-protection-error . g$6555$CSxK@) (make-i/o-file-is-read-only-error . g$6568$CSxK@) (make-i/o-file-does-not-exist-error . g$6594$CSxK@) (make-i/o-file-already-exists-error . g$6581$CSxK@) (make-i/o-error . g$6486$CSxK@) (i/o-write-error? . g$6513$CSxK@) (i/o-read-error? . g$6500$CSxK@) (i/o-port-error? . g$6609$CSxK@) (i/o-invalid-position-error? . g$6527$CSxK@) (i/o-error-position . g$6528$CSxK@) (i/o-filename-error? . g$6542$CSxK@) (i/o-file-protection-error? . g$6556$CSxK@) (i/o-file-is-read-only-error? . g$6569$CSxK@) (i/o-file-does-not-exist-error? . g$6595$CSxK@) (i/o-file-already-exists-error? . g$6582$CSxK@) (i/o-error? . g$6487$CSxK@) (i/o-error-port . g$6610$CSxK@) (i/o-error-filename . g$6543$CSxK@) (&i/o-port . g$11703$CSxK@) (&i/o-file-does-not-exist . g$11702$CSxK@) (&i/o-file-already-exists . g$11701$CSxK@) (&i/o-file-is-read-only . g$11700$CSxK@) (&i/o-file-protection . g$11699$CSxK@) (&i/o-filename . g$11698$CSxK@) (&i/o-invalid-position . g$11697$CSxK@) (&i/o-write . g$11696$CSxK@) (&i/o-read . g$11695$CSxK@) (&i/o . g$11694$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12088$CSxK@ '(rnrs lists) '(6) '() '() '() '((remove . g$5514$CSxK@) (remv . g$5515$CSxK@) (remp . g$5495$CSxK@) (remq . g$5516$CSxK@) (partition . g$5494$CSxK@) (memv . g$5502$CSxK@) (memq . g$5501$CSxK@) (memp . g$5504$CSxK@) (member . g$5503$CSxK@) (exists . g$5508$CSxK@) (for-all . g$5507$CSxK@) (fold-right . g$5513$CSxK@) (fold-left . g$5512$CSxK@) (find . g$5493$CSxK@) (filter . g$5496$CSxK@) (cons* . g$5511$CSxK@) (assv . g$5498$CSxK@) (assq . g$5497$CSxK@) (assp . g$5500$CSxK@) (assoc . g$5499$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12087$CSxK@ '(rnrs base) '(6) '() '() '() '((zero? . g$5852$CSxK@) (vector? . g$5812$CSxK@) (vector-set! . g$11829$CSxK@) (vector-ref . g$11828$CSxK@) (vector-map . g$5884$CSxK@) (vector-length . g$11827$CSxK@) (vector-for-each . g$5885$CSxK@) (vector-fill! . g$5820$CSxK@) (vector->list . g$11826$CSxK@) (vector . g$11825$CSxK@) (values . g$11824$CSxK@) (truncate . g$11823$CSxK@) (tan . g$11822$CSxK@) (symbol? . g$5814$CSxK@) (symbol=? . g$5869$CSxK@) (symbol->string . g$11821$CSxK@) (substring . g$11820$CSxK@) (string? . g$11819$CSxK@) (string>? . g$5866$CSxK@) (string>=? . g$5868$CSxK@) (string=? . g$5864$CSxK@) (string<? . g$5865$CSxK@) (string<=? . g$5867$CSxK@) (string-ref . g$11818$CSxK@) (string-length . g$11817$CSxK@) (string-for-each . g$5886$CSxK@) (string-copy . g$11816$CSxK@) (string-append . g$11815$CSxK@) (string->symbol . g$11814$CSxK@) (string->number . g$11813$CSxK@) (string->list . g$11812$CSxK@) (string . g$11811$CSxK@) (sqrt . g$11810$CSxK@) (sin . g$11809$CSxK@) (round . g$11808$CSxK@) (reverse . g$5821$CSxK@) (real? . g$11807$CSxK@) (real-valued? . g$11806$CSxK@) (real-part . g$11805$CSxK@) (rationalize . g$5881$CSxK@) (rational? . g$11804$CSxK@) (rational-valued? . g$11803$CSxK@) (procedure? . g$5816$CSxK@) (positive? . g$5850$CSxK@) (pair? . g$11802$CSxK@) (odd? . g$5854$CSxK@) (numerator . g$11801$CSxK@) (number? . g$11800$CSxK@) (number->string . g$11799$CSxK@) (null? . g$11798$CSxK@) (not . g$11797$CSxK@) (negative? . g$5851$CSxK@) (nan? . g$11796$CSxK@) (min . g$5856$CSxK@) (max . g$5855$CSxK@) (map . g$5509$CSxK@) (make-vector . g$11795$CSxK@) (make-string . g$11794$CSxK@) (make-rectangular . g$11793$CSxK@) (make-polar . g$11792$CSxK@) (magnitude . g$11791$CSxK@) (log . g$11790$CSxK@) (list? . g$11789$CSxK@) (list-tail . g$5489$CSxK@) (list-ref . g$5490$CSxK@) (list->vector . g$5809$CSxK@) (list->string . g$5810$CSxK@) (list . g$11788$CSxK@) (length . g$11787$CSxK@) (lcm . g$5858$CSxK@) (integer? . g$11786$CSxK@) (integer-valued? . g$11785$CSxK@) (integer->char . g$11784$CSxK@) (infinite? . g$11783$CSxK@) (inexact? . g$11782$CSxK@) (inexact . g$11781$CSxK@) (imag-part . g$11780$CSxK@) (gcd . g$5857$CSxK@) (for-each . g$5510$CSxK@) (floor . g$11779$CSxK@) (finite? . g$11778$CSxK@) (expt . g$11777$CSxK@) (exp . g$11776$CSxK@) (exact? . g$11775$CSxK@) (exact-integer-sqrt . g$11774$CSxK@) (exact . g$11773$CSxK@) (even? . g$5853$CSxK@) (error . g$6243$CSxK@) (eqv? . g$11772$CSxK@) (equal? . g$11771$CSxK@) (eq? . g$11770$CSxK@) (dynamic-wind . g$11769$CSxK@) (div0-and-mod0 . g$11768$CSxK@) (mod0 . g$5808$CSxK@) (div0 . g$5806$CSxK@) (div-and-mod . g$11767$CSxK@) (mod . g$5807$CSxK@) (div . g$5805$CSxK@) (denominator . g$11766$CSxK@) (cos . g$11765$CSxK@) (cons . g$11764$CSxK@) (complex? . g$11763$CSxK@) (char? . g$5811$CSxK@) (char>? . g$5878$CSxK@) (char>=? . g$5880$CSxK@) (char=? . g$5876$CSxK@) (char<? . g$5877$CSxK@) (char<=? . g$5879$CSxK@) (char->integer . g$11762$CSxK@) (ceiling . g$11761$CSxK@) (call-with-values . g$11760$CSxK@) (call/cc . g$11759$CSxK@) (call-with-current-continuation . g$11758$CSxK@) (cddddr . g$5849$CSxK@) (cdddar . g$5848$CSxK@) (cddadr . g$5847$CSxK@) (cddaar . g$5846$CSxK@) (cdaddr . g$5845$CSxK@) (cdadar . g$5844$CSxK@) (cdaadr . g$5843$CSxK@) (cdaaar . g$5842$CSxK@) (cadddr . g$5841$CSxK@) (caddar . g$5840$CSxK@) (cadadr . g$5839$CSxK@) (cadaar . g$5838$CSxK@) (caaddr . g$5837$CSxK@) (caadar . g$5836$CSxK@) (caaadr . g$5835$CSxK@) (caaaar . g$5834$CSxK@) (cdddr . g$5833$CSxK@) (cddar . g$5832$CSxK@) (cdadr . g$5831$CSxK@) (cdaar . g$5830$CSxK@) (caddr . g$5829$CSxK@) (cadar . g$5828$CSxK@) (caadr . g$5827$CSxK@) (caaar . g$5826$CSxK@) (cddr . g$5825$CSxK@) (cdar . g$5824$CSxK@) (cadr . g$5823$CSxK@) (caar . g$5822$CSxK@) (cdr . g$11757$CSxK@) (car . g$11756$CSxK@) (boolean? . g$5815$CSxK@) (boolean=? . g$5870$CSxK@) (atan . g$11755$CSxK@) (assertion-violation . g$6242$CSxK@) (asin . g$11754$CSxK@) (apply . g$11753$CSxK@) (append . g$11752$CSxK@) (angle . g$11751$CSxK@) (acos . g$11750$CSxK@) (abs . g$11749$CSxK@) (/ . g$11748$CSxK@) (* . g$11747$CSxK@) (- . g$11746$CSxK@) (+ . g$11745$CSxK@) (>= . g$11744$CSxK@) (> . g$11743$CSxK@) (= . g$11742$CSxK@) (<= . g$11741$CSxK@) (< . g$11740$CSxK@) (unquote-splicing . g$11655$CSxK@) (unquote . g$11654$CSxK@) (_ . g$11653$CSxK@) (else . g$11652$CSxK@) (=> . g$11651$CSxK@) (... . g$11650$CSxK@) (assert . g$11649$CSxK@) (or . g$11645$CSxK@) (and . g$11644$CSxK@) (cond . g$11642$CSxK@) (let* . g$11641$CSxK@) (let . g$11640$CSxK@) (identifier-syntax . g$11639$CSxK@) (quasiquote . g$11636$CSxK@) (syntax-rules . g$11635$CSxK@) (let-values . g$11631$CSxK@) (let*-values . g$11630$CSxK@) (case . g$11626$CSxK@) (if . g$11622$CSxK@) (letrec* . g$11621$CSxK@) (letrec . g$11620$CSxK@) (lambda . g$11617$CSxK@) (quote . g$11614$CSxK@) (letrec-syntax . g$11612$CSxK@) (let-syntax . g$11611$CSxK@) (set! . g$11610$CSxK@) (begin . g$11606$CSxK@) (define-syntax . g$11604$CSxK@) (define . g$11603$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12086$CSxK@ '(rnrs sorting) '(6) '() '() '() '((vector-sort! . g$11998$CSxK@) (vector-sort . g$11997$CSxK@) (list-sort . g$6702$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12085$CSxK@ '(rnrs files) '(6) '() '() '() '((delete-file . g$6117$CSxK@) (file-exists? . g$6116$CSxK@) (make-i/o-write-error . g$6512$CSxK@) (make-i/o-read-error . g$6499$CSxK@) (make-i/o-port-error . g$6607$CSxK@) (make-i/o-invalid-position-error . g$6525$CSxK@) (make-i/o-filename-error . g$6540$CSxK@) (make-i/o-file-protection-error . g$6555$CSxK@) (make-i/o-file-is-read-only-error . g$6568$CSxK@) (make-i/o-file-does-not-exist-error . g$6594$CSxK@) (make-i/o-file-already-exists-error . g$6581$CSxK@) (make-i/o-error . g$6486$CSxK@) (i/o-write-error? . g$6513$CSxK@) (i/o-read-error? . g$6500$CSxK@) (i/o-port-error? . g$6609$CSxK@) (i/o-invalid-position-error? . g$6527$CSxK@) (i/o-error-position . g$6528$CSxK@) (i/o-filename-error? . g$6542$CSxK@) (i/o-file-protection-error? . g$6556$CSxK@) (i/o-file-is-read-only-error? . g$6569$CSxK@) (i/o-file-does-not-exist-error? . g$6595$CSxK@) (i/o-file-already-exists-error? . g$6582$CSxK@) (i/o-error? . g$6487$CSxK@) (i/o-error-port . g$6610$CSxK@) (i/o-error-filename . g$6543$CSxK@) (&i/o-port . g$11703$CSxK@) (&i/o-file-does-not-exist . g$11702$CSxK@) (&i/o-file-already-exists . g$11701$CSxK@) (&i/o-file-is-read-only . g$11700$CSxK@) (&i/o-file-protection . g$11699$CSxK@) (&i/o-filename . g$11698$CSxK@) (&i/o-invalid-position . g$11697$CSxK@) (&i/o-write . g$11696$CSxK@) (&i/o-read . g$11695$CSxK@) (&i/o . g$11694$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12084$CSxK@ '(rnrs syntax-case) '(6) '() '() '() '((make-variable-transformer . g$8250$CSxK@) (identifier? . g$8569$CSxK@) (generate-temporaries . g$8558$CSxK@) (free-identifier=? . g$8559$CSxK@) (syntax->datum . g$8571$CSxK@) (datum->syntax . g$8570$CSxK@) (bound-identifier=? . g$8560$CSxK@) (syntax-violation . g$8568$CSxK@) (unsyntax-splicing . g$11657$CSxK@) (unsyntax . g$11656$CSxK@) (_ . g$11653$CSxK@) (... . g$11650$CSxK@) (with-syntax . g$11638$CSxK@) (quasisyntax . g$11637$CSxK@) (syntax . g$11616$CSxK@) (syntax-case . g$11615$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12083$CSxK@ '(rnrs programs) '(6) '() '() '() '((exit . g$11913$CSxK@) (command-line . g$11550$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12082$CSxK@ '(rnrs mutable-strings) '(6) '() '() '() '((string-fill! . g$11912$CSxK@) (string-set! . g$11911$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12081$CSxK@ '(rnrs mutable-pairs) '(6) '() '() '() '((set-cdr! . g$11910$CSxK@) (set-car! . g$11909$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12080$CSxK@ '(rnrs eval) '(6) '() '() '() '((eval . g$8550$CSxK@) (environment . g$8546$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12079$CSxK@ '(rnrs control) '(6) '() '() '() '((do . g$11643$CSxK@) (unless . g$11624$CSxK@) (when . g$11623$CSxK@) (case-lambda . g$11618$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12078$CSxK@ '(rnrs r5rs) '(6) '() '() '() '((scheme-report-environment . g$8548$CSxK@) (quotient . g$6681$CSxK@) (null-environment . g$8547$CSxK@) (remainder . g$6682$CSxK@) (modulo . g$6683$CSxK@) (inexact->exact . g$6678$CSxK@) (force . g$6685$CSxK@) (exact->inexact . g$6679$CSxK@) (delay . g$11647$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12077$CSxK@ '(rnrs) '(6) '() '() '() '((string-upcase . g$12030$CSxK@) (string-titlecase . g$12029$CSxK@) (string-normalize-nfkd . g$6749$CSxK@) (string-normalize-nfkc . g$6748$CSxK@) (string-normalize-nfd . g$6747$CSxK@) (string-normalize-nfc . g$6746$CSxK@) (string-foldcase . g$12028$CSxK@) (string-downcase . g$12027$CSxK@) (string-ci>? . g$6733$CSxK@) (string-ci>=? . g$6735$CSxK@) (string-ci=? . g$6731$CSxK@) (string-ci<? . g$6732$CSxK@) (string-ci<=? . g$6734$CSxK@) (char-whitespace? . g$12026$CSxK@) (char-upper-case? . g$12025$CSxK@) (char-title-case? . g$12024$CSxK@) (char-numeric? . g$12023$CSxK@) (char-lower-case? . g$12022$CSxK@) (char-general-category . g$12021$CSxK@) (char-upcase . g$12020$CSxK@) (char-titlecase . g$12019$CSxK@) (char-foldcase . g$12018$CSxK@) (char-downcase . g$12017$CSxK@) (char-ci>? . g$6743$CSxK@) (char-ci>=? . g$6745$CSxK@) (char-ci=? . g$6741$CSxK@) (char-ci<? . g$6742$CSxK@) (char-ci<=? . g$6744$CSxK@) (char-alphabetic? . g$12016$CSxK@) (make-variable-transformer . g$8250$CSxK@) (identifier? . g$8569$CSxK@) (generate-temporaries . g$8558$CSxK@) (free-identifier=? . g$8559$CSxK@) (syntax->datum . g$8571$CSxK@) (datum->syntax . g$8570$CSxK@) (bound-identifier=? . g$8560$CSxK@) (record-type-descriptor? . g$12015$CSxK@) (record-predicate . g$12014$CSxK@) (record-mutator . g$12013$CSxK@) (record-constructor . g$12012$CSxK@) (record-accessor . g$12011$CSxK@) (make-record-type-descriptor . g$12010$CSxK@) (make-record-constructor-descriptor . g$12009$CSxK@) (record? . g$12008$CSxK@) (record-type-uid . g$12007$CSxK@) (record-type-sealed? . g$12006$CSxK@) (record-type-parent . g$12005$CSxK@) (record-type-opaque? . g$12004$CSxK@) (record-type-name . g$12003$CSxK@) (record-type-generative? . g$12002$CSxK@) (record-type-field-names . g$12001$CSxK@) (record-rtd . g$12000$CSxK@) (record-field-mutable? . g$11999$CSxK@) (delete-file . g$6117$CSxK@) (file-exists? . g$6116$CSxK@) (vector-sort! . g$11998$CSxK@) (vector-sort . g$11997$CSxK@) (list-sort . g$6702$CSxK@) (symbol-hash . g$11996$CSxK@) (string-ci-hash . g$11995$CSxK@) (string-hash . g$11994$CSxK@) (equal-hash . g$11993$CSxK@) (hashtable-equivalence-function . g$11992$CSxK@) (make-hashtable . g$11991$CSxK@) (hashtable-hash-function . g$11990$CSxK@) (make-eqv-hashtable . g$6085$CSxK@) (make-eq-hashtable . g$6084$CSxK@) (hashtable? . g$11989$CSxK@) (hashtable-update! . g$6091$CSxK@) (hashtable-size . g$6086$CSxK@) (hashtable-set! . g$6088$CSxK@) (hashtable-ref . g$6087$CSxK@) (hashtable-mutable? . g$11988$CSxK@) (hashtable-keys . g$11987$CSxK@) (hashtable-entries . g$11986$CSxK@) (hashtable-delete! . g$6089$CSxK@) (hashtable-copy . g$11985$CSxK@) (hashtable-contains? . g$6090$CSxK@) (hashtable-clear! . g$6092$CSxK@) (call-with-output-file . g$7075$CSxK@) (call-with-input-file . g$7074$CSxK@) (write-char . g$7066$CSxK@) (write . g$11984$CSxK@) (with-output-to-file . g$7073$CSxK@) (with-input-from-file . g$7072$CSxK@) (read-char . g$7065$CSxK@) (read . g$11983$CSxK@) (peek-char . g$7064$CSxK@) (open-output-file . g$11982$CSxK@) (open-input-file . g$11981$CSxK@) (newline . g$7076$CSxK@) (display . g$11980$CSxK@) (close-output-port . g$11979$CSxK@) (close-input-port . g$11978$CSxK@) (eof-object? . g$11977$CSxK@) (eof-object . g$11976$CSxK@) (current-error-port . g$11975$CSxK@) (current-output-port . g$11974$CSxK@) (current-input-port . g$11973$CSxK@) (output-port? . g$11972$CSxK@) (input-port? . g$11971$CSxK@) (utf-8-codec . g$11970$CSxK@) (utf-16-codec . g$11969$CSxK@) (transcoder-error-handling-mode . g$11968$CSxK@) (transcoder-eol-style . g$11967$CSxK@) (transcoder-codec . g$11966$CSxK@) (transcoded-port . g$11965$CSxK@) (textual-port? . g$11964$CSxK@) (string->bytevector . g$11963$CSxK@) (standard-output-port . g$11962$CSxK@) (standard-input-port . g$11961$CSxK@) (standard-error-port . g$11960$CSxK@) (set-port-position! . g$11959$CSxK@) (put-u8 . g$11958$CSxK@) (put-string . g$11957$CSxK@) (put-datum . g$7044$CSxK@) (put-char . g$11956$CSxK@) (put-bytevector . g$11955$CSxK@) (port? . g$7049$CSxK@) (port-transcoder . g$11954$CSxK@) (port-position . g$11953$CSxK@) (port-has-set-port-position!? . g$11952$CSxK@) (port-has-port-position? . g$11951$CSxK@) (port-eof? . g$11950$CSxK@) (output-port-buffer-mode . g$11949$CSxK@) (open-string-output-port . g$7048$CSxK@) (open-string-input-port . g$11948$CSxK@) (open-file-output-port . g$11947$CSxK@) (open-file-input/output-port . g$11946$CSxK@) (open-file-input-port . g$11945$CSxK@) (open-bytevector-output-port . g$11944$CSxK@) (open-bytevector-input-port . g$11943$CSxK@) (native-transcoder . g$11942$CSxK@) (native-eol-style . g$11941$CSxK@) (make-transcoder . g$11940$CSxK@) (latin-1-codec . g$11939$CSxK@) (make-i/o-write-error . g$6512$CSxK@) (make-i/o-read-error . g$6499$CSxK@) (make-i/o-port-error . g$6607$CSxK@) (make-i/o-invalid-position-error . g$6525$CSxK@) (make-i/o-filename-error . g$6540$CSxK@) (make-i/o-file-protection-error . g$6555$CSxK@) (make-i/o-file-is-read-only-error . g$6568$CSxK@) (make-i/o-file-does-not-exist-error . g$6594$CSxK@) (make-i/o-file-already-exists-error . g$6581$CSxK@) (make-i/o-error . g$6486$CSxK@) (make-i/o-encoding-error . g$6635$CSxK@) (make-i/o-decoding-error . g$6622$CSxK@) (make-custom-textual-output-port . g$11938$CSxK@) (make-custom-textual-input/output-port . g$11937$CSxK@) (make-custom-textual-input-port . g$11936$CSxK@) (make-custom-binary-output-port . g$11935$CSxK@) (make-custom-binary-input/output-port . g$11934$CSxK@) (make-custom-binary-input-port . g$11933$CSxK@) (make-bytevector . g$11932$CSxK@) (lookahead-u8 . g$11931$CSxK@) (lookahead-char . g$11930$CSxK@) (i/o-write-error? . g$6513$CSxK@) (i/o-read-error? . g$6500$CSxK@) (i/o-port-error? . g$6609$CSxK@) (i/o-invalid-position-error? . g$6527$CSxK@) (i/o-error-position . g$6528$CSxK@) (i/o-filename-error? . g$6542$CSxK@) (i/o-file-protection-error? . g$6556$CSxK@) (i/o-file-is-read-only-error? . g$6569$CSxK@) (i/o-file-does-not-exist-error? . g$6595$CSxK@) (i/o-file-already-exists-error? . g$6582$CSxK@) (i/o-error? . g$6487$CSxK@) (i/o-error-port . g$6610$CSxK@) (i/o-error-filename . g$6543$CSxK@) (i/o-encoding-error? . g$6637$CSxK@) (i/o-encoding-error-char . g$6638$CSxK@) (i/o-decoding-error? . g$6623$CSxK@) (get-u8 . g$11929$CSxK@) (get-string-n! . g$11928$CSxK@) (get-string-n . g$11927$CSxK@) (get-string-all . g$11926$CSxK@) (get-line . g$11925$CSxK@) (get-datum . g$7045$CSxK@) (get-char . g$11924$CSxK@) (get-bytevector-some . g$11923$CSxK@) (get-bytevector-n! . g$11922$CSxK@) (get-bytevector-n . g$11921$CSxK@) (get-bytevector-all . g$11920$CSxK@) (flush-output-port . g$11919$CSxK@) (close-port . g$11918$CSxK@) (call-with-string-output-port . g$7050$CSxK@) (call-with-port . g$7051$CSxK@) (call-with-bytevector-output-port . g$11917$CSxK@) (bytevector->string . g$11916$CSxK@) (buffer-mode? . g$11915$CSxK@) (binary-port? . g$11914$CSxK@) (exit . g$11913$CSxK@) (command-line . g$11550$CSxK@) (remove . g$5514$CSxK@) (remv . g$5515$CSxK@) (remp . g$5495$CSxK@) (remq . g$5516$CSxK@) (partition . g$5494$CSxK@) (memv . g$5502$CSxK@) (memq . g$5501$CSxK@) (memp . g$5504$CSxK@) (member . g$5503$CSxK@) (exists . g$5508$CSxK@) (for-all . g$5507$CSxK@) (fold-right . g$5513$CSxK@) (fold-left . g$5512$CSxK@) (find . g$5493$CSxK@) (filter . g$5496$CSxK@) (cons* . g$5511$CSxK@) (assv . g$5498$CSxK@) (assq . g$5497$CSxK@) (assp . g$5500$CSxK@) (assoc . g$5499$CSxK@) (with-exception-handler . g$6238$CSxK@) (raise-continuable . g$6241$CSxK@) (raise . g$6240$CSxK@) (make-enumeration . g$7136$CSxK@) (enum-set=? . g$7143$CSxK@) (enum-set-universe . g$7137$CSxK@) (enum-set-union . g$7144$CSxK@) (enum-set-subset? . g$7142$CSxK@) (enum-set-projection . g$7148$CSxK@) (enum-set-member? . g$7141$CSxK@) (enum-set-intersection . g$7145$CSxK@) (enum-set-indexer . g$7138$CSxK@) (enum-set-difference . g$7146$CSxK@) (enum-set-constructor . g$7139$CSxK@) (enum-set-complement . g$7147$CSxK@) (enum-set->list . g$7140$CSxK@) (who-condition? . g$6404$CSxK@) (warning? . g$6323$CSxK@) (violation? . g$6362$CSxK@) (undefined-violation? . g$6474$CSxK@) (syntax-violation? . g$6459$CSxK@) (syntax-violation-subform . g$6461$CSxK@) (syntax-violation-form . g$6460$CSxK@) (syntax-violation . g$8568$CSxK@) (simple-conditions . g$11908$CSxK@) (serious-condition? . g$6336$CSxK@) (non-continuable-violation? . g$6418$CSxK@) (message-condition? . g$6309$CSxK@) (make-who-condition . g$6402$CSxK@) (make-warning . g$6322$CSxK@) (make-violation . g$6361$CSxK@) (make-undefined-violation . g$6473$CSxK@) (make-syntax-violation . g$6456$CSxK@) (make-serious-condition . g$6335$CSxK@) (make-non-continuable-violation . g$6417$CSxK@) (make-message-condition . g$6307$CSxK@) (make-lexical-violation . g$6443$CSxK@) (make-irritants-condition . g$6387$CSxK@) (make-implementation-restriction-violation . g$6430$CSxK@) (make-error . g$6348$CSxK@) (make-assertion-violation . g$6374$CSxK@) (lexical-violation? . g$6444$CSxK@) (irritants-condition? . g$6389$CSxK@) (implementation-restriction-violation? . g$6431$CSxK@) (error? . g$6349$CSxK@) (condition-who . g$6405$CSxK@) (condition-predicate . g$11907$CSxK@) (condition-message . g$6310$CSxK@) (condition-irritants . g$6390$CSxK@) (condition-accessor . g$11906$CSxK@) (condition . g$11905$CSxK@) (assertion-violation? . g$6375$CSxK@) (condition? . g$11904$CSxK@) (utf32->string . g$11903$CSxK@) (utf16->string . g$11902$CSxK@) (utf8->string . g$11901$CSxK@) (uint-list->bytevector . g$11900$CSxK@) (u8-list->bytevector . g$11899$CSxK@) (string->utf8 . g$11898$CSxK@) (string->utf32 . g$11897$CSxK@) (string->utf16 . g$11896$CSxK@) (sint-list->bytevector . g$11895$CSxK@) (native-endianness . g$6123$CSxK@) (bytevector? . g$5813$CSxK@) (bytevector=? . g$11894$CSxK@) (bytevector-uint-set! . g$11893$CSxK@) (bytevector-uint-ref . g$11892$CSxK@) (bytevector-u8-set! . g$11891$CSxK@) (bytevector-u8-ref . g$11890$CSxK@) (bytevector-u64-set! . g$6144$CSxK@) (bytevector-u64-ref . g$6140$CSxK@) (bytevector-u64-native-set! . g$6146$CSxK@) (bytevector-u64-native-ref . g$6142$CSxK@) (bytevector-u32-set! . g$6136$CSxK@) (bytevector-u32-ref . g$6132$CSxK@) (bytevector-u32-native-set! . g$6138$CSxK@) (bytevector-u32-native-ref . g$6134$CSxK@) (bytevector-u16-set! . g$6128$CSxK@) (bytevector-u16-ref . g$6124$CSxK@) (bytevector-u16-native-set! . g$6130$CSxK@) (bytevector-u16-native-ref . g$6126$CSxK@) (bytevector-sint-set! . g$11889$CSxK@) (bytevector-sint-ref . g$11888$CSxK@) (bytevector-s8-set! . g$11887$CSxK@) (bytevector-s8-ref . g$11886$CSxK@) (bytevector-s64-set! . g$6145$CSxK@) (bytevector-s64-ref . g$6141$CSxK@) (bytevector-s64-native-set! . g$6147$CSxK@) (bytevector-s64-native-ref . g$6143$CSxK@) (bytevector-s32-set! . g$6137$CSxK@) (bytevector-s32-ref . g$6133$CSxK@) (bytevector-s32-native-set! . g$6139$CSxK@) (bytevector-s32-native-ref . g$6135$CSxK@) (bytevector-s16-set! . g$6129$CSxK@) (bytevector-s16-ref . g$6125$CSxK@) (bytevector-s16-native-set! . g$6131$CSxK@) (bytevector-s16-native-ref . g$6127$CSxK@) (bytevector-length . g$11885$CSxK@) (bytevector-ieee-single-set! . g$11884$CSxK@) (bytevector-ieee-single-ref . g$11883$CSxK@) (bytevector-ieee-single-native-set! . g$6150$CSxK@) (bytevector-ieee-single-native-ref . g$6148$CSxK@) (bytevector-ieee-double-set! . g$11882$CSxK@) (bytevector-ieee-double-ref . g$11881$CSxK@) (bytevector-ieee-double-native-set! . g$6151$CSxK@) (bytevector-ieee-double-native-ref . g$6149$CSxK@) (bytevector-fill! . g$11880$CSxK@) (bytevector-copy! . g$11879$CSxK@) (bytevector-copy . g$11878$CSxK@) (bytevector->uint-list . g$11877$CSxK@) (bytevector->u8-list . g$11876$CSxK@) (bytevector->sint-list . g$11875$CSxK@) (no-nans-violation? . g$6664$CSxK@) (no-infinities-violation? . g$6651$CSxK@) (make-no-nans-violation . g$6663$CSxK@) (make-no-infinities-violation . g$6650$CSxK@) (real->flonum . g$11874$CSxK@) (flzero? . g$6964$CSxK@) (fltruncate . g$6959$CSxK@) (fltan . g$6949$CSxK@) (flsqrt . g$6954$CSxK@) (flsin . g$6947$CSxK@) (flround . g$6960$CSxK@) (flpositive? . g$6962$CSxK@) (flonum? . g$5818$CSxK@) (flodd? . g$6966$CSxK@) (flnumerator . g$11873$CSxK@) (flnegative? . g$6963$CSxK@) (flnan? . g$6946$CSxK@) (flmod0 . g$6942$CSxK@) (flmod . g$6941$CSxK@) (flmin . g$6968$CSxK@) (flmax . g$6967$CSxK@) (fllog . g$6953$CSxK@) (flinteger? . g$6943$CSxK@) (flinfinite? . g$6945$CSxK@) (flfloor . g$6958$CSxK@) (flfinite? . g$6944$CSxK@) (flexpt . g$6956$CSxK@) (flexp . g$6955$CSxK@) (fleven? . g$6965$CSxK@) (fldiv0-and-mod0 . g$6938$CSxK@) (fldiv0 . g$6940$CSxK@) (fldiv-and-mod . g$6937$CSxK@) (fldiv . g$6939$CSxK@) (fldenominator . g$11872$CSxK@) (flcos . g$6948$CSxK@) (flceiling . g$6957$CSxK@) (flatan . g$6952$CSxK@) (flasin . g$6950$CSxK@) (flacos . g$6951$CSxK@) (flabs . g$6961$CSxK@) (fl>? . g$11871$CSxK@) (fl>=? . g$11870$CSxK@) (fl=? . g$11869$CSxK@) (fl<? . g$11868$CSxK@) (fl<=? . g$11867$CSxK@) (fl/ . g$11866$CSxK@) (fl- . g$11865$CSxK@) (fl+ . g$11864$CSxK@) (fl* . g$11863$CSxK@) (fixnum->flonum . g$11862$CSxK@) (fxzero? . g$6845$CSxK@) (fxxor . g$11861$CSxK@) (fxrotate-bit-field . g$6859$CSxK@) (fxreverse-bit-field . g$11860$CSxK@) (fxpositive? . g$6843$CSxK@) (fxodd? . g$6847$CSxK@) (fxnot . g$11859$CSxK@) (fxnegative? . g$6844$CSxK@) (fxmod0 . g$6842$CSxK@) (fxmod . g$6841$CSxK@) (fxmin . g$6849$CSxK@) (fxmax . g$6848$CSxK@) (fxlength . g$11858$CSxK@) (fxior . g$11857$CSxK@) (fxif . g$6853$CSxK@) (fxfirst-bit-set . g$11856$CSxK@) (fxeven? . g$6846$CSxK@) (fxdiv0-and-mod0 . g$11855$CSxK@) (fxdiv0 . g$6840$CSxK@) (fxdiv-and-mod . g$11854$CSxK@) (fxdiv . g$6839$CSxK@) (fxcopy-bit-field . g$6856$CSxK@) (fxcopy-bit . g$6854$CSxK@) (fxbit-set? . g$11853$CSxK@) (fxbit-field . g$6855$CSxK@) (fxbit-count . g$11852$CSxK@) (fxarithmetic-shift-right . g$6858$CSxK@) (fxarithmetic-shift-left . g$6857$CSxK@) (fxarithmetic-shift . g$11851$CSxK@) (fxand . g$11850$CSxK@) (fx>? . g$11849$CSxK@) (fx>=? . g$11848$CSxK@) (fx=? . g$11847$CSxK@) (fx<? . g$11846$CSxK@) (fx<=? . g$11845$CSxK@) (fx-/carry . g$6851$CSxK@) (fx- . g$11844$CSxK@) (fx+/carry . g$6852$CSxK@) (fx+ . g$11843$CSxK@) (fx*/carry . g$6850$CSxK@) (fx* . g$11842$CSxK@) (greatest-fixnum . g$11841$CSxK@) (least-fixnum . g$11840$CSxK@) (fixnum-width . g$5819$CSxK@) (fixnum? . g$5817$CSxK@) (bitwise-rotate-bit-field . g$6813$CSxK@) (bitwise-reverse-bit-field . g$11839$CSxK@) (bitwise-length . g$11838$CSxK@) (bitwise-if . g$6807$CSxK@) (bitwise-first-bit-set . g$11837$CSxK@) (bitwise-copy-bit-field . g$6810$CSxK@) (bitwise-copy-bit . g$6808$CSxK@) (bitwise-bit-set? . g$11836$CSxK@) (bitwise-bit-field . g$6809$CSxK@) (bitwise-bit-count . g$11835$CSxK@) (bitwise-xor . g$11834$CSxK@) (bitwise-ior . g$11833$CSxK@) (bitwise-and . g$11832$CSxK@) (bitwise-not . g$11831$CSxK@) (bitwise-arithmetic-shift-right . g$6812$CSxK@) (bitwise-arithmetic-shift-left . g$6811$CSxK@) (bitwise-arithmetic-shift . g$11830$CSxK@) (zero? . g$5852$CSxK@) (vector? . g$5812$CSxK@) (vector-set! . g$11829$CSxK@) (vector-ref . g$11828$CSxK@) (vector-map . g$5884$CSxK@) (vector-length . g$11827$CSxK@) (vector-for-each . g$5885$CSxK@) (vector-fill! . g$5820$CSxK@) (vector->list . g$11826$CSxK@) (vector . g$11825$CSxK@) (values . g$11824$CSxK@) (truncate . g$11823$CSxK@) (tan . g$11822$CSxK@) (symbol? . g$5814$CSxK@) (symbol=? . g$5869$CSxK@) (symbol->string . g$11821$CSxK@) (substring . g$11820$CSxK@) (string? . g$11819$CSxK@) (string>? . g$5866$CSxK@) (string>=? . g$5868$CSxK@) (string=? . g$5864$CSxK@) (string<? . g$5865$CSxK@) (string<=? . g$5867$CSxK@) (string-ref . g$11818$CSxK@) (string-length . g$11817$CSxK@) (string-for-each . g$5886$CSxK@) (string-copy . g$11816$CSxK@) (string-append . g$11815$CSxK@) (string->symbol . g$11814$CSxK@) (string->number . g$11813$CSxK@) (string->list . g$11812$CSxK@) (string . g$11811$CSxK@) (sqrt . g$11810$CSxK@) (sin . g$11809$CSxK@) (round . g$11808$CSxK@) (reverse . g$5821$CSxK@) (real? . g$11807$CSxK@) (real-valued? . g$11806$CSxK@) (real-part . g$11805$CSxK@) (rationalize . g$5881$CSxK@) (rational? . g$11804$CSxK@) (rational-valued? . g$11803$CSxK@) (procedure? . g$5816$CSxK@) (positive? . g$5850$CSxK@) (pair? . g$11802$CSxK@) (odd? . g$5854$CSxK@) (numerator . g$11801$CSxK@) (number? . g$11800$CSxK@) (number->string . g$11799$CSxK@) (null? . g$11798$CSxK@) (not . g$11797$CSxK@) (negative? . g$5851$CSxK@) (nan? . g$11796$CSxK@) (min . g$5856$CSxK@) (max . g$5855$CSxK@) (map . g$5509$CSxK@) (make-vector . g$11795$CSxK@) (make-string . g$11794$CSxK@) (make-rectangular . g$11793$CSxK@) (make-polar . g$11792$CSxK@) (magnitude . g$11791$CSxK@) (log . g$11790$CSxK@) (list? . g$11789$CSxK@) (list-tail . g$5489$CSxK@) (list-ref . g$5490$CSxK@) (list->vector . g$5809$CSxK@) (list->string . g$5810$CSxK@) (list . g$11788$CSxK@) (length . g$11787$CSxK@) (lcm . g$5858$CSxK@) (integer? . g$11786$CSxK@) (integer-valued? . g$11785$CSxK@) (integer->char . g$11784$CSxK@) (infinite? . g$11783$CSxK@) (inexact? . g$11782$CSxK@) (inexact . g$11781$CSxK@) (imag-part . g$11780$CSxK@) (gcd . g$5857$CSxK@) (for-each . g$5510$CSxK@) (floor . g$11779$CSxK@) (finite? . g$11778$CSxK@) (expt . g$11777$CSxK@) (exp . g$11776$CSxK@) (exact? . g$11775$CSxK@) (exact-integer-sqrt . g$11774$CSxK@) (exact . g$11773$CSxK@) (even? . g$5853$CSxK@) (error . g$6243$CSxK@) (eqv? . g$11772$CSxK@) (equal? . g$11771$CSxK@) (eq? . g$11770$CSxK@) (dynamic-wind . g$11769$CSxK@) (div0-and-mod0 . g$11768$CSxK@) (mod0 . g$5808$CSxK@) (div0 . g$5806$CSxK@) (div-and-mod . g$11767$CSxK@) (mod . g$5807$CSxK@) (div . g$5805$CSxK@) (denominator . g$11766$CSxK@) (cos . g$11765$CSxK@) (cons . g$11764$CSxK@) (complex? . g$11763$CSxK@) (char? . g$5811$CSxK@) (char>? . g$5878$CSxK@) (char>=? . g$5880$CSxK@) (char=? . g$5876$CSxK@) (char<? . g$5877$CSxK@) (char<=? . g$5879$CSxK@) (char->integer . g$11762$CSxK@) (ceiling . g$11761$CSxK@) (call-with-values . g$11760$CSxK@) (call/cc . g$11759$CSxK@) (call-with-current-continuation . g$11758$CSxK@) (cddddr . g$5849$CSxK@) (cdddar . g$5848$CSxK@) (cddadr . g$5847$CSxK@) (cddaar . g$5846$CSxK@) (cdaddr . g$5845$CSxK@) (cdadar . g$5844$CSxK@) (cdaadr . g$5843$CSxK@) (cdaaar . g$5842$CSxK@) (cadddr . g$5841$CSxK@) (caddar . g$5840$CSxK@) (cadadr . g$5839$CSxK@) (cadaar . g$5838$CSxK@) (caaddr . g$5837$CSxK@) (caadar . g$5836$CSxK@) (caaadr . g$5835$CSxK@) (caaaar . g$5834$CSxK@) (cdddr . g$5833$CSxK@) (cddar . g$5832$CSxK@) (cdadr . g$5831$CSxK@) (cdaar . g$5830$CSxK@) (caddr . g$5829$CSxK@) (cadar . g$5828$CSxK@) (caadr . g$5827$CSxK@) (caaar . g$5826$CSxK@) (cddr . g$5825$CSxK@) (cdar . g$5824$CSxK@) (cadr . g$5823$CSxK@) (caar . g$5822$CSxK@) (cdr . g$11757$CSxK@) (car . g$11756$CSxK@) (boolean? . g$5815$CSxK@) (boolean=? . g$5870$CSxK@) (atan . g$11755$CSxK@) (assertion-violation . g$6242$CSxK@) (asin . g$11754$CSxK@) (apply . g$11753$CSxK@) (append . g$11752$CSxK@) (angle . g$11751$CSxK@) (acos . g$11750$CSxK@) (abs . g$11749$CSxK@) (/ . g$11748$CSxK@) (* . g$11747$CSxK@) (- . g$11746$CSxK@) (+ . g$11745$CSxK@) (>= . g$11744$CSxK@) (> . g$11743$CSxK@) (= . g$11742$CSxK@) (<= . g$11741$CSxK@) (< . g$11740$CSxK@) (&no-nans . g$11707$CSxK@) (&no-infinities . g$11706$CSxK@) (&i/o-encoding . g$11705$CSxK@) (&i/o-decoding . g$11704$CSxK@) (&i/o-port . g$11703$CSxK@) (&i/o-file-does-not-exist . g$11702$CSxK@) (&i/o-file-already-exists . g$11701$CSxK@) (&i/o-file-is-read-only . g$11700$CSxK@) (&i/o-file-protection . g$11699$CSxK@) (&i/o-filename . g$11698$CSxK@) (&i/o-invalid-position . g$11697$CSxK@) (&i/o-write . g$11696$CSxK@) (&i/o-read . g$11695$CSxK@) (&i/o . g$11694$CSxK@) (&non-continuable . g$11693$CSxK@) (&undefined . g$11692$CSxK@) (&syntax . g$11691$CSxK@) (&lexical . g$11690$CSxK@) (&implementation-restriction . g$11689$CSxK@) (&who . g$11688$CSxK@) (&irritants . g$11687$CSxK@) (&assertion . g$11686$CSxK@) (&violation . g$11685$CSxK@) (&error . g$11684$CSxK@) (&serious . g$11683$CSxK@) (&warning . g$11682$CSxK@) (&message . g$11681$CSxK@) (&condition . g$11680$CSxK@) (define-condition-type . g$11679$CSxK@) (define-enumeration . g$11678$CSxK@) (define-record-type . g$11677$CSxK@) (parent-rtd . g$11676$CSxK@) (nongenerative . g$11675$CSxK@) (opaque . g$11674$CSxK@) (sealed . g$11673$CSxK@) (protocol . g$11672$CSxK@) (parent . g$11671$CSxK@) (immutable . g$11670$CSxK@) (mutable . g$11669$CSxK@) (fields . g$11668$CSxK@) (error-handling-mode . g$11667$CSxK@) (file-options . g$11666$CSxK@) (buffer-mode . g$11665$CSxK@) (eol-style . g$11664$CSxK@) (guard . g$11663$CSxK@) (unsyntax-splicing . g$11657$CSxK@) (unsyntax . g$11656$CSxK@) (unquote-splicing . g$11655$CSxK@) (unquote . g$11654$CSxK@) (_ . g$11653$CSxK@) (else . g$11652$CSxK@) (=> . g$11651$CSxK@) (... . g$11650$CSxK@) (assert . g$11649$CSxK@) (endianness . g$11648$CSxK@) (or . g$11645$CSxK@) (and . g$11644$CSxK@) (do . g$11643$CSxK@) (cond . g$11642$CSxK@) (let* . g$11641$CSxK@) (let . g$11640$CSxK@) (identifier-syntax . g$11639$CSxK@) (with-syntax . g$11638$CSxK@) (quasisyntax . g$11637$CSxK@) (quasiquote . g$11636$CSxK@) (syntax-rules . g$11635$CSxK@) (let-values . g$11631$CSxK@) (let*-values . g$11630$CSxK@) (record-constructor-descriptor . g$11629$CSxK@) (record-type-descriptor . g$11628$CSxK@) (case . g$11626$CSxK@) (unless . g$11624$CSxK@) (when . g$11623$CSxK@) (if . g$11622$CSxK@) (letrec* . g$11621$CSxK@) (letrec . g$11620$CSxK@) (case-lambda . g$11618$CSxK@) (lambda . g$11617$CSxK@) (syntax . g$11616$CSxK@) (syntax-case . g$11615$CSxK@) (quote . g$11614$CSxK@) (letrec-syntax . g$11612$CSxK@) (let-syntax . g$11611$CSxK@) (set! . g$11610$CSxK@) (begin . g$11606$CSxK@) (define-syntax . g$11604$CSxK@) (define . g$11603$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12076$CSxK@ '(psyntax scheme-report-environment-5) '() '() '() '() '((char-ready? . g$12031$CSxK@) (string-ci>? . g$6733$CSxK@) (string-ci>=? . g$6735$CSxK@) (string-ci=? . g$6731$CSxK@) (string-ci<? . g$6732$CSxK@) (string-ci<=? . g$6734$CSxK@) (char-whitespace? . g$12026$CSxK@) (char-upper-case? . g$12025$CSxK@) (char-numeric? . g$12023$CSxK@) (char-lower-case? . g$12022$CSxK@) (char-upcase . g$12020$CSxK@) (char-downcase . g$12017$CSxK@) (char-ci>? . g$6743$CSxK@) (char-ci>=? . g$6745$CSxK@) (char-ci=? . g$6741$CSxK@) (char-ci<? . g$6742$CSxK@) (char-ci<=? . g$6744$CSxK@) (char-alphabetic? . g$12016$CSxK@) (call-with-output-file . g$7075$CSxK@) (call-with-input-file . g$7074$CSxK@) (write-char . g$7066$CSxK@) (write . g$11984$CSxK@) (with-output-to-file . g$7073$CSxK@) (with-input-from-file . g$7072$CSxK@) (read-char . g$7065$CSxK@) (read . g$11983$CSxK@) (peek-char . g$7064$CSxK@) (open-output-file . g$11982$CSxK@) (open-input-file . g$11981$CSxK@) (newline . g$7076$CSxK@) (display . g$11980$CSxK@) (close-output-port . g$11979$CSxK@) (close-input-port . g$11978$CSxK@) (eof-object? . g$11977$CSxK@) (current-error-port . g$11975$CSxK@) (current-output-port . g$11974$CSxK@) (current-input-port . g$11973$CSxK@) (output-port? . g$11972$CSxK@) (input-port? . g$11971$CSxK@) (scheme-report-environment . g$8548$CSxK@) (quotient . g$6681$CSxK@) (null-environment . g$8547$CSxK@) (remainder . g$6682$CSxK@) (modulo . g$6683$CSxK@) (inexact->exact . g$6678$CSxK@) (force . g$6685$CSxK@) (exact->inexact . g$6679$CSxK@) (string-fill! . g$11912$CSxK@) (string-set! . g$11911$CSxK@) (set-cdr! . g$11910$CSxK@) (set-car! . g$11909$CSxK@) (memv . g$5502$CSxK@) (memq . g$5501$CSxK@) (member . g$5503$CSxK@) (assv . g$5498$CSxK@) (assq . g$5497$CSxK@) (assoc . g$5499$CSxK@) (eval . g$8550$CSxK@) (zero? . g$5852$CSxK@) (vector? . g$5812$CSxK@) (vector-set! . g$11829$CSxK@) (vector-ref . g$11828$CSxK@) (vector-length . g$11827$CSxK@) (vector-fill! . g$5820$CSxK@) (vector->list . g$11826$CSxK@) (vector . g$11825$CSxK@) (values . g$11824$CSxK@) (truncate . g$11823$CSxK@) (tan . g$11822$CSxK@) (symbol? . g$5814$CSxK@) (symbol->string . g$11821$CSxK@) (substring . g$11820$CSxK@) (string? . g$11819$CSxK@) (string>? . g$5866$CSxK@) (string>=? . g$5868$CSxK@) (string=? . g$5864$CSxK@) (string<? . g$5865$CSxK@) (string<=? . g$5867$CSxK@) (string-ref . g$11818$CSxK@) (string-length . g$11817$CSxK@) (string-copy . g$11816$CSxK@) (string-append . g$11815$CSxK@) (string->symbol . g$11814$CSxK@) (string->number . g$11813$CSxK@) (string->list . g$11812$CSxK@) (string . g$11811$CSxK@) (sqrt . g$11810$CSxK@) (sin . g$11809$CSxK@) (round . g$11808$CSxK@) (reverse . g$5821$CSxK@) (real? . g$11807$CSxK@) (real-part . g$11805$CSxK@) (rationalize . g$5881$CSxK@) (rational? . g$11804$CSxK@) (procedure? . g$5816$CSxK@) (positive? . g$5850$CSxK@) (pair? . g$11802$CSxK@) (odd? . g$5854$CSxK@) (numerator . g$11801$CSxK@) (number? . g$11800$CSxK@) (number->string . g$11799$CSxK@) (null? . g$11798$CSxK@) (not . g$11797$CSxK@) (negative? . g$5851$CSxK@) (min . g$5856$CSxK@) (max . g$5855$CSxK@) (map . g$5509$CSxK@) (make-vector . g$11795$CSxK@) (make-string . g$11794$CSxK@) (make-rectangular . g$11793$CSxK@) (make-polar . g$11792$CSxK@) (magnitude . g$11791$CSxK@) (log . g$11790$CSxK@) (list? . g$11789$CSxK@) (list-tail . g$5489$CSxK@) (list-ref . g$5490$CSxK@) (list->vector . g$5809$CSxK@) (list->string . g$5810$CSxK@) (list . g$11788$CSxK@) (length . g$11787$CSxK@) (lcm . g$5858$CSxK@) (integer? . g$11786$CSxK@) (integer->char . g$11784$CSxK@) (inexact? . g$11782$CSxK@) (imag-part . g$11780$CSxK@) (gcd . g$5857$CSxK@) (for-each . g$5510$CSxK@) (floor . g$11779$CSxK@) (expt . g$11777$CSxK@) (exp . g$11776$CSxK@) (exact? . g$11775$CSxK@) (even? . g$5853$CSxK@) (eqv? . g$11772$CSxK@) (equal? . g$11771$CSxK@) (eq? . g$11770$CSxK@) (dynamic-wind . g$11769$CSxK@) (denominator . g$11766$CSxK@) (cos . g$11765$CSxK@) (cons . g$11764$CSxK@) (complex? . g$11763$CSxK@) (char? . g$5811$CSxK@) (char>? . g$5878$CSxK@) (char>=? . g$5880$CSxK@) (char=? . g$5876$CSxK@) (char<? . g$5877$CSxK@) (char<=? . g$5879$CSxK@) (char->integer . g$11762$CSxK@) (ceiling . g$11761$CSxK@) (call-with-values . g$11760$CSxK@) (call-with-current-continuation . g$11758$CSxK@) (cddddr . g$5849$CSxK@) (cdddar . g$5848$CSxK@) (cddadr . g$5847$CSxK@) (cddaar . g$5846$CSxK@) (cdaddr . g$5845$CSxK@) (cdadar . g$5844$CSxK@) (cdaadr . g$5843$CSxK@) (cdaaar . g$5842$CSxK@) (cadddr . g$5841$CSxK@) (caddar . g$5840$CSxK@) (cadadr . g$5839$CSxK@) (cadaar . g$5838$CSxK@) (caaddr . g$5837$CSxK@) (caadar . g$5836$CSxK@) (caaadr . g$5835$CSxK@) (caaaar . g$5834$CSxK@) (cdddr . g$5833$CSxK@) (cddar . g$5832$CSxK@) (cdadr . g$5831$CSxK@) (cdaar . g$5830$CSxK@) (caddr . g$5829$CSxK@) (cadar . g$5828$CSxK@) (caadr . g$5827$CSxK@) (caaar . g$5826$CSxK@) (cddr . g$5825$CSxK@) (cdar . g$5824$CSxK@) (cadr . g$5823$CSxK@) (caar . g$5822$CSxK@) (cdr . g$11757$CSxK@) (car . g$11756$CSxK@) (boolean? . g$5815$CSxK@) (atan . g$11755$CSxK@) (asin . g$11754$CSxK@) (apply . g$11753$CSxK@) (append . g$11752$CSxK@) (angle . g$11751$CSxK@) (acos . g$11750$CSxK@) (abs . g$11749$CSxK@) (/ . g$11748$CSxK@) (* . g$11747$CSxK@) (- . g$11746$CSxK@) (+ . g$11745$CSxK@) (>= . g$11744$CSxK@) (> . g$11743$CSxK@) (= . g$11742$CSxK@) (<= . g$11741$CSxK@) (< . g$11740$CSxK@) (unquote-splicing . g$11655$CSxK@) (unquote . g$11654$CSxK@) (else . g$11652$CSxK@) (=> . g$11651$CSxK@) (... . g$11650$CSxK@) (delay . g$11647$CSxK@) (or . g$11645$CSxK@) (and . g$11644$CSxK@) (do . g$11643$CSxK@) (cond . g$11642$CSxK@) (let* . g$11641$CSxK@) (let . g$11640$CSxK@) (quasiquote . g$11636$CSxK@) (syntax-rules . g$11635$CSxK@) (case . g$11626$CSxK@) (if . g$11622$CSxK@) (letrec . g$11620$CSxK@) (lambda . g$11617$CSxK@) (quote . g$11614$CSxK@) (letrec-syntax . g$11612$CSxK@) (let-syntax . g$11611$CSxK@) (set! . g$11610$CSxK@) (begin . g$11606$CSxK@) (define-syntax . g$11604$CSxK@) (define . g$11603$CSxK@)) '() values values '#f '#f '#f '#f))) 'g$12075$CSxK@ '(psyntax null-environment-5) '() '() '() '() '((unquote-splicing . g$11655$CSxK@) (unquote . g$11654$CSxK@) (else . g$11652$CSxK@) (=> . g$11651$CSxK@) (delay . g$11647$CSxK@) (or . g$11645$CSxK@) (and . g$11644$CSxK@) (do . g$11643$CSxK@) (cond . g$11642$CSxK@) (let* . g$11641$CSxK@) (let . g$11640$CSxK@) (quasiquote . g$11636$CSxK@) (syntax-rules . g$11635$CSxK@) (case . g$11626$CSxK@) (if . g$11622$CSxK@) (letrec . g$11620$CSxK@) (lambda . g$11617$CSxK@) (quote . g$11614$CSxK@) (letrec-syntax . g$11612$CSxK@) (let-syntax . g$11611$CSxK@) (set! . g$11610$CSxK@) (begin . g$11606$CSxK@) (define-syntax . g$11604$CSxK@) (define . g$11603$CSxK@)) '() values values '#f '#f '#f '#f))) 'g$12074$CSxK@ '(ironscheme clr internal) '() '() '() '() '((define-clr-class-internal . g$12053$CSxK@) (clr-field-set!-internal . g$12052$CSxK@) (clr-field-get-internal . g$12051$CSxK@) (clr-cast-internal . g$12050$CSxK@) (clr-call-internal . g$12049$CSxK@) (clr-new-internal . g$12048$CSxK@) (clr-new-array-internal . g$12047$CSxK@) (clr-is-internal . g$12046$CSxK@) (clr-reference-internal . g$12045$CSxK@) (clr-using-internal . g$12044$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12073$CSxK@ '(ironscheme records printer) '() '() '() '() '((make-record-printer . g$11739$CSxK@)) '() values values '#f '#f '#t '#f))) 'g$12072$CSxK@ '(ironscheme core) '() '() '() '() '((string-normalize . g$12032$CSxK@) (variable-transformer-procedure . g$8253$CSxK@) (variable-transformer? . g$8252$CSxK@) (eqv-hash . g$11738$CSxK@) (reverse! . g$11737$CSxK@) (make-promise . g$6684$CSxK@) (format . g$7224$CSxK@) (get-command-line . g$11726$CSxK@) (make-traced-procedure . g$11715$CSxK@) (make-traced-macro . g$7244$CSxK@) (assertion-error . g$8564$CSxK@) (library-locator . g$11713$CSxK@) (get-library-paths . g$11712$CSxK@) (library-path . g$7870$CSxK@)) '() values values '#f '#f '#f '#f))) 'g$12071$CSxK@ '(ironscheme serialization) '() '() '() '() '((load-serialized-library . g$12034$CSxK@) (serialize-library . g$12033$CSxK@)) '() values values '#f '#f '#f '#f))) 'g$12070$CSxK@ '(ironscheme reader) '() '() '() '() '((annotation-stripped . g$12066$CSxK@) (annotation-source . g$12065$CSxK@) (annotation-expression . g$12064$CSxK@) (annotation? . g$12063$CSxK@) (read-annotated . g$12062$CSxK@)) '() values values '#f '#f '#f '#f))) 'g$12069$CSxK@ '(ironscheme library) '() '() '() '() '((get-library-paths . g$11712$CSxK@)) '() values values '#f '#f '#f '#f))) 'g$12068$CSxK@ '(ironscheme) '() '() '() '() '((tanh . g$12061$CSxK@) (cosh . g$12060$CSxK@) (sinh . g$12059$CSxK@) (make-guid . g$12058$CSxK@) (unspecified? . g$12057$CSxK@) (make-list . g$5492$CSxK@) (last-pair . g$5491$CSxK@) (load-r5rs . g$12056$CSxK@) (license . g$12055$CSxK@) (stacktrace . g$12054$CSxK@) (ironscheme-build . g$11555$CSxK@) (remove-location . g$12041$CSxK@) (set-symbol-value! . g$12040$CSxK@) (symbol-value . g$12039$CSxK@) (symbol-bound? . g$12038$CSxK@) (ungensym . g$12037$CSxK@) (gensym . g$12036$CSxK@) (void . g$12035$CSxK@) (compile-system-libraries . g$11558$CSxK@) (compile->closure . g$11560$CSxK@) (compile . g$11559$CSxK@) (load . g$11554$CSxK@) (interaction-environment . g$8575$CSxK@) (string-upcase . g$12030$CSxK@) (string-titlecase . g$12029$CSxK@) (string-normalize-nfkd . g$6749$CSxK@) (string-normalize-nfkc . g$6748$CSxK@) (string-normalize-nfd . g$6747$CSxK@) (string-normalize-nfc . g$6746$CSxK@) (string-foldcase . g$12028$CSxK@) (string-downcase . g$12027$CSxK@) (string-ci>? . g$6733$CSxK@) (string-ci>=? . g$6735$CSxK@) (string-ci=? . g$6731$CSxK@) (string-ci<? . g$6732$CSxK@) (string-ci<=? . g$6734$CSxK@) (char-whitespace? . g$12026$CSxK@) (char-upper-case? . g$12025$CSxK@) (char-title-case? . g$12024$CSxK@) (char-numeric? . g$12023$CSxK@) (char-lower-case? . g$12022$CSxK@) (char-general-category . g$12021$CSxK@) (char-upcase . g$12020$CSxK@) (char-titlecase . g$12019$CSxK@) (char-foldcase . g$12018$CSxK@) (char-downcase . g$12017$CSxK@) (char-ci>? . g$6743$CSxK@) (char-ci>=? . g$6745$CSxK@) (char-ci=? . g$6741$CSxK@) (char-ci<? . g$6742$CSxK@) (char-ci<=? . g$6744$CSxK@) (char-alphabetic? . g$12016$CSxK@) (make-variable-transformer . g$8250$CSxK@) (identifier? . g$8569$CSxK@) (generate-temporaries . g$8558$CSxK@) (free-identifier=? . g$8559$CSxK@) (syntax->datum . g$8571$CSxK@) (datum->syntax . g$8570$CSxK@) (bound-identifier=? . g$8560$CSxK@) (record-type-descriptor? . g$12015$CSxK@) (record-predicate . g$12014$CSxK@) (record-mutator . g$12013$CSxK@) (record-constructor . g$12012$CSxK@) (record-accessor . g$12011$CSxK@) (make-record-type-descriptor . g$12010$CSxK@) (make-record-constructor-descriptor . g$12009$CSxK@) (record? . g$12008$CSxK@) (record-type-uid . g$12007$CSxK@) (record-type-sealed? . g$12006$CSxK@) (record-type-parent . g$12005$CSxK@) (record-type-opaque? . g$12004$CSxK@) (record-type-name . g$12003$CSxK@) (record-type-generative? . g$12002$CSxK@) (record-type-field-names . g$12001$CSxK@) (record-rtd . g$12000$CSxK@) (record-field-mutable? . g$11999$CSxK@) (delete-file . g$6117$CSxK@) (file-exists? . g$6116$CSxK@) (vector-sort! . g$11998$CSxK@) (vector-sort . g$11997$CSxK@) (list-sort . g$6702$CSxK@) (symbol-hash . g$11996$CSxK@) (string-ci-hash . g$11995$CSxK@) (string-hash . g$11994$CSxK@) (equal-hash . g$11993$CSxK@) (hashtable-equivalence-function . g$11992$CSxK@) (make-hashtable . g$11991$CSxK@) (hashtable-hash-function . g$11990$CSxK@) (make-eqv-hashtable . g$6085$CSxK@) (make-eq-hashtable . g$6084$CSxK@) (hashtable? . g$11989$CSxK@) (hashtable-update! . g$6091$CSxK@) (hashtable-size . g$6086$CSxK@) (hashtable-set! . g$6088$CSxK@) (hashtable-ref . g$6087$CSxK@) (hashtable-mutable? . g$11988$CSxK@) (hashtable-keys . g$11987$CSxK@) (hashtable-entries . g$11986$CSxK@) (hashtable-delete! . g$6089$CSxK@) (hashtable-copy . g$11985$CSxK@) (hashtable-contains? . g$6090$CSxK@) (hashtable-clear! . g$6092$CSxK@) (call-with-output-file . g$7075$CSxK@) (call-with-input-file . g$7074$CSxK@) (write-char . g$7066$CSxK@) (write . g$11984$CSxK@) (with-output-to-file . g$7073$CSxK@) (with-input-from-file . g$7072$CSxK@) (read-char . g$7065$CSxK@) (read . g$11983$CSxK@) (peek-char . g$7064$CSxK@) (open-output-file . g$11982$CSxK@) (open-input-file . g$11981$CSxK@) (newline . g$7076$CSxK@) (display . g$11980$CSxK@) (close-output-port . g$11979$CSxK@) (close-input-port . g$11978$CSxK@) (eof-object? . g$11977$CSxK@) (eof-object . g$11976$CSxK@) (current-error-port . g$11975$CSxK@) (current-output-port . g$11974$CSxK@) (current-input-port . g$11973$CSxK@) (output-port? . g$11972$CSxK@) (input-port? . g$11971$CSxK@) (utf-8-codec . g$11970$CSxK@) (utf-16-codec . g$11969$CSxK@) (transcoder-error-handling-mode . g$11968$CSxK@) (transcoder-eol-style . g$11967$CSxK@) (transcoder-codec . g$11966$CSxK@) (transcoded-port . g$11965$CSxK@) (textual-port? . g$11964$CSxK@) (string->bytevector . g$11963$CSxK@) (standard-output-port . g$11962$CSxK@) (standard-input-port . g$11961$CSxK@) (standard-error-port . g$11960$CSxK@) (set-port-position! . g$11959$CSxK@) (put-u8 . g$11958$CSxK@) (put-string . g$11957$CSxK@) (put-datum . g$7044$CSxK@) (put-char . g$11956$CSxK@) (put-bytevector . g$11955$CSxK@) (port? . g$7049$CSxK@) (port-transcoder . g$11954$CSxK@) (port-position . g$11953$CSxK@) (port-has-set-port-position!? . g$11952$CSxK@) (port-has-port-position? . g$11951$CSxK@) (port-eof? . g$11950$CSxK@) (output-port-buffer-mode . g$11949$CSxK@) (open-string-output-port . g$7048$CSxK@) (open-string-input-port . g$11948$CSxK@) (open-file-output-port . g$11947$CSxK@) (open-file-input/output-port . g$11946$CSxK@) (open-file-input-port . g$11945$CSxK@) (open-bytevector-output-port . g$11944$CSxK@) (open-bytevector-input-port . g$11943$CSxK@) (native-transcoder . g$11942$CSxK@) (native-eol-style . g$11941$CSxK@) (make-transcoder . g$11940$CSxK@) (latin-1-codec . g$11939$CSxK@) (make-i/o-write-error . g$6512$CSxK@) (make-i/o-read-error . g$6499$CSxK@) (make-i/o-port-error . g$6607$CSxK@) (make-i/o-invalid-position-error . g$6525$CSxK@) (make-i/o-filename-error . g$6540$CSxK@) (make-i/o-file-protection-error . g$6555$CSxK@) (make-i/o-file-is-read-only-error . g$6568$CSxK@) (make-i/o-file-does-not-exist-error . g$6594$CSxK@) (make-i/o-file-already-exists-error . g$6581$CSxK@) (make-i/o-error . g$6486$CSxK@) (make-i/o-encoding-error . g$6635$CSxK@) (make-i/o-decoding-error . g$6622$CSxK@) (make-custom-textual-output-port . g$11938$CSxK@) (make-custom-textual-input/output-port . g$11937$CSxK@) (make-custom-textual-input-port . g$11936$CSxK@) (make-custom-binary-output-port . g$11935$CSxK@) (make-custom-binary-input/output-port . g$11934$CSxK@) (make-custom-binary-input-port . g$11933$CSxK@) (make-bytevector . g$11932$CSxK@) (lookahead-u8 . g$11931$CSxK@) (lookahead-char . g$11930$CSxK@) (i/o-write-error? . g$6513$CSxK@) (i/o-read-error? . g$6500$CSxK@) (i/o-port-error? . g$6609$CSxK@) (i/o-invalid-position-error? . g$6527$CSxK@) (i/o-error-position . g$6528$CSxK@) (i/o-filename-error? . g$6542$CSxK@) (i/o-file-protection-error? . g$6556$CSxK@) (i/o-file-is-read-only-error? . g$6569$CSxK@) (i/o-file-does-not-exist-error? . g$6595$CSxK@) (i/o-file-already-exists-error? . g$6582$CSxK@) (i/o-error? . g$6487$CSxK@) (i/o-error-port . g$6610$CSxK@) (i/o-error-filename . g$6543$CSxK@) (i/o-encoding-error? . g$6637$CSxK@) (i/o-encoding-error-char . g$6638$CSxK@) (i/o-decoding-error? . g$6623$CSxK@) (get-u8 . g$11929$CSxK@) (get-string-n! . g$11928$CSxK@) (get-string-n . g$11927$CSxK@) (get-string-all . g$11926$CSxK@) (get-line . g$11925$CSxK@) (get-datum . g$7045$CSxK@) (get-char . g$11924$CSxK@) (get-bytevector-some . g$11923$CSxK@) (get-bytevector-n! . g$11922$CSxK@) (get-bytevector-n . g$11921$CSxK@) (get-bytevector-all . g$11920$CSxK@) (flush-output-port . g$11919$CSxK@) (close-port . g$11918$CSxK@) (call-with-string-output-port . g$7050$CSxK@) (call-with-port . g$7051$CSxK@) (call-with-bytevector-output-port . g$11917$CSxK@) (bytevector->string . g$11916$CSxK@) (buffer-mode? . g$11915$CSxK@) (binary-port? . g$11914$CSxK@) (scheme-report-environment . g$8548$CSxK@) (quotient . g$6681$CSxK@) (null-environment . g$8547$CSxK@) (remainder . g$6682$CSxK@) (modulo . g$6683$CSxK@) (inexact->exact . g$6678$CSxK@) (force . g$6685$CSxK@) (exact->inexact . g$6679$CSxK@) (exit . g$11913$CSxK@) (command-line . g$11550$CSxK@) (string-fill! . g$11912$CSxK@) (string-set! . g$11911$CSxK@) (set-cdr! . g$11910$CSxK@) (set-car! . g$11909$CSxK@) (remove . g$5514$CSxK@) (remv . g$5515$CSxK@) (remp . g$5495$CSxK@) (remq . g$5516$CSxK@) (partition . g$5494$CSxK@) (memv . g$5502$CSxK@) (memq . g$5501$CSxK@) (memp . g$5504$CSxK@) (member . g$5503$CSxK@) (exists . g$5508$CSxK@) (for-all . g$5507$CSxK@) (fold-right . g$5513$CSxK@) (fold-left . g$5512$CSxK@) (find . g$5493$CSxK@) (filter . g$5496$CSxK@) (cons* . g$5511$CSxK@) (assv . g$5498$CSxK@) (assq . g$5497$CSxK@) (assp . g$5500$CSxK@) (assoc . g$5499$CSxK@) (with-exception-handler . g$6238$CSxK@) (raise-continuable . g$6241$CSxK@) (raise . g$6240$CSxK@) (eval . g$8550$CSxK@) (environment . g$8546$CSxK@) (make-enumeration . g$7136$CSxK@) (enum-set=? . g$7143$CSxK@) (enum-set-universe . g$7137$CSxK@) (enum-set-union . g$7144$CSxK@) (enum-set-subset? . g$7142$CSxK@) (enum-set-projection . g$7148$CSxK@) (enum-set-member? . g$7141$CSxK@) (enum-set-intersection . g$7145$CSxK@) (enum-set-indexer . g$7138$CSxK@) (enum-set-difference . g$7146$CSxK@) (enum-set-constructor . g$7139$CSxK@) (enum-set-complement . g$7147$CSxK@) (enum-set->list . g$7140$CSxK@) (who-condition? . g$6404$CSxK@) (warning? . g$6323$CSxK@) (violation? . g$6362$CSxK@) (undefined-violation? . g$6474$CSxK@) (syntax-violation? . g$6459$CSxK@) (syntax-violation-subform . g$6461$CSxK@) (syntax-violation-form . g$6460$CSxK@) (syntax-violation . g$8568$CSxK@) (simple-conditions . g$11908$CSxK@) (serious-condition? . g$6336$CSxK@) (non-continuable-violation? . g$6418$CSxK@) (message-condition? . g$6309$CSxK@) (make-who-condition . g$6402$CSxK@) (make-warning . g$6322$CSxK@) (make-violation . g$6361$CSxK@) (make-undefined-violation . g$6473$CSxK@) (make-syntax-violation . g$6456$CSxK@) (make-serious-condition . g$6335$CSxK@) (make-non-continuable-violation . g$6417$CSxK@) (make-message-condition . g$6307$CSxK@) (make-lexical-violation . g$6443$CSxK@) (make-irritants-condition . g$6387$CSxK@) (make-implementation-restriction-violation . g$6430$CSxK@) (make-error . g$6348$CSxK@) (make-assertion-violation . g$6374$CSxK@) (lexical-violation? . g$6444$CSxK@) (irritants-condition? . g$6389$CSxK@) (implementation-restriction-violation? . g$6431$CSxK@) (error? . g$6349$CSxK@) (condition-who . g$6405$CSxK@) (condition-predicate . g$11907$CSxK@) (condition-message . g$6310$CSxK@) (condition-irritants . g$6390$CSxK@) (condition-accessor . g$11906$CSxK@) (condition . g$11905$CSxK@) (assertion-violation? . g$6375$CSxK@) (condition? . g$11904$CSxK@) (utf32->string . g$11903$CSxK@) (utf16->string . g$11902$CSxK@) (utf8->string . g$11901$CSxK@) (uint-list->bytevector . g$11900$CSxK@) (u8-list->bytevector . g$11899$CSxK@) (string->utf8 . g$11898$CSxK@) (string->utf32 . g$11897$CSxK@) (string->utf16 . g$11896$CSxK@) (sint-list->bytevector . g$11895$CSxK@) (native-endianness . g$6123$CSxK@) (bytevector? . g$5813$CSxK@) (bytevector=? . g$11894$CSxK@) (bytevector-uint-set! . g$11893$CSxK@) (bytevector-uint-ref . g$11892$CSxK@) (bytevector-u8-set! . g$11891$CSxK@) (bytevector-u8-ref . g$11890$CSxK@) (bytevector-u64-set! . g$6144$CSxK@) (bytevector-u64-ref . g$6140$CSxK@) (bytevector-u64-native-set! . g$6146$CSxK@) (bytevector-u64-native-ref . g$6142$CSxK@) (bytevector-u32-set! . g$6136$CSxK@) (bytevector-u32-ref . g$6132$CSxK@) (bytevector-u32-native-set! . g$6138$CSxK@) (bytevector-u32-native-ref . g$6134$CSxK@) (bytevector-u16-set! . g$6128$CSxK@) (bytevector-u16-ref . g$6124$CSxK@) (bytevector-u16-native-set! . g$6130$CSxK@) (bytevector-u16-native-ref . g$6126$CSxK@) (bytevector-sint-set! . g$11889$CSxK@) (bytevector-sint-ref . g$11888$CSxK@) (bytevector-s8-set! . g$11887$CSxK@) (bytevector-s8-ref . g$11886$CSxK@) (bytevector-s64-set! . g$6145$CSxK@) (bytevector-s64-ref . g$6141$CSxK@) (bytevector-s64-native-set! . g$6147$CSxK@) (bytevector-s64-native-ref . g$6143$CSxK@) (bytevector-s32-set! . g$6137$CSxK@) (bytevector-s32-ref . g$6133$CSxK@) (bytevector-s32-native-set! . g$6139$CSxK@) (bytevector-s32-native-ref . g$6135$CSxK@) (bytevector-s16-set! . g$6129$CSxK@) (bytevector-s16-ref . g$6125$CSxK@) (bytevector-s16-native-set! . g$6131$CSxK@) (bytevector-s16-native-ref . g$6127$CSxK@) (bytevector-length . g$11885$CSxK@) (bytevector-ieee-single-set! . g$11884$CSxK@) (bytevector-ieee-single-ref . g$11883$CSxK@) (bytevector-ieee-single-native-set! . g$6150$CSxK@) (bytevector-ieee-single-native-ref . g$6148$CSxK@) (bytevector-ieee-double-set! . g$11882$CSxK@) (bytevector-ieee-double-ref . g$11881$CSxK@) (bytevector-ieee-double-native-set! . g$6151$CSxK@) (bytevector-ieee-double-native-ref . g$6149$CSxK@) (bytevector-fill! . g$11880$CSxK@) (bytevector-copy! . g$11879$CSxK@) (bytevector-copy . g$11878$CSxK@) (bytevector->uint-list . g$11877$CSxK@) (bytevector->u8-list . g$11876$CSxK@) (bytevector->sint-list . g$11875$CSxK@) (no-nans-violation? . g$6664$CSxK@) (no-infinities-violation? . g$6651$CSxK@) (make-no-nans-violation . g$6663$CSxK@) (make-no-infinities-violation . g$6650$CSxK@) (real->flonum . g$11874$CSxK@) (flzero? . g$6964$CSxK@) (fltruncate . g$6959$CSxK@) (fltan . g$6949$CSxK@) (flsqrt . g$6954$CSxK@) (flsin . g$6947$CSxK@) (flround . g$6960$CSxK@) (flpositive? . g$6962$CSxK@) (flonum? . g$5818$CSxK@) (flodd? . g$6966$CSxK@) (flnumerator . g$11873$CSxK@) (flnegative? . g$6963$CSxK@) (flnan? . g$6946$CSxK@) (flmod0 . g$6942$CSxK@) (flmod . g$6941$CSxK@) (flmin . g$6968$CSxK@) (flmax . g$6967$CSxK@) (fllog . g$6953$CSxK@) (flinteger? . g$6943$CSxK@) (flinfinite? . g$6945$CSxK@) (flfloor . g$6958$CSxK@) (flfinite? . g$6944$CSxK@) (flexpt . g$6956$CSxK@) (flexp . g$6955$CSxK@) (fleven? . g$6965$CSxK@) (fldiv0-and-mod0 . g$6938$CSxK@) (fldiv0 . g$6940$CSxK@) (fldiv-and-mod . g$6937$CSxK@) (fldiv . g$6939$CSxK@) (fldenominator . g$11872$CSxK@) (flcos . g$6948$CSxK@) (flceiling . g$6957$CSxK@) (flatan . g$6952$CSxK@) (flasin . g$6950$CSxK@) (flacos . g$6951$CSxK@) (flabs . g$6961$CSxK@) (fl>? . g$11871$CSxK@) (fl>=? . g$11870$CSxK@) (fl=? . g$11869$CSxK@) (fl<? . g$11868$CSxK@) (fl<=? . g$11867$CSxK@) (fl/ . g$11866$CSxK@) (fl- . g$11865$CSxK@) (fl+ . g$11864$CSxK@) (fl* . g$11863$CSxK@) (fixnum->flonum . g$11862$CSxK@) (fxzero? . g$6845$CSxK@) (fxxor . g$11861$CSxK@) (fxrotate-bit-field . g$6859$CSxK@) (fxreverse-bit-field . g$11860$CSxK@) (fxpositive? . g$6843$CSxK@) (fxodd? . g$6847$CSxK@) (fxnot . g$11859$CSxK@) (fxnegative? . g$6844$CSxK@) (fxmod0 . g$6842$CSxK@) (fxmod . g$6841$CSxK@) (fxmin . g$6849$CSxK@) (fxmax . g$6848$CSxK@) (fxlength . g$11858$CSxK@) (fxior . g$11857$CSxK@) (fxif . g$6853$CSxK@) (fxfirst-bit-set . g$11856$CSxK@) (fxeven? . g$6846$CSxK@) (fxdiv0-and-mod0 . g$11855$CSxK@) (fxdiv0 . g$6840$CSxK@) (fxdiv-and-mod . g$11854$CSxK@) (fxdiv . g$6839$CSxK@) (fxcopy-bit-field . g$6856$CSxK@) (fxcopy-bit . g$6854$CSxK@) (fxbit-set? . g$11853$CSxK@) (fxbit-field . g$6855$CSxK@) (fxbit-count . g$11852$CSxK@) (fxarithmetic-shift-right . g$6858$CSxK@) (fxarithmetic-shift-left . g$6857$CSxK@) (fxarithmetic-shift . g$11851$CSxK@) (fxand . g$11850$CSxK@) (fx>? . g$11849$CSxK@) (fx>=? . g$11848$CSxK@) (fx=? . g$11847$CSxK@) (fx<? . g$11846$CSxK@) (fx<=? . g$11845$CSxK@) (fx-/carry . g$6851$CSxK@) (fx- . g$11844$CSxK@) (fx+/carry . g$6852$CSxK@) (fx+ . g$11843$CSxK@) (fx*/carry . g$6850$CSxK@) (fx* . g$11842$CSxK@) (greatest-fixnum . g$11841$CSxK@) (least-fixnum . g$11840$CSxK@) (fixnum-width . g$5819$CSxK@) (fixnum? . g$5817$CSxK@) (bitwise-rotate-bit-field . g$6813$CSxK@) (bitwise-reverse-bit-field . g$11839$CSxK@) (bitwise-length . g$11838$CSxK@) (bitwise-if . g$6807$CSxK@) (bitwise-first-bit-set . g$11837$CSxK@) (bitwise-copy-bit-field . g$6810$CSxK@) (bitwise-copy-bit . g$6808$CSxK@) (bitwise-bit-set? . g$11836$CSxK@) (bitwise-bit-field . g$6809$CSxK@) (bitwise-bit-count . g$11835$CSxK@) (bitwise-xor . g$11834$CSxK@) (bitwise-ior . g$11833$CSxK@) (bitwise-and . g$11832$CSxK@) (bitwise-not . g$11831$CSxK@) (bitwise-arithmetic-shift-right . g$6812$CSxK@) (bitwise-arithmetic-shift-left . g$6811$CSxK@) (bitwise-arithmetic-shift . g$11830$CSxK@) (zero? . g$5852$CSxK@) (vector? . g$5812$CSxK@) (vector-set! . g$11829$CSxK@) (vector-ref . g$11828$CSxK@) (vector-map . g$5884$CSxK@) (vector-length . g$11827$CSxK@) (vector-for-each . g$5885$CSxK@) (vector-fill! . g$5820$CSxK@) (vector->list . g$11826$CSxK@) (vector . g$11825$CSxK@) (values . g$11824$CSxK@) (truncate . g$11823$CSxK@) (tan . g$11822$CSxK@) (symbol? . g$5814$CSxK@) (symbol=? . g$5869$CSxK@) (symbol->string . g$11821$CSxK@) (substring . g$11820$CSxK@) (string? . g$11819$CSxK@) (string>? . g$5866$CSxK@) (string>=? . g$5868$CSxK@) (string=? . g$5864$CSxK@) (string<? . g$5865$CSxK@) (string<=? . g$5867$CSxK@) (string-ref . g$11818$CSxK@) (string-length . g$11817$CSxK@) (string-for-each . g$5886$CSxK@) (string-copy . g$11816$CSxK@) (string-append . g$11815$CSxK@) (string->symbol . g$11814$CSxK@) (string->number . g$11813$CSxK@) (string->list . g$11812$CSxK@) (string . g$11811$CSxK@) (sqrt . g$11810$CSxK@) (sin . g$11809$CSxK@) (round . g$11808$CSxK@) (reverse . g$5821$CSxK@) (real? . g$11807$CSxK@) (real-valued? . g$11806$CSxK@) (real-part . g$11805$CSxK@) (rationalize . g$5881$CSxK@) (rational? . g$11804$CSxK@) (rational-valued? . g$11803$CSxK@) (procedure? . g$5816$CSxK@) (positive? . g$5850$CSxK@) (pair? . g$11802$CSxK@) (odd? . g$5854$CSxK@) (numerator . g$11801$CSxK@) (number? . g$11800$CSxK@) (number->string . g$11799$CSxK@) (null? . g$11798$CSxK@) (not . g$11797$CSxK@) (negative? . g$5851$CSxK@) (nan? . g$11796$CSxK@) (min . g$5856$CSxK@) (max . g$5855$CSxK@) (map . g$5509$CSxK@) (make-vector . g$11795$CSxK@) (make-string . g$11794$CSxK@) (make-rectangular . g$11793$CSxK@) (make-polar . g$11792$CSxK@) (magnitude . g$11791$CSxK@) (log . g$11790$CSxK@) (list? . g$11789$CSxK@) (list-tail . g$5489$CSxK@) (list-ref . g$5490$CSxK@) (list->vector . g$5809$CSxK@) (list->string . g$5810$CSxK@) (list . g$11788$CSxK@) (length . g$11787$CSxK@) (lcm . g$5858$CSxK@) (integer? . g$11786$CSxK@) (integer-valued? . g$11785$CSxK@) (integer->char . g$11784$CSxK@) (infinite? . g$11783$CSxK@) (inexact? . g$11782$CSxK@) (inexact . g$11781$CSxK@) (imag-part . g$11780$CSxK@) (gcd . g$5857$CSxK@) (for-each . g$5510$CSxK@) (floor . g$11779$CSxK@) (finite? . g$11778$CSxK@) (expt . g$11777$CSxK@) (exp . g$11776$CSxK@) (exact? . g$11775$CSxK@) (exact-integer-sqrt . g$11774$CSxK@) (exact . g$11773$CSxK@) (even? . g$5853$CSxK@) (error . g$6243$CSxK@) (eqv? . g$11772$CSxK@) (equal? . g$11771$CSxK@) (eq? . g$11770$CSxK@) (dynamic-wind . g$11769$CSxK@) (div0-and-mod0 . g$11768$CSxK@) (mod0 . g$5808$CSxK@) (div0 . g$5806$CSxK@) (div-and-mod . g$11767$CSxK@) (mod . g$5807$CSxK@) (div . g$5805$CSxK@) (denominator . g$11766$CSxK@) (cos . g$11765$CSxK@) (cons . g$11764$CSxK@) (complex? . g$11763$CSxK@) (char? . g$5811$CSxK@) (char>? . g$5878$CSxK@) (char>=? . g$5880$CSxK@) (char=? . g$5876$CSxK@) (char<? . g$5877$CSxK@) (char<=? . g$5879$CSxK@) (char->integer . g$11762$CSxK@) (ceiling . g$11761$CSxK@) (call-with-values . g$11760$CSxK@) (call/cc . g$11759$CSxK@) (call-with-current-continuation . g$11758$CSxK@) (cddddr . g$5849$CSxK@) (cdddar . g$5848$CSxK@) (cddadr . g$5847$CSxK@) (cddaar . g$5846$CSxK@) (cdaddr . g$5845$CSxK@) (cdadar . g$5844$CSxK@) (cdaadr . g$5843$CSxK@) (cdaaar . g$5842$CSxK@) (cadddr . g$5841$CSxK@) (caddar . g$5840$CSxK@) (cadadr . g$5839$CSxK@) (cadaar . g$5838$CSxK@) (caaddr . g$5837$CSxK@) (caadar . g$5836$CSxK@) (caaadr . g$5835$CSxK@) (caaaar . g$5834$CSxK@) (cdddr . g$5833$CSxK@) (cddar . g$5832$CSxK@) (cdadr . g$5831$CSxK@) (cdaar . g$5830$CSxK@) (caddr . g$5829$CSxK@) (cadar . g$5828$CSxK@) (caadr . g$5827$CSxK@) (caaar . g$5826$CSxK@) (cddr . g$5825$CSxK@) (cdar . g$5824$CSxK@) (cadr . g$5823$CSxK@) (caar . g$5822$CSxK@) (cdr . g$11757$CSxK@) (car . g$11756$CSxK@) (boolean? . g$5815$CSxK@) (boolean=? . g$5870$CSxK@) (atan . g$11755$CSxK@) (assertion-violation . g$6242$CSxK@) (asin . g$11754$CSxK@) (apply . g$11753$CSxK@) (append . g$11752$CSxK@) (angle . g$11751$CSxK@) (acos . g$11750$CSxK@) (abs . g$11749$CSxK@) (/ . g$11748$CSxK@) (* . g$11747$CSxK@) (- . g$11746$CSxK@) (+ . g$11745$CSxK@) (>= . g$11744$CSxK@) (> . g$11743$CSxK@) (= . g$11742$CSxK@) (<= . g$11741$CSxK@) (< . g$11740$CSxK@) (deserialize-port . g$11736$CSxK@) (serialize-port . g$11735$CSxK@) (enum-set? . g$7113$CSxK@) (load/unload . g$11553$CSxK@) (load/args . g$11552$CSxK@) (printf . g$7222$CSxK@) (fprintf . g$7223$CSxK@) (format . g$7224$CSxK@) (procedure-form . g$11734$CSxK@) (procedure-environment . g$11733$CSxK@) (procedure-name . g$11732$CSxK@) (procedure-arity . g$11731$CSxK@) (gc-collect . g$11730$CSxK@) (typeof . g$11729$CSxK@) (clr-type? . g$11728$CSxK@) (get-clr-type . g$11727$CSxK@) (vector-append . g$11725$CSxK@) (vector-filter . g$11724$CSxK@) (vector-reverse! . g$11723$CSxK@) (vector-contains? . g$11722$CSxK@) (vector-index-of . g$11721$CSxK@) (vector-copy . g$11720$CSxK@) (vector-binary-search . g$11719$CSxK@) (string-ci-compare . g$11718$CSxK@) (string-compare . g$11717$CSxK@) (string-format . g$11716$CSxK@) (trace-printer . g$11549$CSxK@) (time-it . g$11714$CSxK@) (make-parameter . g$7517$CSxK@) (open-tcp-input/output-port . g$11711$CSxK@) (hashtable-for-each . g$11710$CSxK@) (hashtable-map . g$11709$CSxK@) (environment-bindings . g$8542$CSxK@) (environment-symbols . g$8545$CSxK@) (interaction-environment-symbols . g$8541$CSxK@) (optimization-level . g$11708$CSxK@) (library-path . g$7870$CSxK@) (make-compile-time-value . g$8251$CSxK@) (expand->core . g$8551$CSxK@) (expand . g$8549$CSxK@) (convert->cps . g$7300$CSxK@) (installed-libraries . g$7891$CSxK@) (uninstall-library . g$7882$CSxK@) (&no-nans . g$11707$CSxK@) (&no-infinities . g$11706$CSxK@) (&i/o-encoding . g$11705$CSxK@) (&i/o-decoding . g$11704$CSxK@) (&i/o-port . g$11703$CSxK@) (&i/o-file-does-not-exist . g$11702$CSxK@) (&i/o-file-already-exists . g$11701$CSxK@) (&i/o-file-is-read-only . g$11700$CSxK@) (&i/o-file-protection . g$11699$CSxK@) (&i/o-filename . g$11698$CSxK@) (&i/o-invalid-position . g$11697$CSxK@) (&i/o-write . g$11696$CSxK@) (&i/o-read . g$11695$CSxK@) (&i/o . g$11694$CSxK@) (&non-continuable . g$11693$CSxK@) (&undefined . g$11692$CSxK@) (&syntax . g$11691$CSxK@) (&lexical . g$11690$CSxK@) (&implementation-restriction . g$11689$CSxK@) (&who . g$11688$CSxK@) (&irritants . g$11687$CSxK@) (&assertion . g$11686$CSxK@) (&violation . g$11685$CSxK@) (&error . g$11684$CSxK@) (&serious . g$11683$CSxK@) (&warning . g$11682$CSxK@) (&message . g$11681$CSxK@) (&condition . g$11680$CSxK@) (define-condition-type . g$11679$CSxK@) (define-enumeration . g$11678$CSxK@) (define-record-type . g$11677$CSxK@) (parent-rtd . g$11676$CSxK@) (nongenerative . g$11675$CSxK@) (opaque . g$11674$CSxK@) (sealed . g$11673$CSxK@) (protocol . g$11672$CSxK@) (parent . g$11671$CSxK@) (immutable . g$11670$CSxK@) (mutable . g$11669$CSxK@) (fields . g$11668$CSxK@) (error-handling-mode . g$11667$CSxK@) (file-options . g$11666$CSxK@) (buffer-mode . g$11665$CSxK@) (eol-style . g$11664$CSxK@) (guard . g$11663$CSxK@) (trace-letrec-syntax . g$11662$CSxK@) (trace-let-syntax . g$11661$CSxK@) (trace-define-syntax . g$11660$CSxK@) (trace-define . g$11659$CSxK@) (trace-lambda . g$11658$CSxK@) (unsyntax-splicing . g$11657$CSxK@) (unsyntax . g$11656$CSxK@) (unquote-splicing . g$11655$CSxK@) (unquote . g$11654$CSxK@) (_ . g$11653$CSxK@) (else . g$11652$CSxK@) (=> . g$11651$CSxK@) (... . g$11650$CSxK@) (assert . g$11649$CSxK@) (endianness . g$11648$CSxK@) (delay . g$11647$CSxK@) (time . g$11646$CSxK@) (or . g$11645$CSxK@) (and . g$11644$CSxK@) (do . g$11643$CSxK@) (cond . g$11642$CSxK@) (let* . g$11641$CSxK@) (let . g$11640$CSxK@) (identifier-syntax . g$11639$CSxK@) (with-syntax . g$11638$CSxK@) (quasisyntax . g$11637$CSxK@) (quasiquote . g$11636$CSxK@) (syntax-rules . g$11635$CSxK@) (include-into . g$11634$CSxK@) (include . g$11633$CSxK@) (let-values . g$11631$CSxK@) (let*-values . g$11630$CSxK@) (record-constructor-descriptor . g$11629$CSxK@) (record-type-descriptor . g$11628$CSxK@) (fluid-let-syntax . g$11627$CSxK@) (case . g$11626$CSxK@) (parameterize . g$11625$CSxK@) (unless . g$11624$CSxK@) (when . g$11623$CSxK@) (if . g$11622$CSxK@) (letrec* . g$11621$CSxK@) (letrec . g$11620$CSxK@) (case-lambda . g$11618$CSxK@) (lambda . g$11617$CSxK@) (syntax . g$11616$CSxK@) (syntax-case . g$11615$CSxK@) (quote . g$11614$CSxK@) (letrec-syntax . g$11612$CSxK@) (let-syntax . g$11611$CSxK@) (set! . g$11610$CSxK@) (export . g$11609$CSxK@) (import . g$11608$CSxK@) (library . g$11607$CSxK@) (begin . g$11606$CSxK@) (module . g$11605$CSxK@) (define-syntax . g$11604$CSxK@) (define . g$11603$CSxK@)) '() values values '#f '#f '#t '#f))) (case-lambda ((g$C$22899$CSxK@ g$x$14448$CSxK@) (g$assq$6701$CSxK@ (case-lambda ((g$V$22900$CSxK@) ((case-lambda ((g$C$22898$CSxK@ g$t$14449$CSxK@) (if g$t$14449$CSxK@ (cdr g$C$22898$CSxK@ g$t$14449$CSxK@) (g$C$22898$CSxK@ '#f)))) g$C$22899$CSxK@ g$V$22900$CSxK@))) g$x$14448$CSxK@ '((ellipsis-map . g$ellipsis-map$14257$CSxK@) (&no-nans-rcd . g$&no-nans-rcd$8292$CSxK@) (&no-nans-rtd . g$&no-nans-rtd$8291$CSxK@) (&no-infinities-rcd . g$&no-infinities-rcd$8284$CSxK@) (&no-infinities-rtd . g$&no-infinities-rtd$8283$CSxK@) (&i/o-encoding-rcd . g$&i/o-encoding-rcd$8276$CSxK@) (&i/o-encoding-rtd . g$&i/o-encoding-rtd$8275$CSxK@) (&i/o-decoding-rcd . g$&i/o-decoding-rcd$8266$CSxK@) (&i/o-decoding-rtd . g$&i/o-decoding-rtd$8265$CSxK@) (&i/o-port-rcd . g$&i/o-port-rcd$8258$CSxK@) (&i/o-port-rtd . g$&i/o-port-rtd$8257$CSxK@) (&i/o-file-does-not-exist-rcd . g$&i/o-file-does-not-exist-rcd$8248$CSxK@) (&i/o-file-does-not-exist-rtd . g$&i/o-file-does-not-exist-rtd$8247$CSxK@) (&i/o-file-already-exists-rcd . g$&i/o-file-already-exists-rcd$8240$CSxK@) (&i/o-file-already-exists-rtd . g$&i/o-file-already-exists-rtd$8239$CSxK@) (&i/o-file-is-read-only-rcd . g$&i/o-file-is-read-only-rcd$8232$CSxK@) (&i/o-file-is-read-only-rtd . g$&i/o-file-is-read-only-rtd$8231$CSxK@) (&i/o-file-protection-rcd . g$&i/o-file-protection-rcd$8224$CSxK@) (&i/o-file-protection-rtd . g$&i/o-file-protection-rtd$8223$CSxK@) (&i/o-filename-rcd . g$&i/o-filename-rcd$8216$CSxK@) (&i/o-filename-rtd . g$&i/o-filename-rtd$8215$CSxK@) (&i/o-invalid-position-rcd . g$&i/o-invalid-position-rcd$8206$CSxK@) (&i/o-invalid-position-rtd . g$&i/o-invalid-position-rtd$8205$CSxK@) (&i/o-write-rcd . g$&i/o-write-rcd$8196$CSxK@) (&i/o-write-rtd . g$&i/o-write-rtd$8195$CSxK@) (&i/o-read-rcd . g$&i/o-read-rcd$8188$CSxK@) (&i/o-read-rtd . g$&i/o-read-rtd$8187$CSxK@) (&i/o-rcd . g$&i/o-rcd$8180$CSxK@) (&i/o-rtd . g$&i/o-rtd$8179$CSxK@) (&undefined-rcd . g$&undefined-rcd$8172$CSxK@) (&undefined-rtd . g$&undefined-rtd$8171$CSxK@) (&syntax-rcd . g$&syntax-rcd$8164$CSxK@) (&syntax-rtd . g$&syntax-rtd$8163$CSxK@) (&lexical-rcd . g$&lexical-rcd$8152$CSxK@) (&lexical-rtd . g$&lexical-rtd$8151$CSxK@) (&implementation-restriction-rcd . g$&implementation-restriction-rcd$8144$CSxK@) (&implementation-restriction-rtd . g$&implementation-restriction-rtd$8143$CSxK@) (&non-continuable-rcd . g$&non-continuable-rcd$8136$CSxK@) (&non-continuable-rtd . g$&non-continuable-rtd$8135$CSxK@) (&who-rcd . g$&who-rcd$8128$CSxK@) (&who-rtd . g$&who-rtd$8127$CSxK@) (&irritants-rcd . g$&irritants-rcd$8118$CSxK@) (&irritants-rtd . g$&irritants-rtd$8117$CSxK@) (&assertion-rcd . g$&assertion-rcd$8108$CSxK@) (&assertion-rtd . g$&assertion-rtd$8107$CSxK@) (&violation-rcd . g$&violation-rcd$8100$CSxK@) (&violation-rtd . g$&violation-rtd$8099$CSxK@) (&error-rcd . g$&error-rcd$8092$CSxK@) (&error-rtd . g$&error-rtd$8091$CSxK@) (&serious-rcd . g$&serious-rcd$8084$CSxK@) (&serious-rtd . g$&serious-rtd$8083$CSxK@) (&warning-rcd . g$&warning-rcd$8076$CSxK@) (&warning-rtd . g$&warning-rtd$8075$CSxK@) (&message-rcd . g$&message-rcd$8068$CSxK@) (&message-rtd . g$&message-rtd$8067$CSxK@) (&condition-rcd . g$&condition-rcd$8058$CSxK@) (&condition-rtd . g$&condition-rtd$8057$CSxK@) (make-list . g$make-list$6696$CSxK@) (last-pair . g$last-pair$6695$CSxK@) (ironscheme-build . g$ironscheme-build$14440$CSxK@) (syntax-error . g$syntax-error$14361$CSxK@) (syntax-dispatch . g$syntax-dispatch$14252$CSxK@) (compile-system-libraries . g$compile-system-libraries$14443$CSxK@) (compile->closure . g$compile->closure$14445$CSxK@) (compile . g$compile$14444$CSxK@) (load . g$load$14439$CSxK@) (interaction-environment . g$interaction-environment$14371$CSxK@) (string-normalize-nfkd . g$string-normalize-nfkd$8508$CSxK@) (string-normalize-nfkc . g$string-normalize-nfkc$8507$CSxK@) (string-normalize-nfd . g$string-normalize-nfd$8506$CSxK@) (string-normalize-nfc . g$string-normalize-nfc$8505$CSxK@) (string-ci>? . g$string-ci>?$8497$CSxK@) (string-ci>=? . g$string-ci>=?$8499$CSxK@) (string-ci=? . g$string-ci=?$8495$CSxK@) (string-ci<? . g$string-ci<?$8496$CSxK@) (string-ci<=? . g$string-ci<=?$8498$CSxK@) (char-ci>? . g$char-ci>?$8502$CSxK@) (char-ci>=? . g$char-ci>=?$8504$CSxK@) (char-ci=? . g$char-ci=?$8500$CSxK@) (char-ci<? . g$char-ci<?$8501$CSxK@) (char-ci<=? . g$char-ci<=?$8503$CSxK@) (variable-transformer-procedure . g$variable-transformer-procedure$14190$CSxK@) (variable-transformer? . g$variable-transformer?$14189$CSxK@) (make-variable-transformer . g$make-variable-transformer$14187$CSxK@) (identifier? . g$identifier?$14365$CSxK@) (generate-temporaries . g$generate-temporaries$14354$CSxK@) (free-identifier=? . g$free-identifier=?$14355$CSxK@) (syntax->datum . g$syntax->datum$14367$CSxK@) (datum->syntax . g$datum->syntax$14366$CSxK@) (bound-identifier=? . g$bound-identifier=?$14356$CSxK@) (delete-file . g$delete-file$7502$CSxK@) (file-exists? . g$file-exists?$7501$CSxK@) (list-sort . g$list-sort$8356$CSxK@) (make-eqv-hashtable . g$make-eqv-hashtable$7484$CSxK@) (make-eq-hashtable . g$make-eq-hashtable$7483$CSxK@) (hashtable-update! . g$hashtable-update!$7490$CSxK@) (hashtable-size . g$hashtable-size$7485$CSxK@) (hashtable-set! . g$hashtable-set!$7487$CSxK@) (hashtable-ref . g$hashtable-ref$7486$CSxK@) (hashtable-delete! . g$hashtable-delete!$7488$CSxK@) (hashtable-contains? . g$hashtable-contains?$7489$CSxK@) (hashtable-clear! . g$hashtable-clear!$7491$CSxK@) (call-with-output-file . g$call-with-output-file$8910$CSxK@) (call-with-input-file . g$call-with-input-file$8909$CSxK@) (write-char . g$write-char$8906$CSxK@) (with-output-to-file . g$with-output-to-file$8908$CSxK@) (with-input-from-file . g$with-input-from-file$8907$CSxK@) (read-char . g$read-char$8905$CSxK@) (peek-char . g$peek-char$8904$CSxK@) (newline . g$newline$8911$CSxK@) (put-datum . g$put-datum$8844$CSxK@) (port? . g$port?$8849$CSxK@) (open-string-output-port . g$open-string-output-port$8848$CSxK@) (make-i/o-write-error . g$make-i/o-write-error$8193$CSxK@) (make-i/o-read-error . g$make-i/o-read-error$8185$CSxK@) (make-i/o-port-error . g$make-i/o-port-error$8253$CSxK@) (make-i/o-invalid-position-error . g$make-i/o-invalid-position-error$8201$CSxK@) (make-i/o-filename-error . g$make-i/o-filename-error$8211$CSxK@) (make-i/o-file-protection-error . g$make-i/o-file-protection-error$8221$CSxK@) (make-i/o-file-is-read-only-error . g$make-i/o-file-is-read-only-error$8229$CSxK@) (make-i/o-file-does-not-exist-error . g$make-i/o-file-does-not-exist-error$8245$CSxK@) (make-i/o-file-already-exists-error . g$make-i/o-file-already-exists-error$8237$CSxK@) (make-i/o-error . g$make-i/o-error$8177$CSxK@) (make-i/o-encoding-error . g$make-i/o-encoding-error$8271$CSxK@) (make-i/o-decoding-error . g$make-i/o-decoding-error$8263$CSxK@) (i/o-write-error? . g$i/o-write-error?$8194$CSxK@) (i/o-read-error? . g$i/o-read-error?$8186$CSxK@) (i/o-port-error? . g$i/o-port-error?$8255$CSxK@) (i/o-invalid-position-error? . g$i/o-invalid-position-error?$8203$CSxK@) (i/o-error-position . g$i/o-error-position$8204$CSxK@) (i/o-filename-error? . g$i/o-filename-error?$8213$CSxK@) (i/o-file-protection-error? . g$i/o-file-protection-error?$8222$CSxK@) (i/o-file-is-read-only-error? . g$i/o-file-is-read-only-error?$8230$CSxK@) (i/o-file-does-not-exist-error? . g$i/o-file-does-not-exist-error?$8246$CSxK@) (i/o-file-already-exists-error? . g$i/o-file-already-exists-error?$8238$CSxK@) (i/o-error? . g$i/o-error?$8178$CSxK@) (i/o-error-port . g$i/o-error-port$8256$CSxK@) (i/o-error-filename . g$i/o-error-filename$8214$CSxK@) (i/o-encoding-error? . g$i/o-encoding-error?$8273$CSxK@) (i/o-encoding-error-char . g$i/o-encoding-error-char$8274$CSxK@) (i/o-decoding-error? . g$i/o-decoding-error?$8264$CSxK@) (get-datum . g$get-datum$8845$CSxK@) (call-with-string-output-port . g$call-with-string-output-port$8850$CSxK@) (call-with-port . g$call-with-port$8851$CSxK@) (scheme-report-environment . g$scheme-report-environment$14344$CSxK@) (quotient . g$quotient$8323$CSxK@) (null-environment . g$null-environment$14343$CSxK@) (remainder . g$remainder$8324$CSxK@) (modulo . g$modulo$8325$CSxK@) (inexact->exact . g$inexact->exact$8320$CSxK@) (force . g$force$8327$CSxK@) (exact->inexact . g$exact->inexact$8321$CSxK@) (command-line . g$command-line$14435$CSxK@) (remove . g$remove$6718$CSxK@) (remv . g$remv$6719$CSxK@) (remp . g$remp$6699$CSxK@) (remq . g$remq$6720$CSxK@) (partition . g$partition$6698$CSxK@) (memv . g$memv$6706$CSxK@) (memq . g$memq$6705$CSxK@) (memp . g$memp$6708$CSxK@) (member . g$member$6707$CSxK@) (exists . g$exists$6712$CSxK@) (for-all . g$for-all$6711$CSxK@) (fold-right . g$fold-right$6717$CSxK@) (fold-left . g$fold-left$6716$CSxK@) (find . g$find$6697$CSxK@) (filter . g$filter$6700$CSxK@) (cons* . g$cons*$6715$CSxK@) (assv . g$assv$6702$CSxK@) (assq . g$assq$6701$CSxK@) (assp . g$assp$6704$CSxK@) (assoc . g$assoc$6703$CSxK@) (with-exception-handler . g$with-exception-handler$7668$CSxK@) (raise-continuable . g$raise-continuable$7671$CSxK@) (raise . g$raise$7670$CSxK@) (eval . g$eval$14346$CSxK@) (environment . g$environment$14342$CSxK@) (make-enumeration . g$make-enumeration$9047$CSxK@) (enum-set=? . g$enum-set=?$9054$CSxK@) (enum-set-universe . g$enum-set-universe$9048$CSxK@) (enum-set-union . g$enum-set-union$9055$CSxK@) (enum-set-subset? . g$enum-set-subset?$9053$CSxK@) (enum-set-projection . g$enum-set-projection$9059$CSxK@) (enum-set-member? . g$enum-set-member?$9052$CSxK@) (enum-set-intersection . g$enum-set-intersection$9056$CSxK@) (enum-set-indexer . g$enum-set-indexer$9049$CSxK@) (enum-set-difference . g$enum-set-difference$9057$CSxK@) (enum-set-constructor . g$enum-set-constructor$9050$CSxK@) (enum-set-complement . g$enum-set-complement$9058$CSxK@) (enum-set->list . g$enum-set->list$9051$CSxK@) (who-condition? . g$who-condition?$8125$CSxK@) (warning? . g$warning?$8074$CSxK@) (violation? . g$violation?$8098$CSxK@) (undefined-violation? . g$undefined-violation?$8170$CSxK@) (syntax-violation? . g$syntax-violation?$8160$CSxK@) (syntax-violation-subform . g$syntax-violation-subform$8162$CSxK@) (syntax-violation-form . g$syntax-violation-form$8161$CSxK@) (syntax-violation . g$syntax-violation$14364$CSxK@) (serious-condition? . g$serious-condition?$8082$CSxK@) (non-continuable-violation? . g$non-continuable-violation?$8134$CSxK@) (message-condition? . g$message-condition?$8065$CSxK@) (make-who-condition . g$make-who-condition$8123$CSxK@) (make-warning . g$make-warning$8073$CSxK@) (make-violation . g$make-violation$8097$CSxK@) (make-undefined-violation . g$make-undefined-violation$8169$CSxK@) (make-syntax-violation . g$make-syntax-violation$8157$CSxK@) (make-serious-condition . g$make-serious-condition$8081$CSxK@) (make-non-continuable-violation . g$make-non-continuable-violation$8133$CSxK@) (make-message-condition . g$make-message-condition$8063$CSxK@) (make-lexical-violation . g$make-lexical-violation$8149$CSxK@) (make-irritants-condition . g$make-irritants-condition$8113$CSxK@) (make-implementation-restriction-violation . g$make-implementation-restriction-violation$8141$CSxK@) (make-error . g$make-error$8089$CSxK@) (make-assertion-violation . g$make-assertion-violation$8105$CSxK@) (lexical-violation? . g$lexical-violation?$8150$CSxK@) (irritants-condition? . g$irritants-condition?$8115$CSxK@) (implementation-restriction-violation? . g$implementation-restriction-violation?$8142$CSxK@) (error? . g$error?$8090$CSxK@) (condition-who . g$condition-who$8126$CSxK@) (condition-message . g$condition-message$8066$CSxK@) (condition-irritants . g$condition-irritants$8116$CSxK@) (assertion-violation? . g$assertion-violation?$8106$CSxK@) (native-endianness . g$native-endianness$7615$CSxK@) (bytevector? . g$bytevector?$7383$CSxK@) (bytevector-u64-set! . g$bytevector-u64-set!$7636$CSxK@) (bytevector-u64-ref . g$bytevector-u64-ref$7632$CSxK@) (bytevector-u64-native-set! . g$bytevector-u64-native-set!$7638$CSxK@) (bytevector-u64-native-ref . g$bytevector-u64-native-ref$7634$CSxK@) (bytevector-u32-set! . g$bytevector-u32-set!$7628$CSxK@) (bytevector-u32-ref . g$bytevector-u32-ref$7624$CSxK@) (bytevector-u32-native-set! . g$bytevector-u32-native-set!$7630$CSxK@) (bytevector-u32-native-ref . g$bytevector-u32-native-ref$7626$CSxK@) (bytevector-u16-set! . g$bytevector-u16-set!$7620$CSxK@) (bytevector-u16-ref . g$bytevector-u16-ref$7616$CSxK@) (bytevector-u16-native-set! . g$bytevector-u16-native-set!$7622$CSxK@) (bytevector-u16-native-ref . g$bytevector-u16-native-ref$7618$CSxK@) (bytevector-s64-set! . g$bytevector-s64-set!$7637$CSxK@) (bytevector-s64-ref . g$bytevector-s64-ref$7633$CSxK@) (bytevector-s64-native-set! . g$bytevector-s64-native-set!$7639$CSxK@) (bytevector-s64-native-ref . g$bytevector-s64-native-ref$7635$CSxK@) (bytevector-s32-set! . g$bytevector-s32-set!$7629$CSxK@) (bytevector-s32-ref . g$bytevector-s32-ref$7625$CSxK@) (bytevector-s32-native-set! . g$bytevector-s32-native-set!$7631$CSxK@) (bytevector-s32-native-ref . g$bytevector-s32-native-ref$7627$CSxK@) (bytevector-s16-set! . g$bytevector-s16-set!$7621$CSxK@) (bytevector-s16-ref . g$bytevector-s16-ref$7617$CSxK@) (bytevector-s16-native-set! . g$bytevector-s16-native-set!$7623$CSxK@) (bytevector-s16-native-ref . g$bytevector-s16-native-ref$7619$CSxK@) (bytevector-ieee-single-native-set! . g$bytevector-ieee-single-native-set!$7642$CSxK@) (bytevector-ieee-single-native-ref . g$bytevector-ieee-single-native-ref$7640$CSxK@) (bytevector-ieee-double-native-set! . g$bytevector-ieee-double-native-set!$7643$CSxK@) (bytevector-ieee-double-native-ref . g$bytevector-ieee-double-native-ref$7641$CSxK@) (no-nans-violation? . g$no-nans-violation?$8290$CSxK@) (no-infinities-violation? . g$no-infinities-violation?$8282$CSxK@) (make-no-nans-violation . g$make-no-nans-violation$8289$CSxK@) (make-no-infinities-violation . g$make-no-infinities-violation$8281$CSxK@) (flzero? . g$flzero?$8817$CSxK@) (fltruncate . g$fltruncate$8812$CSxK@) (fltan . g$fltan$8802$CSxK@) (flsqrt . g$flsqrt$8807$CSxK@) (flsin . g$flsin$8800$CSxK@) (flround . g$flround$8813$CSxK@) (flpositive? . g$flpositive?$8815$CSxK@) (flonum? . g$flonum?$7388$CSxK@) (flodd? . g$flodd?$8819$CSxK@) (flnegative? . g$flnegative?$8816$CSxK@) (flnan? . g$flnan?$8799$CSxK@) (flmod0 . g$flmod0$8795$CSxK@) (flmod . g$flmod$8794$CSxK@) (flmin . g$flmin$8821$CSxK@) (flmax . g$flmax$8820$CSxK@) (fllog . g$fllog$8806$CSxK@) (flinteger? . g$flinteger?$8796$CSxK@) (flinfinite? . g$flinfinite?$8798$CSxK@) (flfloor . g$flfloor$8811$CSxK@) (flfinite? . g$flfinite?$8797$CSxK@) (flexpt . g$flexpt$8809$CSxK@) (flexp . g$flexp$8808$CSxK@) (fleven? . g$fleven?$8818$CSxK@) (fldiv0-and-mod0 . g$fldiv0-and-mod0$8791$CSxK@) (fldiv0 . g$fldiv0$8793$CSxK@) (fldiv-and-mod . g$fldiv-and-mod$8790$CSxK@) (fldiv . g$fldiv$8792$CSxK@) (flcos . g$flcos$8801$CSxK@) (flceiling . g$flceiling$8810$CSxK@) (flatan . g$flatan$8805$CSxK@) (flasin . g$flasin$8803$CSxK@) (flacos . g$flacos$8804$CSxK@) (flabs . g$flabs$8814$CSxK@) (fxzero? . g$fxzero?$8658$CSxK@) (fxrotate-bit-field . g$fxrotate-bit-field$8672$CSxK@) (fxpositive? . g$fxpositive?$8656$CSxK@) (fxodd? . g$fxodd?$8660$CSxK@) (fxnegative? . g$fxnegative?$8657$CSxK@) (fxmod0 . g$fxmod0$8655$CSxK@) (fxmod . g$fxmod$8654$CSxK@) (fxmin . g$fxmin$8662$CSxK@) (fxmax . g$fxmax$8661$CSxK@) (fxif . g$fxif$8666$CSxK@) (fxeven? . g$fxeven?$8659$CSxK@) (fxdiv0 . g$fxdiv0$8653$CSxK@) (fxdiv . g$fxdiv$8652$CSxK@) (fxcopy-bit-field . g$fxcopy-bit-field$8669$CSxK@) (fxcopy-bit . g$fxcopy-bit$8667$CSxK@) (fxbit-field . g$fxbit-field$8668$CSxK@) (fxarithmetic-shift-right . g$fxarithmetic-shift-right$8671$CSxK@) (fxarithmetic-shift-left . g$fxarithmetic-shift-left$8670$CSxK@) (fx-/carry . g$fx-/carry$8664$CSxK@) (fx+/carry . g$fx+/carry$8665$CSxK@) (fx*/carry . g$fx*/carry$8663$CSxK@) (fixnum-width . g$fixnum-width$7389$CSxK@) (fixnum? . g$fixnum?$7387$CSxK@) (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$8546$CSxK@) (bitwise-if . g$bitwise-if$8540$CSxK@) (bitwise-copy-bit-field . g$bitwise-copy-bit-field$8543$CSxK@) (bitwise-copy-bit . g$bitwise-copy-bit$8541$CSxK@) (bitwise-bit-field . g$bitwise-bit-field$8542$CSxK@) (bitwise-arithmetic-shift-right . g$bitwise-arithmetic-shift-right$8545$CSxK@) (bitwise-arithmetic-shift-left . g$bitwise-arithmetic-shift-left$8544$CSxK@) (zero? . g$zero?$7422$CSxK@) (vector? . g$vector?$7382$CSxK@) (vector-map . g$vector-map$7444$CSxK@) (vector-for-each . g$vector-for-each$7445$CSxK@) (vector-fill! . g$vector-fill!$7390$CSxK@) (symbol? . g$symbol?$7384$CSxK@) (symbol=? . g$symbol=?$7434$CSxK@) (string>? . g$string>?$7431$CSxK@) (string>=? . g$string>=?$7433$CSxK@) (string=? . g$string=?$7429$CSxK@) (string<? . g$string<?$7430$CSxK@) (string<=? . g$string<=?$7432$CSxK@) (string-for-each . g$string-for-each$7446$CSxK@) (reverse . g$reverse$7391$CSxK@) (rationalize . g$rationalize$7441$CSxK@) (procedure? . g$procedure?$7386$CSxK@) (positive? . g$positive?$7420$CSxK@) (odd? . g$odd?$7424$CSxK@) (negative? . g$negative?$7421$CSxK@) (min . g$min$7426$CSxK@) (max . g$max$7425$CSxK@) (map . g$map$6713$CSxK@) (list-tail . g$list-tail$6693$CSxK@) (list-ref . g$list-ref$6694$CSxK@) (list->vector . g$list->vector$7379$CSxK@) (list->string . g$list->string$7380$CSxK@) (lcm . g$lcm$7428$CSxK@) (gcd . g$gcd$7427$CSxK@) (for-each . g$for-each$6714$CSxK@) (even? . g$even?$7423$CSxK@) (error . g$error$7673$CSxK@) (mod0 . g$mod0$7378$CSxK@) (div0 . g$div0$7376$CSxK@) (mod . g$mod$7377$CSxK@) (div . g$div$7375$CSxK@) (char? . g$char?$7381$CSxK@) (char>? . g$char>?$7438$CSxK@) (char>=? . g$char>=?$7440$CSxK@) (char=? . g$char=?$7436$CSxK@) (char<? . g$char<?$7437$CSxK@) (char<=? . g$char<=?$7439$CSxK@) (cddddr . g$cddddr$7419$CSxK@) (cdddar . g$cdddar$7418$CSxK@) (cddadr . g$cddadr$7417$CSxK@) (cddaar . g$cddaar$7416$CSxK@) (cdaddr . g$cdaddr$7415$CSxK@) (cdadar . g$cdadar$7414$CSxK@) (cdaadr . g$cdaadr$7413$CSxK@) (cdaaar . g$cdaaar$7412$CSxK@) (cadddr . g$cadddr$7411$CSxK@) (caddar . g$caddar$7410$CSxK@) (cadadr . g$cadadr$7409$CSxK@) (cadaar . g$cadaar$7408$CSxK@) (caaddr . g$caaddr$7407$CSxK@) (caadar . g$caadar$7406$CSxK@) (caaadr . g$caaadr$7405$CSxK@) (caaaar . g$caaaar$7404$CSxK@) (cdddr . g$cdddr$7403$CSxK@) (cddar . g$cddar$7402$CSxK@) (cdadr . g$cdadr$7401$CSxK@) (cdaar . g$cdaar$7400$CSxK@) (caddr . g$caddr$7399$CSxK@) (cadar . g$cadar$7398$CSxK@) (caadr . g$caadr$7397$CSxK@) (caaar . g$caaar$7396$CSxK@) (cddr . g$cddr$7395$CSxK@) (cdar . g$cdar$7394$CSxK@) (cadr . g$cadr$7393$CSxK@) (caar . g$caar$7392$CSxK@) (boolean? . g$boolean?$7385$CSxK@) (boolean=? . g$boolean=?$7435$CSxK@) (assertion-violation . g$assertion-violation$7672$CSxK@) (enum-set? . g$enum?$9028$CSxK@) (make-promise . g$make-promise$8326$CSxK@) (load/unload . g$load/unload$14438$CSxK@) (load/args . g$load/args$14437$CSxK@) (printf . g$printf$9083$CSxK@) (fprintf . g$fprintf$9084$CSxK@) (format . g$format$9085$CSxK@) (trace-printer . g$trace-printer$14434$CSxK@) (make-traced-macro . g$make-traced-macro$9089$CSxK@) (assertion-error . g$assertion-error$14360$CSxK@) (make-parameter . g$make-parameter$9568$CSxK@) (environment-bindings . g$environment-bindings$14338$CSxK@) (environment-symbols . g$environment-symbols$14341$CSxK@) (interaction-environment-symbols . g$interaction-environment-symbols$14337$CSxK@) (library-path . g$library-path$10065$CSxK@) (make-compile-time-value . g$make-compile-time-value$14188$CSxK@) (expand->core . g$expand->core$14347$CSxK@) (expand . g$expand$14345$CSxK@) (convert->cps . g$convert->cps$9407$CSxK@) (installed-libraries . g$installed-libraries$10086$CSxK@) (uninstall-library . g$uninstall-library$10077$CSxK@)))))))(library-letrec* (psyntax main) ((g$trace-printer$14373$CSxK@ g$trace-printer$14434$CSxK@ ((case-lambda ((g$C$23042$CSxK@) (g$make-parameter$9568$CSxK@ g$C$23042$CSxK@ write))) (library-letrec*-identity 'g$trace-printer$14373$CSxK@))) (g$command-line$14374$CSxK@ g$command-line$14435$CSxK@ ((case-lambda ((g$C$23043$CSxK@) (get-command-line (case-lambda ((g$V$23044$CSxK@) (g$make-parameter$9568$CSxK@ g$C$23043$CSxK@ g$V$23044$CSxK@)))))) (library-letrec*-identity 'g$command-line$14374$CSxK@))) (g$local-library-path$14375$CSxK@ g$local-library-path$14436$CSxK@ ((case-lambda ((g$C$23045$CSxK@) (g$C$23045$CSxK@ (case-lambda ((g$C$22938$CSxK@ g$filename$14388$CSxK@) (g$library-path$10065$CSxK@ (case-lambda ((g$V$22939$CSxK@) (g$get-directory-name$7503$CSxK@ (case-lambda ((g$V$22940$CSxK@) (cons g$C$22938$CSxK@ g$V$22940$CSxK@ g$V$22939$CSxK@))) g$filename$14388$CSxK@))))))))) (library-letrec*-identity 'g$local-library-path$14375$CSxK@))) (g$load/args$14376$CSxK@ g$load/args$14437$CSxK@ ((case-lambda ((g$C$23046$CSxK@) (g$C$23046$CSxK@ (case-lambda ((g$C$22941$CSxK@ g$filename$14389$CSxK@ . g$args$14390$CSxK@) (apply (case-lambda (g$IGNORE$22942$CSxK@ (void g$C$22941$CSxK@))) g$load-r6rs-top-level$14385$CSxK@ g$filename$14389$CSxK@ 'load g$args$14390$CSxK@)))))) (library-letrec*-identity 'g$load/args$14376$CSxK@))) (g$load/unload$14377$CSxK@ g$load/unload$14438$CSxK@ ((case-lambda ((g$C$23047$CSxK@) (g$C$23047$CSxK@ (case-lambda ((g$C$22949$CSxK@ g$filename$14391$CSxK@) (g$installed-libraries$10086$CSxK@ (case-lambda ((g$V$22950$CSxK@) ((case-lambda ((g$C$22946$CSxK@ g$libs$14392$CSxK@) (g$load$14378$CSxK@ (case-lambda (g$IGNORE$22947$CSxK@ (g$installed-libraries$10086$CSxK@ (case-lambda ((g$V$22948$CSxK@) (g$for-each$6714$CSxK@ g$C$22946$CSxK@ (case-lambda ((g$C$22943$CSxK@ g$lib$14393$CSxK@) (g$memq$6705$CSxK@ (case-lambda ((g$V$22944$CSxK@) (not (case-lambda ((g$T$22945$CSxK@) (if g$T$22945$CSxK@ (g$uninstall-library$10077$CSxK@ g$C$22943$CSxK@ g$lib$14393$CSxK@) (void g$C$22943$CSxK@)))) g$V$22944$CSxK@))) g$lib$14393$CSxK@ g$libs$14392$CSxK@))) g$V$22948$CSxK@)))))) g$filename$14391$CSxK@))) g$C$22949$CSxK@ g$V$22950$CSxK@))))))))) (library-letrec*-identity 'g$load/unload$14377$CSxK@))) (g$load$14378$CSxK@ g$load$14439$CSxK@ ((case-lambda ((g$C$23048$CSxK@) (g$C$23048$CSxK@ (case-lambda ((g$C$22951$CSxK@ g$filename$14394$CSxK@) (g$command-line$14374$CSxK@ (case-lambda ((g$V$22952$CSxK@) (cdr (case-lambda ((g$V$22953$CSxK@) (apply (case-lambda (g$IGNORE$22954$CSxK@ (void g$C$22951$CSxK@))) g$load-r6rs-top-level$14385$CSxK@ g$filename$14394$CSxK@ 'load g$V$22953$CSxK@))) g$V$22952$CSxK@))))))))) (library-letrec*-identity 'g$load$14378$CSxK@))) (g$ironscheme-build$14379$CSxK@ g$ironscheme-build$14440$CSxK@ ((case-lambda ((g$C$23049$CSxK@) (g$C$23049$CSxK@ (case-lambda ((g$C$22961$CSxK@) (g$ironscheme-build$14379$CSxK@ g$C$22961$CSxK@ '#f)) ((g$C$22961$CSxK@ g$cps?$14395$CSxK@) (g$call-with-output-file$8910$CSxK@ (case-lambda (g$IGNORE$22962$CSxK@ (g$load$14378$CSxK@ g$C$22961$CSxK@ '"ironscheme-buildscript.ss"))) '"build-options.ss" (case-lambda ((g$C$22955$CSxK@ g$p$14396$CSxK@) (list (case-lambda ((g$V$22956$CSxK@) (write (case-lambda (g$IGNORE$22957$CSxK@ (not (case-lambda ((g$V$22958$CSxK@) (list (case-lambda ((g$V$22959$CSxK@) (write (case-lambda (g$IGNORE$22960$CSxK@ (g$newline$8911$CSxK@ g$C$22955$CSxK@ g$p$14396$CSxK@))) g$V$22959$CSxK@ g$p$14396$CSxK@))) 'define-option 'if-wants-letrec* g$V$22958$CSxK@))) g$cps?$14395$CSxK@))) g$V$22956$CSxK@ g$p$14396$CSxK@))) 'define-option 'cps-mode g$cps?$14395$CSxK@))))))))) (library-letrec*-identity 'g$ironscheme-build$14379$CSxK@))) (g$foreground-color$14380$CSxK@ g$foreground-color$14441$CSxK@ ((case-lambda ((g$C$23050$CSxK@) (g$C$23050$CSxK@ (case-lambda ((g$C$22963$CSxK@) (g$C$22963$CSxK@ (clr-call-internal 'console 'get_foregroundcolor '()))) ((g$C$22963$CSxK@ g$color$14397$CSxK@) (g$C$22963$CSxK@ (clr-call-internal 'console 'set_foregroundcolor '() g$color$14397$CSxK@))))))) (library-letrec*-identity 'g$foreground-color$14380$CSxK@))) (g$eval-top-level$14381$CSxK@ g$eval-top-level$14442$CSxK@ ((case-lambda ((g$C$23051$CSxK@) (g$C$23051$CSxK@ (case-lambda ((g$C$22983$CSxK@ g$x$14398$CSxK@) (call/cc g$C$22983$CSxK@ (case-lambda ((g$C$22982$CSxK@ g$k$14399$CSxK@) (g$with-exception-handler$7668$CSxK@ g$C$22982$CSxK@ (case-lambda ((g$C$22977$CSxK@ g$e$14400$CSxK@) (current-error-port (case-lambda ((g$V$22978$CSxK@) ((case-lambda ((g$C$22976$CSxK@ g$foreground-color$14405$CSxK@ g$current-output-port$14406$CSxK@ g$foreground-color$14407$CSxK@ g$current-output-port$14408$CSxK@) ((case-lambda ((g$C$22967$CSxK@ g$swap$14409$CSxK@) (dynamic-wind g$C$22967$CSxK@ g$swap$14409$CSxK@ (case-lambda ((g$C$22964$CSxK@) (display (case-lambda (g$IGNORE$22965$CSxK@ (display (case-lambda (g$IGNORE$22966$CSxK@ (g$newline$8911$CSxK@ g$C$22964$CSxK@))) g$e$14400$CSxK@))) '"Unhandled exception during evaluation:\n"))) g$swap$14409$CSxK@))) g$C$22976$CSxK@ (case-lambda ((g$C$22972$CSxK@) (g$foreground-color$14405$CSxK@ (case-lambda ((g$V$22973$CSxK@) ((case-lambda ((g$C$22968$CSxK@ g$t$14410$CSxK@) (g$foreground-color$14405$CSxK@ (case-lambda (g$IGNORE$22969$CSxK@ (begin (set! g$foreground-color$14407$CSxK@ g$t$14410$CSxK@) (g$C$22968$CSxK@ (cps-void))))) g$foreground-color$14407$CSxK@))) (case-lambda (g$IGNORE$22974$CSxK@ (g$current-output-port$14406$CSxK@ (case-lambda ((g$V$22975$CSxK@) ((case-lambda ((g$C$22970$CSxK@ g$t$14411$CSxK@) (g$current-output-port$14406$CSxK@ (case-lambda (g$IGNORE$22971$CSxK@ (begin (set! g$current-output-port$14408$CSxK@ g$t$14411$CSxK@) (g$C$22970$CSxK@ (cps-void))))) g$current-output-port$14408$CSxK@))) g$C$22972$CSxK@ g$V$22975$CSxK@)))))) g$V$22973$CSxK@))))))))) (case-lambda (g$IGNORE$22979$CSxK@ (g$k$14399$CSxK@ g$C$22977$CSxK@))) g$foreground-color$14380$CSxK@ current-output-port 'red g$V$22978$CSxK@)))))) (case-lambda ((g$C$22980$CSxK@) (g$interaction-environment$14371$CSxK@ (case-lambda ((g$V$22981$CSxK@) (g$eval$14346$CSxK@ g$C$22980$CSxK@ g$x$14398$CSxK@ g$V$22981$CSxK@))))))))))))))) (library-letrec*-identity 'g$eval-top-level$14381$CSxK@))) (g$compile-system-libraries$14382$CSxK@ g$compile-system-libraries$14443$CSxK@ ((case-lambda ((g$C$23052$CSxK@) (g$C$23052$CSxK@ (case-lambda ((g$C$22984$CSxK@) (g$eval-top-level$14381$CSxK@ g$C$22984$CSxK@ '(begin (include "system-libraries.ss") (compile "system-libraries.ss")))))))) (library-letrec*-identity 'g$compile-system-libraries$14382$CSxK@))) (g$compile$14383$CSxK@ g$compile$14444$CSxK@ ((case-lambda ((g$C$23053$CSxK@) (g$C$23053$CSxK@ (case-lambda ((g$C$22985$CSxK@ g$filename$14412$CSxK@) (g$load-r6rs-top-level$14385$CSxK@ g$C$22985$CSxK@ g$filename$14412$CSxK@ 'compile)))))) (library-letrec*-identity 'g$compile$14383$CSxK@))) (g$compile->closure$14384$CSxK@ g$compile->closure$14445$CSxK@ ((case-lambda ((g$C$23054$CSxK@) (g$C$23054$CSxK@ (case-lambda ((g$C$22986$CSxK@ g$filename$14413$CSxK@) (g$load-r6rs-top-level$14385$CSxK@ g$C$22986$CSxK@ g$filename$14413$CSxK@ 'closure)))))) (library-letrec*-identity 'g$compile->closure$14384$CSxK@))) (g$load-r6rs-top-level$14385$CSxK@ g$load-r6rs-top-level$14446$CSxK@ ((case-lambda ((g$C$23055$CSxK@) (g$C$23055$CSxK@ (case-lambda ((g$C$23022$CSxK@ g$filename$14414$CSxK@ g$how$14415$CSxK@ . g$args$14416$CSxK@) (g$local-library-path$14375$CSxK@ (case-lambda ((g$V$23023$CSxK@) ((case-lambda ((g$C$23021$CSxK@ g$library-path$14419$CSxK@ g$library-path$14420$CSxK@) ((case-lambda ((g$C$23016$CSxK@ g$swap$14421$CSxK@) (dynamic-wind g$C$23016$CSxK@ g$swap$14421$CSxK@ (case-lambda ((g$C$23014$CSxK@) (g$with-input-from-file$8907$CSxK@ (case-lambda ((g$V$23015$CSxK@) ((case-lambda ((g$C$23003$CSxK@ g$x*$14422$CSxK@) ((case-lambda ((g$C$22996$CSxK@ g$t$14423$CSxK@) (eqv? (case-lambda ((g$T$22997$CSxK@) (if g$T$22997$CSxK@ (g$pre-compile-r6rs-top-level$14369$CSxK@ g$C$22996$CSxK@ g$x*$14422$CSxK@) (eqv? (case-lambda ((g$T$22998$CSxK@) (if g$T$22998$CSxK@ (g$map$6713$CSxK@ (case-lambda ((g$V$22999$CSxK@) (cons (case-lambda ((g$V$23000$CSxK@) ((case-lambda ((g$C$22994$CSxK@ g$command-line$14426$CSxK@ g$command-line$14427$CSxK@) ((case-lambda ((g$C$22989$CSxK@ g$swap$14428$CSxK@) (dynamic-wind g$C$22989$CSxK@ g$swap$14428$CSxK@ (case-lambda ((g$C$22987$CSxK@) (g$compile-r6rs-top-level$14368$CSxK@ (case-lambda ((g$V$22988$CSxK@) (g$V$22988$CSxK@ g$C$22987$CSxK@))) g$x*$14422$CSxK@))) g$swap$14428$CSxK@))) g$C$22994$CSxK@ (case-lambda ((g$C$22992$CSxK@) (g$command-line$14426$CSxK@ (case-lambda ((g$V$22993$CSxK@) ((case-lambda ((g$C$22990$CSxK@ g$t$14429$CSxK@) (g$command-line$14426$CSxK@ (case-lambda (g$IGNORE$22991$CSxK@ (begin (set! g$command-line$14427$CSxK@ g$t$14429$CSxK@) (g$C$22990$CSxK@ (cps-void))))) g$command-line$14427$CSxK@))) g$C$22992$CSxK@ g$V$22993$CSxK@))))))))) g$C$22996$CSxK@ g$command-line$14374$CSxK@ g$V$23000$CSxK@))) g$filename$14414$CSxK@ g$V$22999$CSxK@))) (case-lambda ((g$C$22995$CSxK@ g$x$14430$CSxK@) (g$format$9085$CSxK@ g$C$22995$CSxK@ '"~a" g$x$14430$CSxK@))) g$args$14416$CSxK@) (eqv? (case-lambda ((g$T$23001$CSxK@) (if g$T$23001$CSxK@ (g$compile-r6rs-top-level$14368$CSxK@ (case-lambda (g$IGNORE$23002$CSxK@ (g$serialize-all$10069$CSxK@ g$C$22996$CSxK@ serialize-library g$compile-core-expr$9817$CSxK@))) g$x*$14422$CSxK@) (if '#f (g$C$22996$CSxK@ '#f) (void g$C$22996$CSxK@))))) g$t$14423$CSxK@ 'compile)))) g$t$14423$CSxK@ 'load)))) g$t$14423$CSxK@ 'closure))) g$C$23003$CSxK@ g$how$14415$CSxK@))) g$C$23014$CSxK@ g$V$23015$CSxK@))) g$filename$14414$CSxK@ (case-lambda ((g$C$23012$CSxK@) ((case-lambda ((g$C$23011$CSxK@ g$f$14431$CSxK@) ((case-lambda ((g$C$23005$CSxK@ g$f$23004$CSxK@) (begin (set! g$f$14431$CSxK@ g$f$23004$CSxK@) (g$C$23005$CSxK@ g$f$14431$CSxK@)))) g$C$23011$CSxK@ (case-lambda ((g$C$23009$CSxK@) (read-annotated (case-lambda ((g$V$23010$CSxK@) ((case-lambda ((g$C$23006$CSxK@ g$x$14432$CSxK@) (eof-object? (case-lambda ((g$T$23007$CSxK@) (if g$T$23007$CSxK@ (g$C$23006$CSxK@ '()) (g$f$14431$CSxK@ (case-lambda ((g$V$23008$CSxK@) (cons g$C$23006$CSxK@ g$x$14432$CSxK@ g$V$23008$CSxK@))))))) g$x$14432$CSxK@))) g$C$23009$CSxK@ g$V$23010$CSxK@))))))))) (case-lambda ((g$V$23013$CSxK@) (g$V$23013$CSxK@ g$C$23012$CSxK@))) uninitialized)))))) g$swap$14421$CSxK@))) g$C$23021$CSxK@ (case-lambda ((g$C$23019$CSxK@) (g$library-path$14419$CSxK@ (case-lambda ((g$V$23020$CSxK@) ((case-lambda ((g$C$23017$CSxK@ g$t$14433$CSxK@) (g$library-path$14419$CSxK@ (case-lambda (g$IGNORE$23018$CSxK@ (begin (set! g$library-path$14420$CSxK@ g$t$14433$CSxK@) (g$C$23017$CSxK@ (cps-void))))) g$library-path$14420$CSxK@))) g$C$23019$CSxK@ g$V$23020$CSxK@))))))))) g$C$23022$CSxK@ g$library-path$10065$CSxK@ g$V$23023$CSxK@))) g$filename$14414$CSxK@)))))) (library-letrec*-identity 'g$load-r6rs-top-level$14385$CSxK@))) (g$fo$14386$CSxK@ g$fo$14447$CSxK@ ((case-lambda ((g$C$23056$CSxK@) (g$make-enumeration$9047$CSxK@ g$C$23056$CSxK@ '(no-fail no-create no-truncate)))) (library-letrec*-identity 'g$fo$14386$CSxK@)))) (g$current-precompiled-library-loader$10070$CSxK@ (case-lambda (g$IGNORE$23027$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23028$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23029$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23030$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23031$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23032$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23033$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23034$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23035$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23036$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23037$CSxK@ (set-symbol-value! (case-lambda (g$IGNORE$23038$CSxK@ (g$enum-set-constructor$9050$CSxK@ (case-lambda ((g$V$23039$CSxK@) (g$file-options-constructor$9569$CSxK@ (case-lambda (g$IGNORE$23040$CSxK@ (get-library-paths (case-lambda ((g$V$23041$CSxK@) (g$library-path$10065$CSxK@ identity-for-cps g$V$23041$CSxK@)))))) g$V$23039$CSxK@))) g$fo$14386$CSxK@))) 'raise g$raise$7670$CSxK@))) 'assertion-violation g$assertion-violation$7672$CSxK@))) 'convert->cps g$convert->cps$9407$CSxK@))) 'trace-printer g$trace-printer$14373$CSxK@))) 'expanded2core g$expanded->core$9816$CSxK@))) 'int-env-syms g$interaction-environment-symbols$14337$CSxK@))) 'eval-r6rs g$eval-top-level$14381$CSxK@))) 'compile->closure g$compile->closure$14384$CSxK@))) 'compile g$compile$14383$CSxK@))) 'load g$load$14378$CSxK@))) 'default-exception-handler (case-lambda ((g$C$23024$CSxK@ g$ex$14387$CSxK@) (g$serious-condition?$8082$CSxK@ (case-lambda ((g$T$23025$CSxK@) (if g$T$23025$CSxK@ (g$raise$7670$CSxK@ g$C$23024$CSxK@ g$ex$14387$CSxK@) (display (case-lambda (g$IGNORE$23026$CSxK@ (g$newline$8911$CSxK@ g$C$23024$CSxK@))) g$ex$14387$CSxK@)))) g$ex$14387$CSxK@)))))) load-serialized-library))