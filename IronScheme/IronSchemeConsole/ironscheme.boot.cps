(library-letrec* (psyntax config) () (void identity-for-cps))(library-letrec* (ironscheme lists) ((g$list-tail$5516$sFQex g$list-tail$5660$sFQex ((case-lambda ((g$C$12875$sFQex) (g$C$12875$sFQex (case-lambda ((g$C$12674$sFQex g$lst$5544$sFQex g$index$5545$sFQex) (null? (case-lambda ((g$V$12675$sFQex) ((case-lambda ((g$C$12673$sFQex g$t$5546$sFQex) (if g$t$5546$sFQex (g$C$12673$sFQex g$t$5546$sFQex) (g$negative?$6205$sFQex g$C$12673$sFQex g$index$5545$sFQex)))) (case-lambda ((g$T$12676$sFQex) (if g$T$12676$sFQex (g$assertion-violation$6456$sFQex g$C$12674$sFQex 'list-tail '"index out of range" g$lst$5544$sFQex g$index$5545$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$T$12677$sFQex) (if g$T$12677$sFQex (g$C$12674$sFQex g$lst$5544$sFQex) (- (case-lambda ((g$V$12678$sFQex) (cdr (case-lambda ((g$V$12679$sFQex) (g$list-tail$5516$sFQex g$C$12674$sFQex g$V$12679$sFQex g$V$12678$sFQex))) g$lst$5544$sFQex))) g$index$5545$sFQex '1)))) g$index$5545$sFQex)))) g$V$12675$sFQex))) g$lst$5544$sFQex)))))) (library-letrec*-identity 'g$list-tail$5516$sFQex))) (g$list-ref$5517$sFQex g$list-ref$5661$sFQex ((case-lambda ((g$C$12876$sFQex) (g$C$12876$sFQex (case-lambda ((g$C$12680$sFQex g$lst$5547$sFQex g$index$5548$sFQex) (g$list-tail$5516$sFQex (case-lambda ((g$V$12681$sFQex) (car g$C$12680$sFQex g$V$12681$sFQex))) g$lst$5547$sFQex g$index$5548$sFQex)))))) (library-letrec*-identity 'g$list-ref$5517$sFQex))) (g$last-pair$5518$sFQex g$last-pair$5662$sFQex ((case-lambda ((g$C$12877$sFQex) (g$C$12877$sFQex (case-lambda ((g$C$12682$sFQex g$lst$5549$sFQex) (null? (case-lambda ((g$T$12683$sFQex) (if g$T$12683$sFQex (g$C$12682$sFQex g$lst$5549$sFQex) (cdr (case-lambda ((g$V$12684$sFQex) (null? (case-lambda ((g$T$12685$sFQex) (if g$T$12685$sFQex (g$C$12682$sFQex g$lst$5549$sFQex) (cdr (case-lambda ((g$V$12686$sFQex) (g$last-pair$5518$sFQex g$C$12682$sFQex g$V$12686$sFQex))) g$lst$5549$sFQex)))) g$V$12684$sFQex))) g$lst$5549$sFQex)))) g$lst$5549$sFQex)))))) (library-letrec*-identity 'g$last-pair$5518$sFQex))) (g$make-list$5519$sFQex g$make-list$5663$sFQex ((case-lambda ((g$C$12878$sFQex) (g$C$12878$sFQex (case-lambda ((g$C$12687$sFQex g$n$5550$sFQex) (make-vector (case-lambda ((g$V$12688$sFQex) (vector->list g$C$12687$sFQex g$V$12688$sFQex))) g$n$5550$sFQex)) ((g$C$12687$sFQex g$n$5551$sFQex g$fill$5552$sFQex) (make-vector (case-lambda ((g$V$12689$sFQex) (vector->list g$C$12687$sFQex g$V$12689$sFQex))) g$n$5551$sFQex g$fill$5552$sFQex)))))) (library-letrec*-identity 'g$make-list$5519$sFQex))) (g$find$5520$sFQex g$find$5664$sFQex ((case-lambda ((g$C$12879$sFQex) (g$C$12879$sFQex (case-lambda ((g$C$12692$sFQex g$proc$5553$sFQex g$l$5554$sFQex) (null? (case-lambda ((g$T$12693$sFQex) (if g$T$12693$sFQex (g$C$12692$sFQex '#f) (cdr (case-lambda ((g$V$12694$sFQex) (car (case-lambda ((g$V$12695$sFQex) ((case-lambda ((g$C$12690$sFQex g$e$5555$sFQex g$r$5556$sFQex g$proc$5557$sFQex) (g$proc$5557$sFQex (case-lambda ((g$T$12691$sFQex) (if g$T$12691$sFQex (g$C$12690$sFQex g$e$5555$sFQex) (g$find$5520$sFQex g$C$12690$sFQex g$proc$5557$sFQex g$r$5556$sFQex)))) g$e$5555$sFQex))) g$C$12692$sFQex g$V$12695$sFQex g$V$12694$sFQex g$proc$5553$sFQex))) g$l$5554$sFQex))) g$l$5554$sFQex)))) g$l$5554$sFQex)))))) (library-letrec*-identity 'g$find$5520$sFQex))) (g$partition$5521$sFQex g$partition$5665$sFQex ((case-lambda ((g$C$12880$sFQex) (g$C$12880$sFQex (case-lambda ((g$C$12710$sFQex g$proc$5558$sFQex g$l$5559$sFQex) ((case-lambda ((g$C$12709$sFQex g$f$5560$sFQex) ((case-lambda ((g$C$12697$sFQex g$f$12696$sFQex) (begin (set! g$f$5560$sFQex g$f$12696$sFQex) (g$C$12697$sFQex g$f$5560$sFQex)))) g$C$12709$sFQex (case-lambda ((g$C$12704$sFQex g$l$5561$sFQex g$a$5562$sFQex g$b$5563$sFQex) (null? (case-lambda ((g$T$12705$sFQex) (if g$T$12705$sFQex (reverse! (case-lambda ((g$V$12706$sFQex) (reverse! (case-lambda ((g$V$12707$sFQex) (values g$C$12704$sFQex g$V$12707$sFQex g$V$12706$sFQex))) g$a$5562$sFQex))) g$b$5563$sFQex) (car (case-lambda ((g$V$12708$sFQex) ((case-lambda ((g$C$12698$sFQex g$e$5564$sFQex) (g$proc$5558$sFQex (case-lambda ((g$T$12699$sFQex) (if g$T$12699$sFQex (cons (case-lambda ((g$V$12700$sFQex) (cdr (case-lambda ((g$V$12701$sFQex) (g$f$5560$sFQex g$C$12698$sFQex g$V$12701$sFQex g$V$12700$sFQex g$b$5563$sFQex))) g$l$5561$sFQex))) g$e$5564$sFQex g$a$5562$sFQex) (cons (case-lambda ((g$V$12702$sFQex) (cdr (case-lambda ((g$V$12703$sFQex) (g$f$5560$sFQex g$C$12698$sFQex g$V$12703$sFQex g$a$5562$sFQex g$V$12702$sFQex))) g$l$5561$sFQex))) g$e$5564$sFQex g$b$5563$sFQex)))) g$e$5564$sFQex))) g$C$12704$sFQex g$V$12708$sFQex))) g$l$5561$sFQex)))) g$l$5561$sFQex)))))) (case-lambda ((g$V$12711$sFQex) (g$V$12711$sFQex g$C$12710$sFQex g$l$5559$sFQex '() '()))) uninitialized)))))) (library-letrec*-identity 'g$partition$5521$sFQex))) (g$remp$5522$sFQex g$remp$5666$sFQex ((case-lambda ((g$C$12881$sFQex) (g$C$12881$sFQex (case-lambda ((g$C$12723$sFQex g$proc$5565$sFQex g$l$5566$sFQex) ((case-lambda ((g$C$12722$sFQex g$f$5567$sFQex) ((case-lambda ((g$C$12713$sFQex g$f$12712$sFQex) (begin (set! g$f$5567$sFQex g$f$12712$sFQex) (g$C$12713$sFQex g$f$5567$sFQex)))) g$C$12722$sFQex (case-lambda ((g$C$12719$sFQex g$l$5568$sFQex g$a$5569$sFQex) (null? (case-lambda ((g$T$12720$sFQex) (if g$T$12720$sFQex (reverse! g$C$12719$sFQex g$a$5569$sFQex) (car (case-lambda ((g$V$12721$sFQex) ((case-lambda ((g$C$12714$sFQex g$e$5570$sFQex) (g$proc$5565$sFQex (case-lambda ((g$T$12715$sFQex) (if g$T$12715$sFQex (cdr (case-lambda ((g$V$12716$sFQex) (g$f$5567$sFQex g$C$12714$sFQex g$V$12716$sFQex g$a$5569$sFQex))) g$l$5568$sFQex) (cons (case-lambda ((g$V$12717$sFQex) (cdr (case-lambda ((g$V$12718$sFQex) (g$f$5567$sFQex g$C$12714$sFQex g$V$12718$sFQex g$V$12717$sFQex))) g$l$5568$sFQex))) g$e$5570$sFQex g$a$5569$sFQex)))) g$e$5570$sFQex))) g$C$12719$sFQex g$V$12721$sFQex))) g$l$5568$sFQex)))) g$l$5568$sFQex)))))) (case-lambda ((g$V$12724$sFQex) (g$V$12724$sFQex g$C$12723$sFQex g$l$5566$sFQex '()))) uninitialized)))))) (library-letrec*-identity 'g$remp$5522$sFQex))) (g$filter$5523$sFQex g$filter$5667$sFQex ((case-lambda ((g$C$12882$sFQex) (g$C$12882$sFQex (case-lambda ((g$C$12736$sFQex g$proc$5571$sFQex g$l$5572$sFQex) ((case-lambda ((g$C$12735$sFQex g$f$5573$sFQex) ((case-lambda ((g$C$12726$sFQex g$f$12725$sFQex) (begin (set! g$f$5573$sFQex g$f$12725$sFQex) (g$C$12726$sFQex g$f$5573$sFQex)))) g$C$12735$sFQex (case-lambda ((g$C$12732$sFQex g$l$5574$sFQex g$a$5575$sFQex) (null? (case-lambda ((g$T$12733$sFQex) (if g$T$12733$sFQex (reverse! g$C$12732$sFQex g$a$5575$sFQex) (car (case-lambda ((g$V$12734$sFQex) ((case-lambda ((g$C$12727$sFQex g$e$5576$sFQex) (g$proc$5571$sFQex (case-lambda ((g$T$12728$sFQex) (if g$T$12728$sFQex (cons (case-lambda ((g$V$12729$sFQex) (cdr (case-lambda ((g$V$12730$sFQex) (g$f$5573$sFQex g$C$12727$sFQex g$V$12730$sFQex g$V$12729$sFQex))) g$l$5574$sFQex))) g$e$5576$sFQex g$a$5575$sFQex) (cdr (case-lambda ((g$V$12731$sFQex) (g$f$5573$sFQex g$C$12727$sFQex g$V$12731$sFQex g$a$5575$sFQex))) g$l$5574$sFQex)))) g$e$5576$sFQex))) g$C$12732$sFQex g$V$12734$sFQex))) g$l$5574$sFQex)))) g$l$5574$sFQex)))))) (case-lambda ((g$V$12737$sFQex) (g$V$12737$sFQex g$C$12736$sFQex g$l$5572$sFQex '()))) uninitialized)))))) (library-letrec*-identity 'g$filter$5523$sFQex))) (g$assq$5524$sFQex g$assq$5668$sFQex ((case-lambda ((g$C$12883$sFQex) (g$C$12883$sFQex (case-lambda ((g$C$12741$sFQex g$obj$5577$sFQex g$lst$5578$sFQex) (null? (case-lambda ((g$T$12742$sFQex) (if g$T$12742$sFQex (g$C$12741$sFQex '#f) (cdr (case-lambda ((g$V$12743$sFQex) (car (case-lambda ((g$V$12744$sFQex) ((case-lambda ((g$C$12738$sFQex g$obj$5579$sFQex g$t$5580$sFQex g$r$5581$sFQex) (car (case-lambda ((g$V$12739$sFQex) (eq? (case-lambda ((g$T$12740$sFQex) (if g$T$12740$sFQex (g$C$12738$sFQex g$t$5580$sFQex) (g$assq$5524$sFQex g$C$12738$sFQex g$obj$5579$sFQex g$r$5581$sFQex)))) g$obj$5579$sFQex g$V$12739$sFQex))) g$t$5580$sFQex))) g$C$12741$sFQex g$obj$5577$sFQex g$V$12744$sFQex g$V$12743$sFQex))) g$lst$5578$sFQex))) g$lst$5578$sFQex)))) g$lst$5578$sFQex)))))) (library-letrec*-identity 'g$assq$5524$sFQex))) (g$assv$5525$sFQex g$assv$5669$sFQex ((case-lambda ((g$C$12884$sFQex) (g$C$12884$sFQex (case-lambda ((g$C$12748$sFQex g$obj$5582$sFQex g$lst$5583$sFQex) (null? (case-lambda ((g$T$12749$sFQex) (if g$T$12749$sFQex (g$C$12748$sFQex '#f) (cdr (case-lambda ((g$V$12750$sFQex) (car (case-lambda ((g$V$12751$sFQex) ((case-lambda ((g$C$12745$sFQex g$obj$5584$sFQex g$t$5585$sFQex g$r$5586$sFQex) (car (case-lambda ((g$V$12746$sFQex) (eqv? (case-lambda ((g$T$12747$sFQex) (if g$T$12747$sFQex (g$C$12745$sFQex g$t$5585$sFQex) (g$assv$5525$sFQex g$C$12745$sFQex g$obj$5584$sFQex g$r$5586$sFQex)))) g$obj$5584$sFQex g$V$12746$sFQex))) g$t$5585$sFQex))) g$C$12748$sFQex g$obj$5582$sFQex g$V$12751$sFQex g$V$12750$sFQex))) g$lst$5583$sFQex))) g$lst$5583$sFQex)))) g$lst$5583$sFQex)))))) (library-letrec*-identity 'g$assv$5525$sFQex))) (g$assoc$5526$sFQex g$assoc$5670$sFQex ((case-lambda ((g$C$12885$sFQex) (g$C$12885$sFQex (case-lambda ((g$C$12755$sFQex g$obj$5587$sFQex g$lst$5588$sFQex) (null? (case-lambda ((g$T$12756$sFQex) (if g$T$12756$sFQex (g$C$12755$sFQex '#f) (cdr (case-lambda ((g$V$12757$sFQex) (car (case-lambda ((g$V$12758$sFQex) ((case-lambda ((g$C$12752$sFQex g$obj$5589$sFQex g$t$5590$sFQex g$r$5591$sFQex) (car (case-lambda ((g$V$12753$sFQex) (equal? (case-lambda ((g$T$12754$sFQex) (if g$T$12754$sFQex (g$C$12752$sFQex g$t$5590$sFQex) (g$assoc$5526$sFQex g$C$12752$sFQex g$obj$5589$sFQex g$r$5591$sFQex)))) g$obj$5589$sFQex g$V$12753$sFQex))) g$t$5590$sFQex))) g$C$12755$sFQex g$obj$5587$sFQex g$V$12758$sFQex g$V$12757$sFQex))) g$lst$5588$sFQex))) g$lst$5588$sFQex)))) g$lst$5588$sFQex)))))) (library-letrec*-identity 'g$assoc$5526$sFQex))) (g$assp$5527$sFQex g$assp$5671$sFQex ((case-lambda ((g$C$12886$sFQex) (g$C$12886$sFQex (case-lambda ((g$C$12762$sFQex g$p?$5592$sFQex g$lst$5593$sFQex) (null? (case-lambda ((g$T$12763$sFQex) (if g$T$12763$sFQex (g$C$12762$sFQex '#f) (cdr (case-lambda ((g$V$12764$sFQex) (car (case-lambda ((g$V$12765$sFQex) ((case-lambda ((g$C$12759$sFQex g$p?$5594$sFQex g$t$5595$sFQex g$r$5596$sFQex) (car (case-lambda ((g$V$12760$sFQex) (g$p?$5594$sFQex (case-lambda ((g$T$12761$sFQex) (if g$T$12761$sFQex (g$C$12759$sFQex g$t$5595$sFQex) (g$assp$5527$sFQex g$C$12759$sFQex g$p?$5594$sFQex g$r$5596$sFQex)))) g$V$12760$sFQex))) g$t$5595$sFQex))) g$C$12762$sFQex g$p?$5592$sFQex g$V$12765$sFQex g$V$12764$sFQex))) g$lst$5593$sFQex))) g$lst$5593$sFQex)))) g$lst$5593$sFQex)))))) (library-letrec*-identity 'g$assp$5527$sFQex))) (g$memq$5528$sFQex g$memq$5672$sFQex ((case-lambda ((g$C$12887$sFQex) (g$C$12887$sFQex (case-lambda ((g$C$12766$sFQex g$obj$5597$sFQex g$lst$5598$sFQex) (null? (case-lambda ((g$T$12767$sFQex) (if g$T$12767$sFQex (g$C$12766$sFQex '#f) (car (case-lambda ((g$V$12768$sFQex) (eq? (case-lambda ((g$T$12769$sFQex) (if g$T$12769$sFQex (g$C$12766$sFQex g$lst$5598$sFQex) (cdr (case-lambda ((g$V$12770$sFQex) (g$memq$5528$sFQex g$C$12766$sFQex g$obj$5597$sFQex g$V$12770$sFQex))) g$lst$5598$sFQex)))) g$obj$5597$sFQex g$V$12768$sFQex))) g$lst$5598$sFQex)))) g$lst$5598$sFQex)))))) (library-letrec*-identity 'g$memq$5528$sFQex))) (g$memv$5529$sFQex g$memv$5673$sFQex ((case-lambda ((g$C$12888$sFQex) (g$C$12888$sFQex (case-lambda ((g$C$12771$sFQex g$obj$5599$sFQex g$lst$5600$sFQex) (null? (case-lambda ((g$T$12772$sFQex) (if g$T$12772$sFQex (g$C$12771$sFQex '#f) (car (case-lambda ((g$V$12773$sFQex) (eqv? (case-lambda ((g$T$12774$sFQex) (if g$T$12774$sFQex (g$C$12771$sFQex g$lst$5600$sFQex) (cdr (case-lambda ((g$V$12775$sFQex) (g$memv$5529$sFQex g$C$12771$sFQex g$obj$5599$sFQex g$V$12775$sFQex))) g$lst$5600$sFQex)))) g$obj$5599$sFQex g$V$12773$sFQex))) g$lst$5600$sFQex)))) g$lst$5600$sFQex)))))) (library-letrec*-identity 'g$memv$5529$sFQex))) (g$member$5530$sFQex g$member$5674$sFQex ((case-lambda ((g$C$12889$sFQex) (g$C$12889$sFQex (case-lambda ((g$C$12776$sFQex g$obj$5601$sFQex g$lst$5602$sFQex) (null? (case-lambda ((g$T$12777$sFQex) (if g$T$12777$sFQex (g$C$12776$sFQex '#f) (car (case-lambda ((g$V$12778$sFQex) (equal? (case-lambda ((g$T$12779$sFQex) (if g$T$12779$sFQex (g$C$12776$sFQex g$lst$5602$sFQex) (cdr (case-lambda ((g$V$12780$sFQex) (g$member$5530$sFQex g$C$12776$sFQex g$obj$5601$sFQex g$V$12780$sFQex))) g$lst$5602$sFQex)))) g$obj$5601$sFQex g$V$12778$sFQex))) g$lst$5602$sFQex)))) g$lst$5602$sFQex)))))) (library-letrec*-identity 'g$member$5530$sFQex))) (g$memp$5531$sFQex g$memp$5675$sFQex ((case-lambda ((g$C$12890$sFQex) (g$C$12890$sFQex (case-lambda ((g$C$12781$sFQex g$p?$5603$sFQex g$lst$5604$sFQex) (null? (case-lambda ((g$T$12782$sFQex) (if g$T$12782$sFQex (g$C$12781$sFQex '#f) (car (case-lambda ((g$V$12783$sFQex) (g$p?$5603$sFQex (case-lambda ((g$T$12784$sFQex) (if g$T$12784$sFQex (g$C$12781$sFQex g$lst$5604$sFQex) (cdr (case-lambda ((g$V$12785$sFQex) (g$memp$5531$sFQex g$C$12781$sFQex g$p?$5603$sFQex g$V$12785$sFQex))) g$lst$5604$sFQex)))) g$V$12783$sFQex))) g$lst$5604$sFQex)))) g$lst$5604$sFQex)))))) (library-letrec*-identity 'g$memp$5531$sFQex))) (g$all-empty?$5532$sFQex g$all-empty?$5676$sFQex ((case-lambda ((g$C$12891$sFQex) (g$C$12891$sFQex (case-lambda ((g$C$12790$sFQex g$ls$5605$sFQex) (null? (case-lambda ((g$V$12791$sFQex) ((case-lambda ((g$C$12786$sFQex g$t$5606$sFQex) (if g$t$5606$sFQex (g$C$12786$sFQex g$t$5606$sFQex) (car (case-lambda ((g$V$12787$sFQex) (null? (case-lambda ((g$T$12788$sFQex) (if g$T$12788$sFQex (cdr (case-lambda ((g$V$12789$sFQex) (g$all-empty?$5532$sFQex g$C$12786$sFQex g$V$12789$sFQex))) g$ls$5605$sFQex) (g$C$12786$sFQex '#f)))) g$V$12787$sFQex))) g$ls$5605$sFQex)))) g$C$12790$sFQex g$V$12791$sFQex))) g$ls$5605$sFQex)))))) (library-letrec*-identity 'g$all-empty?$5532$sFQex))) (g$split$5533$sFQex g$split$5677$sFQex ((case-lambda ((g$C$12892$sFQex) (g$C$12892$sFQex (case-lambda ((g$C$12801$sFQex g$ls$5607$sFQex) (null? (case-lambda ((g$T$12802$sFQex) (if g$T$12802$sFQex (values g$C$12801$sFQex '() '()) (call-with-values g$C$12801$sFQex (case-lambda ((g$C$12792$sFQex) (cdr (case-lambda ((g$V$12793$sFQex) (g$split$5533$sFQex g$C$12792$sFQex g$V$12793$sFQex))) g$ls$5607$sFQex))) (case-lambda ((g$C$12799$sFQex g$cars$5608$sFQex g$cdrs$5609$sFQex) (car (case-lambda ((g$V$12800$sFQex) ((case-lambda ((g$C$12794$sFQex g$a$5610$sFQex) (cdr (case-lambda ((g$V$12795$sFQex) (cons (case-lambda ((g$V$12796$sFQex) (car (case-lambda ((g$V$12797$sFQex) (cons (case-lambda ((g$V$12798$sFQex) (values g$C$12794$sFQex g$V$12798$sFQex g$V$12796$sFQex))) g$V$12797$sFQex g$cars$5608$sFQex))) g$a$5610$sFQex))) g$V$12795$sFQex g$cdrs$5609$sFQex))) g$a$5610$sFQex))) g$C$12799$sFQex g$V$12800$sFQex))) g$ls$5607$sFQex))))))) g$ls$5607$sFQex)))))) (library-letrec*-identity 'g$split$5533$sFQex))) (g$for-all$5534$sFQex g$for-all$5678$sFQex ((case-lambda ((g$C$12893$sFQex) (g$C$12893$sFQex (case-lambda ((g$C$12809$sFQex g$f$5611$sFQex g$arg1$5612$sFQex . g$args$5613$sFQex) (cons (case-lambda ((g$V$12810$sFQex) ((case-lambda ((g$C$12807$sFQex g$args$5614$sFQex) (g$all-empty?$5532$sFQex (case-lambda ((g$T$12808$sFQex) (if g$T$12808$sFQex (g$C$12807$sFQex '#t) (call-with-values g$C$12807$sFQex (case-lambda ((g$C$12803$sFQex) (g$split$5533$sFQex g$C$12803$sFQex g$args$5614$sFQex))) (case-lambda ((g$C$12804$sFQex g$cars$5615$sFQex g$cdrs$5616$sFQex) (g$all-empty?$5532$sFQex (case-lambda ((g$T$12805$sFQex) (if g$T$12805$sFQex (apply g$C$12804$sFQex g$f$5611$sFQex g$cars$5615$sFQex) (apply (case-lambda ((g$T$12806$sFQex) (if g$T$12806$sFQex (apply g$C$12804$sFQex g$for-all$5534$sFQex g$f$5611$sFQex g$cdrs$5616$sFQex) (g$C$12804$sFQex '#f)))) g$f$5611$sFQex g$cars$5615$sFQex)))) g$cdrs$5616$sFQex))))))) g$args$5614$sFQex))) g$C$12809$sFQex g$V$12810$sFQex))) g$arg1$5612$sFQex g$args$5613$sFQex)))))) (library-letrec*-identity 'g$for-all$5534$sFQex))) (g$exists$5535$sFQex g$exists$5679$sFQex ((case-lambda ((g$C$12894$sFQex) (g$C$12894$sFQex (case-lambda ((g$C$12817$sFQex g$f$5617$sFQex g$arg1$5618$sFQex . g$args$5619$sFQex) (cons (case-lambda ((g$V$12818$sFQex) ((case-lambda ((g$C$12815$sFQex g$args$5620$sFQex) (g$all-empty?$5532$sFQex (case-lambda ((g$T$12816$sFQex) (if g$T$12816$sFQex (g$C$12815$sFQex '#f) (call-with-values g$C$12815$sFQex (case-lambda ((g$C$12811$sFQex) (g$split$5533$sFQex g$C$12811$sFQex g$args$5620$sFQex))) (case-lambda ((g$C$12813$sFQex g$cars$5621$sFQex g$cdrs$5622$sFQex) (apply (case-lambda ((g$V$12814$sFQex) ((case-lambda ((g$C$12812$sFQex g$t$5623$sFQex) (if g$t$5623$sFQex (g$C$12812$sFQex g$t$5623$sFQex) (apply g$C$12812$sFQex g$exists$5535$sFQex g$f$5617$sFQex g$cdrs$5622$sFQex)))) g$C$12813$sFQex g$V$12814$sFQex))) g$f$5617$sFQex g$cars$5621$sFQex))))))) g$args$5620$sFQex))) g$C$12817$sFQex g$V$12818$sFQex))) g$arg1$5618$sFQex g$args$5619$sFQex)))))) (library-letrec*-identity 'g$exists$5535$sFQex))) (g$map$5536$sFQex g$map$5680$sFQex ((case-lambda ((g$C$12895$sFQex) (g$C$12895$sFQex (case-lambda ((g$C$12828$sFQex g$proc$5624$sFQex g$list1$5625$sFQex . g$lists$5626$sFQex) (cons (case-lambda ((g$V$12829$sFQex) ((case-lambda ((g$C$12827$sFQex g$f$5627$sFQex) ((case-lambda ((g$C$12820$sFQex g$f$12819$sFQex) (begin (set! g$f$5627$sFQex g$f$12819$sFQex) (g$C$12820$sFQex g$f$5627$sFQex)))) g$C$12827$sFQex (case-lambda ((g$C$12825$sFQex g$lists$5628$sFQex g$a$5629$sFQex) (g$all-empty?$5532$sFQex (case-lambda ((g$T$12826$sFQex) (if g$T$12826$sFQex (reverse! g$C$12825$sFQex g$a$5629$sFQex) (call-with-values g$C$12825$sFQex (case-lambda ((g$C$12821$sFQex) (g$split$5533$sFQex g$C$12821$sFQex g$lists$5628$sFQex))) (case-lambda ((g$C$12822$sFQex g$cars$5630$sFQex g$cdrs$5631$sFQex) (apply (case-lambda ((g$V$12823$sFQex) (cons (case-lambda ((g$V$12824$sFQex) (g$f$5627$sFQex g$C$12822$sFQex g$cdrs$5631$sFQex g$V$12824$sFQex))) g$V$12823$sFQex g$a$5629$sFQex))) g$proc$5624$sFQex g$cars$5630$sFQex))))))) g$lists$5628$sFQex)))))) (case-lambda ((g$V$12830$sFQex) (g$V$12830$sFQex g$C$12828$sFQex g$V$12829$sFQex '()))) uninitialized))) g$list1$5625$sFQex g$lists$5626$sFQex)))))) (library-letrec*-identity 'g$map$5536$sFQex))) (g$for-each$5537$sFQex g$for-each$5681$sFQex ((case-lambda ((g$C$12896$sFQex) (g$C$12896$sFQex (case-lambda ((g$C$12837$sFQex g$f$5632$sFQex g$arg1$5633$sFQex . g$args$5634$sFQex) (cons (case-lambda ((g$V$12838$sFQex) ((case-lambda ((g$C$12834$sFQex g$args$5635$sFQex) (g$all-empty?$5532$sFQex (case-lambda ((g$V$12835$sFQex) (not (case-lambda ((g$T$12836$sFQex) (if g$T$12836$sFQex (call-with-values g$C$12834$sFQex (case-lambda ((g$C$12831$sFQex) (g$split$5533$sFQex g$C$12831$sFQex g$args$5635$sFQex))) (case-lambda ((g$C$12832$sFQex g$cars$5636$sFQex g$cdrs$5637$sFQex) (apply (case-lambda (g$IGNORE$12833$sFQex (apply g$C$12832$sFQex g$for-each$5537$sFQex g$f$5632$sFQex g$cdrs$5637$sFQex))) g$f$5632$sFQex g$cars$5636$sFQex)))) (void g$C$12834$sFQex)))) g$V$12835$sFQex))) g$args$5635$sFQex))) g$C$12837$sFQex g$V$12838$sFQex))) g$arg1$5633$sFQex g$args$5634$sFQex)))))) (library-letrec*-identity 'g$for-each$5537$sFQex))) (g$cons*$5538$sFQex g$cons*$5682$sFQex ((case-lambda ((g$C$12897$sFQex) (g$C$12897$sFQex (case-lambda ((g$C$12847$sFQex g$a$5638$sFQex . g$rest$5639$sFQex) ((case-lambda ((g$C$12846$sFQex g$f$5640$sFQex) ((case-lambda ((g$C$12840$sFQex g$f$12839$sFQex) (begin (set! g$f$5640$sFQex g$f$12839$sFQex) (g$C$12840$sFQex g$f$5640$sFQex)))) g$C$12846$sFQex (case-lambda ((g$C$12841$sFQex g$a$5641$sFQex g$rest$5642$sFQex) (null? (case-lambda ((g$T$12842$sFQex) (if g$T$12842$sFQex (g$C$12841$sFQex g$a$5641$sFQex) (cdr (case-lambda ((g$V$12843$sFQex) (car (case-lambda ((g$V$12844$sFQex) (g$f$5640$sFQex (case-lambda ((g$V$12845$sFQex) (cons g$C$12841$sFQex g$a$5641$sFQex g$V$12845$sFQex))) g$V$12844$sFQex g$V$12843$sFQex))) g$rest$5642$sFQex))) g$rest$5642$sFQex)))) g$rest$5642$sFQex)))))) (case-lambda ((g$V$12848$sFQex) (g$V$12848$sFQex g$C$12847$sFQex g$a$5638$sFQex g$rest$5639$sFQex))) uninitialized)))))) (library-letrec*-identity 'g$cons*$5538$sFQex))) (g$fold-left$5539$sFQex g$fold-left$5683$sFQex ((case-lambda ((g$C$12898$sFQex) (g$C$12898$sFQex (case-lambda ((g$C$12849$sFQex g$combine$5643$sFQex g$nil$5644$sFQex g$list1$5645$sFQex . g$lists$5646$sFQex) (null? (case-lambda ((g$T$12850$sFQex) (if g$T$12850$sFQex (g$C$12849$sFQex g$nil$5644$sFQex) (g$map$5536$sFQex (case-lambda ((g$V$12851$sFQex) (cdr (case-lambda ((g$V$12852$sFQex) (g$map$5536$sFQex (case-lambda ((g$V$12853$sFQex) (car (case-lambda ((g$V$12854$sFQex) (g$cons*$5538$sFQex (case-lambda ((g$V$12855$sFQex) (apply (case-lambda ((g$V$12856$sFQex) (g$cons*$5538$sFQex (case-lambda ((g$V$12857$sFQex) (apply g$C$12849$sFQex g$fold-left$5539$sFQex g$V$12857$sFQex))) g$combine$5643$sFQex g$V$12856$sFQex g$V$12852$sFQex g$V$12851$sFQex))) g$combine$5643$sFQex g$V$12855$sFQex))) g$nil$5644$sFQex g$V$12854$sFQex g$V$12853$sFQex))) g$list1$5645$sFQex))) car g$lists$5646$sFQex))) g$list1$5645$sFQex))) cdr g$lists$5646$sFQex)))) g$list1$5645$sFQex)))))) (library-letrec*-identity 'g$fold-left$5539$sFQex))) (g$fold-right$5540$sFQex g$fold-right$5684$sFQex ((case-lambda ((g$C$12899$sFQex) (g$C$12899$sFQex (case-lambda ((g$C$12858$sFQex g$combine$5647$sFQex g$nil$5648$sFQex g$list1$5649$sFQex . g$lists$5650$sFQex) (null? (case-lambda ((g$T$12859$sFQex) (if g$T$12859$sFQex (g$C$12858$sFQex g$nil$5648$sFQex) (g$map$5536$sFQex (case-lambda ((g$V$12860$sFQex) (cdr (case-lambda ((g$V$12861$sFQex) (g$cons*$5538$sFQex (case-lambda ((g$V$12862$sFQex) (apply (case-lambda ((g$V$12863$sFQex) (list (case-lambda ((g$V$12864$sFQex) (g$map$5536$sFQex (case-lambda ((g$V$12865$sFQex) (car (case-lambda ((g$V$12866$sFQex) (list (case-lambda ((g$V$12867$sFQex) (append (case-lambda ((g$V$12868$sFQex) (apply g$C$12858$sFQex g$combine$5647$sFQex g$V$12868$sFQex))) g$V$12867$sFQex g$V$12865$sFQex g$V$12864$sFQex))) g$V$12866$sFQex))) g$list1$5649$sFQex))) car g$lists$5650$sFQex))) g$V$12863$sFQex))) g$fold-right$5540$sFQex g$V$12862$sFQex))) g$combine$5647$sFQex g$nil$5648$sFQex g$V$12861$sFQex g$V$12860$sFQex))) g$list1$5649$sFQex))) cdr g$lists$5650$sFQex)))) g$list1$5649$sFQex)))))) (library-letrec*-identity 'g$fold-right$5540$sFQex))) (g$remove$5541$sFQex g$remove$5685$sFQex ((case-lambda ((g$C$12900$sFQex) (g$C$12900$sFQex (case-lambda ((g$C$12870$sFQex g$obj$5651$sFQex g$list$5652$sFQex) (g$remp$5522$sFQex g$C$12870$sFQex (case-lambda ((g$C$12869$sFQex g$x$5653$sFQex) (equal? g$C$12869$sFQex g$obj$5651$sFQex g$x$5653$sFQex))) g$list$5652$sFQex)))))) (library-letrec*-identity 'g$remove$5541$sFQex))) (g$remv$5542$sFQex g$remv$5686$sFQex ((case-lambda ((g$C$12901$sFQex) (g$C$12901$sFQex (case-lambda ((g$C$12872$sFQex g$obj$5654$sFQex g$list$5655$sFQex) (g$remp$5522$sFQex g$C$12872$sFQex (case-lambda ((g$C$12871$sFQex g$x$5656$sFQex) (eqv? g$C$12871$sFQex g$obj$5654$sFQex g$x$5656$sFQex))) g$list$5655$sFQex)))))) (library-letrec*-identity 'g$remv$5542$sFQex))) (g$remq$5543$sFQex g$remq$5687$sFQex ((case-lambda ((g$C$12902$sFQex) (g$C$12902$sFQex (case-lambda ((g$C$12874$sFQex g$obj$5657$sFQex g$list$5658$sFQex) (g$remp$5522$sFQex g$C$12874$sFQex (case-lambda ((g$C$12873$sFQex g$x$5659$sFQex) (eq? g$C$12873$sFQex g$obj$5657$sFQex g$x$5659$sFQex))) g$list$5658$sFQex)))))) (library-letrec*-identity 'g$remq$5543$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme base) ((g$div$5875$sFQex g$div$6159$sFQex ((case-lambda ((g$C$13364$sFQex) (g$C$13364$sFQex (case-lambda ((g$C$12906$sFQex g$x1$5959$sFQex g$x2$5960$sFQex) (call-with-values g$C$12906$sFQex (case-lambda ((g$C$12903$sFQex) (div-and-mod g$C$12903$sFQex g$x1$5959$sFQex g$x2$5960$sFQex))) (case-lambda ((g$C$12905$sFQex g$n$5963$sFQex g$d$5964$sFQex) ((case-lambda ((g$C$12904$sFQex g$d$5965$sFQex g$n$5966$sFQex) (g$C$12904$sFQex g$n$5966$sFQex))) g$C$12905$sFQex g$d$5964$sFQex g$n$5963$sFQex))))))))) (library-letrec*-identity 'g$div$5875$sFQex))) (g$div0$5876$sFQex g$div0$6160$sFQex ((case-lambda ((g$C$13365$sFQex) (g$C$13365$sFQex (case-lambda ((g$C$12910$sFQex g$x1$5967$sFQex g$x2$5968$sFQex) (call-with-values g$C$12910$sFQex (case-lambda ((g$C$12907$sFQex) (div0-and-mod0 g$C$12907$sFQex g$x1$5967$sFQex g$x2$5968$sFQex))) (case-lambda ((g$C$12909$sFQex g$n$5971$sFQex g$d$5972$sFQex) ((case-lambda ((g$C$12908$sFQex g$d$5973$sFQex g$n$5974$sFQex) (g$C$12908$sFQex g$n$5974$sFQex))) g$C$12909$sFQex g$d$5972$sFQex g$n$5971$sFQex))))))))) (library-letrec*-identity 'g$div0$5876$sFQex))) (g$mod$5877$sFQex g$mod$6161$sFQex ((case-lambda ((g$C$13366$sFQex) (g$C$13366$sFQex (case-lambda ((g$C$12914$sFQex g$x1$5975$sFQex g$x2$5976$sFQex) (call-with-values g$C$12914$sFQex (case-lambda ((g$C$12911$sFQex) (div-and-mod g$C$12911$sFQex g$x1$5975$sFQex g$x2$5976$sFQex))) (case-lambda ((g$C$12913$sFQex g$n$5979$sFQex g$d$5980$sFQex) ((case-lambda ((g$C$12912$sFQex g$d$5981$sFQex g$n$5982$sFQex) (g$C$12912$sFQex g$d$5981$sFQex))) g$C$12913$sFQex g$d$5980$sFQex g$n$5979$sFQex))))))))) (library-letrec*-identity 'g$mod$5877$sFQex))) (g$mod0$5878$sFQex g$mod0$6162$sFQex ((case-lambda ((g$C$13367$sFQex) (g$C$13367$sFQex (case-lambda ((g$C$12918$sFQex g$x1$5983$sFQex g$x2$5984$sFQex) (call-with-values g$C$12918$sFQex (case-lambda ((g$C$12915$sFQex) (div0-and-mod0 g$C$12915$sFQex g$x1$5983$sFQex g$x2$5984$sFQex))) (case-lambda ((g$C$12917$sFQex g$n$5987$sFQex g$d$5988$sFQex) ((case-lambda ((g$C$12916$sFQex g$d$5989$sFQex g$n$5990$sFQex) (g$C$12916$sFQex g$d$5989$sFQex))) g$C$12917$sFQex g$d$5988$sFQex g$n$5987$sFQex))))))))) (library-letrec*-identity 'g$mod0$5878$sFQex))) (g$list->vector$5879$sFQex g$list->vector$6163$sFQex ((case-lambda ((g$C$13368$sFQex) (g$C$13368$sFQex (case-lambda ((g$C$12919$sFQex g$lst$5991$sFQex) (apply g$C$12919$sFQex vector g$lst$5991$sFQex)))))) (library-letrec*-identity 'g$list->vector$5879$sFQex))) (g$list->string$5880$sFQex g$list->string$6164$sFQex ((case-lambda ((g$C$13369$sFQex) (g$C$13369$sFQex (case-lambda ((g$C$12920$sFQex g$lst$5992$sFQex) (apply g$C$12920$sFQex string g$lst$5992$sFQex)))))) (library-letrec*-identity 'g$list->string$5880$sFQex))) (g$char?$5881$sFQex g$char?$6165$sFQex ((case-lambda ((g$C$13370$sFQex) (g$C$13370$sFQex (case-lambda ((g$C$12921$sFQex g$obj$5993$sFQex) (g$C$12921$sFQex (clr-is-internal 'system.char g$obj$5993$sFQex))))))) (library-letrec*-identity 'g$char?$5881$sFQex))) (g$vector?$5882$sFQex g$vector?$6166$sFQex ((case-lambda ((g$C$13371$sFQex) (g$C$13371$sFQex (case-lambda ((g$C$12922$sFQex g$obj$5994$sFQex) (g$C$12922$sFQex (clr-is-internal 'system.object[] g$obj$5994$sFQex))))))) (library-letrec*-identity 'g$vector?$5882$sFQex))) (g$bytevector?$5883$sFQex g$bytevector?$6167$sFQex ((case-lambda ((g$C$13372$sFQex) (g$C$13372$sFQex (case-lambda ((g$C$12923$sFQex g$obj$5995$sFQex) (g$C$12923$sFQex (clr-is-internal 'system.byte[] g$obj$5995$sFQex))))))) (library-letrec*-identity 'g$bytevector?$5883$sFQex))) (g$symbol?$5884$sFQex g$symbol?$6168$sFQex ((case-lambda ((g$C$13373$sFQex) (g$C$13373$sFQex (case-lambda ((g$C$12924$sFQex g$obj$5996$sFQex) (g$C$12924$sFQex (clr-is-internal 'microsoft.scripting.symbolid g$obj$5996$sFQex))))))) (library-letrec*-identity 'g$symbol?$5884$sFQex))) (g$boolean?$5885$sFQex g$boolean?$6169$sFQex ((case-lambda ((g$C$13374$sFQex) (g$C$13374$sFQex (case-lambda ((g$C$12925$sFQex g$obj$5997$sFQex) (g$C$12925$sFQex (clr-is-internal 'system.boolean g$obj$5997$sFQex))))))) (library-letrec*-identity 'g$boolean?$5885$sFQex))) (g$procedure?$5886$sFQex g$procedure?$6170$sFQex ((case-lambda ((g$C$13375$sFQex) (g$C$13375$sFQex (case-lambda ((g$C$12926$sFQex g$obj$5998$sFQex) (g$C$12926$sFQex (clr-is-internal 'ironscheme.runtime.icallable g$obj$5998$sFQex))))))) (library-letrec*-identity 'g$procedure?$5886$sFQex))) (g$fixnum?$5887$sFQex g$fixnum?$6171$sFQex ((case-lambda ((g$C$13376$sFQex) (g$C$13376$sFQex (case-lambda ((g$C$12927$sFQex g$obj$5999$sFQex) (g$C$12927$sFQex (clr-is-internal 'system.int32 g$obj$5999$sFQex))))))) (library-letrec*-identity 'g$fixnum?$5887$sFQex))) (g$flonum?$5888$sFQex g$flonum?$6172$sFQex ((case-lambda ((g$C$13377$sFQex) (g$C$13377$sFQex (case-lambda ((g$C$12928$sFQex g$obj$6000$sFQex) (g$C$12928$sFQex (clr-is-internal 'system.double g$obj$6000$sFQex))))))) (library-letrec*-identity 'g$flonum?$5888$sFQex))) (g$fixnum-width$5889$sFQex g$fixnum-width$6173$sFQex ((case-lambda ((g$C$13378$sFQex) (g$C$13378$sFQex (case-lambda ((g$C$12929$sFQex) (g$C$12929$sFQex '32)))))) (library-letrec*-identity 'g$fixnum-width$5889$sFQex))) (g$vector-fill!$5890$sFQex g$vector-fill!$6174$sFQex ((case-lambda ((g$C$13379$sFQex) (g$C$13379$sFQex (case-lambda ((g$C$12938$sFQex g$vec$6001$sFQex g$val$6002$sFQex) (vector-length (case-lambda ((g$V$12939$sFQex) ((case-lambda ((g$C$12937$sFQex g$len$6003$sFQex) ((case-lambda ((g$C$12936$sFQex g$loop$6004$sFQex) ((case-lambda ((g$C$12931$sFQex g$loop$12930$sFQex) (begin (set! g$loop$6004$sFQex g$loop$12930$sFQex) (g$loop$6004$sFQex g$C$12931$sFQex '0)))) g$C$12936$sFQex (case-lambda ((g$C$12932$sFQex g$i$6005$sFQex) (fx=? (case-lambda ((g$T$12933$sFQex) (if g$T$12933$sFQex (if '#f (g$C$12932$sFQex '#f) (void g$C$12932$sFQex)) (vector-set! (case-lambda (g$IGNORE$12934$sFQex (fx+ (case-lambda ((g$V$12935$sFQex) (g$loop$6004$sFQex g$C$12932$sFQex g$V$12935$sFQex))) g$i$6005$sFQex '1))) g$vec$6001$sFQex g$i$6005$sFQex g$val$6002$sFQex)))) g$i$6005$sFQex g$len$6003$sFQex)))))) g$C$12937$sFQex uninitialized))) g$C$12938$sFQex g$V$12939$sFQex))) g$vec$6001$sFQex)))))) (library-letrec*-identity 'g$vector-fill!$5890$sFQex))) (g$reverse$5891$sFQex g$reverse$6175$sFQex ((case-lambda ((g$C$13380$sFQex) (g$C$13380$sFQex (case-lambda ((g$C$12941$sFQex g$lst$6006$sFQex) (g$fold-left$5683$sFQex g$C$12941$sFQex (case-lambda ((g$C$12940$sFQex g$x$6007$sFQex g$y$6008$sFQex) (cons g$C$12940$sFQex g$y$6008$sFQex g$x$6007$sFQex))) '() g$lst$6006$sFQex)))))) (library-letrec*-identity 'g$reverse$5891$sFQex))) (g$caar$5892$sFQex g$caar$6176$sFQex ((case-lambda ((g$C$13381$sFQex) (g$C$13381$sFQex (case-lambda ((g$C$12942$sFQex g$x$6009$sFQex) (car (case-lambda ((g$V$12943$sFQex) (car g$C$12942$sFQex g$V$12943$sFQex))) g$x$6009$sFQex)))))) (library-letrec*-identity 'g$caar$5892$sFQex))) (g$cadr$5893$sFQex g$cadr$6177$sFQex ((case-lambda ((g$C$13382$sFQex) (g$C$13382$sFQex (case-lambda ((g$C$12944$sFQex g$x$6010$sFQex) (cdr (case-lambda ((g$V$12945$sFQex) (car g$C$12944$sFQex g$V$12945$sFQex))) g$x$6010$sFQex)))))) (library-letrec*-identity 'g$cadr$5893$sFQex))) (g$cdar$5894$sFQex g$cdar$6178$sFQex ((case-lambda ((g$C$13383$sFQex) (g$C$13383$sFQex (case-lambda ((g$C$12946$sFQex g$x$6011$sFQex) (car (case-lambda ((g$V$12947$sFQex) (cdr g$C$12946$sFQex g$V$12947$sFQex))) g$x$6011$sFQex)))))) (library-letrec*-identity 'g$cdar$5894$sFQex))) (g$cddr$5895$sFQex g$cddr$6179$sFQex ((case-lambda ((g$C$13384$sFQex) (g$C$13384$sFQex (case-lambda ((g$C$12948$sFQex g$x$6012$sFQex) (cdr (case-lambda ((g$V$12949$sFQex) (cdr g$C$12948$sFQex g$V$12949$sFQex))) g$x$6012$sFQex)))))) (library-letrec*-identity 'g$cddr$5895$sFQex))) (g$caaar$5896$sFQex g$caaar$6180$sFQex ((case-lambda ((g$C$13385$sFQex) (g$C$13385$sFQex (case-lambda ((g$C$12950$sFQex g$x$6013$sFQex) (car (case-lambda ((g$V$12951$sFQex) (g$caar$5892$sFQex g$C$12950$sFQex g$V$12951$sFQex))) g$x$6013$sFQex)))))) (library-letrec*-identity 'g$caaar$5896$sFQex))) (g$caadr$5897$sFQex g$caadr$6181$sFQex ((case-lambda ((g$C$13386$sFQex) (g$C$13386$sFQex (case-lambda ((g$C$12952$sFQex g$x$6014$sFQex) (cdr (case-lambda ((g$V$12953$sFQex) (g$caar$5892$sFQex g$C$12952$sFQex g$V$12953$sFQex))) g$x$6014$sFQex)))))) (library-letrec*-identity 'g$caadr$5897$sFQex))) (g$cadar$5898$sFQex g$cadar$6182$sFQex ((case-lambda ((g$C$13387$sFQex) (g$C$13387$sFQex (case-lambda ((g$C$12954$sFQex g$x$6015$sFQex) (car (case-lambda ((g$V$12955$sFQex) (g$cadr$5893$sFQex g$C$12954$sFQex g$V$12955$sFQex))) g$x$6015$sFQex)))))) (library-letrec*-identity 'g$cadar$5898$sFQex))) (g$caddr$5899$sFQex g$caddr$6183$sFQex ((case-lambda ((g$C$13388$sFQex) (g$C$13388$sFQex (case-lambda ((g$C$12956$sFQex g$x$6016$sFQex) (cdr (case-lambda ((g$V$12957$sFQex) (g$cadr$5893$sFQex g$C$12956$sFQex g$V$12957$sFQex))) g$x$6016$sFQex)))))) (library-letrec*-identity 'g$caddr$5899$sFQex))) (g$cdaar$5900$sFQex g$cdaar$6184$sFQex ((case-lambda ((g$C$13389$sFQex) (g$C$13389$sFQex (case-lambda ((g$C$12958$sFQex g$x$6017$sFQex) (car (case-lambda ((g$V$12959$sFQex) (g$cdar$5894$sFQex g$C$12958$sFQex g$V$12959$sFQex))) g$x$6017$sFQex)))))) (library-letrec*-identity 'g$cdaar$5900$sFQex))) (g$cdadr$5901$sFQex g$cdadr$6185$sFQex ((case-lambda ((g$C$13390$sFQex) (g$C$13390$sFQex (case-lambda ((g$C$12960$sFQex g$x$6018$sFQex) (cdr (case-lambda ((g$V$12961$sFQex) (g$cdar$5894$sFQex g$C$12960$sFQex g$V$12961$sFQex))) g$x$6018$sFQex)))))) (library-letrec*-identity 'g$cdadr$5901$sFQex))) (g$cddar$5902$sFQex g$cddar$6186$sFQex ((case-lambda ((g$C$13391$sFQex) (g$C$13391$sFQex (case-lambda ((g$C$12962$sFQex g$x$6019$sFQex) (car (case-lambda ((g$V$12963$sFQex) (g$cddr$5895$sFQex g$C$12962$sFQex g$V$12963$sFQex))) g$x$6019$sFQex)))))) (library-letrec*-identity 'g$cddar$5902$sFQex))) (g$cdddr$5903$sFQex g$cdddr$6187$sFQex ((case-lambda ((g$C$13392$sFQex) (g$C$13392$sFQex (case-lambda ((g$C$12964$sFQex g$x$6020$sFQex) (cdr (case-lambda ((g$V$12965$sFQex) (g$cddr$5895$sFQex g$C$12964$sFQex g$V$12965$sFQex))) g$x$6020$sFQex)))))) (library-letrec*-identity 'g$cdddr$5903$sFQex))) (g$caaaar$5904$sFQex g$caaaar$6188$sFQex ((case-lambda ((g$C$13393$sFQex) (g$C$13393$sFQex (case-lambda ((g$C$12966$sFQex g$x$6021$sFQex) (car (case-lambda ((g$V$12967$sFQex) (g$caaar$5896$sFQex g$C$12966$sFQex g$V$12967$sFQex))) g$x$6021$sFQex)))))) (library-letrec*-identity 'g$caaaar$5904$sFQex))) (g$caaadr$5905$sFQex g$caaadr$6189$sFQex ((case-lambda ((g$C$13394$sFQex) (g$C$13394$sFQex (case-lambda ((g$C$12968$sFQex g$x$6022$sFQex) (cdr (case-lambda ((g$V$12969$sFQex) (g$caaar$5896$sFQex g$C$12968$sFQex g$V$12969$sFQex))) g$x$6022$sFQex)))))) (library-letrec*-identity 'g$caaadr$5905$sFQex))) (g$caadar$5906$sFQex g$caadar$6190$sFQex ((case-lambda ((g$C$13395$sFQex) (g$C$13395$sFQex (case-lambda ((g$C$12970$sFQex g$x$6023$sFQex) (car (case-lambda ((g$V$12971$sFQex) (g$caadr$5897$sFQex g$C$12970$sFQex g$V$12971$sFQex))) g$x$6023$sFQex)))))) (library-letrec*-identity 'g$caadar$5906$sFQex))) (g$caaddr$5907$sFQex g$caaddr$6191$sFQex ((case-lambda ((g$C$13396$sFQex) (g$C$13396$sFQex (case-lambda ((g$C$12972$sFQex g$x$6024$sFQex) (cdr (case-lambda ((g$V$12973$sFQex) (g$caadr$5897$sFQex g$C$12972$sFQex g$V$12973$sFQex))) g$x$6024$sFQex)))))) (library-letrec*-identity 'g$caaddr$5907$sFQex))) (g$cadaar$5908$sFQex g$cadaar$6192$sFQex ((case-lambda ((g$C$13397$sFQex) (g$C$13397$sFQex (case-lambda ((g$C$12974$sFQex g$x$6025$sFQex) (car (case-lambda ((g$V$12975$sFQex) (g$cadar$5898$sFQex g$C$12974$sFQex g$V$12975$sFQex))) g$x$6025$sFQex)))))) (library-letrec*-identity 'g$cadaar$5908$sFQex))) (g$cadadr$5909$sFQex g$cadadr$6193$sFQex ((case-lambda ((g$C$13398$sFQex) (g$C$13398$sFQex (case-lambda ((g$C$12976$sFQex g$x$6026$sFQex) (cdr (case-lambda ((g$V$12977$sFQex) (g$cadar$5898$sFQex g$C$12976$sFQex g$V$12977$sFQex))) g$x$6026$sFQex)))))) (library-letrec*-identity 'g$cadadr$5909$sFQex))) (g$caddar$5910$sFQex g$caddar$6194$sFQex ((case-lambda ((g$C$13399$sFQex) (g$C$13399$sFQex (case-lambda ((g$C$12978$sFQex g$x$6027$sFQex) (car (case-lambda ((g$V$12979$sFQex) (g$caddr$5899$sFQex g$C$12978$sFQex g$V$12979$sFQex))) g$x$6027$sFQex)))))) (library-letrec*-identity 'g$caddar$5910$sFQex))) (g$cadddr$5911$sFQex g$cadddr$6195$sFQex ((case-lambda ((g$C$13400$sFQex) (g$C$13400$sFQex (case-lambda ((g$C$12980$sFQex g$x$6028$sFQex) (cdr (case-lambda ((g$V$12981$sFQex) (g$caddr$5899$sFQex g$C$12980$sFQex g$V$12981$sFQex))) g$x$6028$sFQex)))))) (library-letrec*-identity 'g$cadddr$5911$sFQex))) (g$cdaaar$5912$sFQex g$cdaaar$6196$sFQex ((case-lambda ((g$C$13401$sFQex) (g$C$13401$sFQex (case-lambda ((g$C$12982$sFQex g$x$6029$sFQex) (car (case-lambda ((g$V$12983$sFQex) (g$cdaar$5900$sFQex g$C$12982$sFQex g$V$12983$sFQex))) g$x$6029$sFQex)))))) (library-letrec*-identity 'g$cdaaar$5912$sFQex))) (g$cdaadr$5913$sFQex g$cdaadr$6197$sFQex ((case-lambda ((g$C$13402$sFQex) (g$C$13402$sFQex (case-lambda ((g$C$12984$sFQex g$x$6030$sFQex) (cdr (case-lambda ((g$V$12985$sFQex) (g$cdaar$5900$sFQex g$C$12984$sFQex g$V$12985$sFQex))) g$x$6030$sFQex)))))) (library-letrec*-identity 'g$cdaadr$5913$sFQex))) (g$cdadar$5914$sFQex g$cdadar$6198$sFQex ((case-lambda ((g$C$13403$sFQex) (g$C$13403$sFQex (case-lambda ((g$C$12986$sFQex g$x$6031$sFQex) (car (case-lambda ((g$V$12987$sFQex) (g$cdadr$5901$sFQex g$C$12986$sFQex g$V$12987$sFQex))) g$x$6031$sFQex)))))) (library-letrec*-identity 'g$cdadar$5914$sFQex))) (g$cdaddr$5915$sFQex g$cdaddr$6199$sFQex ((case-lambda ((g$C$13404$sFQex) (g$C$13404$sFQex (case-lambda ((g$C$12988$sFQex g$x$6032$sFQex) (cdr (case-lambda ((g$V$12989$sFQex) (g$cdadr$5901$sFQex g$C$12988$sFQex g$V$12989$sFQex))) g$x$6032$sFQex)))))) (library-letrec*-identity 'g$cdaddr$5915$sFQex))) (g$cddaar$5916$sFQex g$cddaar$6200$sFQex ((case-lambda ((g$C$13405$sFQex) (g$C$13405$sFQex (case-lambda ((g$C$12990$sFQex g$x$6033$sFQex) (car (case-lambda ((g$V$12991$sFQex) (g$cddar$5902$sFQex g$C$12990$sFQex g$V$12991$sFQex))) g$x$6033$sFQex)))))) (library-letrec*-identity 'g$cddaar$5916$sFQex))) (g$cddadr$5917$sFQex g$cddadr$6201$sFQex ((case-lambda ((g$C$13406$sFQex) (g$C$13406$sFQex (case-lambda ((g$C$12992$sFQex g$x$6034$sFQex) (cdr (case-lambda ((g$V$12993$sFQex) (g$cddar$5902$sFQex g$C$12992$sFQex g$V$12993$sFQex))) g$x$6034$sFQex)))))) (library-letrec*-identity 'g$cddadr$5917$sFQex))) (g$cdddar$5918$sFQex g$cdddar$6202$sFQex ((case-lambda ((g$C$13407$sFQex) (g$C$13407$sFQex (case-lambda ((g$C$12994$sFQex g$x$6035$sFQex) (car (case-lambda ((g$V$12995$sFQex) (g$cdddr$5903$sFQex g$C$12994$sFQex g$V$12995$sFQex))) g$x$6035$sFQex)))))) (library-letrec*-identity 'g$cdddar$5918$sFQex))) (g$cddddr$5919$sFQex g$cddddr$6203$sFQex ((case-lambda ((g$C$13408$sFQex) (g$C$13408$sFQex (case-lambda ((g$C$12996$sFQex g$x$6036$sFQex) (cdr (case-lambda ((g$V$12997$sFQex) (g$cdddr$5903$sFQex g$C$12996$sFQex g$V$12997$sFQex))) g$x$6036$sFQex)))))) (library-letrec*-identity 'g$cddddr$5919$sFQex))) (g$positive?$5920$sFQex g$positive?$6204$sFQex ((case-lambda ((g$C$13409$sFQex) (g$C$13409$sFQex (case-lambda ((g$C$12998$sFQex g$r$6037$sFQex) ((case-lambda ((g$J$13000$sFQex) (real-valued? (case-lambda ((g$V$13001$sFQex) (not (case-lambda ((g$T$13002$sFQex) (if g$T$13002$sFQex (g$assertion-violation$6456$sFQex g$J$13000$sFQex 'positive? '"not a real" g$r$6037$sFQex) (void g$J$13000$sFQex)))) g$V$13001$sFQex))) g$r$6037$sFQex))) (case-lambda (g$IGNORE$12999$sFQex (< g$C$12998$sFQex '0 g$r$6037$sFQex))))))))) (library-letrec*-identity 'g$positive?$5920$sFQex))) (g$negative?$5921$sFQex g$negative?$6205$sFQex ((case-lambda ((g$C$13410$sFQex) (g$C$13410$sFQex (case-lambda ((g$C$13003$sFQex g$r$6038$sFQex) ((case-lambda ((g$J$13005$sFQex) (real-valued? (case-lambda ((g$V$13006$sFQex) (not (case-lambda ((g$T$13007$sFQex) (if g$T$13007$sFQex (g$assertion-violation$6456$sFQex g$J$13005$sFQex 'negative? '"not a real" g$r$6038$sFQex) (void g$J$13005$sFQex)))) g$V$13006$sFQex))) g$r$6038$sFQex))) (case-lambda (g$IGNORE$13004$sFQex (> g$C$13003$sFQex '0 g$r$6038$sFQex))))))))) (library-letrec*-identity 'g$negative?$5921$sFQex))) (g$zero?$5922$sFQex g$zero?$6206$sFQex ((case-lambda ((g$C$13411$sFQex) (g$C$13411$sFQex (case-lambda ((g$C$13008$sFQex g$r$6039$sFQex) ((case-lambda ((g$J$13010$sFQex) (real-valued? (case-lambda ((g$V$13011$sFQex) (not (case-lambda ((g$T$13012$sFQex) (if g$T$13012$sFQex (g$assertion-violation$6456$sFQex g$J$13010$sFQex 'zero? '"not a real" g$r$6039$sFQex) (void g$J$13010$sFQex)))) g$V$13011$sFQex))) g$r$6039$sFQex))) (case-lambda (g$IGNORE$13009$sFQex (= g$C$13008$sFQex '0 g$r$6039$sFQex))))))))) (library-letrec*-identity 'g$zero?$5922$sFQex))) (g$even?$5923$sFQex g$even?$6207$sFQex ((case-lambda ((g$C$13412$sFQex) (g$C$13412$sFQex (case-lambda ((g$C$13013$sFQex g$n$6040$sFQex) ((case-lambda ((g$J$13016$sFQex) (integer-valued? (case-lambda ((g$V$13017$sFQex) (not (case-lambda ((g$T$13018$sFQex) (if g$T$13018$sFQex (g$assertion-violation$6456$sFQex g$J$13016$sFQex 'even? '"not a integer" g$n$6040$sFQex) (void g$J$13016$sFQex)))) g$V$13017$sFQex))) g$n$6040$sFQex))) (case-lambda (g$IGNORE$13014$sFQex (g$mod$5877$sFQex (case-lambda ((g$V$13015$sFQex) (= g$C$13013$sFQex '0 g$V$13015$sFQex))) g$n$6040$sFQex '2))))))))) (library-letrec*-identity 'g$even?$5923$sFQex))) (g$odd?$5924$sFQex g$odd?$6208$sFQex ((case-lambda ((g$C$13413$sFQex) (g$C$13413$sFQex (case-lambda ((g$C$13019$sFQex g$n$6041$sFQex) ((case-lambda ((g$J$13022$sFQex) (integer-valued? (case-lambda ((g$V$13023$sFQex) (not (case-lambda ((g$T$13024$sFQex) (if g$T$13024$sFQex (g$assertion-violation$6456$sFQex g$J$13022$sFQex 'odd? '"not a integer" g$n$6041$sFQex) (void g$J$13022$sFQex)))) g$V$13023$sFQex))) g$n$6041$sFQex))) (case-lambda (g$IGNORE$13020$sFQex (g$mod$5877$sFQex (case-lambda ((g$V$13021$sFQex) (= g$C$13019$sFQex '1 g$V$13021$sFQex))) g$n$6041$sFQex '2))))))))) (library-letrec*-identity 'g$odd?$5924$sFQex))) (g$max$5925$sFQex g$max$6209$sFQex ((case-lambda ((g$C$13414$sFQex) (g$C$13414$sFQex (case-lambda ((g$C$13033$sFQex g$a$6042$sFQex . g$rest$6043$sFQex) (g$fold-left$5683$sFQex g$C$13033$sFQex (case-lambda ((g$C$13029$sFQex g$a$6044$sFQex g$b$6045$sFQex) ((case-lambda ((g$J$13031$sFQex) (< (case-lambda ((g$T$13032$sFQex) (if g$T$13032$sFQex (g$J$13031$sFQex g$b$6045$sFQex) (g$J$13031$sFQex g$a$6044$sFQex)))) g$a$6044$sFQex g$b$6045$sFQex))) (case-lambda ((g$V$13030$sFQex) ((case-lambda ((g$C$13026$sFQex g$r$6046$sFQex) (inexact? (case-lambda ((g$V$13027$sFQex) ((case-lambda ((g$C$13025$sFQex g$t$6047$sFQex) (if g$t$6047$sFQex (g$C$13025$sFQex g$t$6047$sFQex) (inexact? g$C$13025$sFQex g$b$6045$sFQex)))) (case-lambda ((g$T$13028$sFQex) (if g$T$13028$sFQex (inexact g$C$13026$sFQex g$r$6046$sFQex) (g$C$13026$sFQex g$r$6046$sFQex)))) g$V$13027$sFQex))) g$a$6044$sFQex))) g$C$13029$sFQex g$V$13030$sFQex)))))) g$a$6042$sFQex g$rest$6043$sFQex)))))) (library-letrec*-identity 'g$max$5925$sFQex))) (g$min$5926$sFQex g$min$6210$sFQex ((case-lambda ((g$C$13415$sFQex) (g$C$13415$sFQex (case-lambda ((g$C$13042$sFQex g$a$6048$sFQex . g$rest$6049$sFQex) (g$fold-left$5683$sFQex g$C$13042$sFQex (case-lambda ((g$C$13038$sFQex g$a$6050$sFQex g$b$6051$sFQex) ((case-lambda ((g$J$13040$sFQex) (> (case-lambda ((g$T$13041$sFQex) (if g$T$13041$sFQex (g$J$13040$sFQex g$b$6051$sFQex) (g$J$13040$sFQex g$a$6050$sFQex)))) g$a$6050$sFQex g$b$6051$sFQex))) (case-lambda ((g$V$13039$sFQex) ((case-lambda ((g$C$13035$sFQex g$r$6052$sFQex) (inexact? (case-lambda ((g$V$13036$sFQex) ((case-lambda ((g$C$13034$sFQex g$t$6053$sFQex) (if g$t$6053$sFQex (g$C$13034$sFQex g$t$6053$sFQex) (inexact? g$C$13034$sFQex g$b$6051$sFQex)))) (case-lambda ((g$T$13037$sFQex) (if g$T$13037$sFQex (inexact g$C$13035$sFQex g$r$6052$sFQex) (g$C$13035$sFQex g$r$6052$sFQex)))) g$V$13036$sFQex))) g$a$6050$sFQex))) g$C$13038$sFQex g$V$13039$sFQex)))))) g$a$6048$sFQex g$rest$6049$sFQex)))))) (library-letrec*-identity 'g$min$5926$sFQex))) (g$gcd$5927$sFQex g$gcd$6211$sFQex ((case-lambda ((g$C$13416$sFQex) (g$C$13416$sFQex (case-lambda ((g$C$13070$sFQex . g$nums$6054$sFQex) (length (case-lambda ((g$V$13071$sFQex) ((case-lambda ((g$C$13060$sFQex g$t$6055$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$13061$sFQex) (if g$T$13061$sFQex (g$C$13060$sFQex '0) (g$memv$5673$sFQex (case-lambda ((g$T$13062$sFQex) (if g$T$13062$sFQex (car (case-lambda ((g$V$13063$sFQex) ((case-lambda ((g$C$13043$sFQex g$n$6056$sFQex) ((case-lambda ((g$J$13045$sFQex) (integer-valued? (case-lambda ((g$V$13046$sFQex) (not (case-lambda ((g$T$13047$sFQex) (if g$T$13047$sFQex (g$assertion-violation$6456$sFQex g$J$13045$sFQex 'gcd '"not an integer" g$n$6056$sFQex) (void g$J$13045$sFQex)))) g$V$13046$sFQex))) g$n$6056$sFQex))) (case-lambda (g$IGNORE$13044$sFQex (abs g$C$13043$sFQex g$n$6056$sFQex)))))) g$C$13060$sFQex g$V$13063$sFQex))) g$nums$6054$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$13064$sFQex) (if g$T$13064$sFQex (g$cadr$5893$sFQex (case-lambda ((g$V$13065$sFQex) (car (case-lambda ((g$V$13066$sFQex) ((case-lambda ((g$C$13048$sFQex g$a$6057$sFQex g$b$6058$sFQex) ((case-lambda ((g$J$13057$sFQex) (integer-valued? (case-lambda ((g$V$13058$sFQex) (not (case-lambda ((g$T$13059$sFQex) (if g$T$13059$sFQex (g$assertion-violation$6456$sFQex g$J$13057$sFQex 'gcd '"not an integer" g$a$6057$sFQex) (void g$J$13057$sFQex)))) g$V$13058$sFQex))) g$a$6057$sFQex))) (case-lambda (g$IGNORE$13049$sFQex ((case-lambda ((g$J$13054$sFQex) (integer-valued? (case-lambda ((g$V$13055$sFQex) (not (case-lambda ((g$T$13056$sFQex) (if g$T$13056$sFQex (g$assertion-violation$6456$sFQex g$J$13054$sFQex 'gcd '"not an integer" g$b$6058$sFQex) (void g$J$13054$sFQex)))) g$V$13055$sFQex))) g$b$6058$sFQex))) (case-lambda (g$IGNORE$13050$sFQex (g$zero?$5922$sFQex (case-lambda ((g$T$13051$sFQex) (if g$T$13051$sFQex (abs g$C$13048$sFQex g$a$6057$sFQex) (g$mod$5877$sFQex (case-lambda ((g$V$13052$sFQex) (g$gcd$5927$sFQex (case-lambda ((g$V$13053$sFQex) (abs g$C$13048$sFQex g$V$13053$sFQex))) g$b$6058$sFQex g$V$13052$sFQex))) g$a$6057$sFQex g$b$6058$sFQex)))) g$b$6058$sFQex))))))))) g$C$13060$sFQex g$V$13066$sFQex g$V$13065$sFQex))) g$nums$6054$sFQex))) g$nums$6054$sFQex) (cdr (case-lambda ((g$V$13067$sFQex) (car (case-lambda ((g$V$13068$sFQex) (abs (case-lambda ((g$V$13069$sFQex) (g$fold-left$5683$sFQex g$C$13060$sFQex g$gcd$5927$sFQex g$V$13069$sFQex g$V$13067$sFQex))) g$V$13068$sFQex))) g$nums$6054$sFQex))) g$nums$6054$sFQex)))) g$t$6055$sFQex '(2))))) g$t$6055$sFQex '(1))))) g$t$6055$sFQex '(0)))) g$C$13070$sFQex g$V$13071$sFQex))) g$nums$6054$sFQex)))))) (library-letrec*-identity 'g$gcd$5927$sFQex))) (g$lcm$5928$sFQex g$lcm$6212$sFQex ((case-lambda ((g$C$13417$sFQex) (g$C$13417$sFQex (case-lambda ((g$C$13102$sFQex . g$nums$6059$sFQex) (length (case-lambda ((g$V$13103$sFQex) ((case-lambda ((g$C$13092$sFQex g$t$6060$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$13093$sFQex) (if g$T$13093$sFQex (g$C$13092$sFQex '1) (g$memv$5673$sFQex (case-lambda ((g$T$13094$sFQex) (if g$T$13094$sFQex (car (case-lambda ((g$V$13095$sFQex) ((case-lambda ((g$C$13072$sFQex g$n$6061$sFQex) ((case-lambda ((g$J$13074$sFQex) (integer-valued? (case-lambda ((g$V$13075$sFQex) (not (case-lambda ((g$T$13076$sFQex) (if g$T$13076$sFQex (g$assertion-violation$6456$sFQex g$J$13074$sFQex 'lcm '"not an integer" g$n$6061$sFQex) (void g$J$13074$sFQex)))) g$V$13075$sFQex))) g$n$6061$sFQex))) (case-lambda (g$IGNORE$13073$sFQex (abs g$C$13072$sFQex g$n$6061$sFQex)))))) g$C$13092$sFQex g$V$13095$sFQex))) g$nums$6059$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$13096$sFQex) (if g$T$13096$sFQex (g$cadr$5893$sFQex (case-lambda ((g$V$13097$sFQex) (car (case-lambda ((g$V$13098$sFQex) ((case-lambda ((g$C$13078$sFQex g$a$6062$sFQex g$b$6063$sFQex) ((case-lambda ((g$J$13089$sFQex) (integer-valued? (case-lambda ((g$V$13090$sFQex) (not (case-lambda ((g$T$13091$sFQex) (if g$T$13091$sFQex (g$assertion-violation$6456$sFQex g$J$13089$sFQex 'lcm '"not an integer" g$a$6062$sFQex) (void g$J$13089$sFQex)))) g$V$13090$sFQex))) g$a$6062$sFQex))) (case-lambda (g$IGNORE$13079$sFQex ((case-lambda ((g$J$13086$sFQex) (integer-valued? (case-lambda ((g$V$13087$sFQex) (not (case-lambda ((g$T$13088$sFQex) (if g$T$13088$sFQex (g$assertion-violation$6456$sFQex g$J$13086$sFQex 'lcm '"not an integer" g$b$6063$sFQex) (void g$J$13086$sFQex)))) g$V$13087$sFQex))) g$b$6063$sFQex))) (case-lambda (g$IGNORE$13080$sFQex (g$zero?$5922$sFQex (case-lambda ((g$V$13081$sFQex) ((case-lambda ((g$C$13077$sFQex g$t$6064$sFQex) (if g$t$6064$sFQex (g$C$13077$sFQex g$t$6064$sFQex) (g$zero?$5922$sFQex g$C$13077$sFQex g$b$6063$sFQex)))) (case-lambda ((g$T$13082$sFQex) (if g$T$13082$sFQex (g$C$13078$sFQex '0) (g$gcd$5927$sFQex (case-lambda ((g$V$13083$sFQex) (/ (case-lambda ((g$V$13084$sFQex) (* (case-lambda ((g$V$13085$sFQex) (abs g$C$13078$sFQex g$V$13085$sFQex))) g$V$13084$sFQex g$b$6063$sFQex))) g$a$6062$sFQex g$V$13083$sFQex))) g$a$6062$sFQex g$b$6063$sFQex)))) g$V$13081$sFQex))) g$a$6062$sFQex))))))))) g$C$13092$sFQex g$V$13098$sFQex g$V$13097$sFQex))) g$nums$6059$sFQex))) g$nums$6059$sFQex) (cdr (case-lambda ((g$V$13099$sFQex) (car (case-lambda ((g$V$13100$sFQex) (abs (case-lambda ((g$V$13101$sFQex) (g$fold-left$5683$sFQex g$C$13092$sFQex g$lcm$5928$sFQex g$V$13101$sFQex g$V$13099$sFQex))) g$V$13100$sFQex))) g$nums$6059$sFQex))) g$nums$6059$sFQex)))) g$t$6060$sFQex '(2))))) g$t$6060$sFQex '(1))))) g$t$6060$sFQex '(0)))) g$C$13102$sFQex g$V$13103$sFQex))) g$nums$6059$sFQex)))))) (library-letrec*-identity 'g$lcm$5928$sFQex))) (g$string=?$5935$sFQex g$string=?$6213$sFQex ((case-lambda ((g$C$13418$sFQex) (g$C$13418$sFQex (case-lambda ((g$C$13112$sFQex g$a$6065$sFQex g$b$6066$sFQex . g$rest$6067$sFQex) ((case-lambda ((g$J$13115$sFQex) (string? (case-lambda ((g$V$13116$sFQex) (not (case-lambda ((g$T$13117$sFQex) (if g$T$13117$sFQex (g$assertion-violation$6456$sFQex g$J$13115$sFQex 'string=? '"not a string" g$a$6065$sFQex) (void g$J$13115$sFQex)))) g$V$13116$sFQex))) g$a$6065$sFQex))) (case-lambda (g$IGNORE$13113$sFQex (cons (case-lambda ((g$V$13114$sFQex) (g$for-all$5678$sFQex g$C$13112$sFQex (case-lambda ((g$C$13105$sFQex g$x$6068$sFQex) ((case-lambda ((g$J$13109$sFQex) (string? (case-lambda ((g$V$13110$sFQex) (not (case-lambda ((g$T$13111$sFQex) (if g$T$13111$sFQex (g$assertion-violation$6456$sFQex g$J$13109$sFQex 'string=? '"not a string" g$x$6068$sFQex) (void g$J$13109$sFQex)))) g$V$13110$sFQex))) g$x$6068$sFQex))) (case-lambda (g$IGNORE$13106$sFQex (string-compare (case-lambda ((g$V$13107$sFQex) (fx=? (case-lambda ((g$V$13108$sFQex) ((case-lambda ((g$C$13104$sFQex g$r$6069$sFQex) (begin (set! g$a$6065$sFQex g$x$6068$sFQex) (g$C$13104$sFQex g$r$6069$sFQex)))) g$C$13105$sFQex g$V$13108$sFQex))) g$V$13107$sFQex '0))) g$a$6065$sFQex g$x$6068$sFQex)))))) g$V$13114$sFQex))) g$b$6066$sFQex g$rest$6067$sFQex))))))))) (library-letrec*-identity 'g$string=?$5935$sFQex))) (g$string<?$5936$sFQex g$string<?$6214$sFQex ((case-lambda ((g$C$13419$sFQex) (g$C$13419$sFQex (case-lambda ((g$C$13126$sFQex g$a$6070$sFQex g$b$6071$sFQex . g$rest$6072$sFQex) ((case-lambda ((g$J$13129$sFQex) (string? (case-lambda ((g$V$13130$sFQex) (not (case-lambda ((g$T$13131$sFQex) (if g$T$13131$sFQex (g$assertion-violation$6456$sFQex g$J$13129$sFQex 'string<? '"not a string" g$a$6070$sFQex) (void g$J$13129$sFQex)))) g$V$13130$sFQex))) g$a$6070$sFQex))) (case-lambda (g$IGNORE$13127$sFQex (cons (case-lambda ((g$V$13128$sFQex) (g$for-all$5678$sFQex g$C$13126$sFQex (case-lambda ((g$C$13119$sFQex g$x$6073$sFQex) ((case-lambda ((g$J$13123$sFQex) (string? (case-lambda ((g$V$13124$sFQex) (not (case-lambda ((g$T$13125$sFQex) (if g$T$13125$sFQex (g$assertion-violation$6456$sFQex g$J$13123$sFQex 'string<? '"not a string" g$x$6073$sFQex) (void g$J$13123$sFQex)))) g$V$13124$sFQex))) g$x$6073$sFQex))) (case-lambda (g$IGNORE$13120$sFQex (string-compare (case-lambda ((g$V$13121$sFQex) (fx<? (case-lambda ((g$V$13122$sFQex) ((case-lambda ((g$C$13118$sFQex g$r$6074$sFQex) (begin (set! g$a$6070$sFQex g$x$6073$sFQex) (g$C$13118$sFQex g$r$6074$sFQex)))) g$C$13119$sFQex g$V$13122$sFQex))) g$V$13121$sFQex '0))) g$a$6070$sFQex g$x$6073$sFQex)))))) g$V$13128$sFQex))) g$b$6071$sFQex g$rest$6072$sFQex))))))))) (library-letrec*-identity 'g$string<?$5936$sFQex))) (g$string>?$5937$sFQex g$string>?$6215$sFQex ((case-lambda ((g$C$13420$sFQex) (g$C$13420$sFQex (case-lambda ((g$C$13140$sFQex g$a$6075$sFQex g$b$6076$sFQex . g$rest$6077$sFQex) ((case-lambda ((g$J$13143$sFQex) (string? (case-lambda ((g$V$13144$sFQex) (not (case-lambda ((g$T$13145$sFQex) (if g$T$13145$sFQex (g$assertion-violation$6456$sFQex g$J$13143$sFQex 'string>? '"not a string" g$a$6075$sFQex) (void g$J$13143$sFQex)))) g$V$13144$sFQex))) g$a$6075$sFQex))) (case-lambda (g$IGNORE$13141$sFQex (cons (case-lambda ((g$V$13142$sFQex) (g$for-all$5678$sFQex g$C$13140$sFQex (case-lambda ((g$C$13133$sFQex g$x$6078$sFQex) ((case-lambda ((g$J$13137$sFQex) (string? (case-lambda ((g$V$13138$sFQex) (not (case-lambda ((g$T$13139$sFQex) (if g$T$13139$sFQex (g$assertion-violation$6456$sFQex g$J$13137$sFQex 'string>? '"not a string" g$x$6078$sFQex) (void g$J$13137$sFQex)))) g$V$13138$sFQex))) g$x$6078$sFQex))) (case-lambda (g$IGNORE$13134$sFQex (string-compare (case-lambda ((g$V$13135$sFQex) (fx>? (case-lambda ((g$V$13136$sFQex) ((case-lambda ((g$C$13132$sFQex g$r$6079$sFQex) (begin (set! g$a$6075$sFQex g$x$6078$sFQex) (g$C$13132$sFQex g$r$6079$sFQex)))) g$C$13133$sFQex g$V$13136$sFQex))) g$V$13135$sFQex '0))) g$a$6075$sFQex g$x$6078$sFQex)))))) g$V$13142$sFQex))) g$b$6076$sFQex g$rest$6077$sFQex))))))))) (library-letrec*-identity 'g$string>?$5937$sFQex))) (g$string<=?$5938$sFQex g$string<=?$6216$sFQex ((case-lambda ((g$C$13421$sFQex) (g$C$13421$sFQex (case-lambda ((g$C$13154$sFQex g$a$6080$sFQex g$b$6081$sFQex . g$rest$6082$sFQex) ((case-lambda ((g$J$13157$sFQex) (string? (case-lambda ((g$V$13158$sFQex) (not (case-lambda ((g$T$13159$sFQex) (if g$T$13159$sFQex (g$assertion-violation$6456$sFQex g$J$13157$sFQex 'string<=? '"not a string" g$a$6080$sFQex) (void g$J$13157$sFQex)))) g$V$13158$sFQex))) g$a$6080$sFQex))) (case-lambda (g$IGNORE$13155$sFQex (cons (case-lambda ((g$V$13156$sFQex) (g$for-all$5678$sFQex g$C$13154$sFQex (case-lambda ((g$C$13147$sFQex g$x$6083$sFQex) ((case-lambda ((g$J$13151$sFQex) (string? (case-lambda ((g$V$13152$sFQex) (not (case-lambda ((g$T$13153$sFQex) (if g$T$13153$sFQex (g$assertion-violation$6456$sFQex g$J$13151$sFQex 'string<=? '"not a string" g$x$6083$sFQex) (void g$J$13151$sFQex)))) g$V$13152$sFQex))) g$x$6083$sFQex))) (case-lambda (g$IGNORE$13148$sFQex (string-compare (case-lambda ((g$V$13149$sFQex) (fx<=? (case-lambda ((g$V$13150$sFQex) ((case-lambda ((g$C$13146$sFQex g$r$6084$sFQex) (begin (set! g$a$6080$sFQex g$x$6083$sFQex) (g$C$13146$sFQex g$r$6084$sFQex)))) g$C$13147$sFQex g$V$13150$sFQex))) g$V$13149$sFQex '0))) g$a$6080$sFQex g$x$6083$sFQex)))))) g$V$13156$sFQex))) g$b$6081$sFQex g$rest$6082$sFQex))))))))) (library-letrec*-identity 'g$string<=?$5938$sFQex))) (g$string>=?$5939$sFQex g$string>=?$6217$sFQex ((case-lambda ((g$C$13422$sFQex) (g$C$13422$sFQex (case-lambda ((g$C$13168$sFQex g$a$6085$sFQex g$b$6086$sFQex . g$rest$6087$sFQex) ((case-lambda ((g$J$13171$sFQex) (string? (case-lambda ((g$V$13172$sFQex) (not (case-lambda ((g$T$13173$sFQex) (if g$T$13173$sFQex (g$assertion-violation$6456$sFQex g$J$13171$sFQex 'string>=? '"not a string" g$a$6085$sFQex) (void g$J$13171$sFQex)))) g$V$13172$sFQex))) g$a$6085$sFQex))) (case-lambda (g$IGNORE$13169$sFQex (cons (case-lambda ((g$V$13170$sFQex) (g$for-all$5678$sFQex g$C$13168$sFQex (case-lambda ((g$C$13161$sFQex g$x$6088$sFQex) ((case-lambda ((g$J$13165$sFQex) (string? (case-lambda ((g$V$13166$sFQex) (not (case-lambda ((g$T$13167$sFQex) (if g$T$13167$sFQex (g$assertion-violation$6456$sFQex g$J$13165$sFQex 'string>=? '"not a string" g$x$6088$sFQex) (void g$J$13165$sFQex)))) g$V$13166$sFQex))) g$x$6088$sFQex))) (case-lambda (g$IGNORE$13162$sFQex (string-compare (case-lambda ((g$V$13163$sFQex) (fx>=? (case-lambda ((g$V$13164$sFQex) ((case-lambda ((g$C$13160$sFQex g$r$6089$sFQex) (begin (set! g$a$6085$sFQex g$x$6088$sFQex) (g$C$13160$sFQex g$r$6089$sFQex)))) g$C$13161$sFQex g$V$13164$sFQex))) g$V$13163$sFQex '0))) g$a$6085$sFQex g$x$6088$sFQex)))))) g$V$13170$sFQex))) g$b$6086$sFQex g$rest$6087$sFQex))))))))) (library-letrec*-identity 'g$string>=?$5939$sFQex))) (g$symbol=?$5940$sFQex g$symbol=?$6218$sFQex ((case-lambda ((g$C$13423$sFQex) (g$C$13423$sFQex (case-lambda ((g$C$13179$sFQex g$a$6090$sFQex g$b$6091$sFQex . g$rest$6092$sFQex) ((case-lambda ((g$J$13182$sFQex) (g$symbol?$5884$sFQex (case-lambda ((g$V$13183$sFQex) (not (case-lambda ((g$T$13184$sFQex) (if g$T$13184$sFQex (g$assertion-violation$6456$sFQex g$J$13182$sFQex 'symbol=? '"not a symbol" g$a$6090$sFQex) (void g$J$13182$sFQex)))) g$V$13183$sFQex))) g$a$6090$sFQex))) (case-lambda (g$IGNORE$13180$sFQex (cons (case-lambda ((g$V$13181$sFQex) (g$for-all$5678$sFQex g$C$13179$sFQex (case-lambda ((g$C$13174$sFQex g$x$6093$sFQex) ((case-lambda ((g$J$13176$sFQex) (g$symbol?$5884$sFQex (case-lambda ((g$V$13177$sFQex) (not (case-lambda ((g$T$13178$sFQex) (if g$T$13178$sFQex (g$assertion-violation$6456$sFQex g$J$13176$sFQex 'symbol=? '"not a symbol" g$x$6093$sFQex) (void g$J$13176$sFQex)))) g$V$13177$sFQex))) g$x$6093$sFQex))) (case-lambda (g$IGNORE$13175$sFQex (eq? g$C$13174$sFQex g$a$6090$sFQex g$x$6093$sFQex)))))) g$V$13181$sFQex))) g$b$6091$sFQex g$rest$6092$sFQex))))))))) (library-letrec*-identity 'g$symbol=?$5940$sFQex))) (g$boolean=?$5941$sFQex g$boolean=?$6219$sFQex ((case-lambda ((g$C$13424$sFQex) (g$C$13424$sFQex (case-lambda ((g$C$13190$sFQex g$a$6094$sFQex g$b$6095$sFQex . g$rest$6096$sFQex) ((case-lambda ((g$J$13193$sFQex) (g$boolean?$5885$sFQex (case-lambda ((g$V$13194$sFQex) (not (case-lambda ((g$T$13195$sFQex) (if g$T$13195$sFQex (g$assertion-violation$6456$sFQex g$J$13193$sFQex 'boolean=? '"not a boolean" g$a$6094$sFQex) (void g$J$13193$sFQex)))) g$V$13194$sFQex))) g$a$6094$sFQex))) (case-lambda (g$IGNORE$13191$sFQex (cons (case-lambda ((g$V$13192$sFQex) (g$for-all$5678$sFQex g$C$13190$sFQex (case-lambda ((g$C$13185$sFQex g$x$6097$sFQex) ((case-lambda ((g$J$13187$sFQex) (g$boolean?$5885$sFQex (case-lambda ((g$V$13188$sFQex) (not (case-lambda ((g$T$13189$sFQex) (if g$T$13189$sFQex (g$assertion-violation$6456$sFQex g$J$13187$sFQex 'boolean=? '"not a boolean" g$x$6097$sFQex) (void g$J$13187$sFQex)))) g$V$13188$sFQex))) g$x$6097$sFQex))) (case-lambda (g$IGNORE$13186$sFQex (eq? g$C$13185$sFQex g$a$6094$sFQex g$x$6097$sFQex)))))) g$V$13192$sFQex))) g$b$6095$sFQex g$rest$6096$sFQex))))))))) (library-letrec*-identity 'g$boolean=?$5941$sFQex))) (g$char=?$5948$sFQex g$char=?$6220$sFQex ((case-lambda ((g$C$13425$sFQex) (g$C$13425$sFQex (case-lambda ((g$C$13205$sFQex g$a$6098$sFQex g$b$6099$sFQex . g$rest$6100$sFQex) ((case-lambda ((g$J$13208$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13209$sFQex) (not (case-lambda ((g$T$13210$sFQex) (if g$T$13210$sFQex (g$assertion-violation$6456$sFQex g$J$13208$sFQex 'char=? '"not a char" g$a$6098$sFQex) (void g$J$13208$sFQex)))) g$V$13209$sFQex))) g$a$6098$sFQex))) (case-lambda (g$IGNORE$13206$sFQex (cons (case-lambda ((g$V$13207$sFQex) (g$for-all$5678$sFQex g$C$13205$sFQex (case-lambda ((g$C$13197$sFQex g$x$6101$sFQex) ((case-lambda ((g$J$13202$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13203$sFQex) (not (case-lambda ((g$T$13204$sFQex) (if g$T$13204$sFQex (g$assertion-violation$6456$sFQex g$J$13202$sFQex 'char=? '"not a char" g$x$6101$sFQex) (void g$J$13202$sFQex)))) g$V$13203$sFQex))) g$x$6101$sFQex))) (case-lambda (g$IGNORE$13198$sFQex (char->integer (case-lambda ((g$V$13199$sFQex) (char->integer (case-lambda ((g$V$13200$sFQex) (fx=? (case-lambda ((g$V$13201$sFQex) ((case-lambda ((g$C$13196$sFQex g$r$6102$sFQex) (begin (set! g$a$6098$sFQex g$x$6101$sFQex) (g$C$13196$sFQex g$r$6102$sFQex)))) g$C$13197$sFQex g$V$13201$sFQex))) g$V$13200$sFQex g$V$13199$sFQex))) g$a$6098$sFQex))) g$x$6101$sFQex)))))) g$V$13207$sFQex))) g$b$6099$sFQex g$rest$6100$sFQex))))))))) (library-letrec*-identity 'g$char=?$5948$sFQex))) (g$char<?$5949$sFQex g$char<?$6221$sFQex ((case-lambda ((g$C$13426$sFQex) (g$C$13426$sFQex (case-lambda ((g$C$13220$sFQex g$a$6103$sFQex g$b$6104$sFQex . g$rest$6105$sFQex) ((case-lambda ((g$J$13223$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13224$sFQex) (not (case-lambda ((g$T$13225$sFQex) (if g$T$13225$sFQex (g$assertion-violation$6456$sFQex g$J$13223$sFQex 'char<? '"not a char" g$a$6103$sFQex) (void g$J$13223$sFQex)))) g$V$13224$sFQex))) g$a$6103$sFQex))) (case-lambda (g$IGNORE$13221$sFQex (cons (case-lambda ((g$V$13222$sFQex) (g$for-all$5678$sFQex g$C$13220$sFQex (case-lambda ((g$C$13212$sFQex g$x$6106$sFQex) ((case-lambda ((g$J$13217$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13218$sFQex) (not (case-lambda ((g$T$13219$sFQex) (if g$T$13219$sFQex (g$assertion-violation$6456$sFQex g$J$13217$sFQex 'char<? '"not a char" g$x$6106$sFQex) (void g$J$13217$sFQex)))) g$V$13218$sFQex))) g$x$6106$sFQex))) (case-lambda (g$IGNORE$13213$sFQex (char->integer (case-lambda ((g$V$13214$sFQex) (char->integer (case-lambda ((g$V$13215$sFQex) (fx<? (case-lambda ((g$V$13216$sFQex) ((case-lambda ((g$C$13211$sFQex g$r$6107$sFQex) (begin (set! g$a$6103$sFQex g$x$6106$sFQex) (g$C$13211$sFQex g$r$6107$sFQex)))) g$C$13212$sFQex g$V$13216$sFQex))) g$V$13215$sFQex g$V$13214$sFQex))) g$a$6103$sFQex))) g$x$6106$sFQex)))))) g$V$13222$sFQex))) g$b$6104$sFQex g$rest$6105$sFQex))))))))) (library-letrec*-identity 'g$char<?$5949$sFQex))) (g$char>?$5950$sFQex g$char>?$6222$sFQex ((case-lambda ((g$C$13427$sFQex) (g$C$13427$sFQex (case-lambda ((g$C$13235$sFQex g$a$6108$sFQex g$b$6109$sFQex . g$rest$6110$sFQex) ((case-lambda ((g$J$13238$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13239$sFQex) (not (case-lambda ((g$T$13240$sFQex) (if g$T$13240$sFQex (g$assertion-violation$6456$sFQex g$J$13238$sFQex 'char>? '"not a char" g$a$6108$sFQex) (void g$J$13238$sFQex)))) g$V$13239$sFQex))) g$a$6108$sFQex))) (case-lambda (g$IGNORE$13236$sFQex (cons (case-lambda ((g$V$13237$sFQex) (g$for-all$5678$sFQex g$C$13235$sFQex (case-lambda ((g$C$13227$sFQex g$x$6111$sFQex) ((case-lambda ((g$J$13232$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13233$sFQex) (not (case-lambda ((g$T$13234$sFQex) (if g$T$13234$sFQex (g$assertion-violation$6456$sFQex g$J$13232$sFQex 'char>? '"not a char" g$x$6111$sFQex) (void g$J$13232$sFQex)))) g$V$13233$sFQex))) g$x$6111$sFQex))) (case-lambda (g$IGNORE$13228$sFQex (char->integer (case-lambda ((g$V$13229$sFQex) (char->integer (case-lambda ((g$V$13230$sFQex) (fx>? (case-lambda ((g$V$13231$sFQex) ((case-lambda ((g$C$13226$sFQex g$r$6112$sFQex) (begin (set! g$a$6108$sFQex g$x$6111$sFQex) (g$C$13226$sFQex g$r$6112$sFQex)))) g$C$13227$sFQex g$V$13231$sFQex))) g$V$13230$sFQex g$V$13229$sFQex))) g$a$6108$sFQex))) g$x$6111$sFQex)))))) g$V$13237$sFQex))) g$b$6109$sFQex g$rest$6110$sFQex))))))))) (library-letrec*-identity 'g$char>?$5950$sFQex))) (g$char<=?$5951$sFQex g$char<=?$6223$sFQex ((case-lambda ((g$C$13428$sFQex) (g$C$13428$sFQex (case-lambda ((g$C$13250$sFQex g$a$6113$sFQex g$b$6114$sFQex . g$rest$6115$sFQex) ((case-lambda ((g$J$13253$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13254$sFQex) (not (case-lambda ((g$T$13255$sFQex) (if g$T$13255$sFQex (g$assertion-violation$6456$sFQex g$J$13253$sFQex 'char<=? '"not a char" g$a$6113$sFQex) (void g$J$13253$sFQex)))) g$V$13254$sFQex))) g$a$6113$sFQex))) (case-lambda (g$IGNORE$13251$sFQex (cons (case-lambda ((g$V$13252$sFQex) (g$for-all$5678$sFQex g$C$13250$sFQex (case-lambda ((g$C$13242$sFQex g$x$6116$sFQex) ((case-lambda ((g$J$13247$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13248$sFQex) (not (case-lambda ((g$T$13249$sFQex) (if g$T$13249$sFQex (g$assertion-violation$6456$sFQex g$J$13247$sFQex 'char<=? '"not a char" g$x$6116$sFQex) (void g$J$13247$sFQex)))) g$V$13248$sFQex))) g$x$6116$sFQex))) (case-lambda (g$IGNORE$13243$sFQex (char->integer (case-lambda ((g$V$13244$sFQex) (char->integer (case-lambda ((g$V$13245$sFQex) (fx<=? (case-lambda ((g$V$13246$sFQex) ((case-lambda ((g$C$13241$sFQex g$r$6117$sFQex) (begin (set! g$a$6113$sFQex g$x$6116$sFQex) (g$C$13241$sFQex g$r$6117$sFQex)))) g$C$13242$sFQex g$V$13246$sFQex))) g$V$13245$sFQex g$V$13244$sFQex))) g$a$6113$sFQex))) g$x$6116$sFQex)))))) g$V$13252$sFQex))) g$b$6114$sFQex g$rest$6115$sFQex))))))))) (library-letrec*-identity 'g$char<=?$5951$sFQex))) (g$char>=?$5952$sFQex g$char>=?$6224$sFQex ((case-lambda ((g$C$13429$sFQex) (g$C$13429$sFQex (case-lambda ((g$C$13265$sFQex g$a$6118$sFQex g$b$6119$sFQex . g$rest$6120$sFQex) ((case-lambda ((g$J$13268$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13269$sFQex) (not (case-lambda ((g$T$13270$sFQex) (if g$T$13270$sFQex (g$assertion-violation$6456$sFQex g$J$13268$sFQex 'char>=? '"not a char" g$a$6118$sFQex) (void g$J$13268$sFQex)))) g$V$13269$sFQex))) g$a$6118$sFQex))) (case-lambda (g$IGNORE$13266$sFQex (cons (case-lambda ((g$V$13267$sFQex) (g$for-all$5678$sFQex g$C$13265$sFQex (case-lambda ((g$C$13257$sFQex g$x$6121$sFQex) ((case-lambda ((g$J$13262$sFQex) (g$char?$5881$sFQex (case-lambda ((g$V$13263$sFQex) (not (case-lambda ((g$T$13264$sFQex) (if g$T$13264$sFQex (g$assertion-violation$6456$sFQex g$J$13262$sFQex 'char>=? '"not a char" g$x$6121$sFQex) (void g$J$13262$sFQex)))) g$V$13263$sFQex))) g$x$6121$sFQex))) (case-lambda (g$IGNORE$13258$sFQex (char->integer (case-lambda ((g$V$13259$sFQex) (char->integer (case-lambda ((g$V$13260$sFQex) (fx>=? (case-lambda ((g$V$13261$sFQex) ((case-lambda ((g$C$13256$sFQex g$r$6122$sFQex) (begin (set! g$a$6118$sFQex g$x$6121$sFQex) (g$C$13256$sFQex g$r$6122$sFQex)))) g$C$13257$sFQex g$V$13261$sFQex))) g$V$13260$sFQex g$V$13259$sFQex))) g$a$6118$sFQex))) g$x$6121$sFQex)))))) g$V$13267$sFQex))) g$b$6119$sFQex g$rest$6120$sFQex))))))))) (library-letrec*-identity 'g$char>=?$5952$sFQex))) (g$rationalize$5953$sFQex g$rationalize$6225$sFQex ((case-lambda ((g$C$13430$sFQex) (g$C$13430$sFQex (case-lambda ((g$C$13275$sFQex g$x$6123$sFQex g$e$6124$sFQex) ((case-lambda ((g$J$13279$sFQex) (infinite? (case-lambda ((g$T$13280$sFQex) (if g$T$13280$sFQex (infinite? g$J$13279$sFQex g$e$6124$sFQex) (g$J$13279$sFQex '#f)))) g$x$6123$sFQex))) (case-lambda ((g$T$13276$sFQex) (if g$T$13276$sFQex (g$C$13275$sFQex '+nan.0) (g$find-ratio$5954$sFQex (case-lambda ((g$V$13277$sFQex) (apply (case-lambda ((g$V$13278$sFQex) ((case-lambda ((g$C$13271$sFQex g$r$6125$sFQex) ((case-lambda ((g$J$13273$sFQex) (exact? (case-lambda ((g$T$13274$sFQex) (if g$T$13274$sFQex (exact? g$J$13273$sFQex g$e$6124$sFQex) (g$J$13273$sFQex '#f)))) g$x$6123$sFQex))) (case-lambda ((g$T$13272$sFQex) (if g$T$13272$sFQex (g$C$13271$sFQex g$r$6125$sFQex) (inexact g$C$13271$sFQex g$r$6125$sFQex))))))) g$C$13275$sFQex g$V$13278$sFQex))) / g$V$13277$sFQex))) g$x$6123$sFQex g$e$6124$sFQex)))))))))) (library-letrec*-identity 'g$rationalize$5953$sFQex))) (g$find-ratio$5954$sFQex g$find-ratio$6226$sFQex ((case-lambda ((g$C$13431$sFQex) (g$C$13431$sFQex (case-lambda ((g$C$13281$sFQex g$x$6126$sFQex g$e$6127$sFQex) (+ (case-lambda ((g$V$13282$sFQex) (- (case-lambda ((g$V$13283$sFQex) (g$find-ratio-between$5955$sFQex g$C$13281$sFQex g$V$13283$sFQex g$V$13282$sFQex))) g$x$6126$sFQex g$e$6127$sFQex))) g$x$6126$sFQex g$e$6127$sFQex)))))) (library-letrec*-identity 'g$find-ratio$5954$sFQex))) (g$find-ratio-between$5955$sFQex g$find-ratio-between$6227$sFQex ((case-lambda ((g$C$13432$sFQex) (g$C$13432$sFQex (case-lambda ((g$C$13316$sFQex g$x$6128$sFQex g$y$6129$sFQex) ((case-lambda ((g$C$13308$sFQex g$sr$6130$sFQex) (begin (set! g$sr$6130$sFQex (case-lambda ((g$C$13299$sFQex g$x$6132$sFQex g$y$6133$sFQex) (floor (case-lambda ((g$V$13300$sFQex) (exact (case-lambda ((g$V$13301$sFQex) (floor (case-lambda ((g$V$13302$sFQex) (exact (case-lambda ((g$V$13303$sFQex) ((case-lambda ((g$C$13290$sFQex g$fx$6134$sFQex g$fy$6135$sFQex) (>= (case-lambda ((g$T$13291$sFQex) (if g$T$13291$sFQex (list g$C$13290$sFQex g$fx$6134$sFQex '1) (= (case-lambda ((g$T$13292$sFQex) (if g$T$13292$sFQex (- (case-lambda ((g$V$13293$sFQex) (/ (case-lambda ((g$V$13294$sFQex) (- (case-lambda ((g$V$13295$sFQex) (/ (case-lambda ((g$V$13296$sFQex) (g$sr$6130$sFQex (case-lambda ((g$V$13297$sFQex) ((case-lambda ((g$C$13284$sFQex g$rat$6136$sFQex) (car (case-lambda ((g$V$13285$sFQex) (car (case-lambda ((g$V$13286$sFQex) (* (case-lambda ((g$V$13287$sFQex) (g$cadr$5893$sFQex (case-lambda ((g$V$13288$sFQex) (+ (case-lambda ((g$V$13289$sFQex) (list g$C$13284$sFQex g$V$13289$sFQex g$V$13285$sFQex))) g$V$13288$sFQex g$V$13287$sFQex))) g$rat$6136$sFQex))) g$fx$6134$sFQex g$V$13286$sFQex))) g$rat$6136$sFQex))) g$rat$6136$sFQex))) g$C$13290$sFQex g$V$13297$sFQex))) g$V$13296$sFQex g$V$13294$sFQex))) g$V$13295$sFQex))) g$y$6133$sFQex g$fy$6135$sFQex))) g$V$13293$sFQex))) g$x$6132$sFQex g$fx$6134$sFQex) (+ (case-lambda ((g$V$13298$sFQex) (list g$C$13290$sFQex g$V$13298$sFQex '1))) '1 g$fx$6134$sFQex)))) g$fx$6134$sFQex g$fy$6135$sFQex)))) g$fx$6134$sFQex g$x$6132$sFQex))) g$C$13299$sFQex g$V$13303$sFQex g$V$13301$sFQex))) g$V$13302$sFQex))) g$x$6132$sFQex))) g$V$13300$sFQex))) g$y$6133$sFQex)))) (< (case-lambda ((g$T$13309$sFQex) (if g$T$13309$sFQex (g$find-ratio-between$5955$sFQex g$C$13308$sFQex g$y$6129$sFQex g$x$6128$sFQex) (>= (case-lambda ((g$T$13310$sFQex) (if g$T$13310$sFQex (list g$C$13308$sFQex g$x$6128$sFQex '1) (g$positive?$5920$sFQex (case-lambda ((g$T$13311$sFQex) (if g$T$13311$sFQex (g$sr$6130$sFQex g$C$13308$sFQex g$x$6128$sFQex g$y$6129$sFQex) (g$negative?$5921$sFQex (case-lambda ((g$T$13312$sFQex) (if g$T$13312$sFQex (- (case-lambda ((g$V$13313$sFQex) (- (case-lambda ((g$V$13314$sFQex) (g$sr$6130$sFQex (case-lambda ((g$V$13315$sFQex) ((case-lambda ((g$C$13304$sFQex g$rat$6131$sFQex) (g$cadr$5893$sFQex (case-lambda ((g$V$13305$sFQex) (car (case-lambda ((g$V$13306$sFQex) (- (case-lambda ((g$V$13307$sFQex) (list g$C$13304$sFQex g$V$13307$sFQex g$V$13305$sFQex))) g$V$13306$sFQex))) g$rat$6131$sFQex))) g$rat$6131$sFQex))) g$C$13308$sFQex g$V$13315$sFQex))) g$V$13314$sFQex g$V$13313$sFQex))) g$y$6129$sFQex))) g$x$6128$sFQex) (g$C$13308$sFQex '(0 1))))) g$y$6129$sFQex)))) g$x$6128$sFQex)))) g$x$6128$sFQex g$y$6129$sFQex)))) g$y$6129$sFQex g$x$6128$sFQex)))) g$C$13316$sFQex uninitialized)))))) (library-letrec*-identity 'g$find-ratio-between$5955$sFQex))) (g$vector-map$5956$sFQex g$vector-map$6228$sFQex ((case-lambda ((g$C$13433$sFQex) (g$C$13433$sFQex (case-lambda ((g$C$13334$sFQex g$p$6137$sFQex g$vec1$6138$sFQex . g$vecs$6139$sFQex) (vector-length (case-lambda ((g$V$13335$sFQex) ((case-lambda ((g$C$13332$sFQex g$len$6140$sFQex) (make-vector (case-lambda ((g$V$13333$sFQex) ((case-lambda ((g$C$13331$sFQex g$res$6141$sFQex) ((case-lambda ((g$C$13330$sFQex g$loop$6142$sFQex) ((case-lambda ((g$C$13318$sFQex g$loop$13317$sFQex) (begin (set! g$loop$6142$sFQex g$loop$13317$sFQex) (g$loop$6142$sFQex g$C$13318$sFQex '0)))) g$C$13330$sFQex (case-lambda ((g$C$13323$sFQex g$i$6143$sFQex) (fx=? (case-lambda ((g$T$13324$sFQex) (if g$T$13324$sFQex ((case-lambda ((g$J$13326$sFQex) (if '#f (g$J$13326$sFQex '#f) (void g$J$13326$sFQex)))) (case-lambda (g$IGNORE$13325$sFQex (g$C$13323$sFQex g$res$6141$sFQex)))) (call-with-values (case-lambda ((g$V$13327$sFQex) (vector-set! (case-lambda (g$IGNORE$13328$sFQex (fx+ (case-lambda ((g$V$13329$sFQex) (g$loop$6142$sFQex g$C$13323$sFQex g$V$13329$sFQex))) g$i$6143$sFQex '1))) g$res$6141$sFQex g$i$6143$sFQex g$V$13327$sFQex))) (case-lambda ((g$C$13320$sFQex) (cons (case-lambda ((g$V$13321$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$13322$sFQex) (apply g$C$13320$sFQex values g$V$13322$sFQex))) (case-lambda ((g$C$13319$sFQex g$x$6144$sFQex) (vector-ref g$C$13319$sFQex g$x$6144$sFQex g$i$6143$sFQex))) g$V$13321$sFQex))) g$vec1$6138$sFQex g$vecs$6139$sFQex))) g$p$6137$sFQex)))) g$i$6143$sFQex g$len$6140$sFQex)))))) g$C$13331$sFQex uninitialized))) g$C$13332$sFQex g$V$13333$sFQex))) g$len$6140$sFQex))) g$C$13334$sFQex g$V$13335$sFQex))) g$vec1$6138$sFQex)))))) (library-letrec*-identity 'g$vector-map$5956$sFQex))) (g$vector-for-each$5957$sFQex g$vector-for-each$6229$sFQex ((case-lambda ((g$C$13434$sFQex) (g$C$13434$sFQex (case-lambda ((g$C$13348$sFQex g$p$6145$sFQex g$vec1$6146$sFQex . g$vecs$6147$sFQex) (vector-length (case-lambda ((g$V$13349$sFQex) ((case-lambda ((g$C$13347$sFQex g$len$6148$sFQex) ((case-lambda ((g$C$13346$sFQex g$loop$6149$sFQex) ((case-lambda ((g$C$13337$sFQex g$loop$13336$sFQex) (begin (set! g$loop$6149$sFQex g$loop$13336$sFQex) (g$loop$6149$sFQex g$C$13337$sFQex '0)))) g$C$13346$sFQex (case-lambda ((g$C$13342$sFQex g$i$6150$sFQex) (fx=? (case-lambda ((g$T$13343$sFQex) (if g$T$13343$sFQex (if '#f (g$C$13342$sFQex '#f) (void g$C$13342$sFQex)) (call-with-values (case-lambda (g$IGNORE$13344$sFQex (fx+ (case-lambda ((g$V$13345$sFQex) (g$loop$6149$sFQex g$C$13342$sFQex g$V$13345$sFQex))) g$i$6150$sFQex '1))) (case-lambda ((g$C$13339$sFQex) (cons (case-lambda ((g$V$13340$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$13341$sFQex) (apply g$C$13339$sFQex values g$V$13341$sFQex))) (case-lambda ((g$C$13338$sFQex g$x$6151$sFQex) (vector-ref g$C$13338$sFQex g$x$6151$sFQex g$i$6150$sFQex))) g$V$13340$sFQex))) g$vec1$6146$sFQex g$vecs$6147$sFQex))) g$p$6145$sFQex)))) g$i$6150$sFQex g$len$6148$sFQex)))))) g$C$13347$sFQex uninitialized))) g$C$13348$sFQex g$V$13349$sFQex))) g$vec1$6146$sFQex)))))) (library-letrec*-identity 'g$vector-for-each$5957$sFQex))) (g$string-for-each$5958$sFQex g$string-for-each$6230$sFQex ((case-lambda ((g$C$13435$sFQex) (g$C$13435$sFQex (case-lambda ((g$C$13362$sFQex g$p$6152$sFQex g$str1$6153$sFQex . g$strs$6154$sFQex) (string-length (case-lambda ((g$V$13363$sFQex) ((case-lambda ((g$C$13361$sFQex g$len$6155$sFQex) ((case-lambda ((g$C$13360$sFQex g$loop$6156$sFQex) ((case-lambda ((g$C$13351$sFQex g$loop$13350$sFQex) (begin (set! g$loop$6156$sFQex g$loop$13350$sFQex) (g$loop$6156$sFQex g$C$13351$sFQex '0)))) g$C$13360$sFQex (case-lambda ((g$C$13356$sFQex g$i$6157$sFQex) (fx=? (case-lambda ((g$T$13357$sFQex) (if g$T$13357$sFQex (if '#f (g$C$13356$sFQex '#f) (void g$C$13356$sFQex)) (call-with-values (case-lambda (g$IGNORE$13358$sFQex (fx+ (case-lambda ((g$V$13359$sFQex) (g$loop$6156$sFQex g$C$13356$sFQex g$V$13359$sFQex))) g$i$6157$sFQex '1))) (case-lambda ((g$C$13353$sFQex) (cons (case-lambda ((g$V$13354$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$13355$sFQex) (apply g$C$13353$sFQex values g$V$13355$sFQex))) (case-lambda ((g$C$13352$sFQex g$x$6158$sFQex) (string-ref g$C$13352$sFQex g$x$6158$sFQex g$i$6157$sFQex))) g$V$13354$sFQex))) g$str1$6153$sFQex g$strs$6154$sFQex))) g$p$6152$sFQex)))) g$i$6157$sFQex g$len$6155$sFQex)))))) g$C$13361$sFQex uninitialized))) g$C$13362$sFQex g$V$13363$sFQex))) g$str1$6153$sFQex)))))) (library-letrec*-identity 'g$string-for-each$5958$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme hashtables) ((g$using$6232$sFQex g$using$6265$sFQex ((case-lambda ((g$C$13452$sFQex) (g$C$13452$sFQex (clr-using-internal 'system)))) (library-letrec*-identity 'g$using$6232$sFQex))) (g$using$6234$sFQex g$using$6266$sFQex ((case-lambda ((g$C$13453$sFQex) (g$C$13453$sFQex (clr-using-internal 'system.collections)))) (library-letrec*-identity 'g$using$6234$sFQex))) (g$make-eq-hashtable$6235$sFQex g$make-eq-hashtable$6267$sFQex ((case-lambda ((g$C$13454$sFQex) (g$C$13454$sFQex (case-lambda ((g$C$13436$sFQex) (g$make-eq-hashtable$6235$sFQex g$C$13436$sFQex '32)) ((g$C$13436$sFQex g$k$6244$sFQex) ((case-lambda ((g$V$13437$sFQex) (g$C$13436$sFQex (clr-new-internal 'hashtable g$V$13437$sFQex)))) (clr-cast-internal 'int32 g$k$6244$sFQex))))))) (library-letrec*-identity 'g$make-eq-hashtable$6235$sFQex))) (g$make-eqv-hashtable$6236$sFQex g$make-eqv-hashtable$6268$sFQex ((case-lambda ((g$C$13455$sFQex) (g$C$13455$sFQex (case-lambda ((g$C$13438$sFQex) (g$make-eqv-hashtable$6236$sFQex g$C$13438$sFQex '32)) ((g$C$13438$sFQex g$k$6245$sFQex) (make-hashtable g$C$13438$sFQex eqv-hash eqv? g$k$6245$sFQex)))))) (library-letrec*-identity 'g$make-eqv-hashtable$6236$sFQex))) (g$hashtable-size$6237$sFQex g$hashtable-size$6269$sFQex ((case-lambda ((g$C$13456$sFQex) (g$C$13456$sFQex (case-lambda ((g$C$13439$sFQex g$ht$6246$sFQex) (g$C$13439$sFQex (clr-call-internal 'hashtable 'get_count g$ht$6246$sFQex))))))) (library-letrec*-identity 'g$hashtable-size$6237$sFQex))) (g$hashtable-ref$6238$sFQex g$hashtable-ref$6270$sFQex ((case-lambda ((g$C$13457$sFQex) (g$C$13457$sFQex (case-lambda ((g$C$13444$sFQex g$ht$6247$sFQex g$key$6248$sFQex g$default$6249$sFQex) ((case-lambda ((g$C$13440$sFQex g$r$6250$sFQex) ((case-lambda ((g$V$13441$sFQex) (begin (set! g$r$6250$sFQex g$V$13441$sFQex) (null? (case-lambda ((g$V$13442$sFQex) (not (case-lambda ((g$T$13443$sFQex) (if g$T$13443$sFQex (g$C$13440$sFQex g$r$6250$sFQex) (g$C$13440$sFQex g$default$6249$sFQex)))) g$V$13442$sFQex))) g$r$6250$sFQex)))) (clr-call-internal 'hashtable 'get_item g$ht$6247$sFQex g$key$6248$sFQex)))) g$C$13444$sFQex uninitialized)))))) (library-letrec*-identity 'g$hashtable-ref$6238$sFQex))) (g$hashtable-set!$6239$sFQex g$hashtable-set!$6271$sFQex ((case-lambda ((g$C$13458$sFQex) (g$C$13458$sFQex (case-lambda ((g$C$13445$sFQex g$ht$6251$sFQex g$key$6252$sFQex g$obj$6253$sFQex) (g$C$13445$sFQex (clr-call-internal 'hashtable 'set_item g$ht$6251$sFQex g$key$6252$sFQex g$obj$6253$sFQex))))))) (library-letrec*-identity 'g$hashtable-set!$6239$sFQex))) (g$hashtable-delete!$6240$sFQex g$hashtable-delete!$6272$sFQex ((case-lambda ((g$C$13459$sFQex) (g$C$13459$sFQex (case-lambda ((g$C$13446$sFQex g$ht$6254$sFQex g$key$6255$sFQex) (g$C$13446$sFQex (clr-call-internal 'hashtable 'remove g$ht$6254$sFQex g$key$6255$sFQex))))))) (library-letrec*-identity 'g$hashtable-delete!$6240$sFQex))) (g$hashtable-contains?$6241$sFQex g$hashtable-contains?$6273$sFQex ((case-lambda ((g$C$13460$sFQex) (g$C$13460$sFQex (case-lambda ((g$C$13447$sFQex g$ht$6256$sFQex g$key$6257$sFQex) (g$C$13447$sFQex (clr-call-internal 'hashtable 'containskey g$ht$6256$sFQex g$key$6257$sFQex))))))) (library-letrec*-identity 'g$hashtable-contains?$6241$sFQex))) (g$hashtable-update!$6242$sFQex g$hashtable-update!$6274$sFQex ((case-lambda ((g$C$13461$sFQex) (g$C$13461$sFQex (case-lambda ((g$C$13448$sFQex g$ht$6258$sFQex g$key$6259$sFQex g$proc$6260$sFQex g$default$6261$sFQex) (g$hashtable-ref$6238$sFQex (case-lambda ((g$V$13449$sFQex) (g$proc$6260$sFQex (case-lambda ((g$V$13450$sFQex) (g$hashtable-set!$6239$sFQex g$C$13448$sFQex g$ht$6258$sFQex g$key$6259$sFQex g$V$13450$sFQex))) g$V$13449$sFQex))) g$ht$6258$sFQex g$key$6259$sFQex g$default$6261$sFQex)))))) (library-letrec*-identity 'g$hashtable-update!$6242$sFQex))) (g$hashtable-clear!$6243$sFQex g$hashtable-clear!$6275$sFQex ((case-lambda ((g$C$13462$sFQex) (g$C$13462$sFQex (case-lambda ((g$C$13451$sFQex g$ht$6262$sFQex) (g$hashtable-clear!$6243$sFQex g$C$13451$sFQex g$ht$6262$sFQex '32)) ((g$C$13451$sFQex g$ht$6263$sFQex g$k$6264$sFQex) (g$C$13451$sFQex (clr-call-internal 'hashtable 'clear g$ht$6263$sFQex))))))) (library-letrec*-identity 'g$hashtable-clear!$6243$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme files) ((g$using$6277$sFQex g$using$6284$sFQex ((case-lambda ((g$C$13466$sFQex) (g$C$13466$sFQex (clr-using-internal 'system.io)))) (library-letrec*-identity 'g$using$6277$sFQex))) (g$file-exists?$6278$sFQex g$file-exists?$6285$sFQex ((case-lambda ((g$C$13467$sFQex) (g$C$13467$sFQex (case-lambda ((g$C$13463$sFQex g$fn$6281$sFQex) (g$C$13463$sFQex (clr-call-internal 'file 'exists '() g$fn$6281$sFQex))))))) (library-letrec*-identity 'g$file-exists?$6278$sFQex))) (g$delete-file$6279$sFQex g$delete-file$6286$sFQex ((case-lambda ((g$C$13468$sFQex) (g$C$13468$sFQex (case-lambda ((g$C$13464$sFQex g$fn$6282$sFQex) (g$C$13464$sFQex (clr-call-internal 'file 'delete '() g$fn$6282$sFQex))))))) (library-letrec*-identity 'g$delete-file$6279$sFQex))) (g$get-directory-name$6280$sFQex g$get-directory-name$6287$sFQex ((case-lambda ((g$C$13469$sFQex) (g$C$13469$sFQex (case-lambda ((g$C$13465$sFQex g$path$6283$sFQex) (g$C$13465$sFQex (clr-call-internal 'path 'getdirectoryname '() g$path$6283$sFQex))))))) (library-letrec*-identity 'g$get-directory-name$6280$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme bytevectors) ((g$native-endianness$6288$sFQex g$native-endianness$6399$sFQex ((case-lambda ((g$C$13527$sFQex) (g$C$13527$sFQex (case-lambda ((g$C$13470$sFQex) (g$C$13470$sFQex 'little)))))) (library-letrec*-identity 'g$native-endianness$6288$sFQex))) (g$bytevector-u16-ref$6289$sFQex g$bytevector-u16-ref$6400$sFQex ((case-lambda ((g$C$13528$sFQex) (g$C$13528$sFQex (case-lambda ((g$C$13471$sFQex g$bytevector$6317$sFQex g$k$6318$sFQex g$endianness$6319$sFQex) (bytevector-uint-ref g$C$13471$sFQex g$bytevector$6317$sFQex g$k$6318$sFQex g$endianness$6319$sFQex '2)))))) (library-letrec*-identity 'g$bytevector-u16-ref$6289$sFQex))) (g$bytevector-s16-ref$6290$sFQex g$bytevector-s16-ref$6401$sFQex ((case-lambda ((g$C$13529$sFQex) (g$C$13529$sFQex (case-lambda ((g$C$13472$sFQex g$bytevector$6320$sFQex g$k$6321$sFQex g$endianness$6322$sFQex) (bytevector-sint-ref g$C$13472$sFQex g$bytevector$6320$sFQex g$k$6321$sFQex g$endianness$6322$sFQex '2)))))) (library-letrec*-identity 'g$bytevector-s16-ref$6290$sFQex))) (g$bytevector-u16-native-ref$6291$sFQex g$bytevector-u16-native-ref$6402$sFQex ((case-lambda ((g$C$13530$sFQex) (g$C$13530$sFQex (case-lambda ((g$C$13473$sFQex g$bytevector$6323$sFQex g$k$6324$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13474$sFQex) (bytevector-uint-ref g$C$13473$sFQex g$bytevector$6323$sFQex g$k$6324$sFQex g$V$13474$sFQex '2))))))))) (library-letrec*-identity 'g$bytevector-u16-native-ref$6291$sFQex))) (g$bytevector-s16-native-ref$6292$sFQex g$bytevector-s16-native-ref$6403$sFQex ((case-lambda ((g$C$13531$sFQex) (g$C$13531$sFQex (case-lambda ((g$C$13475$sFQex g$bytevector$6325$sFQex g$k$6326$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13476$sFQex) (bytevector-sint-ref g$C$13475$sFQex g$bytevector$6325$sFQex g$k$6326$sFQex g$V$13476$sFQex '2))))))))) (library-letrec*-identity 'g$bytevector-s16-native-ref$6292$sFQex))) (g$bytevector-u16-set!$6293$sFQex g$bytevector-u16-set!$6404$sFQex ((case-lambda ((g$C$13532$sFQex) (g$C$13532$sFQex (case-lambda ((g$C$13477$sFQex g$bytevector$6327$sFQex g$k$6328$sFQex g$n$6329$sFQex g$endianness$6330$sFQex) (bytevector-uint-set! g$C$13477$sFQex g$bytevector$6327$sFQex g$k$6328$sFQex g$n$6329$sFQex g$endianness$6330$sFQex '2)))))) (library-letrec*-identity 'g$bytevector-u16-set!$6293$sFQex))) (g$bytevector-s16-set!$6294$sFQex g$bytevector-s16-set!$6405$sFQex ((case-lambda ((g$C$13533$sFQex) (g$C$13533$sFQex (case-lambda ((g$C$13478$sFQex g$bytevector$6331$sFQex g$k$6332$sFQex g$n$6333$sFQex g$endianness$6334$sFQex) (bytevector-sint-set! g$C$13478$sFQex g$bytevector$6331$sFQex g$k$6332$sFQex g$n$6333$sFQex g$endianness$6334$sFQex '2)))))) (library-letrec*-identity 'g$bytevector-s16-set!$6294$sFQex))) (g$bytevector-u16-native-set!$6295$sFQex g$bytevector-u16-native-set!$6406$sFQex ((case-lambda ((g$C$13534$sFQex) (g$C$13534$sFQex (case-lambda ((g$C$13479$sFQex g$bytevector$6335$sFQex g$k$6336$sFQex g$n$6337$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13480$sFQex) (bytevector-uint-set! g$C$13479$sFQex g$bytevector$6335$sFQex g$k$6336$sFQex g$n$6337$sFQex g$V$13480$sFQex '2))))))))) (library-letrec*-identity 'g$bytevector-u16-native-set!$6295$sFQex))) (g$bytevector-s16-native-set!$6296$sFQex g$bytevector-s16-native-set!$6407$sFQex ((case-lambda ((g$C$13535$sFQex) (g$C$13535$sFQex (case-lambda ((g$C$13481$sFQex g$bytevector$6338$sFQex g$k$6339$sFQex g$n$6340$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13482$sFQex) (bytevector-sint-set! g$C$13481$sFQex g$bytevector$6338$sFQex g$k$6339$sFQex g$n$6340$sFQex g$V$13482$sFQex '2))))))))) (library-letrec*-identity 'g$bytevector-s16-native-set!$6296$sFQex))) (g$bytevector-u32-ref$6297$sFQex g$bytevector-u32-ref$6408$sFQex ((case-lambda ((g$C$13536$sFQex) (g$C$13536$sFQex (case-lambda ((g$C$13483$sFQex g$bytevector$6341$sFQex g$k$6342$sFQex g$endianness$6343$sFQex) (bytevector-uint-ref g$C$13483$sFQex g$bytevector$6341$sFQex g$k$6342$sFQex g$endianness$6343$sFQex '4)))))) (library-letrec*-identity 'g$bytevector-u32-ref$6297$sFQex))) (g$bytevector-s32-ref$6298$sFQex g$bytevector-s32-ref$6409$sFQex ((case-lambda ((g$C$13537$sFQex) (g$C$13537$sFQex (case-lambda ((g$C$13484$sFQex g$bytevector$6344$sFQex g$k$6345$sFQex g$endianness$6346$sFQex) (bytevector-sint-ref g$C$13484$sFQex g$bytevector$6344$sFQex g$k$6345$sFQex g$endianness$6346$sFQex '4)))))) (library-letrec*-identity 'g$bytevector-s32-ref$6298$sFQex))) (g$bytevector-u32-native-ref$6299$sFQex g$bytevector-u32-native-ref$6410$sFQex ((case-lambda ((g$C$13538$sFQex) (g$C$13538$sFQex (case-lambda ((g$C$13485$sFQex g$bytevector$6347$sFQex g$k$6348$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13486$sFQex) (bytevector-uint-ref g$C$13485$sFQex g$bytevector$6347$sFQex g$k$6348$sFQex g$V$13486$sFQex '4))))))))) (library-letrec*-identity 'g$bytevector-u32-native-ref$6299$sFQex))) (g$bytevector-s32-native-ref$6300$sFQex g$bytevector-s32-native-ref$6411$sFQex ((case-lambda ((g$C$13539$sFQex) (g$C$13539$sFQex (case-lambda ((g$C$13487$sFQex g$bytevector$6349$sFQex g$k$6350$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13488$sFQex) (bytevector-sint-ref g$C$13487$sFQex g$bytevector$6349$sFQex g$k$6350$sFQex g$V$13488$sFQex '4))))))))) (library-letrec*-identity 'g$bytevector-s32-native-ref$6300$sFQex))) (g$bytevector-u32-set!$6301$sFQex g$bytevector-u32-set!$6412$sFQex ((case-lambda ((g$C$13540$sFQex) (g$C$13540$sFQex (case-lambda ((g$C$13489$sFQex g$bytevector$6351$sFQex g$k$6352$sFQex g$n$6353$sFQex g$endianness$6354$sFQex) (bytevector-uint-set! g$C$13489$sFQex g$bytevector$6351$sFQex g$k$6352$sFQex g$n$6353$sFQex g$endianness$6354$sFQex '4)))))) (library-letrec*-identity 'g$bytevector-u32-set!$6301$sFQex))) (g$bytevector-s32-set!$6302$sFQex g$bytevector-s32-set!$6413$sFQex ((case-lambda ((g$C$13541$sFQex) (g$C$13541$sFQex (case-lambda ((g$C$13490$sFQex g$bytevector$6355$sFQex g$k$6356$sFQex g$n$6357$sFQex g$endianness$6358$sFQex) (bytevector-sint-set! g$C$13490$sFQex g$bytevector$6355$sFQex g$k$6356$sFQex g$n$6357$sFQex g$endianness$6358$sFQex '4)))))) (library-letrec*-identity 'g$bytevector-s32-set!$6302$sFQex))) (g$bytevector-u32-native-set!$6303$sFQex g$bytevector-u32-native-set!$6414$sFQex ((case-lambda ((g$C$13542$sFQex) (g$C$13542$sFQex (case-lambda ((g$C$13491$sFQex g$bytevector$6359$sFQex g$k$6360$sFQex g$n$6361$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13492$sFQex) (bytevector-uint-set! g$C$13491$sFQex g$bytevector$6359$sFQex g$k$6360$sFQex g$n$6361$sFQex g$V$13492$sFQex '4))))))))) (library-letrec*-identity 'g$bytevector-u32-native-set!$6303$sFQex))) (g$bytevector-s32-native-set!$6304$sFQex g$bytevector-s32-native-set!$6415$sFQex ((case-lambda ((g$C$13543$sFQex) (g$C$13543$sFQex (case-lambda ((g$C$13493$sFQex g$bytevector$6362$sFQex g$k$6363$sFQex g$n$6364$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13494$sFQex) (bytevector-sint-set! g$C$13493$sFQex g$bytevector$6362$sFQex g$k$6363$sFQex g$n$6364$sFQex g$V$13494$sFQex '4))))))))) (library-letrec*-identity 'g$bytevector-s32-native-set!$6304$sFQex))) (g$bytevector-u64-ref$6305$sFQex g$bytevector-u64-ref$6416$sFQex ((case-lambda ((g$C$13544$sFQex) (g$C$13544$sFQex (case-lambda ((g$C$13495$sFQex g$bytevector$6365$sFQex g$k$6366$sFQex g$endianness$6367$sFQex) (bytevector-uint-ref g$C$13495$sFQex g$bytevector$6365$sFQex g$k$6366$sFQex g$endianness$6367$sFQex '8)))))) (library-letrec*-identity 'g$bytevector-u64-ref$6305$sFQex))) (g$bytevector-s64-ref$6306$sFQex g$bytevector-s64-ref$6417$sFQex ((case-lambda ((g$C$13545$sFQex) (g$C$13545$sFQex (case-lambda ((g$C$13496$sFQex g$bytevector$6368$sFQex g$k$6369$sFQex g$endianness$6370$sFQex) (bytevector-sint-ref g$C$13496$sFQex g$bytevector$6368$sFQex g$k$6369$sFQex g$endianness$6370$sFQex '8)))))) (library-letrec*-identity 'g$bytevector-s64-ref$6306$sFQex))) (g$bytevector-u64-native-ref$6307$sFQex g$bytevector-u64-native-ref$6418$sFQex ((case-lambda ((g$C$13546$sFQex) (g$C$13546$sFQex (case-lambda ((g$C$13497$sFQex g$bytevector$6371$sFQex g$k$6372$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13498$sFQex) (bytevector-uint-ref g$C$13497$sFQex g$bytevector$6371$sFQex g$k$6372$sFQex g$V$13498$sFQex '8))))))))) (library-letrec*-identity 'g$bytevector-u64-native-ref$6307$sFQex))) (g$bytevector-s64-native-ref$6308$sFQex g$bytevector-s64-native-ref$6419$sFQex ((case-lambda ((g$C$13547$sFQex) (g$C$13547$sFQex (case-lambda ((g$C$13499$sFQex g$bytevector$6373$sFQex g$k$6374$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13500$sFQex) (bytevector-sint-ref g$C$13499$sFQex g$bytevector$6373$sFQex g$k$6374$sFQex g$V$13500$sFQex '8))))))))) (library-letrec*-identity 'g$bytevector-s64-native-ref$6308$sFQex))) (g$bytevector-u64-set!$6309$sFQex g$bytevector-u64-set!$6420$sFQex ((case-lambda ((g$C$13548$sFQex) (g$C$13548$sFQex (case-lambda ((g$C$13501$sFQex g$bytevector$6375$sFQex g$k$6376$sFQex g$n$6377$sFQex g$endianness$6378$sFQex) (bytevector-uint-set! g$C$13501$sFQex g$bytevector$6375$sFQex g$k$6376$sFQex g$n$6377$sFQex g$endianness$6378$sFQex '8)))))) (library-letrec*-identity 'g$bytevector-u64-set!$6309$sFQex))) (g$bytevector-s64-set!$6310$sFQex g$bytevector-s64-set!$6421$sFQex ((case-lambda ((g$C$13549$sFQex) (g$C$13549$sFQex (case-lambda ((g$C$13502$sFQex g$bytevector$6379$sFQex g$k$6380$sFQex g$n$6381$sFQex g$endianness$6382$sFQex) (bytevector-sint-set! g$C$13502$sFQex g$bytevector$6379$sFQex g$k$6380$sFQex g$n$6381$sFQex g$endianness$6382$sFQex '8)))))) (library-letrec*-identity 'g$bytevector-s64-set!$6310$sFQex))) (g$bytevector-u64-native-set!$6311$sFQex g$bytevector-u64-native-set!$6422$sFQex ((case-lambda ((g$C$13550$sFQex) (g$C$13550$sFQex (case-lambda ((g$C$13503$sFQex g$bytevector$6383$sFQex g$k$6384$sFQex g$n$6385$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13504$sFQex) (bytevector-uint-set! g$C$13503$sFQex g$bytevector$6383$sFQex g$k$6384$sFQex g$n$6385$sFQex g$V$13504$sFQex '8))))))))) (library-letrec*-identity 'g$bytevector-u64-native-set!$6311$sFQex))) (g$bytevector-s64-native-set!$6312$sFQex g$bytevector-s64-native-set!$6423$sFQex ((case-lambda ((g$C$13551$sFQex) (g$C$13551$sFQex (case-lambda ((g$C$13505$sFQex g$bytevector$6386$sFQex g$k$6387$sFQex g$n$6388$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13506$sFQex) (bytevector-sint-set! g$C$13505$sFQex g$bytevector$6386$sFQex g$k$6387$sFQex g$n$6388$sFQex g$V$13506$sFQex '8))))))))) (library-letrec*-identity 'g$bytevector-s64-native-set!$6312$sFQex))) (g$bytevector-ieee-single-native-ref$6313$sFQex g$bytevector-ieee-single-native-ref$6424$sFQex ((case-lambda ((g$C$13552$sFQex) (g$C$13552$sFQex (case-lambda ((g$C$13507$sFQex g$bytevector$6389$sFQex g$k$6390$sFQex) (g$mod$6161$sFQex (case-lambda ((g$V$13508$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$V$13509$sFQex) (not (case-lambda ((g$T$13510$sFQex) (if g$T$13510$sFQex (g$assertion-violation$6456$sFQex g$C$13507$sFQex 'bytevector-ieee-single-native-ref '"must be multiple of 4" g$k$6390$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13511$sFQex) (bytevector-ieee-single-ref g$C$13507$sFQex g$bytevector$6389$sFQex g$k$6390$sFQex g$V$13511$sFQex))))))) g$V$13509$sFQex))) g$V$13508$sFQex))) g$k$6390$sFQex '4)))))) (library-letrec*-identity 'g$bytevector-ieee-single-native-ref$6313$sFQex))) (g$bytevector-ieee-double-native-ref$6314$sFQex g$bytevector-ieee-double-native-ref$6425$sFQex ((case-lambda ((g$C$13553$sFQex) (g$C$13553$sFQex (case-lambda ((g$C$13512$sFQex g$bytevector$6391$sFQex g$k$6392$sFQex) (g$mod$6161$sFQex (case-lambda ((g$V$13513$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$V$13514$sFQex) (not (case-lambda ((g$T$13515$sFQex) (if g$T$13515$sFQex (g$assertion-violation$6456$sFQex g$C$13512$sFQex 'bytevector-ieee-double-native-ref '"must be multiple of 8" g$k$6392$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13516$sFQex) (bytevector-ieee-double-ref g$C$13512$sFQex g$bytevector$6391$sFQex g$k$6392$sFQex g$V$13516$sFQex))))))) g$V$13514$sFQex))) g$V$13513$sFQex))) g$k$6392$sFQex '8)))))) (library-letrec*-identity 'g$bytevector-ieee-double-native-ref$6314$sFQex))) (g$bytevector-ieee-single-native-set!$6315$sFQex g$bytevector-ieee-single-native-set!$6426$sFQex ((case-lambda ((g$C$13554$sFQex) (g$C$13554$sFQex (case-lambda ((g$C$13517$sFQex g$bytevector$6393$sFQex g$k$6394$sFQex g$x$6395$sFQex) (g$mod$6161$sFQex (case-lambda ((g$V$13518$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$V$13519$sFQex) (not (case-lambda ((g$T$13520$sFQex) (if g$T$13520$sFQex (g$assertion-violation$6456$sFQex g$C$13517$sFQex 'bytevector-ieee-single-native-set! '"must be multiple of 4" g$k$6394$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13521$sFQex) (bytevector-ieee-single-set! g$C$13517$sFQex g$bytevector$6393$sFQex g$k$6394$sFQex g$x$6395$sFQex g$V$13521$sFQex))))))) g$V$13519$sFQex))) g$V$13518$sFQex))) g$k$6394$sFQex '4)))))) (library-letrec*-identity 'g$bytevector-ieee-single-native-set!$6315$sFQex))) (g$bytevector-ieee-double-native-set!$6316$sFQex g$bytevector-ieee-double-native-set!$6427$sFQex ((case-lambda ((g$C$13555$sFQex) (g$C$13555$sFQex (case-lambda ((g$C$13522$sFQex g$bytevector$6396$sFQex g$k$6397$sFQex g$x$6398$sFQex) (g$mod$6161$sFQex (case-lambda ((g$V$13523$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$V$13524$sFQex) (not (case-lambda ((g$T$13525$sFQex) (if g$T$13525$sFQex (g$assertion-violation$6456$sFQex g$C$13522$sFQex 'bytevector-ieee-double-native-set! '"must be multiple of 8" g$k$6397$sFQex) (g$native-endianness$6288$sFQex (case-lambda ((g$V$13526$sFQex) (bytevector-ieee-double-set! g$C$13522$sFQex g$bytevector$6396$sFQex g$k$6397$sFQex g$x$6398$sFQex g$V$13526$sFQex))))))) g$V$13524$sFQex))) g$V$13523$sFQex))) g$k$6397$sFQex '8)))))) (library-letrec*-identity 'g$bytevector-ieee-double-native-set!$6316$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme control) () (void identity-for-cps))(library-letrec* (ironscheme eval) () (void identity-for-cps))(library-letrec* (ironscheme exceptions) ((g$*current-exception-handlers*$6428$sFQex g$*current-exception-handlers*$6451$sFQex ((case-lambda ((g$C$13594$sFQex) (list g$C$13594$sFQex (case-lambda ((g$C$13556$sFQex g$condition$6435$sFQex) (display (case-lambda (g$IGNORE$13557$sFQex (display (case-lambda (g$IGNORE$13558$sFQex (g$newline$7382$sFQex (case-lambda (g$IGNORE$13559$sFQex (exit g$C$13556$sFQex '-1)))))) g$condition$6435$sFQex))) '"Unhandled exception:\n")))))) (library-letrec*-identity 'g$*current-exception-handlers*$6428$sFQex))) (g$with-exception-handler$6429$sFQex g$with-exception-handler$6452$sFQex ((case-lambda ((g$C$13595$sFQex) (g$C$13595$sFQex (case-lambda ((g$C$13560$sFQex g$handler$6436$sFQex g$thunk$6437$sFQex) (cons (case-lambda ((g$V$13561$sFQex) (g$with-exception-handlers$6430$sFQex g$C$13560$sFQex g$V$13561$sFQex g$thunk$6437$sFQex))) g$handler$6436$sFQex g$*current-exception-handlers*$6428$sFQex)))))) (library-letrec*-identity 'g$with-exception-handler$6429$sFQex))) (g$with-exception-handlers$6430$sFQex g$with-exception-handlers$6453$sFQex ((case-lambda ((g$C$13596$sFQex) (g$C$13596$sFQex (case-lambda ((g$C$13565$sFQex g$new-handlers$6438$sFQex g$thunk$6439$sFQex) ((case-lambda ((g$C$13564$sFQex g$previous-handlers$6440$sFQex) (dynamic-wind g$C$13564$sFQex (case-lambda ((g$C$13562$sFQex) (begin (set! g$*current-exception-handlers*$6428$sFQex g$new-handlers$6438$sFQex) (g$C$13562$sFQex (cps-void))))) g$thunk$6439$sFQex (case-lambda ((g$C$13563$sFQex) (begin (set! g$*current-exception-handlers*$6428$sFQex g$previous-handlers$6440$sFQex) (g$C$13563$sFQex (cps-void)))))))) g$C$13565$sFQex g$*current-exception-handlers*$6428$sFQex)))))) (library-letrec*-identity 'g$with-exception-handlers$6430$sFQex))) (g$raise$6431$sFQex g$raise$6454$sFQex ((case-lambda ((g$C$13597$sFQex) (g$C$13597$sFQex (case-lambda ((g$C$13574$sFQex g$obj$6441$sFQex) ((case-lambda ((g$C$13572$sFQex g$handlers$6442$sFQex) (cdr (case-lambda ((g$V$13573$sFQex) (g$with-exception-handlers$6430$sFQex g$C$13572$sFQex g$V$13573$sFQex (case-lambda ((g$C$13566$sFQex) (car (case-lambda ((g$V$13567$sFQex) (g$V$13567$sFQex (case-lambda (g$IGNORE$13568$sFQex (g$make-message-condition$6564$sFQex (case-lambda ((g$V$13569$sFQex) (g$make-non-continuable-violation$6618$sFQex (case-lambda ((g$V$13570$sFQex) (condition (case-lambda ((g$V$13571$sFQex) (g$raise$6431$sFQex g$C$13566$sFQex g$V$13571$sFQex))) g$V$13570$sFQex g$V$13569$sFQex)))))) '"handler returned"))) g$obj$6441$sFQex))) g$handlers$6442$sFQex)))))) g$handlers$6442$sFQex))) g$C$13574$sFQex g$*current-exception-handlers*$6428$sFQex)))))) (library-letrec*-identity 'g$raise$6431$sFQex))) (g$raise-continuable$6432$sFQex g$raise-continuable$6455$sFQex ((case-lambda ((g$C$13598$sFQex) (g$C$13598$sFQex (case-lambda ((g$C$13579$sFQex g$obj$6443$sFQex) ((case-lambda ((g$C$13577$sFQex g$handlers$6444$sFQex) (cdr (case-lambda ((g$V$13578$sFQex) (g$with-exception-handlers$6430$sFQex g$C$13577$sFQex g$V$13578$sFQex (case-lambda ((g$C$13575$sFQex) (car (case-lambda ((g$V$13576$sFQex) (g$V$13576$sFQex g$C$13575$sFQex g$obj$6443$sFQex))) g$handlers$6444$sFQex)))))) g$handlers$6444$sFQex))) g$C$13579$sFQex g$*current-exception-handlers*$6428$sFQex)))))) (library-letrec*-identity 'g$raise-continuable$6432$sFQex))) (g$assertion-violation$6433$sFQex g$assertion-violation$6456$sFQex ((case-lambda ((g$C$13599$sFQex) (g$C$13599$sFQex (case-lambda ((g$C$13580$sFQex g$who$6445$sFQex g$msg$6446$sFQex . g$irritants$6447$sFQex) (g$make-irritants-condition$6602$sFQex (case-lambda ((g$V$13581$sFQex) (g$make-message-condition$6564$sFQex (case-lambda ((g$V$13582$sFQex) ((case-lambda ((g$J$13586$sFQex) (if g$who$6445$sFQex (g$make-who-condition$6610$sFQex g$J$13586$sFQex g$who$6445$sFQex) (condition g$J$13586$sFQex)))) (case-lambda ((g$V$13583$sFQex) (g$make-assertion-violation$6596$sFQex (case-lambda ((g$V$13584$sFQex) (condition (case-lambda ((g$V$13585$sFQex) (g$raise$6431$sFQex g$C$13580$sFQex g$V$13585$sFQex))) g$V$13584$sFQex g$V$13583$sFQex g$V$13582$sFQex g$V$13581$sFQex))))))))) g$msg$6446$sFQex))) g$irritants$6447$sFQex)))))) (library-letrec*-identity 'g$assertion-violation$6433$sFQex))) (g$error$6434$sFQex g$error$6457$sFQex ((case-lambda ((g$C$13600$sFQex) (g$C$13600$sFQex (case-lambda ((g$C$13587$sFQex g$who$6448$sFQex g$msg$6449$sFQex . g$irritants$6450$sFQex) (g$make-irritants-condition$6602$sFQex (case-lambda ((g$V$13588$sFQex) (g$make-message-condition$6564$sFQex (case-lambda ((g$V$13589$sFQex) ((case-lambda ((g$J$13593$sFQex) (if g$who$6448$sFQex (g$make-who-condition$6610$sFQex g$J$13593$sFQex g$who$6448$sFQex) (condition g$J$13593$sFQex)))) (case-lambda ((g$V$13590$sFQex) (g$make-error$6584$sFQex (case-lambda ((g$V$13591$sFQex) (condition (case-lambda ((g$V$13592$sFQex) (g$raise$6431$sFQex g$C$13587$sFQex g$V$13592$sFQex))) g$V$13591$sFQex g$V$13590$sFQex g$V$13589$sFQex g$V$13588$sFQex))))))))) g$msg$6449$sFQex))) g$irritants$6450$sFQex)))))) (library-letrec*-identity 'g$error$6434$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme conditions) ((g$7615$6458$sFQex g$7615$6553$sFQex ((case-lambda ((g$C$13601$sFQex) (make-record-type-descriptor g$C$13601$sFQex '&condition '#f 'g$7618$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7615$6458$sFQex))) (g$7617$6459$sFQex g$7617$6554$sFQex ((case-lambda ((g$C$13602$sFQex) (g$C$13602$sFQex '#f))) (library-letrec*-identity 'g$7617$6459$sFQex))) (g$7616$6460$sFQex g$7616$6555$sFQex ((case-lambda ((g$C$13603$sFQex) (make-record-constructor-descriptor g$C$13603$sFQex g$7615$6458$sFQex '#f g$7617$6459$sFQex))) (library-letrec*-identity 'g$7616$6460$sFQex))) (g$&condition?$6461$sFQex g$&condition?$6556$sFQex ((case-lambda ((g$C$13604$sFQex) (record-predicate g$C$13604$sFQex g$7615$6458$sFQex))) (library-letrec*-identity 'g$&condition?$6461$sFQex))) (g$make-&condition$6462$sFQex g$make-&condition$6557$sFQex ((case-lambda ((g$C$13605$sFQex) (record-constructor g$C$13605$sFQex g$7616$6460$sFQex))) (library-letrec*-identity 'g$make-&condition$6462$sFQex))) (g$&condition-rtd$6463$sFQex g$&condition-rtd$6558$sFQex ((case-lambda ((g$C$13606$sFQex) (g$C$13606$sFQex g$7615$6458$sFQex))) (library-letrec*-identity 'g$&condition-rtd$6463$sFQex))) (g$&condition-rcd$6464$sFQex g$&condition-rcd$6559$sFQex ((case-lambda ((g$C$13607$sFQex) (g$C$13607$sFQex g$7616$6460$sFQex))) (library-letrec*-identity 'g$&condition-rcd$6464$sFQex))) (g$7631$6465$sFQex g$7631$6560$sFQex ((case-lambda ((g$C$13608$sFQex) (make-record-type-descriptor g$C$13608$sFQex '&message g$7615$6458$sFQex 'g$7634$sFQex '#f '#f '#((immutable message))))) (library-letrec*-identity 'g$7631$6465$sFQex))) (g$7633$6466$sFQex g$7633$6561$sFQex ((case-lambda ((g$C$13609$sFQex) (g$C$13609$sFQex '#f))) (library-letrec*-identity 'g$7633$6466$sFQex))) (g$7632$6467$sFQex g$7632$6562$sFQex ((case-lambda ((g$C$13610$sFQex) (make-record-constructor-descriptor g$C$13610$sFQex g$7631$6465$sFQex g$7616$6460$sFQex g$7633$6466$sFQex))) (library-letrec*-identity 'g$7632$6467$sFQex))) (g$7630$6468$sFQex g$7630$6563$sFQex ((case-lambda ((g$C$13611$sFQex) (record-predicate g$C$13611$sFQex g$7631$6465$sFQex))) (library-letrec*-identity 'g$7630$6468$sFQex))) (g$make-message-condition$6469$sFQex g$make-message-condition$6564$sFQex ((case-lambda ((g$C$13612$sFQex) (record-constructor g$C$13612$sFQex g$7632$6467$sFQex))) (library-letrec*-identity 'g$make-message-condition$6469$sFQex))) (g$7629$6470$sFQex g$7629$6565$sFQex ((case-lambda ((g$C$13613$sFQex) (record-accessor g$C$13613$sFQex g$7631$6465$sFQex '0))) (library-letrec*-identity 'g$7629$6470$sFQex))) (g$message-condition?$6471$sFQex g$message-condition?$6566$sFQex ((case-lambda ((g$C$13614$sFQex) (condition-predicate g$C$13614$sFQex g$7631$6465$sFQex))) (library-letrec*-identity 'g$message-condition?$6471$sFQex))) (g$condition-message$6472$sFQex g$condition-message$6567$sFQex ((case-lambda ((g$C$13615$sFQex) (condition-accessor g$C$13615$sFQex g$7631$6465$sFQex g$7629$6470$sFQex))) (library-letrec*-identity 'g$condition-message$6472$sFQex))) (g$7647$6473$sFQex g$7647$6568$sFQex ((case-lambda ((g$C$13616$sFQex) (make-record-type-descriptor g$C$13616$sFQex '&warning g$7615$6458$sFQex 'g$7650$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7647$6473$sFQex))) (g$7649$6474$sFQex g$7649$6569$sFQex ((case-lambda ((g$C$13617$sFQex) (g$C$13617$sFQex '#f))) (library-letrec*-identity 'g$7649$6474$sFQex))) (g$7648$6475$sFQex g$7648$6570$sFQex ((case-lambda ((g$C$13618$sFQex) (make-record-constructor-descriptor g$C$13618$sFQex g$7647$6473$sFQex g$7616$6460$sFQex g$7649$6474$sFQex))) (library-letrec*-identity 'g$7648$6475$sFQex))) (g$7646$6476$sFQex g$7646$6571$sFQex ((case-lambda ((g$C$13619$sFQex) (record-predicate g$C$13619$sFQex g$7647$6473$sFQex))) (library-letrec*-identity 'g$7646$6476$sFQex))) (g$make-warning$6477$sFQex g$make-warning$6572$sFQex ((case-lambda ((g$C$13620$sFQex) (record-constructor g$C$13620$sFQex g$7648$6475$sFQex))) (library-letrec*-identity 'g$make-warning$6477$sFQex))) (g$warning?$6478$sFQex g$warning?$6573$sFQex ((case-lambda ((g$C$13621$sFQex) (condition-predicate g$C$13621$sFQex g$7647$6473$sFQex))) (library-letrec*-identity 'g$warning?$6478$sFQex))) (g$7661$6479$sFQex g$7661$6574$sFQex ((case-lambda ((g$C$13622$sFQex) (make-record-type-descriptor g$C$13622$sFQex '&serious g$7615$6458$sFQex 'g$7664$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7661$6479$sFQex))) (g$7663$6480$sFQex g$7663$6575$sFQex ((case-lambda ((g$C$13623$sFQex) (g$C$13623$sFQex '#f))) (library-letrec*-identity 'g$7663$6480$sFQex))) (g$7662$6481$sFQex g$7662$6576$sFQex ((case-lambda ((g$C$13624$sFQex) (make-record-constructor-descriptor g$C$13624$sFQex g$7661$6479$sFQex g$7616$6460$sFQex g$7663$6480$sFQex))) (library-letrec*-identity 'g$7662$6481$sFQex))) (g$7660$6482$sFQex g$7660$6577$sFQex ((case-lambda ((g$C$13625$sFQex) (record-predicate g$C$13625$sFQex g$7661$6479$sFQex))) (library-letrec*-identity 'g$7660$6482$sFQex))) (g$make-serious-condition$6483$sFQex g$make-serious-condition$6578$sFQex ((case-lambda ((g$C$13626$sFQex) (record-constructor g$C$13626$sFQex g$7662$6481$sFQex))) (library-letrec*-identity 'g$make-serious-condition$6483$sFQex))) (g$serious-condition?$6484$sFQex g$serious-condition?$6579$sFQex ((case-lambda ((g$C$13627$sFQex) (condition-predicate g$C$13627$sFQex g$7661$6479$sFQex))) (library-letrec*-identity 'g$serious-condition?$6484$sFQex))) (g$7675$6485$sFQex g$7675$6580$sFQex ((case-lambda ((g$C$13628$sFQex) (make-record-type-descriptor g$C$13628$sFQex '&error g$7661$6479$sFQex 'g$7678$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7675$6485$sFQex))) (g$7677$6486$sFQex g$7677$6581$sFQex ((case-lambda ((g$C$13629$sFQex) (g$C$13629$sFQex '#f))) (library-letrec*-identity 'g$7677$6486$sFQex))) (g$7676$6487$sFQex g$7676$6582$sFQex ((case-lambda ((g$C$13630$sFQex) (make-record-constructor-descriptor g$C$13630$sFQex g$7675$6485$sFQex g$7662$6481$sFQex g$7677$6486$sFQex))) (library-letrec*-identity 'g$7676$6487$sFQex))) (g$7674$6488$sFQex g$7674$6583$sFQex ((case-lambda ((g$C$13631$sFQex) (record-predicate g$C$13631$sFQex g$7675$6485$sFQex))) (library-letrec*-identity 'g$7674$6488$sFQex))) (g$make-error$6489$sFQex g$make-error$6584$sFQex ((case-lambda ((g$C$13632$sFQex) (record-constructor g$C$13632$sFQex g$7676$6487$sFQex))) (library-letrec*-identity 'g$make-error$6489$sFQex))) (g$error?$6490$sFQex g$error?$6585$sFQex ((case-lambda ((g$C$13633$sFQex) (condition-predicate g$C$13633$sFQex g$7675$6485$sFQex))) (library-letrec*-identity 'g$error?$6490$sFQex))) (g$7689$6491$sFQex g$7689$6586$sFQex ((case-lambda ((g$C$13634$sFQex) (make-record-type-descriptor g$C$13634$sFQex '&violation g$7661$6479$sFQex 'g$7692$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7689$6491$sFQex))) (g$7691$6492$sFQex g$7691$6587$sFQex ((case-lambda ((g$C$13635$sFQex) (g$C$13635$sFQex '#f))) (library-letrec*-identity 'g$7691$6492$sFQex))) (g$7690$6493$sFQex g$7690$6588$sFQex ((case-lambda ((g$C$13636$sFQex) (make-record-constructor-descriptor g$C$13636$sFQex g$7689$6491$sFQex g$7662$6481$sFQex g$7691$6492$sFQex))) (library-letrec*-identity 'g$7690$6493$sFQex))) (g$7688$6494$sFQex g$7688$6589$sFQex ((case-lambda ((g$C$13637$sFQex) (record-predicate g$C$13637$sFQex g$7689$6491$sFQex))) (library-letrec*-identity 'g$7688$6494$sFQex))) (g$make-violation$6495$sFQex g$make-violation$6590$sFQex ((case-lambda ((g$C$13638$sFQex) (record-constructor g$C$13638$sFQex g$7690$6493$sFQex))) (library-letrec*-identity 'g$make-violation$6495$sFQex))) (g$violation?$6496$sFQex g$violation?$6591$sFQex ((case-lambda ((g$C$13639$sFQex) (condition-predicate g$C$13639$sFQex g$7689$6491$sFQex))) (library-letrec*-identity 'g$violation?$6496$sFQex))) (g$7703$6497$sFQex g$7703$6592$sFQex ((case-lambda ((g$C$13640$sFQex) (make-record-type-descriptor g$C$13640$sFQex '&assertion g$7689$6491$sFQex 'g$7706$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7703$6497$sFQex))) (g$7705$6498$sFQex g$7705$6593$sFQex ((case-lambda ((g$C$13641$sFQex) (g$C$13641$sFQex '#f))) (library-letrec*-identity 'g$7705$6498$sFQex))) (g$7704$6499$sFQex g$7704$6594$sFQex ((case-lambda ((g$C$13642$sFQex) (make-record-constructor-descriptor g$C$13642$sFQex g$7703$6497$sFQex g$7690$6493$sFQex g$7705$6498$sFQex))) (library-letrec*-identity 'g$7704$6499$sFQex))) (g$7702$6500$sFQex g$7702$6595$sFQex ((case-lambda ((g$C$13643$sFQex) (record-predicate g$C$13643$sFQex g$7703$6497$sFQex))) (library-letrec*-identity 'g$7702$6500$sFQex))) (g$make-assertion-violation$6501$sFQex g$make-assertion-violation$6596$sFQex ((case-lambda ((g$C$13644$sFQex) (record-constructor g$C$13644$sFQex g$7704$6499$sFQex))) (library-letrec*-identity 'g$make-assertion-violation$6501$sFQex))) (g$assertion-violation?$6502$sFQex g$assertion-violation?$6597$sFQex ((case-lambda ((g$C$13645$sFQex) (condition-predicate g$C$13645$sFQex g$7703$6497$sFQex))) (library-letrec*-identity 'g$assertion-violation?$6502$sFQex))) (g$7718$6503$sFQex g$7718$6598$sFQex ((case-lambda ((g$C$13646$sFQex) (make-record-type-descriptor g$C$13646$sFQex '&irritants g$7615$6458$sFQex 'g$7721$sFQex '#f '#f '#((immutable irritants))))) (library-letrec*-identity 'g$7718$6503$sFQex))) (g$7720$6504$sFQex g$7720$6599$sFQex ((case-lambda ((g$C$13647$sFQex) (g$C$13647$sFQex '#f))) (library-letrec*-identity 'g$7720$6504$sFQex))) (g$7719$6505$sFQex g$7719$6600$sFQex ((case-lambda ((g$C$13648$sFQex) (make-record-constructor-descriptor g$C$13648$sFQex g$7718$6503$sFQex g$7616$6460$sFQex g$7720$6504$sFQex))) (library-letrec*-identity 'g$7719$6505$sFQex))) (g$7717$6506$sFQex g$7717$6601$sFQex ((case-lambda ((g$C$13649$sFQex) (record-predicate g$C$13649$sFQex g$7718$6503$sFQex))) (library-letrec*-identity 'g$7717$6506$sFQex))) (g$make-irritants-condition$6507$sFQex g$make-irritants-condition$6602$sFQex ((case-lambda ((g$C$13650$sFQex) (record-constructor g$C$13650$sFQex g$7719$6505$sFQex))) (library-letrec*-identity 'g$make-irritants-condition$6507$sFQex))) (g$7716$6508$sFQex g$7716$6603$sFQex ((case-lambda ((g$C$13651$sFQex) (record-accessor g$C$13651$sFQex g$7718$6503$sFQex '0))) (library-letrec*-identity 'g$7716$6508$sFQex))) (g$irritants-condition?$6509$sFQex g$irritants-condition?$6604$sFQex ((case-lambda ((g$C$13652$sFQex) (condition-predicate g$C$13652$sFQex g$7718$6503$sFQex))) (library-letrec*-identity 'g$irritants-condition?$6509$sFQex))) (g$condition-irritants$6510$sFQex g$condition-irritants$6605$sFQex ((case-lambda ((g$C$13653$sFQex) (condition-accessor g$C$13653$sFQex g$7718$6503$sFQex g$7716$6508$sFQex))) (library-letrec*-identity 'g$condition-irritants$6510$sFQex))) (g$7735$6511$sFQex g$7735$6606$sFQex ((case-lambda ((g$C$13654$sFQex) (make-record-type-descriptor g$C$13654$sFQex '&who g$7615$6458$sFQex 'g$7738$sFQex '#f '#f '#((immutable who))))) (library-letrec*-identity 'g$7735$6511$sFQex))) (g$7737$6512$sFQex g$7737$6607$sFQex ((case-lambda ((g$C$13655$sFQex) (g$C$13655$sFQex '#f))) (library-letrec*-identity 'g$7737$6512$sFQex))) (g$7736$6513$sFQex g$7736$6608$sFQex ((case-lambda ((g$C$13656$sFQex) (make-record-constructor-descriptor g$C$13656$sFQex g$7735$6511$sFQex g$7616$6460$sFQex g$7737$6512$sFQex))) (library-letrec*-identity 'g$7736$6513$sFQex))) (g$7734$6514$sFQex g$7734$6609$sFQex ((case-lambda ((g$C$13657$sFQex) (record-predicate g$C$13657$sFQex g$7735$6511$sFQex))) (library-letrec*-identity 'g$7734$6514$sFQex))) (g$make-who-condition$6515$sFQex g$make-who-condition$6610$sFQex ((case-lambda ((g$C$13658$sFQex) (record-constructor g$C$13658$sFQex g$7736$6513$sFQex))) (library-letrec*-identity 'g$make-who-condition$6515$sFQex))) (g$7733$6516$sFQex g$7733$6611$sFQex ((case-lambda ((g$C$13659$sFQex) (record-accessor g$C$13659$sFQex g$7735$6511$sFQex '0))) (library-letrec*-identity 'g$7733$6516$sFQex))) (g$who-condition?$6517$sFQex g$who-condition?$6612$sFQex ((case-lambda ((g$C$13660$sFQex) (condition-predicate g$C$13660$sFQex g$7735$6511$sFQex))) (library-letrec*-identity 'g$who-condition?$6517$sFQex))) (g$condition-who$6518$sFQex g$condition-who$6613$sFQex ((case-lambda ((g$C$13661$sFQex) (condition-accessor g$C$13661$sFQex g$7735$6511$sFQex g$7733$6516$sFQex))) (library-letrec*-identity 'g$condition-who$6518$sFQex))) (g$7751$6519$sFQex g$7751$6614$sFQex ((case-lambda ((g$C$13662$sFQex) (make-record-type-descriptor g$C$13662$sFQex '&non-continuable g$7689$6491$sFQex 'g$7754$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7751$6519$sFQex))) (g$7753$6520$sFQex g$7753$6615$sFQex ((case-lambda ((g$C$13663$sFQex) (g$C$13663$sFQex '#f))) (library-letrec*-identity 'g$7753$6520$sFQex))) (g$7752$6521$sFQex g$7752$6616$sFQex ((case-lambda ((g$C$13664$sFQex) (make-record-constructor-descriptor g$C$13664$sFQex g$7751$6519$sFQex g$7690$6493$sFQex g$7753$6520$sFQex))) (library-letrec*-identity 'g$7752$6521$sFQex))) (g$7750$6522$sFQex g$7750$6617$sFQex ((case-lambda ((g$C$13665$sFQex) (record-predicate g$C$13665$sFQex g$7751$6519$sFQex))) (library-letrec*-identity 'g$7750$6522$sFQex))) (g$make-non-continuable-violation$6523$sFQex g$make-non-continuable-violation$6618$sFQex ((case-lambda ((g$C$13666$sFQex) (record-constructor g$C$13666$sFQex g$7752$6521$sFQex))) (library-letrec*-identity 'g$make-non-continuable-violation$6523$sFQex))) (g$non-continuable-violation?$6524$sFQex g$non-continuable-violation?$6619$sFQex ((case-lambda ((g$C$13667$sFQex) (condition-predicate g$C$13667$sFQex g$7751$6519$sFQex))) (library-letrec*-identity 'g$non-continuable-violation?$6524$sFQex))) (g$7765$6525$sFQex g$7765$6620$sFQex ((case-lambda ((g$C$13668$sFQex) (make-record-type-descriptor g$C$13668$sFQex '&implementation-restriction g$7689$6491$sFQex 'g$7768$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7765$6525$sFQex))) (g$7767$6526$sFQex g$7767$6621$sFQex ((case-lambda ((g$C$13669$sFQex) (g$C$13669$sFQex '#f))) (library-letrec*-identity 'g$7767$6526$sFQex))) (g$7766$6527$sFQex g$7766$6622$sFQex ((case-lambda ((g$C$13670$sFQex) (make-record-constructor-descriptor g$C$13670$sFQex g$7765$6525$sFQex g$7690$6493$sFQex g$7767$6526$sFQex))) (library-letrec*-identity 'g$7766$6527$sFQex))) (g$7764$6528$sFQex g$7764$6623$sFQex ((case-lambda ((g$C$13671$sFQex) (record-predicate g$C$13671$sFQex g$7765$6525$sFQex))) (library-letrec*-identity 'g$7764$6528$sFQex))) (g$make-implementation-restriction-violation$6529$sFQex g$make-implementation-restriction-violation$6624$sFQex ((case-lambda ((g$C$13672$sFQex) (record-constructor g$C$13672$sFQex g$7766$6527$sFQex))) (library-letrec*-identity 'g$make-implementation-restriction-violation$6529$sFQex))) (g$implementation-restriction-violation?$6530$sFQex g$implementation-restriction-violation?$6625$sFQex ((case-lambda ((g$C$13673$sFQex) (condition-predicate g$C$13673$sFQex g$7765$6525$sFQex))) (library-letrec*-identity 'g$implementation-restriction-violation?$6530$sFQex))) (g$7779$6531$sFQex g$7779$6626$sFQex ((case-lambda ((g$C$13674$sFQex) (make-record-type-descriptor g$C$13674$sFQex '&lexical g$7689$6491$sFQex 'g$7782$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7779$6531$sFQex))) (g$7781$6532$sFQex g$7781$6627$sFQex ((case-lambda ((g$C$13675$sFQex) (g$C$13675$sFQex '#f))) (library-letrec*-identity 'g$7781$6532$sFQex))) (g$7780$6533$sFQex g$7780$6628$sFQex ((case-lambda ((g$C$13676$sFQex) (make-record-constructor-descriptor g$C$13676$sFQex g$7779$6531$sFQex g$7690$6493$sFQex g$7781$6532$sFQex))) (library-letrec*-identity 'g$7780$6533$sFQex))) (g$7778$6534$sFQex g$7778$6629$sFQex ((case-lambda ((g$C$13677$sFQex) (record-predicate g$C$13677$sFQex g$7779$6531$sFQex))) (library-letrec*-identity 'g$7778$6534$sFQex))) (g$make-lexical-violation$6535$sFQex g$make-lexical-violation$6630$sFQex ((case-lambda ((g$C$13678$sFQex) (record-constructor g$C$13678$sFQex g$7780$6533$sFQex))) (library-letrec*-identity 'g$make-lexical-violation$6535$sFQex))) (g$lexical-violation?$6536$sFQex g$lexical-violation?$6631$sFQex ((case-lambda ((g$C$13679$sFQex) (condition-predicate g$C$13679$sFQex g$7779$6531$sFQex))) (library-letrec*-identity 'g$lexical-violation?$6536$sFQex))) (g$7795$6537$sFQex g$7795$6632$sFQex ((case-lambda ((g$C$13680$sFQex) (make-record-type-descriptor g$C$13680$sFQex '&syntax g$7689$6491$sFQex 'g$7798$sFQex '#f '#f '#((immutable form) (immutable subform))))) (library-letrec*-identity 'g$7795$6537$sFQex))) (g$7797$6538$sFQex g$7797$6633$sFQex ((case-lambda ((g$C$13681$sFQex) (g$C$13681$sFQex '#f))) (library-letrec*-identity 'g$7797$6538$sFQex))) (g$7796$6539$sFQex g$7796$6634$sFQex ((case-lambda ((g$C$13682$sFQex) (make-record-constructor-descriptor g$C$13682$sFQex g$7795$6537$sFQex g$7690$6493$sFQex g$7797$6538$sFQex))) (library-letrec*-identity 'g$7796$6539$sFQex))) (g$7794$6540$sFQex g$7794$6635$sFQex ((case-lambda ((g$C$13683$sFQex) (record-predicate g$C$13683$sFQex g$7795$6537$sFQex))) (library-letrec*-identity 'g$7794$6540$sFQex))) (g$make-syntax-violation$6541$sFQex g$make-syntax-violation$6636$sFQex ((case-lambda ((g$C$13684$sFQex) (record-constructor g$C$13684$sFQex g$7796$6539$sFQex))) (library-letrec*-identity 'g$make-syntax-violation$6541$sFQex))) (g$7792$6542$sFQex g$7792$6637$sFQex ((case-lambda ((g$C$13685$sFQex) (record-accessor g$C$13685$sFQex g$7795$6537$sFQex '0))) (library-letrec*-identity 'g$7792$6542$sFQex))) (g$7793$6543$sFQex g$7793$6638$sFQex ((case-lambda ((g$C$13686$sFQex) (record-accessor g$C$13686$sFQex g$7795$6537$sFQex '1))) (library-letrec*-identity 'g$7793$6543$sFQex))) (g$syntax-violation?$6544$sFQex g$syntax-violation?$6639$sFQex ((case-lambda ((g$C$13687$sFQex) (condition-predicate g$C$13687$sFQex g$7795$6537$sFQex))) (library-letrec*-identity 'g$syntax-violation?$6544$sFQex))) (g$syntax-violation-form$6545$sFQex g$syntax-violation-form$6640$sFQex ((case-lambda ((g$C$13688$sFQex) (condition-accessor g$C$13688$sFQex g$7795$6537$sFQex g$7792$6542$sFQex))) (library-letrec*-identity 'g$syntax-violation-form$6545$sFQex))) (g$syntax-violation-subform$6546$sFQex g$syntax-violation-subform$6641$sFQex ((case-lambda ((g$C$13689$sFQex) (condition-accessor g$C$13689$sFQex g$7795$6537$sFQex g$7793$6543$sFQex))) (library-letrec*-identity 'g$syntax-violation-subform$6546$sFQex))) (g$7813$6547$sFQex g$7813$6642$sFQex ((case-lambda ((g$C$13690$sFQex) (make-record-type-descriptor g$C$13690$sFQex '&undefined g$7689$6491$sFQex 'g$7816$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$7813$6547$sFQex))) (g$7815$6548$sFQex g$7815$6643$sFQex ((case-lambda ((g$C$13691$sFQex) (g$C$13691$sFQex '#f))) (library-letrec*-identity 'g$7815$6548$sFQex))) (g$7814$6549$sFQex g$7814$6644$sFQex ((case-lambda ((g$C$13692$sFQex) (make-record-constructor-descriptor g$C$13692$sFQex g$7813$6547$sFQex g$7690$6493$sFQex g$7815$6548$sFQex))) (library-letrec*-identity 'g$7814$6549$sFQex))) (g$7812$6550$sFQex g$7812$6645$sFQex ((case-lambda ((g$C$13693$sFQex) (record-predicate g$C$13693$sFQex g$7813$6547$sFQex))) (library-letrec*-identity 'g$7812$6550$sFQex))) (g$make-undefined-violation$6551$sFQex g$make-undefined-violation$6646$sFQex ((case-lambda ((g$C$13694$sFQex) (record-constructor g$C$13694$sFQex g$7814$6549$sFQex))) (library-letrec*-identity 'g$make-undefined-violation$6551$sFQex))) (g$undefined-violation?$6552$sFQex g$undefined-violation?$6647$sFQex ((case-lambda ((g$C$13695$sFQex) (condition-predicate g$C$13695$sFQex g$7813$6547$sFQex))) (library-letrec*-identity 'g$undefined-violation?$6552$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme mutable-pairs) ((g$append!$6648$sFQex g$append!$6654$sFQex ((case-lambda ((g$C$13708$sFQex) (g$C$13708$sFQex (case-lambda ((g$C$13703$sFQex g$a$6649$sFQex . g$b$6650$sFQex) (null? (case-lambda ((g$T$13704$sFQex) (if g$T$13704$sFQex (g$C$13703$sFQex g$b$6650$sFQex) (null? (case-lambda ((g$T$13705$sFQex) (if g$T$13705$sFQex (g$C$13703$sFQex g$a$6649$sFQex) ((case-lambda ((g$C$13702$sFQex g$f$6651$sFQex) ((case-lambda ((g$C$13697$sFQex g$f$13696$sFQex) (begin (set! g$f$6651$sFQex g$f$13696$sFQex) (g$C$13697$sFQex g$f$6651$sFQex)))) g$C$13702$sFQex (case-lambda ((g$C$13700$sFQex g$a$6652$sFQex) (cdr (case-lambda ((g$V$13701$sFQex) ((case-lambda ((g$C$13698$sFQex g$n$6653$sFQex) (null? (case-lambda ((g$T$13699$sFQex) (if g$T$13699$sFQex (set-cdr! g$C$13698$sFQex g$a$6652$sFQex g$b$6650$sFQex) (g$f$6651$sFQex g$C$13698$sFQex g$n$6653$sFQex)))) g$n$6653$sFQex))) g$C$13700$sFQex g$V$13701$sFQex))) g$a$6652$sFQex)))))) (case-lambda ((g$V$13706$sFQex) (g$V$13706$sFQex (case-lambda (g$IGNORE$13707$sFQex (g$C$13703$sFQex g$a$6649$sFQex))) g$a$6649$sFQex))) uninitialized)))) g$b$6650$sFQex)))) g$a$6649$sFQex)))))) (library-letrec*-identity 'g$append!$6648$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme mutable-strings) () (void identity-for-cps))(library-letrec* (ironscheme programs) () (void identity-for-cps))(library-letrec* (ironscheme r5rs) ((g$inexact->exact$6655$sFQex g$inexact->exact$6675$sFQex ((case-lambda ((g$C$13759$sFQex) (g$C$13759$sFQex exact))) (library-letrec*-identity 'g$inexact->exact$6655$sFQex))) (g$exact->inexact$6656$sFQex g$exact->inexact$6676$sFQex ((case-lambda ((g$C$13760$sFQex) (g$C$13760$sFQex inexact))) (library-letrec*-identity 'g$exact->inexact$6656$sFQex))) (g$sign$6657$sFQex g$sign$6677$sFQex ((case-lambda ((g$C$13761$sFQex) (g$C$13761$sFQex (case-lambda ((g$C$13709$sFQex g$n$6663$sFQex) (> (case-lambda ((g$T$13710$sFQex) (if g$T$13710$sFQex (g$C$13709$sFQex '1) (< (case-lambda ((g$T$13711$sFQex) (if g$T$13711$sFQex (g$C$13709$sFQex '-1) (g$C$13709$sFQex '0)))) g$n$6663$sFQex '0)))) g$n$6663$sFQex '0)))))) (library-letrec*-identity 'g$sign$6657$sFQex))) (g$quotient$6658$sFQex g$quotient$6678$sFQex ((case-lambda ((g$C$13762$sFQex) (g$C$13762$sFQex (case-lambda ((g$C$13712$sFQex g$n1$6664$sFQex g$n2$6665$sFQex) ((case-lambda ((g$J$13723$sFQex) (integer-valued? (case-lambda ((g$V$13724$sFQex) (not (case-lambda ((g$T$13725$sFQex) (if g$T$13725$sFQex (g$assertion-violation$6456$sFQex g$J$13723$sFQex 'quotient '"not an integer" g$n1$6664$sFQex) (void g$J$13723$sFQex)))) g$V$13724$sFQex))) g$n1$6664$sFQex))) (case-lambda (g$IGNORE$13713$sFQex ((case-lambda ((g$J$13720$sFQex) (integer-valued? (case-lambda ((g$V$13721$sFQex) (not (case-lambda ((g$T$13722$sFQex) (if g$T$13722$sFQex (g$assertion-violation$6456$sFQex g$J$13720$sFQex 'quotient '"not an integer" g$n2$6665$sFQex) (void g$J$13720$sFQex)))) g$V$13721$sFQex))) g$n2$6665$sFQex))) (case-lambda (g$IGNORE$13714$sFQex (abs (case-lambda ((g$V$13715$sFQex) (abs (case-lambda ((g$V$13716$sFQex) (g$div$6159$sFQex (case-lambda ((g$V$13717$sFQex) (g$sign$6657$sFQex (case-lambda ((g$V$13718$sFQex) (g$sign$6657$sFQex (case-lambda ((g$V$13719$sFQex) (* g$C$13712$sFQex g$V$13719$sFQex g$V$13718$sFQex g$V$13717$sFQex))) g$n1$6664$sFQex))) g$n2$6665$sFQex))) g$V$13716$sFQex g$V$13715$sFQex))) g$n1$6664$sFQex))) g$n2$6665$sFQex)))))))))))) (library-letrec*-identity 'g$quotient$6658$sFQex))) (g$remainder$6659$sFQex g$remainder$6679$sFQex ((case-lambda ((g$C$13763$sFQex) (g$C$13763$sFQex (case-lambda ((g$C$13726$sFQex g$n1$6666$sFQex g$n2$6667$sFQex) ((case-lambda ((g$J$13736$sFQex) (integer-valued? (case-lambda ((g$V$13737$sFQex) (not (case-lambda ((g$T$13738$sFQex) (if g$T$13738$sFQex (g$assertion-violation$6456$sFQex g$J$13736$sFQex 'remainder '"not an integer" g$n1$6666$sFQex) (void g$J$13736$sFQex)))) g$V$13737$sFQex))) g$n1$6666$sFQex))) (case-lambda (g$IGNORE$13727$sFQex ((case-lambda ((g$J$13733$sFQex) (integer-valued? (case-lambda ((g$V$13734$sFQex) (not (case-lambda ((g$T$13735$sFQex) (if g$T$13735$sFQex (g$assertion-violation$6456$sFQex g$J$13733$sFQex 'remainder '"not an integer" g$n2$6667$sFQex) (void g$J$13733$sFQex)))) g$V$13734$sFQex))) g$n2$6667$sFQex))) (case-lambda (g$IGNORE$13728$sFQex (abs (case-lambda ((g$V$13729$sFQex) (abs (case-lambda ((g$V$13730$sFQex) (g$mod$6161$sFQex (case-lambda ((g$V$13731$sFQex) (g$sign$6657$sFQex (case-lambda ((g$V$13732$sFQex) (* g$C$13726$sFQex g$V$13732$sFQex g$V$13731$sFQex))) g$n1$6666$sFQex))) g$V$13730$sFQex g$V$13729$sFQex))) g$n1$6666$sFQex))) g$n2$6667$sFQex)))))))))))) (library-letrec*-identity 'g$remainder$6659$sFQex))) (g$modulo$6660$sFQex g$modulo$6680$sFQex ((case-lambda ((g$C$13764$sFQex) (g$C$13764$sFQex (case-lambda ((g$C$13739$sFQex g$n1$6668$sFQex g$n2$6669$sFQex) ((case-lambda ((g$J$13750$sFQex) (integer-valued? (case-lambda ((g$V$13751$sFQex) (not (case-lambda ((g$T$13752$sFQex) (if g$T$13752$sFQex (g$assertion-violation$6456$sFQex g$J$13750$sFQex 'modulo '"not an integer" g$n1$6668$sFQex) (void g$J$13750$sFQex)))) g$V$13751$sFQex))) g$n1$6668$sFQex))) (case-lambda (g$IGNORE$13740$sFQex ((case-lambda ((g$J$13747$sFQex) (integer-valued? (case-lambda ((g$V$13748$sFQex) (not (case-lambda ((g$T$13749$sFQex) (if g$T$13749$sFQex (g$assertion-violation$6456$sFQex g$J$13747$sFQex 'modulo '"not an integer" g$n2$6669$sFQex) (void g$J$13747$sFQex)))) g$V$13748$sFQex))) g$n2$6669$sFQex))) (case-lambda (g$IGNORE$13741$sFQex (abs (case-lambda ((g$V$13742$sFQex) (g$sign$6657$sFQex (case-lambda ((g$V$13743$sFQex) (* (case-lambda ((g$V$13744$sFQex) (g$mod$6161$sFQex (case-lambda ((g$V$13745$sFQex) (g$sign$6657$sFQex (case-lambda ((g$V$13746$sFQex) (* g$C$13739$sFQex g$V$13746$sFQex g$V$13745$sFQex))) g$n2$6669$sFQex))) g$V$13744$sFQex g$V$13742$sFQex))) g$V$13743$sFQex g$n1$6668$sFQex))) g$n2$6669$sFQex))) g$n2$6669$sFQex)))))))))))) (library-letrec*-identity 'g$modulo$6660$sFQex))) (g$make-promise$6661$sFQex g$make-promise$6681$sFQex ((case-lambda ((g$C$13765$sFQex) (g$C$13765$sFQex (case-lambda ((g$C$13757$sFQex g$proc$6670$sFQex) ((case-lambda ((g$C$13756$sFQex g$result-ready?$6671$sFQex g$result$6672$sFQex) (g$C$13756$sFQex (case-lambda ((g$C$13754$sFQex) (if g$result-ready?$6671$sFQex (g$C$13754$sFQex g$result$6672$sFQex) (g$proc$6670$sFQex (case-lambda ((g$V$13755$sFQex) ((case-lambda ((g$C$13753$sFQex g$x$6673$sFQex) (if g$result-ready?$6671$sFQex (g$C$13753$sFQex g$result$6672$sFQex) (begin (set! g$result-ready?$6671$sFQex '#t) (begin (set! g$result$6672$sFQex g$x$6673$sFQex) (g$C$13753$sFQex g$result$6672$sFQex)))))) g$C$13754$sFQex g$V$13755$sFQex)))))))))) g$C$13757$sFQex '#f '#f)))))) (library-letrec*-identity 'g$make-promise$6661$sFQex))) (g$force$6662$sFQex g$force$6682$sFQex ((case-lambda ((g$C$13766$sFQex) (g$C$13766$sFQex (case-lambda ((g$C$13758$sFQex g$object$6674$sFQex) (g$object$6674$sFQex g$C$13758$sFQex)))))) (library-letrec*-identity 'g$force$6662$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme sorting) ((g$split$6683$sFQex g$split$6708$sFQex ((case-lambda ((g$C$13819$sFQex) (g$C$13819$sFQex (case-lambda ((g$C$13781$sFQex g$ls$6687$sFQex) ((case-lambda ((g$C$13780$sFQex g$loop$6688$sFQex) ((case-lambda ((g$C$13768$sFQex g$loop$13767$sFQex) (begin (set! g$loop$6688$sFQex g$loop$13767$sFQex) (g$C$13768$sFQex g$loop$6688$sFQex)))) g$C$13780$sFQex (case-lambda ((g$C$13769$sFQex g$rest$6689$sFQex g$left$6690$sFQex g$right$6691$sFQex) (null? (case-lambda ((g$T$13770$sFQex) (if g$T$13770$sFQex (cons g$C$13769$sFQex g$left$6690$sFQex g$right$6691$sFQex) (cdr (case-lambda ((g$V$13771$sFQex) (null? (case-lambda ((g$T$13772$sFQex) (if g$T$13772$sFQex (car (case-lambda ((g$V$13773$sFQex) (cons (case-lambda ((g$V$13774$sFQex) (cons g$C$13769$sFQex g$V$13774$sFQex g$right$6691$sFQex))) g$V$13773$sFQex g$left$6690$sFQex))) g$rest$6689$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$13775$sFQex) (cons (case-lambda ((g$V$13776$sFQex) (car (case-lambda ((g$V$13777$sFQex) (cons (case-lambda ((g$V$13778$sFQex) (g$cddr$6179$sFQex (case-lambda ((g$V$13779$sFQex) (g$loop$6688$sFQex g$C$13769$sFQex g$V$13779$sFQex g$V$13778$sFQex g$V$13776$sFQex))) g$rest$6689$sFQex))) g$V$13777$sFQex g$left$6690$sFQex))) g$rest$6689$sFQex))) g$V$13775$sFQex g$right$6691$sFQex))) g$rest$6689$sFQex)))) g$V$13771$sFQex))) g$rest$6689$sFQex)))) g$rest$6689$sFQex)))))) (case-lambda ((g$V$13782$sFQex) (g$V$13782$sFQex g$C$13781$sFQex g$ls$6687$sFQex '() '()))) uninitialized)))))) (library-letrec*-identity 'g$split$6683$sFQex))) (g$reverse-it$6684$sFQex g$reverse-it$6709$sFQex ((case-lambda ((g$C$13820$sFQex) (g$C$13820$sFQex (case-lambda ((g$C$13783$sFQex g$head$6692$sFQex g$tail$6693$sFQex) (null? (case-lambda ((g$T$13784$sFQex) (if g$T$13784$sFQex (g$C$13783$sFQex g$tail$6693$sFQex) (car (case-lambda ((g$V$13785$sFQex) (cons (case-lambda ((g$V$13786$sFQex) (cdr (case-lambda ((g$V$13787$sFQex) (g$reverse-it$6684$sFQex g$C$13783$sFQex g$V$13787$sFQex g$V$13786$sFQex))) g$head$6692$sFQex))) g$V$13785$sFQex g$tail$6693$sFQex))) g$head$6692$sFQex)))) g$head$6692$sFQex)))))) (library-letrec*-identity 'g$reverse-it$6684$sFQex))) (g$merge$6685$sFQex g$merge$6710$sFQex ((case-lambda ((g$C$13821$sFQex) (g$C$13821$sFQex (case-lambda ((g$C$13802$sFQex g$list-1$6694$sFQex g$list-2$6695$sFQex g$precedes?$6696$sFQex) ((case-lambda ((g$C$13801$sFQex g$loop$6697$sFQex) ((case-lambda ((g$C$13789$sFQex g$loop$13788$sFQex) (begin (set! g$loop$6697$sFQex g$loop$13788$sFQex) (g$C$13789$sFQex g$loop$6697$sFQex)))) g$C$13801$sFQex (case-lambda ((g$C$13796$sFQex g$source-1$6698$sFQex g$source-2$6699$sFQex g$so-far$6700$sFQex) (null? (case-lambda ((g$T$13797$sFQex) (if g$T$13797$sFQex (g$reverse-it$6684$sFQex g$C$13796$sFQex g$so-far$6700$sFQex g$source-2$6699$sFQex) (null? (case-lambda ((g$T$13798$sFQex) (if g$T$13798$sFQex (g$reverse-it$6684$sFQex g$C$13796$sFQex g$so-far$6700$sFQex g$source-1$6698$sFQex) (car (case-lambda ((g$V$13799$sFQex) (car (case-lambda ((g$V$13800$sFQex) ((case-lambda ((g$C$13790$sFQex g$car-1$6701$sFQex g$car-2$6702$sFQex) (g$precedes?$6696$sFQex (case-lambda ((g$T$13791$sFQex) (if g$T$13791$sFQex (cons (case-lambda ((g$V$13792$sFQex) (cdr (case-lambda ((g$V$13793$sFQex) (g$loop$6697$sFQex g$C$13790$sFQex g$source-1$6698$sFQex g$V$13793$sFQex g$V$13792$sFQex))) g$source-2$6699$sFQex))) g$car-2$6702$sFQex g$so-far$6700$sFQex) (cons (case-lambda ((g$V$13794$sFQex) (cdr (case-lambda ((g$V$13795$sFQex) (g$loop$6697$sFQex g$C$13790$sFQex g$source-2$6699$sFQex g$V$13795$sFQex g$V$13794$sFQex))) g$source-1$6698$sFQex))) g$car-1$6701$sFQex g$so-far$6700$sFQex)))) g$car-2$6702$sFQex g$car-1$6701$sFQex))) g$C$13796$sFQex g$V$13800$sFQex g$V$13799$sFQex))) g$source-1$6698$sFQex))) g$source-2$6699$sFQex)))) g$source-2$6699$sFQex)))) g$source-1$6698$sFQex)))))) (case-lambda ((g$V$13803$sFQex) (g$V$13803$sFQex g$C$13802$sFQex g$list-1$6694$sFQex g$list-2$6695$sFQex '()))) uninitialized)))))) (library-letrec*-identity 'g$merge$6685$sFQex))) (g$list-sort$6686$sFQex g$list-sort$6711$sFQex ((case-lambda ((g$C$13822$sFQex) (g$C$13822$sFQex (case-lambda ((g$C$13816$sFQex g$precedes?$6703$sFQex g$ls$6704$sFQex) (null? (case-lambda ((g$T$13817$sFQex) (if g$T$13817$sFQex (g$C$13816$sFQex '()) ((case-lambda ((g$C$13815$sFQex g$helper$6705$sFQex) ((case-lambda ((g$C$13805$sFQex g$helper$13804$sFQex) (begin (set! g$helper$6705$sFQex g$helper$13804$sFQex) (g$C$13805$sFQex g$helper$6705$sFQex)))) g$C$13815$sFQex (case-lambda ((g$C$13811$sFQex g$piece$6706$sFQex) (cdr (case-lambda ((g$V$13812$sFQex) (null? (case-lambda ((g$T$13813$sFQex) (if g$T$13813$sFQex (g$C$13811$sFQex g$piece$6706$sFQex) (g$split$6683$sFQex (case-lambda ((g$V$13814$sFQex) ((case-lambda ((g$C$13806$sFQex g$parts$6707$sFQex) (cdr (case-lambda ((g$V$13807$sFQex) (g$helper$6705$sFQex (case-lambda ((g$V$13808$sFQex) (car (case-lambda ((g$V$13809$sFQex) (g$helper$6705$sFQex (case-lambda ((g$V$13810$sFQex) (g$merge$6685$sFQex g$C$13806$sFQex g$V$13810$sFQex g$V$13808$sFQex g$precedes?$6703$sFQex))) g$V$13809$sFQex))) g$parts$6707$sFQex))) g$V$13807$sFQex))) g$parts$6707$sFQex))) g$C$13811$sFQex g$V$13814$sFQex))) g$piece$6706$sFQex)))) g$V$13812$sFQex))) g$piece$6706$sFQex)))))) (case-lambda ((g$V$13818$sFQex) (g$V$13818$sFQex g$C$13816$sFQex g$ls$6704$sFQex))) uninitialized)))) g$ls$6704$sFQex)))))) (library-letrec*-identity 'g$list-sort$6686$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme syntax-case) () (void identity-for-cps))(library-letrec* (ironscheme unicode) ((g$string-ci=?$6718$sFQex g$string-ci=?$6792$sFQex ((case-lambda ((g$C$13982$sFQex) (g$C$13982$sFQex (case-lambda ((g$C$13831$sFQex g$a$6738$sFQex g$b$6739$sFQex . g$rest$6740$sFQex) ((case-lambda ((g$J$13834$sFQex) (string? (case-lambda ((g$V$13835$sFQex) (not (case-lambda ((g$T$13836$sFQex) (if g$T$13836$sFQex (g$assertion-violation$6456$sFQex g$J$13834$sFQex 'string-ci=? '"not a string" g$a$6738$sFQex) (void g$J$13834$sFQex)))) g$V$13835$sFQex))) g$a$6738$sFQex))) (case-lambda (g$IGNORE$13832$sFQex (cons (case-lambda ((g$V$13833$sFQex) (g$for-all$5678$sFQex g$C$13831$sFQex (case-lambda ((g$C$13824$sFQex g$x$6741$sFQex) ((case-lambda ((g$J$13828$sFQex) (string? (case-lambda ((g$V$13829$sFQex) (not (case-lambda ((g$T$13830$sFQex) (if g$T$13830$sFQex (g$assertion-violation$6456$sFQex g$J$13828$sFQex 'string-ci=? '"not a string" g$x$6741$sFQex) (void g$J$13828$sFQex)))) g$V$13829$sFQex))) g$x$6741$sFQex))) (case-lambda (g$IGNORE$13825$sFQex (string-ci-compare (case-lambda ((g$V$13826$sFQex) (= (case-lambda ((g$V$13827$sFQex) ((case-lambda ((g$C$13823$sFQex g$r$6742$sFQex) (begin (set! g$a$6738$sFQex g$x$6741$sFQex) (g$C$13823$sFQex g$r$6742$sFQex)))) g$C$13824$sFQex g$V$13827$sFQex))) g$V$13826$sFQex '0))) g$a$6738$sFQex g$x$6741$sFQex)))))) g$V$13833$sFQex))) g$b$6739$sFQex g$rest$6740$sFQex))))))))) (library-letrec*-identity 'g$string-ci=?$6718$sFQex))) (g$string-ci<?$6719$sFQex g$string-ci<?$6793$sFQex ((case-lambda ((g$C$13983$sFQex) (g$C$13983$sFQex (case-lambda ((g$C$13845$sFQex g$a$6743$sFQex g$b$6744$sFQex . g$rest$6745$sFQex) ((case-lambda ((g$J$13848$sFQex) (string? (case-lambda ((g$V$13849$sFQex) (not (case-lambda ((g$T$13850$sFQex) (if g$T$13850$sFQex (g$assertion-violation$6456$sFQex g$J$13848$sFQex 'string-ci<? '"not a string" g$a$6743$sFQex) (void g$J$13848$sFQex)))) g$V$13849$sFQex))) g$a$6743$sFQex))) (case-lambda (g$IGNORE$13846$sFQex (cons (case-lambda ((g$V$13847$sFQex) (g$for-all$5678$sFQex g$C$13845$sFQex (case-lambda ((g$C$13838$sFQex g$x$6746$sFQex) ((case-lambda ((g$J$13842$sFQex) (string? (case-lambda ((g$V$13843$sFQex) (not (case-lambda ((g$T$13844$sFQex) (if g$T$13844$sFQex (g$assertion-violation$6456$sFQex g$J$13842$sFQex 'string-ci<? '"not a string" g$x$6746$sFQex) (void g$J$13842$sFQex)))) g$V$13843$sFQex))) g$x$6746$sFQex))) (case-lambda (g$IGNORE$13839$sFQex (string-ci-compare (case-lambda ((g$V$13840$sFQex) (< (case-lambda ((g$V$13841$sFQex) ((case-lambda ((g$C$13837$sFQex g$r$6747$sFQex) (begin (set! g$a$6743$sFQex g$x$6746$sFQex) (g$C$13837$sFQex g$r$6747$sFQex)))) g$C$13838$sFQex g$V$13841$sFQex))) g$V$13840$sFQex '0))) g$a$6743$sFQex g$x$6746$sFQex)))))) g$V$13847$sFQex))) g$b$6744$sFQex g$rest$6745$sFQex))))))))) (library-letrec*-identity 'g$string-ci<?$6719$sFQex))) (g$string-ci>?$6720$sFQex g$string-ci>?$6794$sFQex ((case-lambda ((g$C$13984$sFQex) (g$C$13984$sFQex (case-lambda ((g$C$13859$sFQex g$a$6748$sFQex g$b$6749$sFQex . g$rest$6750$sFQex) ((case-lambda ((g$J$13862$sFQex) (string? (case-lambda ((g$V$13863$sFQex) (not (case-lambda ((g$T$13864$sFQex) (if g$T$13864$sFQex (g$assertion-violation$6456$sFQex g$J$13862$sFQex 'string-ci>? '"not a string" g$a$6748$sFQex) (void g$J$13862$sFQex)))) g$V$13863$sFQex))) g$a$6748$sFQex))) (case-lambda (g$IGNORE$13860$sFQex (cons (case-lambda ((g$V$13861$sFQex) (g$for-all$5678$sFQex g$C$13859$sFQex (case-lambda ((g$C$13852$sFQex g$x$6751$sFQex) ((case-lambda ((g$J$13856$sFQex) (string? (case-lambda ((g$V$13857$sFQex) (not (case-lambda ((g$T$13858$sFQex) (if g$T$13858$sFQex (g$assertion-violation$6456$sFQex g$J$13856$sFQex 'string-ci>? '"not a string" g$x$6751$sFQex) (void g$J$13856$sFQex)))) g$V$13857$sFQex))) g$x$6751$sFQex))) (case-lambda (g$IGNORE$13853$sFQex (string-ci-compare (case-lambda ((g$V$13854$sFQex) (> (case-lambda ((g$V$13855$sFQex) ((case-lambda ((g$C$13851$sFQex g$r$6752$sFQex) (begin (set! g$a$6748$sFQex g$x$6751$sFQex) (g$C$13851$sFQex g$r$6752$sFQex)))) g$C$13852$sFQex g$V$13855$sFQex))) g$V$13854$sFQex '0))) g$a$6748$sFQex g$x$6751$sFQex)))))) g$V$13861$sFQex))) g$b$6749$sFQex g$rest$6750$sFQex))))))))) (library-letrec*-identity 'g$string-ci>?$6720$sFQex))) (g$string-ci<=?$6721$sFQex g$string-ci<=?$6795$sFQex ((case-lambda ((g$C$13985$sFQex) (g$C$13985$sFQex (case-lambda ((g$C$13873$sFQex g$a$6753$sFQex g$b$6754$sFQex . g$rest$6755$sFQex) ((case-lambda ((g$J$13876$sFQex) (string? (case-lambda ((g$V$13877$sFQex) (not (case-lambda ((g$T$13878$sFQex) (if g$T$13878$sFQex (g$assertion-violation$6456$sFQex g$J$13876$sFQex 'string-ci<=? '"not a string" g$a$6753$sFQex) (void g$J$13876$sFQex)))) g$V$13877$sFQex))) g$a$6753$sFQex))) (case-lambda (g$IGNORE$13874$sFQex (cons (case-lambda ((g$V$13875$sFQex) (g$for-all$5678$sFQex g$C$13873$sFQex (case-lambda ((g$C$13866$sFQex g$x$6756$sFQex) ((case-lambda ((g$J$13870$sFQex) (string? (case-lambda ((g$V$13871$sFQex) (not (case-lambda ((g$T$13872$sFQex) (if g$T$13872$sFQex (g$assertion-violation$6456$sFQex g$J$13870$sFQex 'string-ci<=? '"not a string" g$x$6756$sFQex) (void g$J$13870$sFQex)))) g$V$13871$sFQex))) g$x$6756$sFQex))) (case-lambda (g$IGNORE$13867$sFQex (string-ci-compare (case-lambda ((g$V$13868$sFQex) (<= (case-lambda ((g$V$13869$sFQex) ((case-lambda ((g$C$13865$sFQex g$r$6757$sFQex) (begin (set! g$a$6753$sFQex g$x$6756$sFQex) (g$C$13865$sFQex g$r$6757$sFQex)))) g$C$13866$sFQex g$V$13869$sFQex))) g$V$13868$sFQex '0))) g$a$6753$sFQex g$x$6756$sFQex)))))) g$V$13875$sFQex))) g$b$6754$sFQex g$rest$6755$sFQex))))))))) (library-letrec*-identity 'g$string-ci<=?$6721$sFQex))) (g$string-ci>=?$6722$sFQex g$string-ci>=?$6796$sFQex ((case-lambda ((g$C$13986$sFQex) (g$C$13986$sFQex (case-lambda ((g$C$13887$sFQex g$a$6758$sFQex g$b$6759$sFQex . g$rest$6760$sFQex) ((case-lambda ((g$J$13890$sFQex) (string? (case-lambda ((g$V$13891$sFQex) (not (case-lambda ((g$T$13892$sFQex) (if g$T$13892$sFQex (g$assertion-violation$6456$sFQex g$J$13890$sFQex 'string-ci>=? '"not a string" g$a$6758$sFQex) (void g$J$13890$sFQex)))) g$V$13891$sFQex))) g$a$6758$sFQex))) (case-lambda (g$IGNORE$13888$sFQex (cons (case-lambda ((g$V$13889$sFQex) (g$for-all$5678$sFQex g$C$13887$sFQex (case-lambda ((g$C$13880$sFQex g$x$6761$sFQex) ((case-lambda ((g$J$13884$sFQex) (string? (case-lambda ((g$V$13885$sFQex) (not (case-lambda ((g$T$13886$sFQex) (if g$T$13886$sFQex (g$assertion-violation$6456$sFQex g$J$13884$sFQex 'string-ci>=? '"not a string" g$x$6761$sFQex) (void g$J$13884$sFQex)))) g$V$13885$sFQex))) g$x$6761$sFQex))) (case-lambda (g$IGNORE$13881$sFQex (string-ci-compare (case-lambda ((g$V$13882$sFQex) (>= (case-lambda ((g$V$13883$sFQex) ((case-lambda ((g$C$13879$sFQex g$r$6762$sFQex) (begin (set! g$a$6758$sFQex g$x$6761$sFQex) (g$C$13879$sFQex g$r$6762$sFQex)))) g$C$13880$sFQex g$V$13883$sFQex))) g$V$13882$sFQex '0))) g$a$6758$sFQex g$x$6761$sFQex)))))) g$V$13889$sFQex))) g$b$6759$sFQex g$rest$6760$sFQex))))))))) (library-letrec*-identity 'g$string-ci>=?$6722$sFQex))) (g$char-ci=?$6729$sFQex g$char-ci=?$6797$sFQex ((case-lambda ((g$C$13987$sFQex) (g$C$13987$sFQex (case-lambda ((g$C$13904$sFQex g$a$6763$sFQex g$b$6764$sFQex . g$rest$6765$sFQex) ((case-lambda ((g$J$13907$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13908$sFQex) (not (case-lambda ((g$T$13909$sFQex) (if g$T$13909$sFQex (g$assertion-violation$6456$sFQex g$J$13907$sFQex 'char-ci=? '"not a char" g$a$6763$sFQex) (void g$J$13907$sFQex)))) g$V$13908$sFQex))) g$a$6763$sFQex))) (case-lambda (g$IGNORE$13905$sFQex (cons (case-lambda ((g$V$13906$sFQex) (g$for-all$5678$sFQex g$C$13904$sFQex (case-lambda ((g$C$13894$sFQex g$x$6766$sFQex) ((case-lambda ((g$J$13901$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13902$sFQex) (not (case-lambda ((g$T$13903$sFQex) (if g$T$13903$sFQex (g$assertion-violation$6456$sFQex g$J$13901$sFQex 'char-ci=? '"not a char" g$x$6766$sFQex) (void g$J$13901$sFQex)))) g$V$13902$sFQex))) g$x$6766$sFQex))) (case-lambda (g$IGNORE$13895$sFQex (char-upcase (case-lambda ((g$V$13896$sFQex) (char->integer (case-lambda ((g$V$13897$sFQex) (char-upcase (case-lambda ((g$V$13898$sFQex) (char->integer (case-lambda ((g$V$13899$sFQex) (= (case-lambda ((g$V$13900$sFQex) ((case-lambda ((g$C$13893$sFQex g$r$6767$sFQex) (begin (set! g$a$6763$sFQex g$x$6766$sFQex) (g$C$13893$sFQex g$r$6767$sFQex)))) g$C$13894$sFQex g$V$13900$sFQex))) g$V$13899$sFQex g$V$13897$sFQex))) g$V$13898$sFQex))) g$a$6763$sFQex))) g$V$13896$sFQex))) g$x$6766$sFQex)))))) g$V$13906$sFQex))) g$b$6764$sFQex g$rest$6765$sFQex))))))))) (library-letrec*-identity 'g$char-ci=?$6729$sFQex))) (g$char-ci<?$6730$sFQex g$char-ci<?$6798$sFQex ((case-lambda ((g$C$13988$sFQex) (g$C$13988$sFQex (case-lambda ((g$C$13921$sFQex g$a$6768$sFQex g$b$6769$sFQex . g$rest$6770$sFQex) ((case-lambda ((g$J$13924$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13925$sFQex) (not (case-lambda ((g$T$13926$sFQex) (if g$T$13926$sFQex (g$assertion-violation$6456$sFQex g$J$13924$sFQex 'char-ci<? '"not a char" g$a$6768$sFQex) (void g$J$13924$sFQex)))) g$V$13925$sFQex))) g$a$6768$sFQex))) (case-lambda (g$IGNORE$13922$sFQex (cons (case-lambda ((g$V$13923$sFQex) (g$for-all$5678$sFQex g$C$13921$sFQex (case-lambda ((g$C$13911$sFQex g$x$6771$sFQex) ((case-lambda ((g$J$13918$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13919$sFQex) (not (case-lambda ((g$T$13920$sFQex) (if g$T$13920$sFQex (g$assertion-violation$6456$sFQex g$J$13918$sFQex 'char-ci<? '"not a char" g$x$6771$sFQex) (void g$J$13918$sFQex)))) g$V$13919$sFQex))) g$x$6771$sFQex))) (case-lambda (g$IGNORE$13912$sFQex (char-upcase (case-lambda ((g$V$13913$sFQex) (char->integer (case-lambda ((g$V$13914$sFQex) (char-upcase (case-lambda ((g$V$13915$sFQex) (char->integer (case-lambda ((g$V$13916$sFQex) (< (case-lambda ((g$V$13917$sFQex) ((case-lambda ((g$C$13910$sFQex g$r$6772$sFQex) (begin (set! g$a$6768$sFQex g$x$6771$sFQex) (g$C$13910$sFQex g$r$6772$sFQex)))) g$C$13911$sFQex g$V$13917$sFQex))) g$V$13916$sFQex g$V$13914$sFQex))) g$V$13915$sFQex))) g$a$6768$sFQex))) g$V$13913$sFQex))) g$x$6771$sFQex)))))) g$V$13923$sFQex))) g$b$6769$sFQex g$rest$6770$sFQex))))))))) (library-letrec*-identity 'g$char-ci<?$6730$sFQex))) (g$char-ci>?$6731$sFQex g$char-ci>?$6799$sFQex ((case-lambda ((g$C$13989$sFQex) (g$C$13989$sFQex (case-lambda ((g$C$13938$sFQex g$a$6773$sFQex g$b$6774$sFQex . g$rest$6775$sFQex) ((case-lambda ((g$J$13941$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13942$sFQex) (not (case-lambda ((g$T$13943$sFQex) (if g$T$13943$sFQex (g$assertion-violation$6456$sFQex g$J$13941$sFQex 'char-ci>? '"not a char" g$a$6773$sFQex) (void g$J$13941$sFQex)))) g$V$13942$sFQex))) g$a$6773$sFQex))) (case-lambda (g$IGNORE$13939$sFQex (cons (case-lambda ((g$V$13940$sFQex) (g$for-all$5678$sFQex g$C$13938$sFQex (case-lambda ((g$C$13928$sFQex g$x$6776$sFQex) ((case-lambda ((g$J$13935$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13936$sFQex) (not (case-lambda ((g$T$13937$sFQex) (if g$T$13937$sFQex (g$assertion-violation$6456$sFQex g$J$13935$sFQex 'char-ci>? '"not a char" g$x$6776$sFQex) (void g$J$13935$sFQex)))) g$V$13936$sFQex))) g$x$6776$sFQex))) (case-lambda (g$IGNORE$13929$sFQex (char-upcase (case-lambda ((g$V$13930$sFQex) (char->integer (case-lambda ((g$V$13931$sFQex) (char-upcase (case-lambda ((g$V$13932$sFQex) (char->integer (case-lambda ((g$V$13933$sFQex) (> (case-lambda ((g$V$13934$sFQex) ((case-lambda ((g$C$13927$sFQex g$r$6777$sFQex) (begin (set! g$a$6773$sFQex g$x$6776$sFQex) (g$C$13927$sFQex g$r$6777$sFQex)))) g$C$13928$sFQex g$V$13934$sFQex))) g$V$13933$sFQex g$V$13931$sFQex))) g$V$13932$sFQex))) g$a$6773$sFQex))) g$V$13930$sFQex))) g$x$6776$sFQex)))))) g$V$13940$sFQex))) g$b$6774$sFQex g$rest$6775$sFQex))))))))) (library-letrec*-identity 'g$char-ci>?$6731$sFQex))) (g$char-ci<=?$6732$sFQex g$char-ci<=?$6800$sFQex ((case-lambda ((g$C$13990$sFQex) (g$C$13990$sFQex (case-lambda ((g$C$13955$sFQex g$a$6778$sFQex g$b$6779$sFQex . g$rest$6780$sFQex) ((case-lambda ((g$J$13958$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13959$sFQex) (not (case-lambda ((g$T$13960$sFQex) (if g$T$13960$sFQex (g$assertion-violation$6456$sFQex g$J$13958$sFQex 'char-ci<=? '"not a char" g$a$6778$sFQex) (void g$J$13958$sFQex)))) g$V$13959$sFQex))) g$a$6778$sFQex))) (case-lambda (g$IGNORE$13956$sFQex (cons (case-lambda ((g$V$13957$sFQex) (g$for-all$5678$sFQex g$C$13955$sFQex (case-lambda ((g$C$13945$sFQex g$x$6781$sFQex) ((case-lambda ((g$J$13952$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13953$sFQex) (not (case-lambda ((g$T$13954$sFQex) (if g$T$13954$sFQex (g$assertion-violation$6456$sFQex g$J$13952$sFQex 'char-ci<=? '"not a char" g$x$6781$sFQex) (void g$J$13952$sFQex)))) g$V$13953$sFQex))) g$x$6781$sFQex))) (case-lambda (g$IGNORE$13946$sFQex (char-upcase (case-lambda ((g$V$13947$sFQex) (char->integer (case-lambda ((g$V$13948$sFQex) (char-upcase (case-lambda ((g$V$13949$sFQex) (char->integer (case-lambda ((g$V$13950$sFQex) (<= (case-lambda ((g$V$13951$sFQex) ((case-lambda ((g$C$13944$sFQex g$r$6782$sFQex) (begin (set! g$a$6778$sFQex g$x$6781$sFQex) (g$C$13944$sFQex g$r$6782$sFQex)))) g$C$13945$sFQex g$V$13951$sFQex))) g$V$13950$sFQex g$V$13948$sFQex))) g$V$13949$sFQex))) g$a$6778$sFQex))) g$V$13947$sFQex))) g$x$6781$sFQex)))))) g$V$13957$sFQex))) g$b$6779$sFQex g$rest$6780$sFQex))))))))) (library-letrec*-identity 'g$char-ci<=?$6732$sFQex))) (g$char-ci>=?$6733$sFQex g$char-ci>=?$6801$sFQex ((case-lambda ((g$C$13991$sFQex) (g$C$13991$sFQex (case-lambda ((g$C$13972$sFQex g$a$6783$sFQex g$b$6784$sFQex . g$rest$6785$sFQex) ((case-lambda ((g$J$13975$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13976$sFQex) (not (case-lambda ((g$T$13977$sFQex) (if g$T$13977$sFQex (g$assertion-violation$6456$sFQex g$J$13975$sFQex 'char-ci>=? '"not a char" g$a$6783$sFQex) (void g$J$13975$sFQex)))) g$V$13976$sFQex))) g$a$6783$sFQex))) (case-lambda (g$IGNORE$13973$sFQex (cons (case-lambda ((g$V$13974$sFQex) (g$for-all$5678$sFQex g$C$13972$sFQex (case-lambda ((g$C$13962$sFQex g$x$6786$sFQex) ((case-lambda ((g$J$13969$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$13970$sFQex) (not (case-lambda ((g$T$13971$sFQex) (if g$T$13971$sFQex (g$assertion-violation$6456$sFQex g$J$13969$sFQex 'char-ci>=? '"not a char" g$x$6786$sFQex) (void g$J$13969$sFQex)))) g$V$13970$sFQex))) g$x$6786$sFQex))) (case-lambda (g$IGNORE$13963$sFQex (char-upcase (case-lambda ((g$V$13964$sFQex) (char->integer (case-lambda ((g$V$13965$sFQex) (char-upcase (case-lambda ((g$V$13966$sFQex) (char->integer (case-lambda ((g$V$13967$sFQex) (>= (case-lambda ((g$V$13968$sFQex) ((case-lambda ((g$C$13961$sFQex g$r$6787$sFQex) (begin (set! g$a$6783$sFQex g$x$6786$sFQex) (g$C$13961$sFQex g$r$6787$sFQex)))) g$C$13962$sFQex g$V$13968$sFQex))) g$V$13967$sFQex g$V$13965$sFQex))) g$V$13966$sFQex))) g$a$6783$sFQex))) g$V$13964$sFQex))) g$x$6786$sFQex)))))) g$V$13974$sFQex))) g$b$6784$sFQex g$rest$6785$sFQex))))))))) (library-letrec*-identity 'g$char-ci>=?$6733$sFQex))) (g$string-normalize-nfc$6734$sFQex g$string-normalize-nfc$6802$sFQex ((case-lambda ((g$C$13992$sFQex) (g$C$13992$sFQex (case-lambda ((g$C$13978$sFQex g$s$6788$sFQex) (string-normalize g$C$13978$sFQex g$s$6788$sFQex 'formc)))))) (library-letrec*-identity 'g$string-normalize-nfc$6734$sFQex))) (g$string-normalize-nfd$6735$sFQex g$string-normalize-nfd$6803$sFQex ((case-lambda ((g$C$13993$sFQex) (g$C$13993$sFQex (case-lambda ((g$C$13979$sFQex g$s$6789$sFQex) (string-normalize g$C$13979$sFQex g$s$6789$sFQex 'formd)))))) (library-letrec*-identity 'g$string-normalize-nfd$6735$sFQex))) (g$string-normalize-nfkc$6736$sFQex g$string-normalize-nfkc$6804$sFQex ((case-lambda ((g$C$13994$sFQex) (g$C$13994$sFQex (case-lambda ((g$C$13980$sFQex g$s$6790$sFQex) (string-normalize g$C$13980$sFQex g$s$6790$sFQex 'formkc)))))) (library-letrec*-identity 'g$string-normalize-nfkc$6736$sFQex))) (g$string-normalize-nfkd$6737$sFQex g$string-normalize-nfkd$6805$sFQex ((case-lambda ((g$C$13995$sFQex) (g$C$13995$sFQex (case-lambda ((g$C$13981$sFQex g$s$6791$sFQex) (string-normalize g$C$13981$sFQex g$s$6791$sFQex 'formkd)))))) (library-letrec*-identity 'g$string-normalize-nfkd$6737$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic bitwise) ((g$bitwise-if$6806$sFQex g$bitwise-if$6837$sFQex ((case-lambda ((g$C$14027$sFQex) (g$C$14027$sFQex (case-lambda ((g$C$13996$sFQex g$ei1$6813$sFQex g$ei2$6814$sFQex g$ei3$6815$sFQex) (bitwise-not (case-lambda ((g$V$13997$sFQex) (bitwise-and (case-lambda ((g$V$13998$sFQex) (bitwise-and (case-lambda ((g$V$13999$sFQex) (bitwise-ior g$C$13996$sFQex g$V$13999$sFQex g$V$13998$sFQex))) g$ei1$6813$sFQex g$ei2$6814$sFQex))) g$V$13997$sFQex g$ei3$6815$sFQex))) g$ei1$6813$sFQex)))))) (library-letrec*-identity 'g$bitwise-if$6806$sFQex))) (g$bitwise-copy-bit$6807$sFQex g$bitwise-copy-bit$6838$sFQex ((case-lambda ((g$C$14028$sFQex) (g$C$14028$sFQex (case-lambda ((g$C$14000$sFQex g$ei1$6816$sFQex g$ei2$6817$sFQex g$ei3$6818$sFQex) (g$bitwise-arithmetic-shift-left$6810$sFQex (case-lambda ((g$V$14001$sFQex) (g$bitwise-arithmetic-shift-left$6810$sFQex (case-lambda ((g$V$14002$sFQex) (g$bitwise-if$6806$sFQex g$C$14000$sFQex g$V$14002$sFQex g$V$14001$sFQex g$ei1$6816$sFQex))) '1 g$ei2$6817$sFQex))) g$ei3$6818$sFQex g$ei2$6817$sFQex)))))) (library-letrec*-identity 'g$bitwise-copy-bit$6807$sFQex))) (g$bitwise-bit-field$6808$sFQex g$bitwise-bit-field$6839$sFQex ((case-lambda ((g$C$14029$sFQex) (g$C$14029$sFQex (case-lambda ((g$C$14003$sFQex g$ei1$6819$sFQex g$ei2$6820$sFQex g$ei3$6821$sFQex) (g$bitwise-arithmetic-shift-left$6810$sFQex (case-lambda ((g$V$14004$sFQex) (bitwise-not (case-lambda ((g$V$14005$sFQex) (bitwise-and (case-lambda ((g$V$14006$sFQex) (g$bitwise-arithmetic-shift-right$6811$sFQex g$C$14003$sFQex g$V$14006$sFQex g$ei2$6820$sFQex))) g$ei1$6819$sFQex g$V$14005$sFQex))) g$V$14004$sFQex))) '-1 g$ei3$6821$sFQex)))))) (library-letrec*-identity 'g$bitwise-bit-field$6808$sFQex))) (g$bitwise-copy-bit-field$6809$sFQex g$bitwise-copy-bit-field$6840$sFQex ((case-lambda ((g$C$14030$sFQex) (g$C$14030$sFQex (case-lambda ((g$C$14007$sFQex g$to$6822$sFQex g$start$6823$sFQex g$end$6824$sFQex g$from$6825$sFQex) (g$bitwise-arithmetic-shift-left$6810$sFQex (case-lambda ((g$V$14008$sFQex) (g$bitwise-arithmetic-shift-left$6810$sFQex (case-lambda ((g$V$14009$sFQex) (bitwise-not (case-lambda ((g$V$14010$sFQex) (g$bitwise-arithmetic-shift-left$6810$sFQex (case-lambda ((g$V$14011$sFQex) (bitwise-and (case-lambda ((g$V$14012$sFQex) (g$bitwise-if$6806$sFQex g$C$14007$sFQex g$V$14012$sFQex g$V$14008$sFQex g$to$6822$sFQex))) g$V$14011$sFQex g$V$14010$sFQex))) '-1 g$start$6823$sFQex))) g$V$14009$sFQex))) '-1 g$end$6824$sFQex))) g$from$6825$sFQex g$start$6823$sFQex)))))) (library-letrec*-identity 'g$bitwise-copy-bit-field$6809$sFQex))) (g$bitwise-arithmetic-shift-left$6810$sFQex g$bitwise-arithmetic-shift-left$6841$sFQex ((case-lambda ((g$C$14031$sFQex) (g$C$14031$sFQex (case-lambda ((g$C$14013$sFQex g$ei1$6826$sFQex g$ei2$6827$sFQex) (bitwise-arithmetic-shift g$C$14013$sFQex g$ei1$6826$sFQex g$ei2$6827$sFQex)))))) (library-letrec*-identity 'g$bitwise-arithmetic-shift-left$6810$sFQex))) (g$bitwise-arithmetic-shift-right$6811$sFQex g$bitwise-arithmetic-shift-right$6842$sFQex ((case-lambda ((g$C$14032$sFQex) (g$C$14032$sFQex (case-lambda ((g$C$14014$sFQex g$ei1$6828$sFQex g$ei2$6829$sFQex) (- (case-lambda ((g$V$14015$sFQex) (bitwise-arithmetic-shift g$C$14014$sFQex g$ei1$6828$sFQex g$V$14015$sFQex))) g$ei2$6829$sFQex)))))) (library-letrec*-identity 'g$bitwise-arithmetic-shift-right$6811$sFQex))) (g$bitwise-rotate-bit-field$6812$sFQex g$bitwise-rotate-bit-field$6843$sFQex ((case-lambda ((g$C$14033$sFQex) (g$C$14033$sFQex (case-lambda ((g$C$14025$sFQex g$n$6830$sFQex g$start$6831$sFQex g$end$6832$sFQex g$count$6833$sFQex) (- (case-lambda ((g$V$14026$sFQex) ((case-lambda ((g$C$14021$sFQex g$width$6834$sFQex) (g$positive?$6204$sFQex (case-lambda ((g$T$14022$sFQex) (if g$T$14022$sFQex (g$bitwise-bit-field$6808$sFQex (case-lambda ((g$V$14023$sFQex) (g$mod$6161$sFQex (case-lambda ((g$V$14024$sFQex) ((case-lambda ((g$C$14016$sFQex g$count$6835$sFQex g$field$6836$sFQex) (- (case-lambda ((g$V$14017$sFQex) (g$bitwise-arithmetic-shift-right$6811$sFQex (case-lambda ((g$V$14018$sFQex) (g$bitwise-arithmetic-shift-left$6810$sFQex (case-lambda ((g$V$14019$sFQex) (bitwise-ior (case-lambda ((g$V$14020$sFQex) (g$bitwise-copy-bit-field$6809$sFQex g$C$14016$sFQex g$n$6830$sFQex g$start$6831$sFQex g$end$6832$sFQex g$V$14020$sFQex))) g$V$14019$sFQex g$V$14018$sFQex))) g$field$6836$sFQex g$count$6835$sFQex))) g$field$6836$sFQex g$V$14017$sFQex))) g$width$6834$sFQex g$count$6835$sFQex))) g$C$14021$sFQex g$V$14024$sFQex g$V$14023$sFQex))) g$count$6833$sFQex g$width$6834$sFQex))) g$n$6830$sFQex g$start$6831$sFQex g$end$6832$sFQex) (g$C$14021$sFQex g$n$6830$sFQex)))) g$width$6834$sFQex))) g$C$14025$sFQex g$V$14026$sFQex))) g$end$6832$sFQex g$start$6831$sFQex)))))) (library-letrec*-identity 'g$bitwise-rotate-bit-field$6812$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic fixnums) ((g$fxdiv$6844$sFQex g$fxdiv$6949$sFQex ((case-lambda ((g$C$14144$sFQex) (g$C$14144$sFQex (case-lambda ((g$C$14037$sFQex g$fx1$6865$sFQex g$fx2$6866$sFQex) (call-with-values g$C$14037$sFQex (case-lambda ((g$C$14034$sFQex) (fxdiv-and-mod g$C$14034$sFQex g$fx1$6865$sFQex g$fx2$6866$sFQex))) (case-lambda ((g$C$14036$sFQex g$n$6869$sFQex g$d$6870$sFQex) ((case-lambda ((g$C$14035$sFQex g$d$6871$sFQex g$n$6872$sFQex) (g$C$14035$sFQex g$n$6872$sFQex))) g$C$14036$sFQex g$d$6870$sFQex g$n$6869$sFQex))))))))) (library-letrec*-identity 'g$fxdiv$6844$sFQex))) (g$fxdiv0$6845$sFQex g$fxdiv0$6950$sFQex ((case-lambda ((g$C$14145$sFQex) (g$C$14145$sFQex (case-lambda ((g$C$14041$sFQex g$fx1$6873$sFQex g$fx2$6874$sFQex) (call-with-values g$C$14041$sFQex (case-lambda ((g$C$14038$sFQex) (fxdiv0-and-mod0 g$C$14038$sFQex g$fx1$6873$sFQex g$fx2$6874$sFQex))) (case-lambda ((g$C$14040$sFQex g$n$6877$sFQex g$d$6878$sFQex) ((case-lambda ((g$C$14039$sFQex g$d$6879$sFQex g$n$6880$sFQex) (g$C$14039$sFQex g$n$6880$sFQex))) g$C$14040$sFQex g$d$6878$sFQex g$n$6877$sFQex))))))))) (library-letrec*-identity 'g$fxdiv0$6845$sFQex))) (g$fxmod$6846$sFQex g$fxmod$6951$sFQex ((case-lambda ((g$C$14146$sFQex) (g$C$14146$sFQex (case-lambda ((g$C$14045$sFQex g$fx1$6881$sFQex g$fx2$6882$sFQex) (call-with-values g$C$14045$sFQex (case-lambda ((g$C$14042$sFQex) (fxdiv-and-mod g$C$14042$sFQex g$fx1$6881$sFQex g$fx2$6882$sFQex))) (case-lambda ((g$C$14044$sFQex g$n$6885$sFQex g$d$6886$sFQex) ((case-lambda ((g$C$14043$sFQex g$d$6887$sFQex g$n$6888$sFQex) (g$C$14043$sFQex g$d$6887$sFQex))) g$C$14044$sFQex g$d$6886$sFQex g$n$6885$sFQex))))))))) (library-letrec*-identity 'g$fxmod$6846$sFQex))) (g$fxmod0$6847$sFQex g$fxmod0$6952$sFQex ((case-lambda ((g$C$14147$sFQex) (g$C$14147$sFQex (case-lambda ((g$C$14049$sFQex g$fx1$6889$sFQex g$fx2$6890$sFQex) (call-with-values g$C$14049$sFQex (case-lambda ((g$C$14046$sFQex) (fxdiv0-and-mod0 g$C$14046$sFQex g$fx1$6889$sFQex g$fx2$6890$sFQex))) (case-lambda ((g$C$14048$sFQex g$n$6893$sFQex g$d$6894$sFQex) ((case-lambda ((g$C$14047$sFQex g$d$6895$sFQex g$n$6896$sFQex) (g$C$14047$sFQex g$d$6895$sFQex))) g$C$14048$sFQex g$d$6894$sFQex g$n$6893$sFQex))))))))) (library-letrec*-identity 'g$fxmod0$6847$sFQex))) (g$fxpositive?$6848$sFQex g$fxpositive?$6953$sFQex ((case-lambda ((g$C$14148$sFQex) (g$C$14148$sFQex (case-lambda ((g$C$14050$sFQex g$r$6897$sFQex) ((case-lambda ((g$J$14052$sFQex) (g$fixnum?$6171$sFQex (case-lambda ((g$V$14053$sFQex) (not (case-lambda ((g$T$14054$sFQex) (if g$T$14054$sFQex (g$assertion-violation$6456$sFQex g$J$14052$sFQex 'fxpositive? '"not a fixnum" g$r$6897$sFQex) (void g$J$14052$sFQex)))) g$V$14053$sFQex))) g$r$6897$sFQex))) (case-lambda (g$IGNORE$14051$sFQex (fx<? g$C$14050$sFQex '0 g$r$6897$sFQex))))))))) (library-letrec*-identity 'g$fxpositive?$6848$sFQex))) (g$fxnegative?$6849$sFQex g$fxnegative?$6954$sFQex ((case-lambda ((g$C$14149$sFQex) (g$C$14149$sFQex (case-lambda ((g$C$14055$sFQex g$r$6898$sFQex) ((case-lambda ((g$J$14057$sFQex) (g$fixnum?$6171$sFQex (case-lambda ((g$V$14058$sFQex) (not (case-lambda ((g$T$14059$sFQex) (if g$T$14059$sFQex (g$assertion-violation$6456$sFQex g$J$14057$sFQex 'fxnegative? '"not a fixnum" g$r$6898$sFQex) (void g$J$14057$sFQex)))) g$V$14058$sFQex))) g$r$6898$sFQex))) (case-lambda (g$IGNORE$14056$sFQex (fx>? g$C$14055$sFQex '0 g$r$6898$sFQex))))))))) (library-letrec*-identity 'g$fxnegative?$6849$sFQex))) (g$fxzero?$6850$sFQex g$fxzero?$6955$sFQex ((case-lambda ((g$C$14150$sFQex) (g$C$14150$sFQex (case-lambda ((g$C$14060$sFQex g$r$6899$sFQex) ((case-lambda ((g$J$14062$sFQex) (g$fixnum?$6171$sFQex (case-lambda ((g$V$14063$sFQex) (not (case-lambda ((g$T$14064$sFQex) (if g$T$14064$sFQex (g$assertion-violation$6456$sFQex g$J$14062$sFQex 'fxzero? '"not a fixnum" g$r$6899$sFQex) (void g$J$14062$sFQex)))) g$V$14063$sFQex))) g$r$6899$sFQex))) (case-lambda (g$IGNORE$14061$sFQex (fx=? g$C$14060$sFQex '0 g$r$6899$sFQex))))))))) (library-letrec*-identity 'g$fxzero?$6850$sFQex))) (g$fxeven?$6851$sFQex g$fxeven?$6956$sFQex ((case-lambda ((g$C$14151$sFQex) (g$C$14151$sFQex (case-lambda ((g$C$14065$sFQex g$n$6900$sFQex) ((case-lambda ((g$J$14068$sFQex) (g$fixnum?$6171$sFQex (case-lambda ((g$V$14069$sFQex) (not (case-lambda ((g$T$14070$sFQex) (if g$T$14070$sFQex (g$assertion-violation$6456$sFQex g$J$14068$sFQex 'fxeven? '"not a fixnum" g$n$6900$sFQex) (void g$J$14068$sFQex)))) g$V$14069$sFQex))) g$n$6900$sFQex))) (case-lambda (g$IGNORE$14066$sFQex (g$fxmod$6846$sFQex (case-lambda ((g$V$14067$sFQex) (fx=? g$C$14065$sFQex '0 g$V$14067$sFQex))) g$n$6900$sFQex '2))))))))) (library-letrec*-identity 'g$fxeven?$6851$sFQex))) (g$fxodd?$6852$sFQex g$fxodd?$6957$sFQex ((case-lambda ((g$C$14152$sFQex) (g$C$14152$sFQex (case-lambda ((g$C$14071$sFQex g$n$6901$sFQex) ((case-lambda ((g$J$14074$sFQex) (g$fixnum?$6171$sFQex (case-lambda ((g$V$14075$sFQex) (not (case-lambda ((g$T$14076$sFQex) (if g$T$14076$sFQex (g$assertion-violation$6456$sFQex g$J$14074$sFQex 'fxodd? '"not a fixnum" g$n$6901$sFQex) (void g$J$14074$sFQex)))) g$V$14075$sFQex))) g$n$6901$sFQex))) (case-lambda (g$IGNORE$14072$sFQex (g$fxmod$6846$sFQex (case-lambda ((g$V$14073$sFQex) (fx=? g$C$14071$sFQex '1 g$V$14073$sFQex))) g$n$6901$sFQex '2))))))))) (library-letrec*-identity 'g$fxodd?$6852$sFQex))) (g$fxmax$6853$sFQex g$fxmax$6958$sFQex ((case-lambda ((g$C$14153$sFQex) (g$C$14153$sFQex (case-lambda ((g$C$14079$sFQex g$a$6902$sFQex . g$rest$6903$sFQex) ((case-lambda ((g$J$14081$sFQex) (g$fixnum?$6171$sFQex (case-lambda ((g$V$14082$sFQex) (not (case-lambda ((g$T$14083$sFQex) (if g$T$14083$sFQex (g$assertion-violation$6456$sFQex g$J$14081$sFQex 'fxmax '"not a fixnum" g$a$6902$sFQex) (void g$J$14081$sFQex)))) g$V$14082$sFQex))) g$a$6902$sFQex))) (case-lambda (g$IGNORE$14080$sFQex (g$fold-left$5683$sFQex g$C$14079$sFQex (case-lambda ((g$C$14077$sFQex g$a$6904$sFQex g$b$6905$sFQex) (fx<? (case-lambda ((g$T$14078$sFQex) (if g$T$14078$sFQex (g$C$14077$sFQex g$b$6905$sFQex) (g$C$14077$sFQex g$a$6904$sFQex)))) g$a$6904$sFQex g$b$6905$sFQex))) g$a$6902$sFQex g$rest$6903$sFQex))))))))) (library-letrec*-identity 'g$fxmax$6853$sFQex))) (g$fxmin$6854$sFQex g$fxmin$6959$sFQex ((case-lambda ((g$C$14154$sFQex) (g$C$14154$sFQex (case-lambda ((g$C$14086$sFQex g$a$6906$sFQex . g$rest$6907$sFQex) ((case-lambda ((g$J$14088$sFQex) (g$fixnum?$6171$sFQex (case-lambda ((g$V$14089$sFQex) (not (case-lambda ((g$T$14090$sFQex) (if g$T$14090$sFQex (g$assertion-violation$6456$sFQex g$J$14088$sFQex 'fxmin '"not a fixnum" g$a$6906$sFQex) (void g$J$14088$sFQex)))) g$V$14089$sFQex))) g$a$6906$sFQex))) (case-lambda (g$IGNORE$14087$sFQex (g$fold-left$5683$sFQex g$C$14086$sFQex (case-lambda ((g$C$14084$sFQex g$a$6908$sFQex g$b$6909$sFQex) (fx>? (case-lambda ((g$T$14085$sFQex) (if g$T$14085$sFQex (g$C$14084$sFQex g$b$6909$sFQex) (g$C$14084$sFQex g$a$6908$sFQex)))) g$a$6908$sFQex g$b$6909$sFQex))) g$a$6906$sFQex g$rest$6907$sFQex))))))))) (library-letrec*-identity 'g$fxmin$6854$sFQex))) (g$fx*/carry$6855$sFQex g$fx*/carry$6960$sFQex ((case-lambda ((g$C$14155$sFQex) (g$C$14155$sFQex (case-lambda ((g$C$14094$sFQex g$fx1$6910$sFQex g$fx2$6911$sFQex g$fx3$6912$sFQex) (g$fixnum-width$6173$sFQex (case-lambda ((g$V$14095$sFQex) (expt (case-lambda ((g$V$14096$sFQex) (* (case-lambda ((g$V$14097$sFQex) (+ (case-lambda ((g$V$14098$sFQex) ((case-lambda ((g$C$14091$sFQex g$s$6913$sFQex g$e$6914$sFQex) (g$div0$6160$sFQex (case-lambda ((g$V$14092$sFQex) (g$mod0$6162$sFQex (case-lambda ((g$V$14093$sFQex) (values g$C$14091$sFQex g$V$14093$sFQex g$V$14092$sFQex))) g$s$6913$sFQex g$e$6914$sFQex))) g$s$6913$sFQex g$e$6914$sFQex))) g$C$14094$sFQex g$V$14098$sFQex g$V$14096$sFQex))) g$V$14097$sFQex g$fx3$6912$sFQex))) g$fx1$6910$sFQex g$fx2$6911$sFQex))) '2 g$V$14095$sFQex))))))))) (library-letrec*-identity 'g$fx*/carry$6855$sFQex))) (g$fx-/carry$6856$sFQex g$fx-/carry$6961$sFQex ((case-lambda ((g$C$14156$sFQex) (g$C$14156$sFQex (case-lambda ((g$C$14102$sFQex g$fx1$6915$sFQex g$fx2$6916$sFQex g$fx3$6917$sFQex) (g$fixnum-width$6173$sFQex (case-lambda ((g$V$14103$sFQex) (expt (case-lambda ((g$V$14104$sFQex) (- (case-lambda ((g$V$14105$sFQex) ((case-lambda ((g$C$14099$sFQex g$s$6918$sFQex g$e$6919$sFQex) (g$div0$6160$sFQex (case-lambda ((g$V$14100$sFQex) (g$mod0$6162$sFQex (case-lambda ((g$V$14101$sFQex) (values g$C$14099$sFQex g$V$14101$sFQex g$V$14100$sFQex))) g$s$6918$sFQex g$e$6919$sFQex))) g$s$6918$sFQex g$e$6919$sFQex))) g$C$14102$sFQex g$V$14105$sFQex g$V$14104$sFQex))) g$fx1$6915$sFQex g$fx2$6916$sFQex g$fx3$6917$sFQex))) '2 g$V$14103$sFQex))))))))) (library-letrec*-identity 'g$fx-/carry$6856$sFQex))) (g$fx+/carry$6857$sFQex g$fx+/carry$6962$sFQex ((case-lambda ((g$C$14157$sFQex) (g$C$14157$sFQex (case-lambda ((g$C$14109$sFQex g$fx1$6920$sFQex g$fx2$6921$sFQex g$fx3$6922$sFQex) (g$fixnum-width$6173$sFQex (case-lambda ((g$V$14110$sFQex) (expt (case-lambda ((g$V$14111$sFQex) (+ (case-lambda ((g$V$14112$sFQex) ((case-lambda ((g$C$14106$sFQex g$s$6923$sFQex g$e$6924$sFQex) (g$div0$6160$sFQex (case-lambda ((g$V$14107$sFQex) (g$mod0$6162$sFQex (case-lambda ((g$V$14108$sFQex) (values g$C$14106$sFQex g$V$14108$sFQex g$V$14107$sFQex))) g$s$6923$sFQex g$e$6924$sFQex))) g$s$6923$sFQex g$e$6924$sFQex))) g$C$14109$sFQex g$V$14112$sFQex g$V$14111$sFQex))) g$fx1$6920$sFQex g$fx2$6921$sFQex g$fx3$6922$sFQex))) '2 g$V$14110$sFQex))))))))) (library-letrec*-identity 'g$fx+/carry$6857$sFQex))) (g$fxif$6858$sFQex g$fxif$6963$sFQex ((case-lambda ((g$C$14158$sFQex) (g$C$14158$sFQex (case-lambda ((g$C$14113$sFQex g$fx1$6925$sFQex g$fx2$6926$sFQex g$fx3$6927$sFQex) (fxnot (case-lambda ((g$V$14114$sFQex) (fxand (case-lambda ((g$V$14115$sFQex) (fxand (case-lambda ((g$V$14116$sFQex) (fxior g$C$14113$sFQex g$V$14116$sFQex g$V$14115$sFQex))) g$fx1$6925$sFQex g$fx2$6926$sFQex))) g$V$14114$sFQex g$fx3$6927$sFQex))) g$fx1$6925$sFQex)))))) (library-letrec*-identity 'g$fxif$6858$sFQex))) (g$fxcopy-bit$6859$sFQex g$fxcopy-bit$6964$sFQex ((case-lambda ((g$C$14159$sFQex) (g$C$14159$sFQex (case-lambda ((g$C$14117$sFQex g$fx1$6928$sFQex g$fx2$6929$sFQex g$fx3$6930$sFQex) (g$fxarithmetic-shift-left$6862$sFQex (case-lambda ((g$V$14118$sFQex) (g$fxarithmetic-shift-left$6862$sFQex (case-lambda ((g$V$14119$sFQex) (g$fxif$6858$sFQex g$C$14117$sFQex g$V$14119$sFQex g$V$14118$sFQex g$fx1$6928$sFQex))) '1 g$fx2$6929$sFQex))) g$fx3$6930$sFQex g$fx2$6929$sFQex)))))) (library-letrec*-identity 'g$fxcopy-bit$6859$sFQex))) (g$fxbit-field$6860$sFQex g$fxbit-field$6965$sFQex ((case-lambda ((g$C$14160$sFQex) (g$C$14160$sFQex (case-lambda ((g$C$14120$sFQex g$fx1$6931$sFQex g$fx2$6932$sFQex g$fx3$6933$sFQex) (g$fxarithmetic-shift-left$6862$sFQex (case-lambda ((g$V$14121$sFQex) (fxnot (case-lambda ((g$V$14122$sFQex) (fxand (case-lambda ((g$V$14123$sFQex) (g$fxarithmetic-shift-right$6863$sFQex g$C$14120$sFQex g$V$14123$sFQex g$fx2$6932$sFQex))) g$fx1$6931$sFQex g$V$14122$sFQex))) g$V$14121$sFQex))) '-1 g$fx3$6933$sFQex)))))) (library-letrec*-identity 'g$fxbit-field$6860$sFQex))) (g$fxcopy-bit-field$6861$sFQex g$fxcopy-bit-field$6966$sFQex ((case-lambda ((g$C$14161$sFQex) (g$C$14161$sFQex (case-lambda ((g$C$14124$sFQex g$to$6934$sFQex g$start$6935$sFQex g$end$6936$sFQex g$from$6937$sFQex) (g$fxarithmetic-shift-left$6862$sFQex (case-lambda ((g$V$14125$sFQex) (g$fxarithmetic-shift-left$6862$sFQex (case-lambda ((g$V$14126$sFQex) (fxnot (case-lambda ((g$V$14127$sFQex) (g$fxarithmetic-shift-left$6862$sFQex (case-lambda ((g$V$14128$sFQex) (fxand (case-lambda ((g$V$14129$sFQex) (g$fxif$6858$sFQex g$C$14124$sFQex g$V$14129$sFQex g$V$14125$sFQex g$to$6934$sFQex))) g$V$14128$sFQex g$V$14127$sFQex))) '-1 g$start$6935$sFQex))) g$V$14126$sFQex))) '-1 g$end$6936$sFQex))) g$from$6937$sFQex g$start$6935$sFQex)))))) (library-letrec*-identity 'g$fxcopy-bit-field$6861$sFQex))) (g$fxarithmetic-shift-left$6862$sFQex g$fxarithmetic-shift-left$6967$sFQex ((case-lambda ((g$C$14162$sFQex) (g$C$14162$sFQex (case-lambda ((g$C$14130$sFQex g$fx1$6938$sFQex g$fx2$6939$sFQex) (fxarithmetic-shift g$C$14130$sFQex g$fx1$6938$sFQex g$fx2$6939$sFQex)))))) (library-letrec*-identity 'g$fxarithmetic-shift-left$6862$sFQex))) (g$fxarithmetic-shift-right$6863$sFQex g$fxarithmetic-shift-right$6968$sFQex ((case-lambda ((g$C$14163$sFQex) (g$C$14163$sFQex (case-lambda ((g$C$14131$sFQex g$fx1$6940$sFQex g$fx2$6941$sFQex) (fx- (case-lambda ((g$V$14132$sFQex) (fxarithmetic-shift g$C$14131$sFQex g$fx1$6940$sFQex g$V$14132$sFQex))) g$fx2$6941$sFQex)))))) (library-letrec*-identity 'g$fxarithmetic-shift-right$6863$sFQex))) (g$fxrotate-bit-field$6864$sFQex g$fxrotate-bit-field$6969$sFQex ((case-lambda ((g$C$14164$sFQex) (g$C$14164$sFQex (case-lambda ((g$C$14142$sFQex g$n$6942$sFQex g$start$6943$sFQex g$end$6944$sFQex g$count$6945$sFQex) (fx- (case-lambda ((g$V$14143$sFQex) ((case-lambda ((g$C$14138$sFQex g$width$6946$sFQex) (g$fxpositive?$6848$sFQex (case-lambda ((g$T$14139$sFQex) (if g$T$14139$sFQex (g$fxbit-field$6860$sFQex (case-lambda ((g$V$14140$sFQex) (g$fxmod$6846$sFQex (case-lambda ((g$V$14141$sFQex) ((case-lambda ((g$C$14133$sFQex g$count$6947$sFQex g$field$6948$sFQex) (fx- (case-lambda ((g$V$14134$sFQex) (g$fxarithmetic-shift-right$6863$sFQex (case-lambda ((g$V$14135$sFQex) (g$fxarithmetic-shift-left$6862$sFQex (case-lambda ((g$V$14136$sFQex) (fxior (case-lambda ((g$V$14137$sFQex) (g$fxcopy-bit-field$6861$sFQex g$C$14133$sFQex g$n$6942$sFQex g$start$6943$sFQex g$end$6944$sFQex g$V$14137$sFQex))) g$V$14136$sFQex g$V$14135$sFQex))) g$field$6948$sFQex g$count$6947$sFQex))) g$field$6948$sFQex g$V$14134$sFQex))) g$width$6946$sFQex g$count$6947$sFQex))) g$C$14138$sFQex g$V$14141$sFQex g$V$14140$sFQex))) g$count$6945$sFQex g$width$6946$sFQex))) g$n$6942$sFQex g$start$6943$sFQex g$end$6944$sFQex) (g$C$14138$sFQex g$n$6942$sFQex)))) g$width$6946$sFQex))) g$C$14142$sFQex g$V$14143$sFQex))) g$end$6944$sFQex g$start$6943$sFQex)))))) (library-letrec*-identity 'g$fxrotate-bit-field$6864$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme arithmetic flonums) ((g$fldiv-and-mod$6970$sFQex g$fldiv-and-mod$7099$sFQex ((case-lambda ((g$C$14321$sFQex) (g$C$14321$sFQex (case-lambda ((g$C$14169$sFQex g$fl1$7014$sFQex g$fl2$7015$sFQex) (call-with-values g$C$14169$sFQex (case-lambda ((g$C$14165$sFQex) (div-and-mod g$C$14165$sFQex g$fl1$7014$sFQex g$fl2$7015$sFQex))) (case-lambda ((g$C$14168$sFQex g$n$7018$sFQex g$d$7019$sFQex) ((case-lambda ((g$C$14166$sFQex g$d$7020$sFQex g$n$7021$sFQex) (real->flonum (case-lambda ((g$V$14167$sFQex) (values g$C$14166$sFQex g$V$14167$sFQex g$d$7020$sFQex))) g$n$7021$sFQex))) g$C$14168$sFQex g$d$7019$sFQex g$n$7018$sFQex))))))))) (library-letrec*-identity 'g$fldiv-and-mod$6970$sFQex))) (g$fldiv0-and-mod0$6971$sFQex g$fldiv0-and-mod0$7100$sFQex ((case-lambda ((g$C$14322$sFQex) (g$C$14322$sFQex (case-lambda ((g$C$14174$sFQex g$fl1$7022$sFQex g$fl2$7023$sFQex) (call-with-values g$C$14174$sFQex (case-lambda ((g$C$14170$sFQex) (div0-and-mod0 g$C$14170$sFQex g$fl1$7022$sFQex g$fl2$7023$sFQex))) (case-lambda ((g$C$14173$sFQex g$n$7026$sFQex g$d$7027$sFQex) ((case-lambda ((g$C$14171$sFQex g$d$7028$sFQex g$n$7029$sFQex) (real->flonum (case-lambda ((g$V$14172$sFQex) (values g$C$14171$sFQex g$V$14172$sFQex g$d$7028$sFQex))) g$n$7029$sFQex))) g$C$14173$sFQex g$d$7027$sFQex g$n$7026$sFQex))))))))) (library-letrec*-identity 'g$fldiv0-and-mod0$6971$sFQex))) (g$fldiv$6972$sFQex g$fldiv$7101$sFQex ((case-lambda ((g$C$14323$sFQex) (g$C$14323$sFQex (case-lambda ((g$C$14178$sFQex g$fl1$7030$sFQex g$fl2$7031$sFQex) (call-with-values g$C$14178$sFQex (case-lambda ((g$C$14175$sFQex) (g$fldiv-and-mod$6970$sFQex g$C$14175$sFQex g$fl1$7030$sFQex g$fl2$7031$sFQex))) (case-lambda ((g$C$14177$sFQex g$n$7034$sFQex g$d$7035$sFQex) ((case-lambda ((g$C$14176$sFQex g$d$7036$sFQex g$n$7037$sFQex) (g$C$14176$sFQex g$n$7037$sFQex))) g$C$14177$sFQex g$d$7035$sFQex g$n$7034$sFQex))))))))) (library-letrec*-identity 'g$fldiv$6972$sFQex))) (g$fldiv0$6973$sFQex g$fldiv0$7102$sFQex ((case-lambda ((g$C$14324$sFQex) (g$C$14324$sFQex (case-lambda ((g$C$14182$sFQex g$fl1$7038$sFQex g$fl2$7039$sFQex) (call-with-values g$C$14182$sFQex (case-lambda ((g$C$14179$sFQex) (g$fldiv0-and-mod0$6971$sFQex g$C$14179$sFQex g$fl1$7038$sFQex g$fl2$7039$sFQex))) (case-lambda ((g$C$14181$sFQex g$n$7042$sFQex g$d$7043$sFQex) ((case-lambda ((g$C$14180$sFQex g$d$7044$sFQex g$n$7045$sFQex) (g$C$14180$sFQex g$n$7045$sFQex))) g$C$14181$sFQex g$d$7043$sFQex g$n$7042$sFQex))))))))) (library-letrec*-identity 'g$fldiv0$6973$sFQex))) (g$flmod$6974$sFQex g$flmod$7103$sFQex ((case-lambda ((g$C$14325$sFQex) (g$C$14325$sFQex (case-lambda ((g$C$14186$sFQex g$fl1$7046$sFQex g$fl2$7047$sFQex) (call-with-values g$C$14186$sFQex (case-lambda ((g$C$14183$sFQex) (g$fldiv-and-mod$6970$sFQex g$C$14183$sFQex g$fl1$7046$sFQex g$fl2$7047$sFQex))) (case-lambda ((g$C$14185$sFQex g$n$7050$sFQex g$d$7051$sFQex) ((case-lambda ((g$C$14184$sFQex g$d$7052$sFQex g$n$7053$sFQex) (g$C$14184$sFQex g$d$7052$sFQex))) g$C$14185$sFQex g$d$7051$sFQex g$n$7050$sFQex))))))))) (library-letrec*-identity 'g$flmod$6974$sFQex))) (g$flmod0$6975$sFQex g$flmod0$7104$sFQex ((case-lambda ((g$C$14326$sFQex) (g$C$14326$sFQex (case-lambda ((g$C$14190$sFQex g$fl1$7054$sFQex g$fl2$7055$sFQex) (call-with-values g$C$14190$sFQex (case-lambda ((g$C$14187$sFQex) (g$fldiv0-and-mod0$6971$sFQex g$C$14187$sFQex g$fl1$7054$sFQex g$fl2$7055$sFQex))) (case-lambda ((g$C$14189$sFQex g$n$7058$sFQex g$d$7059$sFQex) ((case-lambda ((g$C$14188$sFQex g$d$7060$sFQex g$n$7061$sFQex) (g$C$14188$sFQex g$d$7060$sFQex))) g$C$14189$sFQex g$d$7059$sFQex g$n$7058$sFQex))))))))) (library-letrec*-identity 'g$flmod0$6975$sFQex))) (g$flinteger?$6976$sFQex g$flinteger?$7105$sFQex ((case-lambda ((g$C$14327$sFQex) (g$C$14327$sFQex (case-lambda ((g$C$14191$sFQex g$fl$7062$sFQex) ((case-lambda ((g$J$14194$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14195$sFQex) (not (case-lambda ((g$T$14196$sFQex) (if g$T$14196$sFQex (g$assertion-violation$6456$sFQex g$J$14194$sFQex 'flinteger? '"not a flonum" g$fl$7062$sFQex) (void g$J$14194$sFQex)))) g$V$14195$sFQex))) g$fl$7062$sFQex))) (case-lambda (g$IGNORE$14192$sFQex (g$flmod$6974$sFQex (case-lambda ((g$V$14193$sFQex) (fl=? g$C$14191$sFQex '0.0 g$V$14193$sFQex))) g$fl$7062$sFQex '1.0))))))))) (library-letrec*-identity 'g$flinteger?$6976$sFQex))) (g$flfinite?$6977$sFQex g$flfinite?$7106$sFQex ((case-lambda ((g$C$14328$sFQex) (g$C$14328$sFQex (case-lambda ((g$C$14197$sFQex g$fl$7063$sFQex) ((case-lambda ((g$J$14200$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14201$sFQex) (not (case-lambda ((g$T$14202$sFQex) (if g$T$14202$sFQex (g$assertion-violation$6456$sFQex g$J$14200$sFQex 'flfinite? '"not a flonum" g$fl$7063$sFQex) (void g$J$14200$sFQex)))) g$V$14201$sFQex))) g$fl$7063$sFQex))) (case-lambda (g$IGNORE$14198$sFQex (g$flinfinite?$6978$sFQex (case-lambda ((g$V$14199$sFQex) (not g$C$14197$sFQex g$V$14199$sFQex))) g$fl$7063$sFQex))))))))) (library-letrec*-identity 'g$flfinite?$6977$sFQex))) (g$flinfinite?$6978$sFQex g$flinfinite?$7107$sFQex ((case-lambda ((g$C$14329$sFQex) (g$C$14329$sFQex (case-lambda ((g$C$14203$sFQex g$fl$7064$sFQex) ((case-lambda ((g$J$14205$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14206$sFQex) (not (case-lambda ((g$T$14207$sFQex) (if g$T$14207$sFQex (g$assertion-violation$6456$sFQex g$J$14205$sFQex 'flinfinite? '"not a flonum" g$fl$7064$sFQex) (void g$J$14205$sFQex)))) g$V$14206$sFQex))) g$fl$7064$sFQex))) (case-lambda (g$IGNORE$14204$sFQex (g$C$14203$sFQex (clr-call-internal 'system.double 'isinfinity '() g$fl$7064$sFQex)))))))))) (library-letrec*-identity 'g$flinfinite?$6978$sFQex))) (g$flnan?$6979$sFQex g$flnan?$7108$sFQex ((case-lambda ((g$C$14330$sFQex) (g$C$14330$sFQex (case-lambda ((g$C$14208$sFQex g$fl$7065$sFQex) ((case-lambda ((g$J$14210$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14211$sFQex) (not (case-lambda ((g$T$14212$sFQex) (if g$T$14212$sFQex (g$assertion-violation$6456$sFQex g$J$14210$sFQex 'flnan? '"not a flonum" g$fl$7065$sFQex) (void g$J$14210$sFQex)))) g$V$14211$sFQex))) g$fl$7065$sFQex))) (case-lambda (g$IGNORE$14209$sFQex (g$C$14208$sFQex (clr-call-internal 'system.double 'isnan '() g$fl$7065$sFQex)))))))))) (library-letrec*-identity 'g$flnan?$6979$sFQex))) (g$flsin$6980$sFQex g$flsin$7109$sFQex ((case-lambda ((g$C$14331$sFQex) (g$C$14331$sFQex (case-lambda ((g$C$14213$sFQex g$fl$7066$sFQex) ((case-lambda ((g$J$14215$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14216$sFQex) (not (case-lambda ((g$T$14217$sFQex) (if g$T$14217$sFQex (g$assertion-violation$6456$sFQex g$J$14215$sFQex 'flsin '"not a flonum" g$fl$7066$sFQex) (void g$J$14215$sFQex)))) g$V$14216$sFQex))) g$fl$7066$sFQex))) (case-lambda (g$IGNORE$14214$sFQex (g$C$14213$sFQex (clr-call-internal 'system.math 'sin '() g$fl$7066$sFQex)))))))))) (library-letrec*-identity 'g$flsin$6980$sFQex))) (g$flcos$6981$sFQex g$flcos$7110$sFQex ((case-lambda ((g$C$14332$sFQex) (g$C$14332$sFQex (case-lambda ((g$C$14218$sFQex g$fl$7067$sFQex) ((case-lambda ((g$J$14220$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14221$sFQex) (not (case-lambda ((g$T$14222$sFQex) (if g$T$14222$sFQex (g$assertion-violation$6456$sFQex g$J$14220$sFQex 'flcos '"not a flonum" g$fl$7067$sFQex) (void g$J$14220$sFQex)))) g$V$14221$sFQex))) g$fl$7067$sFQex))) (case-lambda (g$IGNORE$14219$sFQex (g$C$14218$sFQex (clr-call-internal 'system.math 'cos '() g$fl$7067$sFQex)))))))))) (library-letrec*-identity 'g$flcos$6981$sFQex))) (g$fltan$6982$sFQex g$fltan$7111$sFQex ((case-lambda ((g$C$14333$sFQex) (g$C$14333$sFQex (case-lambda ((g$C$14223$sFQex g$fl$7068$sFQex) ((case-lambda ((g$J$14225$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14226$sFQex) (not (case-lambda ((g$T$14227$sFQex) (if g$T$14227$sFQex (g$assertion-violation$6456$sFQex g$J$14225$sFQex 'fltan '"not a flonum" g$fl$7068$sFQex) (void g$J$14225$sFQex)))) g$V$14226$sFQex))) g$fl$7068$sFQex))) (case-lambda (g$IGNORE$14224$sFQex (g$C$14223$sFQex (clr-call-internal 'system.math 'tan '() g$fl$7068$sFQex)))))))))) (library-letrec*-identity 'g$fltan$6982$sFQex))) (g$flasin$6983$sFQex g$flasin$7112$sFQex ((case-lambda ((g$C$14334$sFQex) (g$C$14334$sFQex (case-lambda ((g$C$14228$sFQex g$fl$7069$sFQex) ((case-lambda ((g$J$14230$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14231$sFQex) (not (case-lambda ((g$T$14232$sFQex) (if g$T$14232$sFQex (g$assertion-violation$6456$sFQex g$J$14230$sFQex 'flasin '"not a flonum" g$fl$7069$sFQex) (void g$J$14230$sFQex)))) g$V$14231$sFQex))) g$fl$7069$sFQex))) (case-lambda (g$IGNORE$14229$sFQex (g$C$14228$sFQex (clr-call-internal 'system.math 'asin '() g$fl$7069$sFQex)))))))))) (library-letrec*-identity 'g$flasin$6983$sFQex))) (g$flacos$6984$sFQex g$flacos$7113$sFQex ((case-lambda ((g$C$14335$sFQex) (g$C$14335$sFQex (case-lambda ((g$C$14233$sFQex g$fl$7070$sFQex) ((case-lambda ((g$J$14235$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14236$sFQex) (not (case-lambda ((g$T$14237$sFQex) (if g$T$14237$sFQex (g$assertion-violation$6456$sFQex g$J$14235$sFQex 'flacos '"not a flonum" g$fl$7070$sFQex) (void g$J$14235$sFQex)))) g$V$14236$sFQex))) g$fl$7070$sFQex))) (case-lambda (g$IGNORE$14234$sFQex (g$C$14233$sFQex (clr-call-internal 'system.math 'acos '() g$fl$7070$sFQex)))))))))) (library-letrec*-identity 'g$flacos$6984$sFQex))) (g$flatan$6985$sFQex g$flatan$7114$sFQex ((case-lambda ((g$C$14336$sFQex) (g$C$14336$sFQex (case-lambda ((g$C$14238$sFQex g$fl$7071$sFQex) (g$C$14238$sFQex (clr-call-internal 'system.math 'atan '() g$fl$7071$sFQex))) ((g$C$14238$sFQex g$fl1$7072$sFQex g$fl2$7073$sFQex) (g$C$14238$sFQex (clr-call-internal 'system.math 'atan2 '() g$fl1$7072$sFQex g$fl2$7073$sFQex))))))) (library-letrec*-identity 'g$flatan$6985$sFQex))) (g$fllog$6986$sFQex g$fllog$7115$sFQex ((case-lambda ((g$C$14337$sFQex) (g$C$14337$sFQex (case-lambda ((g$C$14239$sFQex g$fl$7074$sFQex) (g$C$14239$sFQex (clr-call-internal 'system.math 'log '() g$fl$7074$sFQex))) ((g$C$14239$sFQex g$fl1$7075$sFQex g$fl2$7076$sFQex) (g$C$14239$sFQex (clr-call-internal 'system.math 'log '() g$fl1$7075$sFQex g$fl2$7076$sFQex))))))) (library-letrec*-identity 'g$fllog$6986$sFQex))) (g$flsqrt$6987$sFQex g$flsqrt$7116$sFQex ((case-lambda ((g$C$14338$sFQex) (g$C$14338$sFQex (case-lambda ((g$C$14240$sFQex g$fl$7077$sFQex) ((case-lambda ((g$J$14242$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14243$sFQex) (not (case-lambda ((g$T$14244$sFQex) (if g$T$14244$sFQex (g$assertion-violation$6456$sFQex g$J$14242$sFQex 'flsqrt '"not a flonum" g$fl$7077$sFQex) (void g$J$14242$sFQex)))) g$V$14243$sFQex))) g$fl$7077$sFQex))) (case-lambda (g$IGNORE$14241$sFQex (g$C$14240$sFQex (clr-call-internal 'system.math 'sqrt '() g$fl$7077$sFQex)))))))))) (library-letrec*-identity 'g$flsqrt$6987$sFQex))) (g$flexp$6988$sFQex g$flexp$7117$sFQex ((case-lambda ((g$C$14339$sFQex) (g$C$14339$sFQex (case-lambda ((g$C$14245$sFQex g$fl$7078$sFQex) ((case-lambda ((g$J$14247$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14248$sFQex) (not (case-lambda ((g$T$14249$sFQex) (if g$T$14249$sFQex (g$assertion-violation$6456$sFQex g$J$14247$sFQex 'flexp '"not a flonum" g$fl$7078$sFQex) (void g$J$14247$sFQex)))) g$V$14248$sFQex))) g$fl$7078$sFQex))) (case-lambda (g$IGNORE$14246$sFQex (g$C$14245$sFQex (clr-call-internal 'system.math 'exp '() g$fl$7078$sFQex)))))))))) (library-letrec*-identity 'g$flexp$6988$sFQex))) (g$flexpt$6989$sFQex g$flexpt$7118$sFQex ((case-lambda ((g$C$14340$sFQex) (g$C$14340$sFQex (case-lambda ((g$C$14250$sFQex g$fl$7079$sFQex g$n$7080$sFQex) ((case-lambda ((g$J$14252$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14253$sFQex) (not (case-lambda ((g$T$14254$sFQex) (if g$T$14254$sFQex (g$assertion-violation$6456$sFQex g$J$14252$sFQex 'flexpt '"not a flonum" g$fl$7079$sFQex) (void g$J$14252$sFQex)))) g$V$14253$sFQex))) g$fl$7079$sFQex))) (case-lambda (g$IGNORE$14251$sFQex (g$C$14250$sFQex (clr-call-internal 'system.math 'pow '() g$fl$7079$sFQex g$n$7080$sFQex)))))))))) (library-letrec*-identity 'g$flexpt$6989$sFQex))) (g$flceiling$6990$sFQex g$flceiling$7119$sFQex ((case-lambda ((g$C$14341$sFQex) (g$C$14341$sFQex (case-lambda ((g$C$14255$sFQex g$fl$7081$sFQex) ((case-lambda ((g$J$14257$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14258$sFQex) (not (case-lambda ((g$T$14259$sFQex) (if g$T$14259$sFQex (g$assertion-violation$6456$sFQex g$J$14257$sFQex 'flceiling '"not a flonum" g$fl$7081$sFQex) (void g$J$14257$sFQex)))) g$V$14258$sFQex))) g$fl$7081$sFQex))) (case-lambda (g$IGNORE$14256$sFQex (g$C$14255$sFQex (clr-call-internal 'system.math '"ceiling(double)" '() g$fl$7081$sFQex)))))))))) (library-letrec*-identity 'g$flceiling$6990$sFQex))) (g$flfloor$6991$sFQex g$flfloor$7120$sFQex ((case-lambda ((g$C$14342$sFQex) (g$C$14342$sFQex (case-lambda ((g$C$14260$sFQex g$fl$7082$sFQex) ((case-lambda ((g$J$14262$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14263$sFQex) (not (case-lambda ((g$T$14264$sFQex) (if g$T$14264$sFQex (g$assertion-violation$6456$sFQex g$J$14262$sFQex 'flfloor '"not a flonum" g$fl$7082$sFQex) (void g$J$14262$sFQex)))) g$V$14263$sFQex))) g$fl$7082$sFQex))) (case-lambda (g$IGNORE$14261$sFQex (g$C$14260$sFQex (clr-call-internal 'system.math '"floor(double)" '() g$fl$7082$sFQex)))))))))) (library-letrec*-identity 'g$flfloor$6991$sFQex))) (g$fltruncate$6992$sFQex g$fltruncate$7121$sFQex ((case-lambda ((g$C$14343$sFQex) (g$C$14343$sFQex (case-lambda ((g$C$14265$sFQex g$fl$7083$sFQex) ((case-lambda ((g$J$14267$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14268$sFQex) (not (case-lambda ((g$T$14269$sFQex) (if g$T$14269$sFQex (g$assertion-violation$6456$sFQex g$J$14267$sFQex 'fltruncate '"not a flonum" g$fl$7083$sFQex) (void g$J$14267$sFQex)))) g$V$14268$sFQex))) g$fl$7083$sFQex))) (case-lambda (g$IGNORE$14266$sFQex (g$C$14265$sFQex (clr-call-internal 'system.math '"truncate(double)" '() g$fl$7083$sFQex)))))))))) (library-letrec*-identity 'g$fltruncate$6992$sFQex))) (g$flround$6993$sFQex g$flround$7122$sFQex ((case-lambda ((g$C$14344$sFQex) (g$C$14344$sFQex (case-lambda ((g$C$14270$sFQex g$fl$7084$sFQex) ((case-lambda ((g$J$14272$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14273$sFQex) (not (case-lambda ((g$T$14274$sFQex) (if g$T$14274$sFQex (g$assertion-violation$6456$sFQex g$J$14272$sFQex 'flround '"not a flonum" g$fl$7084$sFQex) (void g$J$14272$sFQex)))) g$V$14273$sFQex))) g$fl$7084$sFQex))) (case-lambda (g$IGNORE$14271$sFQex (g$C$14270$sFQex (clr-call-internal 'system.math '"round(double)" '() g$fl$7084$sFQex)))))))))) (library-letrec*-identity 'g$flround$6993$sFQex))) (g$flabs$6994$sFQex g$flabs$7123$sFQex ((case-lambda ((g$C$14345$sFQex) (g$C$14345$sFQex (case-lambda ((g$C$14275$sFQex g$fl$7085$sFQex) ((case-lambda ((g$J$14277$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14278$sFQex) (not (case-lambda ((g$T$14279$sFQex) (if g$T$14279$sFQex (g$assertion-violation$6456$sFQex g$J$14277$sFQex 'flabs '"not a flonum" g$fl$7085$sFQex) (void g$J$14277$sFQex)))) g$V$14278$sFQex))) g$fl$7085$sFQex))) (case-lambda (g$IGNORE$14276$sFQex (g$C$14275$sFQex (clr-call-internal 'system.math '"abs(double)" '() g$fl$7085$sFQex)))))))))) (library-letrec*-identity 'g$flabs$6994$sFQex))) (g$flpositive?$6995$sFQex g$flpositive?$7124$sFQex ((case-lambda ((g$C$14346$sFQex) (g$C$14346$sFQex (case-lambda ((g$C$14280$sFQex g$r$7086$sFQex) ((case-lambda ((g$J$14282$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14283$sFQex) (not (case-lambda ((g$T$14284$sFQex) (if g$T$14284$sFQex (g$assertion-violation$6456$sFQex g$J$14282$sFQex 'flpositive? '"not a flonum" g$r$7086$sFQex) (void g$J$14282$sFQex)))) g$V$14283$sFQex))) g$r$7086$sFQex))) (case-lambda (g$IGNORE$14281$sFQex (fl<? g$C$14280$sFQex '0.0 g$r$7086$sFQex))))))))) (library-letrec*-identity 'g$flpositive?$6995$sFQex))) (g$flnegative?$6996$sFQex g$flnegative?$7125$sFQex ((case-lambda ((g$C$14347$sFQex) (g$C$14347$sFQex (case-lambda ((g$C$14285$sFQex g$r$7087$sFQex) ((case-lambda ((g$J$14287$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14288$sFQex) (not (case-lambda ((g$T$14289$sFQex) (if g$T$14289$sFQex (g$assertion-violation$6456$sFQex g$J$14287$sFQex 'flnegative? '"not a flonum" g$r$7087$sFQex) (void g$J$14287$sFQex)))) g$V$14288$sFQex))) g$r$7087$sFQex))) (case-lambda (g$IGNORE$14286$sFQex (fl>? g$C$14285$sFQex '0.0 g$r$7087$sFQex))))))))) (library-letrec*-identity 'g$flnegative?$6996$sFQex))) (g$flzero?$6997$sFQex g$flzero?$7126$sFQex ((case-lambda ((g$C$14348$sFQex) (g$C$14348$sFQex (case-lambda ((g$C$14290$sFQex g$r$7088$sFQex) ((case-lambda ((g$J$14292$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14293$sFQex) (not (case-lambda ((g$T$14294$sFQex) (if g$T$14294$sFQex (g$assertion-violation$6456$sFQex g$J$14292$sFQex 'flzero? '"not a flonum" g$r$7088$sFQex) (void g$J$14292$sFQex)))) g$V$14293$sFQex))) g$r$7088$sFQex))) (case-lambda (g$IGNORE$14291$sFQex (fl=? g$C$14290$sFQex '0.0 g$r$7088$sFQex))))))))) (library-letrec*-identity 'g$flzero?$6997$sFQex))) (g$fleven?$6998$sFQex g$fleven?$7127$sFQex ((case-lambda ((g$C$14349$sFQex) (g$C$14349$sFQex (case-lambda ((g$C$14295$sFQex g$n$7089$sFQex) ((case-lambda ((g$J$14298$sFQex) (integer-valued? (case-lambda ((g$V$14299$sFQex) (not (case-lambda ((g$T$14300$sFQex) (if g$T$14300$sFQex (g$assertion-violation$6456$sFQex g$J$14298$sFQex 'fleven? '"not integer valued" g$n$7089$sFQex) (void g$J$14298$sFQex)))) g$V$14299$sFQex))) g$n$7089$sFQex))) (case-lambda (g$IGNORE$14296$sFQex (g$flmod$6974$sFQex (case-lambda ((g$V$14297$sFQex) (fl=? g$C$14295$sFQex '0.0 g$V$14297$sFQex))) g$n$7089$sFQex '2.0))))))))) (library-letrec*-identity 'g$fleven?$6998$sFQex))) (g$flodd?$6999$sFQex g$flodd?$7128$sFQex ((case-lambda ((g$C$14350$sFQex) (g$C$14350$sFQex (case-lambda ((g$C$14301$sFQex g$n$7090$sFQex) ((case-lambda ((g$J$14304$sFQex) (integer-valued? (case-lambda ((g$V$14305$sFQex) (not (case-lambda ((g$T$14306$sFQex) (if g$T$14306$sFQex (g$assertion-violation$6456$sFQex g$J$14304$sFQex 'flodd? '"not integer valued" g$n$7090$sFQex) (void g$J$14304$sFQex)))) g$V$14305$sFQex))) g$n$7090$sFQex))) (case-lambda (g$IGNORE$14302$sFQex (g$flmod$6974$sFQex (case-lambda ((g$V$14303$sFQex) (fl=? g$C$14301$sFQex '1.0 g$V$14303$sFQex))) g$n$7090$sFQex '2.0))))))))) (library-letrec*-identity 'g$flodd?$6999$sFQex))) (g$flmax$7000$sFQex g$flmax$7129$sFQex ((case-lambda ((g$C$14351$sFQex) (g$C$14351$sFQex (case-lambda ((g$C$14309$sFQex g$a$7091$sFQex . g$rest$7092$sFQex) ((case-lambda ((g$J$14311$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14312$sFQex) (not (case-lambda ((g$T$14313$sFQex) (if g$T$14313$sFQex (g$assertion-violation$6456$sFQex g$J$14311$sFQex 'flmax '"not a flonum" g$a$7091$sFQex) (void g$J$14311$sFQex)))) g$V$14312$sFQex))) g$a$7091$sFQex))) (case-lambda (g$IGNORE$14310$sFQex (g$fold-left$5683$sFQex g$C$14309$sFQex (case-lambda ((g$C$14307$sFQex g$a$7093$sFQex g$b$7094$sFQex) (fl<? (case-lambda ((g$T$14308$sFQex) (if g$T$14308$sFQex (g$C$14307$sFQex g$b$7094$sFQex) (g$C$14307$sFQex g$a$7093$sFQex)))) g$a$7093$sFQex g$b$7094$sFQex))) g$a$7091$sFQex g$rest$7092$sFQex))))))))) (library-letrec*-identity 'g$flmax$7000$sFQex))) (g$flmin$7001$sFQex g$flmin$7130$sFQex ((case-lambda ((g$C$14352$sFQex) (g$C$14352$sFQex (case-lambda ((g$C$14316$sFQex g$a$7095$sFQex . g$rest$7096$sFQex) ((case-lambda ((g$J$14318$sFQex) (g$flonum?$6172$sFQex (case-lambda ((g$V$14319$sFQex) (not (case-lambda ((g$T$14320$sFQex) (if g$T$14320$sFQex (g$assertion-violation$6456$sFQex g$J$14318$sFQex 'flmin '"not a flonum" g$a$7095$sFQex) (void g$J$14318$sFQex)))) g$V$14319$sFQex))) g$a$7095$sFQex))) (case-lambda (g$IGNORE$14317$sFQex (g$fold-left$5683$sFQex g$C$14316$sFQex (case-lambda ((g$C$14314$sFQex g$a$7097$sFQex g$b$7098$sFQex) (fl>? (case-lambda ((g$T$14315$sFQex) (if g$T$14315$sFQex (g$C$14314$sFQex g$b$7098$sFQex) (g$C$14314$sFQex g$a$7097$sFQex)))) g$a$7097$sFQex g$b$7098$sFQex))) g$a$7095$sFQex g$rest$7096$sFQex))))))))) (library-letrec*-identity 'g$flmin$7001$sFQex))) (g$8186$7002$sFQex g$8186$7131$sFQex ((case-lambda ((g$C$14353$sFQex) (make-record-type-descriptor g$C$14353$sFQex '&no-infinities &implementation-restriction-rtd 'g$8189$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8186$7002$sFQex))) (g$8188$7003$sFQex g$8188$7132$sFQex ((case-lambda ((g$C$14354$sFQex) (g$C$14354$sFQex '#f))) (library-letrec*-identity 'g$8188$7003$sFQex))) (g$8187$7004$sFQex g$8187$7133$sFQex ((case-lambda ((g$C$14355$sFQex) (make-record-constructor-descriptor g$C$14355$sFQex g$8186$7002$sFQex &implementation-restriction-rcd g$8188$7003$sFQex))) (library-letrec*-identity 'g$8187$7004$sFQex))) (g$8185$7005$sFQex g$8185$7134$sFQex ((case-lambda ((g$C$14356$sFQex) (record-predicate g$C$14356$sFQex g$8186$7002$sFQex))) (library-letrec*-identity 'g$8185$7005$sFQex))) (g$make-no-infinities-violation$7006$sFQex g$make-no-infinities-violation$7135$sFQex ((case-lambda ((g$C$14357$sFQex) (record-constructor g$C$14357$sFQex g$8187$7004$sFQex))) (library-letrec*-identity 'g$make-no-infinities-violation$7006$sFQex))) (g$no-infinities-violation?$7007$sFQex g$no-infinities-violation?$7136$sFQex ((case-lambda ((g$C$14358$sFQex) (condition-predicate g$C$14358$sFQex g$8186$7002$sFQex))) (library-letrec*-identity 'g$no-infinities-violation?$7007$sFQex))) (g$8200$7008$sFQex g$8200$7137$sFQex ((case-lambda ((g$C$14359$sFQex) (make-record-type-descriptor g$C$14359$sFQex '&no-nans &implementation-restriction-rtd 'g$8203$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8200$7008$sFQex))) (g$8202$7009$sFQex g$8202$7138$sFQex ((case-lambda ((g$C$14360$sFQex) (g$C$14360$sFQex '#f))) (library-letrec*-identity 'g$8202$7009$sFQex))) (g$8201$7010$sFQex g$8201$7139$sFQex ((case-lambda ((g$C$14361$sFQex) (make-record-constructor-descriptor g$C$14361$sFQex g$8200$7008$sFQex &implementation-restriction-rcd g$8202$7009$sFQex))) (library-letrec*-identity 'g$8201$7010$sFQex))) (g$8199$7011$sFQex g$8199$7140$sFQex ((case-lambda ((g$C$14362$sFQex) (record-predicate g$C$14362$sFQex g$8200$7008$sFQex))) (library-letrec*-identity 'g$8199$7011$sFQex))) (g$make-no-nans-violation$7012$sFQex g$make-no-nans-violation$7141$sFQex ((case-lambda ((g$C$14363$sFQex) (record-constructor g$C$14363$sFQex g$8201$7010$sFQex))) (library-letrec*-identity 'g$make-no-nans-violation$7012$sFQex))) (g$no-nans-violation?$7013$sFQex g$no-nans-violation?$7142$sFQex ((case-lambda ((g$C$14364$sFQex) (condition-predicate g$C$14364$sFQex g$8200$7008$sFQex))) (library-letrec*-identity 'g$no-nans-violation?$7013$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme io conditions) ((g$8288$7143$sFQex g$8288$7223$sFQex ((case-lambda ((g$C$14365$sFQex) (make-record-type-descriptor g$C$14365$sFQex '&i/o &error-rtd 'g$8291$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8288$7143$sFQex))) (g$8290$7144$sFQex g$8290$7224$sFQex ((case-lambda ((g$C$14366$sFQex) (g$C$14366$sFQex '#f))) (library-letrec*-identity 'g$8290$7144$sFQex))) (g$8289$7145$sFQex g$8289$7225$sFQex ((case-lambda ((g$C$14367$sFQex) (make-record-constructor-descriptor g$C$14367$sFQex g$8288$7143$sFQex &error-rcd g$8290$7144$sFQex))) (library-letrec*-identity 'g$8289$7145$sFQex))) (g$8287$7146$sFQex g$8287$7226$sFQex ((case-lambda ((g$C$14368$sFQex) (record-predicate g$C$14368$sFQex g$8288$7143$sFQex))) (library-letrec*-identity 'g$8287$7146$sFQex))) (g$make-i/o-error$7147$sFQex g$make-i/o-error$7227$sFQex ((case-lambda ((g$C$14369$sFQex) (record-constructor g$C$14369$sFQex g$8289$7145$sFQex))) (library-letrec*-identity 'g$make-i/o-error$7147$sFQex))) (g$i/o-error?$7148$sFQex g$i/o-error?$7228$sFQex ((case-lambda ((g$C$14370$sFQex) (condition-predicate g$C$14370$sFQex g$8288$7143$sFQex))) (library-letrec*-identity 'g$i/o-error?$7148$sFQex))) (g$8302$7149$sFQex g$8302$7229$sFQex ((case-lambda ((g$C$14371$sFQex) (make-record-type-descriptor g$C$14371$sFQex '&i/o-read g$8288$7143$sFQex 'g$8305$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8302$7149$sFQex))) (g$8304$7150$sFQex g$8304$7230$sFQex ((case-lambda ((g$C$14372$sFQex) (g$C$14372$sFQex '#f))) (library-letrec*-identity 'g$8304$7150$sFQex))) (g$8303$7151$sFQex g$8303$7231$sFQex ((case-lambda ((g$C$14373$sFQex) (make-record-constructor-descriptor g$C$14373$sFQex g$8302$7149$sFQex g$8289$7145$sFQex g$8304$7150$sFQex))) (library-letrec*-identity 'g$8303$7151$sFQex))) (g$8301$7152$sFQex g$8301$7232$sFQex ((case-lambda ((g$C$14374$sFQex) (record-predicate g$C$14374$sFQex g$8302$7149$sFQex))) (library-letrec*-identity 'g$8301$7152$sFQex))) (g$make-i/o-read-error$7153$sFQex g$make-i/o-read-error$7233$sFQex ((case-lambda ((g$C$14375$sFQex) (record-constructor g$C$14375$sFQex g$8303$7151$sFQex))) (library-letrec*-identity 'g$make-i/o-read-error$7153$sFQex))) (g$i/o-read-error?$7154$sFQex g$i/o-read-error?$7234$sFQex ((case-lambda ((g$C$14376$sFQex) (condition-predicate g$C$14376$sFQex g$8302$7149$sFQex))) (library-letrec*-identity 'g$i/o-read-error?$7154$sFQex))) (g$8316$7155$sFQex g$8316$7235$sFQex ((case-lambda ((g$C$14377$sFQex) (make-record-type-descriptor g$C$14377$sFQex '&i/o-write g$8288$7143$sFQex 'g$8319$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8316$7155$sFQex))) (g$8318$7156$sFQex g$8318$7236$sFQex ((case-lambda ((g$C$14378$sFQex) (g$C$14378$sFQex '#f))) (library-letrec*-identity 'g$8318$7156$sFQex))) (g$8317$7157$sFQex g$8317$7237$sFQex ((case-lambda ((g$C$14379$sFQex) (make-record-constructor-descriptor g$C$14379$sFQex g$8316$7155$sFQex g$8289$7145$sFQex g$8318$7156$sFQex))) (library-letrec*-identity 'g$8317$7157$sFQex))) (g$8315$7158$sFQex g$8315$7238$sFQex ((case-lambda ((g$C$14380$sFQex) (record-predicate g$C$14380$sFQex g$8316$7155$sFQex))) (library-letrec*-identity 'g$8315$7158$sFQex))) (g$make-i/o-write-error$7159$sFQex g$make-i/o-write-error$7239$sFQex ((case-lambda ((g$C$14381$sFQex) (record-constructor g$C$14381$sFQex g$8317$7157$sFQex))) (library-letrec*-identity 'g$make-i/o-write-error$7159$sFQex))) (g$i/o-write-error?$7160$sFQex g$i/o-write-error?$7240$sFQex ((case-lambda ((g$C$14382$sFQex) (condition-predicate g$C$14382$sFQex g$8316$7155$sFQex))) (library-letrec*-identity 'g$i/o-write-error?$7160$sFQex))) (g$8331$7161$sFQex g$8331$7241$sFQex ((case-lambda ((g$C$14383$sFQex) (make-record-type-descriptor g$C$14383$sFQex '&i/o-invalid-position g$8288$7143$sFQex 'g$8334$sFQex '#f '#f '#((immutable position))))) (library-letrec*-identity 'g$8331$7161$sFQex))) (g$8333$7162$sFQex g$8333$7242$sFQex ((case-lambda ((g$C$14384$sFQex) (g$C$14384$sFQex '#f))) (library-letrec*-identity 'g$8333$7162$sFQex))) (g$8332$7163$sFQex g$8332$7243$sFQex ((case-lambda ((g$C$14385$sFQex) (make-record-constructor-descriptor g$C$14385$sFQex g$8331$7161$sFQex g$8289$7145$sFQex g$8333$7162$sFQex))) (library-letrec*-identity 'g$8332$7163$sFQex))) (g$8330$7164$sFQex g$8330$7244$sFQex ((case-lambda ((g$C$14386$sFQex) (record-predicate g$C$14386$sFQex g$8331$7161$sFQex))) (library-letrec*-identity 'g$8330$7164$sFQex))) (g$make-i/o-invalid-position-error$7165$sFQex g$make-i/o-invalid-position-error$7245$sFQex ((case-lambda ((g$C$14387$sFQex) (record-constructor g$C$14387$sFQex g$8332$7163$sFQex))) (library-letrec*-identity 'g$make-i/o-invalid-position-error$7165$sFQex))) (g$8329$7166$sFQex g$8329$7246$sFQex ((case-lambda ((g$C$14388$sFQex) (record-accessor g$C$14388$sFQex g$8331$7161$sFQex '0))) (library-letrec*-identity 'g$8329$7166$sFQex))) (g$i/o-invalid-position-error?$7167$sFQex g$i/o-invalid-position-error?$7247$sFQex ((case-lambda ((g$C$14389$sFQex) (condition-predicate g$C$14389$sFQex g$8331$7161$sFQex))) (library-letrec*-identity 'g$i/o-invalid-position-error?$7167$sFQex))) (g$i/o-error-position$7168$sFQex g$i/o-error-position$7248$sFQex ((case-lambda ((g$C$14390$sFQex) (condition-accessor g$C$14390$sFQex g$8331$7161$sFQex g$8329$7166$sFQex))) (library-letrec*-identity 'g$i/o-error-position$7168$sFQex))) (g$8348$7169$sFQex g$8348$7249$sFQex ((case-lambda ((g$C$14391$sFQex) (make-record-type-descriptor g$C$14391$sFQex '&i/o-filename g$8288$7143$sFQex 'g$8351$sFQex '#f '#f '#((immutable filename))))) (library-letrec*-identity 'g$8348$7169$sFQex))) (g$8350$7170$sFQex g$8350$7250$sFQex ((case-lambda ((g$C$14392$sFQex) (g$C$14392$sFQex '#f))) (library-letrec*-identity 'g$8350$7170$sFQex))) (g$8349$7171$sFQex g$8349$7251$sFQex ((case-lambda ((g$C$14393$sFQex) (make-record-constructor-descriptor g$C$14393$sFQex g$8348$7169$sFQex g$8289$7145$sFQex g$8350$7170$sFQex))) (library-letrec*-identity 'g$8349$7171$sFQex))) (g$8347$7172$sFQex g$8347$7252$sFQex ((case-lambda ((g$C$14394$sFQex) (record-predicate g$C$14394$sFQex g$8348$7169$sFQex))) (library-letrec*-identity 'g$8347$7172$sFQex))) (g$make-i/o-filename-error$7173$sFQex g$make-i/o-filename-error$7253$sFQex ((case-lambda ((g$C$14395$sFQex) (record-constructor g$C$14395$sFQex g$8349$7171$sFQex))) (library-letrec*-identity 'g$make-i/o-filename-error$7173$sFQex))) (g$8346$7174$sFQex g$8346$7254$sFQex ((case-lambda ((g$C$14396$sFQex) (record-accessor g$C$14396$sFQex g$8348$7169$sFQex '0))) (library-letrec*-identity 'g$8346$7174$sFQex))) (g$i/o-filename-error?$7175$sFQex g$i/o-filename-error?$7255$sFQex ((case-lambda ((g$C$14397$sFQex) (condition-predicate g$C$14397$sFQex g$8348$7169$sFQex))) (library-letrec*-identity 'g$i/o-filename-error?$7175$sFQex))) (g$i/o-error-filename$7176$sFQex g$i/o-error-filename$7256$sFQex ((case-lambda ((g$C$14398$sFQex) (condition-accessor g$C$14398$sFQex g$8348$7169$sFQex g$8346$7174$sFQex))) (library-letrec*-identity 'g$i/o-error-filename$7176$sFQex))) (g$8364$7177$sFQex g$8364$7257$sFQex ((case-lambda ((g$C$14399$sFQex) (make-record-type-descriptor g$C$14399$sFQex '&i/o-file-protection g$8348$7169$sFQex 'g$8367$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8364$7177$sFQex))) (g$8366$7178$sFQex g$8366$7258$sFQex ((case-lambda ((g$C$14400$sFQex) (g$C$14400$sFQex '#f))) (library-letrec*-identity 'g$8366$7178$sFQex))) (g$8365$7179$sFQex g$8365$7259$sFQex ((case-lambda ((g$C$14401$sFQex) (make-record-constructor-descriptor g$C$14401$sFQex g$8364$7177$sFQex g$8349$7171$sFQex g$8366$7178$sFQex))) (library-letrec*-identity 'g$8365$7179$sFQex))) (g$8363$7180$sFQex g$8363$7260$sFQex ((case-lambda ((g$C$14402$sFQex) (record-predicate g$C$14402$sFQex g$8364$7177$sFQex))) (library-letrec*-identity 'g$8363$7180$sFQex))) (g$make-i/o-file-protection-error$7181$sFQex g$make-i/o-file-protection-error$7261$sFQex ((case-lambda ((g$C$14403$sFQex) (record-constructor g$C$14403$sFQex g$8365$7179$sFQex))) (library-letrec*-identity 'g$make-i/o-file-protection-error$7181$sFQex))) (g$i/o-file-protection-error?$7182$sFQex g$i/o-file-protection-error?$7262$sFQex ((case-lambda ((g$C$14404$sFQex) (condition-predicate g$C$14404$sFQex g$8364$7177$sFQex))) (library-letrec*-identity 'g$i/o-file-protection-error?$7182$sFQex))) (g$8378$7183$sFQex g$8378$7263$sFQex ((case-lambda ((g$C$14405$sFQex) (make-record-type-descriptor g$C$14405$sFQex '&i/o-file-is-read-only g$8364$7177$sFQex 'g$8381$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8378$7183$sFQex))) (g$8380$7184$sFQex g$8380$7264$sFQex ((case-lambda ((g$C$14406$sFQex) (g$C$14406$sFQex '#f))) (library-letrec*-identity 'g$8380$7184$sFQex))) (g$8379$7185$sFQex g$8379$7265$sFQex ((case-lambda ((g$C$14407$sFQex) (make-record-constructor-descriptor g$C$14407$sFQex g$8378$7183$sFQex g$8365$7179$sFQex g$8380$7184$sFQex))) (library-letrec*-identity 'g$8379$7185$sFQex))) (g$8377$7186$sFQex g$8377$7266$sFQex ((case-lambda ((g$C$14408$sFQex) (record-predicate g$C$14408$sFQex g$8378$7183$sFQex))) (library-letrec*-identity 'g$8377$7186$sFQex))) (g$make-i/o-file-is-read-only-error$7187$sFQex g$make-i/o-file-is-read-only-error$7267$sFQex ((case-lambda ((g$C$14409$sFQex) (record-constructor g$C$14409$sFQex g$8379$7185$sFQex))) (library-letrec*-identity 'g$make-i/o-file-is-read-only-error$7187$sFQex))) (g$i/o-file-is-read-only-error?$7188$sFQex g$i/o-file-is-read-only-error?$7268$sFQex ((case-lambda ((g$C$14410$sFQex) (condition-predicate g$C$14410$sFQex g$8378$7183$sFQex))) (library-letrec*-identity 'g$i/o-file-is-read-only-error?$7188$sFQex))) (g$8392$7189$sFQex g$8392$7269$sFQex ((case-lambda ((g$C$14411$sFQex) (make-record-type-descriptor g$C$14411$sFQex '&i/o-file-already-exists g$8348$7169$sFQex 'g$8395$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8392$7189$sFQex))) (g$8394$7190$sFQex g$8394$7270$sFQex ((case-lambda ((g$C$14412$sFQex) (g$C$14412$sFQex '#f))) (library-letrec*-identity 'g$8394$7190$sFQex))) (g$8393$7191$sFQex g$8393$7271$sFQex ((case-lambda ((g$C$14413$sFQex) (make-record-constructor-descriptor g$C$14413$sFQex g$8392$7189$sFQex g$8349$7171$sFQex g$8394$7190$sFQex))) (library-letrec*-identity 'g$8393$7191$sFQex))) (g$8391$7192$sFQex g$8391$7272$sFQex ((case-lambda ((g$C$14414$sFQex) (record-predicate g$C$14414$sFQex g$8392$7189$sFQex))) (library-letrec*-identity 'g$8391$7192$sFQex))) (g$make-i/o-file-already-exists-error$7193$sFQex g$make-i/o-file-already-exists-error$7273$sFQex ((case-lambda ((g$C$14415$sFQex) (record-constructor g$C$14415$sFQex g$8393$7191$sFQex))) (library-letrec*-identity 'g$make-i/o-file-already-exists-error$7193$sFQex))) (g$i/o-file-already-exists-error?$7194$sFQex g$i/o-file-already-exists-error?$7274$sFQex ((case-lambda ((g$C$14416$sFQex) (condition-predicate g$C$14416$sFQex g$8392$7189$sFQex))) (library-letrec*-identity 'g$i/o-file-already-exists-error?$7194$sFQex))) (g$8406$7195$sFQex g$8406$7275$sFQex ((case-lambda ((g$C$14417$sFQex) (make-record-type-descriptor g$C$14417$sFQex '&i/o-file-does-not-exist g$8348$7169$sFQex 'g$8409$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8406$7195$sFQex))) (g$8408$7196$sFQex g$8408$7276$sFQex ((case-lambda ((g$C$14418$sFQex) (g$C$14418$sFQex '#f))) (library-letrec*-identity 'g$8408$7196$sFQex))) (g$8407$7197$sFQex g$8407$7277$sFQex ((case-lambda ((g$C$14419$sFQex) (make-record-constructor-descriptor g$C$14419$sFQex g$8406$7195$sFQex g$8349$7171$sFQex g$8408$7196$sFQex))) (library-letrec*-identity 'g$8407$7197$sFQex))) (g$8405$7198$sFQex g$8405$7278$sFQex ((case-lambda ((g$C$14420$sFQex) (record-predicate g$C$14420$sFQex g$8406$7195$sFQex))) (library-letrec*-identity 'g$8405$7198$sFQex))) (g$make-i/o-file-does-not-exist-error$7199$sFQex g$make-i/o-file-does-not-exist-error$7279$sFQex ((case-lambda ((g$C$14421$sFQex) (record-constructor g$C$14421$sFQex g$8407$7197$sFQex))) (library-letrec*-identity 'g$make-i/o-file-does-not-exist-error$7199$sFQex))) (g$i/o-file-does-not-exist-error?$7200$sFQex g$i/o-file-does-not-exist-error?$7280$sFQex ((case-lambda ((g$C$14422$sFQex) (condition-predicate g$C$14422$sFQex g$8406$7195$sFQex))) (library-letrec*-identity 'g$i/o-file-does-not-exist-error?$7200$sFQex))) (g$8421$7201$sFQex g$8421$7281$sFQex ((case-lambda ((g$C$14423$sFQex) (make-record-type-descriptor g$C$14423$sFQex '&i/o-port g$8288$7143$sFQex 'g$8424$sFQex '#f '#f '#((immutable port))))) (library-letrec*-identity 'g$8421$7201$sFQex))) (g$8423$7202$sFQex g$8423$7282$sFQex ((case-lambda ((g$C$14424$sFQex) (g$C$14424$sFQex '#f))) (library-letrec*-identity 'g$8423$7202$sFQex))) (g$8422$7203$sFQex g$8422$7283$sFQex ((case-lambda ((g$C$14425$sFQex) (make-record-constructor-descriptor g$C$14425$sFQex g$8421$7201$sFQex g$8289$7145$sFQex g$8423$7202$sFQex))) (library-letrec*-identity 'g$8422$7203$sFQex))) (g$8420$7204$sFQex g$8420$7284$sFQex ((case-lambda ((g$C$14426$sFQex) (record-predicate g$C$14426$sFQex g$8421$7201$sFQex))) (library-letrec*-identity 'g$8420$7204$sFQex))) (g$make-i/o-port-error$7205$sFQex g$make-i/o-port-error$7285$sFQex ((case-lambda ((g$C$14427$sFQex) (record-constructor g$C$14427$sFQex g$8422$7203$sFQex))) (library-letrec*-identity 'g$make-i/o-port-error$7205$sFQex))) (g$8419$7206$sFQex g$8419$7286$sFQex ((case-lambda ((g$C$14428$sFQex) (record-accessor g$C$14428$sFQex g$8421$7201$sFQex '0))) (library-letrec*-identity 'g$8419$7206$sFQex))) (g$i/o-port-error?$7207$sFQex g$i/o-port-error?$7287$sFQex ((case-lambda ((g$C$14429$sFQex) (condition-predicate g$C$14429$sFQex g$8421$7201$sFQex))) (library-letrec*-identity 'g$i/o-port-error?$7207$sFQex))) (g$i/o-error-port$7208$sFQex g$i/o-error-port$7288$sFQex ((case-lambda ((g$C$14430$sFQex) (condition-accessor g$C$14430$sFQex g$8421$7201$sFQex g$8419$7206$sFQex))) (library-letrec*-identity 'g$i/o-error-port$7208$sFQex))) (g$8437$7209$sFQex g$8437$7289$sFQex ((case-lambda ((g$C$14431$sFQex) (make-record-type-descriptor g$C$14431$sFQex '&i/o-decoding g$8421$7201$sFQex 'g$8440$sFQex '#f '#f '#()))) (library-letrec*-identity 'g$8437$7209$sFQex))) (g$8439$7210$sFQex g$8439$7290$sFQex ((case-lambda ((g$C$14432$sFQex) (g$C$14432$sFQex '#f))) (library-letrec*-identity 'g$8439$7210$sFQex))) (g$8438$7211$sFQex g$8438$7291$sFQex ((case-lambda ((g$C$14433$sFQex) (make-record-constructor-descriptor g$C$14433$sFQex g$8437$7209$sFQex g$8422$7203$sFQex g$8439$7210$sFQex))) (library-letrec*-identity 'g$8438$7211$sFQex))) (g$8436$7212$sFQex g$8436$7292$sFQex ((case-lambda ((g$C$14434$sFQex) (record-predicate g$C$14434$sFQex g$8437$7209$sFQex))) (library-letrec*-identity 'g$8436$7212$sFQex))) (g$make-i/o-decoding-error$7213$sFQex g$make-i/o-decoding-error$7293$sFQex ((case-lambda ((g$C$14435$sFQex) (record-constructor g$C$14435$sFQex g$8438$7211$sFQex))) (library-letrec*-identity 'g$make-i/o-decoding-error$7213$sFQex))) (g$i/o-decoding-error?$7214$sFQex g$i/o-decoding-error?$7294$sFQex ((case-lambda ((g$C$14436$sFQex) (condition-predicate g$C$14436$sFQex g$8437$7209$sFQex))) (library-letrec*-identity 'g$i/o-decoding-error?$7214$sFQex))) (g$8452$7215$sFQex g$8452$7295$sFQex ((case-lambda ((g$C$14437$sFQex) (make-record-type-descriptor g$C$14437$sFQex '&i/o-encoding g$8421$7201$sFQex 'g$8455$sFQex '#f '#f '#((immutable char))))) (library-letrec*-identity 'g$8452$7215$sFQex))) (g$8454$7216$sFQex g$8454$7296$sFQex ((case-lambda ((g$C$14438$sFQex) (g$C$14438$sFQex '#f))) (library-letrec*-identity 'g$8454$7216$sFQex))) (g$8453$7217$sFQex g$8453$7297$sFQex ((case-lambda ((g$C$14439$sFQex) (make-record-constructor-descriptor g$C$14439$sFQex g$8452$7215$sFQex g$8422$7203$sFQex g$8454$7216$sFQex))) (library-letrec*-identity 'g$8453$7217$sFQex))) (g$8451$7218$sFQex g$8451$7298$sFQex ((case-lambda ((g$C$14440$sFQex) (record-predicate g$C$14440$sFQex g$8452$7215$sFQex))) (library-letrec*-identity 'g$8451$7218$sFQex))) (g$make-i/o-encoding-error$7219$sFQex g$make-i/o-encoding-error$7299$sFQex ((case-lambda ((g$C$14441$sFQex) (record-constructor g$C$14441$sFQex g$8453$7217$sFQex))) (library-letrec*-identity 'g$make-i/o-encoding-error$7219$sFQex))) (g$8450$7220$sFQex g$8450$7300$sFQex ((case-lambda ((g$C$14442$sFQex) (record-accessor g$C$14442$sFQex g$8452$7215$sFQex '0))) (library-letrec*-identity 'g$8450$7220$sFQex))) (g$i/o-encoding-error?$7221$sFQex g$i/o-encoding-error?$7301$sFQex ((case-lambda ((g$C$14443$sFQex) (condition-predicate g$C$14443$sFQex g$8452$7215$sFQex))) (library-letrec*-identity 'g$i/o-encoding-error?$7221$sFQex))) (g$i/o-encoding-error-char$7222$sFQex g$i/o-encoding-error-char$7302$sFQex ((case-lambda ((g$C$14444$sFQex) (condition-accessor g$C$14444$sFQex g$8452$7215$sFQex g$8450$7220$sFQex))) (library-letrec*-identity 'g$i/o-encoding-error-char$7222$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme io ports) ((g$using$7304$sFQex g$using$7324$sFQex ((case-lambda ((g$C$14463$sFQex) (g$C$14463$sFQex (clr-using-internal 'ironscheme.runtime)))) (library-letrec*-identity 'g$using$7304$sFQex))) (g$put-datum$7305$sFQex g$put-datum$7325$sFQex ((case-lambda ((g$C$14464$sFQex) (g$C$14464$sFQex (case-lambda ((g$C$14445$sFQex g$p$7313$sFQex g$datum$7314$sFQex) (write g$C$14445$sFQex g$datum$7314$sFQex g$p$7313$sFQex)))))) (library-letrec*-identity 'g$put-datum$7305$sFQex))) (g$get-datum$7306$sFQex g$get-datum$7326$sFQex ((case-lambda ((g$C$14465$sFQex) (g$C$14465$sFQex read))) (library-letrec*-identity 'g$get-datum$7306$sFQex))) (g$get-output-string$7307$sFQex g$get-output-string$7327$sFQex ((case-lambda ((g$C$14466$sFQex) (g$C$14466$sFQex (case-lambda ((g$C$14446$sFQex g$port$7315$sFQex) (g$C$14446$sFQex (clr-call-internal 'ironscheme.runtime.stringwriter 'getbuffer g$port$7315$sFQex))))))) (library-letrec*-identity 'g$get-output-string$7307$sFQex))) (g$open-output-string$7308$sFQex g$open-output-string$7328$sFQex ((case-lambda ((g$C$14467$sFQex) (g$C$14467$sFQex (case-lambda ((g$C$14447$sFQex) (g$C$14447$sFQex (clr-new-internal 'ironscheme.runtime.stringwriter))))))) (library-letrec*-identity 'g$open-output-string$7308$sFQex))) (g$open-string-output-port$7309$sFQex g$open-string-output-port$7329$sFQex ((case-lambda ((g$C$14468$sFQex) (g$C$14468$sFQex (case-lambda ((g$C$14450$sFQex) (g$open-output-string$7308$sFQex (case-lambda ((g$V$14451$sFQex) ((case-lambda ((g$C$14449$sFQex g$p$7316$sFQex) (values g$C$14449$sFQex g$p$7316$sFQex (case-lambda ((g$C$14448$sFQex) (g$get-output-string$7307$sFQex g$C$14448$sFQex g$p$7316$sFQex)))))) g$C$14450$sFQex g$V$14451$sFQex))))))))) (library-letrec*-identity 'g$open-string-output-port$7309$sFQex))) (g$port?$7310$sFQex g$port?$7330$sFQex ((case-lambda ((g$C$14469$sFQex) (g$C$14469$sFQex (case-lambda ((g$C$14453$sFQex g$obj$7317$sFQex) (textual-port? (case-lambda ((g$V$14454$sFQex) ((case-lambda ((g$C$14452$sFQex g$t$7318$sFQex) (if g$t$7318$sFQex (g$C$14452$sFQex g$t$7318$sFQex) (binary-port? g$C$14452$sFQex g$obj$7317$sFQex)))) g$C$14453$sFQex g$V$14454$sFQex))) g$obj$7317$sFQex)))))) (library-letrec*-identity 'g$port?$7310$sFQex))) (g$call-with-string-output-port$7311$sFQex g$call-with-string-output-port$7331$sFQex ((case-lambda ((g$C$14470$sFQex) (g$C$14470$sFQex (case-lambda ((g$C$14457$sFQex g$proc$7319$sFQex) (g$open-output-string$7308$sFQex (case-lambda ((g$V$14458$sFQex) ((case-lambda ((g$C$14455$sFQex g$p$7320$sFQex) (g$call-with-port$7312$sFQex (case-lambda (g$IGNORE$14456$sFQex (g$get-output-string$7307$sFQex g$C$14455$sFQex g$p$7320$sFQex))) g$p$7320$sFQex g$proc$7319$sFQex))) g$C$14457$sFQex g$V$14458$sFQex))))))))) (library-letrec*-identity 'g$call-with-string-output-port$7311$sFQex))) (g$call-with-port$7312$sFQex g$call-with-port$7332$sFQex ((case-lambda ((g$C$14471$sFQex) (g$C$14471$sFQex (case-lambda ((g$C$14461$sFQex g$port$7321$sFQex g$proc$7322$sFQex) (g$proc$7322$sFQex (case-lambda ((g$V$14462$sFQex) ((case-lambda ((g$C$14459$sFQex g$r$7323$sFQex) (close-port (case-lambda (g$IGNORE$14460$sFQex (g$C$14459$sFQex g$r$7323$sFQex))) g$port$7321$sFQex))) g$C$14461$sFQex g$V$14462$sFQex))) g$port$7321$sFQex)))))) (library-letrec*-identity 'g$call-with-port$7312$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme io simple) ((g$peek-char$7333$sFQex g$peek-char$7375$sFQex ((case-lambda ((g$C$14518$sFQex) (g$C$14518$sFQex (case-lambda ((g$C$14472$sFQex) (current-input-port (case-lambda ((g$V$14473$sFQex) (g$peek-char$7333$sFQex g$C$14472$sFQex g$V$14473$sFQex))))) ((g$C$14472$sFQex g$port$7347$sFQex) (lookahead-char g$C$14472$sFQex g$port$7347$sFQex)))))) (library-letrec*-identity 'g$peek-char$7333$sFQex))) (g$read-char$7334$sFQex g$read-char$7376$sFQex ((case-lambda ((g$C$14519$sFQex) (g$C$14519$sFQex (case-lambda ((g$C$14474$sFQex) (current-input-port (case-lambda ((g$V$14475$sFQex) (g$read-char$7334$sFQex g$C$14474$sFQex g$V$14475$sFQex))))) ((g$C$14474$sFQex g$port$7348$sFQex) (get-char g$C$14474$sFQex g$port$7348$sFQex)))))) (library-letrec*-identity 'g$read-char$7334$sFQex))) (g$write-char$7335$sFQex g$write-char$7377$sFQex ((case-lambda ((g$C$14520$sFQex) (g$C$14520$sFQex (case-lambda ((g$C$14476$sFQex g$chr$7349$sFQex) (current-output-port (case-lambda ((g$V$14477$sFQex) (g$write-char$7335$sFQex g$C$14476$sFQex g$chr$7349$sFQex g$V$14477$sFQex))))) ((g$C$14476$sFQex g$chr$7350$sFQex g$port$7351$sFQex) (put-char g$C$14476$sFQex g$port$7351$sFQex g$chr$7350$sFQex)))))) (library-letrec*-identity 'g$write-char$7335$sFQex))) (g$with-input-from-file$7342$sFQex g$with-input-from-file$7378$sFQex ((case-lambda ((g$C$14521$sFQex) (g$C$14521$sFQex (case-lambda ((g$C$14489$sFQex g$filename$7352$sFQex g$thunk$7353$sFQex) (open-input-file (case-lambda ((g$V$14490$sFQex) ((case-lambda ((g$C$14488$sFQex g$current-input-port$7356$sFQex g$t$7357$sFQex) ((case-lambda ((g$C$14483$sFQex g$swap$7358$sFQex) (dynamic-wind g$C$14483$sFQex g$swap$7358$sFQex (case-lambda ((g$C$14482$sFQex) (dynamic-wind g$C$14482$sFQex (case-lambda ((g$C$14478$sFQex) (g$C$14478$sFQex '#f))) (case-lambda ((g$C$14479$sFQex) (g$thunk$7353$sFQex g$C$14479$sFQex))) (case-lambda ((g$C$14480$sFQex) (current-input-port (case-lambda ((g$V$14481$sFQex) (close-input-port g$C$14480$sFQex g$V$14481$sFQex))))))))) g$swap$7358$sFQex))) g$C$14488$sFQex (case-lambda ((g$C$14486$sFQex) (g$current-input-port$7356$sFQex (case-lambda ((g$V$14487$sFQex) ((case-lambda ((g$C$14484$sFQex g$t$7359$sFQex) (g$current-input-port$7356$sFQex (case-lambda (g$IGNORE$14485$sFQex (begin (set! g$t$7357$sFQex g$t$7359$sFQex) (g$C$14484$sFQex (cps-void))))) g$t$7357$sFQex))) g$C$14486$sFQex g$V$14487$sFQex))))))))) g$C$14489$sFQex current-input-port g$V$14490$sFQex))) g$filename$7352$sFQex)))))) (library-letrec*-identity 'g$with-input-from-file$7342$sFQex))) (g$with-output-to-file$7343$sFQex g$with-output-to-file$7379$sFQex ((case-lambda ((g$C$14522$sFQex) (g$C$14522$sFQex (case-lambda ((g$C$14502$sFQex g$filename$7360$sFQex g$thunk$7361$sFQex) (open-output-file (case-lambda ((g$V$14503$sFQex) ((case-lambda ((g$C$14501$sFQex g$current-output-port$7364$sFQex g$t$7365$sFQex) ((case-lambda ((g$C$14496$sFQex g$swap$7366$sFQex) (dynamic-wind g$C$14496$sFQex g$swap$7366$sFQex (case-lambda ((g$C$14495$sFQex) (dynamic-wind g$C$14495$sFQex (case-lambda ((g$C$14491$sFQex) (g$C$14491$sFQex '#f))) (case-lambda ((g$C$14492$sFQex) (g$thunk$7361$sFQex g$C$14492$sFQex))) (case-lambda ((g$C$14493$sFQex) (current-output-port (case-lambda ((g$V$14494$sFQex) (close-output-port g$C$14493$sFQex g$V$14494$sFQex))))))))) g$swap$7366$sFQex))) g$C$14501$sFQex (case-lambda ((g$C$14499$sFQex) (g$current-output-port$7364$sFQex (case-lambda ((g$V$14500$sFQex) ((case-lambda ((g$C$14497$sFQex g$t$7367$sFQex) (g$current-output-port$7364$sFQex (case-lambda (g$IGNORE$14498$sFQex (begin (set! g$t$7365$sFQex g$t$7367$sFQex) (g$C$14497$sFQex (cps-void))))) g$t$7365$sFQex))) g$C$14499$sFQex g$V$14500$sFQex))))))))) g$C$14502$sFQex current-output-port g$V$14503$sFQex))) g$filename$7360$sFQex)))))) (library-letrec*-identity 'g$with-output-to-file$7343$sFQex))) (g$call-with-input-file$7344$sFQex g$call-with-input-file$7380$sFQex ((case-lambda ((g$C$14523$sFQex) (g$C$14523$sFQex (case-lambda ((g$C$14508$sFQex g$filename$7368$sFQex g$proc$7369$sFQex) (open-input-file (case-lambda ((g$V$14509$sFQex) ((case-lambda ((g$C$14507$sFQex g$p$7370$sFQex) (dynamic-wind g$C$14507$sFQex (case-lambda ((g$C$14504$sFQex) (g$C$14504$sFQex '#f))) (case-lambda ((g$C$14505$sFQex) (g$proc$7369$sFQex g$C$14505$sFQex g$p$7370$sFQex))) (case-lambda ((g$C$14506$sFQex) (close-input-port g$C$14506$sFQex g$p$7370$sFQex)))))) g$C$14508$sFQex g$V$14509$sFQex))) g$filename$7368$sFQex)))))) (library-letrec*-identity 'g$call-with-input-file$7344$sFQex))) (g$call-with-output-file$7345$sFQex g$call-with-output-file$7381$sFQex ((case-lambda ((g$C$14524$sFQex) (g$C$14524$sFQex (case-lambda ((g$C$14514$sFQex g$filename$7371$sFQex g$proc$7372$sFQex) (open-output-file (case-lambda ((g$V$14515$sFQex) ((case-lambda ((g$C$14513$sFQex g$p$7373$sFQex) (dynamic-wind g$C$14513$sFQex (case-lambda ((g$C$14510$sFQex) (g$C$14510$sFQex '#f))) (case-lambda ((g$C$14511$sFQex) (g$proc$7372$sFQex g$C$14511$sFQex g$p$7373$sFQex))) (case-lambda ((g$C$14512$sFQex) (close-output-port g$C$14512$sFQex g$p$7373$sFQex)))))) g$C$14514$sFQex g$V$14515$sFQex))) g$filename$7371$sFQex)))))) (library-letrec*-identity 'g$call-with-output-file$7345$sFQex))) (g$newline$7346$sFQex g$newline$7382$sFQex ((case-lambda ((g$C$14525$sFQex) (g$C$14525$sFQex (case-lambda ((g$C$14516$sFQex) (current-output-port (case-lambda ((g$V$14517$sFQex) (g$newline$7346$sFQex g$C$14516$sFQex g$V$14517$sFQex))))) ((g$C$14516$sFQex g$port$7374$sFQex) (display g$C$14516$sFQex '"\n" g$port$7374$sFQex)))))) (library-letrec*-identity 'g$newline$7346$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme records inspection) () (void identity-for-cps))(library-letrec* (ironscheme records procedural) () (void identity-for-cps))(library-letrec* (ironscheme records syntactic) () (void identity-for-cps))(library-letrec* (ironscheme enums) ((g$8541$7383$sFQex g$8541$7492$sFQex ((case-lambda ((g$C$14719$sFQex) (make-record-type-descriptor g$C$14719$sFQex 'enum '#f '#f '#f '#f '#((immutable value) (immutable info))))) (library-letrec*-identity 'g$8541$7383$sFQex))) (g$8543$7384$sFQex g$8543$7493$sFQex ((case-lambda ((g$C$14720$sFQex) (g$C$14720$sFQex '#f))) (library-letrec*-identity 'g$8543$7384$sFQex))) (g$8542$7385$sFQex g$8542$7494$sFQex ((case-lambda ((g$C$14721$sFQex) (make-record-constructor-descriptor g$C$14721$sFQex g$8541$7383$sFQex '#f g$8543$7384$sFQex))) (library-letrec*-identity 'g$8542$7385$sFQex))) (g$enum?$7386$sFQex g$enum?$7495$sFQex ((case-lambda ((g$C$14722$sFQex) (record-predicate g$C$14722$sFQex g$8541$7383$sFQex))) (library-letrec*-identity 'g$enum?$7386$sFQex))) (g$make-enum$7387$sFQex g$make-enum$7496$sFQex ((case-lambda ((g$C$14723$sFQex) (record-constructor g$C$14723$sFQex g$8542$7385$sFQex))) (library-letrec*-identity 'g$make-enum$7387$sFQex))) (g$enum-value$7388$sFQex g$enum-value$7497$sFQex ((case-lambda ((g$C$14724$sFQex) (record-accessor g$C$14724$sFQex g$8541$7383$sFQex '0))) (library-letrec*-identity 'g$enum-value$7388$sFQex))) (g$enum-info$7389$sFQex g$enum-info$7498$sFQex ((case-lambda ((g$C$14725$sFQex) (record-accessor g$C$14725$sFQex g$8541$7383$sFQex '1))) (library-letrec*-identity 'g$enum-info$7389$sFQex))) (g$8554$7390$sFQex g$8554$7499$sFQex ((case-lambda ((g$C$14726$sFQex) (make-record-type-descriptor g$C$14726$sFQex 'enum-universe '#f '#f '#f '#f '#((immutable id) (immutable symbols) (immutable mapping) (immutable value))))) (library-letrec*-identity 'g$8554$7390$sFQex))) (g$8556$7391$sFQex g$8556$7500$sFQex ((case-lambda ((g$C$14727$sFQex) (g$C$14727$sFQex '#f))) (library-letrec*-identity 'g$8556$7391$sFQex))) (g$8555$7392$sFQex g$8555$7501$sFQex ((case-lambda ((g$C$14728$sFQex) (make-record-constructor-descriptor g$C$14728$sFQex g$8554$7390$sFQex '#f g$8556$7391$sFQex))) (library-letrec*-identity 'g$8555$7392$sFQex))) (g$enum-universe?$7393$sFQex g$enum-universe?$7502$sFQex ((case-lambda ((g$C$14729$sFQex) (record-predicate g$C$14729$sFQex g$8554$7390$sFQex))) (library-letrec*-identity 'g$enum-universe?$7393$sFQex))) (g$make-enum-universe$7394$sFQex g$make-enum-universe$7503$sFQex ((case-lambda ((g$C$14730$sFQex) (record-constructor g$C$14730$sFQex g$8555$7392$sFQex))) (library-letrec*-identity 'g$make-enum-universe$7394$sFQex))) (g$enum-universe-id$7395$sFQex g$enum-universe-id$7504$sFQex ((case-lambda ((g$C$14731$sFQex) (record-accessor g$C$14731$sFQex g$8554$7390$sFQex '0))) (library-letrec*-identity 'g$enum-universe-id$7395$sFQex))) (g$enum-universe-symbols$7396$sFQex g$enum-universe-symbols$7505$sFQex ((case-lambda ((g$C$14732$sFQex) (record-accessor g$C$14732$sFQex g$8554$7390$sFQex '1))) (library-letrec*-identity 'g$enum-universe-symbols$7396$sFQex))) (g$enum-universe-mapping$7397$sFQex g$enum-universe-mapping$7506$sFQex ((case-lambda ((g$C$14733$sFQex) (record-accessor g$C$14733$sFQex g$8554$7390$sFQex '2))) (library-letrec*-identity 'g$enum-universe-mapping$7397$sFQex))) (g$enum-universe-value$7398$sFQex g$enum-universe-value$7507$sFQex ((case-lambda ((g$C$14734$sFQex) (record-accessor g$C$14734$sFQex g$8554$7390$sFQex '3))) (library-letrec*-identity 'g$enum-universe-value$7398$sFQex))) (g$enum-type=?$7399$sFQex g$enum-type=?$7508$sFQex ((case-lambda ((g$C$14735$sFQex) (g$C$14735$sFQex (case-lambda ((g$C$14526$sFQex g$enumset1$7421$sFQex g$enumset2$7422$sFQex) (g$enum-info$7389$sFQex (case-lambda ((g$V$14527$sFQex) (g$enum-universe-id$7395$sFQex (case-lambda ((g$V$14528$sFQex) (g$enum-info$7389$sFQex (case-lambda ((g$V$14529$sFQex) (g$enum-universe-id$7395$sFQex (case-lambda ((g$V$14530$sFQex) (eq? g$C$14526$sFQex g$V$14530$sFQex g$V$14528$sFQex))) g$V$14529$sFQex))) g$enumset1$7421$sFQex))) g$V$14527$sFQex))) g$enumset2$7422$sFQex)))))) (library-letrec*-identity 'g$enum-type=?$7399$sFQex))) (g$get-symbols$7400$sFQex g$get-symbols$7509$sFQex ((case-lambda ((g$C$14736$sFQex) (g$C$14736$sFQex (case-lambda ((g$C$14531$sFQex g$enumset$7423$sFQex) (g$enum-info$7389$sFQex (case-lambda ((g$V$14532$sFQex) (g$enum-universe-symbols$7396$sFQex g$C$14531$sFQex g$V$14532$sFQex))) g$enumset$7423$sFQex)))))) (library-letrec*-identity 'g$get-symbols$7400$sFQex))) (g$get-value$7401$sFQex g$get-value$7510$sFQex ((case-lambda ((g$C$14737$sFQex) (g$C$14737$sFQex (case-lambda ((g$C$14533$sFQex g$enumset$7424$sFQex g$s$7425$sFQex) (g$enum-info$7389$sFQex (case-lambda ((g$V$14534$sFQex) (g$enum-universe-mapping$7397$sFQex (case-lambda ((g$V$14535$sFQex) (g$hashtable-ref$6270$sFQex g$C$14533$sFQex g$V$14535$sFQex g$s$7425$sFQex '#f))) g$V$14534$sFQex))) g$enumset$7424$sFQex)))))) (library-letrec*-identity 'g$get-value$7401$sFQex))) (g$assert-enum$7402$sFQex g$assert-enum$7511$sFQex ((case-lambda ((g$C$14738$sFQex) (g$C$14738$sFQex (case-lambda ((g$C$14536$sFQex g$who$7426$sFQex g$enumset$7427$sFQex) (g$enum?$7386$sFQex (case-lambda ((g$V$14537$sFQex) (not (case-lambda ((g$T$14538$sFQex) (if g$T$14538$sFQex (g$assertion-violation$6456$sFQex g$C$14536$sFQex g$who$7426$sFQex '"not an enumeration" g$enumset$7427$sFQex) (void g$C$14536$sFQex)))) g$V$14537$sFQex))) g$enumset$7427$sFQex)))))) (library-letrec*-identity 'g$assert-enum$7402$sFQex))) (g$make-info$7403$sFQex g$make-info$7512$sFQex ((case-lambda ((g$C$14739$sFQex) (g$C$14739$sFQex (case-lambda ((g$C$14557$sFQex g$symbols$7428$sFQex) (g$make-eq-hashtable$6267$sFQex (case-lambda ((g$V$14558$sFQex) ((case-lambda ((g$C$14555$sFQex g$ht$7429$sFQex) ((case-lambda ((g$C$14554$sFQex g$f$7430$sFQex) ((case-lambda ((g$C$14540$sFQex g$f$14539$sFQex) (begin (set! g$f$7430$sFQex g$f$14539$sFQex) (g$C$14540$sFQex g$f$7430$sFQex)))) g$C$14554$sFQex (case-lambda ((g$C$14549$sFQex g$s$7431$sFQex g$a$7432$sFQex g$mask$7433$sFQex) (null? (case-lambda ((g$T$14550$sFQex) (if g$T$14550$sFQex (- (case-lambda ((g$V$14551$sFQex) (reverse! (case-lambda ((g$V$14552$sFQex) (values g$C$14549$sFQex g$V$14552$sFQex g$ht$7429$sFQex g$V$14551$sFQex))) g$a$7432$sFQex))) g$mask$7433$sFQex '1) (car (case-lambda ((g$V$14553$sFQex) ((case-lambda ((g$C$14541$sFQex g$n$7434$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$14542$sFQex) (if g$T$14542$sFQex (g$hashtable-contains?$6273$sFQex (case-lambda ((g$T$14543$sFQex) (if g$T$14543$sFQex (cdr (case-lambda ((g$V$14544$sFQex) (g$f$7430$sFQex g$C$14541$sFQex g$V$14544$sFQex g$a$7432$sFQex g$mask$7433$sFQex))) g$s$7431$sFQex) (g$hashtable-set!$6271$sFQex (case-lambda (g$IGNORE$14545$sFQex (g$bitwise-arithmetic-shift-left$6841$sFQex (case-lambda ((g$V$14546$sFQex) (cons (case-lambda ((g$V$14547$sFQex) (cdr (case-lambda ((g$V$14548$sFQex) (g$f$7430$sFQex g$C$14541$sFQex g$V$14548$sFQex g$V$14547$sFQex g$V$14546$sFQex))) g$s$7431$sFQex))) g$n$7434$sFQex g$a$7432$sFQex))) g$mask$7433$sFQex '1))) g$ht$7429$sFQex g$n$7434$sFQex g$mask$7433$sFQex)))) g$ht$7429$sFQex g$n$7434$sFQex) (g$assertion-violation$6456$sFQex g$C$14541$sFQex 'make-enumeration '"not a symbol" g$n$7434$sFQex)))) g$n$7434$sFQex))) g$C$14549$sFQex g$V$14553$sFQex))) g$s$7431$sFQex)))) g$s$7431$sFQex)))))) (case-lambda ((g$V$14556$sFQex) (g$V$14556$sFQex g$C$14555$sFQex g$symbols$7428$sFQex '() '1))) uninitialized))) g$C$14557$sFQex g$V$14558$sFQex))))))))) (library-letrec*-identity 'g$make-info$7403$sFQex))) (g$make-name$7404$sFQex g$make-name$7513$sFQex ((case-lambda ((g$C$14740$sFQex) (g$C$14740$sFQex (case-lambda ((g$C$14559$sFQex g$symbols$7435$sFQex) (g$format$7552$sFQex (case-lambda ((g$V$14560$sFQex) (string->symbol g$C$14559$sFQex g$V$14560$sFQex))) '"~a" g$symbols$7435$sFQex)))))) (library-letrec*-identity 'g$make-name$7404$sFQex))) (g$make-enumeration$7405$sFQex g$make-enumeration$7514$sFQex ((case-lambda ((g$C$14741$sFQex) (g$C$14741$sFQex (case-lambda ((g$C$14566$sFQex g$symbols$7436$sFQex) (call-with-values g$C$14566$sFQex (case-lambda ((g$C$14561$sFQex) (g$make-info$7403$sFQex g$C$14561$sFQex g$symbols$7436$sFQex))) (case-lambda ((g$C$14565$sFQex g$s$7440$sFQex g$mapping$7441$sFQex g$mask$7442$sFQex) ((case-lambda ((g$C$14562$sFQex g$mask$7443$sFQex g$mapping$7444$sFQex g$s$7445$sFQex) (g$make-name$7404$sFQex (case-lambda ((g$V$14563$sFQex) (g$make-enum-universe$7394$sFQex (case-lambda ((g$V$14564$sFQex) (g$make-enum$7387$sFQex g$C$14562$sFQex g$mask$7443$sFQex g$V$14564$sFQex))) g$V$14563$sFQex g$s$7445$sFQex g$mapping$7444$sFQex g$mask$7443$sFQex))) g$s$7445$sFQex))) g$C$14565$sFQex g$mask$7442$sFQex g$mapping$7441$sFQex g$s$7440$sFQex))))))))) (library-letrec*-identity 'g$make-enumeration$7405$sFQex))) (g$enum-set-universe$7406$sFQex g$enum-set-universe$7515$sFQex ((case-lambda ((g$C$14742$sFQex) (g$C$14742$sFQex (case-lambda ((g$C$14569$sFQex g$enumset$7446$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14570$sFQex (g$enum-info$7389$sFQex (case-lambda ((g$V$14571$sFQex) ((case-lambda ((g$C$14567$sFQex g$ei$7447$sFQex) (g$enum-universe-value$7398$sFQex (case-lambda ((g$V$14568$sFQex) (g$make-enum$7387$sFQex g$C$14567$sFQex g$V$14568$sFQex g$ei$7447$sFQex))) g$ei$7447$sFQex))) g$C$14569$sFQex g$V$14571$sFQex))) g$enumset$7446$sFQex))) 'enum-set-universe g$enumset$7446$sFQex)))))) (library-letrec*-identity 'g$enum-set-universe$7406$sFQex))) (g$enum-set-indexer$7407$sFQex g$enum-set-indexer$7516$sFQex ((case-lambda ((g$C$14743$sFQex) (g$C$14743$sFQex (case-lambda ((g$C$14580$sFQex g$enumset$7448$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14581$sFQex (g$C$14580$sFQex (case-lambda ((g$C$14574$sFQex g$symbol$7449$sFQex) ((case-lambda ((g$J$14577$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$V$14578$sFQex) (not (case-lambda ((g$T$14579$sFQex) (if g$T$14579$sFQex (g$assertion-violation$6456$sFQex g$J$14577$sFQex 'enum-set-indexer '"not a symbol" g$symbol$7449$sFQex) (void g$J$14577$sFQex)))) g$V$14578$sFQex))) g$symbol$7449$sFQex))) (case-lambda (g$IGNORE$14575$sFQex (g$get-value$7401$sFQex (case-lambda ((g$V$14576$sFQex) ((case-lambda ((g$C$14572$sFQex g$v$7450$sFQex) (if g$v$7450$sFQex (bitwise-length (case-lambda ((g$V$14573$sFQex) (- g$C$14572$sFQex g$V$14573$sFQex '1))) g$v$7450$sFQex) (g$C$14572$sFQex '#f)))) g$C$14574$sFQex g$V$14576$sFQex))) g$enumset$7448$sFQex g$symbol$7449$sFQex))))))))) 'enum-set-indexer g$enumset$7448$sFQex)))))) (library-letrec*-identity 'g$enum-set-indexer$7407$sFQex))) (g$enum-set-constructor$7408$sFQex g$enum-set-constructor$7517$sFQex ((case-lambda ((g$C$14744$sFQex) (g$C$14744$sFQex (case-lambda ((g$C$14597$sFQex g$enumset$7451$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14598$sFQex (g$C$14597$sFQex (case-lambda ((g$C$14595$sFQex g$symbols$7452$sFQex) ((case-lambda ((g$C$14594$sFQex g$f$7453$sFQex) ((case-lambda ((g$C$14583$sFQex g$f$14582$sFQex) (begin (set! g$f$7453$sFQex g$f$14582$sFQex) (g$C$14583$sFQex g$f$7453$sFQex)))) g$C$14594$sFQex (case-lambda ((g$C$14590$sFQex g$v$7454$sFQex g$s$7455$sFQex) (null? (case-lambda ((g$T$14591$sFQex) (if g$T$14591$sFQex (g$enum-info$7389$sFQex (case-lambda ((g$V$14592$sFQex) (g$make-enum$7387$sFQex g$C$14590$sFQex g$v$7454$sFQex g$V$14592$sFQex))) g$enumset$7451$sFQex) (car (case-lambda ((g$V$14593$sFQex) ((case-lambda ((g$C$14587$sFQex g$n$7456$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$14588$sFQex) (if g$T$14588$sFQex (g$get-value$7401$sFQex (case-lambda ((g$V$14589$sFQex) ((case-lambda ((g$C$14584$sFQex g$v*$7457$sFQex) (if g$v*$7457$sFQex (cdr (case-lambda ((g$V$14585$sFQex) (bitwise-ior (case-lambda ((g$V$14586$sFQex) (g$f$7453$sFQex g$C$14584$sFQex g$V$14586$sFQex g$V$14585$sFQex))) g$v$7454$sFQex g$v*$7457$sFQex))) g$s$7455$sFQex) (g$assertion-violation$6456$sFQex g$C$14584$sFQex 'enum-set-constructor '"not a member of enum-set" g$n$7456$sFQex)))) g$C$14587$sFQex g$V$14589$sFQex))) g$enumset$7451$sFQex g$n$7456$sFQex) (g$assertion-violation$6456$sFQex g$C$14587$sFQex 'enum-set-constructor '"not a symbol" g$n$7456$sFQex)))) g$n$7456$sFQex))) g$C$14590$sFQex g$V$14593$sFQex))) g$s$7455$sFQex)))) g$s$7455$sFQex)))))) (case-lambda ((g$V$14596$sFQex) (g$V$14596$sFQex g$C$14595$sFQex '0 g$symbols$7452$sFQex))) uninitialized)))))) 'enum-set-constructor g$enumset$7451$sFQex)))))) (library-letrec*-identity 'g$enum-set-constructor$7408$sFQex))) (g$enum-set->list$7409$sFQex g$enum-set->list$7518$sFQex ((case-lambda ((g$C$14745$sFQex) (g$C$14745$sFQex (case-lambda ((g$C$14615$sFQex g$enumset$7458$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14616$sFQex (g$enum-value$7388$sFQex (case-lambda ((g$V$14617$sFQex) ((case-lambda ((g$C$14612$sFQex g$value$7459$sFQex) (g$get-symbols$7400$sFQex (case-lambda ((g$V$14613$sFQex) ((case-lambda ((g$C$14611$sFQex g$f$7460$sFQex) ((case-lambda ((g$C$14600$sFQex g$f$14599$sFQex) (begin (set! g$f$7460$sFQex g$f$14599$sFQex) (g$C$14600$sFQex g$f$7460$sFQex)))) g$C$14611$sFQex (case-lambda ((g$C$14601$sFQex g$s$7461$sFQex g$l$7462$sFQex) (null? (case-lambda ((g$T$14602$sFQex) (if g$T$14602$sFQex (reverse! g$C$14601$sFQex g$l$7462$sFQex) (car (case-lambda ((g$V$14603$sFQex) (g$get-value$7401$sFQex (case-lambda ((g$V$14604$sFQex) (bitwise-and (case-lambda ((g$V$14605$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$T$14606$sFQex) (if g$T$14606$sFQex (cdr (case-lambda ((g$V$14607$sFQex) (g$f$7460$sFQex g$C$14601$sFQex g$V$14607$sFQex g$l$7462$sFQex))) g$s$7461$sFQex) (car (case-lambda ((g$V$14608$sFQex) (cons (case-lambda ((g$V$14609$sFQex) (cdr (case-lambda ((g$V$14610$sFQex) (g$f$7460$sFQex g$C$14601$sFQex g$V$14610$sFQex g$V$14609$sFQex))) g$s$7461$sFQex))) g$V$14608$sFQex g$l$7462$sFQex))) g$s$7461$sFQex)))) g$V$14605$sFQex))) g$V$14604$sFQex g$value$7459$sFQex))) g$enumset$7458$sFQex g$V$14603$sFQex))) g$s$7461$sFQex)))) g$s$7461$sFQex)))))) (case-lambda ((g$V$14614$sFQex) (g$V$14614$sFQex g$C$14612$sFQex g$V$14613$sFQex '()))) uninitialized))) g$enumset$7458$sFQex))) g$C$14615$sFQex g$V$14617$sFQex))) g$enumset$7458$sFQex))) 'enum-set->list g$enumset$7458$sFQex)))))) (library-letrec*-identity 'g$enum-set->list$7409$sFQex))) (g$enum-set-member?$7410$sFQex g$enum-set-member?$7519$sFQex ((case-lambda ((g$C$14746$sFQex) (g$C$14746$sFQex (case-lambda ((g$C$14622$sFQex g$symbol$7463$sFQex g$enumset$7464$sFQex) ((case-lambda ((g$J$14626$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$V$14627$sFQex) (not (case-lambda ((g$T$14628$sFQex) (if g$T$14628$sFQex (g$assertion-violation$6456$sFQex g$J$14626$sFQex 'enum-set-member? '"not a symbol" g$symbol$7463$sFQex) (void g$J$14626$sFQex)))) g$V$14627$sFQex))) g$symbol$7463$sFQex))) (case-lambda (g$IGNORE$14623$sFQex (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14624$sFQex (g$get-value$7401$sFQex (case-lambda ((g$V$14625$sFQex) ((case-lambda ((g$C$14618$sFQex g$v$7465$sFQex) (if g$v$7465$sFQex (g$enum-value$7388$sFQex (case-lambda ((g$V$14619$sFQex) (bitwise-and (case-lambda ((g$V$14620$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$V$14621$sFQex) (not g$C$14618$sFQex g$V$14621$sFQex))) g$V$14620$sFQex))) g$v$7465$sFQex g$V$14619$sFQex))) g$enumset$7464$sFQex) (g$C$14618$sFQex '#f)))) g$C$14622$sFQex g$V$14625$sFQex))) g$enumset$7464$sFQex g$symbol$7463$sFQex))) 'enum-set-member? g$enumset$7464$sFQex))))))))) (library-letrec*-identity 'g$enum-set-member?$7410$sFQex))) (g$enum-set-subset?$7411$sFQex g$enum-set-subset?$7520$sFQex ((case-lambda ((g$C$14747$sFQex) (g$C$14747$sFQex (case-lambda ((g$C$14654$sFQex g$enumset1$7466$sFQex g$enumset2$7467$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14655$sFQex (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14656$sFQex (g$enum-value$7388$sFQex (case-lambda ((g$V$14657$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14658$sFQex) ((case-lambda ((g$C$14649$sFQex g$v1$7468$sFQex g$v2$7469$sFQex) (g$enum-type=?$7399$sFQex (case-lambda ((g$T$14650$sFQex) (if g$T$14650$sFQex (bitwise-and (case-lambda ((g$V$14651$sFQex) (= g$C$14649$sFQex g$V$14651$sFQex g$v1$7468$sFQex))) g$v1$7468$sFQex g$v2$7469$sFQex) (g$get-symbols$7400$sFQex (case-lambda ((g$V$14652$sFQex) ((case-lambda ((g$C$14648$sFQex g$f$7470$sFQex) ((case-lambda ((g$C$14630$sFQex g$f$14629$sFQex) (begin (set! g$f$7470$sFQex g$f$14629$sFQex) (g$C$14630$sFQex g$f$7470$sFQex)))) g$C$14648$sFQex (case-lambda ((g$C$14642$sFQex g$s$7471$sFQex) (null? (case-lambda ((g$T$14643$sFQex) (if g$T$14643$sFQex (g$C$14642$sFQex '#t) (car (case-lambda ((g$V$14644$sFQex) (g$get-value$7401$sFQex (case-lambda ((g$V$14645$sFQex) (car (case-lambda ((g$V$14646$sFQex) (g$get-value$7401$sFQex (case-lambda ((g$V$14647$sFQex) ((case-lambda ((g$C$14635$sFQex g$v1*$7472$sFQex g$v2*$7473$sFQex) (if g$v2*$7473$sFQex (bitwise-and (case-lambda ((g$V$14636$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$V$14637$sFQex) (not (case-lambda ((g$V$14638$sFQex) (bitwise-and (case-lambda ((g$V$14639$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$V$14640$sFQex) (not (case-lambda ((g$V$14641$sFQex) ((case-lambda ((g$C$14631$sFQex g$has1$7474$sFQex g$has2$7475$sFQex) ((case-lambda ((g$J$14634$sFQex) (if g$has1$7474$sFQex (not g$J$14634$sFQex g$has2$7475$sFQex) (g$J$14634$sFQex '#f)))) (case-lambda ((g$T$14632$sFQex) (if g$T$14632$sFQex (g$C$14631$sFQex '#f) (cdr (case-lambda ((g$V$14633$sFQex) (g$f$7470$sFQex g$C$14631$sFQex g$V$14633$sFQex))) g$s$7471$sFQex))))))) g$C$14635$sFQex g$V$14641$sFQex g$V$14638$sFQex))) g$V$14640$sFQex))) g$V$14639$sFQex))) g$v1$7468$sFQex g$v1*$7472$sFQex))) g$V$14637$sFQex))) g$V$14636$sFQex))) g$v2$7469$sFQex g$v2*$7473$sFQex) (g$C$14635$sFQex '#f)))) g$C$14642$sFQex g$V$14647$sFQex g$V$14645$sFQex))) g$enumset1$7466$sFQex g$V$14646$sFQex))) g$s$7471$sFQex))) g$enumset2$7467$sFQex g$V$14644$sFQex))) g$s$7471$sFQex)))) g$s$7471$sFQex)))))) (case-lambda ((g$V$14653$sFQex) (g$V$14653$sFQex g$C$14649$sFQex g$V$14652$sFQex))) uninitialized))) g$enumset1$7466$sFQex)))) g$enumset1$7466$sFQex g$enumset2$7467$sFQex))) g$C$14654$sFQex g$V$14658$sFQex g$V$14657$sFQex))) g$enumset1$7466$sFQex))) g$enumset2$7467$sFQex))) 'enum-set-subset? g$enumset2$7467$sFQex))) 'enum-set-subset? g$enumset1$7466$sFQex)))))) (library-letrec*-identity 'g$enum-set-subset?$7411$sFQex))) (g$enum-set=?$7412$sFQex g$enum-set=?$7521$sFQex ((case-lambda ((g$C$14748$sFQex) (g$C$14748$sFQex (case-lambda ((g$C$14659$sFQex g$enumset1$7476$sFQex g$enumset2$7477$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14660$sFQex (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14661$sFQex (g$enum-set-subset?$7411$sFQex (case-lambda ((g$T$14662$sFQex) (if g$T$14662$sFQex (g$enum-set-subset?$7411$sFQex g$C$14659$sFQex g$enumset2$7477$sFQex g$enumset1$7476$sFQex) (g$C$14659$sFQex '#f)))) g$enumset1$7476$sFQex g$enumset2$7477$sFQex))) 'enum-set=? g$enumset2$7477$sFQex))) 'enum-set=? g$enumset1$7476$sFQex)))))) (library-letrec*-identity 'g$enum-set=?$7412$sFQex))) (g$enum-set-union$7413$sFQex g$enum-set-union$7522$sFQex ((case-lambda ((g$C$14749$sFQex) (g$C$14749$sFQex (case-lambda ((g$C$14663$sFQex g$enumset1$7478$sFQex g$enumset2$7479$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14664$sFQex (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14665$sFQex (g$enum-type=?$7399$sFQex (case-lambda ((g$T$14666$sFQex) (if g$T$14666$sFQex (g$enum-info$7389$sFQex (case-lambda ((g$V$14667$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14668$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14669$sFQex) (bitwise-ior (case-lambda ((g$V$14670$sFQex) (g$make-enum$7387$sFQex g$C$14663$sFQex g$V$14670$sFQex g$V$14667$sFQex))) g$V$14669$sFQex g$V$14668$sFQex))) g$enumset1$7478$sFQex))) g$enumset2$7479$sFQex))) g$enumset1$7478$sFQex) (g$C$14663$sFQex '#f)))) g$enumset1$7478$sFQex g$enumset2$7479$sFQex))) 'enum-set-union g$enumset2$7479$sFQex))) 'enum-set-union g$enumset1$7478$sFQex)))))) (library-letrec*-identity 'g$enum-set-union$7413$sFQex))) (g$enum-set-intersection$7414$sFQex g$enum-set-intersection$7523$sFQex ((case-lambda ((g$C$14750$sFQex) (g$C$14750$sFQex (case-lambda ((g$C$14671$sFQex g$enumset1$7480$sFQex g$enumset2$7481$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14672$sFQex (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14673$sFQex (g$enum-type=?$7399$sFQex (case-lambda ((g$T$14674$sFQex) (if g$T$14674$sFQex (g$enum-info$7389$sFQex (case-lambda ((g$V$14675$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14676$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14677$sFQex) (bitwise-and (case-lambda ((g$V$14678$sFQex) (g$make-enum$7387$sFQex g$C$14671$sFQex g$V$14678$sFQex g$V$14675$sFQex))) g$V$14677$sFQex g$V$14676$sFQex))) g$enumset1$7480$sFQex))) g$enumset2$7481$sFQex))) g$enumset1$7480$sFQex) (g$C$14671$sFQex '#f)))) g$enumset1$7480$sFQex g$enumset2$7481$sFQex))) 'enum-set-intersection g$enumset2$7481$sFQex))) 'enum-set-intersection g$enumset1$7480$sFQex)))))) (library-letrec*-identity 'g$enum-set-intersection$7414$sFQex))) (g$enum-set-difference$7415$sFQex g$enum-set-difference$7524$sFQex ((case-lambda ((g$C$14751$sFQex) (g$C$14751$sFQex (case-lambda ((g$C$14679$sFQex g$enumset1$7482$sFQex g$enumset2$7483$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14680$sFQex (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14681$sFQex (g$enum-type=?$7399$sFQex (case-lambda ((g$T$14682$sFQex) (if g$T$14682$sFQex (g$enum-info$7389$sFQex (case-lambda ((g$V$14683$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14684$sFQex) (bitwise-not (case-lambda ((g$V$14685$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14686$sFQex) (bitwise-and (case-lambda ((g$V$14687$sFQex) (g$make-enum$7387$sFQex g$C$14679$sFQex g$V$14687$sFQex g$V$14683$sFQex))) g$V$14686$sFQex g$V$14685$sFQex))) g$enumset1$7482$sFQex))) g$V$14684$sFQex))) g$enumset2$7483$sFQex))) g$enumset1$7482$sFQex) (g$C$14679$sFQex '#f)))) g$enumset1$7482$sFQex g$enumset2$7483$sFQex))) 'enum-set-difference g$enumset2$7483$sFQex))) 'enum-set-difference g$enumset1$7482$sFQex)))))) (library-letrec*-identity 'g$enum-set-difference$7415$sFQex))) (g$enum-set-complement$7416$sFQex g$enum-set-complement$7525$sFQex ((case-lambda ((g$C$14752$sFQex) (g$C$14752$sFQex (case-lambda ((g$C$14688$sFQex g$enumset$7484$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14689$sFQex (g$enum-info$7389$sFQex (case-lambda ((g$V$14690$sFQex) (g$enum-value$7388$sFQex (case-lambda ((g$V$14691$sFQex) (bitwise-not (case-lambda ((g$V$14692$sFQex) (g$make-enum$7387$sFQex g$C$14688$sFQex g$V$14692$sFQex g$V$14690$sFQex))) g$V$14691$sFQex))) g$enumset$7484$sFQex))) g$enumset$7484$sFQex))) 'enum-set-complement g$enumset$7484$sFQex)))))) (library-letrec*-identity 'g$enum-set-complement$7416$sFQex))) (g$enum-set-projection$7417$sFQex g$enum-set-projection$7526$sFQex ((case-lambda ((g$C$14753$sFQex) (g$C$14753$sFQex (case-lambda ((g$C$14713$sFQex g$enumset1$7485$sFQex g$enumset2$7486$sFQex) (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14714$sFQex (g$assert-enum$7402$sFQex (case-lambda (g$IGNORE$14715$sFQex (g$enum-value$7388$sFQex (case-lambda ((g$V$14716$sFQex) ((case-lambda ((g$C$14710$sFQex g$v1$7487$sFQex) (g$get-symbols$7400$sFQex (case-lambda ((g$V$14711$sFQex) ((case-lambda ((g$C$14709$sFQex g$f$7488$sFQex) ((case-lambda ((g$C$14694$sFQex g$f$14693$sFQex) (begin (set! g$f$7488$sFQex g$f$14693$sFQex) (g$C$14694$sFQex g$f$7488$sFQex)))) g$C$14709$sFQex (case-lambda ((g$C$14699$sFQex g$s$7489$sFQex g$v$7490$sFQex) (null? (case-lambda ((g$T$14700$sFQex) (if g$T$14700$sFQex (g$enum-info$7389$sFQex (case-lambda ((g$V$14701$sFQex) (g$make-enum$7387$sFQex g$C$14699$sFQex g$v$7490$sFQex g$V$14701$sFQex))) g$enumset2$7486$sFQex) (car (case-lambda ((g$V$14702$sFQex) (g$get-value$7401$sFQex (case-lambda ((g$V$14703$sFQex) (bitwise-and (case-lambda ((g$V$14704$sFQex) (g$zero?$6206$sFQex (case-lambda ((g$T$14705$sFQex) (if g$T$14705$sFQex (cdr (case-lambda ((g$V$14706$sFQex) (g$f$7488$sFQex g$C$14699$sFQex g$V$14706$sFQex g$v$7490$sFQex))) g$s$7489$sFQex) (car (case-lambda ((g$V$14707$sFQex) (g$get-value$7401$sFQex (case-lambda ((g$V$14708$sFQex) ((case-lambda ((g$C$14695$sFQex g$v2$7491$sFQex) (if g$v2$7491$sFQex (bitwise-ior (case-lambda ((g$V$14696$sFQex) (cdr (case-lambda ((g$V$14697$sFQex) (g$f$7488$sFQex g$C$14695$sFQex g$V$14697$sFQex g$V$14696$sFQex))) g$s$7489$sFQex))) g$v$7490$sFQex g$v2$7491$sFQex) (cdr (case-lambda ((g$V$14698$sFQex) (g$f$7488$sFQex g$C$14695$sFQex g$V$14698$sFQex g$v$7490$sFQex))) g$s$7489$sFQex)))) g$C$14699$sFQex g$V$14708$sFQex))) g$enumset2$7486$sFQex g$V$14707$sFQex))) g$s$7489$sFQex)))) g$V$14704$sFQex))) g$v1$7487$sFQex g$V$14703$sFQex))) g$enumset1$7485$sFQex g$V$14702$sFQex))) g$s$7489$sFQex)))) g$s$7489$sFQex)))))) (case-lambda ((g$V$14712$sFQex) (g$V$14712$sFQex g$C$14710$sFQex g$V$14711$sFQex '0))) uninitialized))) g$enumset1$7485$sFQex))) g$C$14713$sFQex g$V$14716$sFQex))) g$enumset1$7485$sFQex))) 'enum-set-projection g$enumset2$7486$sFQex))) 'enum-set-projection g$enumset1$7485$sFQex)))))) (library-letrec*-identity 'g$enum-set-projection$7417$sFQex)))) (make-record-printer identity-for-cps 'enum (case-lambda ((g$C$14717$sFQex g$x$7418$sFQex g$p$7419$sFQex g$wr$7420$sFQex) (g$enum-set->list$7409$sFQex (case-lambda ((g$V$14718$sFQex) (g$fprintf$7551$sFQex g$C$14717$sFQex g$p$7419$sFQex '"#[enum-set ~a]" g$V$14718$sFQex))) g$x$7418$sFQex)))))(library-letrec* (ironscheme format) ((g$dofmt$7527$sFQex g$dofmt$7549$sFQex ((case-lambda ((g$C$14819$sFQex) (g$C$14819$sFQex (case-lambda ((g$C$14810$sFQex g$p$7531$sFQex g$cntl$7532$sFQex g$args$7533$sFQex) (string-length (case-lambda ((g$V$14811$sFQex) (fx- (case-lambda ((g$V$14812$sFQex) ((case-lambda ((g$C$14808$sFQex g$nmax$7534$sFQex) ((case-lambda ((g$C$14807$sFQex g$loop$7535$sFQex) ((case-lambda ((g$C$14755$sFQex g$loop$14754$sFQex) (begin (set! g$loop$7535$sFQex g$loop$14754$sFQex) (g$C$14755$sFQex g$loop$7535$sFQex)))) g$C$14807$sFQex (case-lambda ((g$C$14804$sFQex g$n$7536$sFQex g$a$7537$sFQex) (fx<=? (case-lambda ((g$T$14805$sFQex) (if g$T$14805$sFQex (string-ref (case-lambda ((g$V$14806$sFQex) ((case-lambda ((g$C$14796$sFQex g$c$7538$sFQex) ((case-lambda ((g$J$14802$sFQex) (g$char=?$6220$sFQex (case-lambda ((g$T$14803$sFQex) (if g$T$14803$sFQex (fx<? g$J$14802$sFQex g$n$7536$sFQex g$nmax$7534$sFQex) (g$J$14802$sFQex '#f)))) g$c$7538$sFQex '#\~))) (case-lambda ((g$T$14797$sFQex) (if g$T$14797$sFQex (fx+ (case-lambda ((g$V$14798$sFQex) (string-ref (case-lambda ((g$V$14799$sFQex) ((case-lambda ((g$C$14756$sFQex g$t$7539$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$14757$sFQex) (if g$T$14757$sFQex (car (case-lambda ((g$V$14758$sFQex) (display (case-lambda (g$IGNORE$14759$sFQex (cdr (case-lambda ((g$V$14760$sFQex) (fx+ (case-lambda ((g$V$14761$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14761$sFQex g$V$14760$sFQex))) g$n$7536$sFQex '2))) g$a$7537$sFQex))) g$V$14758$sFQex g$p$7531$sFQex))) g$a$7537$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$14762$sFQex) (if g$T$14762$sFQex (car (case-lambda ((g$V$14763$sFQex) (write (case-lambda (g$IGNORE$14764$sFQex (cdr (case-lambda ((g$V$14765$sFQex) (fx+ (case-lambda ((g$V$14766$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14766$sFQex g$V$14765$sFQex))) g$n$7536$sFQex '2))) g$a$7537$sFQex))) g$V$14763$sFQex g$p$7531$sFQex))) g$a$7537$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$14767$sFQex) (if g$T$14767$sFQex (car (case-lambda ((g$V$14768$sFQex) (number->string (case-lambda ((g$V$14769$sFQex) (write (case-lambda (g$IGNORE$14770$sFQex (cdr (case-lambda ((g$V$14771$sFQex) (fx+ (case-lambda ((g$V$14772$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14772$sFQex g$V$14771$sFQex))) g$n$7536$sFQex '2))) g$a$7537$sFQex))) g$V$14769$sFQex g$p$7531$sFQex))) g$V$14768$sFQex '2))) g$a$7537$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$14773$sFQex) (if g$T$14773$sFQex (car (case-lambda ((g$V$14774$sFQex) (number->string (case-lambda ((g$V$14775$sFQex) (write (case-lambda (g$IGNORE$14776$sFQex (cdr (case-lambda ((g$V$14777$sFQex) (fx+ (case-lambda ((g$V$14778$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14778$sFQex g$V$14777$sFQex))) g$n$7536$sFQex '2))) g$a$7537$sFQex))) g$V$14775$sFQex g$p$7531$sFQex))) g$V$14774$sFQex '8))) g$a$7537$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$14779$sFQex) (if g$T$14779$sFQex (car (case-lambda ((g$V$14780$sFQex) (number->string (case-lambda ((g$V$14781$sFQex) (write (case-lambda (g$IGNORE$14782$sFQex (cdr (case-lambda ((g$V$14783$sFQex) (fx+ (case-lambda ((g$V$14784$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14784$sFQex g$V$14783$sFQex))) g$n$7536$sFQex '2))) g$a$7537$sFQex))) g$V$14781$sFQex g$p$7531$sFQex))) g$V$14780$sFQex '16))) g$a$7537$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$14785$sFQex) (if g$T$14785$sFQex (car (case-lambda ((g$V$14786$sFQex) (number->string (case-lambda ((g$V$14787$sFQex) (write (case-lambda (g$IGNORE$14788$sFQex (cdr (case-lambda ((g$V$14789$sFQex) (fx+ (case-lambda ((g$V$14790$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14790$sFQex g$V$14789$sFQex))) g$n$7536$sFQex '2))) g$a$7537$sFQex))) g$V$14787$sFQex g$p$7531$sFQex))) g$V$14786$sFQex '10))) g$a$7537$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$14791$sFQex) (if g$T$14791$sFQex (g$write-char$7377$sFQex (case-lambda (g$IGNORE$14792$sFQex (fx+ (case-lambda ((g$V$14793$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14793$sFQex g$a$7537$sFQex))) g$n$7536$sFQex '2))) '#\~ g$p$7531$sFQex) (g$write-char$7377$sFQex (case-lambda (g$IGNORE$14794$sFQex (fx+ (case-lambda ((g$V$14795$sFQex) (g$loop$7535$sFQex g$C$14756$sFQex g$V$14795$sFQex g$a$7537$sFQex))) g$n$7536$sFQex '1))) g$c$7538$sFQex g$p$7531$sFQex)))) g$t$7539$sFQex '(#\~))))) g$t$7539$sFQex '(#\d))))) g$t$7539$sFQex '(#\x))))) g$t$7539$sFQex '(#\o))))) g$t$7539$sFQex '(#\b))))) g$t$7539$sFQex '(#\s))))) g$t$7539$sFQex '(#\a)))) g$C$14796$sFQex g$V$14799$sFQex))) g$cntl$7532$sFQex g$V$14798$sFQex))) g$n$7536$sFQex '1) (g$write-char$7377$sFQex (case-lambda (g$IGNORE$14800$sFQex (fx+ (case-lambda ((g$V$14801$sFQex) (g$loop$7535$sFQex g$C$14796$sFQex g$V$14801$sFQex g$a$7537$sFQex))) g$n$7536$sFQex '1))) g$c$7538$sFQex g$p$7531$sFQex))))))) g$C$14804$sFQex g$V$14806$sFQex))) g$cntl$7532$sFQex g$n$7536$sFQex) (void g$C$14804$sFQex)))) g$n$7536$sFQex g$nmax$7534$sFQex)))))) (case-lambda ((g$V$14809$sFQex) (g$V$14809$sFQex g$C$14808$sFQex '0 g$args$7533$sFQex))) uninitialized))) g$C$14810$sFQex g$V$14812$sFQex))) g$V$14811$sFQex '1))) g$cntl$7532$sFQex)))))) (library-letrec*-identity 'g$dofmt$7527$sFQex))) (g$printf$7528$sFQex g$printf$7550$sFQex ((case-lambda ((g$C$14820$sFQex) (g$C$14820$sFQex (case-lambda ((g$C$14813$sFQex g$control$7540$sFQex . g$args$7541$sFQex) (current-output-port (case-lambda ((g$V$14814$sFQex) (g$dofmt$7527$sFQex g$C$14813$sFQex g$V$14814$sFQex g$control$7540$sFQex g$args$7541$sFQex))))))))) (library-letrec*-identity 'g$printf$7528$sFQex))) (g$fprintf$7529$sFQex g$fprintf$7551$sFQex ((case-lambda ((g$C$14821$sFQex) (g$C$14821$sFQex (case-lambda ((g$C$14815$sFQex g$p$7542$sFQex g$control$7543$sFQex . g$args$7544$sFQex) (g$dofmt$7527$sFQex g$C$14815$sFQex g$p$7542$sFQex g$control$7543$sFQex g$args$7544$sFQex)))))) (library-letrec*-identity 'g$fprintf$7529$sFQex))) (g$format$7530$sFQex g$format$7552$sFQex ((case-lambda ((g$C$14822$sFQex) (g$C$14822$sFQex (case-lambda ((g$C$14818$sFQex g$control$7545$sFQex . g$args$7546$sFQex) (call-with-values g$C$14818$sFQex g$open-string-output-port$7329$sFQex (case-lambda ((g$C$14816$sFQex g$p$7547$sFQex g$c$7548$sFQex) (g$dofmt$7527$sFQex (case-lambda (g$IGNORE$14817$sFQex (g$c$7548$sFQex g$C$14816$sFQex))) g$p$7547$sFQex g$control$7545$sFQex g$args$7546$sFQex))))))))) (library-letrec*-identity 'g$format$7530$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme trace) ((g$make-traced-macro$7553$sFQex g$make-traced-macro$7556$sFQex ((case-lambda ((g$C$14828$sFQex) (g$C$14828$sFQex (case-lambda ((g$C$14823$sFQex g$name$7554$sFQex g$x$7555$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$14824$sFQex) (if g$T$14824$sFQex (make-traced-procedure g$C$14823$sFQex g$name$7554$sFQex g$x$7555$sFQex g$syntax->datum$12595$sFQex) (g$variable-transformer?$12417$sFQex (case-lambda ((g$T$14825$sFQex) (if g$T$14825$sFQex (g$variable-transformer-procedure$12418$sFQex (case-lambda ((g$V$14826$sFQex) (make-traced-procedure (case-lambda ((g$V$14827$sFQex) (g$make-variable-transformer$12415$sFQex g$C$14823$sFQex g$V$14827$sFQex))) g$name$7554$sFQex g$V$14826$sFQex g$syntax->datum$12595$sFQex))) g$x$7555$sFQex) (g$C$14823$sFQex g$x$7555$sFQex)))) g$x$7555$sFQex)))) g$x$7555$sFQex)))))) (library-letrec*-identity 'g$make-traced-macro$7553$sFQex)))) (void identity-for-cps))(library-letrec* (ironscheme cps) ((g$cps/generate-reference$7557$sFQex g$cps/generate-reference$7822$sFQex ((case-lambda ((g$C$15147$sFQex) (g$C$15147$sFQex (case-lambda ((g$C$14829$sFQex g$variable$7610$sFQex) (g$make-reference$7587$sFQex (case-lambda ((g$V$14830$sFQex) (g$cps/generate-operand$7561$sFQex g$C$14829$sFQex g$V$14830$sFQex))) g$variable$7610$sFQex)))))) (library-letrec*-identity 'g$cps/generate-reference$7557$sFQex))) (g$cps/generate-literal$7558$sFQex g$cps/generate-literal$7823$sFQex ((case-lambda ((g$C$15148$sFQex) (g$C$15148$sFQex (case-lambda ((g$C$14831$sFQex g$datum$7611$sFQex) (g$make-literal$7586$sFQex (case-lambda ((g$V$14832$sFQex) (g$cps/generate-operand$7561$sFQex g$C$14831$sFQex g$V$14832$sFQex))) g$datum$7611$sFQex)))))) (library-letrec*-identity 'g$cps/generate-literal$7558$sFQex))) (g$cps/generate-abstraction$7559$sFQex g$cps/generate-abstraction$7824$sFQex ((case-lambda ((g$C$15149$sFQex) (g$C$15149$sFQex (case-lambda ((g$C$14835$sFQex g$bvl$7612$sFQex g$body-generator$7613$sFQex) (g$make-user-abstraction$7588$sFQex (case-lambda ((g$V$14836$sFQex) (g$cps/generate-operand$7561$sFQex g$C$14835$sFQex g$V$14836$sFQex))) g$bvl$7612$sFQex (case-lambda ((g$C$14833$sFQex g$continuation-variable$7614$sFQex) (g$variable-continuator$7574$sFQex (case-lambda ((g$V$14834$sFQex) (g$body-generator$7613$sFQex g$C$14833$sFQex g$V$14834$sFQex))) g$continuation-variable$7614$sFQex))))))))) (library-letrec*-identity 'g$cps/generate-abstraction$7559$sFQex))) (g$cps/generate-abstractions$7560$sFQex g$cps/generate-abstractions$7825$sFQex ((case-lambda ((g$C$15150$sFQex) (g$C$15150$sFQex (case-lambda ((g$C$14840$sFQex g$bvls$7615$sFQex g$body-generators$7616$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$14841$sFQex) (g$make-user-abstractions$7589$sFQex (case-lambda ((g$V$14842$sFQex) (g$cps/generate-operand$7561$sFQex g$C$14840$sFQex g$V$14842$sFQex))) g$bvls$7615$sFQex g$V$14841$sFQex))) (case-lambda ((g$C$14839$sFQex g$body-generator$7617$sFQex) (g$C$14839$sFQex (case-lambda ((g$C$14837$sFQex g$continuation-variable$7618$sFQex) (g$variable-continuator$7574$sFQex (case-lambda ((g$V$14838$sFQex) (g$body-generator$7617$sFQex g$C$14837$sFQex g$V$14838$sFQex))) g$continuation-variable$7618$sFQex)))))) g$body-generators$7616$sFQex)))))) (library-letrec*-identity 'g$cps/generate-abstractions$7560$sFQex))) (g$cps/generate-operand$7561$sFQex g$cps/generate-operand$7826$sFQex ((case-lambda ((g$C$15151$sFQex) (g$C$15151$sFQex (case-lambda ((g$C$14844$sFQex g$operand$7619$sFQex) (g$C$14844$sFQex (case-lambda ((g$C$14843$sFQex g$continuator$7620$sFQex) (g$continue-with-operand$7577$sFQex g$C$14843$sFQex g$continuator$7620$sFQex g$operand$7619$sFQex))))))))) (library-letrec*-identity 'g$cps/generate-operand$7561$sFQex))) (g$cps/generate-conditional$7562$sFQex g$cps/generate-conditional$7827$sFQex ((case-lambda ((g$C$15152$sFQex) (g$C$15152$sFQex (case-lambda ((g$C$14855$sFQex g$condition-generator$7621$sFQex g$consequent-generator$7622$sFQex g$alternative-generator$7623$sFQex) (g$C$14855$sFQex (case-lambda ((g$C$14854$sFQex g$continuator$7624$sFQex) ((case-lambda ((g$C$14853$sFQex g$if-variable$7625$sFQex) (begin (set! g$if-variable$7625$sFQex (case-lambda ((g$C$14850$sFQex g$continuation-variable$7627$sFQex) (g$variable-continuator$7574$sFQex (case-lambda ((g$V$14851$sFQex) ((case-lambda ((g$C$14848$sFQex g$continuator*$7628$sFQex) (g$conditional-continuator$7573$sFQex (case-lambda ((g$V$14849$sFQex) (g$condition-generator$7621$sFQex g$C$14848$sFQex g$V$14849$sFQex))) (case-lambda ((g$C$14845$sFQex g$condition$7629$sFQex) (g$alternative-generator$7623$sFQex (case-lambda ((g$V$14846$sFQex) (g$consequent-generator$7622$sFQex (case-lambda ((g$V$14847$sFQex) (g$make-conditional$7596$sFQex g$C$14845$sFQex g$condition$7629$sFQex g$V$14847$sFQex g$V$14846$sFQex))) g$continuator*$7628$sFQex))) g$continuator*$7628$sFQex)))))) g$C$14850$sFQex g$V$14851$sFQex))) g$continuation-variable$7627$sFQex)))) (g$reify-continuation*$7579$sFQex g$C$14853$sFQex g$continuator$7624$sFQex g$if-variable$7625$sFQex (case-lambda ((g$C$14852$sFQex g$continuation-abstraction$7626$sFQex) (g$make-conditional-join$7597$sFQex g$C$14852$sFQex g$continuation-abstraction$7626$sFQex g$if-variable$7625$sFQex))))))) g$C$14854$sFQex uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-conditional$7562$sFQex))) (g$cps/generate-recursive-bind$7563$sFQex g$cps/generate-recursive-bind$7828$sFQex ((case-lambda ((g$C$15153$sFQex) (g$C$15153$sFQex (case-lambda ((g$C$14863$sFQex g$variables$7630$sFQex g$generators$7631$sFQex g$body-generator$7632$sFQex) (g$C$14863$sFQex (case-lambda ((g$C$14859$sFQex g$continuator$7633$sFQex) (g$reified-continuator$7576$sFQex (case-lambda ((g$V$14860$sFQex) (g$body-generator$7632$sFQex (case-lambda ((g$V$14861$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$14862$sFQex) (g$make-recursive-bind$7591$sFQex g$C$14859$sFQex g$variables$7630$sFQex g$V$14862$sFQex g$V$14861$sFQex))) (case-lambda ((g$C$14858$sFQex g$generator$7634$sFQex) (g$C$14858$sFQex (case-lambda ((g$C$14856$sFQex g$continuation-variable$7635$sFQex) (g$variable-continuator$7574$sFQex (case-lambda ((g$V$14857$sFQex) (g$generator$7634$sFQex g$C$14856$sFQex g$V$14857$sFQex))) g$continuation-variable$7635$sFQex)))))) g$generators$7631$sFQex))) g$V$14860$sFQex))) g$continuator$7633$sFQex))))))))) (library-letrec*-identity 'g$cps/generate-recursive-bind$7563$sFQex))) (g$cps/generate-recursive*-bind$7564$sFQex g$cps/generate-recursive*-bind$7829$sFQex ((case-lambda ((g$C$15154$sFQex) (g$C$15154$sFQex (case-lambda ((g$C$14871$sFQex g$variables$7636$sFQex g$generators$7637$sFQex g$body-generator$7638$sFQex) (g$C$14871$sFQex (case-lambda ((g$C$14867$sFQex g$continuator$7639$sFQex) (g$reified-continuator$7576$sFQex (case-lambda ((g$V$14868$sFQex) (g$body-generator$7638$sFQex (case-lambda ((g$V$14869$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$14870$sFQex) (g$make-recursive*-bind$7592$sFQex g$C$14867$sFQex g$variables$7636$sFQex g$V$14870$sFQex g$V$14869$sFQex))) (case-lambda ((g$C$14866$sFQex g$generator$7640$sFQex) (g$C$14866$sFQex (case-lambda ((g$C$14864$sFQex g$continuation-variable$7641$sFQex) (g$variable-continuator$7574$sFQex (case-lambda ((g$V$14865$sFQex) (g$generator$7640$sFQex g$C$14864$sFQex g$V$14865$sFQex))) g$continuation-variable$7641$sFQex)))))) g$generators$7637$sFQex))) g$V$14868$sFQex))) g$continuator$7639$sFQex))))))))) (library-letrec*-identity 'g$cps/generate-recursive*-bind$7564$sFQex))) (g$cps/generate-recursive*-library-bind$7565$sFQex g$cps/generate-recursive*-library-bind$7830$sFQex ((case-lambda ((g$C$15155$sFQex) (g$C$15155$sFQex (case-lambda ((g$C$14879$sFQex g$name$7642$sFQex g$variables$7643$sFQex g$variables*$7644$sFQex g$generators$7645$sFQex g$body-generator$7646$sFQex) (g$C$14879$sFQex (case-lambda ((g$C$14875$sFQex g$continuator$7647$sFQex) (g$reified-continuator$7576$sFQex (case-lambda ((g$V$14876$sFQex) (g$body-generator$7646$sFQex (case-lambda ((g$V$14877$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$14878$sFQex) (g$make-recursive*-library-bind$7593$sFQex g$C$14875$sFQex g$name$7642$sFQex g$variables$7643$sFQex g$variables*$7644$sFQex g$V$14878$sFQex g$V$14877$sFQex))) (case-lambda ((g$C$14874$sFQex g$generator$7648$sFQex) (g$C$14874$sFQex (case-lambda ((g$C$14872$sFQex g$continuation-variable$7649$sFQex) (g$variable-continuator$7574$sFQex (case-lambda ((g$V$14873$sFQex) (g$generator$7648$sFQex g$C$14872$sFQex g$V$14873$sFQex))) g$continuation-variable$7649$sFQex)))))) g$generators$7645$sFQex))) g$V$14876$sFQex))) g$continuator$7647$sFQex))))))))) (library-letrec*-identity 'g$cps/generate-recursive*-library-bind$7565$sFQex))) (g$cps/generate-sequence$7566$sFQex g$cps/generate-sequence$7831$sFQex ((case-lambda ((g$C$15156$sFQex) (g$C$15156$sFQex (case-lambda ((g$C$14892$sFQex g$generators$7650$sFQex) (g$C$14892$sFQex (case-lambda ((g$C$14890$sFQex g$continuator$7651$sFQex) ((case-lambda ((g$C$14889$sFQex g$recur$7652$sFQex) ((case-lambda ((g$C$14881$sFQex g$recur$14880$sFQex) (begin (set! g$recur$7652$sFQex g$recur$14880$sFQex) (g$C$14881$sFQex g$recur$7652$sFQex)))) g$C$14889$sFQex (case-lambda ((g$C$14885$sFQex g$generators$7653$sFQex) (cdr (case-lambda ((g$V$14886$sFQex) ((case-lambda ((g$C$14883$sFQex g$generators$7654$sFQex) (pair? (case-lambda ((g$T$14884$sFQex) (if g$T$14884$sFQex (g$effect-continuator$7572$sFQex g$C$14883$sFQex (case-lambda ((g$C$14882$sFQex) (g$recur$7652$sFQex g$C$14882$sFQex g$generators$7654$sFQex)))) (g$C$14883$sFQex g$continuator$7651$sFQex)))) g$generators$7654$sFQex))) (case-lambda ((g$V$14887$sFQex) (car (case-lambda ((g$V$14888$sFQex) (g$V$14888$sFQex g$C$14885$sFQex g$V$14887$sFQex))) g$generators$7653$sFQex))) g$V$14886$sFQex))) g$generators$7653$sFQex)))))) (case-lambda ((g$V$14891$sFQex) (g$V$14891$sFQex g$C$14890$sFQex g$generators$7650$sFQex))) uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-sequence$7566$sFQex))) (g$cps/generate-assignment$7567$sFQex g$cps/generate-assignment$7832$sFQex ((case-lambda ((g$C$15157$sFQex) (g$C$15157$sFQex (case-lambda ((g$C$14897$sFQex g$location$7655$sFQex g$expression-generator$7656$sFQex) (g$C$14897$sFQex (case-lambda ((g$C$14895$sFQex g$continuator$7657$sFQex) (g$operand-continuator$7571$sFQex (case-lambda ((g$V$14896$sFQex) (g$expression-generator$7656$sFQex g$C$14895$sFQex g$V$14896$sFQex))) (case-lambda ((g$C$14893$sFQex g$operand$7658$sFQex) (g$continue-with-operand$7577$sFQex (case-lambda ((g$V$14894$sFQex) (g$make-assignment$7599$sFQex g$C$14893$sFQex g$location$7655$sFQex g$operand$7658$sFQex g$V$14894$sFQex))) g$continuator$7657$sFQex '(cps-void))))))))))))) (library-letrec*-identity 'g$cps/generate-assignment$7567$sFQex))) (g$cps/generate-declaration$7568$sFQex g$cps/generate-declaration$7833$sFQex ((case-lambda ((g$C$15158$sFQex) (g$C$15158$sFQex (case-lambda ((g$C$14902$sFQex g$location$7659$sFQex g$expression-generator$7660$sFQex) (g$C$14902$sFQex (case-lambda ((g$C$14900$sFQex g$continuator$7661$sFQex) (g$operand-continuator$7571$sFQex (case-lambda ((g$V$14901$sFQex) (g$expression-generator$7660$sFQex g$C$14900$sFQex g$V$14901$sFQex))) (case-lambda ((g$C$14898$sFQex g$operand$7662$sFQex) (g$continue-with-operand$7577$sFQex (case-lambda ((g$V$14899$sFQex) (g$make-declaration$7600$sFQex g$C$14898$sFQex g$location$7659$sFQex g$operand$7662$sFQex g$V$14899$sFQex))) g$continuator$7661$sFQex '(cps-void))))))))))))) (library-letrec*-identity 'g$cps/generate-declaration$7568$sFQex))) (g$cps/generate-combination$7569$sFQex g$cps/generate-combination$7834$sFQex ((case-lambda ((g$C$15159$sFQex) (g$C$15159$sFQex (case-lambda ((g$C$14907$sFQex g$operator-generator$7663$sFQex g$operand-generators$7664$sFQex) (cons (case-lambda ((g$V$14908$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$14909$sFQex) (g$cps/generate-subproblems$7570$sFQex g$C$14907$sFQex g$V$14909$sFQex (case-lambda ((g$C$14903$sFQex g$operands$7665$sFQex g$continuator$7666$sFQex) (cdr (case-lambda ((g$V$14904$sFQex) (g$reify-continuation$7578$sFQex (case-lambda ((g$V$14905$sFQex) (car (case-lambda ((g$V$14906$sFQex) (g$make-combination$7594$sFQex g$C$14903$sFQex g$V$14906$sFQex g$V$14905$sFQex g$V$14904$sFQex))) g$operands$7665$sFQex))) g$continuator$7666$sFQex))) g$operands$7665$sFQex)))))) g$V$14908$sFQex))) g$operator-generator$7663$sFQex g$operand-generators$7664$sFQex)))))) (library-letrec*-identity 'g$cps/generate-combination$7569$sFQex))) (g$cps/generate-subproblems$7570$sFQex g$cps/generate-subproblems$7835$sFQex ((case-lambda ((g$C$15160$sFQex) (g$C$15160$sFQex (case-lambda ((g$C$14923$sFQex g$generators$7667$sFQex g$combiner$7668$sFQex) (g$C$14923$sFQex (case-lambda ((g$C$14921$sFQex g$continuator$7669$sFQex) ((case-lambda ((g$C$14920$sFQex g$recur$7670$sFQex) ((case-lambda ((g$C$14911$sFQex g$recur$14910$sFQex) (begin (set! g$recur$7670$sFQex g$recur$14910$sFQex) (g$C$14911$sFQex g$recur$7670$sFQex)))) g$C$14920$sFQex (case-lambda ((g$C$14915$sFQex g$generators$7671$sFQex g$operands$7672$sFQex) (pair? (case-lambda ((g$T$14916$sFQex) (if g$T$14916$sFQex (cdr (case-lambda ((g$V$14917$sFQex) ((case-lambda ((g$C$14914$sFQex g$generators$7673$sFQex) (g$operand-continuator$7571$sFQex g$C$14914$sFQex (case-lambda ((g$C$14912$sFQex g$operand$7674$sFQex) (cons (case-lambda ((g$V$14913$sFQex) (g$recur$7670$sFQex g$C$14912$sFQex g$generators$7673$sFQex g$V$14913$sFQex))) g$operand$7674$sFQex g$operands$7672$sFQex)))))) (case-lambda ((g$V$14918$sFQex) (car (case-lambda ((g$V$14919$sFQex) (g$V$14919$sFQex g$C$14915$sFQex g$V$14918$sFQex))) g$generators$7671$sFQex))) g$V$14917$sFQex))) g$generators$7671$sFQex) (g$combiner$7668$sFQex g$C$14915$sFQex g$operands$7672$sFQex g$continuator$7669$sFQex)))) g$generators$7671$sFQex)))))) (case-lambda ((g$V$14922$sFQex) (g$V$14922$sFQex g$C$14921$sFQex g$generators$7667$sFQex '()))) uninitialized))))))))) (library-letrec*-identity 'g$cps/generate-subproblems$7570$sFQex))) (g$operand-continuator$7571$sFQex g$operand-continuator$7836$sFQex ((case-lambda ((g$C$15161$sFQex) (g$C$15161$sFQex (case-lambda ((g$C$14925$sFQex g$generator$7675$sFQex) (g$C$14925$sFQex (case-lambda ((g$C$14924$sFQex g$if-operand$7676$sFQex g$if-effect$7677$sFQex g$if-conditional$7678$sFQex g$if-variable$7679$sFQex g$if-inline$7680$sFQex) (g$if-operand$7676$sFQex g$C$14924$sFQex g$generator$7675$sFQex))))))))) (library-letrec*-identity 'g$operand-continuator$7571$sFQex))) (g$effect-continuator$7572$sFQex g$effect-continuator$7837$sFQex ((case-lambda ((g$C$15162$sFQex) (g$C$15162$sFQex (case-lambda ((g$C$14927$sFQex g$generator$7681$sFQex) (g$C$14927$sFQex (case-lambda ((g$C$14926$sFQex g$if-operand$7682$sFQex g$if-effect$7683$sFQex g$if-conditional$7684$sFQex g$if-variable$7685$sFQex g$if-inline$7686$sFQex) (g$if-effect$7683$sFQex g$C$14926$sFQex g$generator$7681$sFQex))))))))) (library-letrec*-identity 'g$effect-continuator$7572$sFQex))) (g$conditional-continuator$7573$sFQex g$conditional-continuator$7838$sFQex ((case-lambda ((g$C$15163$sFQex) (g$C$15163$sFQex (case-lambda ((g$C$14929$sFQex g$generator$7687$sFQex) (g$C$14929$sFQex (case-lambda ((g$C$14928$sFQex g$if-operand$7688$sFQex g$if-effect$7689$sFQex g$if-conditional$7690$sFQex g$if-variable$7691$sFQex g$if-inline$7692$sFQex) (g$if-conditional$7690$sFQex g$C$14928$sFQex g$generator$7687$sFQex))))))))) (library-letrec*-identity 'g$conditional-continuator$7573$sFQex))) (g$variable-continuator$7574$sFQex g$variable-continuator$7839$sFQex ((case-lambda ((g$C$15164$sFQex) (g$C$15164$sFQex (case-lambda ((g$C$14931$sFQex g$variable$7693$sFQex) (g$C$14931$sFQex (case-lambda ((g$C$14930$sFQex g$if-operand$7694$sFQex g$if-effect$7695$sFQex g$if-conditional$7696$sFQex g$if-variable$7697$sFQex g$if-inline$7698$sFQex) (g$if-variable$7697$sFQex g$C$14930$sFQex g$variable$7693$sFQex))))))))) (library-letrec*-identity 'g$variable-continuator$7574$sFQex))) (g$inline-continuator$7575$sFQex g$inline-continuator$7840$sFQex ((case-lambda ((g$C$15165$sFQex) (g$C$15165$sFQex (case-lambda ((g$C$14933$sFQex g$continuation$7699$sFQex) (g$C$14933$sFQex (case-lambda ((g$C$14932$sFQex g$if-operand$7700$sFQex g$if-effect$7701$sFQex g$if-conditional$7702$sFQex g$if-variable$7703$sFQex g$if-inline$7704$sFQex) (g$if-inline$7704$sFQex g$C$14932$sFQex g$continuation$7699$sFQex))))))))) (library-letrec*-identity 'g$inline-continuator$7575$sFQex))) (g$reified-continuator$7576$sFQex g$reified-continuator$7841$sFQex ((case-lambda ((g$C$15166$sFQex) (g$C$15166$sFQex (case-lambda ((g$C$14935$sFQex g$continuator$7705$sFQex) (g$C$14935$sFQex (case-lambda ((g$C$14934$sFQex g$if-operand$7706$sFQex g$if-effect$7707$sFQex g$if-conditional$7708$sFQex g$if-variable$7709$sFQex g$if-inline$7710$sFQex) (g$reify-continuation*$7579$sFQex g$C$14934$sFQex g$continuator$7705$sFQex g$if-variable$7709$sFQex g$if-inline$7710$sFQex))))))))) (library-letrec*-identity 'g$reified-continuator$7576$sFQex))) (g$continue-with-operand$7577$sFQex g$continue-with-operand$7842$sFQex ((case-lambda ((g$C$15167$sFQex) (g$C$15167$sFQex (case-lambda ((g$C$14945$sFQex g$continuator$7711$sFQex g$operand$7712$sFQex) (g$continuator$7711$sFQex g$C$14945$sFQex (case-lambda ((g$C$14936$sFQex g$generator$7713$sFQex) (g$generator$7713$sFQex g$C$14936$sFQex g$operand$7712$sFQex))) (case-lambda ((g$C$14937$sFQex g$generator$7714$sFQex) (g$generator$7714$sFQex g$C$14937$sFQex))) (case-lambda ((g$C$14938$sFQex g$generator$7715$sFQex) (g$make-truth-test$7601$sFQex (case-lambda ((g$V$14939$sFQex) (g$generator$7715$sFQex g$C$14938$sFQex g$V$14939$sFQex))) g$operand$7712$sFQex))) (case-lambda ((g$C$14940$sFQex g$continuation-variable$7716$sFQex) (list (case-lambda ((g$V$14941$sFQex) (g$make-reference$7587$sFQex (case-lambda ((g$V$14942$sFQex) (g$make-return$7595$sFQex g$C$14940$sFQex g$V$14942$sFQex g$V$14941$sFQex))) g$continuation-variable$7716$sFQex))) g$operand$7712$sFQex))) (case-lambda ((g$C$14943$sFQex g$continuation-abstraction$7717$sFQex) (list (case-lambda ((g$V$14944$sFQex) (g$make-return$7595$sFQex g$C$14943$sFQex g$continuation-abstraction$7717$sFQex g$V$14944$sFQex))) g$operand$7712$sFQex))))))))) (library-letrec*-identity 'g$continue-with-operand$7577$sFQex))) (g$reify-continuation$7578$sFQex g$reify-continuation$7843$sFQex ((case-lambda ((g$C$15168$sFQex) (g$C$15168$sFQex (case-lambda ((g$C$14948$sFQex g$continuator$7718$sFQex) (g$continuator$7718$sFQex g$C$14948$sFQex g$operand-continuation-reifier$7581$sFQex g$effect-continuation-reifier$7583$sFQex g$conditional-continuation-reifier$7585$sFQex (case-lambda ((g$C$14946$sFQex g$variable$7719$sFQex) (g$make-reference$7587$sFQex g$C$14946$sFQex g$variable$7719$sFQex))) (case-lambda ((g$C$14947$sFQex g$continuation$7720$sFQex) (g$C$14947$sFQex g$continuation$7720$sFQex))))))))) (library-letrec*-identity 'g$reify-continuation$7578$sFQex))) (g$reify-continuation*$7579$sFQex g$reify-continuation*$7844$sFQex ((case-lambda ((g$C$15169$sFQex) (g$C$15169$sFQex (case-lambda ((g$C$14949$sFQex g$continuator$7721$sFQex g$if-variable$7722$sFQex g$if-inline$7723$sFQex) (g$conditional-continuation-reifier*$7584$sFQex (case-lambda ((g$V$14950$sFQex) (g$effect-continuation-reifier*$7582$sFQex (case-lambda ((g$V$14951$sFQex) (g$operand-continuation-reifier*$7580$sFQex (case-lambda ((g$V$14952$sFQex) (g$continuator$7721$sFQex g$C$14949$sFQex g$V$14952$sFQex g$V$14951$sFQex g$V$14950$sFQex g$if-variable$7722$sFQex g$if-inline$7723$sFQex))) g$if-inline$7723$sFQex))) g$if-inline$7723$sFQex))) g$if-inline$7723$sFQex)))))) (library-letrec*-identity 'g$reify-continuation*$7579$sFQex))) (g$operand-continuation-reifier*$7580$sFQex g$operand-continuation-reifier*$7845$sFQex ((case-lambda ((g$C$15170$sFQex) (g$C$15170$sFQex (case-lambda ((g$C$14960$sFQex g$receiver$7724$sFQex) (g$C$14960$sFQex (case-lambda ((g$C$14957$sFQex g$generator$7725$sFQex) (g$generate-variable$7602$sFQex (case-lambda ((g$V$14958$sFQex) ((case-lambda ((g$C$14953$sFQex g$variable$7726$sFQex) (g$make-reference$7587$sFQex (case-lambda ((g$V$14954$sFQex) (g$generator$7725$sFQex (case-lambda ((g$V$14955$sFQex) (list (case-lambda ((g$V$14956$sFQex) (g$make-continuation-abstraction$7590$sFQex g$C$14953$sFQex g$V$14956$sFQex g$V$14955$sFQex))) g$variable$7726$sFQex))) g$V$14954$sFQex))) g$variable$7726$sFQex))) (case-lambda ((g$V$14959$sFQex) (g$receiver$7724$sFQex g$C$14957$sFQex g$V$14959$sFQex))) g$V$14958$sFQex))) 'V))))))))) (library-letrec*-identity 'g$operand-continuation-reifier*$7580$sFQex))) (g$operand-continuation-reifier$7581$sFQex g$operand-continuation-reifier$7846$sFQex ((case-lambda ((g$C$15171$sFQex) (g$operand-continuation-reifier*$7580$sFQex g$C$15171$sFQex values))) (library-letrec*-identity 'g$operand-continuation-reifier$7581$sFQex))) (g$effect-continuation-reifier*$7582$sFQex g$effect-continuation-reifier*$7847$sFQex ((case-lambda ((g$C$15172$sFQex) (g$C$15172$sFQex (case-lambda ((g$C$14966$sFQex g$receiver$7727$sFQex) (g$C$14966$sFQex (case-lambda ((g$C$14963$sFQex g$generator$7728$sFQex) (g$generate-variable$7602$sFQex (case-lambda ((g$V$14964$sFQex) ((case-lambda ((g$C$14961$sFQex g$variable$7729$sFQex) (g$generator$7728$sFQex (case-lambda ((g$V$14962$sFQex) (g$make-continuation-abstraction$7590$sFQex g$C$14961$sFQex g$variable$7729$sFQex g$V$14962$sFQex)))))) (case-lambda ((g$V$14965$sFQex) (g$receiver$7727$sFQex g$C$14963$sFQex g$V$14965$sFQex))) g$V$14964$sFQex))) 'IGNORE))))))))) (library-letrec*-identity 'g$effect-continuation-reifier*$7582$sFQex))) (g$effect-continuation-reifier$7583$sFQex g$effect-continuation-reifier$7848$sFQex ((case-lambda ((g$C$15173$sFQex) (g$effect-continuation-reifier*$7582$sFQex g$C$15173$sFQex values))) (library-letrec*-identity 'g$effect-continuation-reifier$7583$sFQex))) (g$conditional-continuation-reifier*$7584$sFQex g$conditional-continuation-reifier*$7849$sFQex ((case-lambda ((g$C$15174$sFQex) (g$C$15174$sFQex (case-lambda ((g$C$14975$sFQex g$receiver$7730$sFQex) (g$C$14975$sFQex (case-lambda ((g$C$14972$sFQex g$generator$7731$sFQex) (g$generate-variable$7602$sFQex (case-lambda ((g$V$14973$sFQex) ((case-lambda ((g$C$14967$sFQex g$variable$7732$sFQex) (g$make-reference$7587$sFQex (case-lambda ((g$V$14968$sFQex) (g$make-truth-test$7601$sFQex (case-lambda ((g$V$14969$sFQex) (g$generator$7731$sFQex (case-lambda ((g$V$14970$sFQex) (list (case-lambda ((g$V$14971$sFQex) (g$make-continuation-abstraction$7590$sFQex g$C$14967$sFQex g$V$14971$sFQex g$V$14970$sFQex))) g$variable$7732$sFQex))) g$V$14969$sFQex))) g$V$14968$sFQex))) g$variable$7732$sFQex))) (case-lambda ((g$V$14974$sFQex) (g$receiver$7730$sFQex g$C$14972$sFQex g$V$14974$sFQex))) g$V$14973$sFQex))) 'T))))))))) (library-letrec*-identity 'g$conditional-continuation-reifier*$7584$sFQex))) (g$conditional-continuation-reifier$7585$sFQex g$conditional-continuation-reifier$7850$sFQex ((case-lambda ((g$C$15175$sFQex) (g$conditional-continuation-reifier*$7584$sFQex g$C$15175$sFQex values))) (library-letrec*-identity 'g$conditional-continuation-reifier$7585$sFQex))) (g$make-literal$7586$sFQex g$make-literal$7851$sFQex ((case-lambda ((g$C$15176$sFQex) (g$C$15176$sFQex (case-lambda ((g$C$14976$sFQex g$datum$7733$sFQex) (list g$C$14976$sFQex 'quote g$datum$7733$sFQex)))))) (library-letrec*-identity 'g$make-literal$7586$sFQex))) (g$make-reference$7587$sFQex g$make-reference$7852$sFQex ((case-lambda ((g$C$15177$sFQex) (g$C$15177$sFQex (case-lambda ((g$C$14977$sFQex g$variable$7734$sFQex) (g$C$14977$sFQex g$variable$7734$sFQex)))))) (library-letrec*-identity 'g$make-reference$7587$sFQex))) (g$make-user-abstraction$7588$sFQex g$make-user-abstraction$7853$sFQex ((case-lambda ((g$C$15178$sFQex) (g$C$15178$sFQex (case-lambda ((g$C$14982$sFQex g$bvl$7735$sFQex g$body-constructor$7736$sFQex) (g$generate-variable$7602$sFQex (case-lambda ((g$V$14983$sFQex) ((case-lambda ((g$C$14978$sFQex g$continuation$7737$sFQex) (g$body-constructor$7736$sFQex (case-lambda ((g$V$14979$sFQex) (cons (case-lambda ((g$V$14980$sFQex) (list (case-lambda ((g$V$14981$sFQex) (list g$C$14978$sFQex 'case-lambda g$V$14981$sFQex))) g$V$14980$sFQex g$V$14979$sFQex))) g$continuation$7737$sFQex g$bvl$7735$sFQex))) g$continuation$7737$sFQex))) g$C$14982$sFQex g$V$14983$sFQex))) 'C)))))) (library-letrec*-identity 'g$make-user-abstraction$7588$sFQex))) (g$make-user-abstractions$7589$sFQex g$make-user-abstractions$7854$sFQex ((case-lambda ((g$C$15179$sFQex) (g$C$15179$sFQex (case-lambda ((g$C$14989$sFQex g$bvls$7738$sFQex g$body-constructors$7739$sFQex) (g$generate-variable$7602$sFQex (case-lambda ((g$V$14990$sFQex) ((case-lambda ((g$C$14987$sFQex g$continuation$7740$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$14988$sFQex) (cons g$C$14987$sFQex 'case-lambda g$V$14988$sFQex))) (case-lambda ((g$C$14984$sFQex g$bvl$7741$sFQex g$body-constructor$7742$sFQex) (g$body-constructor$7742$sFQex (case-lambda ((g$V$14985$sFQex) (cons (case-lambda ((g$V$14986$sFQex) (list g$C$14984$sFQex g$V$14986$sFQex g$V$14985$sFQex))) g$continuation$7740$sFQex g$bvl$7741$sFQex))) g$continuation$7740$sFQex))) g$bvls$7738$sFQex g$body-constructors$7739$sFQex))) g$C$14989$sFQex g$V$14990$sFQex))) 'C)))))) (library-letrec*-identity 'g$make-user-abstractions$7589$sFQex))) (g$make-continuation-abstraction$7590$sFQex g$make-continuation-abstraction$7855$sFQex ((case-lambda ((g$C$15180$sFQex) (g$C$15180$sFQex (case-lambda ((g$C$14991$sFQex g$bvl$7743$sFQex g$body$7744$sFQex) (list (case-lambda ((g$V$14992$sFQex) (list g$C$14991$sFQex 'case-lambda g$V$14992$sFQex))) g$bvl$7743$sFQex g$body$7744$sFQex)))))) (library-letrec*-identity 'g$make-continuation-abstraction$7590$sFQex))) (g$make-recursive-bind$7591$sFQex g$make-recursive-bind$7856$sFQex ((case-lambda ((g$C$15181$sFQex) (g$C$15181$sFQex (case-lambda ((g$C$14998$sFQex g$variables$7745$sFQex g$constructors$7746$sFQex g$body$7747$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$14999$sFQex) (list g$C$14998$sFQex 'letrec g$V$14999$sFQex g$body$7747$sFQex))) (case-lambda ((g$C$14993$sFQex g$variable$7748$sFQex g$constructor$7749$sFQex) (list (case-lambda ((g$V$14994$sFQex) (list (case-lambda ((g$V$14995$sFQex) (g$make-user-abstraction$7588$sFQex (case-lambda ((g$V$14996$sFQex) (list (case-lambda ((g$V$14997$sFQex) (list g$C$14993$sFQex g$variable$7748$sFQex g$V$14997$sFQex))) g$V$14996$sFQex g$V$14995$sFQex))) '() g$constructor$7749$sFQex))) 'letrec-identity g$V$14994$sFQex))) 'quote g$variable$7748$sFQex))) g$variables$7745$sFQex g$constructors$7746$sFQex)))))) (library-letrec*-identity 'g$make-recursive-bind$7591$sFQex))) (g$make-recursive*-bind$7592$sFQex g$make-recursive*-bind$7857$sFQex ((case-lambda ((g$C$15182$sFQex) (g$C$15182$sFQex (case-lambda ((g$C$15005$sFQex g$variables$7750$sFQex g$constructors$7751$sFQex g$body$7752$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15006$sFQex) (list g$C$15005$sFQex 'letrec* g$V$15006$sFQex g$body$7752$sFQex))) (case-lambda ((g$C$15000$sFQex g$variable$7753$sFQex g$constructor$7754$sFQex) (list (case-lambda ((g$V$15001$sFQex) (list (case-lambda ((g$V$15002$sFQex) (g$make-user-abstraction$7588$sFQex (case-lambda ((g$V$15003$sFQex) (list (case-lambda ((g$V$15004$sFQex) (list g$C$15000$sFQex g$variable$7753$sFQex g$V$15004$sFQex))) g$V$15003$sFQex g$V$15002$sFQex))) '() g$constructor$7754$sFQex))) 'letrec*-identity g$V$15001$sFQex))) 'quote g$variable$7753$sFQex))) g$variables$7750$sFQex g$constructors$7751$sFQex)))))) (library-letrec*-identity 'g$make-recursive*-bind$7592$sFQex))) (g$make-recursive*-library-bind$7593$sFQex g$make-recursive*-library-bind$7858$sFQex ((case-lambda ((g$C$15183$sFQex) (g$C$15183$sFQex (case-lambda ((g$C$15012$sFQex g$name$7755$sFQex g$variables$7756$sFQex g$variables*$7757$sFQex g$constructors$7758$sFQex g$body$7759$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15013$sFQex) (list g$C$15012$sFQex 'library-letrec* g$name$7755$sFQex g$V$15013$sFQex g$body$7759$sFQex))) (case-lambda ((g$C$15007$sFQex g$variable$7760$sFQex g$variable*$7761$sFQex g$constructor$7762$sFQex) (list (case-lambda ((g$V$15008$sFQex) (list (case-lambda ((g$V$15009$sFQex) (g$make-user-abstraction$7588$sFQex (case-lambda ((g$V$15010$sFQex) (list (case-lambda ((g$V$15011$sFQex) (list g$C$15007$sFQex g$variable$7760$sFQex g$variable*$7761$sFQex g$V$15011$sFQex))) g$V$15010$sFQex g$V$15009$sFQex))) '() g$constructor$7762$sFQex))) 'library-letrec*-identity g$V$15008$sFQex))) 'quote g$variable$7760$sFQex))) g$variables$7756$sFQex g$variables*$7757$sFQex g$constructors$7758$sFQex)))))) (library-letrec*-identity 'g$make-recursive*-library-bind$7593$sFQex))) (g$make-combination$7594$sFQex g$make-combination$7859$sFQex ((case-lambda ((g$C$15184$sFQex) (g$C$15184$sFQex (case-lambda ((g$C$15014$sFQex g$operator$7763$sFQex g$continuation$7764$sFQex g$operands$7765$sFQex) (cons (case-lambda ((g$V$15015$sFQex) (cons g$C$15014$sFQex g$operator$7763$sFQex g$V$15015$sFQex))) g$continuation$7764$sFQex g$operands$7765$sFQex)))))) (library-letrec*-identity 'g$make-combination$7594$sFQex))) (g$make-return$7595$sFQex g$make-return$7860$sFQex ((case-lambda ((g$C$15185$sFQex) (g$C$15185$sFQex (case-lambda ((g$C$15016$sFQex g$continuation$7766$sFQex g$operands$7767$sFQex) (cons g$C$15016$sFQex g$continuation$7766$sFQex g$operands$7767$sFQex)))))) (library-letrec*-identity 'g$make-return$7595$sFQex))) (g$make-conditional$7596$sFQex g$make-conditional$7861$sFQex ((case-lambda ((g$C$15186$sFQex) (g$C$15186$sFQex (case-lambda ((g$C$15017$sFQex g$condition$7768$sFQex g$consequent$7769$sFQex g$alternative$7770$sFQex) (list g$C$15017$sFQex 'if g$condition$7768$sFQex g$consequent$7769$sFQex g$alternative$7770$sFQex)))))) (library-letrec*-identity 'g$make-conditional$7596$sFQex))) (g$make-conditional-join$7597$sFQex g$make-conditional-join$7862$sFQex ((case-lambda ((g$C$15187$sFQex) (g$C$15187$sFQex (case-lambda ((g$C$15022$sFQex g$continuation$7771$sFQex g$constructor$7772$sFQex) (g$generate-variable$7602$sFQex (case-lambda ((g$V$15023$sFQex) ((case-lambda ((g$C$15018$sFQex g$variable$7773$sFQex) (g$constructor$7772$sFQex (case-lambda ((g$V$15019$sFQex) (list (case-lambda ((g$V$15020$sFQex) (list (case-lambda ((g$V$15021$sFQex) (g$make-let$7598$sFQex g$C$15018$sFQex g$V$15021$sFQex g$V$15020$sFQex g$V$15019$sFQex))) g$variable$7773$sFQex))) g$continuation$7771$sFQex))) g$variable$7773$sFQex))) g$C$15022$sFQex g$V$15023$sFQex))) 'J)))))) (library-letrec*-identity 'g$make-conditional-join$7597$sFQex))) (g$make-let$7598$sFQex g$make-let$7863$sFQex ((case-lambda ((g$C$15188$sFQex) (g$C$15188$sFQex (case-lambda ((g$C$15024$sFQex g$variables$7774$sFQex g$expressions$7775$sFQex g$body$7776$sFQex) (list (case-lambda ((g$V$15025$sFQex) (list (case-lambda ((g$V$15026$sFQex) (cons g$C$15024$sFQex g$V$15026$sFQex g$expressions$7775$sFQex))) 'case-lambda g$V$15025$sFQex))) g$variables$7774$sFQex g$body$7776$sFQex)))))) (library-letrec*-identity 'g$make-let$7598$sFQex))) (g$make-assignment$7599$sFQex g$make-assignment$7864$sFQex ((case-lambda ((g$C$15189$sFQex) (g$C$15189$sFQex (case-lambda ((g$C$15027$sFQex g$location$7777$sFQex g$operand$7778$sFQex g$expression$7779$sFQex) (list (case-lambda ((g$V$15028$sFQex) (list g$C$15027$sFQex 'begin g$V$15028$sFQex g$expression$7779$sFQex))) 'set! g$location$7777$sFQex g$operand$7778$sFQex)))))) (library-letrec*-identity 'g$make-assignment$7599$sFQex))) (g$make-declaration$7600$sFQex g$make-declaration$7865$sFQex ((case-lambda ((g$C$15190$sFQex) (g$C$15190$sFQex (case-lambda ((g$C$15029$sFQex g$location$7780$sFQex g$operand$7781$sFQex g$expression$7782$sFQex) (list (case-lambda ((g$V$15030$sFQex) (list g$C$15029$sFQex 'begin g$V$15030$sFQex g$expression$7782$sFQex))) 'define g$location$7780$sFQex g$operand$7781$sFQex)))))) (library-letrec*-identity 'g$make-declaration$7600$sFQex))) (g$make-truth-test$7601$sFQex g$make-truth-test$7866$sFQex ((case-lambda ((g$C$15191$sFQex) (g$C$15191$sFQex (case-lambda ((g$C$15031$sFQex g$operand$7783$sFQex) (g$C$15031$sFQex g$operand$7783$sFQex)))))) (library-letrec*-identity 'g$make-truth-test$7601$sFQex))) (g$generate-variable$7602$sFQex g$generate-variable$7867$sFQex ((case-lambda ((g$C$15192$sFQex) (g$C$15192$sFQex (case-lambda ((g$C$15032$sFQex g$name$7784$sFQex) (gensym g$C$15032$sFQex g$name$7784$sFQex)))))) (library-letrec*-identity 'g$generate-variable$7602$sFQex))) (g$parse$7603$sFQex g$parse$7868$sFQex ((case-lambda ((g$C$15193$sFQex) (g$C$15193$sFQex (case-lambda ((g$C$15113$sFQex g$x$7785$sFQex) (pair? (case-lambda ((g$T$15114$sFQex) (if g$T$15114$sFQex (car (case-lambda ((g$V$15115$sFQex) ((case-lambda ((g$C$15075$sFQex g$t$7786$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15076$sFQex) (if g$T$15076$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$15077$sFQex) (g$cps/generate-literal$7558$sFQex g$C$15075$sFQex g$V$15077$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15078$sFQex) (if g$T$15078$sFQex (g$cadddr$6195$sFQex (case-lambda ((g$V$15079$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15080$sFQex) (g$caddr$6183$sFQex (case-lambda ((g$V$15081$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15082$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15083$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15084$sFQex) (g$cps/generate-conditional$7562$sFQex g$C$15075$sFQex g$V$15084$sFQex g$V$15082$sFQex g$V$15080$sFQex))) g$V$15083$sFQex))) g$x$7785$sFQex))) g$V$15081$sFQex))) g$x$7785$sFQex))) g$V$15079$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15085$sFQex) (if g$T$15085$sFQex (cdr (case-lambda ((g$V$15086$sFQex) ((case-lambda ((g$C$15036$sFQex g$d$7787$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15037$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15038$sFQex) (g$cps/generate-abstractions$7560$sFQex g$C$15036$sFQex g$V$15038$sFQex g$V$15037$sFQex))) car g$d$7787$sFQex))) (case-lambda ((g$C$15033$sFQex g$e$7788$sFQex) (cdr (case-lambda ((g$V$15034$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15035$sFQex) (g$cps/generate-sequence$7566$sFQex g$C$15033$sFQex g$V$15035$sFQex))) g$parse$7603$sFQex g$V$15034$sFQex))) g$e$7788$sFQex))) g$d$7787$sFQex))) g$C$15075$sFQex g$V$15086$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15087$sFQex) (if g$T$15087$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$15088$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15089$sFQex) ((case-lambda ((g$C$15054$sFQex g$bindings$7789$sFQex g$body*$7790$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15055$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15056$sFQex) ((case-lambda ((g$C$15051$sFQex g$lhs*$7791$sFQex g$rhs*$7792$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15052$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15053$sFQex) ((case-lambda ((g$C$15048$sFQex g$t*$7793$sFQex g$tmps$7794$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15049$sFQex) ((case-lambda ((g$C$15039$sFQex g$s*$7795$sFQex) (append (case-lambda ((g$V$15040$sFQex) (cons (case-lambda ((g$V$15041$sFQex) (list (case-lambda ((g$V$15042$sFQex) (cons (case-lambda ((g$V$15043$sFQex) (list (case-lambda ((g$V$15044$sFQex) (list (case-lambda ((g$V$15045$sFQex) (cons (case-lambda ((g$V$15046$sFQex) (g$parse$7603$sFQex g$C$15039$sFQex g$V$15046$sFQex))) g$V$15045$sFQex g$tmps$7794$sFQex))) 'case-lambda g$V$15044$sFQex))) g$lhs*$7791$sFQex g$V$15043$sFQex))) g$V$15042$sFQex g$rhs*$7792$sFQex))) 'case-lambda g$V$15041$sFQex))) g$t*$7793$sFQex g$V$15040$sFQex))) g$s*$7795$sFQex g$body*$7790$sFQex))) g$C$15048$sFQex g$V$15049$sFQex))) (case-lambda ((g$C$15047$sFQex g$i$7796$sFQex g$t$7797$sFQex) (list g$C$15047$sFQex 'set! g$i$7796$sFQex g$t$7797$sFQex))) g$lhs*$7791$sFQex g$t*$7793$sFQex))) g$C$15051$sFQex g$V$15053$sFQex g$V$15052$sFQex))) gensym g$lhs*$7791$sFQex))) (case-lambda ((g$C$15050$sFQex g$x$7798$sFQex) (g$C$15050$sFQex 'uninitialized))) g$lhs*$7791$sFQex))) g$C$15054$sFQex g$V$15056$sFQex g$V$15055$sFQex))) car g$bindings$7789$sFQex))) g$cadr$6177$sFQex g$bindings$7789$sFQex))) g$C$15075$sFQex g$V$15089$sFQex g$V$15088$sFQex))) g$x$7785$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15090$sFQex) (if g$T$15090$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$15091$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15092$sFQex) ((case-lambda ((g$C$15061$sFQex g$bindings$7799$sFQex g$body*$7800$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15062$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15063$sFQex) ((case-lambda ((g$C$15057$sFQex g$lhs*$7801$sFQex g$rhs*$7802$sFQex) (cons (case-lambda ((g$V$15058$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15059$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15060$sFQex) (g$cps/generate-recursive*-bind$7564$sFQex g$C$15057$sFQex g$lhs*$7801$sFQex g$V$15060$sFQex g$V$15059$sFQex))) g$parse$7603$sFQex g$rhs*$7802$sFQex))) g$V$15058$sFQex))) 'begin g$body*$7800$sFQex))) g$C$15061$sFQex g$V$15063$sFQex g$V$15062$sFQex))) car g$bindings$7799$sFQex))) g$cadr$6177$sFQex g$bindings$7799$sFQex))) g$C$15075$sFQex g$V$15092$sFQex g$V$15091$sFQex))) g$x$7785$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15093$sFQex) (if g$T$15093$sFQex (cdr (case-lambda ((g$V$15094$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15095$sFQex) ((case-lambda ((g$C$15072$sFQex g$name$7803$sFQex g$x$7804$sFQex) (g$cddr$6179$sFQex (case-lambda ((g$V$15073$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15074$sFQex) ((case-lambda ((g$C$15068$sFQex g$bindings$7805$sFQex g$body*$7806$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15069$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15070$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15071$sFQex) ((case-lambda ((g$C$15064$sFQex g$lhs*$7807$sFQex g$lhs**$7808$sFQex g$rhs*$7809$sFQex) (cons (case-lambda ((g$V$15065$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15066$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15067$sFQex) (g$cps/generate-recursive*-library-bind$7565$sFQex g$C$15064$sFQex g$name$7803$sFQex g$lhs*$7807$sFQex g$lhs**$7808$sFQex g$V$15067$sFQex g$V$15066$sFQex))) g$parse$7603$sFQex g$rhs*$7809$sFQex))) g$V$15065$sFQex))) 'begin g$body*$7806$sFQex))) g$C$15068$sFQex g$V$15071$sFQex g$V$15070$sFQex g$V$15069$sFQex))) car g$bindings$7805$sFQex))) g$cadr$6177$sFQex g$bindings$7805$sFQex))) g$caddr$6183$sFQex g$bindings$7805$sFQex))) g$C$15072$sFQex g$V$15074$sFQex g$V$15073$sFQex))) g$x$7804$sFQex))) g$x$7804$sFQex))) g$C$15075$sFQex g$V$15095$sFQex g$V$15094$sFQex))) g$x$7785$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15096$sFQex) (if g$T$15096$sFQex (cdr (case-lambda ((g$V$15097$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15098$sFQex) (g$cps/generate-sequence$7566$sFQex g$C$15075$sFQex g$V$15098$sFQex))) g$parse$7603$sFQex g$V$15097$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15099$sFQex) (if g$T$15099$sFQex (g$caddr$6183$sFQex (case-lambda ((g$V$15100$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15101$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15102$sFQex) (g$cps/generate-assignment$7567$sFQex g$C$15075$sFQex g$V$15102$sFQex g$V$15101$sFQex))) g$x$7785$sFQex))) g$V$15100$sFQex))) g$x$7785$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15103$sFQex) (if g$T$15103$sFQex (g$caddr$6183$sFQex (case-lambda ((g$V$15104$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15105$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15106$sFQex) (g$cps/generate-declaration$7568$sFQex g$C$15075$sFQex g$V$15106$sFQex g$V$15105$sFQex))) g$x$7785$sFQex))) g$V$15104$sFQex))) g$x$7785$sFQex) (list? (case-lambda ((g$T$15107$sFQex) (if g$T$15107$sFQex (cdr (case-lambda ((g$V$15108$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15109$sFQex) (car (case-lambda ((g$V$15110$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15111$sFQex) (g$cps/generate-combination$7569$sFQex g$C$15075$sFQex g$V$15111$sFQex g$V$15109$sFQex))) g$V$15110$sFQex))) g$x$7785$sFQex))) g$parse$7603$sFQex g$V$15108$sFQex))) g$x$7785$sFQex) (list? (case-lambda ((g$V$15112$sFQex) (g$error$6457$sFQex g$C$15075$sFQex 'rewrite '"invalid form ~s ~s" g$x$7785$sFQex g$V$15112$sFQex))) g$x$7785$sFQex)))) g$x$7785$sFQex)))) g$t$7786$sFQex '(define))))) g$t$7786$sFQex '(set!))))) g$t$7786$sFQex '(begin))))) g$t$7786$sFQex '(library-letrec*))))) g$t$7786$sFQex '(letrec*))))) g$t$7786$sFQex '(letrec))))) g$t$7786$sFQex '(case-lambda))))) g$t$7786$sFQex '(if))))) g$t$7786$sFQex '(quote)))) g$C$15113$sFQex g$V$15115$sFQex))) g$x$7785$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$15116$sFQex) (if g$T$15116$sFQex (g$cps/generate-reference$7557$sFQex g$C$15113$sFQex g$x$7785$sFQex) (g$cps/generate-literal$7558$sFQex g$C$15113$sFQex g$x$7785$sFQex)))) g$x$7785$sFQex)))) g$x$7785$sFQex)))))) (library-letrec*-identity 'g$parse$7603$sFQex))) (g$starts-with?$7604$sFQex g$starts-with?$7869$sFQex ((case-lambda ((g$C$15194$sFQex) (g$C$15194$sFQex (case-lambda ((g$C$15117$sFQex g$str$7810$sFQex g$sub$7811$sFQex) (g$C$15117$sFQex (clr-call-internal 'system.string 'startswith g$str$7810$sFQex g$sub$7811$sFQex))))))) (library-letrec*-identity 'g$starts-with?$7604$sFQex))) (g$ends-with?$7605$sFQex g$ends-with?$7870$sFQex ((case-lambda ((g$C$15195$sFQex) (g$C$15195$sFQex (case-lambda ((g$C$15118$sFQex g$str$7812$sFQex g$sub$7813$sFQex) (g$C$15118$sFQex (clr-call-internal 'system.string 'endswith g$str$7812$sFQex g$sub$7813$sFQex))))))) (library-letrec*-identity 'g$ends-with?$7605$sFQex))) (g$clr-generator?$7606$sFQex g$clr-generator?$7871$sFQex ((case-lambda ((g$C$15196$sFQex) (g$C$15196$sFQex (case-lambda ((g$C$15121$sFQex g$o$7814$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$15122$sFQex) (if g$T$15122$sFQex (symbol->string (case-lambda ((g$V$15123$sFQex) ((case-lambda ((g$C$15119$sFQex g$o$7815$sFQex) (g$starts-with?$7604$sFQex (case-lambda ((g$T$15120$sFQex) (if g$T$15120$sFQex (g$ends-with?$7605$sFQex g$C$15119$sFQex g$o$7815$sFQex '"-internal") (g$C$15119$sFQex '#f)))) g$o$7815$sFQex '"clr-"))) g$C$15121$sFQex g$V$15123$sFQex))) g$o$7814$sFQex) (g$C$15121$sFQex '#f)))) g$o$7814$sFQex)))))) (library-letrec*-identity 'g$clr-generator?$7606$sFQex))) (g$fix-primitives$7607$sFQex g$fix-primitives$7872$sFQex ((case-lambda ((g$C$15197$sFQex) (g$C$15197$sFQex (case-lambda ((g$C$15137$sFQex g$e$7816$sFQex) ((case-lambda ((g$J$15140$sFQex) (pair? (case-lambda ((g$T$15141$sFQex) (if g$T$15141$sFQex (list? g$J$15140$sFQex g$e$7816$sFQex) (g$J$15140$sFQex '#f)))) g$e$7816$sFQex))) (case-lambda ((g$T$15138$sFQex) (if g$T$15138$sFQex (car (case-lambda ((g$V$15139$sFQex) ((case-lambda ((g$C$15124$sFQex g$o$7817$sFQex) (eq? (case-lambda ((g$T$15125$sFQex) (if g$T$15125$sFQex (g$C$15124$sFQex g$e$7816$sFQex) (g$clr-generator?$7606$sFQex (case-lambda ((g$T$15126$sFQex) (if g$T$15126$sFQex (cdr (case-lambda ((g$V$15127$sFQex) (pair? (case-lambda ((g$T$15128$sFQex) (if g$T$15128$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$15129$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15130$sFQex) (cons (case-lambda ((g$V$15131$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15132$sFQex) (g$fix-primitives$7607$sFQex (case-lambda ((g$V$15133$sFQex) (list g$C$15124$sFQex g$V$15133$sFQex g$V$15131$sFQex))) g$V$15132$sFQex))) g$e$7816$sFQex))) g$o$7817$sFQex g$V$15130$sFQex))) g$fix-primitives$7607$sFQex g$V$15129$sFQex))) g$e$7816$sFQex) (g$C$15124$sFQex g$e$7816$sFQex)))) g$V$15127$sFQex))) g$e$7816$sFQex) (cdr (case-lambda ((g$V$15134$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15135$sFQex) (g$fix-primitives$7607$sFQex (case-lambda ((g$V$15136$sFQex) (cons g$C$15124$sFQex g$V$15136$sFQex g$V$15135$sFQex))) g$o$7817$sFQex))) g$fix-primitives$7607$sFQex g$V$15134$sFQex))) g$e$7816$sFQex)))) g$o$7817$sFQex)))) g$o$7817$sFQex 'quote))) g$C$15137$sFQex g$V$15139$sFQex))) g$e$7816$sFQex) (g$C$15137$sFQex g$e$7816$sFQex)))))))))) (library-letrec*-identity 'g$fix-primitives$7607$sFQex))) (g$parse->cps$7608$sFQex g$parse->cps$7873$sFQex ((case-lambda ((g$C$15198$sFQex) (g$C$15198$sFQex (case-lambda ((g$C$15142$sFQex g$e$7818$sFQex g$var$7819$sFQex) (g$variable-continuator$7574$sFQex (case-lambda ((g$V$15143$sFQex) (g$parse$7603$sFQex (case-lambda ((g$V$15144$sFQex) (g$V$15144$sFQex g$C$15142$sFQex g$V$15143$sFQex))) g$e$7818$sFQex))) g$var$7819$sFQex)))))) (library-letrec*-identity 'g$parse->cps$7608$sFQex))) (g$convert->cps$7609$sFQex g$convert->cps$7874$sFQex ((case-lambda ((g$C$15199$sFQex) (g$C$15199$sFQex (case-lambda ((g$C$15145$sFQex g$e$7820$sFQex g$var$7821$sFQex) (g$parse->cps$7608$sFQex (case-lambda ((g$V$15146$sFQex) (g$fix-primitives$7607$sFQex g$C$15145$sFQex g$V$15146$sFQex))) g$e$7820$sFQex g$var$7821$sFQex)))))) (library-letrec*-identity 'g$convert->cps$7609$sFQex)))) (void identity-for-cps))(library-letrec* (psyntax compat) ((g$library-version-mismatch-warning$7875$sFQex g$library-version-mismatch-warning$7976$sFQex ((case-lambda ((g$C$15234$sFQex) (g$C$15234$sFQex (case-lambda ((g$C$15200$sFQex g$name$7950$sFQex g$depname$7951$sFQex g$filename$7952$sFQex) (current-error-port (case-lambda ((g$V$15201$sFQex) (g$fprintf$7551$sFQex g$C$15200$sFQex g$V$15201$sFQex '"WARNING: library ~s has an inconsistent dependency on library ~s; file ~s will be recompiled from source.\n" g$name$7950$sFQex g$depname$7951$sFQex g$filename$7952$sFQex))))))))) (library-letrec*-identity 'g$library-version-mismatch-warning$7875$sFQex))) (g$file-locator-resolution-error$7876$sFQex g$file-locator-resolution-error$7977$sFQex ((case-lambda ((g$C$15235$sFQex) (g$C$15235$sFQex (case-lambda ((g$C$15217$sFQex g$libname$7953$sFQex g$failed-list$7954$sFQex) ((case-lambda ((g$C$15202$sFQex g$9054$7955$sFQex g$9056$7956$sFQex g$9055$7957$sFQex g$9053$7958$sFQex g$make-library-resolution-condition$7959$sFQex g$9051$7960$sFQex g$9052$7961$sFQex g$library-resolution-condition?$7962$sFQex g$condition-library$7963$sFQex g$condition-files$7964$sFQex) (make-record-type-descriptor (case-lambda ((g$V$15203$sFQex) (begin (set! g$9054$7955$sFQex g$V$15203$sFQex) (begin (set! g$9056$7956$sFQex '#f) (make-record-constructor-descriptor (case-lambda ((g$V$15204$sFQex) (begin (set! g$9055$7957$sFQex g$V$15204$sFQex) (record-predicate (case-lambda ((g$V$15205$sFQex) (begin (set! g$9053$7958$sFQex g$V$15205$sFQex) (record-constructor (case-lambda ((g$V$15206$sFQex) (begin (set! g$make-library-resolution-condition$7959$sFQex g$V$15206$sFQex) (record-accessor (case-lambda ((g$V$15207$sFQex) (begin (set! g$9051$7960$sFQex g$V$15207$sFQex) (record-accessor (case-lambda ((g$V$15208$sFQex) (begin (set! g$9052$7961$sFQex g$V$15208$sFQex) (condition-predicate (case-lambda ((g$V$15209$sFQex) (begin (set! g$library-resolution-condition?$7962$sFQex g$V$15209$sFQex) (condition-accessor (case-lambda ((g$V$15210$sFQex) (begin (set! g$condition-library$7963$sFQex g$V$15210$sFQex) (condition-accessor (case-lambda ((g$V$15211$sFQex) (begin (set! g$condition-files$7964$sFQex g$V$15211$sFQex) (g$make-library-resolution-condition$7959$sFQex (case-lambda ((g$V$15212$sFQex) (g$make-message-condition$6564$sFQex (case-lambda ((g$V$15213$sFQex) (g$make-who-condition$6610$sFQex (case-lambda ((g$V$15214$sFQex) (g$make-error$6584$sFQex (case-lambda ((g$V$15215$sFQex) (condition (case-lambda ((g$V$15216$sFQex) (g$raise$6454$sFQex g$C$15202$sFQex g$V$15216$sFQex))) g$V$15215$sFQex g$V$15214$sFQex g$V$15213$sFQex g$V$15212$sFQex)))))) 'expander))) '"cannot locate library in library-path"))) g$libname$7953$sFQex g$failed-list$7954$sFQex)))) g$9054$7955$sFQex g$9052$7961$sFQex)))) g$9054$7955$sFQex g$9051$7960$sFQex)))) g$9054$7955$sFQex)))) g$9054$7955$sFQex '1)))) g$9054$7955$sFQex '0)))) g$9055$7957$sFQex)))) g$9054$7955$sFQex)))) g$9054$7955$sFQex &condition-rcd g$9056$7956$sFQex))))) '&library-resolution &condition-rtd 'g$9057$sFQex '#f '#f '#((immutable library) (immutable files))))) g$C$15217$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$file-locator-resolution-error$7876$sFQex))) (g$read-library-source-file$7877$sFQex g$read-library-source-file$7978$sFQex ((case-lambda ((g$C$15236$sFQex) (g$C$15236$sFQex (case-lambda ((g$C$15218$sFQex g$file-name$7965$sFQex) (g$with-input-from-file$7378$sFQex g$C$15218$sFQex g$file-name$7965$sFQex read-annotated)))))) (library-letrec*-identity 'g$read-library-source-file$7877$sFQex))) (g$make-parameter$7878$sFQex g$make-parameter$7979$sFQex ((case-lambda ((g$C$15237$sFQex) (g$C$15237$sFQex (case-lambda ((g$C$15223$sFQex g$x$7966$sFQex) (g$make-parameter$7878$sFQex g$C$15223$sFQex g$x$7966$sFQex (case-lambda ((g$C$15219$sFQex g$x$7967$sFQex) (g$C$15219$sFQex g$x$7967$sFQex))))) ((g$C$15223$sFQex g$x$7968$sFQex g$fender$7969$sFQex) ((case-lambda ((g$J$15226$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$V$15227$sFQex) (not (case-lambda ((g$T$15228$sFQex) (if g$T$15228$sFQex (g$assertion-error$12588$sFQex g$J$15226$sFQex '(procedure? fender) '("psyntax\\compat.ss" . "(90,8) - (90,36)")) (void g$J$15226$sFQex)))) g$V$15227$sFQex))) g$fender$7969$sFQex))) (case-lambda (g$IGNORE$15224$sFQex (g$fender$7969$sFQex (case-lambda ((g$V$15225$sFQex) ((case-lambda ((g$C$15222$sFQex g$x$7970$sFQex) (g$C$15222$sFQex (case-lambda ((g$C$15220$sFQex) (g$C$15220$sFQex g$x$7970$sFQex)) ((g$C$15220$sFQex g$v$7971$sFQex) (g$fender$7969$sFQex (case-lambda ((g$V$15221$sFQex) (begin (set! g$x$7970$sFQex g$V$15221$sFQex) (g$C$15220$sFQex (cps-void))))) g$v$7971$sFQex)))))) g$C$15223$sFQex g$V$15225$sFQex))) g$x$7968$sFQex))))))))) (library-letrec*-identity 'g$make-parameter$7878$sFQex))) (g$file-options-constructor$7946$sFQex g$file-options-constructor$7980$sFQex ((case-lambda ((g$C$15238$sFQex) (g$make-parameter$7878$sFQex g$C$15238$sFQex '#f))) (library-letrec*-identity 'g$file-options-constructor$7946$sFQex))) (g$file-options-spec$7947$sFQex g$file-options-spec$7981$sFQex ((case-lambda ((g$C$15239$sFQex) (g$C$15239$sFQex (case-lambda ((g$C$15229$sFQex g$x$7972$sFQex) (g$file-options-constructor$7946$sFQex (case-lambda ((g$V$15230$sFQex) (g$V$15230$sFQex g$C$15229$sFQex g$x$7972$sFQex))))))))) (library-letrec*-identity 'g$file-options-spec$7947$sFQex))) (g$set-label-binding!$7948$sFQex g$set-label-binding!$7982$sFQex ((case-lambda ((g$C$15240$sFQex) (g$C$15240$sFQex (case-lambda ((g$C$15231$sFQex g$label$7973$sFQex g$binding$7974$sFQex) (set-symbol-value! g$C$15231$sFQex g$label$7973$sFQex g$binding$7974$sFQex)))))) (library-letrec*-identity 'g$set-label-binding!$7948$sFQex))) (g$label-binding$7949$sFQex g$label-binding$7983$sFQex ((case-lambda ((g$C$15241$sFQex) (g$C$15241$sFQex (case-lambda ((g$C$15232$sFQex g$label$7975$sFQex) (symbol-bound? (case-lambda ((g$T$15233$sFQex) (if g$T$15233$sFQex (symbol-value g$C$15232$sFQex g$label$7975$sFQex) (g$C$15232$sFQex '#f)))) g$label$7975$sFQex)))))) (library-letrec*-identity 'g$label-binding$7949$sFQex)))) (void identity-for-cps))(library-letrec* (psyntax internal) ((g$current-primitive-locations$8179$sFQex g$current-primitive-locations$8224$sFQex ((case-lambda ((g$C$15347$sFQex) (g$make-parameter$7979$sFQex g$C$15347$sFQex (case-lambda ((g$C$15242$sFQex g$x$8185$sFQex) (g$C$15242$sFQex '#f))) (case-lambda ((g$C$15243$sFQex g$p$8186$sFQex) ((case-lambda ((g$J$15245$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$V$15246$sFQex) (not (case-lambda ((g$T$15247$sFQex) (if g$T$15247$sFQex (g$assertion-error$12588$sFQex g$J$15245$sFQex '(procedure? p) '("psyntax\\internal.ss" . "(29,9) - (29,32)")) (void g$J$15245$sFQex)))) g$V$15246$sFQex))) g$p$8186$sFQex))) (case-lambda (g$IGNORE$15244$sFQex (g$C$15243$sFQex g$p$8186$sFQex))))))))) (library-letrec*-identity 'g$current-primitive-locations$8179$sFQex))) (g$mutable?$8180$sFQex g$mutable?$8225$sFQex ((case-lambda ((g$C$15348$sFQex) (g$C$15348$sFQex (case-lambda ((g$C$15263$sFQex g$x$8187$sFQex) ((case-lambda ((g$C$15261$sFQex g$simple?$8188$sFQex) (begin (set! g$simple?$8188$sFQex (case-lambda ((g$C$15259$sFQex g$x$8189$sFQex) (null? (case-lambda ((g$V$15260$sFQex) ((case-lambda ((g$C$15257$sFQex g$t$8190$sFQex) (if g$t$8190$sFQex (g$C$15257$sFQex g$t$8190$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$15258$sFQex) ((case-lambda ((g$C$15255$sFQex g$t$8191$sFQex) (if g$t$8191$sFQex (g$C$15255$sFQex g$t$8191$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$V$15256$sFQex) ((case-lambda ((g$C$15253$sFQex g$t$8192$sFQex) (if g$t$8192$sFQex (g$C$15253$sFQex g$t$8192$sFQex) (g$boolean?$6169$sFQex (case-lambda ((g$V$15254$sFQex) ((case-lambda ((g$C$15251$sFQex g$t$8193$sFQex) (if g$t$8193$sFQex (g$C$15251$sFQex g$t$8193$sFQex) (string? (case-lambda ((g$V$15252$sFQex) ((case-lambda ((g$C$15249$sFQex g$t$8194$sFQex) (if g$t$8194$sFQex (g$C$15249$sFQex g$t$8194$sFQex) (g$bytevector?$6167$sFQex (case-lambda ((g$V$15250$sFQex) ((case-lambda ((g$C$15248$sFQex g$t$8195$sFQex) (if g$t$8195$sFQex (g$C$15248$sFQex g$t$8195$sFQex) (number? g$C$15248$sFQex g$x$8189$sFQex)))) g$C$15249$sFQex g$V$15250$sFQex))) g$x$8189$sFQex)))) g$C$15251$sFQex g$V$15252$sFQex))) g$x$8189$sFQex)))) g$C$15253$sFQex g$V$15254$sFQex))) g$x$8189$sFQex)))) g$C$15255$sFQex g$V$15256$sFQex))) g$x$8189$sFQex)))) g$C$15257$sFQex g$V$15258$sFQex))) g$x$8189$sFQex)))) g$C$15259$sFQex g$V$15260$sFQex))) g$x$8189$sFQex)))) (g$simple?$8188$sFQex (case-lambda ((g$V$15262$sFQex) (not g$C$15261$sFQex g$V$15262$sFQex))) g$x$8187$sFQex)))) g$C$15263$sFQex uninitialized)))))) (library-letrec*-identity 'g$mutable?$8180$sFQex))) (g$rewriter$8181$sFQex g$rewriter$8226$sFQex ((case-lambda ((g$C$15349$sFQex) (g$C$15349$sFQex (case-lambda ((g$C$15339$sFQex g$quote-hack?$8196$sFQex) ((case-lambda ((g$C$15338$sFQex g$f$8197$sFQex) (begin (set! g$f$8197$sFQex (case-lambda ((g$C$15335$sFQex g$x$8198$sFQex) (pair? (case-lambda ((g$T$15336$sFQex) (if g$T$15336$sFQex (car (case-lambda ((g$V$15337$sFQex) ((case-lambda ((g$C$15301$sFQex g$t$8199$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15302$sFQex) (if g$T$15302$sFQex ((case-lambda ((g$J$15305$sFQex) (if g$quote-hack?$8196$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$15306$sFQex) (g$mutable?$8180$sFQex g$J$15305$sFQex g$V$15306$sFQex))) g$x$8198$sFQex) (g$J$15305$sFQex '#f)))) (case-lambda ((g$T$15303$sFQex) (if g$T$15303$sFQex (gensym (case-lambda ((g$V$15304$sFQex) ((case-lambda ((g$C$15264$sFQex g$g$8200$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15265$sFQex) (set-symbol-value! (case-lambda (g$IGNORE$15266$sFQex (g$C$15264$sFQex g$g$8200$sFQex))) g$g$8200$sFQex g$V$15265$sFQex))) g$x$8198$sFQex))) g$C$15301$sFQex g$V$15304$sFQex)))) (g$C$15301$sFQex g$x$8198$sFQex))))) (g$memv$5673$sFQex (case-lambda ((g$T$15307$sFQex) (if g$T$15307$sFQex (cdr (case-lambda ((g$V$15308$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15309$sFQex) (cons g$C$15301$sFQex 'case-lambda g$V$15309$sFQex))) (case-lambda ((g$C$15267$sFQex g$x$8201$sFQex) (cdr (case-lambda ((g$V$15268$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15269$sFQex) (car (case-lambda ((g$V$15270$sFQex) (cons g$C$15267$sFQex g$V$15270$sFQex g$V$15269$sFQex))) g$x$8201$sFQex))) g$f$8197$sFQex g$V$15268$sFQex))) g$x$8201$sFQex))) g$V$15308$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15310$sFQex) (if g$T$15310$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$15311$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15312$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15313$sFQex) (g$cons*$5682$sFQex g$C$15301$sFQex 'lambda g$V$15313$sFQex g$V$15312$sFQex))) g$x$8198$sFQex))) g$f$8197$sFQex g$V$15311$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15314$sFQex) (if g$T$15314$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$15315$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15316$sFQex) ((case-lambda ((g$C$15275$sFQex g$bindings$8202$sFQex g$body*$8203$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15276$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15277$sFQex) ((case-lambda ((g$C$15271$sFQex g$lhs*$8204$sFQex g$rhs*$8205$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15272$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15273$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15274$sFQex) (g$cons*$5682$sFQex g$C$15271$sFQex 'letrec g$V$15274$sFQex g$V$15272$sFQex))) list g$lhs*$8204$sFQex g$V$15273$sFQex))) g$f$8197$sFQex g$rhs*$8205$sFQex))) g$f$8197$sFQex g$body*$8203$sFQex))) g$C$15275$sFQex g$V$15277$sFQex g$V$15276$sFQex))) car g$bindings$8202$sFQex))) g$cadr$6177$sFQex g$bindings$8202$sFQex))) g$C$15301$sFQex g$V$15316$sFQex g$V$15315$sFQex))) g$x$8198$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15317$sFQex) (if g$T$15317$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$15318$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15319$sFQex) ((case-lambda ((g$C$15282$sFQex g$bindings$8206$sFQex g$body*$8207$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15283$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15284$sFQex) ((case-lambda ((g$C$15278$sFQex g$lhs*$8208$sFQex g$rhs*$8209$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15279$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15280$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15281$sFQex) (g$cons*$5682$sFQex g$C$15278$sFQex 'letrec* g$V$15281$sFQex g$V$15279$sFQex))) list g$lhs*$8208$sFQex g$V$15280$sFQex))) g$f$8197$sFQex g$rhs*$8209$sFQex))) g$f$8197$sFQex g$body*$8207$sFQex))) g$C$15282$sFQex g$V$15284$sFQex g$V$15283$sFQex))) car g$bindings$8206$sFQex))) g$cadr$6177$sFQex g$bindings$8206$sFQex))) g$C$15301$sFQex g$V$15319$sFQex g$V$15318$sFQex))) g$x$8198$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15320$sFQex) (if g$T$15320$sFQex (cdr (case-lambda ((g$V$15321$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15322$sFQex) ((case-lambda ((g$C$15293$sFQex g$name$8210$sFQex g$x$8211$sFQex) (g$cddr$6179$sFQex (case-lambda ((g$V$15294$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15295$sFQex) ((case-lambda ((g$C$15289$sFQex g$bindings$8212$sFQex g$body*$8213$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15290$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15291$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15292$sFQex) ((case-lambda ((g$C$15285$sFQex g$lhs*$8214$sFQex g$lhs**$8215$sFQex g$rhs*$8216$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15286$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15287$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15288$sFQex) (g$cons*$5682$sFQex g$C$15285$sFQex 'library-letrec* g$name$8210$sFQex g$V$15288$sFQex g$V$15286$sFQex))) list g$lhs*$8214$sFQex g$lhs**$8215$sFQex g$V$15287$sFQex))) g$f$8197$sFQex g$rhs*$8216$sFQex))) g$f$8197$sFQex g$body*$8213$sFQex))) g$C$15289$sFQex g$V$15292$sFQex g$V$15291$sFQex g$V$15290$sFQex))) car g$bindings$8212$sFQex))) g$cadr$6177$sFQex g$bindings$8212$sFQex))) g$caddr$6183$sFQex g$bindings$8212$sFQex))) g$C$15293$sFQex g$V$15295$sFQex g$V$15294$sFQex))) g$x$8211$sFQex))) g$x$8211$sFQex))) g$C$15301$sFQex g$V$15322$sFQex g$V$15321$sFQex))) g$x$8198$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15323$sFQex) (if g$T$15323$sFQex (cdr (case-lambda ((g$V$15324$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15325$sFQex) (cons g$C$15301$sFQex 'begin g$V$15325$sFQex))) g$f$8197$sFQex g$V$15324$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15326$sFQex) (if g$T$15326$sFQex (g$caddr$6183$sFQex (case-lambda ((g$V$15327$sFQex) (g$f$8197$sFQex (case-lambda ((g$V$15328$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15329$sFQex) (list g$C$15301$sFQex 'set! g$V$15329$sFQex g$V$15328$sFQex))) g$x$8198$sFQex))) g$V$15327$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15330$sFQex) (if g$T$15330$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$15331$sFQex) ((case-lambda ((g$C$15298$sFQex g$op$8217$sFQex) (g$current-primitive-locations$8179$sFQex (case-lambda ((g$V$15299$sFQex) (g$V$15299$sFQex (case-lambda ((g$V$15300$sFQex) ((case-lambda ((g$C$15297$sFQex g$t$8218$sFQex) (if g$t$8218$sFQex ((case-lambda ((g$C$15296$sFQex g$loc$8219$sFQex) (g$C$15296$sFQex g$loc$8219$sFQex))) g$C$15297$sFQex g$t$8218$sFQex) (g$C$15297$sFQex g$op$8217$sFQex)))) g$C$15298$sFQex g$V$15300$sFQex))) g$op$8217$sFQex)))))) g$C$15301$sFQex g$V$15331$sFQex))) g$x$8198$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15332$sFQex) (if g$T$15332$sFQex (g$C$15301$sFQex g$x$8198$sFQex) (list? (case-lambda ((g$T$15333$sFQex) (if g$T$15333$sFQex (g$map$5680$sFQex g$C$15301$sFQex g$f$8197$sFQex g$x$8198$sFQex) (list? (case-lambda ((g$V$15334$sFQex) (g$error$6457$sFQex g$C$15301$sFQex 'rewrite '"invalid form ~s ~s" g$x$8198$sFQex g$V$15334$sFQex))) g$x$8198$sFQex)))) g$x$8198$sFQex)))) g$t$8199$sFQex '(define))))) g$t$8199$sFQex '(primitive))))) g$t$8199$sFQex '(set!))))) g$t$8199$sFQex '(begin))))) g$t$8199$sFQex '(library-letrec*))))) g$t$8199$sFQex '(letrec*))))) g$t$8199$sFQex '(letrec))))) g$t$8199$sFQex '(lambda))))) g$t$8199$sFQex '(case-lambda))))) g$t$8199$sFQex '(quote)))) g$C$15335$sFQex g$V$15337$sFQex))) g$x$8198$sFQex) (g$C$15335$sFQex g$x$8198$sFQex)))) g$x$8198$sFQex)))) (g$C$15338$sFQex g$f$8197$sFQex)))) g$C$15339$sFQex uninitialized)))))) (library-letrec*-identity 'g$rewriter$8181$sFQex))) (g$expanded->core$8182$sFQex g$expanded->core$8227$sFQex ((case-lambda ((g$C$15350$sFQex) (g$C$15350$sFQex (case-lambda ((g$C$15340$sFQex g$x$8220$sFQex) (g$rewriter$8181$sFQex (case-lambda ((g$V$15341$sFQex) (g$V$15341$sFQex g$C$15340$sFQex g$x$8220$sFQex))) '#t)))))) (library-letrec*-identity 'g$expanded->core$8182$sFQex))) (g$compile-core-expr$8183$sFQex g$compile-core-expr$8228$sFQex ((case-lambda ((g$C$15351$sFQex) (g$C$15351$sFQex (case-lambda ((g$C$15342$sFQex g$x$8221$sFQex) (g$rewriter$8181$sFQex (case-lambda ((g$V$15343$sFQex) (g$V$15343$sFQex g$C$15342$sFQex g$x$8221$sFQex))) '#f)))))) (library-letrec*-identity 'g$compile-core-expr$8183$sFQex))) (g$compile-core-expr-to-port$8184$sFQex g$compile-core-expr-to-port$8229$sFQex ((case-lambda ((g$C$15352$sFQex) (g$C$15352$sFQex (case-lambda ((g$C$15344$sFQex g$x$8222$sFQex g$p$8223$sFQex) (g$rewriter$8181$sFQex (case-lambda ((g$V$15345$sFQex) (g$V$15345$sFQex (case-lambda ((g$V$15346$sFQex) (g$pretty-print$8178$sFQex g$C$15344$sFQex g$V$15346$sFQex g$p$8223$sFQex))) g$x$8222$sFQex))) '#f)))))) (library-letrec*-identity 'g$compile-core-expr-to-port$8184$sFQex)))) (void identity-for-cps))(library-letrec* (psyntax library-manager) ((g$make-collection$8230$sFQex g$make-collection$8433$sFQex ((case-lambda ((g$C$15686$sFQex) (g$C$15686$sFQex (case-lambda ((g$C$15361$sFQex) ((case-lambda ((g$C$15360$sFQex g$set$8291$sFQex) ((case-lambda ((g$C$15359$sFQex g$set-cons$8292$sFQex) (begin (set! g$set-cons$8292$sFQex (case-lambda ((g$C$15353$sFQex g$x$8296$sFQex g$ls$8297$sFQex) (g$memq$5672$sFQex (case-lambda ((g$T$15354$sFQex) (if g$T$15354$sFQex (g$C$15353$sFQex g$ls$8297$sFQex) (cons g$C$15353$sFQex g$x$8296$sFQex g$ls$8297$sFQex)))) g$x$8296$sFQex g$ls$8297$sFQex)))) (g$C$15359$sFQex (case-lambda ((g$C$15355$sFQex) (g$C$15355$sFQex g$set$8291$sFQex)) ((g$C$15355$sFQex g$x$8293$sFQex) (g$set-cons$8292$sFQex (case-lambda ((g$V$15356$sFQex) (begin (set! g$set$8291$sFQex g$V$15356$sFQex) (g$C$15355$sFQex (cps-void))))) g$x$8293$sFQex g$set$8291$sFQex)) ((g$C$15355$sFQex g$x$8294$sFQex g$del?$8295$sFQex) (if g$del?$8295$sFQex (g$remq$5687$sFQex (case-lambda ((g$V$15357$sFQex) (begin (set! g$set$8291$sFQex g$V$15357$sFQex) (g$C$15355$sFQex (cps-void))))) g$x$8294$sFQex g$set$8291$sFQex) (g$set-cons$8292$sFQex (case-lambda ((g$V$15358$sFQex) (begin (set! g$set$8291$sFQex g$V$15358$sFQex) (g$C$15355$sFQex (cps-void))))) g$x$8294$sFQex g$set$8291$sFQex)))))))) g$C$15360$sFQex uninitialized))) g$C$15361$sFQex '())))))) (library-letrec*-identity 'g$make-collection$8230$sFQex))) (g$current-library-collection$8231$sFQex g$current-library-collection$8434$sFQex ((case-lambda ((g$C$15687$sFQex) (g$make-collection$8230$sFQex (case-lambda ((g$V$15688$sFQex) (g$make-parameter$7979$sFQex g$C$15687$sFQex g$V$15688$sFQex (case-lambda ((g$C$15362$sFQex g$x$8298$sFQex) ((case-lambda ((g$J$15364$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$V$15365$sFQex) (not (case-lambda ((g$T$15366$sFQex) (if g$T$15366$sFQex (g$assertion-violation$6456$sFQex g$J$15364$sFQex 'current-library-collection '"not a procedure" g$x$8298$sFQex) (void g$J$15364$sFQex)))) g$V$15365$sFQex))) g$x$8298$sFQex))) (case-lambda (g$IGNORE$15363$sFQex (g$C$15362$sFQex g$x$8298$sFQex)))))))))))) (library-letrec*-identity 'g$current-library-collection$8231$sFQex))) (g$9324$8232$sFQex g$9324$8435$sFQex ((case-lambda ((g$C$15689$sFQex) (make-record-type-descriptor g$C$15689$sFQex 'library '#f 'g$9327$sFQex '#t '#t '#((mutable id) (mutable name) (mutable version) (mutable imp*) (mutable vis*) (mutable inv*) (mutable subst) (mutable env) (mutable visit-state) (mutable invoke-state) (mutable visit-code) (mutable invoke-code) (mutable visible?) (mutable source-file-name))))) (library-letrec*-identity 'g$9324$8232$sFQex))) (g$9326$8233$sFQex g$9326$8436$sFQex ((case-lambda ((g$C$15690$sFQex) (g$C$15690$sFQex '#f))) (library-letrec*-identity 'g$9326$8233$sFQex))) (g$9325$8234$sFQex g$9325$8437$sFQex ((case-lambda ((g$C$15691$sFQex) (make-record-constructor-descriptor g$C$15691$sFQex g$9324$8232$sFQex '#f g$9326$8233$sFQex))) (library-letrec*-identity 'g$9325$8234$sFQex))) (g$library?$8235$sFQex g$library?$8438$sFQex ((case-lambda ((g$C$15692$sFQex) (record-predicate g$C$15692$sFQex g$9324$8232$sFQex))) (library-letrec*-identity 'g$library?$8235$sFQex))) (g$make-library$8236$sFQex g$make-library$8439$sFQex ((case-lambda ((g$C$15693$sFQex) (record-constructor g$C$15693$sFQex g$9325$8234$sFQex))) (library-letrec*-identity 'g$make-library$8236$sFQex))) (g$library-id$8237$sFQex g$library-id$8440$sFQex ((case-lambda ((g$C$15694$sFQex) (record-accessor g$C$15694$sFQex g$9324$8232$sFQex '0))) (library-letrec*-identity 'g$library-id$8237$sFQex))) (g$library-name$8238$sFQex g$library-name$8441$sFQex ((case-lambda ((g$C$15695$sFQex) (record-accessor g$C$15695$sFQex g$9324$8232$sFQex '1))) (library-letrec*-identity 'g$library-name$8238$sFQex))) (g$library-version$8239$sFQex g$library-version$8442$sFQex ((case-lambda ((g$C$15696$sFQex) (record-accessor g$C$15696$sFQex g$9324$8232$sFQex '2))) (library-letrec*-identity 'g$library-version$8239$sFQex))) (g$library-imp*$8240$sFQex g$library-imp*$8443$sFQex ((case-lambda ((g$C$15697$sFQex) (record-accessor g$C$15697$sFQex g$9324$8232$sFQex '3))) (library-letrec*-identity 'g$library-imp*$8240$sFQex))) (g$library-vis*$8241$sFQex g$library-vis*$8444$sFQex ((case-lambda ((g$C$15698$sFQex) (record-accessor g$C$15698$sFQex g$9324$8232$sFQex '4))) (library-letrec*-identity 'g$library-vis*$8241$sFQex))) (g$library-inv*$8242$sFQex g$library-inv*$8445$sFQex ((case-lambda ((g$C$15699$sFQex) (record-accessor g$C$15699$sFQex g$9324$8232$sFQex '5))) (library-letrec*-identity 'g$library-inv*$8242$sFQex))) (g$library-subst$8243$sFQex g$library-subst$8446$sFQex ((case-lambda ((g$C$15700$sFQex) (record-accessor g$C$15700$sFQex g$9324$8232$sFQex '6))) (library-letrec*-identity 'g$library-subst$8243$sFQex))) (g$library-env$8244$sFQex g$library-env$8447$sFQex ((case-lambda ((g$C$15701$sFQex) (record-accessor g$C$15701$sFQex g$9324$8232$sFQex '7))) (library-letrec*-identity 'g$library-env$8244$sFQex))) (g$library-visit-state$8245$sFQex g$library-visit-state$8448$sFQex ((case-lambda ((g$C$15702$sFQex) (record-accessor g$C$15702$sFQex g$9324$8232$sFQex '8))) (library-letrec*-identity 'g$library-visit-state$8245$sFQex))) (g$library-invoke-state$8246$sFQex g$library-invoke-state$8449$sFQex ((case-lambda ((g$C$15703$sFQex) (record-accessor g$C$15703$sFQex g$9324$8232$sFQex '9))) (library-letrec*-identity 'g$library-invoke-state$8246$sFQex))) (g$library-visit-code$8247$sFQex g$library-visit-code$8450$sFQex ((case-lambda ((g$C$15704$sFQex) (record-accessor g$C$15704$sFQex g$9324$8232$sFQex '10))) (library-letrec*-identity 'g$library-visit-code$8247$sFQex))) (g$library-invoke-code$8248$sFQex g$library-invoke-code$8451$sFQex ((case-lambda ((g$C$15705$sFQex) (record-accessor g$C$15705$sFQex g$9324$8232$sFQex '11))) (library-letrec*-identity 'g$library-invoke-code$8248$sFQex))) (g$library-visible?$8249$sFQex g$library-visible?$8452$sFQex ((case-lambda ((g$C$15706$sFQex) (record-accessor g$C$15706$sFQex g$9324$8232$sFQex '12))) (library-letrec*-identity 'g$library-visible?$8249$sFQex))) (g$library-source-file-name$8250$sFQex g$library-source-file-name$8453$sFQex ((case-lambda ((g$C$15707$sFQex) (record-accessor g$C$15707$sFQex g$9324$8232$sFQex '13))) (library-letrec*-identity 'g$library-source-file-name$8250$sFQex))) (g$set-library-id!$8251$sFQex g$set-library-id!$8454$sFQex ((case-lambda ((g$C$15708$sFQex) (record-mutator g$C$15708$sFQex g$9324$8232$sFQex '0))) (library-letrec*-identity 'g$set-library-id!$8251$sFQex))) (g$set-library-name!$8252$sFQex g$set-library-name!$8455$sFQex ((case-lambda ((g$C$15709$sFQex) (record-mutator g$C$15709$sFQex g$9324$8232$sFQex '1))) (library-letrec*-identity 'g$set-library-name!$8252$sFQex))) (g$set-library-version!$8253$sFQex g$set-library-version!$8456$sFQex ((case-lambda ((g$C$15710$sFQex) (record-mutator g$C$15710$sFQex g$9324$8232$sFQex '2))) (library-letrec*-identity 'g$set-library-version!$8253$sFQex))) (g$set-library-imp*!$8254$sFQex g$set-library-imp*!$8457$sFQex ((case-lambda ((g$C$15711$sFQex) (record-mutator g$C$15711$sFQex g$9324$8232$sFQex '3))) (library-letrec*-identity 'g$set-library-imp*!$8254$sFQex))) (g$set-library-vis*!$8255$sFQex g$set-library-vis*!$8458$sFQex ((case-lambda ((g$C$15712$sFQex) (record-mutator g$C$15712$sFQex g$9324$8232$sFQex '4))) (library-letrec*-identity 'g$set-library-vis*!$8255$sFQex))) (g$set-library-inv*!$8256$sFQex g$set-library-inv*!$8459$sFQex ((case-lambda ((g$C$15713$sFQex) (record-mutator g$C$15713$sFQex g$9324$8232$sFQex '5))) (library-letrec*-identity 'g$set-library-inv*!$8256$sFQex))) (g$set-library-subst!$8257$sFQex g$set-library-subst!$8460$sFQex ((case-lambda ((g$C$15714$sFQex) (record-mutator g$C$15714$sFQex g$9324$8232$sFQex '6))) (library-letrec*-identity 'g$set-library-subst!$8257$sFQex))) (g$set-library-env!$8258$sFQex g$set-library-env!$8461$sFQex ((case-lambda ((g$C$15715$sFQex) (record-mutator g$C$15715$sFQex g$9324$8232$sFQex '7))) (library-letrec*-identity 'g$set-library-env!$8258$sFQex))) (g$set-library-visit-state!$8259$sFQex g$set-library-visit-state!$8462$sFQex ((case-lambda ((g$C$15716$sFQex) (record-mutator g$C$15716$sFQex g$9324$8232$sFQex '8))) (library-letrec*-identity 'g$set-library-visit-state!$8259$sFQex))) (g$set-library-invoke-state!$8260$sFQex g$set-library-invoke-state!$8463$sFQex ((case-lambda ((g$C$15717$sFQex) (record-mutator g$C$15717$sFQex g$9324$8232$sFQex '9))) (library-letrec*-identity 'g$set-library-invoke-state!$8260$sFQex))) (g$set-library-visit-code!$8261$sFQex g$set-library-visit-code!$8464$sFQex ((case-lambda ((g$C$15718$sFQex) (record-mutator g$C$15718$sFQex g$9324$8232$sFQex '10))) (library-letrec*-identity 'g$set-library-visit-code!$8261$sFQex))) (g$set-library-invoke-code!$8262$sFQex g$set-library-invoke-code!$8465$sFQex ((case-lambda ((g$C$15719$sFQex) (record-mutator g$C$15719$sFQex g$9324$8232$sFQex '11))) (library-letrec*-identity 'g$set-library-invoke-code!$8262$sFQex))) (g$set-library-visible?!$8263$sFQex g$set-library-visible?!$8466$sFQex ((case-lambda ((g$C$15720$sFQex) (record-mutator g$C$15720$sFQex g$9324$8232$sFQex '12))) (library-letrec*-identity 'g$set-library-visible?!$8263$sFQex))) (g$set-library-source-file-name!$8264$sFQex g$set-library-source-file-name!$8467$sFQex ((case-lambda ((g$C$15721$sFQex) (record-mutator g$C$15721$sFQex g$9324$8232$sFQex '13))) (library-letrec*-identity 'g$set-library-source-file-name!$8264$sFQex))) (g$rp$8265$sFQex g$rp$8468$sFQex ((case-lambda ((g$C$15722$sFQex) (make-record-printer g$C$15722$sFQex 'library (case-lambda ((g$C$15367$sFQex g$x$8299$sFQex g$p$8300$sFQex g$wr$8301$sFQex) ((case-lambda ((g$J$15377$sFQex) (g$library?$8235$sFQex (case-lambda ((g$V$15378$sFQex) (not (case-lambda ((g$T$15379$sFQex) (if g$T$15379$sFQex (g$assertion-violation$6456$sFQex g$J$15377$sFQex 'record-type-printer '"not a library") (void g$J$15377$sFQex)))) g$V$15378$sFQex))) g$x$8299$sFQex))) (case-lambda (g$IGNORE$15368$sFQex ((case-lambda ((g$J$15371$sFQex) (g$library-version$8239$sFQex (case-lambda ((g$V$15372$sFQex) (null? (case-lambda ((g$T$15373$sFQex) (if g$T$15373$sFQex (g$library-name$8238$sFQex g$J$15371$sFQex g$x$8299$sFQex) (g$library-version$8239$sFQex (case-lambda ((g$V$15374$sFQex) (list (case-lambda ((g$V$15375$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15376$sFQex) (append g$J$15371$sFQex g$V$15376$sFQex g$V$15375$sFQex))) g$x$8299$sFQex))) g$V$15374$sFQex))) g$x$8299$sFQex)))) g$V$15372$sFQex))) g$x$8299$sFQex))) (case-lambda ((g$V$15369$sFQex) (g$format$7552$sFQex (case-lambda ((g$V$15370$sFQex) (display g$C$15367$sFQex g$V$15370$sFQex g$p$8300$sFQex))) '"#<library ~s>" g$V$15369$sFQex)))))))))))) (library-letrec*-identity 'g$rp$8265$sFQex))) (g$find-dependencies$8266$sFQex g$find-dependencies$8469$sFQex ((case-lambda ((g$C$15723$sFQex) (g$C$15723$sFQex (case-lambda ((g$C$15380$sFQex g$ls$8302$sFQex) (null? (case-lambda ((g$T$15381$sFQex) (if g$T$15381$sFQex (g$C$15380$sFQex '()) (g$assertion-violation$6456$sFQex g$C$15380$sFQex 'find-dependencies '"cannot handle deps yet")))) g$ls$8302$sFQex)))))) (library-letrec*-identity 'g$find-dependencies$8266$sFQex))) (g$find-library-by$8267$sFQex g$find-library-by$8470$sFQex ((case-lambda ((g$C$15724$sFQex) (g$C$15724$sFQex (case-lambda ((g$C$15390$sFQex g$pred$8303$sFQex) (g$current-library-collection$8231$sFQex (case-lambda ((g$V$15391$sFQex) (g$V$15391$sFQex (case-lambda ((g$V$15392$sFQex) ((case-lambda ((g$C$15389$sFQex g$f$8304$sFQex) ((case-lambda ((g$C$15383$sFQex g$f$15382$sFQex) (begin (set! g$f$8304$sFQex g$f$15382$sFQex) (g$C$15383$sFQex g$f$8304$sFQex)))) g$C$15389$sFQex (case-lambda ((g$C$15384$sFQex g$ls$8305$sFQex) (null? (case-lambda ((g$T$15385$sFQex) (if g$T$15385$sFQex (g$C$15384$sFQex '#f) (car (case-lambda ((g$V$15386$sFQex) (g$pred$8303$sFQex (case-lambda ((g$T$15387$sFQex) (if g$T$15387$sFQex (car g$C$15384$sFQex g$ls$8305$sFQex) (cdr (case-lambda ((g$V$15388$sFQex) (g$f$8304$sFQex g$C$15384$sFQex g$V$15388$sFQex))) g$ls$8305$sFQex)))) g$V$15386$sFQex))) g$ls$8305$sFQex)))) g$ls$8305$sFQex)))))) (case-lambda ((g$V$15393$sFQex) (g$V$15393$sFQex g$C$15390$sFQex g$V$15392$sFQex))) uninitialized)))))))))))) (library-letrec*-identity 'g$find-library-by$8267$sFQex))) (g$library-path$8268$sFQex g$library-path$8471$sFQex ((case-lambda ((g$C$15725$sFQex) (g$make-parameter$7979$sFQex g$C$15725$sFQex '(".") (case-lambda ((g$C$15395$sFQex g$x$8306$sFQex) ((case-lambda ((g$J$15397$sFQex) (list? (case-lambda ((g$T$15398$sFQex) (if g$T$15398$sFQex (g$for-all$5678$sFQex g$J$15397$sFQex string? g$x$8306$sFQex) (g$J$15397$sFQex '#f)))) g$x$8306$sFQex))) (case-lambda ((g$T$15396$sFQex) (if g$T$15396$sFQex (g$map$5680$sFQex g$C$15395$sFQex (case-lambda ((g$C$15394$sFQex g$x$8307$sFQex) (g$C$15394$sFQex g$x$8307$sFQex))) g$x$8306$sFQex) (g$assertion-violation$6456$sFQex g$C$15395$sFQex 'library-path '"not a list of strings" g$x$8306$sFQex)))))))))) (library-letrec*-identity 'g$library-path$8268$sFQex))) (g$library-extensions$8269$sFQex g$library-extensions$8472$sFQex ((case-lambda ((g$C$15726$sFQex) (g$make-parameter$7979$sFQex g$C$15726$sFQex '(".sls" ".ss" ".scm") (case-lambda ((g$C$15400$sFQex g$x$8308$sFQex) ((case-lambda ((g$J$15402$sFQex) (list? (case-lambda ((g$T$15403$sFQex) (if g$T$15403$sFQex (g$for-all$5678$sFQex g$J$15402$sFQex string? g$x$8308$sFQex) (g$J$15402$sFQex '#f)))) g$x$8308$sFQex))) (case-lambda ((g$T$15401$sFQex) (if g$T$15401$sFQex (g$map$5680$sFQex g$C$15400$sFQex (case-lambda ((g$C$15399$sFQex g$x$8309$sFQex) (g$C$15399$sFQex g$x$8309$sFQex))) g$x$8308$sFQex) (g$assertion-violation$6456$sFQex g$C$15400$sFQex 'library-extensions '"not a list of strings" g$x$8308$sFQex)))))))))) (library-letrec*-identity 'g$library-extensions$8269$sFQex))) (g$library-name->file-name$8270$sFQex g$library-name->file-name$8473$sFQex ((case-lambda ((g$C$15727$sFQex) (g$C$15727$sFQex (case-lambda ((g$C$15442$sFQex g$x$8310$sFQex) (call-with-values g$C$15442$sFQex (case-lambda ((g$C$15404$sFQex) (g$open-string-output-port$7329$sFQex g$C$15404$sFQex))) (case-lambda ((g$C$15441$sFQex g$p$8313$sFQex g$extract$8314$sFQex) ((case-lambda ((g$C$15440$sFQex g$extract$8315$sFQex g$p$8316$sFQex) ((case-lambda ((g$C$15437$sFQex g$display-hex$8317$sFQex) (begin (set! g$display-hex$8317$sFQex (case-lambda ((g$C$15405$sFQex g$n$8325$sFQex) (<= (case-lambda ((g$T$15406$sFQex) (if g$T$15406$sFQex (display g$C$15405$sFQex g$n$8325$sFQex g$p$8316$sFQex) (- (case-lambda ((g$V$15407$sFQex) (char->integer (case-lambda ((g$V$15408$sFQex) (+ (case-lambda ((g$V$15409$sFQex) (integer->char (case-lambda ((g$V$15410$sFQex) (display g$C$15405$sFQex g$V$15410$sFQex g$p$8316$sFQex))) g$V$15409$sFQex))) g$V$15408$sFQex g$V$15407$sFQex))) '#\A))) g$n$8325$sFQex '10)))) '0 g$n$8325$sFQex '9)))) ((case-lambda ((g$C$15436$sFQex g$f$8318$sFQex) ((case-lambda ((g$C$15412$sFQex g$f$15411$sFQex) (begin (set! g$f$8318$sFQex g$f$15411$sFQex) (g$C$15412$sFQex g$f$8318$sFQex)))) g$C$15436$sFQex (case-lambda ((g$C$15427$sFQex g$ls$8319$sFQex) (null? (case-lambda ((g$V$15428$sFQex) (not (case-lambda ((g$T$15429$sFQex) (if g$T$15429$sFQex (display (case-lambda (g$IGNORE$15430$sFQex (car (case-lambda ((g$V$15431$sFQex) (symbol->string (case-lambda ((g$V$15432$sFQex) (string->list (case-lambda ((g$V$15433$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$15434$sFQex (cdr (case-lambda ((g$V$15435$sFQex) (g$f$8318$sFQex g$C$15427$sFQex g$V$15435$sFQex))) g$ls$8319$sFQex))) (case-lambda ((g$C$15422$sFQex g$c$8320$sFQex) (g$char<=?$6223$sFQex (case-lambda ((g$V$15423$sFQex) ((case-lambda ((g$C$15416$sFQex g$t$8321$sFQex) (if g$t$8321$sFQex (g$C$15416$sFQex g$t$8321$sFQex) (g$char<=?$6223$sFQex (case-lambda ((g$V$15417$sFQex) ((case-lambda ((g$C$15414$sFQex g$t$8322$sFQex) (if g$t$8322$sFQex (g$C$15414$sFQex g$t$8322$sFQex) (g$char<=?$6223$sFQex (case-lambda ((g$V$15415$sFQex) ((case-lambda ((g$C$15413$sFQex g$t$8323$sFQex) (if g$t$8323$sFQex (g$C$15413$sFQex g$t$8323$sFQex) (g$memv$5673$sFQex g$C$15413$sFQex g$c$8320$sFQex '(#\- #\. #\_ #\~))))) g$C$15414$sFQex g$V$15415$sFQex))) '#\0 g$c$8320$sFQex '#\9)))) g$C$15416$sFQex g$V$15417$sFQex))) '#\A g$c$8320$sFQex '#\Z)))) (case-lambda ((g$T$15424$sFQex) (if g$T$15424$sFQex (display g$C$15422$sFQex g$c$8320$sFQex g$p$8316$sFQex) (display (case-lambda (g$IGNORE$15425$sFQex (char->integer (case-lambda ((g$V$15426$sFQex) ((case-lambda ((g$C$15418$sFQex g$n$8324$sFQex) (g$quotient$6678$sFQex (case-lambda ((g$V$15419$sFQex) (g$display-hex$8317$sFQex (case-lambda (g$IGNORE$15420$sFQex (g$remainder$6679$sFQex (case-lambda ((g$V$15421$sFQex) (g$display-hex$8317$sFQex g$C$15418$sFQex g$V$15421$sFQex))) g$n$8324$sFQex '16))) g$V$15419$sFQex))) g$n$8324$sFQex '16))) g$C$15422$sFQex g$V$15426$sFQex))) g$c$8320$sFQex))) '"%" g$p$8316$sFQex)))) g$V$15423$sFQex))) '#\a g$c$8320$sFQex '#\z))) g$V$15433$sFQex))) g$V$15432$sFQex))) g$V$15431$sFQex))) g$ls$8319$sFQex))) '"/" g$p$8316$sFQex) (void g$C$15427$sFQex)))) g$V$15428$sFQex))) g$ls$8319$sFQex)))))) (case-lambda ((g$V$15438$sFQex) (g$V$15438$sFQex (case-lambda (g$IGNORE$15439$sFQex (g$extract$8315$sFQex g$C$15437$sFQex))) g$x$8310$sFQex))) uninitialized)))) g$C$15440$sFQex uninitialized))) g$C$15441$sFQex g$extract$8314$sFQex g$p$8313$sFQex))))))))) (library-letrec*-identity 'g$library-name->file-name$8270$sFQex))) (g$file-locator$8271$sFQex g$file-locator$8474$sFQex ((case-lambda ((g$C$15728$sFQex) (g$make-parameter$7979$sFQex g$C$15728$sFQex (case-lambda ((g$C$15463$sFQex g$x$8326$sFQex) (g$library-name->file-name$8270$sFQex (case-lambda ((g$V$15464$sFQex) ((case-lambda ((g$C$15459$sFQex g$str$8327$sFQex) (g$library-extensions$8269$sFQex (case-lambda ((g$V$15460$sFQex) (g$library-path$8268$sFQex (case-lambda ((g$V$15461$sFQex) ((case-lambda ((g$C$15458$sFQex g$f$8328$sFQex) ((case-lambda ((g$C$15444$sFQex g$f$15443$sFQex) (begin (set! g$f$8328$sFQex g$f$15443$sFQex) (g$C$15444$sFQex g$f$8328$sFQex)))) g$C$15458$sFQex (case-lambda ((g$C$15449$sFQex g$ls$8329$sFQex g$exts$8330$sFQex g$failed-list$8331$sFQex) (null? (case-lambda ((g$T$15450$sFQex) (if g$T$15450$sFQex (g$reverse$6175$sFQex (case-lambda ((g$V$15451$sFQex) (g$file-locator-resolution-error$7977$sFQex g$C$15449$sFQex g$x$8326$sFQex g$V$15451$sFQex))) g$failed-list$8331$sFQex) (null? (case-lambda ((g$T$15452$sFQex) (if g$T$15452$sFQex (g$library-extensions$8269$sFQex (case-lambda ((g$V$15453$sFQex) (cdr (case-lambda ((g$V$15454$sFQex) (g$f$8328$sFQex g$C$15449$sFQex g$V$15454$sFQex g$V$15453$sFQex g$failed-list$8331$sFQex))) g$ls$8329$sFQex)))) (car (case-lambda ((g$V$15455$sFQex) (car (case-lambda ((g$V$15456$sFQex) (string-append (case-lambda ((g$V$15457$sFQex) ((case-lambda ((g$C$15445$sFQex g$name$8332$sFQex) (g$file-exists?$6285$sFQex (case-lambda ((g$T$15446$sFQex) (if g$T$15446$sFQex (g$C$15445$sFQex g$name$8332$sFQex) (cons (case-lambda ((g$V$15447$sFQex) (cdr (case-lambda ((g$V$15448$sFQex) (g$f$8328$sFQex g$C$15445$sFQex g$ls$8329$sFQex g$V$15448$sFQex g$V$15447$sFQex))) g$exts$8330$sFQex))) g$name$8332$sFQex g$failed-list$8331$sFQex)))) g$name$8332$sFQex))) g$C$15449$sFQex g$V$15457$sFQex))) g$V$15456$sFQex g$str$8327$sFQex g$V$15455$sFQex))) g$ls$8329$sFQex))) g$exts$8330$sFQex)))) g$exts$8330$sFQex)))) g$ls$8329$sFQex)))))) (case-lambda ((g$V$15462$sFQex) (g$V$15462$sFQex g$C$15459$sFQex g$V$15461$sFQex g$V$15460$sFQex '()))) uninitialized))))))))) g$C$15463$sFQex g$V$15464$sFQex))) g$x$8326$sFQex))) (case-lambda ((g$C$15465$sFQex g$f$8333$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$15466$sFQex) (if g$T$15466$sFQex (g$C$15465$sFQex g$f$8333$sFQex) (g$assertion-violation$6456$sFQex g$C$15465$sFQex 'file-locator '"not a procedure" g$f$8333$sFQex)))) g$f$8333$sFQex)))))) (library-letrec*-identity 'g$file-locator$8271$sFQex))) (g$serialize-all$8272$sFQex g$serialize-all$8475$sFQex ((case-lambda ((g$C$15729$sFQex) (g$C$15729$sFQex (case-lambda ((g$C$15493$sFQex g$serialize$8334$sFQex g$compile$8335$sFQex) ((case-lambda ((g$C$15490$sFQex g$library-desc$8336$sFQex) (begin (set! g$library-desc$8336$sFQex (case-lambda ((g$C$15467$sFQex g$x$8338$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15468$sFQex) (g$library-id$8237$sFQex (case-lambda ((g$V$15469$sFQex) (list g$C$15467$sFQex g$V$15469$sFQex g$V$15468$sFQex))) g$x$8338$sFQex))) g$x$8338$sFQex)))) (g$current-library-collection$8231$sFQex (case-lambda ((g$V$15491$sFQex) (g$V$15491$sFQex (case-lambda ((g$V$15492$sFQex) (g$for-each$5681$sFQex g$C$15490$sFQex (case-lambda ((g$C$15470$sFQex g$x$8337$sFQex) (g$library-source-file-name$8250$sFQex (case-lambda ((g$T$15471$sFQex) (if g$T$15471$sFQex (g$library-visible?$8249$sFQex (case-lambda ((g$V$15472$sFQex) (g$library-invoke-code$8248$sFQex (case-lambda ((g$V$15473$sFQex) (g$compile$8335$sFQex (case-lambda ((g$V$15474$sFQex) (g$library-visit-code$8247$sFQex (case-lambda ((g$V$15475$sFQex) (g$compile$8335$sFQex (case-lambda ((g$V$15476$sFQex) (g$library-env$8244$sFQex (case-lambda ((g$V$15477$sFQex) (g$library-subst$8243$sFQex (case-lambda ((g$V$15478$sFQex) (g$library-inv*$8242$sFQex (case-lambda ((g$V$15479$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15480$sFQex) (g$library-vis*$8241$sFQex (case-lambda ((g$V$15481$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15482$sFQex) (g$library-imp*$8240$sFQex (case-lambda ((g$V$15483$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15484$sFQex) (g$library-version$8239$sFQex (case-lambda ((g$V$15485$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15486$sFQex) (g$library-id$8237$sFQex (case-lambda ((g$V$15487$sFQex) (list (case-lambda ((g$V$15488$sFQex) (g$library-source-file-name$8250$sFQex (case-lambda ((g$V$15489$sFQex) (g$serialize$8334$sFQex g$C$15470$sFQex g$V$15489$sFQex g$V$15488$sFQex))) g$x$8337$sFQex))) g$V$15487$sFQex g$V$15486$sFQex g$V$15485$sFQex g$V$15484$sFQex g$V$15482$sFQex g$V$15480$sFQex g$V$15478$sFQex g$V$15477$sFQex g$V$15476$sFQex g$V$15474$sFQex g$V$15472$sFQex))) g$x$8337$sFQex))) g$x$8337$sFQex))) g$x$8337$sFQex))) g$library-desc$8336$sFQex g$V$15483$sFQex))) g$x$8337$sFQex))) g$library-desc$8336$sFQex g$V$15481$sFQex))) g$x$8337$sFQex))) g$library-desc$8336$sFQex g$V$15479$sFQex))) g$x$8337$sFQex))) g$x$8337$sFQex))) g$x$8337$sFQex))) g$V$15475$sFQex))) g$x$8337$sFQex))) g$V$15473$sFQex))) g$x$8337$sFQex))) g$x$8337$sFQex) (void g$C$15470$sFQex)))) g$x$8337$sFQex))) g$V$15492$sFQex)))))))))) g$C$15493$sFQex uninitialized)))))) (library-letrec*-identity 'g$serialize-all$8272$sFQex))) (g$current-precompiled-library-loader$8273$sFQex g$current-precompiled-library-loader$8476$sFQex ((case-lambda ((g$C$15730$sFQex) (g$make-parameter$7979$sFQex g$C$15730$sFQex (case-lambda ((g$C$15494$sFQex g$filename$8339$sFQex g$sk$8340$sFQex) (g$C$15494$sFQex '#f)))))) (library-letrec*-identity 'g$current-precompiled-library-loader$8273$sFQex))) (g$try-load-from-file$8274$sFQex g$try-load-from-file$8477$sFQex ((case-lambda ((g$C$15731$sFQex) (g$C$15731$sFQex (case-lambda ((g$C$15517$sFQex g$filename$8341$sFQex) (g$current-precompiled-library-loader$8273$sFQex (case-lambda ((g$V$15518$sFQex) (g$V$15518$sFQex g$C$15517$sFQex g$filename$8341$sFQex (case-lambda ((g$C$15514$sFQex g$id$8342$sFQex g$name$8343$sFQex g$ver$8344$sFQex g$imp*$8345$sFQex g$vis*$8346$sFQex g$inv*$8347$sFQex g$exp-subst$8348$sFQex g$exp-env$8349$sFQex g$visit-proc$8350$sFQex g$invoke-proc$8351$sFQex g$visible?$8352$sFQex) (append (case-lambda ((g$V$15515$sFQex) ((case-lambda ((g$C$15513$sFQex g$f$8353$sFQex) ((case-lambda ((g$C$15496$sFQex g$f$15495$sFQex) (begin (set! g$f$8353$sFQex g$f$15495$sFQex) (g$C$15496$sFQex g$f$8353$sFQex)))) g$C$15513$sFQex (case-lambda ((g$C$15509$sFQex g$deps$8354$sFQex) (null? (case-lambda ((g$T$15510$sFQex) (if g$T$15510$sFQex (g$install-library$8284$sFQex (case-lambda (g$IGNORE$15511$sFQex (g$C$15509$sFQex '#t))) g$id$8342$sFQex g$name$8343$sFQex g$ver$8344$sFQex g$imp*$8345$sFQex g$vis*$8346$sFQex g$inv*$8347$sFQex g$exp-subst$8348$sFQex g$exp-env$8349$sFQex g$visit-proc$8350$sFQex g$invoke-proc$8351$sFQex '#f '#f g$visible?$8352$sFQex '#f) (car (case-lambda ((g$V$15512$sFQex) ((case-lambda ((g$C$15506$sFQex g$d$8355$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$15507$sFQex) (car (case-lambda ((g$V$15508$sFQex) ((case-lambda ((g$C$15504$sFQex g$label$8356$sFQex g$dname$8357$sFQex) (g$find-library-by-name$8279$sFQex (case-lambda ((g$V$15505$sFQex) ((case-lambda ((g$C$15497$sFQex g$l$8358$sFQex) ((case-lambda ((g$J$15501$sFQex) (g$library?$8235$sFQex (case-lambda ((g$T$15502$sFQex) (if g$T$15502$sFQex (g$library-id$8237$sFQex (case-lambda ((g$V$15503$sFQex) (eq? g$J$15501$sFQex g$label$8356$sFQex g$V$15503$sFQex))) g$l$8358$sFQex) (g$J$15501$sFQex '#f)))) g$l$8358$sFQex))) (case-lambda ((g$T$15498$sFQex) (if g$T$15498$sFQex (cdr (case-lambda ((g$V$15499$sFQex) (g$f$8353$sFQex g$C$15497$sFQex g$V$15499$sFQex))) g$deps$8354$sFQex) (g$library-version-mismatch-warning$7976$sFQex (case-lambda (g$IGNORE$15500$sFQex (g$C$15497$sFQex '#f))) g$name$8343$sFQex g$dname$8357$sFQex g$filename$8341$sFQex))))))) g$C$15504$sFQex g$V$15505$sFQex))) g$dname$8357$sFQex))) g$C$15506$sFQex g$V$15508$sFQex g$V$15507$sFQex))) g$d$8355$sFQex))) g$d$8355$sFQex))) g$C$15509$sFQex g$V$15512$sFQex))) g$deps$8354$sFQex)))) g$deps$8354$sFQex)))))) (case-lambda ((g$V$15516$sFQex) (g$V$15516$sFQex g$C$15514$sFQex g$V$15515$sFQex))) uninitialized))) g$imp*$8345$sFQex g$vis*$8346$sFQex g$inv*$8347$sFQex)) ((g$C$15514$sFQex . g$others$8359$sFQex) (g$C$15514$sFQex '#f)))))))))))) (library-letrec*-identity 'g$try-load-from-file$8274$sFQex))) (g$library-loader$8275$sFQex g$library-loader$8478$sFQex ((case-lambda ((g$C$15732$sFQex) (g$make-parameter$7979$sFQex g$C$15732$sFQex (case-lambda ((g$C$15539$sFQex g$x$8360$sFQex) (g$file-locator$8271$sFQex (case-lambda ((g$V$15540$sFQex) (g$V$15540$sFQex (case-lambda ((g$V$15541$sFQex) ((case-lambda ((g$C$15536$sFQex g$file-name$8361$sFQex) (not (case-lambda ((g$T$15537$sFQex) (if g$T$15537$sFQex (g$assertion-violation$6456$sFQex g$C$15536$sFQex '#f '"cannot file library" g$x$8360$sFQex) (g$try-load-from-file$8274$sFQex (case-lambda ((g$V$15538$sFQex) ((case-lambda ((g$C$15533$sFQex g$t$8362$sFQex) (if g$t$8362$sFQex (g$C$15533$sFQex g$t$8362$sFQex) (g$read-library-source-file$7978$sFQex (case-lambda ((g$V$15534$sFQex) (g$current-library-expander$8276$sFQex (case-lambda ((g$V$15535$sFQex) (g$V$15535$sFQex g$C$15533$sFQex g$V$15534$sFQex g$file-name$8361$sFQex (case-lambda ((g$C$15529$sFQex g$name$8363$sFQex) (equal? (case-lambda ((g$V$15530$sFQex) (not (case-lambda ((g$T$15531$sFQex) (if g$T$15531$sFQex (call-with-values (case-lambda ((g$V$15532$sFQex) (g$assertion-violation$6456$sFQex g$C$15529$sFQex 'import g$V$15532$sFQex))) (case-lambda ((g$C$15519$sFQex) (g$open-string-output-port$7329$sFQex g$C$15519$sFQex))) (case-lambda ((g$C$15528$sFQex g$p$8366$sFQex g$e$8367$sFQex) ((case-lambda ((g$C$15520$sFQex g$e$8368$sFQex g$p$8369$sFQex) (display (case-lambda (g$IGNORE$15521$sFQex (write (case-lambda (g$IGNORE$15522$sFQex (display (case-lambda (g$IGNORE$15523$sFQex (display (case-lambda (g$IGNORE$15524$sFQex (display (case-lambda (g$IGNORE$15525$sFQex (write (case-lambda (g$IGNORE$15526$sFQex (display (case-lambda (g$IGNORE$15527$sFQex (g$e$8368$sFQex g$C$15520$sFQex))) '" instead" g$p$8369$sFQex))) g$name$8363$sFQex g$p$8369$sFQex))) '", found " g$p$8369$sFQex))) g$file-name$8361$sFQex g$p$8369$sFQex))) '" in file " g$p$8369$sFQex))) g$x$8360$sFQex g$p$8369$sFQex))) '"expected to find library " g$p$8369$sFQex))) g$C$15528$sFQex g$e$8367$sFQex g$p$8366$sFQex)))) (void g$C$15529$sFQex)))) g$V$15530$sFQex))) g$name$8363$sFQex g$x$8360$sFQex))))))))) g$file-name$8361$sFQex)))) g$C$15536$sFQex g$V$15538$sFQex))) g$file-name$8361$sFQex)))) g$file-name$8361$sFQex))) g$C$15539$sFQex g$V$15541$sFQex))) g$x$8360$sFQex)))))) (case-lambda ((g$C$15542$sFQex g$f$8370$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$15543$sFQex) (if g$T$15543$sFQex (g$C$15542$sFQex g$f$8370$sFQex) (g$assertion-violation$6456$sFQex g$C$15542$sFQex 'library-locator '"not a procedure" g$f$8370$sFQex)))) g$f$8370$sFQex)))))) (library-letrec*-identity 'g$library-loader$8275$sFQex))) (g$current-library-expander$8276$sFQex g$current-library-expander$8479$sFQex ((case-lambda ((g$C$15733$sFQex) (g$make-parameter$7979$sFQex g$C$15733$sFQex (case-lambda ((g$C$15544$sFQex g$x$8371$sFQex) (g$assertion-violation$6456$sFQex g$C$15544$sFQex 'library-expander '"not initialized"))) (case-lambda ((g$C$15545$sFQex g$f$8372$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$15546$sFQex) (if g$T$15546$sFQex (g$C$15545$sFQex g$f$8372$sFQex) (g$assertion-violation$6456$sFQex g$C$15545$sFQex 'library-expander '"not a procedure" g$f$8372$sFQex)))) g$f$8372$sFQex)))))) (library-letrec*-identity 'g$current-library-expander$8276$sFQex))) (g$external-pending-libraries$8277$sFQex g$external-pending-libraries$8480$sFQex ((case-lambda ((g$C$15734$sFQex) (g$make-parameter$7979$sFQex g$C$15734$sFQex '()))) (library-letrec*-identity 'g$external-pending-libraries$8277$sFQex))) (g$find-external-library$8278$sFQex g$find-external-library$8481$sFQex ((case-lambda ((g$C$15735$sFQex) (g$C$15735$sFQex (case-lambda ((g$C$15560$sFQex g$name$8373$sFQex) ((case-lambda ((g$J$15564$sFQex) (g$external-pending-libraries$8277$sFQex (case-lambda ((g$V$15565$sFQex) (g$member$5674$sFQex (case-lambda ((g$T$15566$sFQex) (if g$T$15566$sFQex (g$assertion-violation$6456$sFQex g$J$15564$sFQex '#f '"circular attempt to import library was detected" g$name$8373$sFQex) (void g$J$15564$sFQex)))) g$name$8373$sFQex g$V$15565$sFQex)))))) (case-lambda (g$IGNORE$15561$sFQex (g$external-pending-libraries$8277$sFQex (case-lambda ((g$V$15562$sFQex) (cons (case-lambda ((g$V$15563$sFQex) ((case-lambda ((g$C$15559$sFQex g$external-pending-libraries$8376$sFQex g$external-pending-libraries$8377$sFQex) ((case-lambda ((g$C$15554$sFQex g$swap$8378$sFQex) (dynamic-wind g$C$15554$sFQex g$swap$8378$sFQex (case-lambda ((g$C$15550$sFQex) (g$library-loader$8275$sFQex (case-lambda ((g$V$15551$sFQex) (g$V$15551$sFQex (case-lambda (g$IGNORE$15552$sFQex (g$find-library-by$8267$sFQex (case-lambda ((g$V$15553$sFQex) ((case-lambda ((g$C$15547$sFQex g$t$8379$sFQex) (if g$t$8379$sFQex (g$C$15547$sFQex g$t$8379$sFQex) (g$assertion-violation$6456$sFQex g$C$15547$sFQex '#f '"handling external library did not yield the correct library" g$name$8373$sFQex)))) g$C$15550$sFQex g$V$15553$sFQex))) (case-lambda ((g$C$15548$sFQex g$x$8380$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15549$sFQex) (equal? g$C$15548$sFQex g$V$15549$sFQex g$name$8373$sFQex))) g$x$8380$sFQex)))))) g$name$8373$sFQex)))))) g$swap$8378$sFQex))) g$C$15559$sFQex (case-lambda ((g$C$15557$sFQex) (g$external-pending-libraries$8376$sFQex (case-lambda ((g$V$15558$sFQex) ((case-lambda ((g$C$15555$sFQex g$t$8381$sFQex) (g$external-pending-libraries$8376$sFQex (case-lambda (g$IGNORE$15556$sFQex (begin (set! g$external-pending-libraries$8377$sFQex g$t$8381$sFQex) (g$C$15555$sFQex (cps-void))))) g$external-pending-libraries$8377$sFQex))) g$C$15557$sFQex g$V$15558$sFQex))))))))) g$C$15560$sFQex g$external-pending-libraries$8277$sFQex g$V$15563$sFQex))) g$name$8373$sFQex g$V$15562$sFQex)))))))))))) (library-letrec*-identity 'g$find-external-library$8278$sFQex))) (g$find-library-by-name$8279$sFQex g$find-library-by-name$8482$sFQex ((case-lambda ((g$C$15736$sFQex) (g$C$15736$sFQex (case-lambda ((g$C$15570$sFQex g$name$8382$sFQex) (g$find-library-by$8267$sFQex (case-lambda ((g$V$15571$sFQex) ((case-lambda ((g$C$15567$sFQex g$t$8383$sFQex) (if g$t$8383$sFQex (g$C$15567$sFQex g$t$8383$sFQex) (g$find-external-library$8278$sFQex g$C$15567$sFQex g$name$8382$sFQex)))) g$C$15570$sFQex g$V$15571$sFQex))) (case-lambda ((g$C$15568$sFQex g$x$8384$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15569$sFQex) (equal? g$C$15568$sFQex g$V$15569$sFQex g$name$8382$sFQex))) g$x$8384$sFQex))))))))) (library-letrec*-identity 'g$find-library-by-name$8279$sFQex))) (g$uninstall-library$8280$sFQex g$uninstall-library$8483$sFQex ((case-lambda ((g$C$15737$sFQex) (g$C$15737$sFQex (case-lambda ((g$C$15582$sFQex g$name$8385$sFQex g$err?$8386$sFQex) ((case-lambda ((g$C$15580$sFQex g$who$8387$sFQex) (begin (set! g$who$8387$sFQex 'uninstall-library) (g$find-library-by$8267$sFQex (case-lambda ((g$V$15581$sFQex) ((case-lambda ((g$C$15572$sFQex g$lib$8388$sFQex) ((case-lambda ((g$J$15575$sFQex) ((case-lambda ((g$J$15577$sFQex) (if g$err?$8386$sFQex (not g$J$15577$sFQex g$lib$8388$sFQex) (g$J$15577$sFQex '#f)))) (case-lambda ((g$T$15576$sFQex) (if g$T$15576$sFQex (g$assertion-violation$6456$sFQex g$J$15575$sFQex g$who$8387$sFQex '"library not installed" g$name$8385$sFQex) (void g$J$15575$sFQex))))))) (case-lambda (g$IGNORE$15573$sFQex (g$current-library-collection$8231$sFQex (case-lambda ((g$V$15574$sFQex) (g$V$15574$sFQex g$C$15572$sFQex g$lib$8388$sFQex '#t))))))))) g$C$15580$sFQex g$V$15581$sFQex))) (case-lambda ((g$C$15578$sFQex g$x$8389$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15579$sFQex) (equal? g$C$15578$sFQex g$V$15579$sFQex g$name$8385$sFQex))) g$x$8389$sFQex))))))) g$C$15582$sFQex uninitialized)) ((g$C$15582$sFQex g$name$8390$sFQex) (g$uninstall-library$8280$sFQex g$C$15582$sFQex g$name$8390$sFQex '#t)))))) (library-letrec*-identity 'g$uninstall-library$8280$sFQex))) (g$library-exists?$8281$sFQex g$library-exists?$8484$sFQex ((case-lambda ((g$C$15738$sFQex) (g$C$15738$sFQex (case-lambda ((g$C$15585$sFQex g$name$8391$sFQex) (g$find-library-by$8267$sFQex (case-lambda ((g$T$15586$sFQex) (if g$T$15586$sFQex (g$C$15585$sFQex '#t) (g$C$15585$sFQex '#f)))) (case-lambda ((g$C$15583$sFQex g$x$8392$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15584$sFQex) (equal? g$C$15583$sFQex g$V$15584$sFQex g$name$8391$sFQex))) g$x$8392$sFQex))))))))) (library-letrec*-identity 'g$library-exists?$8281$sFQex))) (g$find-library-by-spec/die$8282$sFQex g$find-library-by-spec/die$8485$sFQex ((case-lambda ((g$C$15739$sFQex) (g$C$15739$sFQex (case-lambda ((g$C$15592$sFQex g$spec$8393$sFQex) (car (case-lambda ((g$V$15593$sFQex) ((case-lambda ((g$C$15590$sFQex g$id$8394$sFQex) (g$find-library-by$8267$sFQex (case-lambda ((g$V$15591$sFQex) ((case-lambda ((g$C$15587$sFQex g$t$8395$sFQex) (if g$t$8395$sFQex (g$C$15587$sFQex g$t$8395$sFQex) (g$assertion-violation$6456$sFQex g$C$15587$sFQex '#f '"cannot find library with required spec" g$spec$8393$sFQex)))) g$C$15590$sFQex g$V$15591$sFQex))) (case-lambda ((g$C$15588$sFQex g$x$8396$sFQex) (g$library-id$8237$sFQex (case-lambda ((g$V$15589$sFQex) (eq? g$C$15588$sFQex g$id$8394$sFQex g$V$15589$sFQex))) g$x$8396$sFQex)))))) g$C$15592$sFQex g$V$15593$sFQex))) g$spec$8393$sFQex)))))) (library-letrec*-identity 'g$find-library-by-spec/die$8282$sFQex))) (g$install-library-record$8283$sFQex g$install-library-record$8486$sFQex ((case-lambda ((g$C$15740$sFQex) (g$C$15740$sFQex (case-lambda ((g$C$15615$sFQex g$lib$8397$sFQex) (g$library-env$8244$sFQex (case-lambda ((g$V$15616$sFQex) ((case-lambda ((g$C$15614$sFQex g$exp-env$8398$sFQex) (g$for-each$5681$sFQex g$C$15614$sFQex (case-lambda ((g$C$15611$sFQex g$x$8399$sFQex) (cdr (case-lambda ((g$V$15612$sFQex) (car (case-lambda ((g$V$15613$sFQex) ((case-lambda ((g$C$15608$sFQex g$label$8400$sFQex g$binding$8401$sFQex) (car (case-lambda ((g$V$15609$sFQex) ((case-lambda ((g$C$15595$sFQex g$t$8403$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15596$sFQex) (if g$T$15596$sFQex (cdr (case-lambda ((g$V$15597$sFQex) (cons (case-lambda ((g$V$15598$sFQex) (cons g$C$15595$sFQex 'global g$V$15598$sFQex))) g$lib$8397$sFQex g$V$15597$sFQex))) g$binding$8401$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15599$sFQex) (if g$T$15599$sFQex (cdr (case-lambda ((g$V$15600$sFQex) (cons (case-lambda ((g$V$15601$sFQex) (cons g$C$15595$sFQex 'global-macro g$V$15601$sFQex))) g$lib$8397$sFQex g$V$15600$sFQex))) g$binding$8401$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15602$sFQex) (if g$T$15602$sFQex (cdr (case-lambda ((g$V$15603$sFQex) (cons (case-lambda ((g$V$15604$sFQex) (cons g$C$15595$sFQex 'global-macro! g$V$15604$sFQex))) g$lib$8397$sFQex g$V$15603$sFQex))) g$binding$8401$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$15605$sFQex) (if g$T$15605$sFQex (cdr (case-lambda ((g$V$15606$sFQex) (cons (case-lambda ((g$V$15607$sFQex) (cons g$C$15595$sFQex 'global-ctv g$V$15607$sFQex))) g$lib$8397$sFQex g$V$15606$sFQex))) g$binding$8401$sFQex) (g$C$15595$sFQex g$binding$8401$sFQex)))) g$t$8403$sFQex '(global-ctv))))) g$t$8403$sFQex '(global-macro!))))) g$t$8403$sFQex '(global-macro))))) g$t$8403$sFQex '(global)))) (case-lambda ((g$V$15610$sFQex) ((case-lambda ((g$C$15594$sFQex g$binding$8402$sFQex) (g$set-label-binding!$7982$sFQex g$C$15594$sFQex g$label$8400$sFQex g$binding$8402$sFQex))) g$C$15608$sFQex g$V$15610$sFQex))) g$V$15609$sFQex))) g$binding$8401$sFQex))) g$C$15611$sFQex g$V$15613$sFQex g$V$15612$sFQex))) g$x$8399$sFQex))) g$x$8399$sFQex))) g$exp-env$8398$sFQex))) (case-lambda (g$IGNORE$15617$sFQex (g$current-library-collection$8231$sFQex (case-lambda ((g$V$15618$sFQex) (g$V$15618$sFQex g$C$15615$sFQex g$lib$8397$sFQex)))))) g$V$15616$sFQex))) g$lib$8397$sFQex)))))) (library-letrec*-identity 'g$install-library-record$8283$sFQex))) (g$install-library$8284$sFQex g$install-library$8487$sFQex ((case-lambda ((g$C$15741$sFQex) (g$C$15741$sFQex (case-lambda ((g$C$15632$sFQex g$id$8404$sFQex g$name$8405$sFQex g$ver$8406$sFQex g$imp*$8407$sFQex g$vis*$8408$sFQex g$inv*$8409$sFQex g$exp-subst$8410$sFQex g$exp-env$8411$sFQex g$visit-proc$8412$sFQex g$invoke-proc$8413$sFQex g$visit-code$8414$sFQex g$invoke-code$8415$sFQex g$visible?$8416$sFQex g$source-file-name$8417$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15633$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15634$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15635$sFQex) ((case-lambda ((g$C$15620$sFQex g$imp-lib*$8418$sFQex g$vis-lib*$8419$sFQex g$inv-lib*$8420$sFQex) ((case-lambda ((g$J$15626$sFQex) ((case-lambda ((g$J$15629$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$15630$sFQex) (if g$T$15630$sFQex (list? (case-lambda ((g$T$15631$sFQex) (if g$T$15631$sFQex (list? g$J$15629$sFQex g$ver$8406$sFQex) (g$J$15629$sFQex '#f)))) g$name$8405$sFQex) (g$J$15629$sFQex '#f)))) g$id$8404$sFQex))) (case-lambda ((g$V$15627$sFQex) (not (case-lambda ((g$T$15628$sFQex) (if g$T$15628$sFQex (g$assertion-violation$6456$sFQex g$J$15626$sFQex 'install-library '"invalid spec with id/name/ver" g$id$8404$sFQex g$name$8405$sFQex g$ver$8406$sFQex) (void g$J$15626$sFQex)))) g$V$15627$sFQex)))))) (case-lambda (g$IGNORE$15621$sFQex ((case-lambda ((g$J$15624$sFQex) (g$library-exists?$8281$sFQex (case-lambda ((g$T$15625$sFQex) (if g$T$15625$sFQex (g$assertion-violation$6456$sFQex g$J$15624$sFQex 'install-library '"library is already installed" g$name$8405$sFQex) (void g$J$15624$sFQex)))) g$name$8405$sFQex))) (case-lambda (g$IGNORE$15622$sFQex (g$make-library$8236$sFQex (case-lambda ((g$V$15623$sFQex) ((case-lambda ((g$C$15619$sFQex g$lib$8421$sFQex) (g$install-library-record$8283$sFQex g$C$15619$sFQex g$lib$8421$sFQex))) g$C$15620$sFQex g$V$15623$sFQex))) g$id$8404$sFQex g$name$8405$sFQex g$ver$8406$sFQex g$imp-lib*$8418$sFQex g$vis-lib*$8419$sFQex g$inv-lib*$8420$sFQex g$exp-subst$8410$sFQex g$exp-env$8411$sFQex g$visit-proc$8412$sFQex g$invoke-proc$8413$sFQex g$visit-code$8414$sFQex g$invoke-code$8415$sFQex g$visible?$8416$sFQex g$source-file-name$8417$sFQex))))))))) g$C$15632$sFQex g$V$15635$sFQex g$V$15634$sFQex g$V$15633$sFQex))) g$find-library-by-spec/die$8282$sFQex g$imp*$8407$sFQex))) g$find-library-by-spec/die$8282$sFQex g$vis*$8408$sFQex))) g$find-library-by-spec/die$8282$sFQex g$inv*$8409$sFQex)))))) (library-letrec*-identity 'g$install-library$8284$sFQex))) (g$imported-label->binding$8285$sFQex g$imported-label->binding$8488$sFQex ((case-lambda ((g$C$15742$sFQex) (g$C$15742$sFQex (case-lambda ((g$C$15636$sFQex g$lab$8422$sFQex) (g$label-binding$7983$sFQex g$C$15636$sFQex g$lab$8422$sFQex)))))) (library-letrec*-identity 'g$imported-label->binding$8285$sFQex))) (g$invoke-library$8286$sFQex g$invoke-library$8489$sFQex ((case-lambda ((g$C$15743$sFQex) (g$C$15743$sFQex (case-lambda ((g$C$15646$sFQex g$lib$8423$sFQex) (g$library-invoke-state$8246$sFQex (case-lambda ((g$V$15647$sFQex) ((case-lambda ((g$C$15639$sFQex g$invoke$8424$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$15640$sFQex) (if g$T$15640$sFQex (g$set-library-invoke-state!$8260$sFQex (case-lambda (g$IGNORE$15641$sFQex (g$library-inv*$8242$sFQex (case-lambda ((g$V$15642$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$15643$sFQex (g$set-library-invoke-state!$8260$sFQex (case-lambda (g$IGNORE$15644$sFQex (g$invoke$8424$sFQex (case-lambda (g$IGNORE$15645$sFQex (g$set-library-invoke-state!$8260$sFQex g$C$15639$sFQex g$lib$8423$sFQex '#t)))))) g$lib$8423$sFQex (case-lambda ((g$C$15638$sFQex) (g$assertion-violation$6456$sFQex g$C$15638$sFQex 'invoke '"first invoke did not return" g$lib$8423$sFQex)))))) g$invoke-library$8286$sFQex g$V$15642$sFQex))) g$lib$8423$sFQex))) g$lib$8423$sFQex (case-lambda ((g$C$15637$sFQex) (g$assertion-violation$6456$sFQex g$C$15637$sFQex 'invoke '"circularity detected" g$lib$8423$sFQex)))) (void g$C$15639$sFQex)))) g$invoke$8424$sFQex))) g$C$15646$sFQex g$V$15647$sFQex))) g$lib$8423$sFQex)))))) (library-letrec*-identity 'g$invoke-library$8286$sFQex))) (g$visit-library$8287$sFQex g$visit-library$8490$sFQex ((case-lambda ((g$C$15744$sFQex) (g$C$15744$sFQex (case-lambda ((g$C$15657$sFQex g$lib$8425$sFQex) (g$library-visit-state$8245$sFQex (case-lambda ((g$V$15658$sFQex) ((case-lambda ((g$C$15650$sFQex g$visit$8426$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$15651$sFQex) (if g$T$15651$sFQex (g$set-library-visit-state!$8259$sFQex (case-lambda (g$IGNORE$15652$sFQex (g$library-vis*$8241$sFQex (case-lambda ((g$V$15653$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$15654$sFQex (g$set-library-visit-state!$8259$sFQex (case-lambda (g$IGNORE$15655$sFQex (g$visit$8426$sFQex (case-lambda (g$IGNORE$15656$sFQex (g$set-library-visit-state!$8259$sFQex g$C$15650$sFQex g$lib$8425$sFQex '#t)))))) g$lib$8425$sFQex (case-lambda ((g$C$15649$sFQex) (g$assertion-violation$6456$sFQex g$C$15649$sFQex 'invoke '"first visit did not return" g$lib$8425$sFQex)))))) g$invoke-library$8286$sFQex g$V$15653$sFQex))) g$lib$8425$sFQex))) g$lib$8425$sFQex (case-lambda ((g$C$15648$sFQex) (g$assertion-violation$6456$sFQex g$C$15648$sFQex 'visit '"circularity detected" g$lib$8425$sFQex)))) (void g$C$15650$sFQex)))) g$visit$8426$sFQex))) g$C$15657$sFQex g$V$15658$sFQex))) g$lib$8425$sFQex)))))) (library-letrec*-identity 'g$visit-library$8287$sFQex))) (g$invoke-library-by-spec$8288$sFQex g$invoke-library-by-spec$8491$sFQex ((case-lambda ((g$C$15745$sFQex) (g$C$15745$sFQex (case-lambda ((g$C$15659$sFQex g$spec$8427$sFQex) (g$find-library-by-spec/die$8282$sFQex (case-lambda ((g$V$15660$sFQex) (g$invoke-library$8286$sFQex g$C$15659$sFQex g$V$15660$sFQex))) g$spec$8427$sFQex)))))) (library-letrec*-identity 'g$invoke-library-by-spec$8288$sFQex))) (g$installed-libraries$8289$sFQex g$installed-libraries$8492$sFQex ((case-lambda ((g$C$15746$sFQex) (g$C$15746$sFQex (case-lambda ((g$C$15674$sFQex g$all?$8428$sFQex) (g$current-library-collection$8231$sFQex (case-lambda ((g$V$15675$sFQex) (g$V$15675$sFQex (case-lambda ((g$V$15676$sFQex) ((case-lambda ((g$C$15673$sFQex g$f$8429$sFQex) ((case-lambda ((g$C$15662$sFQex g$f$15661$sFQex) (begin (set! g$f$8429$sFQex g$f$15661$sFQex) (g$C$15662$sFQex g$f$8429$sFQex)))) g$C$15673$sFQex (case-lambda ((g$C$15665$sFQex g$ls$8430$sFQex) (null? (case-lambda ((g$T$15666$sFQex) (if g$T$15666$sFQex (g$C$15665$sFQex '()) ((case-lambda ((g$C$15663$sFQex g$t$8431$sFQex) (if g$t$8431$sFQex (g$C$15663$sFQex g$t$8431$sFQex) (car (case-lambda ((g$V$15664$sFQex) (g$library-visible?$8249$sFQex g$C$15663$sFQex g$V$15664$sFQex))) g$ls$8430$sFQex)))) (case-lambda ((g$T$15667$sFQex) (if g$T$15667$sFQex (cdr (case-lambda ((g$V$15668$sFQex) (g$f$8429$sFQex (case-lambda ((g$V$15669$sFQex) (car (case-lambda ((g$V$15670$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15671$sFQex) (cons g$C$15665$sFQex g$V$15671$sFQex g$V$15669$sFQex))) g$V$15670$sFQex))) g$ls$8430$sFQex))) g$V$15668$sFQex))) g$ls$8430$sFQex) (cdr (case-lambda ((g$V$15672$sFQex) (g$f$8429$sFQex g$C$15665$sFQex g$V$15672$sFQex))) g$ls$8430$sFQex)))) g$all?$8428$sFQex)))) g$ls$8430$sFQex)))))) (case-lambda ((g$V$15677$sFQex) (g$V$15677$sFQex g$C$15674$sFQex g$V$15676$sFQex))) uninitialized)))))))) ((g$C$15674$sFQex) (g$installed-libraries$8289$sFQex g$C$15674$sFQex '#f)))))) (library-letrec*-identity 'g$installed-libraries$8289$sFQex))) (g$library-spec$8290$sFQex g$library-spec$8493$sFQex ((case-lambda ((g$C$15747$sFQex) (g$C$15747$sFQex (case-lambda ((g$C$15678$sFQex g$x$8432$sFQex) ((case-lambda ((g$J$15683$sFQex) (g$library?$8235$sFQex (case-lambda ((g$V$15684$sFQex) (not (case-lambda ((g$T$15685$sFQex) (if g$T$15685$sFQex (g$assertion-violation$6456$sFQex g$J$15683$sFQex 'library-spec '"not a library" g$x$8432$sFQex) (void g$J$15683$sFQex)))) g$V$15684$sFQex))) g$x$8432$sFQex))) (case-lambda (g$IGNORE$15679$sFQex (g$library-version$8239$sFQex (case-lambda ((g$V$15680$sFQex) (g$library-name$8238$sFQex (case-lambda ((g$V$15681$sFQex) (g$library-id$8237$sFQex (case-lambda ((g$V$15682$sFQex) (list g$C$15678$sFQex g$V$15682$sFQex g$V$15681$sFQex g$V$15680$sFQex))) g$x$8432$sFQex))) g$x$8432$sFQex))) g$x$8432$sFQex))))))))) (library-letrec*-identity 'g$library-spec$8290$sFQex)))) (void identity-for-cps))(library-letrec* (psyntax builders) ((g$build-global-define$8494$sFQex g$build-global-define$8607$sFQex ((case-lambda ((g$C$15782$sFQex) (g$C$15782$sFQex (case-lambda ((g$C$15748$sFQex g$x$8575$sFQex) (g$build-void$8571$sFQex g$C$15748$sFQex)))))) (library-letrec*-identity 'g$build-global-define$8494$sFQex))) (g$build-lambda$8543$sFQex g$build-lambda$8608$sFQex ((case-lambda ((g$C$15783$sFQex) (g$C$15783$sFQex (case-lambda ((g$C$15749$sFQex g$ae$8576$sFQex g$vars$8577$sFQex g$exp$8578$sFQex) (list (case-lambda ((g$V$15750$sFQex) (list g$C$15749$sFQex 'case-lambda g$V$15750$sFQex))) g$vars$8577$sFQex g$exp$8578$sFQex)))))) (library-letrec*-identity 'g$build-lambda$8543$sFQex))) (g$build-case-lambda$8544$sFQex g$build-case-lambda$8609$sFQex ((case-lambda ((g$C$15784$sFQex) (g$C$15784$sFQex (case-lambda ((g$C$15751$sFQex g$ae$8579$sFQex g$vars*$8580$sFQex g$exp*$8581$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15752$sFQex) (cons g$C$15751$sFQex 'case-lambda g$V$15752$sFQex))) list g$vars*$8580$sFQex g$exp*$8581$sFQex)))))) (library-letrec*-identity 'g$build-case-lambda$8544$sFQex))) (g$build-let$8545$sFQex g$build-let$8610$sFQex ((case-lambda ((g$C$15785$sFQex) (g$C$15785$sFQex (case-lambda ((g$C$15753$sFQex g$ae$8582$sFQex g$lhs*$8583$sFQex g$rhs*$8584$sFQex g$body$8585$sFQex) (g$build-lambda$8543$sFQex (case-lambda ((g$V$15754$sFQex) (cons g$C$15753$sFQex g$V$15754$sFQex g$rhs*$8584$sFQex))) g$ae$8582$sFQex g$lhs*$8583$sFQex g$body$8585$sFQex)))))) (library-letrec*-identity 'g$build-let$8545$sFQex))) (g$build-sequence$8570$sFQex g$build-sequence$8611$sFQex ((case-lambda ((g$C$15786$sFQex) (g$C$15786$sFQex (case-lambda ((g$C$15765$sFQex g$ae$8586$sFQex g$exps$8587$sFQex) ((case-lambda ((g$C$15764$sFQex g$loop$8588$sFQex) ((case-lambda ((g$C$15756$sFQex g$loop$15755$sFQex) (begin (set! g$loop$8588$sFQex g$loop$15755$sFQex) (g$C$15756$sFQex g$loop$8588$sFQex)))) g$C$15764$sFQex (case-lambda ((g$C$15757$sFQex g$exps$8589$sFQex) (cdr (case-lambda ((g$V$15758$sFQex) (null? (case-lambda ((g$T$15759$sFQex) (if g$T$15759$sFQex (car g$C$15757$sFQex g$exps$8589$sFQex) (g$build-void$8571$sFQex (case-lambda ((g$V$15760$sFQex) (car (case-lambda ((g$V$15761$sFQex) (equal? (case-lambda ((g$T$15762$sFQex) (if g$T$15762$sFQex (cdr (case-lambda ((g$V$15763$sFQex) (g$loop$8588$sFQex g$C$15757$sFQex g$V$15763$sFQex))) g$exps$8589$sFQex) (cons g$C$15757$sFQex 'begin g$exps$8589$sFQex)))) g$V$15761$sFQex g$V$15760$sFQex))) g$exps$8589$sFQex))))))) g$V$15758$sFQex))) g$exps$8589$sFQex)))))) (case-lambda ((g$V$15766$sFQex) (g$V$15766$sFQex g$C$15765$sFQex g$exps$8587$sFQex))) uninitialized)))))) (library-letrec*-identity 'g$build-sequence$8570$sFQex))) (g$build-void$8571$sFQex g$build-void$8612$sFQex ((case-lambda ((g$C$15787$sFQex) (g$C$15787$sFQex (case-lambda ((g$C$15767$sFQex) (g$C$15767$sFQex '((primitive void)))))))) (library-letrec*-identity 'g$build-void$8571$sFQex))) (g$build-letrec$8572$sFQex g$build-letrec$8613$sFQex ((case-lambda ((g$C$15788$sFQex) (g$C$15788$sFQex (case-lambda ((g$C$15768$sFQex g$ae$8590$sFQex g$vars$8591$sFQex g$val-exps$8592$sFQex g$body-exp$8593$sFQex) (null? (case-lambda ((g$T$15769$sFQex) (if g$T$15769$sFQex (g$C$15768$sFQex g$body-exp$8593$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15770$sFQex) (list g$C$15768$sFQex 'letrec g$V$15770$sFQex g$body-exp$8593$sFQex))) list g$vars$8591$sFQex g$val-exps$8592$sFQex)))) g$vars$8591$sFQex)))))) (library-letrec*-identity 'g$build-letrec$8572$sFQex))) (g$build-letrec*$8573$sFQex g$build-letrec*$8614$sFQex ((case-lambda ((g$C$15789$sFQex) (g$C$15789$sFQex (case-lambda ((g$C$15773$sFQex g$ae$8594$sFQex g$vars$8595$sFQex g$val-exps$8596$sFQex g$body-exp$8597$sFQex) (null? (case-lambda ((g$T$15774$sFQex) (if g$T$15774$sFQex (g$C$15773$sFQex g$body-exp$8597$sFQex) (list (case-lambda ((g$V$15775$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15776$sFQex) (append (case-lambda ((g$V$15777$sFQex) (g$build-sequence$8570$sFQex (case-lambda ((g$V$15778$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15779$sFQex) (g$build-let$8545$sFQex g$C$15773$sFQex g$ae$8594$sFQex g$vars$8595$sFQex g$V$15779$sFQex g$V$15778$sFQex))) (case-lambda ((g$C$15771$sFQex g$x$8598$sFQex) (g$C$15771$sFQex 'uninitialized))) g$vars$8595$sFQex))) g$ae$8594$sFQex g$V$15777$sFQex))) g$V$15776$sFQex g$V$15775$sFQex))) (case-lambda ((g$C$15772$sFQex g$lhs$8599$sFQex g$rhs$8600$sFQex) (list g$C$15772$sFQex 'set! g$lhs$8599$sFQex g$rhs$8600$sFQex))) g$vars$8595$sFQex g$val-exps$8596$sFQex))) g$body-exp$8597$sFQex)))) g$vars$8595$sFQex)))))) (library-letrec*-identity 'g$build-letrec*$8573$sFQex))) (g$build-library-letrec*$8574$sFQex g$build-library-letrec*$8615$sFQex ((case-lambda ((g$C$15790$sFQex) (g$C$15790$sFQex (case-lambda ((g$C$15780$sFQex g$ae$8601$sFQex g$name$8602$sFQex g$vars$8603$sFQex g$locs$8604$sFQex g$val-exps$8605$sFQex g$body-exp$8606$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15781$sFQex) (list g$C$15780$sFQex 'library-letrec* g$name$8602$sFQex g$V$15781$sFQex g$body-exp$8606$sFQex))) list g$vars$8603$sFQex g$locs$8604$sFQex g$val-exps$8605$sFQex)))))) (library-letrec*-identity 'g$build-library-letrec*$8574$sFQex)))) (void identity-for-cps))(library-letrec* (psyntax expander) ((g$set-cons$8616$sFQex g$set-cons$12328$sFQex ((case-lambda ((g$C$20769$sFQex) (g$C$20769$sFQex (case-lambda ((g$C$15791$sFQex g$x$9082$sFQex g$ls$9083$sFQex) (g$memq$5672$sFQex (case-lambda ((g$T$15792$sFQex) (if g$T$15792$sFQex (g$C$15791$sFQex g$ls$9083$sFQex) (cons g$C$15791$sFQex g$x$9082$sFQex g$ls$9083$sFQex)))) g$x$9082$sFQex g$ls$9083$sFQex)))))) (library-letrec*-identity 'g$set-cons$8616$sFQex))) (g$set-union$8617$sFQex g$set-union$12329$sFQex ((case-lambda ((g$C$20770$sFQex) (g$C$20770$sFQex (case-lambda ((g$C$15793$sFQex g$ls1$9084$sFQex g$ls2$9085$sFQex) (null? (case-lambda ((g$T$15794$sFQex) (if g$T$15794$sFQex (g$C$15793$sFQex g$ls2$9085$sFQex) (car (case-lambda ((g$V$15795$sFQex) (g$memq$5672$sFQex (case-lambda ((g$T$15796$sFQex) (if g$T$15796$sFQex (cdr (case-lambda ((g$V$15797$sFQex) (g$set-union$8617$sFQex g$C$15793$sFQex g$V$15797$sFQex g$ls2$9085$sFQex))) g$ls1$9084$sFQex) (cdr (case-lambda ((g$V$15798$sFQex) (g$set-union$8617$sFQex (case-lambda ((g$V$15799$sFQex) (car (case-lambda ((g$V$15800$sFQex) (cons g$C$15793$sFQex g$V$15800$sFQex g$V$15799$sFQex))) g$ls1$9084$sFQex))) g$V$15798$sFQex g$ls2$9085$sFQex))) g$ls1$9084$sFQex)))) g$V$15795$sFQex g$ls2$9085$sFQex))) g$ls1$9084$sFQex)))) g$ls1$9084$sFQex)))))) (library-letrec*-identity 'g$set-union$8617$sFQex))) (g$top-mark*$8619$sFQex g$top-mark*$12330$sFQex ((case-lambda ((g$C$20771$sFQex) (g$C$20771$sFQex '(top)))) (library-letrec*-identity 'g$top-mark*$8619$sFQex))) (g$top-marked?$8620$sFQex g$top-marked?$12331$sFQex ((case-lambda ((g$C$20772$sFQex) (g$C$20772$sFQex (case-lambda ((g$C$15801$sFQex g$m*$9086$sFQex) (g$memq$5672$sFQex g$C$15801$sFQex 'top g$m*$9086$sFQex)))))) (library-letrec*-identity 'g$top-marked?$8620$sFQex))) (g$gen-lexical$8621$sFQex g$gen-lexical$12332$sFQex ((case-lambda ((g$C$20773$sFQex) (g$C$20773$sFQex (case-lambda ((g$C$15802$sFQex g$sym$9087$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$15803$sFQex) (if g$T$15803$sFQex (gensym g$C$15802$sFQex g$sym$9087$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$15804$sFQex) (if g$T$15804$sFQex (g$id->sym$8683$sFQex (case-lambda ((g$V$15805$sFQex) (g$gen-lexical$8621$sFQex g$C$15802$sFQex g$V$15805$sFQex))) g$sym$9087$sFQex) (g$assertion-violation$6456$sFQex g$C$15802$sFQex 'gen-lexical '"BUG: invalid arg" g$sym$9087$sFQex)))) g$sym$9087$sFQex)))) g$sym$9087$sFQex)))))) (library-letrec*-identity 'g$gen-lexical$8621$sFQex))) (g$gen-global$8622$sFQex g$gen-global$12333$sFQex ((case-lambda ((g$C$20774$sFQex) (g$C$20774$sFQex (case-lambda ((g$C$15806$sFQex g$x$9088$sFQex) (g$gen-lexical$8621$sFQex g$C$15806$sFQex g$x$9088$sFQex)))))) (library-letrec*-identity 'g$gen-global$8622$sFQex))) (g$gen-label$8623$sFQex g$gen-label$12334$sFQex ((case-lambda ((g$C$20775$sFQex) (g$C$20775$sFQex (case-lambda ((g$C$15807$sFQex g$_$9089$sFQex) (gensym g$C$15807$sFQex)))))) (library-letrec*-identity 'g$gen-label$8623$sFQex))) (g$gen-top-level-label$8624$sFQex g$gen-top-level-label$12335$sFQex ((case-lambda ((g$C$20776$sFQex) (g$C$20776$sFQex (case-lambda ((g$C$15833$sFQex g$id$9090$sFQex g$rib$9091$sFQex) ((case-lambda ((g$C$15830$sFQex g$find$9092$sFQex) (begin (set! g$find$9092$sFQex (case-lambda ((g$C$15808$sFQex g$sym$9098$sFQex g$mark*$9099$sFQex g$sym*$9100$sFQex g$mark**$9101$sFQex g$label*$9102$sFQex) (pair? (case-lambda ((g$T$15809$sFQex) (if g$T$15809$sFQex ((case-lambda ((g$J$15814$sFQex) (car (case-lambda ((g$V$15815$sFQex) (eq? (case-lambda ((g$T$15816$sFQex) (if g$T$15816$sFQex (car (case-lambda ((g$V$15817$sFQex) (g$same-marks?$8684$sFQex g$J$15814$sFQex g$mark*$9099$sFQex g$V$15817$sFQex))) g$mark**$9101$sFQex) (g$J$15814$sFQex '#f)))) g$sym$9098$sFQex g$V$15815$sFQex))) g$sym*$9100$sFQex))) (case-lambda ((g$T$15810$sFQex) (if g$T$15810$sFQex (car g$C$15808$sFQex g$label*$9102$sFQex) (cdr (case-lambda ((g$V$15811$sFQex) (cdr (case-lambda ((g$V$15812$sFQex) (cdr (case-lambda ((g$V$15813$sFQex) (g$find$9092$sFQex g$C$15808$sFQex g$sym$9098$sFQex g$mark*$9099$sFQex g$V$15813$sFQex g$V$15812$sFQex g$V$15811$sFQex))) g$sym*$9100$sFQex))) g$mark**$9101$sFQex))) g$label*$9102$sFQex))))) (g$C$15808$sFQex '#f)))) g$sym*$9100$sFQex)))) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$15831$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$15832$sFQex) ((case-lambda ((g$C$15828$sFQex g$sym$9093$sFQex g$mark*$9094$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$15829$sFQex) ((case-lambda ((g$C$15821$sFQex g$sym*$9095$sFQex) ((case-lambda ((g$J$15823$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$15824$sFQex) (g$memq$5672$sFQex (case-lambda ((g$T$15825$sFQex) (if g$T$15825$sFQex (g$rib-label*$8634$sFQex (case-lambda ((g$V$15826$sFQex) (g$rib-mark**$8633$sFQex (case-lambda ((g$V$15827$sFQex) (g$find$9092$sFQex g$J$15823$sFQex g$sym$9093$sFQex g$mark*$9094$sFQex g$sym*$9095$sFQex g$V$15827$sFQex g$V$15826$sFQex))) g$rib$9091$sFQex))) g$rib$9091$sFQex) (g$J$15823$sFQex '#f)))) g$sym$9093$sFQex g$V$15824$sFQex))) g$rib$9091$sFQex))) (case-lambda ((g$V$15822$sFQex) ((case-lambda ((g$C$15820$sFQex g$t$9096$sFQex) (if g$t$9096$sFQex ((case-lambda ((g$C$15818$sFQex g$label$9097$sFQex) (g$imported-label->binding$8488$sFQex (case-lambda ((g$T$15819$sFQex) (if g$T$15819$sFQex (gensym g$C$15818$sFQex) (g$C$15818$sFQex g$label$9097$sFQex)))) g$label$9097$sFQex))) g$C$15820$sFQex g$t$9096$sFQex) (gensym g$C$15820$sFQex)))) g$C$15821$sFQex g$V$15822$sFQex)))))) g$C$15828$sFQex g$V$15829$sFQex))) g$rib$9091$sFQex))) g$C$15830$sFQex g$V$15832$sFQex g$V$15831$sFQex))) g$id$9090$sFQex))) g$id$9090$sFQex)))) g$C$15833$sFQex uninitialized)))))) (library-letrec*-identity 'g$gen-top-level-label$8624$sFQex))) (g$gen-define-label+loc$8625$sFQex g$gen-define-label+loc$12336$sFQex ((case-lambda ((g$C$20777$sFQex) (g$C$20777$sFQex (case-lambda ((g$C$15846$sFQex g$id$9103$sFQex g$rib$9104$sFQex g$sd?$9105$sFQex) (if g$sd?$9105$sFQex (g$gen-lexical$8621$sFQex (case-lambda ((g$V$15847$sFQex) (gensym (case-lambda ((g$V$15848$sFQex) (values g$C$15846$sFQex g$V$15848$sFQex g$V$15847$sFQex)))))) g$id$9103$sFQex) (g$top-level-context$9081$sFQex (case-lambda ((g$V$15849$sFQex) ((case-lambda ((g$C$15843$sFQex g$env$9106$sFQex) (g$interaction-env-locs$9041$sFQex (case-lambda ((g$V$15844$sFQex) (g$gen-top-level-label$8624$sFQex (case-lambda ((g$V$15845$sFQex) ((case-lambda ((g$C$15840$sFQex g$label$9107$sFQex g$locs$9108$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$15841$sFQex) ((case-lambda ((g$C$15838$sFQex g$t$9109$sFQex) (if g$t$9109$sFQex (cdr g$C$15838$sFQex g$t$9109$sFQex) (g$gen-lexical$8621$sFQex (case-lambda ((g$V$15839$sFQex) ((case-lambda ((g$C$15834$sFQex g$loc$9110$sFQex) (cons (case-lambda ((g$V$15835$sFQex) (cons (case-lambda ((g$V$15836$sFQex) (g$set-interaction-env-locs!$9044$sFQex (case-lambda (g$IGNORE$15837$sFQex (g$C$15834$sFQex g$loc$9110$sFQex))) g$env$9106$sFQex g$V$15836$sFQex))) g$V$15835$sFQex g$locs$9108$sFQex))) g$label$9107$sFQex g$loc$9110$sFQex))) g$C$15838$sFQex g$V$15839$sFQex))) g$id$9103$sFQex)))) (case-lambda ((g$V$15842$sFQex) (values g$C$15840$sFQex g$label$9107$sFQex g$V$15842$sFQex))) g$V$15841$sFQex))) g$label$9107$sFQex g$locs$9108$sFQex))) g$C$15843$sFQex g$V$15845$sFQex g$V$15844$sFQex))) g$id$9103$sFQex g$rib$9104$sFQex))) g$env$9106$sFQex))) g$C$15846$sFQex g$V$15849$sFQex)))))))))) (library-letrec*-identity 'g$gen-define-label+loc$8625$sFQex))) (g$gen-define-label$8626$sFQex g$gen-define-label$12337$sFQex ((case-lambda ((g$C$20778$sFQex) (g$C$20778$sFQex (case-lambda ((g$C$15850$sFQex g$id$9111$sFQex g$rib$9112$sFQex g$sd?$9113$sFQex) (if g$sd?$9113$sFQex (gensym g$C$15850$sFQex) (g$gen-top-level-label$8624$sFQex g$C$15850$sFQex g$id$9111$sFQex g$rib$9112$sFQex))))))) (library-letrec*-identity 'g$gen-define-label$8626$sFQex))) (g$9719$8627$sFQex g$9719$12338$sFQex ((case-lambda ((g$C$20779$sFQex) (make-record-type-descriptor g$C$20779$sFQex 'rib '#f 'g$9722$sFQex '#t '#t '#((mutable sym*) (mutable mark**) (mutable label*) (mutable sealed/freq) (mutable cache))))) (library-letrec*-identity 'g$9719$8627$sFQex))) (g$9721$8628$sFQex g$9721$12339$sFQex ((case-lambda ((g$C$20780$sFQex) (g$C$20780$sFQex '#f))) (library-letrec*-identity 'g$9721$8628$sFQex))) (g$9720$8629$sFQex g$9720$12340$sFQex ((case-lambda ((g$C$20781$sFQex) (make-record-constructor-descriptor g$C$20781$sFQex g$9719$8627$sFQex '#f g$9721$8628$sFQex))) (library-letrec*-identity 'g$9720$8629$sFQex))) (g$rib?$8630$sFQex g$rib?$12341$sFQex ((case-lambda ((g$C$20782$sFQex) (record-predicate g$C$20782$sFQex g$9719$8627$sFQex))) (library-letrec*-identity 'g$rib?$8630$sFQex))) (g$make-rib$8631$sFQex g$make-rib$12342$sFQex ((case-lambda ((g$C$20783$sFQex) (record-constructor g$C$20783$sFQex g$9720$8629$sFQex))) (library-letrec*-identity 'g$make-rib$8631$sFQex))) (g$rib-sym*$8632$sFQex g$rib-sym*$12343$sFQex ((case-lambda ((g$C$20784$sFQex) (record-accessor g$C$20784$sFQex g$9719$8627$sFQex '0))) (library-letrec*-identity 'g$rib-sym*$8632$sFQex))) (g$rib-mark**$8633$sFQex g$rib-mark**$12344$sFQex ((case-lambda ((g$C$20785$sFQex) (record-accessor g$C$20785$sFQex g$9719$8627$sFQex '1))) (library-letrec*-identity 'g$rib-mark**$8633$sFQex))) (g$rib-label*$8634$sFQex g$rib-label*$12345$sFQex ((case-lambda ((g$C$20786$sFQex) (record-accessor g$C$20786$sFQex g$9719$8627$sFQex '2))) (library-letrec*-identity 'g$rib-label*$8634$sFQex))) (g$rib-sealed/freq$8635$sFQex g$rib-sealed/freq$12346$sFQex ((case-lambda ((g$C$20787$sFQex) (record-accessor g$C$20787$sFQex g$9719$8627$sFQex '3))) (library-letrec*-identity 'g$rib-sealed/freq$8635$sFQex))) (g$rib-cache$8636$sFQex g$rib-cache$12347$sFQex ((case-lambda ((g$C$20788$sFQex) (record-accessor g$C$20788$sFQex g$9719$8627$sFQex '4))) (library-letrec*-identity 'g$rib-cache$8636$sFQex))) (g$set-rib-sym*!$8637$sFQex g$set-rib-sym*!$12348$sFQex ((case-lambda ((g$C$20789$sFQex) (record-mutator g$C$20789$sFQex g$9719$8627$sFQex '0))) (library-letrec*-identity 'g$set-rib-sym*!$8637$sFQex))) (g$set-rib-mark**!$8638$sFQex g$set-rib-mark**!$12349$sFQex ((case-lambda ((g$C$20790$sFQex) (record-mutator g$C$20790$sFQex g$9719$8627$sFQex '1))) (library-letrec*-identity 'g$set-rib-mark**!$8638$sFQex))) (g$set-rib-label*!$8639$sFQex g$set-rib-label*!$12350$sFQex ((case-lambda ((g$C$20791$sFQex) (record-mutator g$C$20791$sFQex g$9719$8627$sFQex '2))) (library-letrec*-identity 'g$set-rib-label*!$8639$sFQex))) (g$set-rib-sealed/freq!$8640$sFQex g$set-rib-sealed/freq!$12351$sFQex ((case-lambda ((g$C$20792$sFQex) (record-mutator g$C$20792$sFQex g$9719$8627$sFQex '3))) (library-letrec*-identity 'g$set-rib-sealed/freq!$8640$sFQex))) (g$set-rib-cache!$8641$sFQex g$set-rib-cache!$12352$sFQex ((case-lambda ((g$C$20793$sFQex) (record-mutator g$C$20793$sFQex g$9719$8627$sFQex '4))) (library-letrec*-identity 'g$set-rib-cache!$8641$sFQex))) (g$make-empty-rib$8642$sFQex g$make-empty-rib$12353$sFQex ((case-lambda ((g$C$20794$sFQex) (g$C$20794$sFQex (case-lambda ((g$C$15851$sFQex) (g$make-rib$8631$sFQex g$C$15851$sFQex '() '() '() '#f '#f)))))) (library-letrec*-identity 'g$make-empty-rib$8642$sFQex))) (g$make-cache-rib$8643$sFQex g$make-cache-rib$12354$sFQex ((case-lambda ((g$C$20795$sFQex) (g$C$20795$sFQex (case-lambda ((g$C$15852$sFQex) (g$make-eq-hashtable$6267$sFQex (case-lambda ((g$V$15853$sFQex) (g$make-rib$8631$sFQex g$C$15852$sFQex '() '() '() '#f g$V$15853$sFQex))))))))) (library-letrec*-identity 'g$make-cache-rib$8643$sFQex))) (g$find-label$8644$sFQex g$find-label$12355$sFQex ((case-lambda ((g$C$20796$sFQex) (g$C$20796$sFQex (case-lambda ((g$C$15861$sFQex g$rib$9114$sFQex g$sym$9115$sFQex g$mark*$9116$sFQex) (g$rib-cache$8636$sFQex (case-lambda ((g$V$15862$sFQex) ((case-lambda ((g$C$15859$sFQex g$ht$9117$sFQex) (if g$ht$9117$sFQex (g$hashtable-ref$6270$sFQex (case-lambda ((g$V$15860$sFQex) ((case-lambda ((g$C$15856$sFQex g$cv$9118$sFQex) ((case-lambda ((g$J$15858$sFQex) (if g$cv$9118$sFQex (g$assp$5671$sFQex g$J$15858$sFQex (case-lambda ((g$C$15855$sFQex g$m$9120$sFQex) (g$same-marks?$8684$sFQex g$C$15855$sFQex g$mark*$9116$sFQex g$m$9120$sFQex))) g$cv$9118$sFQex) (g$J$15858$sFQex '#f)))) (case-lambda ((g$V$15857$sFQex) ((case-lambda ((g$C$15854$sFQex g$t$9119$sFQex) (if g$t$9119$sFQex (cdr g$C$15854$sFQex g$t$9119$sFQex) (g$C$15854$sFQex '#f)))) g$C$15856$sFQex g$V$15857$sFQex)))))) g$C$15859$sFQex g$V$15860$sFQex))) g$ht$9117$sFQex g$sym$9115$sFQex '#f) (g$C$15859$sFQex '#f)))) g$C$15861$sFQex g$V$15862$sFQex))) g$rib$9114$sFQex)))))) (library-letrec*-identity 'g$find-label$8644$sFQex))) (g$extend-rib!$8645$sFQex g$extend-rib!$12356$sFQex ((case-lambda ((g$C$20797$sFQex) (g$C$20797$sFQex (case-lambda ((g$C$15912$sFQex g$rib$9121$sFQex g$id$9122$sFQex g$label$9123$sFQex g$sd?$9124$sFQex) ((case-lambda ((g$C$15906$sFQex g$find$9125$sFQex) (begin (set! g$find$9125$sFQex (case-lambda ((g$C$15863$sFQex g$sym$9134$sFQex g$mark*$9135$sFQex g$sym*$9136$sFQex g$mark**$9137$sFQex g$label*$9138$sFQex) (pair? (case-lambda ((g$T$15864$sFQex) (if g$T$15864$sFQex ((case-lambda ((g$J$15869$sFQex) (car (case-lambda ((g$V$15870$sFQex) (eq? (case-lambda ((g$T$15871$sFQex) (if g$T$15871$sFQex (car (case-lambda ((g$V$15872$sFQex) (g$same-marks?$8684$sFQex g$J$15869$sFQex g$mark*$9135$sFQex g$V$15872$sFQex))) g$mark**$9137$sFQex) (g$J$15869$sFQex '#f)))) g$sym$9134$sFQex g$V$15870$sFQex))) g$sym*$9136$sFQex))) (case-lambda ((g$T$15865$sFQex) (if g$T$15865$sFQex (g$C$15863$sFQex g$label*$9138$sFQex) (cdr (case-lambda ((g$V$15866$sFQex) (cdr (case-lambda ((g$V$15867$sFQex) (cdr (case-lambda ((g$V$15868$sFQex) (g$find$9125$sFQex g$C$15863$sFQex g$sym$9134$sFQex g$mark*$9135$sFQex g$V$15868$sFQex g$V$15867$sFQex g$V$15866$sFQex))) g$sym*$9136$sFQex))) g$mark**$9137$sFQex))) g$label*$9138$sFQex))))) (g$C$15863$sFQex '#f)))) g$sym*$9136$sFQex)))) ((case-lambda ((g$J$15910$sFQex) (g$rib-sealed/freq$8635$sFQex (case-lambda ((g$T$15911$sFQex) (if g$T$15911$sFQex (g$assertion-violation$6456$sFQex g$J$15910$sFQex 'extend-rib! '"BUG: rib is sealed" g$rib$9121$sFQex) (void g$J$15910$sFQex)))) g$rib$9121$sFQex))) (case-lambda (g$IGNORE$15907$sFQex (g$stx-mark*$8657$sFQex (case-lambda ((g$V$15908$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$15909$sFQex) ((case-lambda ((g$C$15904$sFQex g$sym$9126$sFQex g$mark*$9127$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$15905$sFQex) ((case-lambda ((g$C$15902$sFQex g$sym*$9128$sFQex) (g$find-label$8644$sFQex (case-lambda ((g$V$15903$sFQex) ((case-lambda ((g$C$15895$sFQex g$t$9129$sFQex) (if g$t$9129$sFQex ((case-lambda ((g$C$15873$sFQex g$p$9130$sFQex) (eq? (case-lambda ((g$V$15874$sFQex) (not (case-lambda ((g$T$15875$sFQex) (if g$T$15875$sFQex (g$syntax-violation$9073$sFQex g$C$15873$sFQex '#f '"multiple definitions of identifier" g$id$9122$sFQex) (void g$C$15873$sFQex)))) g$V$15874$sFQex))) g$label$9123$sFQex g$p$9130$sFQex))) g$C$15895$sFQex g$t$9129$sFQex) ((case-lambda ((g$J$15897$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$15898$sFQex) (g$memq$5672$sFQex (case-lambda ((g$T$15899$sFQex) (if g$T$15899$sFQex (g$rib-label*$8634$sFQex (case-lambda ((g$V$15900$sFQex) (g$rib-mark**$8633$sFQex (case-lambda ((g$V$15901$sFQex) (g$find$9125$sFQex g$J$15897$sFQex g$sym$9126$sFQex g$mark*$9127$sFQex g$sym*$9128$sFQex g$V$15901$sFQex g$V$15900$sFQex))) g$rib$9121$sFQex))) g$rib$9121$sFQex) (g$J$15897$sFQex '#f)))) g$sym$9126$sFQex g$V$15898$sFQex))) g$rib$9121$sFQex))) (case-lambda ((g$V$15896$sFQex) ((case-lambda ((g$C$15883$sFQex g$t$9131$sFQex) (if g$t$9131$sFQex ((case-lambda ((g$C$15876$sFQex g$p$9132$sFQex) (car (case-lambda ((g$V$15877$sFQex) (eq? (case-lambda ((g$V$15878$sFQex) (not (case-lambda ((g$T$15879$sFQex) (if g$T$15879$sFQex (not (case-lambda ((g$T$15880$sFQex) (if g$T$15880$sFQex (set-car! g$C$15876$sFQex g$p$9132$sFQex g$label$9123$sFQex) (g$syntax-violation$9073$sFQex g$C$15876$sFQex '#f '"multiple definitions of identifier" g$id$9122$sFQex)))) g$sd?$9124$sFQex) (void g$C$15876$sFQex)))) g$V$15878$sFQex))) g$label$9123$sFQex g$V$15877$sFQex))) g$p$9132$sFQex))) g$C$15883$sFQex g$t$9131$sFQex) ((case-lambda ((g$J$15892$sFQex) (g$rib-cache$8636$sFQex (case-lambda ((g$T$15893$sFQex) (if g$T$15893$sFQex (g$rib-cache$8636$sFQex (case-lambda ((g$V$15894$sFQex) (g$hashtable-update!$6274$sFQex g$J$15892$sFQex g$V$15894$sFQex g$sym$9126$sFQex (case-lambda ((g$C$15881$sFQex g$e$9133$sFQex) (cons (case-lambda ((g$V$15882$sFQex) (cons g$C$15881$sFQex g$V$15882$sFQex g$e$9133$sFQex))) g$mark*$9127$sFQex g$label$9123$sFQex))) '()))) g$rib$9121$sFQex) (void g$J$15892$sFQex)))) g$rib$9121$sFQex))) (case-lambda (g$IGNORE$15884$sFQex (cons (case-lambda ((g$V$15885$sFQex) (g$set-rib-sym*!$8637$sFQex (case-lambda (g$IGNORE$15886$sFQex (g$rib-mark**$8633$sFQex (case-lambda ((g$V$15887$sFQex) (cons (case-lambda ((g$V$15888$sFQex) (g$set-rib-mark**!$8638$sFQex (case-lambda (g$IGNORE$15889$sFQex (g$rib-label*$8634$sFQex (case-lambda ((g$V$15890$sFQex) (cons (case-lambda ((g$V$15891$sFQex) (g$set-rib-label*!$8639$sFQex g$C$15883$sFQex g$rib$9121$sFQex g$V$15891$sFQex))) g$label$9123$sFQex g$V$15890$sFQex))) g$rib$9121$sFQex))) g$rib$9121$sFQex g$V$15888$sFQex))) g$mark*$9127$sFQex g$V$15887$sFQex))) g$rib$9121$sFQex))) g$rib$9121$sFQex g$V$15885$sFQex))) g$sym$9126$sFQex g$sym*$9128$sFQex))))))) g$C$15895$sFQex g$V$15896$sFQex))))))) g$C$15902$sFQex g$V$15903$sFQex))) g$rib$9121$sFQex g$sym$9126$sFQex g$mark*$9127$sFQex))) g$C$15904$sFQex g$V$15905$sFQex))) g$rib$9121$sFQex))) g$C$15906$sFQex g$V$15909$sFQex g$V$15908$sFQex))) g$id$9122$sFQex))) g$id$9122$sFQex))))))) g$C$15912$sFQex uninitialized)))))) (library-letrec*-identity 'g$extend-rib!$8645$sFQex))) (g$extend-rib/nc!$8646$sFQex g$extend-rib/nc!$12357$sFQex ((case-lambda ((g$C$20798$sFQex) (g$C$20798$sFQex (case-lambda ((g$C$15929$sFQex g$rib$9139$sFQex g$id$9140$sFQex g$label$9141$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$15930$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$15931$sFQex) ((case-lambda ((g$C$15927$sFQex g$sym$9142$sFQex g$mark*$9143$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$15928$sFQex) ((case-lambda ((g$C$15915$sFQex g$sym*$9144$sFQex) ((case-lambda ((g$J$15924$sFQex) (g$rib-cache$8636$sFQex (case-lambda ((g$T$15925$sFQex) (if g$T$15925$sFQex (g$rib-cache$8636$sFQex (case-lambda ((g$V$15926$sFQex) (g$hashtable-update!$6274$sFQex g$J$15924$sFQex g$V$15926$sFQex g$sym$9142$sFQex (case-lambda ((g$C$15913$sFQex g$e$9145$sFQex) (cons (case-lambda ((g$V$15914$sFQex) (cons g$C$15913$sFQex g$V$15914$sFQex g$e$9145$sFQex))) g$mark*$9143$sFQex g$label$9141$sFQex))) '()))) g$rib$9139$sFQex) (void g$J$15924$sFQex)))) g$rib$9139$sFQex))) (case-lambda (g$IGNORE$15916$sFQex (cons (case-lambda ((g$V$15917$sFQex) (g$set-rib-sym*!$8637$sFQex (case-lambda (g$IGNORE$15918$sFQex (g$rib-mark**$8633$sFQex (case-lambda ((g$V$15919$sFQex) (cons (case-lambda ((g$V$15920$sFQex) (g$set-rib-mark**!$8638$sFQex (case-lambda (g$IGNORE$15921$sFQex (g$rib-label*$8634$sFQex (case-lambda ((g$V$15922$sFQex) (cons (case-lambda ((g$V$15923$sFQex) (g$set-rib-label*!$8639$sFQex g$C$15915$sFQex g$rib$9139$sFQex g$V$15923$sFQex))) g$label$9141$sFQex g$V$15922$sFQex))) g$rib$9139$sFQex))) g$rib$9139$sFQex g$V$15920$sFQex))) g$mark*$9143$sFQex g$V$15919$sFQex))) g$rib$9139$sFQex))) g$rib$9139$sFQex g$V$15917$sFQex))) g$sym$9142$sFQex g$sym*$9144$sFQex)))))) g$C$15927$sFQex g$V$15928$sFQex))) g$rib$9139$sFQex))) g$C$15929$sFQex g$V$15931$sFQex g$V$15930$sFQex))) g$id$9140$sFQex))) g$id$9140$sFQex)))))) (library-letrec*-identity 'g$extend-rib/nc!$8646$sFQex))) (g$make-rib-map$8647$sFQex g$make-rib-map$12358$sFQex ((case-lambda ((g$C$20799$sFQex) (g$C$20799$sFQex (case-lambda ((g$C$15944$sFQex g$sym*$9146$sFQex) (g$make-eq-hashtable$6267$sFQex (case-lambda ((g$V$15945$sFQex) ((case-lambda ((g$C$15942$sFQex g$ht$9147$sFQex) ((case-lambda ((g$C$15941$sFQex g$f$9148$sFQex) ((case-lambda ((g$C$15933$sFQex g$f$15932$sFQex) (begin (set! g$f$9148$sFQex g$f$15932$sFQex) (g$C$15933$sFQex g$f$9148$sFQex)))) g$C$15941$sFQex (case-lambda ((g$C$15935$sFQex g$i$9149$sFQex g$sym*$9150$sFQex) (null? (case-lambda ((g$T$15936$sFQex) (if g$T$15936$sFQex (g$C$15935$sFQex g$ht$9147$sFQex) (car (case-lambda ((g$V$15937$sFQex) (g$hashtable-update!$6274$sFQex (case-lambda (g$IGNORE$15938$sFQex (cdr (case-lambda ((g$V$15939$sFQex) (+ (case-lambda ((g$V$15940$sFQex) (g$f$9148$sFQex g$C$15935$sFQex g$V$15940$sFQex g$V$15939$sFQex))) g$i$9149$sFQex '1))) g$sym*$9150$sFQex))) g$ht$9147$sFQex g$V$15937$sFQex (case-lambda ((g$C$15934$sFQex g$x$9151$sFQex) (cons g$C$15934$sFQex g$i$9149$sFQex g$x$9151$sFQex))) '()))) g$sym*$9150$sFQex)))) g$sym*$9150$sFQex)))))) (case-lambda ((g$V$15943$sFQex) (g$V$15943$sFQex g$C$15942$sFQex '0 g$sym*$9146$sFQex))) uninitialized))) g$C$15944$sFQex g$V$15945$sFQex))))))))) (library-letrec*-identity 'g$make-rib-map$8647$sFQex))) (g$seal-rib!$8648$sFQex g$seal-rib!$12359$sFQex ((case-lambda ((g$C$20800$sFQex) (g$C$20800$sFQex (case-lambda ((g$C$15958$sFQex g$rib$9152$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$15959$sFQex) ((case-lambda ((g$C$15946$sFQex g$sym*$9153$sFQex) (null? (case-lambda ((g$V$15947$sFQex) (not (case-lambda ((g$T$15948$sFQex) (if g$T$15948$sFQex (g$list->vector$6163$sFQex (case-lambda ((g$V$15949$sFQex) (g$set-rib-sym*!$8637$sFQex (case-lambda (g$IGNORE$15950$sFQex (g$rib-mark**$8633$sFQex (case-lambda ((g$V$15951$sFQex) (g$list->vector$6163$sFQex (case-lambda ((g$V$15952$sFQex) (g$set-rib-mark**!$8638$sFQex (case-lambda (g$IGNORE$15953$sFQex (g$rib-label*$8634$sFQex (case-lambda ((g$V$15954$sFQex) (g$list->vector$6163$sFQex (case-lambda ((g$V$15955$sFQex) (g$set-rib-label*!$8639$sFQex (case-lambda (g$IGNORE$15956$sFQex (g$make-rib-map$8647$sFQex (case-lambda ((g$V$15957$sFQex) (g$set-rib-sealed/freq!$8640$sFQex g$C$15946$sFQex g$rib$9152$sFQex g$V$15957$sFQex))) g$sym*$9153$sFQex))) g$rib$9152$sFQex g$V$15955$sFQex))) g$V$15954$sFQex))) g$rib$9152$sFQex))) g$rib$9152$sFQex g$V$15952$sFQex))) g$V$15951$sFQex))) g$rib$9152$sFQex))) g$rib$9152$sFQex g$V$15949$sFQex))) g$sym*$9153$sFQex) (void g$C$15946$sFQex)))) g$V$15947$sFQex))) g$sym*$9153$sFQex))) g$C$15958$sFQex g$V$15959$sFQex))) g$rib$9152$sFQex)))))) (library-letrec*-identity 'g$seal-rib!$8648$sFQex))) (g$unseal-rib!$8649$sFQex g$unseal-rib!$12360$sFQex ((case-lambda ((g$C$20801$sFQex) (g$C$20801$sFQex (case-lambda ((g$C$15960$sFQex g$rib$9154$sFQex) (g$rib-sealed/freq$8635$sFQex (case-lambda ((g$T$15961$sFQex) (if g$T$15961$sFQex (g$set-rib-sealed/freq!$8640$sFQex (case-lambda (g$IGNORE$15962$sFQex (g$rib-sym*$8632$sFQex (case-lambda ((g$V$15963$sFQex) (vector->list (case-lambda ((g$V$15964$sFQex) (g$set-rib-sym*!$8637$sFQex (case-lambda (g$IGNORE$15965$sFQex (g$rib-mark**$8633$sFQex (case-lambda ((g$V$15966$sFQex) (vector->list (case-lambda ((g$V$15967$sFQex) (g$set-rib-mark**!$8638$sFQex (case-lambda (g$IGNORE$15968$sFQex (g$rib-label*$8634$sFQex (case-lambda ((g$V$15969$sFQex) (vector->list (case-lambda ((g$V$15970$sFQex) (g$set-rib-label*!$8639$sFQex g$C$15960$sFQex g$rib$9154$sFQex g$V$15970$sFQex))) g$V$15969$sFQex))) g$rib$9154$sFQex))) g$rib$9154$sFQex g$V$15967$sFQex))) g$V$15966$sFQex))) g$rib$9154$sFQex))) g$rib$9154$sFQex g$V$15964$sFQex))) g$V$15963$sFQex))) g$rib$9154$sFQex))) g$rib$9154$sFQex '#f) (void g$C$15960$sFQex)))) g$rib$9154$sFQex)))))) (library-letrec*-identity 'g$unseal-rib!$8649$sFQex))) (g$make-full-rib$8650$sFQex g$make-full-rib$12361$sFQex ((case-lambda ((g$C$20802$sFQex) (g$C$20802$sFQex (case-lambda ((g$C$15973$sFQex g$id*$9155$sFQex g$label*$9156$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15974$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$15975$sFQex) (g$make-rib$8631$sFQex (case-lambda ((g$V$15976$sFQex) ((case-lambda ((g$C$15971$sFQex g$r$9157$sFQex) (g$seal-rib!$8648$sFQex (case-lambda (g$IGNORE$15972$sFQex (g$C$15971$sFQex g$r$9157$sFQex))) g$r$9157$sFQex))) g$C$15973$sFQex g$V$15976$sFQex))) g$V$15975$sFQex g$V$15974$sFQex g$label*$9156$sFQex '#f '#f))) g$id->sym$8683$sFQex g$id*$9155$sFQex))) g$stx-mark*$8657$sFQex g$id*$9155$sFQex)))))) (library-letrec*-identity 'g$make-full-rib$8650$sFQex))) (g$9750$8651$sFQex g$9750$12362$sFQex ((case-lambda ((g$C$20803$sFQex) (make-record-type-descriptor g$C$20803$sFQex 'stx '#f 'g$9753$sFQex '#t '#t '#((mutable expr) (mutable mark*) (mutable subst*) (mutable ae*))))) (library-letrec*-identity 'g$9750$8651$sFQex))) (g$9752$8652$sFQex g$9752$12363$sFQex ((case-lambda ((g$C$20804$sFQex) (g$C$20804$sFQex '#f))) (library-letrec*-identity 'g$9752$8652$sFQex))) (g$9751$8653$sFQex g$9751$12364$sFQex ((case-lambda ((g$C$20805$sFQex) (make-record-constructor-descriptor g$C$20805$sFQex g$9750$8651$sFQex '#f g$9752$8652$sFQex))) (library-letrec*-identity 'g$9751$8653$sFQex))) (g$stx?$8654$sFQex g$stx?$12365$sFQex ((case-lambda ((g$C$20806$sFQex) (record-predicate g$C$20806$sFQex g$9750$8651$sFQex))) (library-letrec*-identity 'g$stx?$8654$sFQex))) (g$make-stx$8655$sFQex g$make-stx$12366$sFQex ((case-lambda ((g$C$20807$sFQex) (record-constructor g$C$20807$sFQex g$9751$8653$sFQex))) (library-letrec*-identity 'g$make-stx$8655$sFQex))) (g$stx-expr$8656$sFQex g$stx-expr$12367$sFQex ((case-lambda ((g$C$20808$sFQex) (record-accessor g$C$20808$sFQex g$9750$8651$sFQex '0))) (library-letrec*-identity 'g$stx-expr$8656$sFQex))) (g$stx-mark*$8657$sFQex g$stx-mark*$12368$sFQex ((case-lambda ((g$C$20809$sFQex) (record-accessor g$C$20809$sFQex g$9750$8651$sFQex '1))) (library-letrec*-identity 'g$stx-mark*$8657$sFQex))) (g$stx-subst*$8658$sFQex g$stx-subst*$12369$sFQex ((case-lambda ((g$C$20810$sFQex) (record-accessor g$C$20810$sFQex g$9750$8651$sFQex '2))) (library-letrec*-identity 'g$stx-subst*$8658$sFQex))) (g$stx-ae*$8659$sFQex g$stx-ae*$12370$sFQex ((case-lambda ((g$C$20811$sFQex) (record-accessor g$C$20811$sFQex g$9750$8651$sFQex '3))) (library-letrec*-identity 'g$stx-ae*$8659$sFQex))) (g$set-stx-expr!$8660$sFQex g$set-stx-expr!$12371$sFQex ((case-lambda ((g$C$20812$sFQex) (record-mutator g$C$20812$sFQex g$9750$8651$sFQex '0))) (library-letrec*-identity 'g$set-stx-expr!$8660$sFQex))) (g$set-stx-mark*!$8661$sFQex g$set-stx-mark*!$12372$sFQex ((case-lambda ((g$C$20813$sFQex) (record-mutator g$C$20813$sFQex g$9750$8651$sFQex '1))) (library-letrec*-identity 'g$set-stx-mark*!$8661$sFQex))) (g$set-stx-subst*!$8662$sFQex g$set-stx-subst*!$12373$sFQex ((case-lambda ((g$C$20814$sFQex) (record-mutator g$C$20814$sFQex g$9750$8651$sFQex '2))) (library-letrec*-identity 'g$set-stx-subst*!$8662$sFQex))) (g$set-stx-ae*!$8663$sFQex g$set-stx-ae*!$12374$sFQex ((case-lambda ((g$C$20815$sFQex) (record-mutator g$C$20815$sFQex g$9750$8651$sFQex '3))) (library-letrec*-identity 'g$set-stx-ae*!$8663$sFQex))) (g$rp$8664$sFQex g$rp$12375$sFQex ((case-lambda ((g$C$20816$sFQex) (make-record-printer g$C$20816$sFQex 'stx (case-lambda ((g$C$15988$sFQex g$x$9158$sFQex g$p$9159$sFQex g$wr$9160$sFQex) (display (case-lambda (g$IGNORE$15989$sFQex (g$stx->datum$8693$sFQex (case-lambda ((g$V$15990$sFQex) (write (case-lambda (g$IGNORE$15991$sFQex (g$stx-expr$8656$sFQex (case-lambda ((g$V$15992$sFQex) ((case-lambda ((g$C$15985$sFQex g$expr$9161$sFQex) (annotation? (case-lambda ((g$T$15986$sFQex) (if g$T$15986$sFQex (annotation-source (case-lambda ((g$V$15987$sFQex) ((case-lambda ((g$C$15977$sFQex g$src$9162$sFQex) (pair? (case-lambda ((g$T$15978$sFQex) (if g$T$15978$sFQex (display (case-lambda (g$IGNORE$15979$sFQex (cdr (case-lambda ((g$V$15980$sFQex) (display (case-lambda (g$IGNORE$15981$sFQex (display (case-lambda (g$IGNORE$15982$sFQex (car (case-lambda ((g$V$15983$sFQex) (display (case-lambda (g$IGNORE$15984$sFQex (display g$C$15977$sFQex '")" g$p$9159$sFQex))) g$V$15983$sFQex g$p$9159$sFQex))) g$src$9162$sFQex))) '" of " g$p$9159$sFQex))) g$V$15980$sFQex g$p$9159$sFQex))) g$src$9162$sFQex))) '" (" g$p$9159$sFQex) (void g$C$15977$sFQex)))) g$src$9162$sFQex))) g$C$15985$sFQex g$V$15987$sFQex))) g$expr$9161$sFQex) (void g$C$15985$sFQex)))) g$expr$9161$sFQex))) (case-lambda (g$IGNORE$15993$sFQex (display g$C$15988$sFQex '">" g$p$9159$sFQex))) g$V$15992$sFQex))) g$x$9158$sFQex))) g$V$15990$sFQex g$p$9159$sFQex))) g$x$9158$sFQex))) '"#<syntax " g$p$9159$sFQex)))))) (library-letrec*-identity 'g$rp$8664$sFQex))) (g$datum->stx$8665$sFQex g$datum->stx$12376$sFQex ((case-lambda ((g$C$20817$sFQex) (g$C$20817$sFQex (case-lambda ((g$C$15994$sFQex g$id$9163$sFQex g$datum$9164$sFQex) (g$stx-ae*$8659$sFQex (case-lambda ((g$V$15995$sFQex) (g$stx-subst*$8658$sFQex (case-lambda ((g$V$15996$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$15997$sFQex) (g$make-stx$8655$sFQex g$C$15994$sFQex g$datum$9164$sFQex g$V$15997$sFQex g$V$15996$sFQex g$V$15995$sFQex))) g$id$9163$sFQex))) g$id$9163$sFQex))) g$id$9163$sFQex)))))) (library-letrec*-identity 'g$datum->stx$8665$sFQex))) (g$gen-mark$8666$sFQex g$gen-mark$12377$sFQex ((case-lambda ((g$C$20818$sFQex) (g$C$20818$sFQex (case-lambda ((g$C$15998$sFQex) (string g$C$15998$sFQex '#\m)))))) (library-letrec*-identity 'g$gen-mark$8666$sFQex))) (g$anti-mark$8667$sFQex g$anti-mark$12378$sFQex ((case-lambda ((g$C$20819$sFQex) (g$C$20819$sFQex '#f))) (library-letrec*-identity 'g$anti-mark$8667$sFQex))) (g$anti-mark?$8668$sFQex g$anti-mark?$12379$sFQex ((case-lambda ((g$C$20820$sFQex) (g$C$20820$sFQex not))) (library-letrec*-identity 'g$anti-mark?$8668$sFQex))) (g$join-wraps$8669$sFQex g$join-wraps$12380$sFQex ((case-lambda ((g$C$20821$sFQex) (g$C$20821$sFQex (case-lambda ((g$C$16029$sFQex g$m1*$9165$sFQex g$s1*$9166$sFQex g$ae1*$9167$sFQex g$e$9168$sFQex) ((case-lambda ((g$C$16025$sFQex g$cancel$9169$sFQex) (begin (set! g$cancel$9169$sFQex (case-lambda ((g$C$16007$sFQex g$ls1$9173$sFQex g$ls2$9174$sFQex) (cdr (case-lambda ((g$V$16008$sFQex) (car (case-lambda ((g$V$16009$sFQex) ((case-lambda ((g$C$16006$sFQex g$f$9175$sFQex) ((case-lambda ((g$C$16000$sFQex g$f$15999$sFQex) (begin (set! g$f$9175$sFQex g$f$15999$sFQex) (g$C$16000$sFQex g$f$9175$sFQex)))) g$C$16006$sFQex (case-lambda ((g$C$16001$sFQex g$x$9176$sFQex g$ls1$9177$sFQex) (null? (case-lambda ((g$T$16002$sFQex) (if g$T$16002$sFQex (cdr g$C$16001$sFQex g$ls2$9174$sFQex) (cdr (case-lambda ((g$V$16003$sFQex) (car (case-lambda ((g$V$16004$sFQex) (g$f$9175$sFQex (case-lambda ((g$V$16005$sFQex) (cons g$C$16001$sFQex g$x$9176$sFQex g$V$16005$sFQex))) g$V$16004$sFQex g$V$16003$sFQex))) g$ls1$9177$sFQex))) g$ls1$9177$sFQex)))) g$ls1$9177$sFQex)))))) (case-lambda ((g$V$16010$sFQex) (g$V$16010$sFQex g$C$16007$sFQex g$V$16009$sFQex g$V$16008$sFQex))) uninitialized))) g$ls1$9173$sFQex))) g$ls1$9173$sFQex)))) (g$stx-ae*$8659$sFQex (case-lambda ((g$V$16026$sFQex) (g$stx-subst*$8658$sFQex (case-lambda ((g$V$16027$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16028$sFQex) ((case-lambda ((g$C$16011$sFQex g$m2*$9170$sFQex g$s2*$9171$sFQex g$ae2*$9172$sFQex) ((case-lambda ((g$J$16019$sFQex) (null? (case-lambda ((g$V$16020$sFQex) (not (case-lambda ((g$T$16021$sFQex) (if g$T$16021$sFQex (null? (case-lambda ((g$V$16022$sFQex) (not (case-lambda ((g$T$16023$sFQex) (if g$T$16023$sFQex (car (case-lambda ((g$V$16024$sFQex) (g$anti-mark?$8668$sFQex g$J$16019$sFQex g$V$16024$sFQex))) g$m2*$9170$sFQex) (g$J$16019$sFQex '#f)))) g$V$16022$sFQex))) g$m2*$9170$sFQex) (g$J$16019$sFQex '#f)))) g$V$16020$sFQex))) g$m1*$9165$sFQex))) (case-lambda ((g$T$16012$sFQex) (if g$T$16012$sFQex (g$cancel$9169$sFQex (case-lambda ((g$V$16013$sFQex) (g$cancel$9169$sFQex (case-lambda ((g$V$16014$sFQex) (g$cancel$9169$sFQex (case-lambda ((g$V$16015$sFQex) (values g$C$16011$sFQex g$V$16015$sFQex g$V$16014$sFQex g$V$16013$sFQex))) g$m1*$9165$sFQex g$m2*$9170$sFQex))) g$s1*$9166$sFQex g$s2*$9171$sFQex))) g$ae1*$9167$sFQex g$ae2*$9172$sFQex) (append (case-lambda ((g$V$16016$sFQex) (append (case-lambda ((g$V$16017$sFQex) (append (case-lambda ((g$V$16018$sFQex) (values g$C$16011$sFQex g$V$16018$sFQex g$V$16017$sFQex g$V$16016$sFQex))) g$m1*$9165$sFQex g$m2*$9170$sFQex))) g$s1*$9166$sFQex g$s2*$9171$sFQex))) g$ae1*$9167$sFQex g$ae2*$9172$sFQex))))))) g$C$16025$sFQex g$V$16028$sFQex g$V$16027$sFQex g$V$16026$sFQex))) g$e$9168$sFQex))) g$e$9168$sFQex))) g$e$9168$sFQex)))) g$C$16029$sFQex uninitialized)))))) (library-letrec*-identity 'g$join-wraps$8669$sFQex))) (g$mkstx$8670$sFQex g$mkstx$12381$sFQex ((case-lambda ((g$C$20822$sFQex) (g$C$20822$sFQex (case-lambda ((g$C$16034$sFQex g$e$9178$sFQex g$m*$9179$sFQex g$s*$9180$sFQex g$ae*$9181$sFQex) ((case-lambda ((g$J$16036$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16037$sFQex) (if g$T$16037$sFQex (g$top-marked?$8620$sFQex (case-lambda ((g$V$16038$sFQex) (not g$J$16036$sFQex g$V$16038$sFQex))) g$m*$9179$sFQex) (g$J$16036$sFQex '#f)))) g$e$9178$sFQex))) (case-lambda ((g$T$16035$sFQex) (if g$T$16035$sFQex (call-with-values g$C$16034$sFQex (case-lambda ((g$C$16030$sFQex) (g$join-wraps$8669$sFQex g$C$16030$sFQex g$m*$9179$sFQex g$s*$9180$sFQex g$ae*$9181$sFQex g$e$9178$sFQex))) (case-lambda ((g$C$16033$sFQex g$m*$9185$sFQex g$s*$9186$sFQex g$ae*$9187$sFQex) ((case-lambda ((g$C$16031$sFQex g$ae*$9188$sFQex g$s*$9189$sFQex g$m*$9190$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$16032$sFQex) (g$make-stx$8655$sFQex g$C$16031$sFQex g$V$16032$sFQex g$m*$9190$sFQex g$s*$9189$sFQex g$ae*$9188$sFQex))) g$e$9178$sFQex))) g$C$16033$sFQex g$ae*$9187$sFQex g$s*$9186$sFQex g$m*$9185$sFQex)))) (g$make-stx$8655$sFQex g$C$16034$sFQex g$e$9178$sFQex g$m*$9179$sFQex g$s*$9180$sFQex g$ae*$9181$sFQex)))))))))) (library-letrec*-identity 'g$mkstx$8670$sFQex))) (g$add-mark$8671$sFQex g$add-mark$12382$sFQex ((case-lambda ((g$C$20823$sFQex) (g$C$20823$sFQex (case-lambda ((g$C$16039$sFQex g$m$9191$sFQex g$e$9192$sFQex g$ae$9193$sFQex) (list (case-lambda ((g$V$16040$sFQex) (list (case-lambda ((g$V$16041$sFQex) (g$mkstx$8670$sFQex g$C$16039$sFQex g$e$9192$sFQex g$V$16041$sFQex '(shift) g$V$16040$sFQex))) g$m$9191$sFQex))) g$ae$9193$sFQex)))))) (library-letrec*-identity 'g$add-mark$8671$sFQex))) (g$add-subst$8672$sFQex g$add-subst$12383$sFQex ((case-lambda ((g$C$20824$sFQex) (g$C$20824$sFQex (case-lambda ((g$C$16042$sFQex g$subst$9194$sFQex g$e$9195$sFQex) (list (case-lambda ((g$V$16043$sFQex) (g$mkstx$8670$sFQex g$C$16042$sFQex g$e$9195$sFQex '() g$V$16043$sFQex '()))) g$subst$9194$sFQex)))))) (library-letrec*-identity 'g$add-subst$8672$sFQex))) (g$syntax-kind?$8673$sFQex g$syntax-kind?$12384$sFQex ((case-lambda ((g$C$20825$sFQex) (g$C$20825$sFQex (case-lambda ((g$C$16044$sFQex g$x$9196$sFQex g$p?$9197$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16045$sFQex) (if g$T$16045$sFQex (g$stx-expr$8656$sFQex (case-lambda ((g$V$16046$sFQex) (g$syntax-kind?$8673$sFQex g$C$16044$sFQex g$V$16046$sFQex g$p?$9197$sFQex))) g$x$9196$sFQex) (annotation? (case-lambda ((g$T$16047$sFQex) (if g$T$16047$sFQex (annotation-expression (case-lambda ((g$V$16048$sFQex) (g$syntax-kind?$8673$sFQex g$C$16044$sFQex g$V$16048$sFQex g$p?$9197$sFQex))) g$x$9196$sFQex) (g$p?$9197$sFQex g$C$16044$sFQex g$x$9196$sFQex)))) g$x$9196$sFQex)))) g$x$9196$sFQex)))))) (library-letrec*-identity 'g$syntax-kind?$8673$sFQex))) (g$syntax-vector->list$8674$sFQex g$syntax-vector->list$12385$sFQex ((case-lambda ((g$C$20826$sFQex) (g$C$20826$sFQex (case-lambda ((g$C$16051$sFQex g$x$9198$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16052$sFQex) (if g$T$16052$sFQex (g$stx-ae*$8659$sFQex (case-lambda ((g$V$16053$sFQex) (g$stx-subst*$8658$sFQex (case-lambda ((g$V$16054$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16055$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$16056$sFQex) (g$syntax-vector->list$8674$sFQex (case-lambda ((g$V$16057$sFQex) ((case-lambda ((g$C$16050$sFQex g$ls$9199$sFQex g$m*$9200$sFQex g$s*$9201$sFQex g$ae*$9202$sFQex) (g$map$5680$sFQex g$C$16050$sFQex (case-lambda ((g$C$16049$sFQex g$x$9203$sFQex) (g$mkstx$8670$sFQex g$C$16049$sFQex g$x$9203$sFQex g$m*$9200$sFQex g$s*$9201$sFQex g$ae*$9202$sFQex))) g$ls$9199$sFQex))) g$C$16051$sFQex g$V$16057$sFQex g$V$16055$sFQex g$V$16054$sFQex g$V$16053$sFQex))) g$V$16056$sFQex))) g$x$9198$sFQex))) g$x$9198$sFQex))) g$x$9198$sFQex))) g$x$9198$sFQex) (annotation? (case-lambda ((g$T$16058$sFQex) (if g$T$16058$sFQex (annotation-expression (case-lambda ((g$V$16059$sFQex) (g$syntax-vector->list$8674$sFQex g$C$16051$sFQex g$V$16059$sFQex))) g$x$9198$sFQex) (g$vector?$6166$sFQex (case-lambda ((g$T$16060$sFQex) (if g$T$16060$sFQex (vector->list g$C$16051$sFQex g$x$9198$sFQex) (g$assertion-violation$6456$sFQex g$C$16051$sFQex 'syntax-vector->list '"BUG: not a syntax vector" g$x$9198$sFQex)))) g$x$9198$sFQex)))) g$x$9198$sFQex)))) g$x$9198$sFQex)))))) (library-letrec*-identity 'g$syntax-vector->list$8674$sFQex))) (g$syntax-pair?$8675$sFQex g$syntax-pair?$12386$sFQex ((case-lambda ((g$C$20827$sFQex) (g$C$20827$sFQex (case-lambda ((g$C$16061$sFQex g$x$9204$sFQex) (g$syntax-kind?$8673$sFQex g$C$16061$sFQex g$x$9204$sFQex pair?)))))) (library-letrec*-identity 'g$syntax-pair?$8675$sFQex))) (g$syntax-vector?$8676$sFQex g$syntax-vector?$12387$sFQex ((case-lambda ((g$C$20828$sFQex) (g$C$20828$sFQex (case-lambda ((g$C$16062$sFQex g$x$9205$sFQex) (g$syntax-kind?$8673$sFQex g$C$16062$sFQex g$x$9205$sFQex g$vector?$6166$sFQex)))))) (library-letrec*-identity 'g$syntax-vector?$8676$sFQex))) (g$syntax-null?$8677$sFQex g$syntax-null?$12388$sFQex ((case-lambda ((g$C$20829$sFQex) (g$C$20829$sFQex (case-lambda ((g$C$16063$sFQex g$x$9206$sFQex) (g$syntax-kind?$8673$sFQex g$C$16063$sFQex g$x$9206$sFQex null?)))))) (library-letrec*-identity 'g$syntax-null?$8677$sFQex))) (g$syntax-list?$8678$sFQex g$syntax-list?$12389$sFQex ((case-lambda ((g$C$20830$sFQex) (g$C$20830$sFQex (case-lambda ((g$C$16067$sFQex g$x$9207$sFQex) (g$syntax-null?$8677$sFQex (case-lambda ((g$V$16068$sFQex) ((case-lambda ((g$C$16064$sFQex g$t$9208$sFQex) (if g$t$9208$sFQex (g$C$16064$sFQex g$t$9208$sFQex) (g$syntax-pair?$8675$sFQex (case-lambda ((g$T$16065$sFQex) (if g$T$16065$sFQex (g$syntax-cdr$8680$sFQex (case-lambda ((g$V$16066$sFQex) (g$syntax-list?$8678$sFQex g$C$16064$sFQex g$V$16066$sFQex))) g$x$9207$sFQex) (g$C$16064$sFQex '#f)))) g$x$9207$sFQex)))) g$C$16067$sFQex g$V$16068$sFQex))) g$x$9207$sFQex)))))) (library-letrec*-identity 'g$syntax-list?$8678$sFQex))) (g$syntax-car$8679$sFQex g$syntax-car$12390$sFQex ((case-lambda ((g$C$20831$sFQex) (g$C$20831$sFQex (case-lambda ((g$C$16069$sFQex g$x$9209$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16070$sFQex) (if g$T$16070$sFQex (g$stx-ae*$8659$sFQex (case-lambda ((g$V$16071$sFQex) (g$stx-subst*$8658$sFQex (case-lambda ((g$V$16072$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16073$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$16074$sFQex) (g$syntax-car$8679$sFQex (case-lambda ((g$V$16075$sFQex) (g$mkstx$8670$sFQex g$C$16069$sFQex g$V$16075$sFQex g$V$16073$sFQex g$V$16072$sFQex g$V$16071$sFQex))) g$V$16074$sFQex))) g$x$9209$sFQex))) g$x$9209$sFQex))) g$x$9209$sFQex))) g$x$9209$sFQex) (annotation? (case-lambda ((g$T$16076$sFQex) (if g$T$16076$sFQex (annotation-expression (case-lambda ((g$V$16077$sFQex) (g$syntax-car$8679$sFQex g$C$16069$sFQex g$V$16077$sFQex))) g$x$9209$sFQex) (pair? (case-lambda ((g$T$16078$sFQex) (if g$T$16078$sFQex (car g$C$16069$sFQex g$x$9209$sFQex) (g$assertion-violation$6456$sFQex g$C$16069$sFQex 'syntax-car '"BUG: not a pair" g$x$9209$sFQex)))) g$x$9209$sFQex)))) g$x$9209$sFQex)))) g$x$9209$sFQex)))))) (library-letrec*-identity 'g$syntax-car$8679$sFQex))) (g$syntax-cdr$8680$sFQex g$syntax-cdr$12391$sFQex ((case-lambda ((g$C$20832$sFQex) (g$C$20832$sFQex (case-lambda ((g$C$16079$sFQex g$x$9210$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16080$sFQex) (if g$T$16080$sFQex (g$stx-ae*$8659$sFQex (case-lambda ((g$V$16081$sFQex) (g$stx-subst*$8658$sFQex (case-lambda ((g$V$16082$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16083$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$16084$sFQex) (g$syntax-cdr$8680$sFQex (case-lambda ((g$V$16085$sFQex) (g$mkstx$8670$sFQex g$C$16079$sFQex g$V$16085$sFQex g$V$16083$sFQex g$V$16082$sFQex g$V$16081$sFQex))) g$V$16084$sFQex))) g$x$9210$sFQex))) g$x$9210$sFQex))) g$x$9210$sFQex))) g$x$9210$sFQex) (annotation? (case-lambda ((g$T$16086$sFQex) (if g$T$16086$sFQex (annotation-expression (case-lambda ((g$V$16087$sFQex) (g$syntax-cdr$8680$sFQex g$C$16079$sFQex g$V$16087$sFQex))) g$x$9210$sFQex) (pair? (case-lambda ((g$T$16088$sFQex) (if g$T$16088$sFQex (cdr g$C$16079$sFQex g$x$9210$sFQex) (g$assertion-violation$6456$sFQex g$C$16079$sFQex 'syntax-cdr '"BUG: not a pair" g$x$9210$sFQex)))) g$x$9210$sFQex)))) g$x$9210$sFQex)))) g$x$9210$sFQex)))))) (library-letrec*-identity 'g$syntax-cdr$8680$sFQex))) (g$syntax->list$8681$sFQex g$syntax->list$12392$sFQex ((case-lambda ((g$C$20833$sFQex) (g$C$20833$sFQex (case-lambda ((g$C$16089$sFQex g$x$9211$sFQex) (g$syntax-pair?$8675$sFQex (case-lambda ((g$T$16090$sFQex) (if g$T$16090$sFQex (g$syntax-cdr$8680$sFQex (case-lambda ((g$V$16091$sFQex) (g$syntax->list$8681$sFQex (case-lambda ((g$V$16092$sFQex) (g$syntax-car$8679$sFQex (case-lambda ((g$V$16093$sFQex) (cons g$C$16089$sFQex g$V$16093$sFQex g$V$16092$sFQex))) g$x$9211$sFQex))) g$V$16091$sFQex))) g$x$9211$sFQex) (g$syntax-null?$8677$sFQex (case-lambda ((g$T$16094$sFQex) (if g$T$16094$sFQex (g$C$16089$sFQex '()) (g$assertion-violation$6456$sFQex g$C$16089$sFQex 'syntax->list '"BUG: invalid argument" g$x$9211$sFQex)))) g$x$9211$sFQex)))) g$x$9211$sFQex)))))) (library-letrec*-identity 'g$syntax->list$8681$sFQex))) (g$id?$8682$sFQex g$id?$12393$sFQex ((case-lambda ((g$C$20834$sFQex) (g$C$20834$sFQex (case-lambda ((g$C$16099$sFQex g$x$9212$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16100$sFQex) (if g$T$16100$sFQex (g$stx-expr$8656$sFQex (case-lambda ((g$V$16101$sFQex) ((case-lambda ((g$C$16095$sFQex g$expr$9213$sFQex) ((case-lambda ((g$J$16097$sFQex) (annotation? (case-lambda ((g$T$16098$sFQex) (if g$T$16098$sFQex (annotation-stripped g$J$16097$sFQex g$expr$9213$sFQex) (g$J$16097$sFQex g$expr$9213$sFQex)))) g$expr$9213$sFQex))) (case-lambda ((g$V$16096$sFQex) (g$symbol?$6168$sFQex g$C$16095$sFQex g$V$16096$sFQex)))))) g$C$16099$sFQex g$V$16101$sFQex))) g$x$9212$sFQex) (g$C$16099$sFQex '#f)))) g$x$9212$sFQex)))))) (library-letrec*-identity 'g$id?$8682$sFQex))) (g$id->sym$8683$sFQex g$id->sym$12394$sFQex ((case-lambda ((g$C$20835$sFQex) (g$C$20835$sFQex (case-lambda ((g$C$16108$sFQex g$x$9214$sFQex) ((case-lambda ((g$J$16111$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$V$16112$sFQex) (not (case-lambda ((g$T$16113$sFQex) (if g$T$16113$sFQex (g$error$6457$sFQex g$J$16111$sFQex 'id->sym '"BUG in ikarus: not an id" g$x$9214$sFQex) (void g$J$16111$sFQex)))) g$V$16112$sFQex))) g$x$9214$sFQex))) (case-lambda (g$IGNORE$16109$sFQex (g$stx-expr$8656$sFQex (case-lambda ((g$V$16110$sFQex) ((case-lambda ((g$C$16104$sFQex g$expr$9215$sFQex) ((case-lambda ((g$J$16106$sFQex) (annotation? (case-lambda ((g$T$16107$sFQex) (if g$T$16107$sFQex (annotation-stripped g$J$16106$sFQex g$expr$9215$sFQex) (g$J$16106$sFQex g$expr$9215$sFQex)))) g$expr$9215$sFQex))) (case-lambda ((g$V$16105$sFQex) ((case-lambda ((g$C$16102$sFQex g$sym$9216$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$16103$sFQex) (if g$T$16103$sFQex (g$C$16102$sFQex g$sym$9216$sFQex) (g$error$6457$sFQex g$C$16102$sFQex 'id->sym '"BUG in ikarus: not an id" g$x$9214$sFQex)))) g$sym$9216$sFQex))) g$C$16104$sFQex g$V$16105$sFQex)))))) g$C$16108$sFQex g$V$16110$sFQex))) g$x$9214$sFQex))))))))) (library-letrec*-identity 'g$id->sym$8683$sFQex))) (g$same-marks?$8684$sFQex g$same-marks?$12395$sFQex ((case-lambda ((g$C$20836$sFQex) (g$C$20836$sFQex (case-lambda ((g$C$16122$sFQex g$x$9217$sFQex g$y$9218$sFQex) ((case-lambda ((g$J$16124$sFQex) (null? (case-lambda ((g$T$16125$sFQex) (if g$T$16125$sFQex (null? g$J$16124$sFQex g$y$9218$sFQex) (g$J$16124$sFQex '#f)))) g$x$9217$sFQex))) (case-lambda ((g$V$16123$sFQex) ((case-lambda ((g$C$16114$sFQex g$t$9219$sFQex) (if g$t$9219$sFQex (g$C$16114$sFQex g$t$9219$sFQex) (pair? (case-lambda ((g$T$16115$sFQex) (if g$T$16115$sFQex (pair? (case-lambda ((g$T$16116$sFQex) (if g$T$16116$sFQex (car (case-lambda ((g$V$16117$sFQex) (car (case-lambda ((g$V$16118$sFQex) (eq? (case-lambda ((g$T$16119$sFQex) (if g$T$16119$sFQex (cdr (case-lambda ((g$V$16120$sFQex) (cdr (case-lambda ((g$V$16121$sFQex) (g$same-marks?$8684$sFQex g$C$16114$sFQex g$V$16121$sFQex g$V$16120$sFQex))) g$x$9217$sFQex))) g$y$9218$sFQex) (g$C$16114$sFQex '#f)))) g$V$16118$sFQex g$V$16117$sFQex))) g$x$9217$sFQex))) g$y$9218$sFQex) (g$C$16114$sFQex '#f)))) g$y$9218$sFQex) (g$C$16114$sFQex '#f)))) g$x$9217$sFQex)))) g$C$16122$sFQex g$V$16123$sFQex))))))))) (library-letrec*-identity 'g$same-marks?$8684$sFQex))) (g$bound-id=?$8685$sFQex g$bound-id=?$12396$sFQex ((case-lambda ((g$C$20837$sFQex) (g$C$20837$sFQex (case-lambda ((g$C$16126$sFQex g$x$9220$sFQex g$y$9221$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$16127$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$16128$sFQex) (eq? (case-lambda ((g$T$16129$sFQex) (if g$T$16129$sFQex (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16130$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16131$sFQex) (g$same-marks?$8684$sFQex g$C$16126$sFQex g$V$16131$sFQex g$V$16130$sFQex))) g$x$9220$sFQex))) g$y$9221$sFQex) (g$C$16126$sFQex '#f)))) g$V$16128$sFQex g$V$16127$sFQex))) g$x$9220$sFQex))) g$y$9221$sFQex)))))) (library-letrec*-identity 'g$bound-id=?$8685$sFQex))) (g$free-id=?$8686$sFQex g$free-id=?$12397$sFQex ((case-lambda ((g$C$20838$sFQex) (g$C$20838$sFQex (case-lambda ((g$C$16137$sFQex g$i$9222$sFQex g$j$9223$sFQex) (g$id->real-label$8696$sFQex (case-lambda ((g$V$16138$sFQex) (g$id->real-label$8696$sFQex (case-lambda ((g$V$16139$sFQex) ((case-lambda ((g$C$16133$sFQex g$t0$9224$sFQex g$t1$9225$sFQex) ((case-lambda ((g$C$16132$sFQex g$t$9226$sFQex) (if g$t$9226$sFQex (g$C$16132$sFQex g$t$9226$sFQex) (g$C$16132$sFQex g$t1$9225$sFQex)))) (case-lambda ((g$T$16134$sFQex) (if g$T$16134$sFQex (eq? g$C$16133$sFQex g$t0$9224$sFQex g$t1$9225$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$16135$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$16136$sFQex) (eq? g$C$16133$sFQex g$V$16136$sFQex g$V$16135$sFQex))) g$i$9222$sFQex))) g$j$9223$sFQex)))) g$t0$9224$sFQex))) g$C$16137$sFQex g$V$16139$sFQex g$V$16138$sFQex))) g$i$9222$sFQex))) g$j$9223$sFQex)))))) (library-letrec*-identity 'g$free-id=?$8686$sFQex))) (g$valid-bound-ids?$8687$sFQex g$valid-bound-ids?$12398$sFQex ((case-lambda ((g$C$20839$sFQex) (g$C$20839$sFQex (case-lambda ((g$C$16140$sFQex g$id*$9227$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$T$16141$sFQex) (if g$T$16141$sFQex (g$distinct-bound-ids?$8688$sFQex g$C$16140$sFQex g$id*$9227$sFQex) (g$C$16140$sFQex '#f)))) g$id?$8682$sFQex g$id*$9227$sFQex)))))) (library-letrec*-identity 'g$valid-bound-ids?$8687$sFQex))) (g$distinct-bound-ids?$8688$sFQex g$distinct-bound-ids?$12399$sFQex ((case-lambda ((g$C$20840$sFQex) (g$C$20840$sFQex (case-lambda ((g$C$16148$sFQex g$id*$9228$sFQex) (null? (case-lambda ((g$V$16149$sFQex) ((case-lambda ((g$C$16142$sFQex g$t$9229$sFQex) (if g$t$9229$sFQex (g$C$16142$sFQex g$t$9229$sFQex) (cdr (case-lambda ((g$V$16143$sFQex) (car (case-lambda ((g$V$16144$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$V$16145$sFQex) (not (case-lambda ((g$T$16146$sFQex) (if g$T$16146$sFQex (cdr (case-lambda ((g$V$16147$sFQex) (g$distinct-bound-ids?$8688$sFQex g$C$16142$sFQex g$V$16147$sFQex))) g$id*$9228$sFQex) (g$C$16142$sFQex '#f)))) g$V$16145$sFQex))) g$V$16144$sFQex g$V$16143$sFQex))) g$id*$9228$sFQex))) g$id*$9228$sFQex)))) g$C$16148$sFQex g$V$16149$sFQex))) g$id*$9228$sFQex)))))) (library-letrec*-identity 'g$distinct-bound-ids?$8688$sFQex))) (g$bound-id-member?$8689$sFQex g$bound-id-member?$12400$sFQex ((case-lambda ((g$C$20841$sFQex) (g$C$20841$sFQex (case-lambda ((g$C$16152$sFQex g$id$9230$sFQex g$id*$9231$sFQex) (pair? (case-lambda ((g$T$16153$sFQex) (if g$T$16153$sFQex (car (case-lambda ((g$V$16154$sFQex) (g$bound-id=?$8685$sFQex (case-lambda ((g$V$16155$sFQex) ((case-lambda ((g$C$16150$sFQex g$t$9232$sFQex) (if g$t$9232$sFQex (g$C$16150$sFQex g$t$9232$sFQex) (cdr (case-lambda ((g$V$16151$sFQex) (g$bound-id-member?$8689$sFQex g$C$16150$sFQex g$id$9230$sFQex g$V$16151$sFQex))) g$id*$9231$sFQex)))) g$C$16152$sFQex g$V$16155$sFQex))) g$id$9230$sFQex g$V$16154$sFQex))) g$id*$9231$sFQex) (g$C$16152$sFQex '#f)))) g$id*$9231$sFQex)))))) (library-letrec*-identity 'g$bound-id-member?$8689$sFQex))) (g$self-evaluating?$8690$sFQex g$self-evaluating?$12401$sFQex ((case-lambda ((g$C$20842$sFQex) (g$C$20842$sFQex (case-lambda ((g$C$16163$sFQex g$x$9233$sFQex) (number? (case-lambda ((g$V$16164$sFQex) ((case-lambda ((g$C$16161$sFQex g$t$9234$sFQex) (if g$t$9234$sFQex (g$C$16161$sFQex g$t$9234$sFQex) (string? (case-lambda ((g$V$16162$sFQex) ((case-lambda ((g$C$16159$sFQex g$t$9235$sFQex) (if g$t$9235$sFQex (g$C$16159$sFQex g$t$9235$sFQex) (g$char?$6165$sFQex (case-lambda ((g$V$16160$sFQex) ((case-lambda ((g$C$16157$sFQex g$t$9236$sFQex) (if g$t$9236$sFQex (g$C$16157$sFQex g$t$9236$sFQex) (g$boolean?$6169$sFQex (case-lambda ((g$V$16158$sFQex) ((case-lambda ((g$C$16156$sFQex g$t$9237$sFQex) (if g$t$9237$sFQex (g$C$16156$sFQex g$t$9237$sFQex) (g$bytevector?$6167$sFQex g$C$16156$sFQex g$x$9233$sFQex)))) g$C$16157$sFQex g$V$16158$sFQex))) g$x$9233$sFQex)))) g$C$16159$sFQex g$V$16160$sFQex))) g$x$9233$sFQex)))) g$C$16161$sFQex g$V$16162$sFQex))) g$x$9233$sFQex)))) g$C$16163$sFQex g$V$16164$sFQex))) g$x$9233$sFQex)))))) (library-letrec*-identity 'g$self-evaluating?$8690$sFQex))) (g$strip-annotations$8691$sFQex g$strip-annotations$12402$sFQex ((case-lambda ((g$C$20843$sFQex) (g$C$20843$sFQex (case-lambda ((g$C$16165$sFQex g$x$9238$sFQex) (pair? (case-lambda ((g$T$16166$sFQex) (if g$T$16166$sFQex (cdr (case-lambda ((g$V$16167$sFQex) (g$strip-annotations$8691$sFQex (case-lambda ((g$V$16168$sFQex) (car (case-lambda ((g$V$16169$sFQex) (g$strip-annotations$8691$sFQex (case-lambda ((g$V$16170$sFQex) (cons g$C$16165$sFQex g$V$16170$sFQex g$V$16168$sFQex))) g$V$16169$sFQex))) g$x$9238$sFQex))) g$V$16167$sFQex))) g$x$9238$sFQex) (g$vector?$6166$sFQex (case-lambda ((g$T$16171$sFQex) (if g$T$16171$sFQex (g$vector-map$6228$sFQex g$C$16165$sFQex g$strip-annotations$8691$sFQex g$x$9238$sFQex) (annotation? (case-lambda ((g$T$16172$sFQex) (if g$T$16172$sFQex (annotation-stripped g$C$16165$sFQex g$x$9238$sFQex) (g$C$16165$sFQex g$x$9238$sFQex)))) g$x$9238$sFQex)))) g$x$9238$sFQex)))) g$x$9238$sFQex)))))) (library-letrec*-identity 'g$strip-annotations$8691$sFQex))) (g$strip$8692$sFQex g$strip$12403$sFQex ((case-lambda ((g$C$20844$sFQex) (g$C$20844$sFQex (case-lambda ((g$C$16208$sFQex g$x$9239$sFQex g$m*$9240$sFQex) (g$top-marked?$8620$sFQex (case-lambda ((g$T$16209$sFQex) (if g$T$16209$sFQex (annotation? (case-lambda ((g$V$16210$sFQex) ((case-lambda ((g$C$16178$sFQex g$t$9241$sFQex) (if g$t$9241$sFQex (g$C$16178$sFQex g$t$9241$sFQex) ((case-lambda ((g$J$16180$sFQex) (pair? (case-lambda ((g$T$16181$sFQex) (if g$T$16181$sFQex (car (case-lambda ((g$V$16182$sFQex) (annotation? g$J$16180$sFQex g$V$16182$sFQex))) g$x$9239$sFQex) (g$J$16180$sFQex '#f)))) g$x$9239$sFQex))) (case-lambda ((g$V$16179$sFQex) ((case-lambda ((g$C$16173$sFQex g$t$9242$sFQex) (if g$t$9242$sFQex (g$C$16173$sFQex g$t$9242$sFQex) (g$vector?$6166$sFQex (case-lambda ((g$T$16174$sFQex) (if g$T$16174$sFQex (vector-length (case-lambda ((g$V$16175$sFQex) (> (case-lambda ((g$T$16176$sFQex) (if g$T$16176$sFQex (vector-ref (case-lambda ((g$V$16177$sFQex) (annotation? g$C$16173$sFQex g$V$16177$sFQex))) g$x$9239$sFQex '0) (g$C$16173$sFQex '#f)))) g$V$16175$sFQex '0))) g$x$9239$sFQex) (g$C$16173$sFQex '#f)))) g$x$9239$sFQex)))) g$C$16178$sFQex g$V$16179$sFQex))))))) (case-lambda ((g$T$16211$sFQex) (if g$T$16211$sFQex (g$strip-annotations$8691$sFQex g$C$16208$sFQex g$x$9239$sFQex) (g$C$16208$sFQex g$x$9239$sFQex)))) g$V$16210$sFQex))) g$x$9239$sFQex) ((case-lambda ((g$C$16207$sFQex g$f$9243$sFQex) ((case-lambda ((g$C$16184$sFQex g$f$16183$sFQex) (begin (set! g$f$9243$sFQex g$f$16183$sFQex) (g$C$16184$sFQex g$f$9243$sFQex)))) g$C$16207$sFQex (case-lambda ((g$C$16195$sFQex g$x$9244$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16196$sFQex) (if g$T$16196$sFQex (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16197$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$16198$sFQex) (g$strip$8692$sFQex g$C$16195$sFQex g$V$16198$sFQex g$V$16197$sFQex))) g$x$9244$sFQex))) g$x$9244$sFQex) (annotation? (case-lambda ((g$T$16199$sFQex) (if g$T$16199$sFQex (annotation-stripped g$C$16195$sFQex g$x$9244$sFQex) (pair? (case-lambda ((g$T$16200$sFQex) (if g$T$16200$sFQex (cdr (case-lambda ((g$V$16201$sFQex) (g$f$9243$sFQex (case-lambda ((g$V$16202$sFQex) (car (case-lambda ((g$V$16203$sFQex) (g$f$9243$sFQex (case-lambda ((g$V$16204$sFQex) ((case-lambda ((g$C$16185$sFQex g$a$9245$sFQex g$d$9246$sFQex) ((case-lambda ((g$J$16187$sFQex) (car (case-lambda ((g$V$16188$sFQex) (eq? (case-lambda ((g$T$16189$sFQex) (if g$T$16189$sFQex (cdr (case-lambda ((g$V$16190$sFQex) (eq? g$J$16187$sFQex g$d$9246$sFQex g$V$16190$sFQex))) g$x$9244$sFQex) (g$J$16187$sFQex '#f)))) g$a$9245$sFQex g$V$16188$sFQex))) g$x$9244$sFQex))) (case-lambda ((g$T$16186$sFQex) (if g$T$16186$sFQex (g$C$16185$sFQex g$x$9244$sFQex) (cons g$C$16185$sFQex g$a$9245$sFQex g$d$9246$sFQex))))))) g$C$16195$sFQex g$V$16204$sFQex g$V$16202$sFQex))) g$V$16203$sFQex))) g$x$9244$sFQex))) g$V$16201$sFQex))) g$x$9244$sFQex) (g$vector?$6166$sFQex (case-lambda ((g$T$16205$sFQex) (if g$T$16205$sFQex (vector->list (case-lambda ((g$V$16206$sFQex) ((case-lambda ((g$C$16193$sFQex g$old$9247$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16194$sFQex) ((case-lambda ((g$C$16191$sFQex g$new$9248$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$T$16192$sFQex) (if g$T$16192$sFQex (g$C$16191$sFQex g$x$9244$sFQex) (g$list->vector$6163$sFQex g$C$16191$sFQex g$new$9248$sFQex)))) eq? g$old$9247$sFQex g$new$9248$sFQex))) g$C$16193$sFQex g$V$16194$sFQex))) g$f$9243$sFQex g$old$9247$sFQex))) g$C$16195$sFQex g$V$16206$sFQex))) g$x$9244$sFQex) (g$C$16195$sFQex g$x$9244$sFQex)))) g$x$9244$sFQex)))) g$x$9244$sFQex)))) g$x$9244$sFQex)))) g$x$9244$sFQex)))))) (case-lambda ((g$V$16212$sFQex) (g$V$16212$sFQex g$C$16208$sFQex g$x$9239$sFQex))) uninitialized)))) g$m*$9240$sFQex)))))) (library-letrec*-identity 'g$strip$8692$sFQex))) (g$stx->datum$8693$sFQex g$stx->datum$12404$sFQex ((case-lambda ((g$C$20845$sFQex) (g$C$20845$sFQex (case-lambda ((g$C$16213$sFQex g$x$9249$sFQex) (g$strip$8692$sFQex g$C$16213$sFQex g$x$9249$sFQex '())))))) (library-letrec*-identity 'g$stx->datum$8693$sFQex))) (g$same-marks*?$8694$sFQex g$same-marks*?$12405$sFQex ((case-lambda ((g$C$20846$sFQex) (g$C$20846$sFQex (case-lambda ((g$C$16214$sFQex g$mark*$9250$sFQex g$mark**$9251$sFQex g$si$9252$sFQex) (null? (case-lambda ((g$T$16215$sFQex) (if g$T$16215$sFQex (g$C$16214$sFQex '#f) (car (case-lambda ((g$V$16216$sFQex) (vector-ref (case-lambda ((g$V$16217$sFQex) (g$same-marks?$8684$sFQex (case-lambda ((g$T$16218$sFQex) (if g$T$16218$sFQex (car g$C$16214$sFQex g$si$9252$sFQex) (cdr (case-lambda ((g$V$16219$sFQex) (g$same-marks*?$8694$sFQex g$C$16214$sFQex g$mark*$9250$sFQex g$mark**$9251$sFQex g$V$16219$sFQex))) g$si$9252$sFQex)))) g$mark*$9250$sFQex g$V$16217$sFQex))) g$mark**$9251$sFQex g$V$16216$sFQex))) g$si$9252$sFQex)))) g$si$9252$sFQex)))))) (library-letrec*-identity 'g$same-marks*?$8694$sFQex))) (g$id->label$8695$sFQex g$id->label$12406$sFQex ((case-lambda ((g$C$20847$sFQex) (g$C$20847$sFQex (case-lambda ((g$C$16230$sFQex g$id$9253$sFQex) (g$id->real-label$8696$sFQex (case-lambda ((g$V$16231$sFQex) ((case-lambda ((g$C$16228$sFQex g$t$9254$sFQex) (if g$t$9254$sFQex (g$C$16228$sFQex g$t$9254$sFQex) (g$top-level-context$9081$sFQex (case-lambda ((g$V$16229$sFQex) ((case-lambda ((g$C$16227$sFQex g$t$9255$sFQex) (if g$t$9255$sFQex ((case-lambda ((g$C$16225$sFQex g$env$9256$sFQex) (g$interaction-env-rib$9039$sFQex (case-lambda ((g$V$16226$sFQex) ((case-lambda ((g$C$16224$sFQex g$rib$9257$sFQex) (call-with-values g$C$16224$sFQex (case-lambda ((g$C$16220$sFQex) (g$gen-define-label+loc$8625$sFQex g$C$16220$sFQex g$id$9253$sFQex g$rib$9257$sFQex '#f))) (case-lambda ((g$C$16223$sFQex g$lab$9260$sFQex g$_loc$9261$sFQex) ((case-lambda ((g$C$16221$sFQex g$_loc$9262$sFQex g$lab$9263$sFQex) (g$extend-rib!$8645$sFQex (case-lambda (g$IGNORE$16222$sFQex (g$C$16221$sFQex g$lab$9263$sFQex))) g$rib$9257$sFQex g$id$9253$sFQex g$lab$9263$sFQex '#t))) g$C$16223$sFQex g$_loc$9261$sFQex g$lab$9260$sFQex)))))) g$C$16225$sFQex g$V$16226$sFQex))) g$env$9256$sFQex))) g$C$16227$sFQex g$t$9255$sFQex) (g$C$16227$sFQex '#f)))) g$C$16228$sFQex g$V$16229$sFQex))))))) g$C$16230$sFQex g$V$16231$sFQex))) g$id$9253$sFQex)))))) (library-letrec*-identity 'g$id->label$8695$sFQex))) (g$id->real-label$8696$sFQex g$id->real-label$12407$sFQex ((case-lambda ((g$C$20848$sFQex) (g$C$20848$sFQex (case-lambda ((g$C$16279$sFQex g$id$9264$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$16280$sFQex) ((case-lambda ((g$C$16275$sFQex g$sym$9265$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$16276$sFQex) (g$stx-subst*$8658$sFQex (case-lambda ((g$V$16277$sFQex) ((case-lambda ((g$C$16274$sFQex g$search$9266$sFQex) ((case-lambda ((g$C$16233$sFQex g$search$16232$sFQex) (begin (set! g$search$9266$sFQex g$search$16232$sFQex) (g$C$16233$sFQex g$search$9266$sFQex)))) g$C$16274$sFQex (case-lambda ((g$C$16267$sFQex g$subst*$9267$sFQex g$mark*$9268$sFQex) (null? (case-lambda ((g$T$16268$sFQex) (if g$T$16268$sFQex (g$C$16267$sFQex '#f) (car (case-lambda ((g$V$16269$sFQex) (eq? (case-lambda ((g$T$16270$sFQex) (if g$T$16270$sFQex (cdr (case-lambda ((g$V$16271$sFQex) (cdr (case-lambda ((g$V$16272$sFQex) (g$search$9266$sFQex g$C$16267$sFQex g$V$16272$sFQex g$V$16271$sFQex))) g$subst*$9267$sFQex))) g$mark*$9268$sFQex) (car (case-lambda ((g$V$16273$sFQex) ((case-lambda ((g$C$16265$sFQex g$rib$9269$sFQex) (g$rib-sealed/freq$8635$sFQex (case-lambda ((g$V$16266$sFQex) ((case-lambda ((g$C$16263$sFQex g$t$9270$sFQex) (if g$t$9270$sFQex ((case-lambda ((g$C$16242$sFQex g$ht$9271$sFQex) (g$hashtable-ref$6270$sFQex (case-lambda ((g$V$16243$sFQex) ((case-lambda ((g$C$16237$sFQex g$si$9272$sFQex) ((case-lambda ((g$J$16239$sFQex) (if g$si$9272$sFQex (g$reverse$6175$sFQex (case-lambda ((g$V$16240$sFQex) (g$rib-mark**$8633$sFQex (case-lambda ((g$V$16241$sFQex) (g$same-marks*?$8694$sFQex g$J$16239$sFQex g$mark*$9268$sFQex g$V$16241$sFQex g$V$16240$sFQex))) g$rib$9269$sFQex))) g$si$9272$sFQex) (g$J$16239$sFQex '#f)))) (case-lambda ((g$V$16238$sFQex) ((case-lambda ((g$C$16234$sFQex g$i$9273$sFQex) (if g$i$9273$sFQex (g$rib-label*$8634$sFQex (case-lambda ((g$V$16235$sFQex) (vector-ref g$C$16234$sFQex g$V$16235$sFQex g$i$9273$sFQex))) g$rib$9269$sFQex) (cdr (case-lambda ((g$V$16236$sFQex) (g$search$9266$sFQex g$C$16234$sFQex g$V$16236$sFQex g$mark*$9268$sFQex))) g$subst*$9267$sFQex)))) g$C$16237$sFQex g$V$16238$sFQex)))))) g$C$16242$sFQex g$V$16243$sFQex))) g$ht$9271$sFQex g$sym$9265$sFQex '#f))) g$C$16263$sFQex g$t$9270$sFQex) (g$find-label$8644$sFQex (case-lambda ((g$V$16264$sFQex) ((case-lambda ((g$C$16258$sFQex g$t$9274$sFQex) (if g$t$9274$sFQex (g$C$16258$sFQex g$t$9274$sFQex) (g$rib-label*$8634$sFQex (case-lambda ((g$V$16259$sFQex) (g$rib-mark**$8633$sFQex (case-lambda ((g$V$16260$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$16261$sFQex) ((case-lambda ((g$C$16257$sFQex g$f$9275$sFQex) ((case-lambda ((g$C$16245$sFQex g$f$16244$sFQex) (begin (set! g$f$9275$sFQex g$f$16244$sFQex) (g$C$16245$sFQex g$f$9275$sFQex)))) g$C$16257$sFQex (case-lambda ((g$C$16246$sFQex g$sym*$9276$sFQex g$mark**$9277$sFQex g$label*$9278$sFQex) (null? (case-lambda ((g$T$16247$sFQex) (if g$T$16247$sFQex (cdr (case-lambda ((g$V$16248$sFQex) (g$search$9266$sFQex g$C$16246$sFQex g$V$16248$sFQex g$mark*$9268$sFQex))) g$subst*$9267$sFQex) ((case-lambda ((g$J$16253$sFQex) (car (case-lambda ((g$V$16254$sFQex) (eq? (case-lambda ((g$T$16255$sFQex) (if g$T$16255$sFQex (car (case-lambda ((g$V$16256$sFQex) (g$same-marks?$8684$sFQex g$J$16253$sFQex g$V$16256$sFQex g$mark*$9268$sFQex))) g$mark**$9277$sFQex) (g$J$16253$sFQex '#f)))) g$V$16254$sFQex g$sym$9265$sFQex))) g$sym*$9276$sFQex))) (case-lambda ((g$T$16249$sFQex) (if g$T$16249$sFQex (car g$C$16246$sFQex g$label*$9278$sFQex) (cdr (case-lambda ((g$V$16250$sFQex) (cdr (case-lambda ((g$V$16251$sFQex) (cdr (case-lambda ((g$V$16252$sFQex) (g$f$9275$sFQex g$C$16246$sFQex g$V$16252$sFQex g$V$16251$sFQex g$V$16250$sFQex))) g$sym*$9276$sFQex))) g$mark**$9277$sFQex))) g$label*$9278$sFQex)))))))) g$sym*$9276$sFQex)))))) (case-lambda ((g$V$16262$sFQex) (g$V$16262$sFQex g$C$16258$sFQex g$V$16261$sFQex g$V$16260$sFQex g$V$16259$sFQex))) uninitialized))) g$rib$9269$sFQex))) g$rib$9269$sFQex))) g$rib$9269$sFQex)))) g$C$16263$sFQex g$V$16264$sFQex))) g$rib$9269$sFQex g$sym$9265$sFQex g$mark*$9268$sFQex)))) g$C$16265$sFQex g$V$16266$sFQex))) g$rib$9269$sFQex))) g$C$16267$sFQex g$V$16273$sFQex))) g$subst*$9267$sFQex)))) g$V$16269$sFQex 'shift))) g$subst*$9267$sFQex)))) g$subst*$9267$sFQex)))))) (case-lambda ((g$V$16278$sFQex) (g$V$16278$sFQex g$C$16275$sFQex g$V$16277$sFQex g$V$16276$sFQex))) uninitialized))) g$id$9264$sFQex))) g$id$9264$sFQex))) g$C$16279$sFQex g$V$16280$sFQex))) g$id$9264$sFQex)))))) (library-letrec*-identity 'g$id->real-label$8696$sFQex))) (g$label->binding$8697$sFQex g$label->binding$12408$sFQex ((case-lambda ((g$C$20849$sFQex) (g$C$20849$sFQex (case-lambda ((g$C$16307$sFQex g$x$9279$sFQex g$r$9280$sFQex) (not (case-lambda ((g$T$16308$sFQex) (if g$T$16308$sFQex (g$C$16307$sFQex '(displaced-lexical)) (g$imported-label->binding$8488$sFQex (case-lambda ((g$V$16309$sFQex) ((case-lambda ((g$C$16305$sFQex g$t$9281$sFQex) (if g$t$9281$sFQex ((case-lambda ((g$C$16283$sFQex g$b$9282$sFQex) ((case-lambda ((g$J$16293$sFQex) (pair? (case-lambda ((g$T$16294$sFQex) (if g$T$16294$sFQex (car (case-lambda ((g$V$16295$sFQex) (eq? g$J$16293$sFQex g$V$16295$sFQex '$core-rtd))) g$b$9282$sFQex) (g$J$16293$sFQex '#f)))) g$b$9282$sFQex))) (case-lambda ((g$T$16284$sFQex) (if g$T$16284$sFQex (cdr (case-lambda ((g$V$16285$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16286$sFQex) (cons g$C$16283$sFQex '$rtd g$V$16286$sFQex))) g$bless$8924$sFQex g$V$16285$sFQex))) g$b$9282$sFQex) ((case-lambda ((g$J$16290$sFQex) (pair? (case-lambda ((g$T$16291$sFQex) (if g$T$16291$sFQex (car (case-lambda ((g$V$16292$sFQex) (eq? g$J$16290$sFQex g$V$16292$sFQex 'global-rtd))) g$b$9282$sFQex) (g$J$16290$sFQex '#f)))) g$b$9282$sFQex))) (case-lambda ((g$T$16287$sFQex) (if g$T$16287$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$16288$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$16289$sFQex) ((case-lambda ((g$C$16281$sFQex g$lib$9283$sFQex g$loc$9284$sFQex) (symbol-value (case-lambda ((g$V$16282$sFQex) (cons g$C$16281$sFQex '$rtd g$V$16282$sFQex))) g$loc$9284$sFQex))) g$C$16283$sFQex g$V$16289$sFQex g$V$16288$sFQex))) g$b$9282$sFQex))) g$b$9282$sFQex) (g$C$16283$sFQex g$b$9282$sFQex))))))))))) g$C$16305$sFQex g$t$9281$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$16306$sFQex) ((case-lambda ((g$C$16303$sFQex g$t$9285$sFQex) (if g$t$9285$sFQex (cdr g$C$16303$sFQex g$t$9285$sFQex) (g$top-level-context$9081$sFQex (case-lambda ((g$V$16304$sFQex) ((case-lambda ((g$C$16302$sFQex g$t$9286$sFQex) (if g$t$9286$sFQex ((case-lambda ((g$C$16299$sFQex g$env$9287$sFQex) (g$interaction-env-locs$9041$sFQex (case-lambda ((g$V$16300$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$16301$sFQex) ((case-lambda ((g$C$16298$sFQex g$t$9288$sFQex) (if g$t$9288$sFQex ((case-lambda ((g$C$16296$sFQex g$p$9289$sFQex) (cdr (case-lambda ((g$V$16297$sFQex) (g$cons*$5682$sFQex g$C$16296$sFQex 'lexical g$V$16297$sFQex '#f))) g$p$9289$sFQex))) g$C$16298$sFQex g$t$9288$sFQex) (g$C$16298$sFQex '(displaced-lexical . #f))))) g$C$16299$sFQex g$V$16301$sFQex))) g$x$9279$sFQex g$V$16300$sFQex))) g$env$9287$sFQex))) g$C$16302$sFQex g$t$9286$sFQex) (g$C$16302$sFQex '(displaced-lexical . #f))))) g$C$16303$sFQex g$V$16304$sFQex))))))) g$C$16305$sFQex g$V$16306$sFQex))) g$x$9279$sFQex g$r$9280$sFQex)))) g$C$16307$sFQex g$V$16309$sFQex))) g$x$9279$sFQex)))) g$x$9279$sFQex)))))) (library-letrec*-identity 'g$label->binding$8697$sFQex))) (g$make-binding$8698$sFQex g$make-binding$12409$sFQex ((case-lambda ((g$C$20850$sFQex) (g$C$20850$sFQex cons))) (library-letrec*-identity 'g$make-binding$8698$sFQex))) (g$binding-type$8699$sFQex g$binding-type$12410$sFQex ((case-lambda ((g$C$20851$sFQex) (g$C$20851$sFQex car))) (library-letrec*-identity 'g$binding-type$8699$sFQex))) (g$binding-value$8700$sFQex g$binding-value$12411$sFQex ((case-lambda ((g$C$20852$sFQex) (g$C$20852$sFQex cdr))) (library-letrec*-identity 'g$binding-value$8700$sFQex))) (g$raise-unbound-error$8701$sFQex g$raise-unbound-error$12412$sFQex ((case-lambda ((g$C$20853$sFQex) (g$C$20853$sFQex (case-lambda ((g$C$16310$sFQex g$id$9290$sFQex) (g$make-undefined-violation$6646$sFQex (case-lambda ((g$V$16311$sFQex) (g$syntax-violation*$9072$sFQex g$C$16310$sFQex '#f '"unbound identifier" g$id$9290$sFQex g$V$16311$sFQex))))))))) (library-letrec*-identity 'g$raise-unbound-error$8701$sFQex))) (g$syntax-type$8702$sFQex g$syntax-type$12413$sFQex ((case-lambda ((g$C$20854$sFQex) (g$C$20854$sFQex (case-lambda ((g$C$16341$sFQex g$e$9291$sFQex g$r$9292$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$16342$sFQex) (if g$T$16342$sFQex ((case-lambda ((g$C$16323$sFQex g$id$9293$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$16324$sFQex) ((case-lambda ((g$C$16321$sFQex g$label$9294$sFQex) (g$label->binding$8697$sFQex (case-lambda ((g$V$16322$sFQex) ((case-lambda ((g$C$16319$sFQex g$b$9295$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$16320$sFQex) ((case-lambda ((g$C$16315$sFQex g$type$9296$sFQex) ((case-lambda ((g$J$16317$sFQex) (not (case-lambda ((g$T$16318$sFQex) (if g$T$16318$sFQex (g$raise-unbound-error$8701$sFQex g$J$16317$sFQex g$id$9293$sFQex) (void g$J$16317$sFQex)))) g$label$9294$sFQex))) (case-lambda (g$IGNORE$16316$sFQex ((case-lambda ((g$C$16312$sFQex g$t$9297$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$16313$sFQex) (if g$T$16313$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16314$sFQex) (values g$C$16312$sFQex g$type$9296$sFQex g$V$16314$sFQex g$id$9293$sFQex))) g$b$9295$sFQex) (values g$C$16312$sFQex 'other '#f '#f)))) g$t$9297$sFQex '(lexical core-prim macro macro! global local-macro local-macro! global-macro global-macro! displaced-lexical syntax import export $module $core-rtd library mutable ctv local-ctv global-ctv)))) g$C$16315$sFQex g$type$9296$sFQex)))))) g$C$16319$sFQex g$V$16320$sFQex))) g$b$9295$sFQex))) g$C$16321$sFQex g$V$16322$sFQex))) g$label$9294$sFQex g$r$9292$sFQex))) g$C$16323$sFQex g$V$16324$sFQex))) g$id$9293$sFQex))) g$C$16341$sFQex g$e$9291$sFQex) (g$syntax-pair?$8675$sFQex (case-lambda ((g$T$16343$sFQex) (if g$T$16343$sFQex (g$syntax-car$8679$sFQex (case-lambda ((g$V$16344$sFQex) ((case-lambda ((g$C$16336$sFQex g$id$9298$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$16337$sFQex) (if g$T$16337$sFQex (g$id->label$8695$sFQex (case-lambda ((g$V$16338$sFQex) ((case-lambda ((g$C$16334$sFQex g$label$9299$sFQex) (g$label->binding$8697$sFQex (case-lambda ((g$V$16335$sFQex) ((case-lambda ((g$C$16332$sFQex g$b$9300$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$16333$sFQex) ((case-lambda ((g$C$16328$sFQex g$type$9301$sFQex) ((case-lambda ((g$J$16330$sFQex) (not (case-lambda ((g$T$16331$sFQex) (if g$T$16331$sFQex (g$raise-unbound-error$8701$sFQex g$J$16330$sFQex g$id$9298$sFQex) (void g$J$16330$sFQex)))) g$label$9299$sFQex))) (case-lambda (g$IGNORE$16329$sFQex ((case-lambda ((g$C$16325$sFQex g$t$9302$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$16326$sFQex) (if g$T$16326$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16327$sFQex) (values g$C$16325$sFQex g$type$9301$sFQex g$V$16327$sFQex g$id$9298$sFQex))) g$b$9300$sFQex) (values g$C$16325$sFQex 'call '#f '#f)))) g$t$9302$sFQex '(define define-syntax core-macro begin macro macro! local-macro local-macro! global-macro global-macro! module library set! let-syntax letrec-syntax import export $core-rtd ctv local-ctv global-ctv)))) g$C$16328$sFQex g$type$9301$sFQex)))))) g$C$16332$sFQex g$V$16333$sFQex))) g$b$9300$sFQex))) g$C$16334$sFQex g$V$16335$sFQex))) g$label$9299$sFQex g$r$9292$sFQex))) g$C$16336$sFQex g$V$16338$sFQex))) g$id$9298$sFQex) (values g$C$16336$sFQex 'call '#f '#f)))) g$id$9298$sFQex))) g$C$16341$sFQex g$V$16344$sFQex))) g$e$9291$sFQex) (g$stx->datum$8693$sFQex (case-lambda ((g$V$16345$sFQex) ((case-lambda ((g$C$16339$sFQex g$d$9303$sFQex) (g$self-evaluating?$8690$sFQex (case-lambda ((g$T$16340$sFQex) (if g$T$16340$sFQex (values g$C$16339$sFQex 'constant g$d$9303$sFQex '#f) (values g$C$16339$sFQex 'other '#f '#f)))) g$d$9303$sFQex))) g$C$16341$sFQex g$V$16345$sFQex))) g$e$9291$sFQex)))) g$e$9291$sFQex)))) g$e$9291$sFQex)))))) (library-letrec*-identity 'g$syntax-type$8702$sFQex))) (g$sanitize-binding$8710$sFQex g$sanitize-binding$12414$sFQex ((case-lambda ((g$C$20855$sFQex) (g$C$20855$sFQex (case-lambda ((g$C$16346$sFQex g$x$9304$sFQex g$src$9305$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$16347$sFQex) (if g$T$16347$sFQex (g$cons*$5682$sFQex g$C$16346$sFQex 'local-macro g$x$9304$sFQex g$src$9305$sFQex) ((case-lambda ((g$J$16359$sFQex) (pair? (case-lambda ((g$T$16360$sFQex) (if g$T$16360$sFQex (car (case-lambda ((g$V$16361$sFQex) (eq? (case-lambda ((g$T$16362$sFQex) (if g$T$16362$sFQex (cdr (case-lambda ((g$V$16363$sFQex) (g$procedure?$6170$sFQex g$J$16359$sFQex g$V$16363$sFQex))) g$x$9304$sFQex) (g$J$16359$sFQex '#f)))) g$V$16361$sFQex 'macro!))) g$x$9304$sFQex) (g$J$16359$sFQex '#f)))) g$x$9304$sFQex))) (case-lambda ((g$T$16348$sFQex) (if g$T$16348$sFQex (cdr (case-lambda ((g$V$16349$sFQex) (g$cons*$5682$sFQex g$C$16346$sFQex 'local-macro! g$V$16349$sFQex g$src$9305$sFQex))) g$x$9304$sFQex) ((case-lambda ((g$J$16356$sFQex) (pair? (case-lambda ((g$T$16357$sFQex) (if g$T$16357$sFQex (car (case-lambda ((g$V$16358$sFQex) (eq? g$J$16356$sFQex g$V$16358$sFQex '$rtd))) g$x$9304$sFQex) (g$J$16356$sFQex '#f)))) g$x$9304$sFQex))) (case-lambda ((g$T$16350$sFQex) (if g$T$16350$sFQex (g$C$16346$sFQex g$x$9304$sFQex) ((case-lambda ((g$J$16353$sFQex) (pair? (case-lambda ((g$T$16354$sFQex) (if g$T$16354$sFQex (car (case-lambda ((g$V$16355$sFQex) (eq? g$J$16353$sFQex g$V$16355$sFQex 'ctv))) g$x$9304$sFQex) (g$J$16353$sFQex '#f)))) g$x$9304$sFQex))) (case-lambda ((g$T$16351$sFQex) (if g$T$16351$sFQex (cdr (case-lambda ((g$V$16352$sFQex) (g$cons*$5682$sFQex g$C$16346$sFQex 'local-ctv g$V$16352$sFQex g$src$9305$sFQex))) g$x$9304$sFQex) (g$assertion-violation$6456$sFQex g$C$16346$sFQex 'expand '"invalid transformer" g$x$9304$sFQex)))))))))))))))) g$x$9304$sFQex)))))) (library-letrec*-identity 'g$sanitize-binding$8710$sFQex))) (g$make-variable-transformer$8711$sFQex g$make-variable-transformer$12415$sFQex ((case-lambda ((g$C$20856$sFQex) (g$C$20856$sFQex (case-lambda ((g$C$16364$sFQex g$x$9306$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$16365$sFQex) (if g$T$16365$sFQex (cons g$C$16364$sFQex 'macro! g$x$9306$sFQex) (g$assertion-violation$6456$sFQex g$C$16364$sFQex 'make-variable-transformer '"not a procedure" g$x$9306$sFQex)))) g$x$9306$sFQex)))))) (library-letrec*-identity 'g$make-variable-transformer$8711$sFQex))) (g$make-compile-time-value$8712$sFQex g$make-compile-time-value$12416$sFQex ((case-lambda ((g$C$20857$sFQex) (g$C$20857$sFQex (case-lambda ((g$C$16366$sFQex g$x$9307$sFQex) (cons g$C$16366$sFQex 'ctv g$x$9307$sFQex)))))) (library-letrec*-identity 'g$make-compile-time-value$8712$sFQex))) (g$variable-transformer?$8713$sFQex g$variable-transformer?$12417$sFQex ((case-lambda ((g$C$20858$sFQex) (g$C$20858$sFQex (case-lambda ((g$C$16367$sFQex g$x$9308$sFQex) (pair? (case-lambda ((g$T$16368$sFQex) (if g$T$16368$sFQex (car (case-lambda ((g$V$16369$sFQex) (eq? (case-lambda ((g$T$16370$sFQex) (if g$T$16370$sFQex (cdr (case-lambda ((g$V$16371$sFQex) (g$procedure?$6170$sFQex g$C$16367$sFQex g$V$16371$sFQex))) g$x$9308$sFQex) (g$C$16367$sFQex '#f)))) g$V$16369$sFQex 'macro!))) g$x$9308$sFQex) (g$C$16367$sFQex '#f)))) g$x$9308$sFQex)))))) (library-letrec*-identity 'g$variable-transformer?$8713$sFQex))) (g$variable-transformer-procedure$8714$sFQex g$variable-transformer-procedure$12418$sFQex ((case-lambda ((g$C$20859$sFQex) (g$C$20859$sFQex (case-lambda ((g$C$16372$sFQex g$x$9309$sFQex) (g$variable-transformer?$8713$sFQex (case-lambda ((g$T$16373$sFQex) (if g$T$16373$sFQex (cdr g$C$16372$sFQex g$x$9309$sFQex) (g$assertion-violation$6456$sFQex g$C$16372$sFQex 'variable-transformer-procedure '"not a variable transformer" g$x$9309$sFQex)))) g$x$9309$sFQex)))))) (library-letrec*-identity 'g$variable-transformer-procedure$8714$sFQex))) (g$make-eval-transformer$8715$sFQex g$make-eval-transformer$12419$sFQex ((case-lambda ((g$C$20860$sFQex) (g$C$20860$sFQex (case-lambda ((g$C$16374$sFQex g$x$9310$sFQex) (g$expanded->core$8227$sFQex (case-lambda ((g$V$16375$sFQex) (eval-core (case-lambda ((g$V$16376$sFQex) (g$sanitize-binding$8710$sFQex g$C$16374$sFQex g$V$16376$sFQex g$x$9310$sFQex))) g$V$16375$sFQex))) g$x$9310$sFQex)))))) (library-letrec*-identity 'g$make-eval-transformer$8715$sFQex))) (g$parse-define$8901$sFQex g$parse-define$12420$sFQex ((case-lambda ((g$C$20861$sFQex) (g$C$20861$sFQex (case-lambda ((g$C$16405$sFQex g$x$9311$sFQex) ((case-lambda ((g$C$16403$sFQex g$t$9312$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16404$sFQex) ((case-lambda ((g$C$16400$sFQex g$ls/false$9313$sFQex) ((case-lambda ((g$J$16402$sFQex) (if g$ls/false$9313$sFQex (apply g$J$16402$sFQex (case-lambda ((g$C$16377$sFQex g$id$9314$sFQex g$fmls$9315$sFQex g$b$9316$sFQex g$b*$9317$sFQex) (g$id?$8682$sFQex g$C$16377$sFQex g$id$9314$sFQex))) g$ls/false$9313$sFQex) (g$J$16402$sFQex '#f)))) (case-lambda ((g$T$16401$sFQex) (if g$T$16401$sFQex (apply g$C$16400$sFQex (case-lambda ((g$C$16378$sFQex g$id$9318$sFQex g$fmls$9319$sFQex g$b$9320$sFQex g$b*$9321$sFQex) (g$verify-formals$8981$sFQex (case-lambda (g$IGNORE$16379$sFQex (cons (case-lambda ((g$V$16380$sFQex) (cons (case-lambda ((g$V$16381$sFQex) (cons (case-lambda ((g$V$16382$sFQex) (values g$C$16378$sFQex g$id$9318$sFQex g$V$16382$sFQex))) 'defun g$V$16381$sFQex))) g$fmls$9319$sFQex g$V$16380$sFQex))) g$b$9320$sFQex g$b*$9321$sFQex))) g$fmls$9319$sFQex g$x$9311$sFQex))) g$ls/false$9313$sFQex) ((case-lambda ((g$C$16398$sFQex g$t$9322$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16399$sFQex) ((case-lambda ((g$C$16395$sFQex g$ls/false$9323$sFQex) ((case-lambda ((g$J$16397$sFQex) (if g$ls/false$9323$sFQex (apply g$J$16397$sFQex (case-lambda ((g$C$16383$sFQex g$id$9324$sFQex g$val$9325$sFQex) (g$id?$8682$sFQex g$C$16383$sFQex g$id$9324$sFQex))) g$ls/false$9323$sFQex) (g$J$16397$sFQex '#f)))) (case-lambda ((g$T$16396$sFQex) (if g$T$16396$sFQex (apply g$C$16395$sFQex (case-lambda ((g$C$16384$sFQex g$id$9326$sFQex g$val$9327$sFQex) (cons (case-lambda ((g$V$16385$sFQex) (values g$C$16384$sFQex g$id$9326$sFQex g$V$16385$sFQex))) 'expr g$val$9327$sFQex))) g$ls/false$9323$sFQex) ((case-lambda ((g$C$16393$sFQex g$t$9328$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16394$sFQex) ((case-lambda ((g$C$16390$sFQex g$ls/false$9329$sFQex) ((case-lambda ((g$J$16392$sFQex) (if g$ls/false$9329$sFQex (apply g$J$16392$sFQex (case-lambda ((g$C$16386$sFQex g$id$9330$sFQex) (g$id?$8682$sFQex g$C$16386$sFQex g$id$9330$sFQex))) g$ls/false$9329$sFQex) (g$J$16392$sFQex '#f)))) (case-lambda ((g$T$16391$sFQex) (if g$T$16391$sFQex (apply g$C$16390$sFQex (case-lambda ((g$C$16387$sFQex g$id$9331$sFQex) (g$bless$8924$sFQex (case-lambda ((g$V$16388$sFQex) (cons (case-lambda ((g$V$16389$sFQex) (values g$C$16387$sFQex g$id$9331$sFQex g$V$16389$sFQex))) 'expr g$V$16388$sFQex))) '(void)))) g$ls/false$9329$sFQex) (g$syntax-violation$9073$sFQex g$C$16390$sFQex '#f '"invalid syntax" g$t$9328$sFQex))))))) g$C$16393$sFQex g$V$16394$sFQex))) g$t$9328$sFQex '(_ any)))) g$C$16395$sFQex g$t$9322$sFQex))))))) g$C$16398$sFQex g$V$16399$sFQex))) g$t$9322$sFQex '(_ any any)))) g$C$16400$sFQex g$t$9312$sFQex))))))) g$C$16403$sFQex g$V$16404$sFQex))) g$t$9312$sFQex '(_ (any . any) any . each-any)))) g$C$16405$sFQex g$x$9311$sFQex)))))) (library-letrec*-identity 'g$parse-define$8901$sFQex))) (g$parse-define-syntax$8902$sFQex g$parse-define-syntax$12421$sFQex ((case-lambda ((g$C$20862$sFQex) (g$C$20862$sFQex (case-lambda ((g$C$16413$sFQex g$x$9332$sFQex) ((case-lambda ((g$C$16411$sFQex g$t$9333$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16412$sFQex) ((case-lambda ((g$C$16408$sFQex g$ls/false$9334$sFQex) ((case-lambda ((g$J$16410$sFQex) (if g$ls/false$9334$sFQex (apply g$J$16410$sFQex (case-lambda ((g$C$16406$sFQex g$id$9335$sFQex g$val$9336$sFQex) (g$id?$8682$sFQex g$C$16406$sFQex g$id$9335$sFQex))) g$ls/false$9334$sFQex) (g$J$16410$sFQex '#f)))) (case-lambda ((g$T$16409$sFQex) (if g$T$16409$sFQex (apply g$C$16408$sFQex (case-lambda ((g$C$16407$sFQex g$id$9337$sFQex g$val$9338$sFQex) (values g$C$16407$sFQex g$id$9337$sFQex g$val$9338$sFQex))) g$ls/false$9334$sFQex) (g$syntax-violation$9073$sFQex g$C$16408$sFQex '#f '"invalid syntax" g$t$9333$sFQex))))))) g$C$16411$sFQex g$V$16412$sFQex))) g$t$9333$sFQex '(_ any any)))) g$C$16413$sFQex g$x$9332$sFQex)))))) (library-letrec*-identity 'g$parse-define-syntax$8902$sFQex))) (g$scheme-stx-hashtable$8903$sFQex g$scheme-stx-hashtable$12422$sFQex ((case-lambda ((g$C$20863$sFQex) (g$make-eq-hashtable$6267$sFQex g$C$20863$sFQex))) (library-letrec*-identity 'g$scheme-stx-hashtable$8903$sFQex))) (g$scheme-stx$8904$sFQex g$scheme-stx$12423$sFQex ((case-lambda ((g$C$20864$sFQex) (g$C$20864$sFQex (case-lambda ((g$C$16433$sFQex g$sym$9339$sFQex) (g$hashtable-ref$6270$sFQex (case-lambda ((g$V$16434$sFQex) ((case-lambda ((g$C$16430$sFQex g$t$9340$sFQex) (if g$t$9340$sFQex (g$C$16430$sFQex g$t$9340$sFQex) (g$find-library-by-name$8482$sFQex (case-lambda ((g$V$16431$sFQex) (g$library-subst$8446$sFQex (case-lambda ((g$V$16432$sFQex) ((case-lambda ((g$C$16428$sFQex g$subst$9341$sFQex) (g$make-stx$8655$sFQex (case-lambda ((g$V$16429$sFQex) ((case-lambda ((g$C$16425$sFQex g$stx$9342$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$16426$sFQex) ((case-lambda ((g$C$16424$sFQex g$t$9344$sFQex) (if g$t$9344$sFQex ((case-lambda ((g$C$16421$sFQex g$x$9345$sFQex) (cdr (case-lambda ((g$V$16422$sFQex) (car (case-lambda ((g$V$16423$sFQex) ((case-lambda ((g$C$16416$sFQex g$name$9346$sFQex g$label$9347$sFQex) (list (case-lambda ((g$V$16417$sFQex) (list (case-lambda ((g$V$16418$sFQex) (list (case-lambda ((g$V$16419$sFQex) (g$make-rib$8631$sFQex (case-lambda ((g$V$16420$sFQex) (g$add-subst$8672$sFQex g$C$16416$sFQex g$V$16420$sFQex g$stx$9342$sFQex))) g$V$16419$sFQex g$V$16418$sFQex g$V$16417$sFQex '#f '#f))) g$name$9346$sFQex))) g$top-mark*$8619$sFQex))) g$label$9347$sFQex))) g$C$16421$sFQex g$V$16423$sFQex g$V$16422$sFQex))) g$x$9345$sFQex))) g$x$9345$sFQex))) g$C$16424$sFQex g$t$9344$sFQex) (g$C$16424$sFQex g$stx$9342$sFQex)))) (case-lambda ((g$V$16427$sFQex) ((case-lambda ((g$C$16414$sFQex g$stx$9343$sFQex) (g$hashtable-set!$6271$sFQex (case-lambda (g$IGNORE$16415$sFQex (g$C$16414$sFQex g$stx$9343$sFQex))) g$scheme-stx-hashtable$8903$sFQex g$sym$9339$sFQex g$stx$9343$sFQex))) g$C$16425$sFQex g$V$16427$sFQex))) g$V$16426$sFQex))) g$sym$9339$sFQex g$subst$9341$sFQex))) g$C$16428$sFQex g$V$16429$sFQex))) g$sym$9339$sFQex g$top-mark*$8619$sFQex '() '()))) g$C$16430$sFQex g$V$16432$sFQex))) g$V$16431$sFQex))) '(psyntax system $all))))) g$C$16433$sFQex g$V$16434$sFQex))) g$scheme-stx-hashtable$8903$sFQex g$sym$9339$sFQex '#f)))))) (library-letrec*-identity 'g$scheme-stx$8904$sFQex))) (g$lexical-var$8905$sFQex g$lexical-var$12424$sFQex ((case-lambda ((g$C$20865$sFQex) (g$C$20865$sFQex car))) (library-letrec*-identity 'g$lexical-var$8905$sFQex))) (g$lexical-mutable?$8906$sFQex g$lexical-mutable?$12425$sFQex ((case-lambda ((g$C$20866$sFQex) (g$C$20866$sFQex cdr))) (library-letrec*-identity 'g$lexical-mutable?$8906$sFQex))) (g$set-lexical-mutable!$8907$sFQex g$set-lexical-mutable!$12426$sFQex ((case-lambda ((g$C$20867$sFQex) (g$C$20867$sFQex set-cdr!))) (library-letrec*-identity 'g$set-lexical-mutable!$8907$sFQex))) (g$add-lexical$8908$sFQex g$add-lexical$12427$sFQex ((case-lambda ((g$C$20868$sFQex) (g$C$20868$sFQex (case-lambda ((g$C$16435$sFQex g$lab$9348$sFQex g$lex$9349$sFQex g$r$9350$sFQex) (g$cons*$5682$sFQex (case-lambda ((g$V$16436$sFQex) (cons g$C$16435$sFQex g$V$16436$sFQex g$r$9350$sFQex))) g$lab$9348$sFQex 'lexical g$lex$9349$sFQex '#f)))))) (library-letrec*-identity 'g$add-lexical$8908$sFQex))) (g$add-lexicals$8909$sFQex g$add-lexicals$12428$sFQex ((case-lambda ((g$C$20869$sFQex) (g$C$20869$sFQex (case-lambda ((g$C$16437$sFQex g$lab*$9351$sFQex g$lex*$9352$sFQex g$r$9353$sFQex) (null? (case-lambda ((g$T$16438$sFQex) (if g$T$16438$sFQex (g$C$16437$sFQex g$r$9353$sFQex) (car (case-lambda ((g$V$16439$sFQex) (car (case-lambda ((g$V$16440$sFQex) (g$add-lexical$8908$sFQex (case-lambda ((g$V$16441$sFQex) (cdr (case-lambda ((g$V$16442$sFQex) (cdr (case-lambda ((g$V$16443$sFQex) (g$add-lexicals$8909$sFQex g$C$16437$sFQex g$V$16443$sFQex g$V$16442$sFQex g$V$16441$sFQex))) g$lab*$9351$sFQex))) g$lex*$9352$sFQex))) g$V$16440$sFQex g$V$16439$sFQex g$r$9353$sFQex))) g$lab*$9351$sFQex))) g$lex*$9352$sFQex)))) g$lab*$9351$sFQex)))))) (library-letrec*-identity 'g$add-lexicals$8909$sFQex))) (g$letrec-helper$8910$sFQex g$letrec-helper$12429$sFQex ((case-lambda ((g$C$20870$sFQex) (g$C$20870$sFQex (case-lambda ((g$C$16463$sFQex g$e$9354$sFQex g$r$9355$sFQex g$mr$9356$sFQex g$build$9357$sFQex) ((case-lambda ((g$C$16461$sFQex g$t$9358$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16462$sFQex) ((case-lambda ((g$C$16460$sFQex g$ls/false$9359$sFQex) (if g$ls/false$9359$sFQex (apply g$C$16460$sFQex (case-lambda ((g$C$16455$sFQex g$lhs*$9360$sFQex g$rhs*$9361$sFQex g$b$9362$sFQex g$b*$9363$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$V$16456$sFQex) (not (case-lambda ((g$T$16457$sFQex) (if g$T$16457$sFQex (g$invalid-fmls-error$8926$sFQex g$C$16455$sFQex g$e$9354$sFQex g$lhs*$9360$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16458$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16459$sFQex) ((case-lambda ((g$C$16452$sFQex g$lex*$9364$sFQex g$lab*$9365$sFQex) (g$add-lexicals$8909$sFQex (case-lambda ((g$V$16453$sFQex) (g$make-full-rib$8650$sFQex (case-lambda ((g$V$16454$sFQex) ((case-lambda ((g$C$16446$sFQex g$rib$9366$sFQex g$r$9367$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16447$sFQex) (g$chi-expr*$8977$sFQex (case-lambda ((g$V$16448$sFQex) (cons (case-lambda ((g$V$16449$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$16450$sFQex) (g$chi-internal$8990$sFQex (case-lambda ((g$V$16451$sFQex) ((case-lambda ((g$C$16444$sFQex g$body$9368$sFQex g$rhs*$9369$sFQex) (g$build$9357$sFQex g$C$16444$sFQex '#f g$lex*$9364$sFQex g$rhs*$9369$sFQex g$body$9368$sFQex))) g$C$16446$sFQex g$V$16451$sFQex g$V$16448$sFQex))) g$V$16450$sFQex g$r$9367$sFQex g$mr$9356$sFQex))) g$rib$9366$sFQex g$V$16449$sFQex))) g$b$9362$sFQex g$b*$9363$sFQex))) g$V$16447$sFQex g$r$9367$sFQex g$mr$9356$sFQex))) (case-lambda ((g$C$16445$sFQex g$x$9370$sFQex) (g$add-subst$8672$sFQex g$C$16445$sFQex g$rib$9366$sFQex g$x$9370$sFQex))) g$rhs*$9361$sFQex))) g$C$16452$sFQex g$V$16454$sFQex g$V$16453$sFQex))) g$lhs*$9360$sFQex g$lab*$9365$sFQex))) g$lab*$9365$sFQex g$lex*$9364$sFQex g$r$9355$sFQex))) g$C$16455$sFQex g$V$16459$sFQex g$V$16458$sFQex))) g$gen-lexical$8621$sFQex g$lhs*$9360$sFQex))) g$gen-label$8623$sFQex g$lhs*$9360$sFQex)))) g$V$16456$sFQex))) g$lhs*$9360$sFQex))) g$ls/false$9359$sFQex) (g$syntax-violation$9073$sFQex g$C$16460$sFQex '#f '"invalid syntax" g$t$9358$sFQex)))) g$C$16461$sFQex g$V$16462$sFQex))) g$t$9358$sFQex '(_ #(each (any any)) any . each-any)))) g$C$16463$sFQex g$e$9354$sFQex)))))) (library-letrec*-identity 'g$letrec-helper$8910$sFQex))) (g$letrec-transformer$8911$sFQex g$letrec-transformer$12430$sFQex ((case-lambda ((g$C$20871$sFQex) (g$C$20871$sFQex (case-lambda ((g$C$16464$sFQex g$e$9371$sFQex g$r$9372$sFQex g$mr$9373$sFQex) (g$letrec-helper$8910$sFQex g$C$16464$sFQex g$e$9371$sFQex g$r$9372$sFQex g$mr$9373$sFQex g$build-letrec$8613$sFQex)))))) (library-letrec*-identity 'g$letrec-transformer$8911$sFQex))) (g$letrec*-transformer$8912$sFQex g$letrec*-transformer$12431$sFQex ((case-lambda ((g$C$20872$sFQex) (g$C$20872$sFQex (case-lambda ((g$C$16465$sFQex g$e$9374$sFQex g$r$9375$sFQex g$mr$9376$sFQex) (g$letrec-helper$8910$sFQex g$C$16465$sFQex g$e$9374$sFQex g$r$9375$sFQex g$mr$9376$sFQex g$build-letrec*$8614$sFQex)))))) (library-letrec*-identity 'g$letrec*-transformer$8912$sFQex))) (g$fluid-let-syntax-transformer$8913$sFQex g$fluid-let-syntax-transformer$12432$sFQex ((case-lambda ((g$C$20873$sFQex) (g$C$20873$sFQex (case-lambda ((g$C$16486$sFQex g$e$9377$sFQex g$r$9378$sFQex g$mr$9379$sFQex) ((case-lambda ((g$C$16485$sFQex g$lookup$9380$sFQex) (begin (set! g$lookup$9380$sFQex (case-lambda ((g$C$16467$sFQex g$x$9390$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$16468$sFQex) ((case-lambda ((g$C$16466$sFQex g$t$9391$sFQex) (if g$t$9391$sFQex (g$C$16466$sFQex g$t$9391$sFQex) (g$syntax-violation$9073$sFQex g$C$16466$sFQex '#f '"unbound identifier" g$e$9377$sFQex g$x$9390$sFQex)))) g$C$16467$sFQex g$V$16468$sFQex))) g$x$9390$sFQex)))) ((case-lambda ((g$C$16483$sFQex g$t$9381$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16484$sFQex) ((case-lambda ((g$C$16482$sFQex g$ls/false$9382$sFQex) (if g$ls/false$9382$sFQex (apply g$C$16482$sFQex (case-lambda ((g$C$16477$sFQex g$lhs*$9383$sFQex g$rhs*$9384$sFQex g$b$9385$sFQex g$b*$9386$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$V$16478$sFQex) (not (case-lambda ((g$T$16479$sFQex) (if g$T$16479$sFQex (g$invalid-fmls-error$8926$sFQex g$C$16477$sFQex g$e$9377$sFQex g$lhs*$9383$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16480$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16481$sFQex) ((case-lambda ((g$C$16469$sFQex g$lab*$9387$sFQex g$rhs*$9388$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16470$sFQex) (append (case-lambda ((g$V$16471$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16472$sFQex) (append (case-lambda ((g$V$16473$sFQex) (cons (case-lambda ((g$V$16474$sFQex) (g$chi-internal$8990$sFQex g$C$16469$sFQex g$V$16474$sFQex g$V$16473$sFQex g$V$16471$sFQex))) g$b$9385$sFQex g$b*$9386$sFQex))) g$V$16472$sFQex g$r$9378$sFQex))) cons g$lab*$9387$sFQex g$rhs*$9388$sFQex))) g$V$16470$sFQex g$mr$9379$sFQex))) cons g$lab*$9387$sFQex g$rhs*$9388$sFQex))) g$C$16477$sFQex g$V$16481$sFQex g$V$16480$sFQex))) g$lookup$9380$sFQex g$lhs*$9383$sFQex))) (case-lambda ((g$C$16475$sFQex g$x$9389$sFQex) (g$expand-transformer$9006$sFQex (case-lambda ((g$V$16476$sFQex) (g$make-eval-transformer$8715$sFQex g$C$16475$sFQex g$V$16476$sFQex))) g$x$9389$sFQex g$mr$9379$sFQex))) g$rhs*$9384$sFQex)))) g$V$16478$sFQex))) g$lhs*$9383$sFQex))) g$ls/false$9382$sFQex) (g$syntax-violation$9073$sFQex g$C$16482$sFQex '#f '"invalid syntax" g$t$9381$sFQex)))) g$C$16483$sFQex g$V$16484$sFQex))) g$t$9381$sFQex '(_ #(each (any any)) any . each-any)))) g$C$16485$sFQex g$e$9377$sFQex)))) g$C$16486$sFQex uninitialized)))))) (library-letrec*-identity 'g$fluid-let-syntax-transformer$8913$sFQex))) (g$type-descriptor-transformer$8914$sFQex g$type-descriptor-transformer$12433$sFQex ((case-lambda ((g$C$20874$sFQex) (g$C$20874$sFQex (case-lambda ((g$C$16512$sFQex g$e$9392$sFQex g$r$9393$sFQex g$mr$9394$sFQex) ((case-lambda ((g$C$16510$sFQex g$t$9395$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16511$sFQex) ((case-lambda ((g$C$16507$sFQex g$ls/false$9396$sFQex) ((case-lambda ((g$J$16509$sFQex) (if g$ls/false$9396$sFQex (apply g$J$16509$sFQex (case-lambda ((g$C$16487$sFQex g$id$9397$sFQex) (g$id?$8682$sFQex g$C$16487$sFQex g$id$9397$sFQex))) g$ls/false$9396$sFQex) (g$J$16509$sFQex '#f)))) (case-lambda ((g$T$16508$sFQex) (if g$T$16508$sFQex (apply g$C$16507$sFQex (case-lambda ((g$C$16505$sFQex g$id$9398$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$16506$sFQex) ((case-lambda ((g$C$16503$sFQex g$lab$9399$sFQex) (g$label->binding$8697$sFQex (case-lambda ((g$V$16504$sFQex) ((case-lambda ((g$C$16501$sFQex g$b$9400$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$16502$sFQex) ((case-lambda ((g$C$16488$sFQex g$type$9401$sFQex) ((case-lambda ((g$J$16499$sFQex) (not (case-lambda ((g$T$16500$sFQex) (if g$T$16500$sFQex (g$raise-unbound-error$8701$sFQex g$J$16499$sFQex g$id$9398$sFQex) (void g$J$16499$sFQex)))) g$lab$9399$sFQex))) (case-lambda (g$IGNORE$16489$sFQex ((case-lambda ((g$J$16492$sFQex) ((case-lambda ((g$J$16495$sFQex) (eq? (case-lambda ((g$T$16496$sFQex) (if g$T$16496$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16497$sFQex) (list? (case-lambda ((g$V$16498$sFQex) (not g$J$16495$sFQex g$V$16498$sFQex))) g$V$16497$sFQex))) g$b$9400$sFQex) (g$J$16495$sFQex '#f)))) g$type$9401$sFQex '$rtd))) (case-lambda ((g$V$16493$sFQex) (not (case-lambda ((g$T$16494$sFQex) (if g$T$16494$sFQex (g$syntax-violation$9073$sFQex g$J$16492$sFQex '#f '"not a record type" g$e$9392$sFQex) (void g$J$16492$sFQex)))) g$V$16493$sFQex)))))) (case-lambda (g$IGNORE$16490$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16491$sFQex) (list g$C$16488$sFQex 'quote g$V$16491$sFQex))) g$b$9400$sFQex))))))))) g$C$16501$sFQex g$V$16502$sFQex))) g$b$9400$sFQex))) g$C$16503$sFQex g$V$16504$sFQex))) g$lab$9399$sFQex g$r$9393$sFQex))) g$C$16505$sFQex g$V$16506$sFQex))) g$id$9398$sFQex))) g$ls/false$9396$sFQex) (g$syntax-violation$9073$sFQex g$C$16507$sFQex '#f '"invalid syntax" g$t$9395$sFQex))))))) g$C$16510$sFQex g$V$16511$sFQex))) g$t$9395$sFQex '(_ any)))) g$C$16512$sFQex g$e$9392$sFQex)))))) (library-letrec*-identity 'g$type-descriptor-transformer$8914$sFQex))) (g$record-type-descriptor-transformer$8915$sFQex g$record-type-descriptor-transformer$12434$sFQex ((case-lambda ((g$C$20875$sFQex) (g$C$20875$sFQex (case-lambda ((g$C$16538$sFQex g$e$9402$sFQex g$r$9403$sFQex g$mr$9404$sFQex) ((case-lambda ((g$C$16536$sFQex g$t$9405$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16537$sFQex) ((case-lambda ((g$C$16533$sFQex g$ls/false$9406$sFQex) ((case-lambda ((g$J$16535$sFQex) (if g$ls/false$9406$sFQex (apply g$J$16535$sFQex (case-lambda ((g$C$16513$sFQex g$id$9407$sFQex) (g$id?$8682$sFQex g$C$16513$sFQex g$id$9407$sFQex))) g$ls/false$9406$sFQex) (g$J$16535$sFQex '#f)))) (case-lambda ((g$T$16534$sFQex) (if g$T$16534$sFQex (apply g$C$16533$sFQex (case-lambda ((g$C$16531$sFQex g$id$9408$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$16532$sFQex) ((case-lambda ((g$C$16529$sFQex g$lab$9409$sFQex) (g$label->binding$8697$sFQex (case-lambda ((g$V$16530$sFQex) ((case-lambda ((g$C$16527$sFQex g$b$9410$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$16528$sFQex) ((case-lambda ((g$C$16514$sFQex g$type$9411$sFQex) ((case-lambda ((g$J$16525$sFQex) (not (case-lambda ((g$T$16526$sFQex) (if g$T$16526$sFQex (g$raise-unbound-error$8701$sFQex g$J$16525$sFQex g$id$9408$sFQex) (void g$J$16525$sFQex)))) g$lab$9409$sFQex))) (case-lambda (g$IGNORE$16515$sFQex ((case-lambda ((g$J$16519$sFQex) ((case-lambda ((g$J$16522$sFQex) (eq? (case-lambda ((g$T$16523$sFQex) (if g$T$16523$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16524$sFQex) (list? g$J$16522$sFQex g$V$16524$sFQex))) g$b$9410$sFQex) (g$J$16522$sFQex '#f)))) g$type$9411$sFQex '$rtd))) (case-lambda ((g$V$16520$sFQex) (not (case-lambda ((g$T$16521$sFQex) (if g$T$16521$sFQex (g$syntax-violation$9073$sFQex g$J$16519$sFQex '#f '"not a record type" g$e$9402$sFQex) (void g$J$16519$sFQex)))) g$V$16520$sFQex)))))) (case-lambda (g$IGNORE$16516$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16517$sFQex) (car (case-lambda ((g$V$16518$sFQex) (g$chi-expr$8979$sFQex g$C$16514$sFQex g$V$16518$sFQex g$r$9403$sFQex g$mr$9404$sFQex))) g$V$16517$sFQex))) g$b$9410$sFQex))))))))) g$C$16527$sFQex g$V$16528$sFQex))) g$b$9410$sFQex))) g$C$16529$sFQex g$V$16530$sFQex))) g$lab$9409$sFQex g$r$9403$sFQex))) g$C$16531$sFQex g$V$16532$sFQex))) g$id$9408$sFQex))) g$ls/false$9406$sFQex) (g$syntax-violation$9073$sFQex g$C$16533$sFQex '#f '"invalid syntax" g$t$9405$sFQex))))))) g$C$16536$sFQex g$V$16537$sFQex))) g$t$9405$sFQex '(_ any)))) g$C$16538$sFQex g$e$9402$sFQex)))))) (library-letrec*-identity 'g$record-type-descriptor-transformer$8915$sFQex))) (g$record-constructor-descriptor-transformer$8916$sFQex g$record-constructor-descriptor-transformer$12435$sFQex ((case-lambda ((g$C$20876$sFQex) (g$C$20876$sFQex (case-lambda ((g$C$16564$sFQex g$e$9412$sFQex g$r$9413$sFQex g$mr$9414$sFQex) ((case-lambda ((g$C$16562$sFQex g$t$9415$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16563$sFQex) ((case-lambda ((g$C$16559$sFQex g$ls/false$9416$sFQex) ((case-lambda ((g$J$16561$sFQex) (if g$ls/false$9416$sFQex (apply g$J$16561$sFQex (case-lambda ((g$C$16539$sFQex g$id$9417$sFQex) (g$id?$8682$sFQex g$C$16539$sFQex g$id$9417$sFQex))) g$ls/false$9416$sFQex) (g$J$16561$sFQex '#f)))) (case-lambda ((g$T$16560$sFQex) (if g$T$16560$sFQex (apply g$C$16559$sFQex (case-lambda ((g$C$16557$sFQex g$id$9418$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$16558$sFQex) ((case-lambda ((g$C$16555$sFQex g$lab$9419$sFQex) (g$label->binding$8697$sFQex (case-lambda ((g$V$16556$sFQex) ((case-lambda ((g$C$16553$sFQex g$b$9420$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$16554$sFQex) ((case-lambda ((g$C$16540$sFQex g$type$9421$sFQex) ((case-lambda ((g$J$16551$sFQex) (not (case-lambda ((g$T$16552$sFQex) (if g$T$16552$sFQex (g$raise-unbound-error$8701$sFQex g$J$16551$sFQex g$id$9418$sFQex) (void g$J$16551$sFQex)))) g$lab$9419$sFQex))) (case-lambda (g$IGNORE$16541$sFQex ((case-lambda ((g$J$16545$sFQex) ((case-lambda ((g$J$16548$sFQex) (eq? (case-lambda ((g$T$16549$sFQex) (if g$T$16549$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16550$sFQex) (list? g$J$16548$sFQex g$V$16550$sFQex))) g$b$9420$sFQex) (g$J$16548$sFQex '#f)))) g$type$9421$sFQex '$rtd))) (case-lambda ((g$V$16546$sFQex) (not (case-lambda ((g$T$16547$sFQex) (if g$T$16547$sFQex (g$syntax-violation$9073$sFQex g$J$16545$sFQex '#f '"invalid type" g$e$9412$sFQex) (void g$J$16545$sFQex)))) g$V$16546$sFQex)))))) (case-lambda (g$IGNORE$16542$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$16543$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$16544$sFQex) (g$chi-expr$8979$sFQex g$C$16540$sFQex g$V$16544$sFQex g$r$9413$sFQex g$mr$9414$sFQex))) g$V$16543$sFQex))) g$b$9420$sFQex))))))))) g$C$16553$sFQex g$V$16554$sFQex))) g$b$9420$sFQex))) g$C$16555$sFQex g$V$16556$sFQex))) g$lab$9419$sFQex g$r$9413$sFQex))) g$C$16557$sFQex g$V$16558$sFQex))) g$id$9418$sFQex))) g$ls/false$9416$sFQex) (g$syntax-violation$9073$sFQex g$C$16559$sFQex '#f '"invalid syntax" g$t$9415$sFQex))))))) g$C$16562$sFQex g$V$16563$sFQex))) g$t$9415$sFQex '(_ any)))) g$C$16564$sFQex g$e$9412$sFQex)))))) (library-letrec*-identity 'g$record-constructor-descriptor-transformer$8916$sFQex))) (g$when-macro$8917$sFQex g$when-macro$12436$sFQex ((case-lambda ((g$C$20877$sFQex) (g$C$20877$sFQex (case-lambda ((g$C$16572$sFQex g$e$9422$sFQex) ((case-lambda ((g$C$16570$sFQex g$t$9423$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16571$sFQex) ((case-lambda ((g$C$16569$sFQex g$ls/false$9424$sFQex) (if g$ls/false$9424$sFQex (apply g$C$16569$sFQex (case-lambda ((g$C$16565$sFQex g$test$9425$sFQex g$e$9426$sFQex g$e*$9427$sFQex) (cons (case-lambda ((g$V$16566$sFQex) (cons (case-lambda ((g$V$16567$sFQex) (list (case-lambda ((g$V$16568$sFQex) (g$bless$8924$sFQex g$C$16565$sFQex g$V$16568$sFQex))) 'if g$test$9425$sFQex g$V$16567$sFQex))) 'begin g$V$16566$sFQex))) g$e$9426$sFQex g$e*$9427$sFQex))) g$ls/false$9424$sFQex) (g$syntax-violation$9073$sFQex g$C$16569$sFQex '#f '"invalid syntax" g$t$9423$sFQex)))) g$C$16570$sFQex g$V$16571$sFQex))) g$t$9423$sFQex '(_ any any . each-any)))) g$C$16572$sFQex g$e$9422$sFQex)))))) (library-letrec*-identity 'g$when-macro$8917$sFQex))) (g$unless-macro$8918$sFQex g$unless-macro$12437$sFQex ((case-lambda ((g$C$20878$sFQex) (g$C$20878$sFQex (case-lambda ((g$C$16581$sFQex g$e$9428$sFQex) ((case-lambda ((g$C$16579$sFQex g$t$9429$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16580$sFQex) ((case-lambda ((g$C$16578$sFQex g$ls/false$9430$sFQex) (if g$ls/false$9430$sFQex (apply g$C$16578$sFQex (case-lambda ((g$C$16573$sFQex g$test$9431$sFQex g$e$9432$sFQex g$e*$9433$sFQex) (cons (case-lambda ((g$V$16574$sFQex) (cons (case-lambda ((g$V$16575$sFQex) (list (case-lambda ((g$V$16576$sFQex) (list (case-lambda ((g$V$16577$sFQex) (g$bless$8924$sFQex g$C$16573$sFQex g$V$16577$sFQex))) 'if g$V$16576$sFQex g$V$16575$sFQex))) 'not g$test$9431$sFQex))) 'begin g$V$16574$sFQex))) g$e$9432$sFQex g$e*$9433$sFQex))) g$ls/false$9430$sFQex) (g$syntax-violation$9073$sFQex g$C$16578$sFQex '#f '"invalid syntax" g$t$9429$sFQex)))) g$C$16579$sFQex g$V$16580$sFQex))) g$t$9429$sFQex '(_ any any . each-any)))) g$C$16581$sFQex g$e$9428$sFQex)))))) (library-letrec*-identity 'g$unless-macro$8918$sFQex))) (g$if-transformer$8919$sFQex g$if-transformer$12438$sFQex ((case-lambda ((g$C$20879$sFQex) (g$C$20879$sFQex (case-lambda ((g$C$16596$sFQex g$e$9434$sFQex g$r$9435$sFQex g$mr$9436$sFQex) ((case-lambda ((g$C$16594$sFQex g$t$9437$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16595$sFQex) ((case-lambda ((g$C$16593$sFQex g$ls/false$9438$sFQex) (if g$ls/false$9438$sFQex (apply g$C$16593$sFQex (case-lambda ((g$C$16582$sFQex g$e0$9439$sFQex g$e1$9440$sFQex g$e2$9441$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$16583$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$16584$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$16585$sFQex) (list g$C$16582$sFQex 'if g$V$16585$sFQex g$V$16584$sFQex g$V$16583$sFQex))) g$e0$9439$sFQex g$r$9435$sFQex g$mr$9436$sFQex))) g$e1$9440$sFQex g$r$9435$sFQex g$mr$9436$sFQex))) g$e2$9441$sFQex g$r$9435$sFQex g$mr$9436$sFQex))) g$ls/false$9438$sFQex) ((case-lambda ((g$C$16591$sFQex g$t$9442$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16592$sFQex) ((case-lambda ((g$C$16590$sFQex g$ls/false$9443$sFQex) (if g$ls/false$9443$sFQex (apply g$C$16590$sFQex (case-lambda ((g$C$16586$sFQex g$e0$9444$sFQex g$e1$9445$sFQex) (g$build-void$8612$sFQex (case-lambda ((g$V$16587$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$16588$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$16589$sFQex) (list g$C$16586$sFQex 'if g$V$16589$sFQex g$V$16588$sFQex g$V$16587$sFQex))) g$e0$9444$sFQex g$r$9435$sFQex g$mr$9436$sFQex))) g$e1$9445$sFQex g$r$9435$sFQex g$mr$9436$sFQex)))))) g$ls/false$9443$sFQex) (g$syntax-violation$9073$sFQex g$C$16590$sFQex '#f '"invalid syntax" g$t$9442$sFQex)))) g$C$16591$sFQex g$V$16592$sFQex))) g$t$9442$sFQex '(_ any any)))) g$C$16593$sFQex g$t$9437$sFQex)))) g$C$16594$sFQex g$V$16595$sFQex))) g$t$9437$sFQex '(_ any any any)))) g$C$16596$sFQex g$e$9434$sFQex)))))) (library-letrec*-identity 'g$if-transformer$8919$sFQex))) (g$case-macro$8920$sFQex g$case-macro$12439$sFQex ((case-lambda ((g$C$20880$sFQex) (g$C$20880$sFQex (case-lambda ((g$C$16642$sFQex g$e$9446$sFQex) ((case-lambda ((g$C$16641$sFQex g$build-last$9447$sFQex g$build-one$9448$sFQex) (begin (set! g$build-last$9447$sFQex (case-lambda ((g$C$16606$sFQex g$cls$9467$sFQex) ((case-lambda ((g$C$16604$sFQex g$t$9468$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16605$sFQex) ((case-lambda ((g$C$16603$sFQex g$ls/false$9469$sFQex) (if g$ls/false$9469$sFQex (apply g$C$16603$sFQex (case-lambda ((g$C$16597$sFQex g$e$9470$sFQex g$e*$9471$sFQex) (cons (case-lambda ((g$V$16598$sFQex) (cons g$C$16597$sFQex 'begin g$V$16598$sFQex))) g$e$9470$sFQex g$e*$9471$sFQex))) g$ls/false$9469$sFQex) ((case-lambda ((g$C$16601$sFQex g$t$9472$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16602$sFQex) ((case-lambda ((g$C$16600$sFQex g$ls/false$9473$sFQex) (if g$ls/false$9473$sFQex (apply g$C$16600$sFQex (case-lambda ((g$C$16599$sFQex) (g$build-one$9448$sFQex g$C$16599$sFQex g$cls$9467$sFQex '(if #f #f)))) g$ls/false$9473$sFQex) (g$syntax-violation$9073$sFQex g$C$16600$sFQex '#f '"invalid syntax" g$t$9472$sFQex)))) g$C$16601$sFQex g$V$16602$sFQex))) g$t$9472$sFQex '_))) g$C$16603$sFQex g$t$9468$sFQex)))) g$C$16604$sFQex g$V$16605$sFQex))) g$t$9468$sFQex '(#(scheme-id else) any . each-any)))) g$C$16606$sFQex g$cls$9467$sFQex)))) (begin (set! g$build-one$9448$sFQex (case-lambda ((g$C$16615$sFQex g$cls$9460$sFQex g$k$9461$sFQex) ((case-lambda ((g$C$16613$sFQex g$t$9462$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16614$sFQex) ((case-lambda ((g$C$16612$sFQex g$ls/false$9463$sFQex) (if g$ls/false$9463$sFQex (apply g$C$16612$sFQex (case-lambda ((g$C$16607$sFQex g$d*$9464$sFQex g$e$9465$sFQex g$e*$9466$sFQex) (cons (case-lambda ((g$V$16608$sFQex) (cons (case-lambda ((g$V$16609$sFQex) (list (case-lambda ((g$V$16610$sFQex) (list (case-lambda ((g$V$16611$sFQex) (list g$C$16607$sFQex 'if g$V$16611$sFQex g$V$16609$sFQex g$k$9461$sFQex))) 'memv 't g$V$16610$sFQex))) 'quote g$d*$9464$sFQex))) 'begin g$V$16608$sFQex))) g$e$9465$sFQex g$e*$9466$sFQex))) g$ls/false$9463$sFQex) (g$syntax-violation$9073$sFQex g$C$16612$sFQex '#f '"invalid syntax" g$t$9462$sFQex)))) g$C$16613$sFQex g$V$16614$sFQex))) g$t$9462$sFQex '(each-any any . each-any)))) g$C$16615$sFQex g$cls$9460$sFQex)))) ((case-lambda ((g$C$16639$sFQex g$t$9449$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16640$sFQex) ((case-lambda ((g$C$16638$sFQex g$ls/false$9450$sFQex) (if g$ls/false$9450$sFQex (apply g$C$16638$sFQex (case-lambda ((g$C$16616$sFQex g$expr$9451$sFQex) (list (case-lambda ((g$V$16617$sFQex) (list (case-lambda ((g$V$16618$sFQex) (cons (case-lambda ((g$V$16619$sFQex) (cons (case-lambda ((g$V$16620$sFQex) (g$bless$8924$sFQex g$C$16616$sFQex g$V$16620$sFQex))) 'let g$V$16619$sFQex))) g$V$16618$sFQex '((if #f #f))))) g$V$16617$sFQex))) 't g$expr$9451$sFQex))) g$ls/false$9450$sFQex) ((case-lambda ((g$C$16636$sFQex g$t$9452$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16637$sFQex) ((case-lambda ((g$C$16635$sFQex g$ls/false$9453$sFQex) (if g$ls/false$9453$sFQex (apply g$C$16635$sFQex (case-lambda ((g$C$16629$sFQex g$expr$9454$sFQex g$cls$9455$sFQex g$cls*$9456$sFQex) ((case-lambda ((g$C$16628$sFQex g$f$9457$sFQex) ((case-lambda ((g$C$16622$sFQex g$f$16621$sFQex) (begin (set! g$f$9457$sFQex g$f$16621$sFQex) (g$C$16622$sFQex g$f$9457$sFQex)))) g$C$16628$sFQex (case-lambda ((g$C$16623$sFQex g$cls$9458$sFQex g$cls*$9459$sFQex) (null? (case-lambda ((g$T$16624$sFQex) (if g$T$16624$sFQex (g$build-last$9447$sFQex g$C$16623$sFQex g$cls$9458$sFQex) (cdr (case-lambda ((g$V$16625$sFQex) (car (case-lambda ((g$V$16626$sFQex) (g$f$9457$sFQex (case-lambda ((g$V$16627$sFQex) (g$build-one$9448$sFQex g$C$16623$sFQex g$cls$9458$sFQex g$V$16627$sFQex))) g$V$16626$sFQex g$V$16625$sFQex))) g$cls*$9459$sFQex))) g$cls*$9459$sFQex)))) g$cls*$9459$sFQex)))))) (case-lambda ((g$V$16630$sFQex) (g$V$16630$sFQex (case-lambda ((g$V$16631$sFQex) (list (case-lambda ((g$V$16632$sFQex) (list (case-lambda ((g$V$16633$sFQex) (list (case-lambda ((g$V$16634$sFQex) (g$bless$8924$sFQex g$C$16629$sFQex g$V$16634$sFQex))) 'let g$V$16633$sFQex g$V$16631$sFQex))) g$V$16632$sFQex))) 't g$expr$9454$sFQex))) g$cls$9455$sFQex g$cls*$9456$sFQex))) uninitialized))) g$ls/false$9453$sFQex) (g$syntax-violation$9073$sFQex g$C$16635$sFQex '#f '"invalid syntax" g$t$9452$sFQex)))) g$C$16636$sFQex g$V$16637$sFQex))) g$t$9452$sFQex '(_ any any . each-any)))) g$C$16638$sFQex g$t$9449$sFQex)))) g$C$16639$sFQex g$V$16640$sFQex))) g$t$9449$sFQex '(_ any)))) g$C$16641$sFQex g$e$9446$sFQex))))) g$C$16642$sFQex uninitialized uninitialized)))))) (library-letrec*-identity 'g$case-macro$8920$sFQex))) (g$quote-transformer$8921$sFQex g$quote-transformer$12440$sFQex ((case-lambda ((g$C$20881$sFQex) (g$C$20881$sFQex (case-lambda ((g$C$16648$sFQex g$e$9474$sFQex g$r$9475$sFQex g$mr$9476$sFQex) ((case-lambda ((g$C$16646$sFQex g$t$9477$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16647$sFQex) ((case-lambda ((g$C$16645$sFQex g$ls/false$9478$sFQex) (if g$ls/false$9478$sFQex (apply g$C$16645$sFQex (case-lambda ((g$C$16643$sFQex g$datum$9479$sFQex) (g$stx->datum$8693$sFQex (case-lambda ((g$V$16644$sFQex) (list g$C$16643$sFQex 'quote g$V$16644$sFQex))) g$datum$9479$sFQex))) g$ls/false$9478$sFQex) (g$syntax-violation$9073$sFQex g$C$16645$sFQex '#f '"invalid syntax" g$t$9477$sFQex)))) g$C$16646$sFQex g$V$16647$sFQex))) g$t$9477$sFQex '(_ any)))) g$C$16648$sFQex g$e$9474$sFQex)))))) (library-letrec*-identity 'g$quote-transformer$8921$sFQex))) (g$case-lambda-transformer$8922$sFQex g$case-lambda-transformer$12441$sFQex ((case-lambda ((g$C$20882$sFQex) (g$C$20882$sFQex (case-lambda ((g$C$16657$sFQex g$e$9480$sFQex g$r$9481$sFQex g$mr$9482$sFQex) ((case-lambda ((g$C$16655$sFQex g$t$9483$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16656$sFQex) ((case-lambda ((g$C$16654$sFQex g$ls/false$9484$sFQex) (if g$ls/false$9484$sFQex (apply g$C$16654$sFQex (case-lambda ((g$C$16653$sFQex g$fmls*$9485$sFQex g$b*$9486$sFQex g$b**$9487$sFQex) (call-with-values g$C$16653$sFQex (case-lambda ((g$C$16649$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16650$sFQex) (g$chi-lambda-clause*$8983$sFQex g$C$16649$sFQex g$e$9480$sFQex g$fmls*$9485$sFQex g$V$16650$sFQex g$r$9481$sFQex g$mr$9482$sFQex))) cons g$b*$9486$sFQex g$b**$9487$sFQex))) (case-lambda ((g$C$16652$sFQex g$fmls*$9490$sFQex g$body*$9491$sFQex) ((case-lambda ((g$C$16651$sFQex g$body*$9492$sFQex g$fmls*$9493$sFQex) (g$build-case-lambda$8609$sFQex g$C$16651$sFQex '#f g$fmls*$9493$sFQex g$body*$9492$sFQex))) g$C$16652$sFQex g$body*$9491$sFQex g$fmls*$9490$sFQex)))))) g$ls/false$9484$sFQex) (g$syntax-violation$9073$sFQex g$C$16654$sFQex '#f '"invalid syntax" g$t$9483$sFQex)))) g$C$16655$sFQex g$V$16656$sFQex))) g$t$9483$sFQex '(_ . #(each (any any . each-any)))))) g$C$16657$sFQex g$e$9480$sFQex)))))) (library-letrec*-identity 'g$case-lambda-transformer$8922$sFQex))) (g$lambda-transformer$8923$sFQex g$lambda-transformer$12442$sFQex ((case-lambda ((g$C$20883$sFQex) (g$C$20883$sFQex (case-lambda ((g$C$16666$sFQex g$e$9494$sFQex g$r$9495$sFQex g$mr$9496$sFQex) ((case-lambda ((g$C$16664$sFQex g$t$9497$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16665$sFQex) ((case-lambda ((g$C$16663$sFQex g$ls/false$9498$sFQex) (if g$ls/false$9498$sFQex (apply g$C$16663$sFQex (case-lambda ((g$C$16662$sFQex g$fmls$9499$sFQex g$b$9500$sFQex g$b*$9501$sFQex) (call-with-values g$C$16662$sFQex (case-lambda ((g$C$16658$sFQex) (cons (case-lambda ((g$V$16659$sFQex) (g$chi-lambda-clause$8982$sFQex g$C$16658$sFQex g$e$9494$sFQex g$fmls$9499$sFQex g$V$16659$sFQex g$r$9495$sFQex g$mr$9496$sFQex))) g$b$9500$sFQex g$b*$9501$sFQex))) (case-lambda ((g$C$16661$sFQex g$fmls$9504$sFQex g$body$9505$sFQex) ((case-lambda ((g$C$16660$sFQex g$body$9506$sFQex g$fmls$9507$sFQex) (g$build-lambda$8608$sFQex g$C$16660$sFQex '#f g$fmls$9507$sFQex g$body$9506$sFQex))) g$C$16661$sFQex g$body$9505$sFQex g$fmls$9504$sFQex)))))) g$ls/false$9498$sFQex) (g$syntax-violation$9073$sFQex g$C$16663$sFQex '#f '"invalid syntax" g$t$9497$sFQex)))) g$C$16664$sFQex g$V$16665$sFQex))) g$t$9497$sFQex '(_ any any . each-any)))) g$C$16666$sFQex g$e$9494$sFQex)))))) (library-letrec*-identity 'g$lambda-transformer$8923$sFQex))) (g$bless$8924$sFQex g$bless$12443$sFQex ((case-lambda ((g$C$20884$sFQex) (g$C$20884$sFQex (case-lambda ((g$C$16679$sFQex g$x$9508$sFQex) ((case-lambda ((g$C$16678$sFQex g$f$9509$sFQex) ((case-lambda ((g$C$16668$sFQex g$f$16667$sFQex) (begin (set! g$f$9509$sFQex g$f$16667$sFQex) (g$C$16668$sFQex g$f$9509$sFQex)))) g$C$16678$sFQex (case-lambda ((g$C$16669$sFQex g$x$9510$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$16670$sFQex) (if g$T$16670$sFQex (g$C$16669$sFQex g$x$9510$sFQex) (pair? (case-lambda ((g$T$16671$sFQex) (if g$T$16671$sFQex (cdr (case-lambda ((g$V$16672$sFQex) (g$f$9509$sFQex (case-lambda ((g$V$16673$sFQex) (car (case-lambda ((g$V$16674$sFQex) (g$f$9509$sFQex (case-lambda ((g$V$16675$sFQex) (cons g$C$16669$sFQex g$V$16675$sFQex g$V$16673$sFQex))) g$V$16674$sFQex))) g$x$9510$sFQex))) g$V$16672$sFQex))) g$x$9510$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$16676$sFQex) (if g$T$16676$sFQex (g$scheme-stx$8904$sFQex g$C$16669$sFQex g$x$9510$sFQex) (g$vector?$6166$sFQex (case-lambda ((g$T$16677$sFQex) (if g$T$16677$sFQex (g$vector-map$6228$sFQex g$C$16669$sFQex g$f$9509$sFQex g$x$9510$sFQex) (g$C$16669$sFQex g$x$9510$sFQex)))) g$x$9510$sFQex)))) g$x$9510$sFQex)))) g$x$9510$sFQex)))) g$x$9510$sFQex)))))) (case-lambda ((g$V$16680$sFQex) (g$V$16680$sFQex (case-lambda ((g$V$16681$sFQex) (g$mkstx$8670$sFQex g$C$16679$sFQex g$V$16681$sFQex '() '() '()))) g$x$9508$sFQex))) uninitialized)))))) (library-letrec*-identity 'g$bless$8924$sFQex))) (g$with-syntax-macro$8925$sFQex g$with-syntax-macro$12444$sFQex ((case-lambda ((g$C$20885$sFQex) (g$C$20885$sFQex (case-lambda ((g$C$16726$sFQex g$e$9511$sFQex) ((case-lambda ((g$C$16724$sFQex g$t$9512$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16725$sFQex) ((case-lambda ((g$C$16723$sFQex g$ls/false$9513$sFQex) (if g$ls/false$9513$sFQex (apply g$C$16723$sFQex (case-lambda ((g$C$16720$sFQex g$pat*$9514$sFQex g$expr*$9515$sFQex g$b$9516$sFQex g$b*$9517$sFQex) ((case-lambda ((g$C$16719$sFQex g$f$9523$sFQex) ((case-lambda ((g$C$16710$sFQex g$f$16709$sFQex) (begin (set! g$f$9523$sFQex g$f$16709$sFQex) (g$C$16710$sFQex g$f$9523$sFQex)))) g$C$16719$sFQex (case-lambda ((g$C$16717$sFQex g$pat*$9524$sFQex) (null? (case-lambda ((g$T$16718$sFQex) (if g$T$16718$sFQex (g$C$16717$sFQex '()) (call-with-values g$C$16717$sFQex (case-lambda ((g$C$16711$sFQex) (car (case-lambda ((g$V$16712$sFQex) (g$convert-pattern$8960$sFQex g$C$16711$sFQex g$V$16712$sFQex '()))) g$pat*$9524$sFQex))) (case-lambda ((g$C$16716$sFQex g$pat$9527$sFQex g$idn*$9528$sFQex) ((case-lambda ((g$C$16713$sFQex g$idn*$9529$sFQex g$pat$9530$sFQex) (cdr (case-lambda ((g$V$16714$sFQex) (g$f$9523$sFQex (case-lambda ((g$V$16715$sFQex) (append g$C$16713$sFQex g$idn*$9529$sFQex g$V$16715$sFQex))) g$V$16714$sFQex))) g$pat*$9524$sFQex))) g$C$16716$sFQex g$idn*$9528$sFQex g$pat$9527$sFQex))))))) g$pat*$9524$sFQex)))))) (case-lambda ((g$V$16721$sFQex) (g$V$16721$sFQex (case-lambda ((g$V$16722$sFQex) ((case-lambda ((g$C$16705$sFQex g$idn*$9518$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16706$sFQex) (g$verify-formals$8981$sFQex (case-lambda (g$IGNORE$16707$sFQex (g$generate-temporaries$9063$sFQex (case-lambda ((g$V$16708$sFQex) ((case-lambda ((g$C$16700$sFQex g$t*$9519$sFQex) ((case-lambda ((g$C$16699$sFQex g$f$9520$sFQex) ((case-lambda ((g$C$16683$sFQex g$f$16682$sFQex) (begin (set! g$f$9520$sFQex g$f$16682$sFQex) (g$C$16683$sFQex g$f$9520$sFQex)))) g$C$16699$sFQex (case-lambda ((g$C$16684$sFQex g$pat*$9521$sFQex g$t*$9522$sFQex) (null? (case-lambda ((g$T$16685$sFQex) (if g$T$16685$sFQex (cons (case-lambda ((g$V$16686$sFQex) (cons (case-lambda ((g$V$16687$sFQex) (cons g$C$16684$sFQex 'begin g$V$16687$sFQex))) '#f g$V$16686$sFQex))) g$b$9516$sFQex g$b*$9517$sFQex) (car (case-lambda ((g$V$16688$sFQex) (car (case-lambda ((g$V$16689$sFQex) (list (case-lambda ((g$V$16690$sFQex) (list (case-lambda ((g$V$16691$sFQex) (list (case-lambda ((g$V$16692$sFQex) (cdr (case-lambda ((g$V$16693$sFQex) (cdr (case-lambda ((g$V$16694$sFQex) (g$f$9520$sFQex (case-lambda ((g$V$16695$sFQex) (car (case-lambda ((g$V$16696$sFQex) (list (case-lambda ((g$V$16697$sFQex) (car (case-lambda ((g$V$16698$sFQex) (list g$C$16684$sFQex 'syntax-case g$V$16698$sFQex '() g$V$16697$sFQex g$V$16692$sFQex))) g$t*$9522$sFQex))) g$V$16696$sFQex g$V$16695$sFQex))) g$pat*$9521$sFQex))) g$V$16694$sFQex g$V$16693$sFQex))) g$pat*$9521$sFQex))) g$t*$9522$sFQex))) '_ g$V$16691$sFQex))) 'assertion-violation ''with-syntax '"pattern does not match value" g$V$16690$sFQex g$V$16688$sFQex))) 'quote g$V$16689$sFQex))) g$pat*$9521$sFQex))) g$t*$9522$sFQex)))) g$pat*$9521$sFQex)))))) (case-lambda ((g$V$16701$sFQex) (g$V$16701$sFQex (case-lambda ((g$V$16702$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16703$sFQex) (list (case-lambda ((g$V$16704$sFQex) (g$bless$8924$sFQex g$C$16700$sFQex g$V$16704$sFQex))) 'let g$V$16703$sFQex g$V$16702$sFQex))) list g$t*$9519$sFQex g$expr*$9515$sFQex))) g$pat*$9514$sFQex g$t*$9519$sFQex))) uninitialized))) g$C$16705$sFQex g$V$16708$sFQex))) g$expr*$9515$sFQex))) g$V$16706$sFQex g$e$9511$sFQex))) car g$idn*$9518$sFQex))) g$C$16720$sFQex g$V$16722$sFQex))) g$pat*$9514$sFQex))) uninitialized))) g$ls/false$9513$sFQex) (g$syntax-violation$9073$sFQex g$C$16723$sFQex '#f '"invalid syntax" g$t$9512$sFQex)))) g$C$16724$sFQex g$V$16725$sFQex))) g$t$9512$sFQex '(_ #(each (any any)) any . each-any)))) g$C$16726$sFQex g$e$9511$sFQex)))))) (library-letrec*-identity 'g$with-syntax-macro$8925$sFQex))) (g$invalid-fmls-error$8926$sFQex g$invalid-fmls-error$12445$sFQex ((case-lambda ((g$C$20886$sFQex) (g$C$20886$sFQex (case-lambda ((g$C$16755$sFQex g$stx$9531$sFQex g$fmls$9532$sFQex) ((case-lambda ((g$C$16753$sFQex g$t$9533$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16754$sFQex) ((case-lambda ((g$C$16752$sFQex g$ls/false$9534$sFQex) (if g$ls/false$9534$sFQex (apply g$C$16752$sFQex (case-lambda ((g$C$16742$sFQex g$id*$9535$sFQex g$last$9536$sFQex) ((case-lambda ((g$J$16745$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$16746$sFQex) (if g$T$16746$sFQex (cons g$J$16745$sFQex g$last$9536$sFQex g$id*$9535$sFQex) (g$syntax-null?$8677$sFQex (case-lambda ((g$T$16747$sFQex) (if g$T$16747$sFQex (g$J$16745$sFQex g$id*$9535$sFQex) (g$syntax-violation$9073$sFQex g$J$16745$sFQex '#f '"not an identifier" g$stx$9531$sFQex g$last$9536$sFQex)))) g$last$9536$sFQex)))) g$last$9536$sFQex))) (case-lambda ((g$V$16743$sFQex) ((case-lambda ((g$C$16741$sFQex g$f$9537$sFQex) ((case-lambda ((g$C$16728$sFQex g$f$16727$sFQex) (begin (set! g$f$9537$sFQex g$f$16727$sFQex) (g$C$16728$sFQex g$f$9537$sFQex)))) g$C$16741$sFQex (case-lambda ((g$C$16729$sFQex g$id*$9538$sFQex) (null? (case-lambda ((g$T$16730$sFQex) (if g$T$16730$sFQex (values g$C$16729$sFQex) (car (case-lambda ((g$V$16731$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$16732$sFQex) (not (case-lambda ((g$T$16733$sFQex) (if g$T$16733$sFQex (car (case-lambda ((g$V$16734$sFQex) (g$syntax-violation$9073$sFQex g$C$16729$sFQex '#f '"not an identifier" g$stx$9531$sFQex g$V$16734$sFQex))) g$id*$9538$sFQex) (cdr (case-lambda ((g$V$16735$sFQex) (g$f$9537$sFQex (case-lambda (g$IGNORE$16736$sFQex (cdr (case-lambda ((g$V$16737$sFQex) (car (case-lambda ((g$V$16738$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$16739$sFQex) (if g$T$16739$sFQex (car (case-lambda ((g$V$16740$sFQex) (g$syntax-violation$9073$sFQex g$C$16729$sFQex '#f '"duplicate binding" g$stx$9531$sFQex g$V$16740$sFQex))) g$id*$9538$sFQex) (void g$C$16729$sFQex)))) g$V$16738$sFQex g$V$16737$sFQex))) g$id*$9538$sFQex))) g$id*$9538$sFQex))) g$V$16735$sFQex))) g$id*$9538$sFQex)))) g$V$16732$sFQex))) g$V$16731$sFQex))) g$id*$9538$sFQex)))) g$id*$9538$sFQex)))))) (case-lambda ((g$V$16744$sFQex) (g$V$16744$sFQex g$C$16742$sFQex g$V$16743$sFQex))) uninitialized)))))) g$ls/false$9534$sFQex) ((case-lambda ((g$C$16750$sFQex g$t$9539$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16751$sFQex) ((case-lambda ((g$C$16749$sFQex g$ls/false$9540$sFQex) (if g$ls/false$9540$sFQex (apply g$C$16749$sFQex (case-lambda ((g$C$16748$sFQex) (g$syntax-violation$9073$sFQex g$C$16748$sFQex '#f '"malformed binding form" g$stx$9531$sFQex g$fmls$9532$sFQex))) g$ls/false$9540$sFQex) (g$syntax-violation$9073$sFQex g$C$16749$sFQex '#f '"invalid syntax" g$t$9539$sFQex)))) g$C$16750$sFQex g$V$16751$sFQex))) g$t$9539$sFQex '_))) g$C$16752$sFQex g$t$9533$sFQex)))) g$C$16753$sFQex g$V$16754$sFQex))) g$t$9533$sFQex '#(each+ any () any)))) g$C$16755$sFQex g$fmls$9532$sFQex)))))) (library-letrec*-identity 'g$invalid-fmls-error$8926$sFQex))) (g$let-macro$8927$sFQex g$let-macro$12446$sFQex ((case-lambda ((g$C$20887$sFQex) (g$C$20887$sFQex (case-lambda ((g$C$16780$sFQex g$stx$9541$sFQex) ((case-lambda ((g$C$16778$sFQex g$t$9542$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16779$sFQex) ((case-lambda ((g$C$16777$sFQex g$ls/false$9543$sFQex) (if g$ls/false$9543$sFQex (apply g$C$16777$sFQex (case-lambda ((g$C$16756$sFQex g$lhs*$9544$sFQex g$rhs*$9545$sFQex g$b$9546$sFQex g$b*$9547$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$16757$sFQex) (if g$T$16757$sFQex (cons (case-lambda ((g$V$16758$sFQex) (cons (case-lambda ((g$V$16759$sFQex) (cons (case-lambda ((g$V$16760$sFQex) (cons (case-lambda ((g$V$16761$sFQex) (g$bless$8924$sFQex g$C$16756$sFQex g$V$16761$sFQex))) g$V$16760$sFQex g$rhs*$9545$sFQex))) 'lambda g$V$16759$sFQex))) g$lhs*$9544$sFQex g$V$16758$sFQex))) g$b$9546$sFQex g$b*$9547$sFQex) (g$invalid-fmls-error$8926$sFQex g$C$16756$sFQex g$stx$9541$sFQex g$lhs*$9544$sFQex)))) g$lhs*$9544$sFQex))) g$ls/false$9543$sFQex) ((case-lambda ((g$C$16775$sFQex g$t$9548$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16776$sFQex) ((case-lambda ((g$C$16772$sFQex g$ls/false$9549$sFQex) ((case-lambda ((g$J$16774$sFQex) (if g$ls/false$9549$sFQex (apply g$J$16774$sFQex (case-lambda ((g$C$16762$sFQex g$f$9550$sFQex g$lhs*$9551$sFQex g$rhs*$9552$sFQex g$b$9553$sFQex g$b*$9554$sFQex) (g$id?$8682$sFQex g$C$16762$sFQex g$f$9550$sFQex))) g$ls/false$9549$sFQex) (g$J$16774$sFQex '#f)))) (case-lambda ((g$T$16773$sFQex) (if g$T$16773$sFQex (apply g$C$16772$sFQex (case-lambda ((g$C$16763$sFQex g$f$9555$sFQex g$lhs*$9556$sFQex g$rhs*$9557$sFQex g$b$9558$sFQex g$b*$9559$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$16764$sFQex) (if g$T$16764$sFQex (cons (case-lambda ((g$V$16765$sFQex) (cons (case-lambda ((g$V$16766$sFQex) (cons (case-lambda ((g$V$16767$sFQex) (list (case-lambda ((g$V$16768$sFQex) (list (case-lambda ((g$V$16769$sFQex) (list (case-lambda ((g$V$16770$sFQex) (cons (case-lambda ((g$V$16771$sFQex) (g$bless$8924$sFQex g$C$16763$sFQex g$V$16771$sFQex))) g$V$16770$sFQex g$rhs*$9557$sFQex))) 'letrec g$V$16769$sFQex g$f$9555$sFQex))) g$V$16768$sFQex))) g$f$9555$sFQex g$V$16767$sFQex))) 'lambda g$V$16766$sFQex))) g$lhs*$9556$sFQex g$V$16765$sFQex))) g$b$9558$sFQex g$b*$9559$sFQex) (g$invalid-fmls-error$8926$sFQex g$C$16763$sFQex g$stx$9541$sFQex g$lhs*$9556$sFQex)))) g$lhs*$9556$sFQex))) g$ls/false$9549$sFQex) (g$syntax-violation$9073$sFQex g$C$16772$sFQex '#f '"invalid syntax" g$t$9548$sFQex))))))) g$C$16775$sFQex g$V$16776$sFQex))) g$t$9548$sFQex '(_ any #(each (any any)) any . each-any)))) g$C$16777$sFQex g$t$9542$sFQex)))) g$C$16778$sFQex g$V$16779$sFQex))) g$t$9542$sFQex '(_ #(each (any any)) any . each-any)))) g$C$16780$sFQex g$stx$9541$sFQex)))))) (library-letrec*-identity 'g$let-macro$8927$sFQex))) (g$let-values-macro$8928$sFQex g$let-values-macro$12447$sFQex ((case-lambda ((g$C$20888$sFQex) (g$C$20888$sFQex (case-lambda ((g$C$16856$sFQex g$stx$9560$sFQex) ((case-lambda ((g$C$16855$sFQex g$rename$9561$sFQex g$rename*$9562$sFQex) (begin (set! g$rename$9561$sFQex (case-lambda ((g$C$16784$sFQex g$x$9612$sFQex g$old*$9613$sFQex g$new*$9614$sFQex) ((case-lambda ((g$J$16791$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$16792$sFQex) (not (case-lambda ((g$T$16793$sFQex) (if g$T$16793$sFQex (g$syntax-violation$9073$sFQex g$J$16791$sFQex '#f '"not an indentifier" g$stx$9560$sFQex g$x$9612$sFQex) (void g$J$16791$sFQex)))) g$V$16792$sFQex))) g$x$9612$sFQex))) (case-lambda (g$IGNORE$16785$sFQex ((case-lambda ((g$J$16789$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$16790$sFQex) (if g$T$16790$sFQex (g$syntax-violation$9073$sFQex g$J$16789$sFQex '#f '"duplicate binding" g$stx$9560$sFQex g$x$9612$sFQex) (void g$J$16789$sFQex)))) g$x$9612$sFQex g$old*$9613$sFQex))) (case-lambda (g$IGNORE$16786$sFQex (g$syntax->datum$9076$sFQex (case-lambda ((g$V$16787$sFQex) (gensym (case-lambda ((g$V$16788$sFQex) ((case-lambda ((g$C$16781$sFQex g$y$9615$sFQex) (cons (case-lambda ((g$V$16782$sFQex) (cons (case-lambda ((g$V$16783$sFQex) (values g$C$16781$sFQex g$y$9615$sFQex g$V$16783$sFQex g$V$16782$sFQex))) g$x$9612$sFQex g$old*$9613$sFQex))) g$y$9615$sFQex g$new*$9614$sFQex))) g$C$16784$sFQex g$V$16788$sFQex))) g$V$16787$sFQex))) g$x$9612$sFQex)))))))))) (begin (set! g$rename*$9562$sFQex (case-lambda ((g$C$16801$sFQex g$x*$9603$sFQex g$old*$9604$sFQex g$new*$9605$sFQex) (null? (case-lambda ((g$T$16802$sFQex) (if g$T$16802$sFQex (values g$C$16801$sFQex '() g$old*$9604$sFQex g$new*$9605$sFQex) (call-with-values g$C$16801$sFQex (case-lambda ((g$C$16794$sFQex) (car (case-lambda ((g$V$16795$sFQex) (g$rename$9561$sFQex g$C$16794$sFQex g$V$16795$sFQex g$old*$9604$sFQex g$new*$9605$sFQex))) g$x*$9603$sFQex))) (case-lambda ((g$C$16800$sFQex g$x$9606$sFQex g$old*$9607$sFQex g$new*$9608$sFQex) (call-with-values g$C$16800$sFQex (case-lambda ((g$C$16796$sFQex) (cdr (case-lambda ((g$V$16797$sFQex) (g$rename*$9562$sFQex g$C$16796$sFQex g$V$16797$sFQex g$old*$9607$sFQex g$new*$9608$sFQex))) g$x*$9603$sFQex))) (case-lambda ((g$C$16798$sFQex g$x*$9609$sFQex g$old*$9610$sFQex g$new*$9611$sFQex) (cons (case-lambda ((g$V$16799$sFQex) (values g$C$16798$sFQex g$V$16799$sFQex g$old*$9610$sFQex g$new*$9611$sFQex))) g$x$9606$sFQex g$x*$9609$sFQex)))))))))) g$x*$9603$sFQex)))) ((case-lambda ((g$C$16853$sFQex g$t$9563$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16854$sFQex) ((case-lambda ((g$C$16852$sFQex g$ls/false$9564$sFQex) (if g$ls/false$9564$sFQex (apply g$C$16852$sFQex (case-lambda ((g$C$16803$sFQex g$b$9565$sFQex g$b*$9566$sFQex) (g$bless$8924$sFQex (case-lambda ((g$V$16804$sFQex) (g$cons*$5682$sFQex g$C$16803$sFQex g$V$16804$sFQex '() g$b$9565$sFQex g$b*$9566$sFQex))) 'let))) g$ls/false$9564$sFQex) ((case-lambda ((g$C$16850$sFQex g$t$9567$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16851$sFQex) ((case-lambda ((g$C$16849$sFQex g$ls/false$9568$sFQex) (if g$ls/false$9568$sFQex (apply g$C$16849$sFQex (case-lambda ((g$C$16846$sFQex g$lhs*$9569$sFQex g$rhs*$9570$sFQex g$b$9571$sFQex g$b*$9572$sFQex) ((case-lambda ((g$C$16845$sFQex g$f$9573$sFQex) ((case-lambda ((g$C$16806$sFQex g$f$16805$sFQex) (begin (set! g$f$9573$sFQex g$f$16805$sFQex) (g$C$16806$sFQex g$f$9573$sFQex)))) g$C$16845$sFQex (case-lambda ((g$C$16839$sFQex g$lhs*$9574$sFQex g$rhs*$9575$sFQex g$old*$9576$sFQex g$new*$9577$sFQex) (null? (case-lambda ((g$T$16840$sFQex) (if g$T$16840$sFQex (cons (case-lambda ((g$V$16841$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16842$sFQex) (cons (case-lambda ((g$V$16843$sFQex) (cons g$C$16839$sFQex 'let g$V$16843$sFQex))) g$V$16842$sFQex g$V$16841$sFQex))) list g$old*$9576$sFQex g$new*$9577$sFQex))) g$b$9571$sFQex g$b*$9572$sFQex) (car (case-lambda ((g$V$16844$sFQex) ((case-lambda ((g$C$16837$sFQex g$t$9578$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16838$sFQex) ((case-lambda ((g$C$16836$sFQex g$ls/false$9579$sFQex) (if g$ls/false$9579$sFQex (apply g$C$16836$sFQex (case-lambda ((g$C$16816$sFQex g$x*$9580$sFQex) (call-with-values g$C$16816$sFQex (case-lambda ((g$C$16807$sFQex) (g$rename*$9562$sFQex g$C$16807$sFQex g$x*$9580$sFQex g$old*$9576$sFQex g$new*$9577$sFQex))) (case-lambda ((g$C$16815$sFQex g$y*$9584$sFQex g$old*$9585$sFQex g$new*$9586$sFQex) ((case-lambda ((g$C$16808$sFQex g$new*$9587$sFQex g$old*$9588$sFQex g$y*$9589$sFQex) (cdr (case-lambda ((g$V$16809$sFQex) (cdr (case-lambda ((g$V$16810$sFQex) (g$f$9573$sFQex (case-lambda ((g$V$16811$sFQex) (list (case-lambda ((g$V$16812$sFQex) (car (case-lambda ((g$V$16813$sFQex) (list (case-lambda ((g$V$16814$sFQex) (list g$C$16808$sFQex 'call-with-values g$V$16814$sFQex g$V$16812$sFQex))) 'lambda '() g$V$16813$sFQex))) g$rhs*$9575$sFQex))) 'lambda g$y*$9589$sFQex g$V$16811$sFQex))) g$V$16810$sFQex g$V$16809$sFQex g$old*$9588$sFQex g$new*$9587$sFQex))) g$lhs*$9574$sFQex))) g$rhs*$9575$sFQex))) g$C$16815$sFQex g$new*$9586$sFQex g$old*$9585$sFQex g$y*$9584$sFQex)))))) g$ls/false$9579$sFQex) ((case-lambda ((g$C$16834$sFQex g$t$9590$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16835$sFQex) ((case-lambda ((g$C$16833$sFQex g$ls/false$9591$sFQex) (if g$ls/false$9591$sFQex (apply g$C$16833$sFQex (case-lambda ((g$C$16828$sFQex g$x*$9592$sFQex g$x$9593$sFQex) (call-with-values g$C$16828$sFQex (case-lambda ((g$C$16817$sFQex) (g$rename$9561$sFQex g$C$16817$sFQex g$x$9593$sFQex g$old*$9576$sFQex g$new*$9577$sFQex))) (case-lambda ((g$C$16827$sFQex g$y$9594$sFQex g$old*$9595$sFQex g$new*$9596$sFQex) (call-with-values g$C$16827$sFQex (case-lambda ((g$C$16818$sFQex) (g$rename*$9562$sFQex g$C$16818$sFQex g$x*$9592$sFQex g$old*$9595$sFQex g$new*$9596$sFQex))) (case-lambda ((g$C$16819$sFQex g$y*$9597$sFQex g$old*$9598$sFQex g$new*$9599$sFQex) (cdr (case-lambda ((g$V$16820$sFQex) (cdr (case-lambda ((g$V$16821$sFQex) (g$f$9573$sFQex (case-lambda ((g$V$16822$sFQex) (append (case-lambda ((g$V$16823$sFQex) (list (case-lambda ((g$V$16824$sFQex) (car (case-lambda ((g$V$16825$sFQex) (list (case-lambda ((g$V$16826$sFQex) (list g$C$16819$sFQex 'call-with-values g$V$16826$sFQex g$V$16824$sFQex))) 'lambda '() g$V$16825$sFQex))) g$rhs*$9575$sFQex))) 'lambda g$V$16823$sFQex g$V$16822$sFQex))) g$y*$9597$sFQex g$y$9594$sFQex))) g$V$16821$sFQex g$V$16820$sFQex g$old*$9598$sFQex g$new*$9599$sFQex))) g$lhs*$9574$sFQex))) g$rhs*$9575$sFQex))))))))) g$ls/false$9591$sFQex) ((case-lambda ((g$C$16831$sFQex g$t$9600$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16832$sFQex) ((case-lambda ((g$C$16830$sFQex g$ls/false$9601$sFQex) (if g$ls/false$9601$sFQex (apply g$C$16830$sFQex (case-lambda ((g$C$16829$sFQex g$others$9602$sFQex) (g$syntax-violation$9073$sFQex g$C$16829$sFQex '#f '"malformed bindings" g$stx$9560$sFQex g$others$9602$sFQex))) g$ls/false$9601$sFQex) (g$syntax-violation$9073$sFQex g$C$16830$sFQex '#f '"invalid syntax" g$t$9600$sFQex)))) g$C$16831$sFQex g$V$16832$sFQex))) g$t$9600$sFQex 'any))) g$C$16833$sFQex g$t$9590$sFQex)))) g$C$16834$sFQex g$V$16835$sFQex))) g$t$9590$sFQex '#(each+ any () any)))) g$C$16836$sFQex g$t$9578$sFQex)))) g$C$16837$sFQex g$V$16838$sFQex))) g$t$9578$sFQex 'each-any))) g$C$16839$sFQex g$V$16844$sFQex))) g$lhs*$9574$sFQex)))) g$lhs*$9574$sFQex)))))) (case-lambda ((g$V$16847$sFQex) (g$V$16847$sFQex (case-lambda ((g$V$16848$sFQex) (g$bless$8924$sFQex g$C$16846$sFQex g$V$16848$sFQex))) g$lhs*$9569$sFQex g$rhs*$9570$sFQex '() '()))) uninitialized))) g$ls/false$9568$sFQex) (g$syntax-violation$9073$sFQex g$C$16849$sFQex '#f '"invalid syntax" g$t$9567$sFQex)))) g$C$16850$sFQex g$V$16851$sFQex))) g$t$9567$sFQex '(_ #(each (any any)) any . each-any)))) g$C$16852$sFQex g$t$9563$sFQex)))) g$C$16853$sFQex g$V$16854$sFQex))) g$t$9563$sFQex '(_ () any . each-any)))) g$C$16855$sFQex g$stx$9560$sFQex))))) g$C$16856$sFQex uninitialized uninitialized)))))) (library-letrec*-identity 'g$let-values-macro$8928$sFQex))) (g$let*-values-macro$8929$sFQex g$let*-values-macro$12448$sFQex ((case-lambda ((g$C$20889$sFQex) (g$C$20889$sFQex (case-lambda ((g$C$16917$sFQex g$stx$9616$sFQex) ((case-lambda ((g$C$16916$sFQex g$check$9617$sFQex) (begin (set! g$check$9617$sFQex (case-lambda ((g$C$16866$sFQex g$x*$9641$sFQex) (null? (case-lambda ((g$V$16867$sFQex) (not (case-lambda ((g$T$16868$sFQex) (if g$T$16868$sFQex (car (case-lambda ((g$V$16869$sFQex) ((case-lambda ((g$C$16857$sFQex g$x$9642$sFQex) ((case-lambda ((g$J$16863$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$16864$sFQex) (not (case-lambda ((g$T$16865$sFQex) (if g$T$16865$sFQex (g$syntax-violation$9073$sFQex g$J$16863$sFQex '#f '"not an identifier" g$stx$9616$sFQex g$x$9642$sFQex) (void g$J$16863$sFQex)))) g$V$16864$sFQex))) g$x$9642$sFQex))) (case-lambda (g$IGNORE$16858$sFQex (cdr (case-lambda ((g$V$16859$sFQex) (g$check$9617$sFQex (case-lambda (g$IGNORE$16860$sFQex (cdr (case-lambda ((g$V$16861$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$16862$sFQex) (if g$T$16862$sFQex (g$syntax-violation$9073$sFQex g$C$16857$sFQex '#f '"duplicate identifier" g$stx$9616$sFQex g$x$9642$sFQex) (void g$C$16857$sFQex)))) g$x$9642$sFQex g$V$16861$sFQex))) g$x*$9641$sFQex))) g$V$16859$sFQex))) g$x*$9641$sFQex)))))) g$C$16866$sFQex g$V$16869$sFQex))) g$x*$9641$sFQex) (void g$C$16866$sFQex)))) g$V$16867$sFQex))) g$x*$9641$sFQex)))) ((case-lambda ((g$C$16914$sFQex g$t$9618$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16915$sFQex) ((case-lambda ((g$C$16913$sFQex g$ls/false$9619$sFQex) (if g$ls/false$9619$sFQex (apply g$C$16913$sFQex (case-lambda ((g$C$16870$sFQex g$b$9620$sFQex g$b*$9621$sFQex) (g$bless$8924$sFQex (case-lambda ((g$V$16871$sFQex) (g$cons*$5682$sFQex g$C$16870$sFQex g$V$16871$sFQex '() g$b$9620$sFQex g$b*$9621$sFQex))) 'let))) g$ls/false$9619$sFQex) ((case-lambda ((g$C$16911$sFQex g$t$9622$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16912$sFQex) ((case-lambda ((g$C$16910$sFQex g$ls/false$9623$sFQex) (if g$ls/false$9623$sFQex (apply g$C$16910$sFQex (case-lambda ((g$C$16907$sFQex g$lhs*$9624$sFQex g$rhs*$9625$sFQex g$b$9626$sFQex g$b*$9627$sFQex) ((case-lambda ((g$C$16906$sFQex g$f$9628$sFQex) ((case-lambda ((g$C$16873$sFQex g$f$16872$sFQex) (begin (set! g$f$9628$sFQex g$f$16872$sFQex) (g$C$16873$sFQex g$f$9628$sFQex)))) g$C$16906$sFQex (case-lambda ((g$C$16902$sFQex g$lhs*$9629$sFQex g$rhs*$9630$sFQex) (null? (case-lambda ((g$T$16903$sFQex) (if g$T$16903$sFQex (cons (case-lambda ((g$V$16904$sFQex) (cons g$C$16902$sFQex 'begin g$V$16904$sFQex))) g$b$9626$sFQex g$b*$9627$sFQex) (car (case-lambda ((g$V$16905$sFQex) ((case-lambda ((g$C$16900$sFQex g$t$9631$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16901$sFQex) ((case-lambda ((g$C$16899$sFQex g$ls/false$9632$sFQex) (if g$ls/false$9632$sFQex (apply g$C$16899$sFQex (case-lambda ((g$C$16874$sFQex g$x*$9633$sFQex) (g$check$9617$sFQex (case-lambda (g$IGNORE$16875$sFQex (cdr (case-lambda ((g$V$16876$sFQex) (cdr (case-lambda ((g$V$16877$sFQex) (g$f$9628$sFQex (case-lambda ((g$V$16878$sFQex) (list (case-lambda ((g$V$16879$sFQex) (car (case-lambda ((g$V$16880$sFQex) (list (case-lambda ((g$V$16881$sFQex) (list g$C$16874$sFQex 'call-with-values g$V$16881$sFQex g$V$16879$sFQex))) 'lambda '() g$V$16880$sFQex))) g$rhs*$9630$sFQex))) 'lambda g$x*$9633$sFQex g$V$16878$sFQex))) g$V$16877$sFQex g$V$16876$sFQex))) g$lhs*$9629$sFQex))) g$rhs*$9630$sFQex))) g$x*$9633$sFQex))) g$ls/false$9632$sFQex) ((case-lambda ((g$C$16897$sFQex g$t$9634$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16898$sFQex) ((case-lambda ((g$C$16896$sFQex g$ls/false$9635$sFQex) (if g$ls/false$9635$sFQex (apply g$C$16896$sFQex (case-lambda ((g$C$16882$sFQex g$x*$9636$sFQex g$x$9637$sFQex) (cons (case-lambda ((g$V$16883$sFQex) (g$check$9617$sFQex (case-lambda (g$IGNORE$16884$sFQex (cdr (case-lambda ((g$V$16885$sFQex) (cdr (case-lambda ((g$V$16886$sFQex) (g$f$9628$sFQex (case-lambda ((g$V$16887$sFQex) (append (case-lambda ((g$V$16888$sFQex) (list (case-lambda ((g$V$16889$sFQex) (car (case-lambda ((g$V$16890$sFQex) (list (case-lambda ((g$V$16891$sFQex) (list g$C$16882$sFQex 'call-with-values g$V$16891$sFQex g$V$16889$sFQex))) 'lambda '() g$V$16890$sFQex))) g$rhs*$9630$sFQex))) 'lambda g$V$16888$sFQex g$V$16887$sFQex))) g$x*$9636$sFQex g$x$9637$sFQex))) g$V$16886$sFQex g$V$16885$sFQex))) g$lhs*$9629$sFQex))) g$rhs*$9630$sFQex))) g$V$16883$sFQex))) g$x$9637$sFQex g$x*$9636$sFQex))) g$ls/false$9635$sFQex) ((case-lambda ((g$C$16894$sFQex g$t$9638$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16895$sFQex) ((case-lambda ((g$C$16893$sFQex g$ls/false$9639$sFQex) (if g$ls/false$9639$sFQex (apply g$C$16893$sFQex (case-lambda ((g$C$16892$sFQex g$others$9640$sFQex) (g$syntax-violation$9073$sFQex g$C$16892$sFQex '#f '"malformed bindings" g$stx$9616$sFQex g$others$9640$sFQex))) g$ls/false$9639$sFQex) (g$syntax-violation$9073$sFQex g$C$16893$sFQex '#f '"invalid syntax" g$t$9638$sFQex)))) g$C$16894$sFQex g$V$16895$sFQex))) g$t$9638$sFQex 'any))) g$C$16896$sFQex g$t$9634$sFQex)))) g$C$16897$sFQex g$V$16898$sFQex))) g$t$9634$sFQex '#(each+ any () any)))) g$C$16899$sFQex g$t$9631$sFQex)))) g$C$16900$sFQex g$V$16901$sFQex))) g$t$9631$sFQex 'each-any))) g$C$16902$sFQex g$V$16905$sFQex))) g$lhs*$9629$sFQex)))) g$lhs*$9629$sFQex)))))) (case-lambda ((g$V$16908$sFQex) (g$V$16908$sFQex (case-lambda ((g$V$16909$sFQex) (g$bless$8924$sFQex g$C$16907$sFQex g$V$16909$sFQex))) g$lhs*$9624$sFQex g$rhs*$9625$sFQex))) uninitialized))) g$ls/false$9623$sFQex) (g$syntax-violation$9073$sFQex g$C$16910$sFQex '#f '"invalid syntax" g$t$9622$sFQex)))) g$C$16911$sFQex g$V$16912$sFQex))) g$t$9622$sFQex '(_ #(each (any any)) any . each-any)))) g$C$16913$sFQex g$t$9618$sFQex)))) g$C$16914$sFQex g$V$16915$sFQex))) g$t$9618$sFQex '(_ () any . each-any)))) g$C$16916$sFQex g$stx$9616$sFQex)))) g$C$16917$sFQex uninitialized)))))) (library-letrec*-identity 'g$let*-values-macro$8929$sFQex))) (g$trace-lambda-macro$8930$sFQex g$trace-lambda-macro$12449$sFQex ((case-lambda ((g$C$20890$sFQex) (g$C$20890$sFQex (case-lambda ((g$C$16941$sFQex g$stx$9643$sFQex) ((case-lambda ((g$C$16939$sFQex g$t$9644$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16940$sFQex) ((case-lambda ((g$C$16938$sFQex g$ls/false$9645$sFQex) (if g$ls/false$9645$sFQex (apply g$C$16938$sFQex (case-lambda ((g$C$16918$sFQex g$who$9646$sFQex g$fmls$9647$sFQex g$b$9648$sFQex g$b*$9649$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$16919$sFQex) (if g$T$16919$sFQex (cons (case-lambda ((g$V$16920$sFQex) (cons (case-lambda ((g$V$16921$sFQex) (cons (case-lambda ((g$V$16922$sFQex) (list (case-lambda ((g$V$16923$sFQex) (list (case-lambda ((g$V$16924$sFQex) (g$bless$8924$sFQex g$C$16918$sFQex g$V$16924$sFQex))) 'make-traced-procedure g$V$16923$sFQex g$V$16922$sFQex))) 'quote g$who$9646$sFQex))) 'lambda g$V$16921$sFQex))) g$fmls$9647$sFQex g$V$16920$sFQex))) g$b$9648$sFQex g$b*$9649$sFQex) (g$invalid-fmls-error$8926$sFQex g$C$16918$sFQex g$stx$9643$sFQex g$fmls$9647$sFQex)))) g$fmls$9647$sFQex))) g$ls/false$9645$sFQex) ((case-lambda ((g$C$16936$sFQex g$t$9650$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16937$sFQex) ((case-lambda ((g$C$16935$sFQex g$ls/false$9651$sFQex) (if g$ls/false$9651$sFQex (apply g$C$16935$sFQex (case-lambda ((g$C$16925$sFQex g$who$9652$sFQex g$fmls$9653$sFQex g$last$9654$sFQex g$b$9655$sFQex g$b*$9656$sFQex) (cons (case-lambda ((g$V$16926$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$16927$sFQex) (if g$T$16927$sFQex (cons (case-lambda ((g$V$16928$sFQex) (append (case-lambda ((g$V$16929$sFQex) (cons (case-lambda ((g$V$16930$sFQex) (cons (case-lambda ((g$V$16931$sFQex) (list (case-lambda ((g$V$16932$sFQex) (list (case-lambda ((g$V$16933$sFQex) (g$bless$8924$sFQex g$C$16925$sFQex g$V$16933$sFQex))) 'make-traced-procedure g$V$16932$sFQex g$V$16931$sFQex))) 'quote g$who$9652$sFQex))) 'lambda g$V$16930$sFQex))) g$V$16929$sFQex g$V$16928$sFQex))) g$fmls$9653$sFQex g$last$9654$sFQex))) g$b$9655$sFQex g$b*$9656$sFQex) (append (case-lambda ((g$V$16934$sFQex) (g$invalid-fmls-error$8926$sFQex g$C$16925$sFQex g$stx$9643$sFQex g$V$16934$sFQex))) g$fmls$9653$sFQex g$last$9654$sFQex)))) g$V$16926$sFQex))) g$last$9654$sFQex g$fmls$9653$sFQex))) g$ls/false$9651$sFQex) (g$syntax-violation$9073$sFQex g$C$16935$sFQex '#f '"invalid syntax" g$t$9650$sFQex)))) g$C$16936$sFQex g$V$16937$sFQex))) g$t$9650$sFQex '(_ any #(each+ any () any) any . each-any)))) g$C$16938$sFQex g$t$9644$sFQex)))) g$C$16939$sFQex g$V$16940$sFQex))) g$t$9644$sFQex '(_ any each-any any . each-any)))) g$C$16941$sFQex g$stx$9643$sFQex)))))) (library-letrec*-identity 'g$trace-lambda-macro$8930$sFQex))) (g$trace-define-macro$8931$sFQex g$trace-define-macro$12450$sFQex ((case-lambda ((g$C$20891$sFQex) (g$C$20891$sFQex (case-lambda ((g$C$16982$sFQex g$stx$9657$sFQex) ((case-lambda ((g$C$16980$sFQex g$t$9658$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16981$sFQex) ((case-lambda ((g$C$16979$sFQex g$ls/false$9659$sFQex) (if g$ls/false$9659$sFQex (apply g$C$16979$sFQex (case-lambda ((g$C$16942$sFQex g$who$9660$sFQex g$fmls$9661$sFQex g$b$9662$sFQex g$b*$9663$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$16943$sFQex) (if g$T$16943$sFQex (cons (case-lambda ((g$V$16944$sFQex) (cons (case-lambda ((g$V$16945$sFQex) (cons (case-lambda ((g$V$16946$sFQex) (list (case-lambda ((g$V$16947$sFQex) (list (case-lambda ((g$V$16948$sFQex) (list (case-lambda ((g$V$16949$sFQex) (g$bless$8924$sFQex g$C$16942$sFQex g$V$16949$sFQex))) 'define g$who$9660$sFQex g$V$16948$sFQex))) 'make-traced-procedure g$V$16947$sFQex g$V$16946$sFQex))) 'quote g$who$9660$sFQex))) 'lambda g$V$16945$sFQex))) g$fmls$9661$sFQex g$V$16944$sFQex))) g$b$9662$sFQex g$b*$9663$sFQex) (g$invalid-fmls-error$8926$sFQex g$C$16942$sFQex g$stx$9657$sFQex g$fmls$9661$sFQex)))) g$fmls$9661$sFQex))) g$ls/false$9659$sFQex) ((case-lambda ((g$C$16977$sFQex g$t$9664$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16978$sFQex) ((case-lambda ((g$C$16976$sFQex g$ls/false$9665$sFQex) (if g$ls/false$9665$sFQex (apply g$C$16976$sFQex (case-lambda ((g$C$16950$sFQex g$who$9666$sFQex g$fmls$9667$sFQex g$last$9668$sFQex g$b$9669$sFQex g$b*$9670$sFQex) (cons (case-lambda ((g$V$16951$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$16952$sFQex) (if g$T$16952$sFQex (cons (case-lambda ((g$V$16953$sFQex) (append (case-lambda ((g$V$16954$sFQex) (cons (case-lambda ((g$V$16955$sFQex) (cons (case-lambda ((g$V$16956$sFQex) (list (case-lambda ((g$V$16957$sFQex) (list (case-lambda ((g$V$16958$sFQex) (list (case-lambda ((g$V$16959$sFQex) (g$bless$8924$sFQex g$C$16950$sFQex g$V$16959$sFQex))) 'define g$who$9666$sFQex g$V$16958$sFQex))) 'make-traced-procedure g$V$16957$sFQex g$V$16956$sFQex))) 'quote g$who$9666$sFQex))) 'lambda g$V$16955$sFQex))) g$V$16954$sFQex g$V$16953$sFQex))) g$fmls$9667$sFQex g$last$9668$sFQex))) g$b$9669$sFQex g$b*$9670$sFQex) (append (case-lambda ((g$V$16960$sFQex) (g$invalid-fmls-error$8926$sFQex g$C$16950$sFQex g$stx$9657$sFQex g$V$16960$sFQex))) g$fmls$9667$sFQex g$last$9668$sFQex)))) g$V$16951$sFQex))) g$last$9668$sFQex g$fmls$9667$sFQex))) g$ls/false$9665$sFQex) ((case-lambda ((g$C$16974$sFQex g$t$9671$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16975$sFQex) ((case-lambda ((g$C$16973$sFQex g$ls/false$9672$sFQex) (if g$ls/false$9672$sFQex (apply g$C$16973$sFQex (case-lambda ((g$C$16961$sFQex g$who$9673$sFQex g$expr$9674$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$16962$sFQex) (if g$T$16962$sFQex (list (case-lambda ((g$V$16963$sFQex) (cons (case-lambda ((g$V$16964$sFQex) (cons (case-lambda ((g$V$16965$sFQex) (cons (case-lambda ((g$V$16966$sFQex) (cons (case-lambda ((g$V$16967$sFQex) (cons (case-lambda ((g$V$16968$sFQex) (list (case-lambda ((g$V$16969$sFQex) (list (case-lambda ((g$V$16970$sFQex) (list (case-lambda ((g$V$16971$sFQex) (list (case-lambda ((g$V$16972$sFQex) (g$bless$8924$sFQex g$C$16961$sFQex g$V$16972$sFQex))) 'define g$who$9673$sFQex g$V$16971$sFQex))) 'let g$V$16970$sFQex g$V$16968$sFQex))) g$V$16969$sFQex))) 'v g$expr$9674$sFQex))) 'if g$V$16967$sFQex))) '(procedure? v) g$V$16966$sFQex))) g$V$16965$sFQex '((assertion-violation 'trace-define "not a procedure" v))))) 'make-traced-procedure g$V$16964$sFQex))) g$V$16963$sFQex '(v)))) 'quote g$who$9673$sFQex) (g$syntax-violation$9073$sFQex g$C$16961$sFQex '#f '"invalid name" g$stx$9657$sFQex)))) g$who$9673$sFQex))) g$ls/false$9672$sFQex) (g$syntax-violation$9073$sFQex g$C$16973$sFQex '#f '"invalid syntax" g$t$9671$sFQex)))) g$C$16974$sFQex g$V$16975$sFQex))) g$t$9671$sFQex '(_ any any)))) g$C$16976$sFQex g$t$9664$sFQex)))) g$C$16977$sFQex g$V$16978$sFQex))) g$t$9664$sFQex '(_ (any . #(each+ any () any)) any . each-any)))) g$C$16979$sFQex g$t$9658$sFQex)))) g$C$16980$sFQex g$V$16981$sFQex))) g$t$9658$sFQex '(_ (any . each-any) any . each-any)))) g$C$16982$sFQex g$stx$9657$sFQex)))))) (library-letrec*-identity 'g$trace-define-macro$8931$sFQex))) (g$trace-define-syntax-macro$8932$sFQex g$trace-define-syntax-macro$12451$sFQex ((case-lambda ((g$C$20892$sFQex) (g$C$20892$sFQex (case-lambda ((g$C$16991$sFQex g$stx$9675$sFQex) ((case-lambda ((g$C$16989$sFQex g$t$9676$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$16990$sFQex) ((case-lambda ((g$C$16988$sFQex g$ls/false$9677$sFQex) (if g$ls/false$9677$sFQex (apply g$C$16988$sFQex (case-lambda ((g$C$16983$sFQex g$who$9678$sFQex g$expr$9679$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$16984$sFQex) (if g$T$16984$sFQex (list (case-lambda ((g$V$16985$sFQex) (list (case-lambda ((g$V$16986$sFQex) (list (case-lambda ((g$V$16987$sFQex) (g$bless$8924$sFQex g$C$16983$sFQex g$V$16987$sFQex))) 'define-syntax g$who$9678$sFQex g$V$16986$sFQex))) 'make-traced-macro g$V$16985$sFQex g$expr$9679$sFQex))) 'quote g$who$9678$sFQex) (g$syntax-violation$9073$sFQex g$C$16983$sFQex '#f '"invalid name" g$stx$9675$sFQex)))) g$who$9678$sFQex))) g$ls/false$9677$sFQex) (g$syntax-violation$9073$sFQex g$C$16988$sFQex '#f '"invalid syntax" g$t$9676$sFQex)))) g$C$16989$sFQex g$V$16990$sFQex))) g$t$9676$sFQex '(_ any any)))) g$C$16991$sFQex g$stx$9675$sFQex)))))) (library-letrec*-identity 'g$trace-define-syntax-macro$8932$sFQex))) (g$trace-let/rec-syntax$8933$sFQex g$trace-let/rec-syntax$12452$sFQex ((case-lambda ((g$C$20893$sFQex) (g$C$20893$sFQex (case-lambda ((g$C$17006$sFQex g$who$9680$sFQex) (g$C$17006$sFQex (case-lambda ((g$C$17005$sFQex g$stx$9681$sFQex) ((case-lambda ((g$C$17003$sFQex g$t$9682$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17004$sFQex) ((case-lambda ((g$C$17002$sFQex g$ls/false$9683$sFQex) (if g$ls/false$9683$sFQex (apply g$C$17002$sFQex (case-lambda ((g$C$16999$sFQex g$lhs*$9684$sFQex g$rhs*$9685$sFQex g$b$9686$sFQex g$b*$9687$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$17000$sFQex) (if g$T$17000$sFQex (g$map$5680$sFQex (case-lambda ((g$V$17001$sFQex) ((case-lambda ((g$C$16992$sFQex g$rhs*$9688$sFQex) (cons (case-lambda ((g$V$16993$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$16994$sFQex) (cons (case-lambda ((g$V$16995$sFQex) (cons (case-lambda ((g$V$16996$sFQex) (g$bless$8924$sFQex g$C$16992$sFQex g$V$16996$sFQex))) g$who$9680$sFQex g$V$16995$sFQex))) g$V$16994$sFQex g$V$16993$sFQex))) list g$lhs*$9684$sFQex g$rhs*$9688$sFQex))) g$b$9686$sFQex g$b*$9687$sFQex))) g$C$16999$sFQex g$V$17001$sFQex))) (case-lambda ((g$C$16997$sFQex g$lhs$9689$sFQex g$rhs$9690$sFQex) (list (case-lambda ((g$V$16998$sFQex) (list g$C$16997$sFQex 'make-traced-macro g$V$16998$sFQex g$rhs$9690$sFQex))) 'quote g$lhs$9689$sFQex))) g$lhs*$9684$sFQex g$rhs*$9685$sFQex) (g$invalid-fmls-error$8926$sFQex g$C$16999$sFQex g$stx$9681$sFQex g$lhs*$9684$sFQex)))) g$lhs*$9684$sFQex))) g$ls/false$9683$sFQex) (g$syntax-violation$9073$sFQex g$C$17002$sFQex '#f '"invalid syntax" g$t$9682$sFQex)))) g$C$17003$sFQex g$V$17004$sFQex))) g$t$9682$sFQex '(_ #(each (any any)) any . each-any)))) g$C$17005$sFQex g$stx$9681$sFQex))))))))) (library-letrec*-identity 'g$trace-let/rec-syntax$8933$sFQex))) (g$trace-let-syntax-macro$8934$sFQex g$trace-let-syntax-macro$12453$sFQex ((case-lambda ((g$C$20894$sFQex) (g$trace-let/rec-syntax$8933$sFQex g$C$20894$sFQex 'let-syntax))) (library-letrec*-identity 'g$trace-let-syntax-macro$8934$sFQex))) (g$trace-letrec-syntax-macro$8935$sFQex g$trace-letrec-syntax-macro$12454$sFQex ((case-lambda ((g$C$20895$sFQex) (g$trace-let/rec-syntax$8933$sFQex g$C$20895$sFQex 'letrec-syntax))) (library-letrec*-identity 'g$trace-letrec-syntax-macro$8935$sFQex))) (g$guard-macro$8936$sFQex g$guard-macro$12455$sFQex ((case-lambda ((g$C$20896$sFQex) (g$C$20896$sFQex (case-lambda ((g$C$17099$sFQex g$x$9691$sFQex) ((case-lambda ((g$C$17098$sFQex g$gen-clauses$9692$sFQex) (begin (set! g$gen-clauses$9692$sFQex (case-lambda ((g$C$17075$sFQex g$con$9704$sFQex g$outerk$9705$sFQex g$clause*$9706$sFQex) ((case-lambda ((g$C$17074$sFQex g$f$9707$sFQex g$f*$9708$sFQex) (begin (set! g$f$9707$sFQex (case-lambda ((g$C$17036$sFQex g$x$9736$sFQex g$k$9737$sFQex) ((case-lambda ((g$C$17034$sFQex g$t$9738$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17035$sFQex) ((case-lambda ((g$C$17033$sFQex g$ls/false$9739$sFQex) (if g$ls/false$9739$sFQex (apply g$C$17033$sFQex (case-lambda ((g$C$17012$sFQex g$e$9740$sFQex g$p$9741$sFQex) (gensym (case-lambda ((g$V$17013$sFQex) ((case-lambda ((g$C$17007$sFQex g$t$9742$sFQex) (list (case-lambda ((g$V$17008$sFQex) (list (case-lambda ((g$V$17009$sFQex) (list (case-lambda ((g$V$17010$sFQex) (list (case-lambda ((g$V$17011$sFQex) (list g$C$17007$sFQex 'let g$V$17011$sFQex g$V$17009$sFQex))) g$V$17010$sFQex))) g$t$9742$sFQex g$e$9740$sFQex))) 'if g$t$9742$sFQex g$V$17008$sFQex g$k$9737$sFQex))) g$p$9741$sFQex g$t$9742$sFQex))) g$C$17012$sFQex g$V$17013$sFQex)))))) g$ls/false$9739$sFQex) ((case-lambda ((g$C$17031$sFQex g$t$9743$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17032$sFQex) ((case-lambda ((g$C$17030$sFQex g$ls/false$9744$sFQex) (if g$ls/false$9744$sFQex (apply g$C$17030$sFQex (case-lambda ((g$C$17018$sFQex g$e$9745$sFQex) (gensym (case-lambda ((g$V$17019$sFQex) ((case-lambda ((g$C$17014$sFQex g$t$9746$sFQex) (list (case-lambda ((g$V$17015$sFQex) (list (case-lambda ((g$V$17016$sFQex) (list (case-lambda ((g$V$17017$sFQex) (list g$C$17014$sFQex 'let g$V$17017$sFQex g$V$17015$sFQex))) g$V$17016$sFQex))) g$t$9746$sFQex g$e$9745$sFQex))) 'if g$t$9746$sFQex g$t$9746$sFQex g$k$9737$sFQex))) g$C$17018$sFQex g$V$17019$sFQex)))))) g$ls/false$9744$sFQex) ((case-lambda ((g$C$17028$sFQex g$t$9747$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17029$sFQex) ((case-lambda ((g$C$17027$sFQex g$ls/false$9748$sFQex) (if g$ls/false$9748$sFQex (apply g$C$17027$sFQex (case-lambda ((g$C$17020$sFQex g$e$9749$sFQex g$v$9750$sFQex g$v*$9751$sFQex) (cons (case-lambda ((g$V$17021$sFQex) (cons (case-lambda ((g$V$17022$sFQex) (list g$C$17020$sFQex 'if g$e$9749$sFQex g$V$17022$sFQex g$k$9737$sFQex))) 'begin g$V$17021$sFQex))) g$v$9750$sFQex g$v*$9751$sFQex))) g$ls/false$9748$sFQex) ((case-lambda ((g$C$17025$sFQex g$t$9752$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17026$sFQex) ((case-lambda ((g$C$17024$sFQex g$ls/false$9753$sFQex) (if g$ls/false$9753$sFQex (apply g$C$17024$sFQex (case-lambda ((g$C$17023$sFQex) (g$syntax-violation$9073$sFQex g$C$17023$sFQex '#f '"invalid guard clause" g$x$9736$sFQex))) g$ls/false$9753$sFQex) (g$syntax-violation$9073$sFQex g$C$17024$sFQex '#f '"invalid syntax" g$t$9752$sFQex)))) g$C$17025$sFQex g$V$17026$sFQex))) g$t$9752$sFQex '_))) g$C$17027$sFQex g$t$9747$sFQex)))) g$C$17028$sFQex g$V$17029$sFQex))) g$t$9747$sFQex '(any any . each-any)))) g$C$17030$sFQex g$t$9743$sFQex)))) g$C$17031$sFQex g$V$17032$sFQex))) g$t$9743$sFQex '(any)))) g$C$17033$sFQex g$t$9738$sFQex)))) g$C$17034$sFQex g$V$17035$sFQex))) g$t$9738$sFQex '(any #(scheme-id =>) any)))) g$C$17036$sFQex g$x$9736$sFQex)))) (begin (set! g$f*$9708$sFQex (case-lambda ((g$C$17064$sFQex g$x*$9715$sFQex) ((case-lambda ((g$C$17062$sFQex g$t$9716$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17063$sFQex) ((case-lambda ((g$C$17061$sFQex g$ls/false$9717$sFQex) (if g$ls/false$9717$sFQex (apply g$C$17061$sFQex (case-lambda ((g$C$17041$sFQex) (gensym (case-lambda ((g$V$17042$sFQex) ((case-lambda ((g$C$17037$sFQex g$g$9718$sFQex) (list (case-lambda ((g$V$17038$sFQex) (list (case-lambda ((g$V$17039$sFQex) (list (case-lambda ((g$V$17040$sFQex) (values g$C$17037$sFQex g$V$17040$sFQex g$g$9718$sFQex))) g$g$9718$sFQex g$V$17039$sFQex))) 'lambda '() g$V$17038$sFQex))) 'raise-continuable g$con$9704$sFQex))) g$C$17041$sFQex g$V$17042$sFQex)))))) g$ls/false$9717$sFQex) ((case-lambda ((g$C$17059$sFQex g$t$9719$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17060$sFQex) ((case-lambda ((g$C$17058$sFQex g$ls/false$9720$sFQex) (if g$ls/false$9720$sFQex (apply g$C$17058$sFQex (case-lambda ((g$C$17043$sFQex g$e$9721$sFQex g$e*$9722$sFQex) (cons (case-lambda ((g$V$17044$sFQex) (cons (case-lambda ((g$V$17045$sFQex) (values g$C$17043$sFQex g$V$17045$sFQex '#f))) 'begin g$V$17044$sFQex))) g$e$9721$sFQex g$e*$9722$sFQex))) g$ls/false$9720$sFQex) ((case-lambda ((g$C$17056$sFQex g$t$9723$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17057$sFQex) ((case-lambda ((g$C$17055$sFQex g$ls/false$9724$sFQex) (if g$ls/false$9724$sFQex (apply g$C$17055$sFQex (case-lambda ((g$C$17050$sFQex g$cls$9725$sFQex g$cls*$9726$sFQex) (call-with-values g$C$17050$sFQex (case-lambda ((g$C$17046$sFQex) (g$f*$9708$sFQex g$C$17046$sFQex g$cls*$9726$sFQex))) (case-lambda ((g$C$17049$sFQex g$e$9729$sFQex g$g$9730$sFQex) ((case-lambda ((g$C$17047$sFQex g$g$9731$sFQex g$e$9732$sFQex) (g$f$9707$sFQex (case-lambda ((g$V$17048$sFQex) (values g$C$17047$sFQex g$V$17048$sFQex g$g$9731$sFQex))) g$cls$9725$sFQex g$e$9732$sFQex))) g$C$17049$sFQex g$g$9730$sFQex g$e$9729$sFQex)))))) g$ls/false$9724$sFQex) ((case-lambda ((g$C$17053$sFQex g$t$9733$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17054$sFQex) ((case-lambda ((g$C$17052$sFQex g$ls/false$9734$sFQex) (if g$ls/false$9734$sFQex (apply g$C$17052$sFQex (case-lambda ((g$C$17051$sFQex g$others$9735$sFQex) (g$syntax-violation$9073$sFQex g$C$17051$sFQex '#f '"invalid guard clause" g$others$9735$sFQex))) g$ls/false$9734$sFQex) (g$syntax-violation$9073$sFQex g$C$17052$sFQex '#f '"invalid syntax" g$t$9733$sFQex)))) g$C$17053$sFQex g$V$17054$sFQex))) g$t$9733$sFQex 'any))) g$C$17055$sFQex g$t$9723$sFQex)))) g$C$17056$sFQex g$V$17057$sFQex))) g$t$9723$sFQex '(any . any)))) g$C$17058$sFQex g$t$9719$sFQex)))) g$C$17059$sFQex g$V$17060$sFQex))) g$t$9719$sFQex '((#(scheme-id else) any . each-any))))) g$C$17061$sFQex g$t$9716$sFQex)))) g$C$17062$sFQex g$V$17063$sFQex))) g$t$9716$sFQex '()))) g$C$17064$sFQex g$x*$9715$sFQex)))) (call-with-values g$C$17074$sFQex (case-lambda ((g$C$17065$sFQex) (g$f*$9708$sFQex g$C$17065$sFQex g$clause*$9706$sFQex))) (case-lambda ((g$C$17073$sFQex g$code$9711$sFQex g$raisek$9712$sFQex) ((case-lambda ((g$C$17066$sFQex g$raisek$9713$sFQex g$code$9714$sFQex) (if g$raisek$9713$sFQex (list (case-lambda ((g$V$17067$sFQex) (list (case-lambda ((g$V$17068$sFQex) (list (case-lambda ((g$V$17069$sFQex) (list (case-lambda ((g$V$17070$sFQex) (list (case-lambda ((g$V$17071$sFQex) (list g$C$17066$sFQex g$V$17071$sFQex))) 'call/cc g$V$17070$sFQex))) 'lambda g$V$17069$sFQex g$V$17068$sFQex))) g$raisek$9713$sFQex))) g$outerk$9705$sFQex g$V$17067$sFQex))) 'lambda '() g$code$9714$sFQex) (list (case-lambda ((g$V$17072$sFQex) (list g$C$17066$sFQex g$outerk$9705$sFQex g$V$17072$sFQex))) 'lambda '() g$code$9714$sFQex)))) g$C$17073$sFQex g$raisek$9712$sFQex g$code$9711$sFQex)))))))) g$C$17075$sFQex uninitialized uninitialized)))) ((case-lambda ((g$C$17096$sFQex g$t$9693$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17097$sFQex) ((case-lambda ((g$C$17093$sFQex g$ls/false$9694$sFQex) ((case-lambda ((g$J$17095$sFQex) (if g$ls/false$9694$sFQex (apply g$J$17095$sFQex (case-lambda ((g$C$17076$sFQex g$con$9695$sFQex g$clause*$9696$sFQex g$b$9697$sFQex g$b*$9698$sFQex) (g$id?$8682$sFQex g$C$17076$sFQex g$con$9695$sFQex))) g$ls/false$9694$sFQex) (g$J$17095$sFQex '#f)))) (case-lambda ((g$T$17094$sFQex) (if g$T$17094$sFQex (apply g$C$17093$sFQex (case-lambda ((g$C$17091$sFQex g$con$9699$sFQex g$clause*$9700$sFQex g$b$9701$sFQex g$b*$9702$sFQex) (gensym (case-lambda ((g$V$17092$sFQex) ((case-lambda ((g$C$17077$sFQex g$outerk$9703$sFQex) (cons (case-lambda ((g$V$17078$sFQex) (cons (case-lambda ((g$V$17079$sFQex) (cons (case-lambda ((g$V$17080$sFQex) (cons (case-lambda ((g$V$17081$sFQex) (g$gen-clauses$9692$sFQex (case-lambda ((g$V$17082$sFQex) (list (case-lambda ((g$V$17083$sFQex) (list (case-lambda ((g$V$17084$sFQex) (list (case-lambda ((g$V$17085$sFQex) (list (case-lambda ((g$V$17086$sFQex) (list (case-lambda ((g$V$17087$sFQex) (list (case-lambda ((g$V$17088$sFQex) (list (case-lambda ((g$V$17089$sFQex) (list (case-lambda ((g$V$17090$sFQex) (g$bless$8924$sFQex g$C$17077$sFQex g$V$17090$sFQex))) g$V$17089$sFQex))) 'call/cc g$V$17088$sFQex))) 'lambda g$V$17087$sFQex g$V$17086$sFQex))) g$outerk$9703$sFQex))) 'lambda '() g$V$17085$sFQex))) 'with-exception-handler g$V$17084$sFQex g$V$17081$sFQex))) 'lambda g$V$17083$sFQex g$V$17082$sFQex))) g$con$9699$sFQex))) g$con$9699$sFQex g$outerk$9703$sFQex g$clause*$9700$sFQex))) 'lambda g$V$17080$sFQex))) '() g$V$17079$sFQex))) '#f g$V$17078$sFQex))) g$b$9701$sFQex g$b*$9702$sFQex))) g$C$17091$sFQex g$V$17092$sFQex)))))) g$ls/false$9694$sFQex) (g$syntax-violation$9073$sFQex g$C$17093$sFQex '#f '"invalid syntax" g$t$9693$sFQex))))))) g$C$17096$sFQex g$V$17097$sFQex))) g$t$9693$sFQex '(_ (any . each-any) any . each-any)))) g$C$17098$sFQex g$x$9691$sFQex)))) g$C$17099$sFQex uninitialized)))))) (library-letrec*-identity 'g$guard-macro$8936$sFQex))) (g$define-enumeration-macro$8937$sFQex g$define-enumeration-macro$12456$sFQex ((case-lambda ((g$C$20897$sFQex) (g$C$20897$sFQex (case-lambda ((g$C$17164$sFQex g$stx$9754$sFQex) ((case-lambda ((g$C$17163$sFQex g$set?$9755$sFQex g$remove-dups$9756$sFQex) (begin (set! g$set?$9755$sFQex (case-lambda ((g$C$17106$sFQex g$x$9768$sFQex) (null? (case-lambda ((g$V$17107$sFQex) ((case-lambda ((g$C$17100$sFQex g$t$9769$sFQex) (if g$t$9769$sFQex (g$C$17100$sFQex g$t$9769$sFQex) (cdr (case-lambda ((g$V$17101$sFQex) (car (case-lambda ((g$V$17102$sFQex) (g$memq$5672$sFQex (case-lambda ((g$V$17103$sFQex) (not (case-lambda ((g$T$17104$sFQex) (if g$T$17104$sFQex (cdr (case-lambda ((g$V$17105$sFQex) (g$set?$9755$sFQex g$C$17100$sFQex g$V$17105$sFQex))) g$x$9768$sFQex) (g$C$17100$sFQex '#f)))) g$V$17103$sFQex))) g$V$17102$sFQex g$V$17101$sFQex))) g$x$9768$sFQex))) g$x$9768$sFQex)))) g$C$17106$sFQex g$V$17107$sFQex))) g$x$9768$sFQex)))) (begin (set! g$remove-dups$9756$sFQex (case-lambda ((g$C$17108$sFQex g$ls$9767$sFQex) (null? (case-lambda ((g$T$17109$sFQex) (if g$T$17109$sFQex (g$C$17108$sFQex '()) (cdr (case-lambda ((g$V$17110$sFQex) (car (case-lambda ((g$V$17111$sFQex) (g$remq$5687$sFQex (case-lambda ((g$V$17112$sFQex) (g$remove-dups$9756$sFQex (case-lambda ((g$V$17113$sFQex) (car (case-lambda ((g$V$17114$sFQex) (cons g$C$17108$sFQex g$V$17114$sFQex g$V$17113$sFQex))) g$ls$9767$sFQex))) g$V$17112$sFQex))) g$V$17111$sFQex g$V$17110$sFQex))) g$ls$9767$sFQex))) g$ls$9767$sFQex)))) g$ls$9767$sFQex)))) ((case-lambda ((g$C$17161$sFQex g$t$9757$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17162$sFQex) ((case-lambda ((g$C$17158$sFQex g$ls/false$9758$sFQex) ((case-lambda ((g$J$17160$sFQex) (if g$ls/false$9758$sFQex (apply g$J$17160$sFQex (case-lambda ((g$C$17115$sFQex g$name$9759$sFQex g$id*$9760$sFQex g$maker$9761$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$17116$sFQex) (if g$T$17116$sFQex (g$id?$8682$sFQex (case-lambda ((g$T$17117$sFQex) (if g$T$17117$sFQex (g$for-all$5678$sFQex g$C$17115$sFQex g$id?$8682$sFQex g$id*$9760$sFQex) (g$C$17115$sFQex '#f)))) g$maker$9761$sFQex) (g$C$17115$sFQex '#f)))) g$name$9759$sFQex))) g$ls/false$9758$sFQex) (g$J$17160$sFQex '#f)))) (case-lambda ((g$T$17159$sFQex) (if g$T$17159$sFQex (apply g$C$17158$sFQex (case-lambda ((g$C$17154$sFQex g$name$9762$sFQex g$id*$9763$sFQex g$maker$9764$sFQex) (gensym (case-lambda ((g$V$17155$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$17156$sFQex) (g$remove-dups$9756$sFQex (case-lambda ((g$V$17157$sFQex) ((case-lambda ((g$C$17118$sFQex g$name*$9765$sFQex g$mk$9766$sFQex) (cons (case-lambda ((g$V$17119$sFQex) (list (case-lambda ((g$V$17120$sFQex) (list (case-lambda ((g$V$17121$sFQex) (cons (case-lambda ((g$V$17122$sFQex) (cons (case-lambda ((g$V$17123$sFQex) (list (case-lambda ((g$V$17124$sFQex) (list (case-lambda ((g$V$17125$sFQex) (list (case-lambda ((g$V$17126$sFQex) (list (case-lambda ((g$V$17127$sFQex) (cons (case-lambda ((g$V$17128$sFQex) (cons (case-lambda ((g$V$17129$sFQex) (list (case-lambda ((g$V$17130$sFQex) (list (case-lambda ((g$V$17131$sFQex) (cons (case-lambda ((g$V$17132$sFQex) (cons (case-lambda ((g$V$17133$sFQex) (list (case-lambda ((g$V$17134$sFQex) (list (case-lambda ((g$V$17135$sFQex) (list (case-lambda ((g$V$17136$sFQex) (list (case-lambda ((g$V$17137$sFQex) (list (case-lambda ((g$V$17138$sFQex) (list (case-lambda ((g$V$17139$sFQex) (cons (case-lambda ((g$V$17140$sFQex) (cons (case-lambda ((g$V$17141$sFQex) (list (case-lambda ((g$V$17142$sFQex) (list (case-lambda ((g$V$17143$sFQex) (list (case-lambda ((g$V$17144$sFQex) (list (case-lambda ((g$V$17145$sFQex) (list (case-lambda ((g$V$17146$sFQex) (list (case-lambda ((g$V$17147$sFQex) (list (case-lambda ((g$V$17148$sFQex) (list (case-lambda ((g$V$17149$sFQex) (list (case-lambda ((g$V$17150$sFQex) (list (case-lambda ((g$V$17151$sFQex) (list (case-lambda ((g$V$17152$sFQex) (list (case-lambda ((g$V$17153$sFQex) (g$bless$8924$sFQex g$C$17118$sFQex g$V$17153$sFQex))) 'begin g$V$17152$sFQex g$V$17148$sFQex g$V$17138$sFQex))) 'define g$mk$9766$sFQex g$V$17151$sFQex))) 'enum-set-constructor g$V$17150$sFQex))) 'make-enumeration g$V$17149$sFQex))) 'quote g$name*$9765$sFQex))) 'define-syntax g$name$9762$sFQex g$V$17147$sFQex))) 'lambda '(x) g$V$17146$sFQex))) 'syntax-case 'x '() g$V$17145$sFQex))) '(_ n) '(identifier? #'n) g$V$17144$sFQex))) 'if g$V$17143$sFQex '#''n g$V$17141$sFQex))) 'memq '(syntax->datum #'n) g$V$17142$sFQex))) 'quote g$name*$9765$sFQex))) 'syntax-violation g$V$17140$sFQex))) g$V$17139$sFQex '("not a member of set" x #'n)))) 'quote g$name$9762$sFQex))) 'define-syntax g$maker$9764$sFQex g$V$17137$sFQex))) 'lambda '(x) g$V$17136$sFQex))) 'syntax-case 'x '() g$V$17135$sFQex))) '(_ n* ...) g$V$17134$sFQex))) 'begin g$V$17133$sFQex g$V$17120$sFQex))) 'for-each g$V$17132$sFQex))) g$V$17131$sFQex '(#'(n* ...))))) 'lambda '(n) g$V$17130$sFQex g$V$17126$sFQex))) 'unless '(identifier? n) g$V$17129$sFQex))) 'syntax-violation g$V$17128$sFQex))) g$V$17127$sFQex '("non-identifier argument" x n)))) 'quote g$maker$9764$sFQex))) 'unless g$V$17125$sFQex g$V$17123$sFQex))) 'memq '(syntax->datum n) g$V$17124$sFQex))) 'quote g$name*$9765$sFQex))) 'syntax-violation g$V$17122$sFQex))) g$V$17121$sFQex '("not a member of set" x n)))) 'quote g$maker$9764$sFQex))) 'syntax g$V$17119$sFQex))) g$mk$9766$sFQex '('(n* ...))))) g$C$17154$sFQex g$V$17157$sFQex g$V$17155$sFQex))) g$V$17156$sFQex))) g$id*$9763$sFQex)))))) g$ls/false$9758$sFQex) (g$syntax-violation$9073$sFQex g$C$17158$sFQex '#f '"invalid syntax" g$t$9757$sFQex))))))) g$C$17161$sFQex g$V$17162$sFQex))) g$t$9757$sFQex '(_ any each-any any)))) g$C$17163$sFQex g$stx$9754$sFQex))))) g$C$17164$sFQex uninitialized uninitialized)))))) (library-letrec*-identity 'g$define-enumeration-macro$8937$sFQex))) (g$time-macro$8938$sFQex g$time-macro$12457$sFQex ((case-lambda ((g$C$20898$sFQex) (g$C$20898$sFQex (case-lambda ((g$C$17178$sFQex g$stx$9770$sFQex) ((case-lambda ((g$C$17176$sFQex g$t$9771$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17177$sFQex) ((case-lambda ((g$C$17175$sFQex g$ls/false$9772$sFQex) (if g$ls/false$9772$sFQex (apply g$C$17175$sFQex (case-lambda ((g$C$17173$sFQex g$expr$9773$sFQex) (call-with-values (case-lambda ((g$V$17174$sFQex) ((case-lambda ((g$C$17165$sFQex g$str$9774$sFQex) (list (case-lambda ((g$V$17166$sFQex) (list (case-lambda ((g$V$17167$sFQex) (g$bless$8924$sFQex g$C$17165$sFQex g$V$17167$sFQex))) 'time-it g$str$9774$sFQex g$V$17166$sFQex))) 'lambda '() g$expr$9773$sFQex))) g$C$17173$sFQex g$V$17174$sFQex))) (case-lambda ((g$C$17168$sFQex) (g$open-string-output-port$7329$sFQex g$C$17168$sFQex))) (case-lambda ((g$C$17172$sFQex g$p$9777$sFQex g$e$9778$sFQex) ((case-lambda ((g$C$17169$sFQex g$e$9779$sFQex g$p$9780$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$17170$sFQex) (write (case-lambda (g$IGNORE$17171$sFQex (g$e$9779$sFQex g$C$17169$sFQex))) g$V$17170$sFQex g$p$9780$sFQex))) g$expr$9773$sFQex))) g$C$17172$sFQex g$e$9778$sFQex g$p$9777$sFQex)))))) g$ls/false$9772$sFQex) (g$syntax-violation$9073$sFQex g$C$17175$sFQex '#f '"invalid syntax" g$t$9771$sFQex)))) g$C$17176$sFQex g$V$17177$sFQex))) g$t$9771$sFQex '(_ any)))) g$C$17178$sFQex g$stx$9770$sFQex)))))) (library-letrec*-identity 'g$time-macro$8938$sFQex))) (g$delay-macro$8939$sFQex g$delay-macro$12458$sFQex ((case-lambda ((g$C$20899$sFQex) (g$C$20899$sFQex (case-lambda ((g$C$17185$sFQex g$stx$9781$sFQex) ((case-lambda ((g$C$17183$sFQex g$t$9782$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17184$sFQex) ((case-lambda ((g$C$17182$sFQex g$ls/false$9783$sFQex) (if g$ls/false$9783$sFQex (apply g$C$17182$sFQex (case-lambda ((g$C$17179$sFQex g$expr$9784$sFQex) (list (case-lambda ((g$V$17180$sFQex) (list (case-lambda ((g$V$17181$sFQex) (g$bless$8924$sFQex g$C$17179$sFQex g$V$17181$sFQex))) 'make-promise g$V$17180$sFQex))) 'lambda '() g$expr$9784$sFQex))) g$ls/false$9783$sFQex) (g$syntax-violation$9073$sFQex g$C$17182$sFQex '#f '"invalid syntax" g$t$9782$sFQex)))) g$C$17183$sFQex g$V$17184$sFQex))) g$t$9782$sFQex '(_ any)))) g$C$17185$sFQex g$stx$9781$sFQex)))))) (library-letrec*-identity 'g$delay-macro$8939$sFQex))) (g$assert-macro$8940$sFQex g$assert-macro$12459$sFQex ((case-lambda ((g$C$20900$sFQex) (g$C$20900$sFQex (case-lambda ((g$C$17198$sFQex g$stx$9785$sFQex) ((case-lambda ((g$C$17196$sFQex g$t$9786$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17197$sFQex) ((case-lambda ((g$C$17195$sFQex g$ls/false$9787$sFQex) (if g$ls/false$9787$sFQex (apply g$C$17195$sFQex (case-lambda ((g$C$17192$sFQex g$expr$9788$sFQex) (g$expression-position$9068$sFQex (case-lambda ((g$V$17193$sFQex) ((case-lambda ((g$C$17191$sFQex g$t$9790$sFQex) (if g$t$9790$sFQex (g$C$17191$sFQex g$t$9790$sFQex) (g$expression-position$9068$sFQex g$C$17191$sFQex g$expr$9788$sFQex)))) (case-lambda ((g$V$17194$sFQex) ((case-lambda ((g$C$17186$sFQex g$pos$9789$sFQex) (list (case-lambda ((g$V$17187$sFQex) (list (case-lambda ((g$V$17188$sFQex) (list (case-lambda ((g$V$17189$sFQex) (list (case-lambda ((g$V$17190$sFQex) (g$bless$8924$sFQex g$C$17186$sFQex g$V$17190$sFQex))) 'unless g$expr$9788$sFQex g$V$17189$sFQex))) 'assertion-error g$V$17188$sFQex g$V$17187$sFQex))) 'quote g$expr$9788$sFQex))) 'quote g$pos$9789$sFQex))) g$C$17192$sFQex g$V$17194$sFQex))) g$V$17193$sFQex))) g$stx$9785$sFQex))) g$ls/false$9787$sFQex) (g$syntax-violation$9073$sFQex g$C$17195$sFQex '#f '"invalid syntax" g$t$9786$sFQex)))) g$C$17196$sFQex g$V$17197$sFQex))) g$t$9786$sFQex '(_ any)))) g$C$17198$sFQex g$stx$9785$sFQex)))))) (library-letrec*-identity 'g$assert-macro$8940$sFQex))) (g$endianness-macro$8941$sFQex g$endianness-macro$12460$sFQex ((case-lambda ((g$C$20901$sFQex) (g$C$20901$sFQex (case-lambda ((g$C$17207$sFQex g$stx$9791$sFQex) ((case-lambda ((g$C$17205$sFQex g$t$9792$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17206$sFQex) ((case-lambda ((g$C$17204$sFQex g$ls/false$9793$sFQex) (if g$ls/false$9793$sFQex (apply g$C$17204$sFQex (case-lambda ((g$C$17202$sFQex g$e$9794$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$17203$sFQex) ((case-lambda ((g$C$17199$sFQex g$t$9795$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$17200$sFQex) (if g$T$17200$sFQex (g$bless$8924$sFQex g$C$17199$sFQex ''little) (g$memv$5673$sFQex (case-lambda ((g$T$17201$sFQex) (if g$T$17201$sFQex (g$bless$8924$sFQex g$C$17199$sFQex ''big) (g$syntax-violation$9073$sFQex g$C$17199$sFQex '#f '"endianness must be big or little" g$stx$9791$sFQex)))) g$t$9795$sFQex '(big))))) g$t$9795$sFQex '(little)))) g$C$17202$sFQex g$V$17203$sFQex))) g$e$9794$sFQex))) g$ls/false$9793$sFQex) (g$syntax-violation$9073$sFQex g$C$17204$sFQex '#f '"invalid syntax" g$t$9792$sFQex)))) g$C$17205$sFQex g$V$17206$sFQex))) g$t$9792$sFQex '(_ any)))) g$C$17207$sFQex g$stx$9791$sFQex)))))) (library-letrec*-identity 'g$endianness-macro$8941$sFQex))) (g$identifier-syntax-macro$8942$sFQex g$identifier-syntax-macro$12461$sFQex ((case-lambda ((g$C$20902$sFQex) (g$C$20902$sFQex (case-lambda ((g$C$17240$sFQex g$stx$9796$sFQex) ((case-lambda ((g$C$17238$sFQex g$t$9797$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17239$sFQex) ((case-lambda ((g$C$17237$sFQex g$ls/false$9798$sFQex) (if g$ls/false$9798$sFQex (apply g$C$17237$sFQex (case-lambda ((g$C$17208$sFQex g$expr$9799$sFQex) (list (case-lambda ((g$V$17209$sFQex) (cons (case-lambda ((g$V$17210$sFQex) (cons (case-lambda ((g$V$17211$sFQex) (list (case-lambda ((g$V$17212$sFQex) (list (case-lambda ((g$V$17213$sFQex) (list (case-lambda ((g$V$17214$sFQex) (list (case-lambda ((g$V$17215$sFQex) (list (case-lambda ((g$V$17216$sFQex) (g$bless$8924$sFQex g$C$17208$sFQex g$V$17216$sFQex))) 'lambda '(x) g$V$17215$sFQex))) 'syntax-case 'x '() g$V$17214$sFQex g$V$17212$sFQex))) 'id '(identifier? #'id) g$V$17213$sFQex))) 'syntax g$expr$9799$sFQex))) '(id e* ...) '(identifier? #'id) g$V$17211$sFQex))) 'cons g$V$17210$sFQex))) g$V$17209$sFQex '(#'(e* ...))))) 'syntax g$expr$9799$sFQex))) g$ls/false$9798$sFQex) ((case-lambda ((g$C$17235$sFQex g$t$9800$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17236$sFQex) ((case-lambda ((g$C$17232$sFQex g$ls/false$9801$sFQex) ((case-lambda ((g$J$17234$sFQex) (if g$ls/false$9801$sFQex (apply g$J$17234$sFQex (case-lambda ((g$C$17217$sFQex g$id1$9802$sFQex g$expr1$9803$sFQex g$id2$9804$sFQex g$expr2$9805$sFQex g$expr3$9806$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$17218$sFQex) (if g$T$17218$sFQex (g$id?$8682$sFQex (case-lambda ((g$T$17219$sFQex) (if g$T$17219$sFQex (g$id?$8682$sFQex g$C$17217$sFQex g$expr2$9805$sFQex) (g$C$17217$sFQex '#f)))) g$id2$9804$sFQex) (g$C$17217$sFQex '#f)))) g$id1$9802$sFQex))) g$ls/false$9801$sFQex) (g$J$17234$sFQex '#f)))) (case-lambda ((g$T$17233$sFQex) (if g$T$17233$sFQex (apply g$C$17232$sFQex (case-lambda ((g$C$17220$sFQex g$id1$9807$sFQex g$expr1$9808$sFQex g$id2$9809$sFQex g$expr2$9810$sFQex g$expr3$9811$sFQex) (cons (case-lambda ((g$V$17221$sFQex) (list (case-lambda ((g$V$17222$sFQex) (list (case-lambda ((g$V$17223$sFQex) (list (case-lambda ((g$V$17224$sFQex) (list (case-lambda ((g$V$17225$sFQex) (list (case-lambda ((g$V$17226$sFQex) (list (case-lambda ((g$V$17227$sFQex) (list (case-lambda ((g$V$17228$sFQex) (list (case-lambda ((g$V$17229$sFQex) (list (case-lambda ((g$V$17230$sFQex) (list (case-lambda ((g$V$17231$sFQex) (g$bless$8924$sFQex g$C$17220$sFQex g$V$17231$sFQex))) 'cons ''macro! g$V$17230$sFQex))) 'lambda '(x) g$V$17229$sFQex))) 'syntax-case 'x '(set!) g$V$17228$sFQex g$V$17226$sFQex g$V$17223$sFQex))) 'id '(identifier? #'id) g$V$17227$sFQex))) 'syntax g$expr1$9808$sFQex))) g$V$17225$sFQex g$V$17224$sFQex))) 'set! 'id g$expr2$9810$sFQex))) 'syntax g$expr3$9811$sFQex))) '(id e* ...) '(identifier? #'id) g$V$17222$sFQex))) 'syntax g$V$17221$sFQex))) g$expr1$9808$sFQex '(e* ...)))) g$ls/false$9801$sFQex) (g$syntax-violation$9073$sFQex g$C$17232$sFQex '#f '"invalid syntax" g$t$9800$sFQex))))))) g$C$17235$sFQex g$V$17236$sFQex))) g$t$9800$sFQex '(_ (any any) ((#(scheme-id set!) any any) any))))) g$C$17237$sFQex g$t$9797$sFQex)))) g$C$17238$sFQex g$V$17239$sFQex))) g$t$9797$sFQex '(_ any)))) g$C$17240$sFQex g$stx$9796$sFQex)))))) (library-letrec*-identity 'g$identifier-syntax-macro$8942$sFQex))) (g$do-macro$8943$sFQex g$do-macro$12462$sFQex ((case-lambda ((g$C$20903$sFQex) (g$C$20903$sFQex (case-lambda ((g$C$17277$sFQex g$stx$9812$sFQex) ((case-lambda ((g$C$17276$sFQex g$bind$9813$sFQex) (begin (set! g$bind$9813$sFQex (case-lambda ((g$C$17253$sFQex g$x$9825$sFQex) ((case-lambda ((g$C$17251$sFQex g$t$9826$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17252$sFQex) ((case-lambda ((g$C$17250$sFQex g$ls/false$9827$sFQex) (if g$ls/false$9827$sFQex (apply g$C$17250$sFQex (case-lambda ((g$C$17241$sFQex g$x$9828$sFQex g$init$9829$sFQex) (list g$C$17241$sFQex g$x$9828$sFQex g$init$9829$sFQex g$x$9828$sFQex))) g$ls/false$9827$sFQex) ((case-lambda ((g$C$17248$sFQex g$t$9830$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17249$sFQex) ((case-lambda ((g$C$17247$sFQex g$ls/false$9831$sFQex) (if g$ls/false$9831$sFQex (apply g$C$17247$sFQex (case-lambda ((g$C$17242$sFQex g$x$9832$sFQex g$init$9833$sFQex g$step$9834$sFQex) (list g$C$17242$sFQex g$x$9832$sFQex g$init$9833$sFQex g$step$9834$sFQex))) g$ls/false$9831$sFQex) ((case-lambda ((g$C$17245$sFQex g$t$9835$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17246$sFQex) ((case-lambda ((g$C$17244$sFQex g$ls/false$9836$sFQex) (if g$ls/false$9836$sFQex (apply g$C$17244$sFQex (case-lambda ((g$C$17243$sFQex) (g$syntax-violation$9073$sFQex g$C$17243$sFQex '#f '"invalid binding" g$stx$9812$sFQex))) g$ls/false$9836$sFQex) (g$syntax-violation$9073$sFQex g$C$17244$sFQex '#f '"invalid syntax" g$t$9835$sFQex)))) g$C$17245$sFQex g$V$17246$sFQex))) g$t$9835$sFQex '_))) g$C$17247$sFQex g$t$9830$sFQex)))) g$C$17248$sFQex g$V$17249$sFQex))) g$t$9830$sFQex '(any any any)))) g$C$17250$sFQex g$t$9826$sFQex)))) g$C$17251$sFQex g$V$17252$sFQex))) g$t$9826$sFQex '(any any)))) g$C$17253$sFQex g$x$9825$sFQex)))) ((case-lambda ((g$C$17274$sFQex g$t$9814$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17275$sFQex) ((case-lambda ((g$C$17273$sFQex g$ls/false$9815$sFQex) (if g$ls/false$9815$sFQex (apply g$C$17273$sFQex (case-lambda ((g$C$17271$sFQex g$binding*$9816$sFQex g$test$9817$sFQex g$expr*$9818$sFQex g$command*$9819$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$17272$sFQex) ((case-lambda ((g$C$17269$sFQex g$t$9820$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17270$sFQex) ((case-lambda ((g$C$17268$sFQex g$ls/false$9821$sFQex) (if g$ls/false$9821$sFQex (apply g$C$17268$sFQex (case-lambda ((g$C$17254$sFQex g$x*$9822$sFQex g$init*$9823$sFQex g$step*$9824$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$T$17255$sFQex) (if g$T$17255$sFQex (cons (case-lambda ((g$V$17256$sFQex) (cons (case-lambda ((g$V$17257$sFQex) (list (case-lambda ((g$V$17258$sFQex) (append (case-lambda ((g$V$17259$sFQex) (cons (case-lambda ((g$V$17260$sFQex) (cons (case-lambda ((g$V$17261$sFQex) (cons (case-lambda ((g$V$17262$sFQex) (list (case-lambda ((g$V$17263$sFQex) (list (case-lambda ((g$V$17264$sFQex) (list (case-lambda ((g$V$17265$sFQex) (list (case-lambda ((g$V$17266$sFQex) (list (case-lambda ((g$V$17267$sFQex) (g$bless$8924$sFQex g$C$17254$sFQex g$V$17267$sFQex))) 'letrec g$V$17266$sFQex g$V$17256$sFQex))) g$V$17265$sFQex))) 'loop g$V$17264$sFQex))) 'lambda g$x*$9822$sFQex g$V$17263$sFQex))) 'if g$test$9817$sFQex g$V$17262$sFQex g$V$17260$sFQex))) 'begin g$V$17261$sFQex))) '(if #f #f) g$expr*$9818$sFQex))) 'begin g$V$17259$sFQex))) g$command*$9819$sFQex g$V$17258$sFQex))) g$V$17257$sFQex))) 'loop g$step*$9824$sFQex))) 'loop g$init*$9823$sFQex) (g$syntax-violation$9073$sFQex g$C$17254$sFQex '#f '"invalid bindings" g$stx$9812$sFQex)))) g$x*$9822$sFQex))) g$ls/false$9821$sFQex) (g$syntax-violation$9073$sFQex g$C$17268$sFQex '#f '"invalid syntax" g$t$9820$sFQex)))) g$C$17269$sFQex g$V$17270$sFQex))) g$t$9820$sFQex '#(each (any any any))))) g$C$17271$sFQex g$V$17272$sFQex))) g$bind$9813$sFQex g$binding*$9816$sFQex))) g$ls/false$9815$sFQex) (g$syntax-violation$9073$sFQex g$C$17273$sFQex '#f '"invalid syntax" g$t$9814$sFQex)))) g$C$17274$sFQex g$V$17275$sFQex))) g$t$9814$sFQex '(_ each-any (any . each-any) . each-any)))) g$C$17276$sFQex g$stx$9812$sFQex)))) g$C$17277$sFQex uninitialized)))))) (library-letrec*-identity 'g$do-macro$8943$sFQex))) (g$let*-macro$8944$sFQex g$let*-macro$12463$sFQex ((case-lambda ((g$C$20904$sFQex) (g$C$20904$sFQex (case-lambda ((g$C$17305$sFQex g$stx$9837$sFQex) ((case-lambda ((g$C$17303$sFQex g$t$9838$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17304$sFQex) ((case-lambda ((g$C$17300$sFQex g$ls/false$9839$sFQex) ((case-lambda ((g$J$17302$sFQex) (if g$ls/false$9839$sFQex (apply g$J$17302$sFQex (case-lambda ((g$C$17278$sFQex g$lhs*$9840$sFQex g$rhs*$9841$sFQex g$b$9842$sFQex g$b*$9843$sFQex) (g$for-all$5678$sFQex g$C$17278$sFQex g$id?$8682$sFQex g$lhs*$9840$sFQex))) g$ls/false$9839$sFQex) (g$J$17302$sFQex '#f)))) (case-lambda ((g$T$17301$sFQex) (if g$T$17301$sFQex (apply g$C$17300$sFQex (case-lambda ((g$C$17296$sFQex g$lhs*$9844$sFQex g$rhs*$9845$sFQex g$b$9846$sFQex g$b*$9847$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$17297$sFQex) ((case-lambda ((g$C$17295$sFQex g$f$9848$sFQex) ((case-lambda ((g$C$17280$sFQex g$f$17279$sFQex) (begin (set! g$f$9848$sFQex g$f$17279$sFQex) (g$C$17280$sFQex g$f$9848$sFQex)))) g$C$17295$sFQex (case-lambda ((g$C$17281$sFQex g$x*$9849$sFQex) (null? (case-lambda ((g$T$17282$sFQex) (if g$T$17282$sFQex (cons (case-lambda ((g$V$17283$sFQex) (cons (case-lambda ((g$V$17284$sFQex) (cons g$C$17281$sFQex 'let g$V$17284$sFQex))) '() g$V$17283$sFQex))) g$b$9846$sFQex g$b*$9847$sFQex) (cdr (case-lambda ((g$V$17285$sFQex) (null? (case-lambda ((g$T$17286$sFQex) (if g$T$17286$sFQex (cons (case-lambda ((g$V$17287$sFQex) (car (case-lambda ((g$V$17288$sFQex) (list (case-lambda ((g$V$17289$sFQex) (cons (case-lambda ((g$V$17290$sFQex) (cons g$C$17281$sFQex 'let g$V$17290$sFQex))) g$V$17289$sFQex g$V$17287$sFQex))) g$V$17288$sFQex))) g$x*$9849$sFQex))) g$b$9846$sFQex g$b*$9847$sFQex) (cdr (case-lambda ((g$V$17291$sFQex) (g$f$9848$sFQex (case-lambda ((g$V$17292$sFQex) (car (case-lambda ((g$V$17293$sFQex) (list (case-lambda ((g$V$17294$sFQex) (list g$C$17281$sFQex 'let g$V$17294$sFQex g$V$17292$sFQex))) g$V$17293$sFQex))) g$x*$9849$sFQex))) g$V$17291$sFQex))) g$x*$9849$sFQex)))) g$V$17285$sFQex))) g$x*$9849$sFQex)))) g$x*$9849$sFQex)))))) (case-lambda ((g$V$17298$sFQex) (g$V$17298$sFQex (case-lambda ((g$V$17299$sFQex) (g$bless$8924$sFQex g$C$17296$sFQex g$V$17299$sFQex))) g$V$17297$sFQex))) uninitialized))) list g$lhs*$9844$sFQex g$rhs*$9845$sFQex))) g$ls/false$9839$sFQex) (g$syntax-violation$9073$sFQex g$C$17300$sFQex '#f '"invalid syntax" g$t$9838$sFQex))))))) g$C$17303$sFQex g$V$17304$sFQex))) g$t$9838$sFQex '(_ #(each (any any)) any . each-any)))) g$C$17305$sFQex g$stx$9837$sFQex)))))) (library-letrec*-identity 'g$let*-macro$8944$sFQex))) (g$or-macro$8945$sFQex g$or-macro$12464$sFQex ((case-lambda ((g$C$20905$sFQex) (g$C$20905$sFQex (case-lambda ((g$C$17327$sFQex g$stx$9850$sFQex) ((case-lambda ((g$C$17325$sFQex g$t$9851$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17326$sFQex) ((case-lambda ((g$C$17324$sFQex g$ls/false$9852$sFQex) (if g$ls/false$9852$sFQex (apply g$C$17324$sFQex (case-lambda ((g$C$17306$sFQex) (g$C$17306$sFQex '#f))) g$ls/false$9852$sFQex) ((case-lambda ((g$C$17322$sFQex g$t$9853$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17323$sFQex) ((case-lambda ((g$C$17321$sFQex g$ls/false$9854$sFQex) (if g$ls/false$9854$sFQex (apply g$C$17321$sFQex (case-lambda ((g$C$17318$sFQex g$e$9855$sFQex g$e*$9856$sFQex) ((case-lambda ((g$C$17317$sFQex g$f$9857$sFQex) ((case-lambda ((g$C$17308$sFQex g$f$17307$sFQex) (begin (set! g$f$9857$sFQex g$f$17307$sFQex) (g$C$17308$sFQex g$f$9857$sFQex)))) g$C$17317$sFQex (case-lambda ((g$C$17309$sFQex g$e$9858$sFQex g$e*$9859$sFQex) (null? (case-lambda ((g$T$17310$sFQex) (if g$T$17310$sFQex (list g$C$17309$sFQex 'begin '#f g$e$9858$sFQex) (cdr (case-lambda ((g$V$17311$sFQex) (car (case-lambda ((g$V$17312$sFQex) (g$f$9857$sFQex (case-lambda ((g$V$17313$sFQex) (list (case-lambda ((g$V$17314$sFQex) (list (case-lambda ((g$V$17315$sFQex) (list (case-lambda ((g$V$17316$sFQex) (list g$C$17309$sFQex 'let g$V$17316$sFQex g$V$17314$sFQex))) g$V$17315$sFQex))) 't g$e$9858$sFQex))) 'if 't 't g$V$17313$sFQex))) g$V$17312$sFQex g$V$17311$sFQex))) g$e*$9859$sFQex))) g$e*$9859$sFQex)))) g$e*$9859$sFQex)))))) (case-lambda ((g$V$17319$sFQex) (g$V$17319$sFQex (case-lambda ((g$V$17320$sFQex) (g$bless$8924$sFQex g$C$17318$sFQex g$V$17320$sFQex))) g$e$9855$sFQex g$e*$9856$sFQex))) uninitialized))) g$ls/false$9854$sFQex) (g$syntax-violation$9073$sFQex g$C$17321$sFQex '#f '"invalid syntax" g$t$9853$sFQex)))) g$C$17322$sFQex g$V$17323$sFQex))) g$t$9853$sFQex '(_ any . each-any)))) g$C$17324$sFQex g$t$9851$sFQex)))) g$C$17325$sFQex g$V$17326$sFQex))) g$t$9851$sFQex '(_)))) g$C$17327$sFQex g$stx$9850$sFQex)))))) (library-letrec*-identity 'g$or-macro$8945$sFQex))) (g$and-macro$8946$sFQex g$and-macro$12465$sFQex ((case-lambda ((g$C$20906$sFQex) (g$C$20906$sFQex (case-lambda ((g$C$17348$sFQex g$stx$9860$sFQex) ((case-lambda ((g$C$17346$sFQex g$t$9861$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17347$sFQex) ((case-lambda ((g$C$17345$sFQex g$ls/false$9862$sFQex) (if g$ls/false$9862$sFQex (apply g$C$17345$sFQex (case-lambda ((g$C$17328$sFQex) (g$C$17328$sFQex '#t))) g$ls/false$9862$sFQex) ((case-lambda ((g$C$17343$sFQex g$t$9863$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17344$sFQex) ((case-lambda ((g$C$17342$sFQex g$ls/false$9864$sFQex) (if g$ls/false$9864$sFQex (apply g$C$17342$sFQex (case-lambda ((g$C$17339$sFQex g$e$9865$sFQex g$e*$9866$sFQex) ((case-lambda ((g$C$17338$sFQex g$f$9867$sFQex) ((case-lambda ((g$C$17330$sFQex g$f$17329$sFQex) (begin (set! g$f$9867$sFQex g$f$17329$sFQex) (g$C$17330$sFQex g$f$9867$sFQex)))) g$C$17338$sFQex (case-lambda ((g$C$17331$sFQex g$e$9868$sFQex g$e*$9869$sFQex) (null? (case-lambda ((g$T$17332$sFQex) (if g$T$17332$sFQex (list g$C$17331$sFQex 'begin '#f g$e$9868$sFQex) (cdr (case-lambda ((g$V$17333$sFQex) (car (case-lambda ((g$V$17334$sFQex) (g$f$9867$sFQex (case-lambda ((g$V$17335$sFQex) (cons (case-lambda ((g$V$17336$sFQex) (cons (case-lambda ((g$V$17337$sFQex) (cons g$C$17331$sFQex 'if g$V$17337$sFQex))) g$e$9868$sFQex g$V$17336$sFQex))) g$V$17335$sFQex '(#f)))) g$V$17334$sFQex g$V$17333$sFQex))) g$e*$9869$sFQex))) g$e*$9869$sFQex)))) g$e*$9869$sFQex)))))) (case-lambda ((g$V$17340$sFQex) (g$V$17340$sFQex (case-lambda ((g$V$17341$sFQex) (g$bless$8924$sFQex g$C$17339$sFQex g$V$17341$sFQex))) g$e$9865$sFQex g$e*$9866$sFQex))) uninitialized))) g$ls/false$9864$sFQex) (g$syntax-violation$9073$sFQex g$C$17342$sFQex '#f '"invalid syntax" g$t$9863$sFQex)))) g$C$17343$sFQex g$V$17344$sFQex))) g$t$9863$sFQex '(_ any . each-any)))) g$C$17345$sFQex g$t$9861$sFQex)))) g$C$17346$sFQex g$V$17347$sFQex))) g$t$9861$sFQex '(_)))) g$C$17348$sFQex g$stx$9860$sFQex)))))) (library-letrec*-identity 'g$and-macro$8946$sFQex))) (g$cond-macro$8947$sFQex g$cond-macro$12466$sFQex ((case-lambda ((g$C$20907$sFQex) (g$C$20907$sFQex (case-lambda ((g$C$17421$sFQex g$stx$9870$sFQex) ((case-lambda ((g$C$17419$sFQex g$t$9871$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17420$sFQex) ((case-lambda ((g$C$17418$sFQex g$ls/false$9872$sFQex) (if g$ls/false$9872$sFQex (apply g$C$17418$sFQex (case-lambda ((g$C$17415$sFQex g$cls$9873$sFQex g$cls*$9874$sFQex) ((case-lambda ((g$C$17414$sFQex g$f$9875$sFQex) ((case-lambda ((g$C$17350$sFQex g$f$17349$sFQex) (begin (set! g$f$9875$sFQex g$f$17349$sFQex) (g$C$17350$sFQex g$f$9875$sFQex)))) g$C$17414$sFQex (case-lambda ((g$C$17412$sFQex g$cls$9876$sFQex g$cls*$9877$sFQex) (null? (case-lambda ((g$T$17413$sFQex) (if g$T$17413$sFQex ((case-lambda ((g$C$17376$sFQex g$t$9878$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17377$sFQex) ((case-lambda ((g$C$17375$sFQex g$ls/false$9879$sFQex) (if g$ls/false$9879$sFQex (apply g$C$17375$sFQex (case-lambda ((g$C$17351$sFQex g$e$9880$sFQex g$e*$9881$sFQex) (cons (case-lambda ((g$V$17352$sFQex) (cons g$C$17351$sFQex 'begin g$V$17352$sFQex))) g$e$9880$sFQex g$e*$9881$sFQex))) g$ls/false$9879$sFQex) ((case-lambda ((g$C$17373$sFQex g$t$9882$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17374$sFQex) ((case-lambda ((g$C$17372$sFQex g$ls/false$9883$sFQex) (if g$ls/false$9883$sFQex (apply g$C$17372$sFQex (case-lambda ((g$C$17353$sFQex g$e$9884$sFQex g$p$9885$sFQex) (cons (case-lambda ((g$V$17354$sFQex) (list (case-lambda ((g$V$17355$sFQex) (list (case-lambda ((g$V$17356$sFQex) (list (case-lambda ((g$V$17357$sFQex) (list g$C$17353$sFQex 'let g$V$17357$sFQex g$V$17355$sFQex))) g$V$17356$sFQex))) 't g$e$9884$sFQex))) 'if 't g$V$17354$sFQex))) g$p$9885$sFQex '(t)))) g$ls/false$9883$sFQex) ((case-lambda ((g$C$17370$sFQex g$t$9886$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17371$sFQex) ((case-lambda ((g$C$17369$sFQex g$ls/false$9887$sFQex) (if g$ls/false$9887$sFQex (apply g$C$17369$sFQex (case-lambda ((g$C$17358$sFQex g$e$9888$sFQex) (cons (case-lambda ((g$V$17359$sFQex) (cons g$C$17358$sFQex 'or g$V$17359$sFQex))) g$e$9888$sFQex '((if #f #f))))) g$ls/false$9887$sFQex) ((case-lambda ((g$C$17367$sFQex g$t$9889$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17368$sFQex) ((case-lambda ((g$C$17366$sFQex g$ls/false$9890$sFQex) (if g$ls/false$9890$sFQex (apply g$C$17366$sFQex (case-lambda ((g$C$17360$sFQex g$e$9891$sFQex g$e*$9892$sFQex) (cons (case-lambda ((g$V$17361$sFQex) (list g$C$17360$sFQex 'if g$e$9891$sFQex g$V$17361$sFQex))) 'begin g$e*$9892$sFQex))) g$ls/false$9890$sFQex) ((case-lambda ((g$C$17364$sFQex g$t$9893$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17365$sFQex) ((case-lambda ((g$C$17363$sFQex g$ls/false$9894$sFQex) (if g$ls/false$9894$sFQex (apply g$C$17363$sFQex (case-lambda ((g$C$17362$sFQex) (g$syntax-violation$9073$sFQex g$C$17362$sFQex '#f '"invalid last clause" g$stx$9870$sFQex))) g$ls/false$9894$sFQex) (g$syntax-violation$9073$sFQex g$C$17363$sFQex '#f '"invalid syntax" g$t$9893$sFQex)))) g$C$17364$sFQex g$V$17365$sFQex))) g$t$9893$sFQex '_))) g$C$17366$sFQex g$t$9889$sFQex)))) g$C$17367$sFQex g$V$17368$sFQex))) g$t$9889$sFQex '(any . each-any)))) g$C$17369$sFQex g$t$9886$sFQex)))) g$C$17370$sFQex g$V$17371$sFQex))) g$t$9886$sFQex '(any)))) g$C$17372$sFQex g$t$9882$sFQex)))) g$C$17373$sFQex g$V$17374$sFQex))) g$t$9882$sFQex '(any #(scheme-id =>) any)))) g$C$17375$sFQex g$t$9878$sFQex)))) g$C$17376$sFQex g$V$17377$sFQex))) g$t$9878$sFQex '(#(scheme-id else) any . each-any)))) g$C$17412$sFQex g$cls$9876$sFQex) ((case-lambda ((g$C$17410$sFQex g$t$9895$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17411$sFQex) ((case-lambda ((g$C$17409$sFQex g$ls/false$9896$sFQex) (if g$ls/false$9896$sFQex (apply g$C$17409$sFQex (case-lambda ((g$C$17378$sFQex g$e$9897$sFQex g$e*$9898$sFQex) (g$syntax-violation$9073$sFQex g$C$17378$sFQex '#f '"incorrect position of keyword else" g$stx$9870$sFQex))) g$ls/false$9896$sFQex) ((case-lambda ((g$C$17407$sFQex g$t$9899$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17408$sFQex) ((case-lambda ((g$C$17406$sFQex g$ls/false$9900$sFQex) (if g$ls/false$9900$sFQex (apply g$C$17406$sFQex (case-lambda ((g$C$17379$sFQex g$e$9901$sFQex g$p$9902$sFQex) (cdr (case-lambda ((g$V$17380$sFQex) (car (case-lambda ((g$V$17381$sFQex) (g$f$9875$sFQex (case-lambda ((g$V$17382$sFQex) (cons (case-lambda ((g$V$17383$sFQex) (list (case-lambda ((g$V$17384$sFQex) (list (case-lambda ((g$V$17385$sFQex) (list (case-lambda ((g$V$17386$sFQex) (list g$C$17379$sFQex 'let g$V$17386$sFQex g$V$17384$sFQex))) g$V$17385$sFQex))) 't g$e$9901$sFQex))) 'if 't g$V$17383$sFQex g$V$17382$sFQex))) g$p$9902$sFQex '(t)))) g$V$17381$sFQex g$V$17380$sFQex))) g$cls*$9877$sFQex))) g$cls*$9877$sFQex))) g$ls/false$9900$sFQex) ((case-lambda ((g$C$17404$sFQex g$t$9903$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17405$sFQex) ((case-lambda ((g$C$17403$sFQex g$ls/false$9904$sFQex) (if g$ls/false$9904$sFQex (apply g$C$17403$sFQex (case-lambda ((g$C$17387$sFQex g$e$9905$sFQex) (cdr (case-lambda ((g$V$17388$sFQex) (car (case-lambda ((g$V$17389$sFQex) (g$f$9875$sFQex (case-lambda ((g$V$17390$sFQex) (list g$C$17387$sFQex 'or g$e$9905$sFQex g$V$17390$sFQex))) g$V$17389$sFQex g$V$17388$sFQex))) g$cls*$9877$sFQex))) g$cls*$9877$sFQex))) g$ls/false$9904$sFQex) ((case-lambda ((g$C$17401$sFQex g$t$9906$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17402$sFQex) ((case-lambda ((g$C$17400$sFQex g$ls/false$9907$sFQex) (if g$ls/false$9907$sFQex (apply g$C$17400$sFQex (case-lambda ((g$C$17391$sFQex g$e$9908$sFQex g$e*$9909$sFQex) (cdr (case-lambda ((g$V$17392$sFQex) (car (case-lambda ((g$V$17393$sFQex) (g$f$9875$sFQex (case-lambda ((g$V$17394$sFQex) (cons (case-lambda ((g$V$17395$sFQex) (list g$C$17391$sFQex 'if g$e$9908$sFQex g$V$17395$sFQex g$V$17394$sFQex))) 'begin g$e*$9909$sFQex))) g$V$17393$sFQex g$V$17392$sFQex))) g$cls*$9877$sFQex))) g$cls*$9877$sFQex))) g$ls/false$9907$sFQex) ((case-lambda ((g$C$17398$sFQex g$t$9910$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17399$sFQex) ((case-lambda ((g$C$17397$sFQex g$ls/false$9911$sFQex) (if g$ls/false$9911$sFQex (apply g$C$17397$sFQex (case-lambda ((g$C$17396$sFQex) (g$syntax-violation$9073$sFQex g$C$17396$sFQex '#f '"invalid last clause" g$stx$9870$sFQex))) g$ls/false$9911$sFQex) (g$syntax-violation$9073$sFQex g$C$17397$sFQex '#f '"invalid syntax" g$t$9910$sFQex)))) g$C$17398$sFQex g$V$17399$sFQex))) g$t$9910$sFQex '_))) g$C$17400$sFQex g$t$9906$sFQex)))) g$C$17401$sFQex g$V$17402$sFQex))) g$t$9906$sFQex '(any . each-any)))) g$C$17403$sFQex g$t$9903$sFQex)))) g$C$17404$sFQex g$V$17405$sFQex))) g$t$9903$sFQex '(any)))) g$C$17406$sFQex g$t$9899$sFQex)))) g$C$17407$sFQex g$V$17408$sFQex))) g$t$9899$sFQex '(any #(scheme-id =>) any)))) g$C$17409$sFQex g$t$9895$sFQex)))) g$C$17410$sFQex g$V$17411$sFQex))) g$t$9895$sFQex '(#(scheme-id else) any . each-any)))) g$C$17412$sFQex g$cls$9876$sFQex)))) g$cls*$9877$sFQex)))))) (case-lambda ((g$V$17416$sFQex) (g$V$17416$sFQex (case-lambda ((g$V$17417$sFQex) (g$bless$8924$sFQex g$C$17415$sFQex g$V$17417$sFQex))) g$cls$9873$sFQex g$cls*$9874$sFQex))) uninitialized))) g$ls/false$9872$sFQex) (g$syntax-violation$9073$sFQex g$C$17418$sFQex '#f '"invalid syntax" g$t$9871$sFQex)))) g$C$17419$sFQex g$V$17420$sFQex))) g$t$9871$sFQex '(_ any . each-any)))) g$C$17421$sFQex g$stx$9870$sFQex)))))) (library-letrec*-identity 'g$cond-macro$8947$sFQex))) (g$do-include$8948$sFQex g$do-include$12467$sFQex ((case-lambda ((g$C$20908$sFQex) (g$C$20908$sFQex (case-lambda ((g$C$17442$sFQex g$stx$9912$sFQex g$id$9913$sFQex g$filename$9914$sFQex) (g$stx->datum$8693$sFQex (case-lambda ((g$V$17443$sFQex) ((case-lambda ((g$C$17433$sFQex g$filename$9915$sFQex) ((case-lambda ((g$J$17437$sFQex) ((case-lambda ((g$J$17440$sFQex) (string? (case-lambda ((g$T$17441$sFQex) (if g$T$17441$sFQex (g$id?$8682$sFQex g$J$17440$sFQex g$id$9913$sFQex) (g$J$17440$sFQex '#f)))) g$filename$9915$sFQex))) (case-lambda ((g$V$17438$sFQex) (not (case-lambda ((g$T$17439$sFQex) (if g$T$17439$sFQex (g$syntax-violation$9073$sFQex g$J$17437$sFQex '#f '"invalid syntax" g$stx$9912$sFQex) (void g$J$17437$sFQex)))) g$V$17438$sFQex)))))) (case-lambda (g$IGNORE$17434$sFQex (g$with-input-from-file$7378$sFQex (case-lambda ((g$V$17435$sFQex) (g$bless$8924$sFQex (case-lambda ((g$V$17436$sFQex) (cons g$C$17433$sFQex g$V$17436$sFQex g$V$17435$sFQex))) 'begin))) g$filename$9915$sFQex (case-lambda ((g$C$17431$sFQex) ((case-lambda ((g$C$17430$sFQex g$f$9916$sFQex) ((case-lambda ((g$C$17423$sFQex g$f$17422$sFQex) (begin (set! g$f$9916$sFQex g$f$17422$sFQex) (g$C$17423$sFQex g$f$9916$sFQex)))) g$C$17430$sFQex (case-lambda ((g$C$17428$sFQex g$ls$9917$sFQex) (read-annotated (case-lambda ((g$V$17429$sFQex) ((case-lambda ((g$C$17424$sFQex g$x$9918$sFQex) (eof-object? (case-lambda ((g$T$17425$sFQex) (if g$T$17425$sFQex (g$reverse$6175$sFQex g$C$17424$sFQex g$ls$9917$sFQex) (g$datum->stx$8665$sFQex (case-lambda ((g$V$17426$sFQex) (cons (case-lambda ((g$V$17427$sFQex) (g$f$9916$sFQex g$C$17424$sFQex g$V$17427$sFQex))) g$V$17426$sFQex g$ls$9917$sFQex))) g$id$9913$sFQex g$x$9918$sFQex)))) g$x$9918$sFQex))) g$C$17428$sFQex g$V$17429$sFQex))))))))) (case-lambda ((g$V$17432$sFQex) (g$V$17432$sFQex g$C$17431$sFQex '()))) uninitialized))))))))) g$C$17442$sFQex g$V$17443$sFQex))) g$filename$9914$sFQex)))))) (library-letrec*-identity 'g$do-include$8948$sFQex))) (g$include-macro$8949$sFQex g$include-macro$12468$sFQex ((case-lambda ((g$C$20909$sFQex) (g$C$20909$sFQex (case-lambda ((g$C$17448$sFQex g$e$9919$sFQex) ((case-lambda ((g$C$17446$sFQex g$t$9920$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17447$sFQex) ((case-lambda ((g$C$17445$sFQex g$ls/false$9921$sFQex) (if g$ls/false$9921$sFQex (apply g$C$17445$sFQex (case-lambda ((g$C$17444$sFQex g$id$9922$sFQex g$filename$9923$sFQex) (g$do-include$8948$sFQex g$C$17444$sFQex g$e$9919$sFQex g$id$9922$sFQex g$filename$9923$sFQex))) g$ls/false$9921$sFQex) (g$syntax-violation$9073$sFQex g$C$17445$sFQex '#f '"invalid syntax" g$t$9920$sFQex)))) g$C$17446$sFQex g$V$17447$sFQex))) g$t$9920$sFQex '(any any)))) g$C$17448$sFQex g$e$9919$sFQex)))))) (library-letrec*-identity 'g$include-macro$8949$sFQex))) (g$include-into-macro$8950$sFQex g$include-into-macro$12469$sFQex ((case-lambda ((g$C$20910$sFQex) (g$C$20910$sFQex (case-lambda ((g$C$17453$sFQex g$e$9924$sFQex) ((case-lambda ((g$C$17451$sFQex g$t$9925$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17452$sFQex) ((case-lambda ((g$C$17450$sFQex g$ls/false$9926$sFQex) (if g$ls/false$9926$sFQex (apply g$C$17450$sFQex (case-lambda ((g$C$17449$sFQex g$id$9927$sFQex g$filename$9928$sFQex) (g$do-include$8948$sFQex g$C$17449$sFQex g$e$9924$sFQex g$id$9927$sFQex g$filename$9928$sFQex))) g$ls/false$9926$sFQex) (g$syntax-violation$9073$sFQex g$C$17450$sFQex '#f '"invalid syntax" g$t$9925$sFQex)))) g$C$17451$sFQex g$V$17452$sFQex))) g$t$9925$sFQex '(_ any any)))) g$C$17453$sFQex g$e$9924$sFQex)))))) (library-letrec*-identity 'g$include-into-macro$8950$sFQex))) (g$syntax-rules-macro$8951$sFQex g$syntax-rules-macro$12470$sFQex ((case-lambda ((g$C$20911$sFQex) (g$C$20911$sFQex (case-lambda ((g$C$17475$sFQex g$e$9929$sFQex) ((case-lambda ((g$C$17473$sFQex g$t$9930$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17474$sFQex) ((case-lambda ((g$C$17472$sFQex g$ls/false$9931$sFQex) (if g$ls/false$9931$sFQex (apply g$C$17472$sFQex (case-lambda ((g$C$17465$sFQex g$lits$9932$sFQex g$pat*$9933$sFQex g$tmp*$9934$sFQex) (g$verify-literals$8964$sFQex (case-lambda (g$IGNORE$17466$sFQex (g$map$5680$sFQex (case-lambda ((g$V$17467$sFQex) (cons (case-lambda ((g$V$17468$sFQex) (cons (case-lambda ((g$V$17469$sFQex) (cons (case-lambda ((g$V$17470$sFQex) (list (case-lambda ((g$V$17471$sFQex) (g$bless$8924$sFQex g$C$17465$sFQex g$V$17471$sFQex))) 'lambda '(x) g$V$17470$sFQex))) 'syntax-case g$V$17469$sFQex))) 'x g$V$17468$sFQex))) g$lits$9932$sFQex g$V$17467$sFQex))) (case-lambda ((g$C$17464$sFQex g$pat$9935$sFQex g$tmp$9936$sFQex) ((case-lambda ((g$C$17462$sFQex g$t$9937$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17463$sFQex) ((case-lambda ((g$C$17461$sFQex g$ls/false$9938$sFQex) (if g$ls/false$9938$sFQex (apply g$C$17461$sFQex (case-lambda ((g$C$17454$sFQex g$rest$9939$sFQex) (list (case-lambda ((g$V$17455$sFQex) (cons (case-lambda ((g$V$17456$sFQex) (list g$C$17454$sFQex g$V$17456$sFQex g$V$17455$sFQex))) 'g g$rest$9939$sFQex))) 'syntax g$tmp$9936$sFQex))) g$ls/false$9938$sFQex) ((case-lambda ((g$C$17459$sFQex g$t$9940$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17460$sFQex) ((case-lambda ((g$C$17458$sFQex g$ls/false$9941$sFQex) (if g$ls/false$9941$sFQex (apply g$C$17458$sFQex (case-lambda ((g$C$17457$sFQex) (g$syntax-violation$9073$sFQex g$C$17457$sFQex '#f '"invalid syntax-rules pattern" g$e$9929$sFQex g$pat$9935$sFQex))) g$ls/false$9941$sFQex) (g$syntax-violation$9073$sFQex g$C$17458$sFQex '#f '"invalid syntax" g$t$9940$sFQex)))) g$C$17459$sFQex g$V$17460$sFQex))) g$t$9940$sFQex '_))) g$C$17461$sFQex g$t$9937$sFQex)))) g$C$17462$sFQex g$V$17463$sFQex))) g$t$9937$sFQex '(_ . any)))) g$C$17464$sFQex g$pat$9935$sFQex))) g$pat*$9933$sFQex g$tmp*$9934$sFQex))) g$lits$9932$sFQex g$e$9929$sFQex))) g$ls/false$9931$sFQex) (g$syntax-violation$9073$sFQex g$C$17472$sFQex '#f '"invalid syntax" g$t$9930$sFQex)))) g$C$17473$sFQex g$V$17474$sFQex))) g$t$9930$sFQex '(_ each-any . #(each (any any)))))) g$C$17475$sFQex g$e$9929$sFQex)))))) (library-letrec*-identity 'g$syntax-rules-macro$8951$sFQex))) (g$quasiquote-macro$8952$sFQex g$quasiquote-macro$12471$sFQex ((case-lambda ((g$C$20912$sFQex) ((case-lambda ((g$C$17704$sFQex) ((case-lambda ((g$C$17703$sFQex g$datum$9942$sFQex g$quasicons*$9958$sFQex g$quasicons$9959$sFQex g$quasiappend$9960$sFQex g$quasivector$9961$sFQex g$vquasi$9962$sFQex g$quasi$9963$sFQex) (begin (set! g$datum$9942$sFQex (case-lambda ((g$C$17476$sFQex g$x$10073$sFQex) (g$mkstx$8670$sFQex (case-lambda ((g$V$17477$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17478$sFQex) (list g$C$17476$sFQex g$V$17478$sFQex g$V$17477$sFQex))) 'quote))) g$x$10073$sFQex '() '() '())))) (begin (set! g$quasicons*$9958$sFQex (case-lambda ((g$C$17487$sFQex g$x$10069$sFQex g$y$10070$sFQex) ((case-lambda ((g$C$17486$sFQex g$f$10071$sFQex) ((case-lambda ((g$C$17480$sFQex g$f$17479$sFQex) (begin (set! g$f$10071$sFQex g$f$17479$sFQex) (g$C$17480$sFQex g$f$10071$sFQex)))) g$C$17486$sFQex (case-lambda ((g$C$17481$sFQex g$x$10072$sFQex) (null? (case-lambda ((g$T$17482$sFQex) (if g$T$17482$sFQex (g$C$17481$sFQex g$y$10070$sFQex) (cdr (case-lambda ((g$V$17483$sFQex) (g$f$10071$sFQex (case-lambda ((g$V$17484$sFQex) (car (case-lambda ((g$V$17485$sFQex) (g$quasicons$9959$sFQex g$C$17481$sFQex g$V$17485$sFQex g$V$17484$sFQex))) g$x$10072$sFQex))) g$V$17483$sFQex))) g$x$10072$sFQex)))) g$x$10072$sFQex)))))) (case-lambda ((g$V$17488$sFQex) (g$V$17488$sFQex g$C$17487$sFQex g$x$10069$sFQex))) uninitialized)))) (begin (set! g$quasicons$9959$sFQex (case-lambda ((g$C$17523$sFQex g$x$10050$sFQex g$y$10051$sFQex) ((case-lambda ((g$C$17521$sFQex g$t$10052$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17522$sFQex) ((case-lambda ((g$C$17520$sFQex g$ls/false$10053$sFQex) (if g$ls/false$10053$sFQex (apply g$C$17520$sFQex (case-lambda ((g$C$17509$sFQex g$dy$10054$sFQex) ((case-lambda ((g$C$17507$sFQex g$t$10055$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17508$sFQex) ((case-lambda ((g$C$17506$sFQex g$ls/false$10056$sFQex) (if g$ls/false$10056$sFQex (apply g$C$17506$sFQex (case-lambda ((g$C$17489$sFQex g$dx$10057$sFQex) (cons (case-lambda ((g$V$17490$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17491$sFQex) (list g$C$17489$sFQex g$V$17491$sFQex g$V$17490$sFQex))) 'quote))) g$dx$10057$sFQex g$dy$10054$sFQex))) g$ls/false$10056$sFQex) ((case-lambda ((g$C$17504$sFQex g$t$10058$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17505$sFQex) ((case-lambda ((g$C$17503$sFQex g$ls/false$10059$sFQex) (if g$ls/false$10059$sFQex (apply g$C$17503$sFQex (case-lambda ((g$C$17502$sFQex) ((case-lambda ((g$C$17500$sFQex g$t$10060$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17501$sFQex) ((case-lambda ((g$C$17499$sFQex g$ls/false$10061$sFQex) (if g$ls/false$10061$sFQex (apply g$C$17499$sFQex (case-lambda ((g$C$17492$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17493$sFQex) (list g$C$17492$sFQex g$V$17493$sFQex g$x$10050$sFQex))) 'list))) g$ls/false$10061$sFQex) ((case-lambda ((g$C$17497$sFQex g$t$10062$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17498$sFQex) ((case-lambda ((g$C$17496$sFQex g$ls/false$10063$sFQex) (if g$ls/false$10063$sFQex (apply g$C$17496$sFQex (case-lambda ((g$C$17494$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17495$sFQex) (list g$C$17494$sFQex g$V$17495$sFQex g$x$10050$sFQex g$y$10051$sFQex))) 'cons))) g$ls/false$10063$sFQex) (g$syntax-violation$9073$sFQex g$C$17496$sFQex '#f '"invalid syntax" g$t$10062$sFQex)))) g$C$17497$sFQex g$V$17498$sFQex))) g$t$10062$sFQex '_))) g$C$17499$sFQex g$t$10060$sFQex)))) g$C$17500$sFQex g$V$17501$sFQex))) g$t$10060$sFQex '()))) g$C$17502$sFQex g$dy$10054$sFQex))) g$ls/false$10059$sFQex) (g$syntax-violation$9073$sFQex g$C$17503$sFQex '#f '"invalid syntax" g$t$10058$sFQex)))) g$C$17504$sFQex g$V$17505$sFQex))) g$t$10058$sFQex '_))) g$C$17506$sFQex g$t$10055$sFQex)))) g$C$17507$sFQex g$V$17508$sFQex))) g$t$10055$sFQex '(#(scheme-id quote) any)))) g$C$17509$sFQex g$x$10050$sFQex))) g$ls/false$10053$sFQex) ((case-lambda ((g$C$17518$sFQex g$t$10064$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17519$sFQex) ((case-lambda ((g$C$17517$sFQex g$ls/false$10065$sFQex) (if g$ls/false$10065$sFQex (apply g$C$17517$sFQex (case-lambda ((g$C$17510$sFQex g$stuff$10066$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17511$sFQex) (g$cons*$5682$sFQex g$C$17510$sFQex g$V$17511$sFQex g$x$10050$sFQex g$stuff$10066$sFQex))) 'list))) g$ls/false$10065$sFQex) ((case-lambda ((g$C$17515$sFQex g$t$10067$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17516$sFQex) ((case-lambda ((g$C$17514$sFQex g$ls/false$10068$sFQex) (if g$ls/false$10068$sFQex (apply g$C$17514$sFQex (case-lambda ((g$C$17512$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17513$sFQex) (list g$C$17512$sFQex g$V$17513$sFQex g$x$10050$sFQex g$y$10051$sFQex))) 'cons))) g$ls/false$10068$sFQex) (g$syntax-violation$9073$sFQex g$C$17514$sFQex '#f '"invalid syntax" g$t$10067$sFQex)))) g$C$17515$sFQex g$V$17516$sFQex))) g$t$10067$sFQex '_))) g$C$17517$sFQex g$t$10064$sFQex)))) g$C$17518$sFQex g$V$17519$sFQex))) g$t$10064$sFQex '(#(scheme-id list) . each-any)))) g$C$17520$sFQex g$t$10052$sFQex)))) g$C$17521$sFQex g$V$17522$sFQex))) g$t$10052$sFQex '(#(scheme-id quote) any)))) g$C$17523$sFQex g$y$10051$sFQex)))) (begin (set! g$quasiappend$9960$sFQex (case-lambda ((g$C$17556$sFQex g$x$10037$sFQex g$y$10038$sFQex) ((case-lambda ((g$C$17555$sFQex g$f$10040$sFQex) ((case-lambda ((g$C$17531$sFQex g$f$17530$sFQex) (begin (set! g$f$10040$sFQex g$f$17530$sFQex) (g$C$17531$sFQex g$f$10040$sFQex)))) g$C$17555$sFQex (case-lambda ((g$C$17552$sFQex g$x$10041$sFQex) (null? (case-lambda ((g$T$17553$sFQex) (if g$T$17553$sFQex ((case-lambda ((g$C$17538$sFQex g$t$10042$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17539$sFQex) ((case-lambda ((g$C$17537$sFQex g$ls/false$10043$sFQex) (if g$ls/false$10043$sFQex (apply g$C$17537$sFQex (case-lambda ((g$C$17532$sFQex) (g$C$17532$sFQex '()))) g$ls/false$10043$sFQex) ((case-lambda ((g$C$17535$sFQex g$t$10044$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17536$sFQex) ((case-lambda ((g$C$17534$sFQex g$ls/false$10045$sFQex) (if g$ls/false$10045$sFQex (apply g$C$17534$sFQex (case-lambda ((g$C$17533$sFQex) (list g$C$17533$sFQex g$y$10038$sFQex))) g$ls/false$10045$sFQex) (g$syntax-violation$9073$sFQex g$C$17534$sFQex '#f '"invalid syntax" g$t$10044$sFQex)))) g$C$17535$sFQex g$V$17536$sFQex))) g$t$10044$sFQex '_))) g$C$17537$sFQex g$t$10042$sFQex)))) g$C$17538$sFQex g$V$17539$sFQex))) g$t$10042$sFQex '(#(scheme-id quote) ())))) g$C$17552$sFQex g$y$10038$sFQex) (car (case-lambda ((g$V$17554$sFQex) ((case-lambda ((g$C$17550$sFQex g$t$10046$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17551$sFQex) ((case-lambda ((g$C$17549$sFQex g$ls/false$10047$sFQex) (if g$ls/false$10047$sFQex (apply g$C$17549$sFQex (case-lambda ((g$C$17540$sFQex) (cdr (case-lambda ((g$V$17541$sFQex) (g$f$10040$sFQex g$C$17540$sFQex g$V$17541$sFQex))) g$x$10041$sFQex))) g$ls/false$10047$sFQex) ((case-lambda ((g$C$17547$sFQex g$t$10048$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17548$sFQex) ((case-lambda ((g$C$17546$sFQex g$ls/false$10049$sFQex) (if g$ls/false$10049$sFQex (apply g$C$17546$sFQex (case-lambda ((g$C$17542$sFQex) (cdr (case-lambda ((g$V$17543$sFQex) (g$f$10040$sFQex (case-lambda ((g$V$17544$sFQex) (car (case-lambda ((g$V$17545$sFQex) (cons g$C$17542$sFQex g$V$17545$sFQex g$V$17544$sFQex))) g$x$10041$sFQex))) g$V$17543$sFQex))) g$x$10041$sFQex))) g$ls/false$10049$sFQex) (g$syntax-violation$9073$sFQex g$C$17546$sFQex '#f '"invalid syntax" g$t$10048$sFQex)))) g$C$17547$sFQex g$V$17548$sFQex))) g$t$10048$sFQex '_))) g$C$17549$sFQex g$t$10046$sFQex)))) g$C$17550$sFQex g$V$17551$sFQex))) g$t$10046$sFQex '(#(scheme-id quote) ())))) g$C$17552$sFQex g$V$17554$sFQex))) g$x$10041$sFQex)))) g$x$10041$sFQex)))))) (case-lambda ((g$V$17557$sFQex) (g$V$17557$sFQex (case-lambda ((g$V$17558$sFQex) ((case-lambda ((g$C$17524$sFQex g$ls$10039$sFQex) (null? (case-lambda ((g$T$17525$sFQex) (if g$T$17525$sFQex (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17526$sFQex) (list g$C$17524$sFQex g$V$17526$sFQex '()))) 'quote) (cdr (case-lambda ((g$V$17527$sFQex) (null? (case-lambda ((g$T$17528$sFQex) (if g$T$17528$sFQex (car g$C$17524$sFQex g$ls$10039$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17529$sFQex) (g$cons*$5682$sFQex g$C$17524$sFQex g$V$17529$sFQex g$ls$10039$sFQex))) 'append)))) g$V$17527$sFQex))) g$ls$10039$sFQex)))) g$ls$10039$sFQex))) g$C$17556$sFQex g$V$17558$sFQex))) g$x$10037$sFQex))) uninitialized)))) (begin (set! g$quasivector$9961$sFQex (case-lambda ((g$C$17599$sFQex g$x$10012$sFQex) ((case-lambda ((g$C$17598$sFQex g$pat-x$10013$sFQex) ((case-lambda ((g$C$17596$sFQex g$t$10014$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17597$sFQex) ((case-lambda ((g$C$17595$sFQex g$ls/false$10015$sFQex) (if g$ls/false$10015$sFQex (apply g$C$17595$sFQex (case-lambda ((g$C$17559$sFQex g$x*$10016$sFQex) (g$list->vector$6163$sFQex (case-lambda ((g$V$17560$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17561$sFQex) (list g$C$17559$sFQex g$V$17561$sFQex g$V$17560$sFQex))) 'quote))) g$x*$10016$sFQex))) g$ls/false$10015$sFQex) ((case-lambda ((g$C$17593$sFQex g$t$10017$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17594$sFQex) ((case-lambda ((g$C$17592$sFQex g$ls/false$10018$sFQex) (if g$ls/false$10018$sFQex (apply g$C$17592$sFQex (case-lambda ((g$C$17590$sFQex) ((case-lambda ((g$C$17587$sFQex g$f$10019$sFQex) ((case-lambda ((g$C$17563$sFQex g$f$17562$sFQex) (begin (set! g$f$10019$sFQex g$f$17562$sFQex) (g$C$17563$sFQex g$f$10019$sFQex)))) g$C$17587$sFQex (case-lambda ((g$C$17586$sFQex g$x$10020$sFQex g$k$10021$sFQex) ((case-lambda ((g$C$17584$sFQex g$t$10022$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17585$sFQex) ((case-lambda ((g$C$17583$sFQex g$ls/false$10023$sFQex) (if g$ls/false$10023$sFQex (apply g$C$17583$sFQex (case-lambda ((g$C$17566$sFQex g$x*$10024$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$17567$sFQex) (g$k$10021$sFQex g$C$17566$sFQex g$V$17567$sFQex))) (case-lambda ((g$C$17564$sFQex g$x$10025$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17565$sFQex) (list g$C$17564$sFQex g$V$17565$sFQex g$x$10025$sFQex))) 'quote))) g$x*$10024$sFQex))) g$ls/false$10023$sFQex) ((case-lambda ((g$C$17581$sFQex g$t$10026$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17582$sFQex) ((case-lambda ((g$C$17580$sFQex g$ls/false$10027$sFQex) (if g$ls/false$10027$sFQex (apply g$C$17580$sFQex (case-lambda ((g$C$17568$sFQex g$x*$10028$sFQex) (g$k$10021$sFQex g$C$17568$sFQex g$x*$10028$sFQex))) g$ls/false$10027$sFQex) ((case-lambda ((g$C$17578$sFQex g$t$10029$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17579$sFQex) ((case-lambda ((g$C$17577$sFQex g$ls/false$10030$sFQex) (if g$ls/false$10030$sFQex (apply g$C$17577$sFQex (case-lambda ((g$C$17571$sFQex g$x$10031$sFQex g$y$10032$sFQex) (g$f$10019$sFQex g$C$17571$sFQex g$y$10032$sFQex (case-lambda ((g$C$17569$sFQex g$ls$10033$sFQex) (cons (case-lambda ((g$V$17570$sFQex) (g$k$10021$sFQex g$C$17569$sFQex g$V$17570$sFQex))) g$x$10031$sFQex g$ls$10033$sFQex)))))) g$ls/false$10030$sFQex) ((case-lambda ((g$C$17575$sFQex g$t$10034$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17576$sFQex) ((case-lambda ((g$C$17574$sFQex g$ls/false$10035$sFQex) (if g$ls/false$10035$sFQex (apply g$C$17574$sFQex (case-lambda ((g$C$17572$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17573$sFQex) (list g$C$17572$sFQex g$V$17573$sFQex g$pat-x$10013$sFQex))) 'list->vector))) g$ls/false$10035$sFQex) (g$syntax-violation$9073$sFQex g$C$17574$sFQex '#f '"invalid syntax" g$t$10034$sFQex)))) g$C$17575$sFQex g$V$17576$sFQex))) g$t$10034$sFQex '_))) g$C$17577$sFQex g$t$10029$sFQex)))) g$C$17578$sFQex g$V$17579$sFQex))) g$t$10029$sFQex '(#(scheme-id cons) any any)))) g$C$17580$sFQex g$t$10026$sFQex)))) g$C$17581$sFQex g$V$17582$sFQex))) g$t$10026$sFQex '(#(scheme-id list) . each-any)))) g$C$17583$sFQex g$t$10022$sFQex)))) g$C$17584$sFQex g$V$17585$sFQex))) g$t$10022$sFQex '(#(scheme-id quote) each-any)))) g$C$17586$sFQex g$x$10020$sFQex)))))) (case-lambda ((g$V$17591$sFQex) (g$V$17591$sFQex g$C$17590$sFQex g$x$10012$sFQex (case-lambda ((g$C$17588$sFQex g$ls$10036$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17589$sFQex) (g$cons*$5682$sFQex g$C$17588$sFQex g$V$17589$sFQex g$ls$10036$sFQex))) 'vector)))))) uninitialized))) g$ls/false$10018$sFQex) (g$syntax-violation$9073$sFQex g$C$17592$sFQex '#f '"invalid syntax" g$t$10017$sFQex)))) g$C$17593$sFQex g$V$17594$sFQex))) g$t$10017$sFQex '_))) g$C$17595$sFQex g$t$10014$sFQex)))) g$C$17596$sFQex g$V$17597$sFQex))) g$t$10014$sFQex '(#(scheme-id quote) each-any)))) g$C$17598$sFQex g$pat-x$10013$sFQex))) g$C$17599$sFQex g$x$10012$sFQex)))) (begin (set! g$vquasi$9962$sFQex (case-lambda ((g$C$17637$sFQex g$p$9995$sFQex g$lev$9996$sFQex) ((case-lambda ((g$C$17635$sFQex g$t$9997$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17636$sFQex) ((case-lambda ((g$C$17634$sFQex g$ls/false$9998$sFQex) (if g$ls/false$9998$sFQex (apply g$C$17634$sFQex (case-lambda ((g$C$17628$sFQex g$p$9999$sFQex g$q$10000$sFQex) ((case-lambda ((g$C$17626$sFQex g$t$10001$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17627$sFQex) ((case-lambda ((g$C$17625$sFQex g$ls/false$10002$sFQex) (if g$ls/false$10002$sFQex (apply g$C$17625$sFQex (case-lambda ((g$C$17600$sFQex g$p$10003$sFQex) (= (case-lambda ((g$T$17601$sFQex) (if g$T$17601$sFQex (g$vquasi$9962$sFQex (case-lambda ((g$V$17602$sFQex) (g$quasicons*$9958$sFQex g$C$17600$sFQex g$p$10003$sFQex g$V$17602$sFQex))) g$q$10000$sFQex g$lev$9996$sFQex) (g$vquasi$9962$sFQex (case-lambda ((g$V$17603$sFQex) (- (case-lambda ((g$V$17604$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17605$sFQex) (g$datum$9942$sFQex (case-lambda ((g$V$17606$sFQex) (g$quasicons$9959$sFQex (case-lambda ((g$V$17607$sFQex) (g$quasicons$9959$sFQex g$C$17600$sFQex g$V$17607$sFQex g$V$17603$sFQex))) g$V$17606$sFQex g$V$17605$sFQex))) 'unquote))) g$p$10003$sFQex g$V$17604$sFQex))) g$lev$9996$sFQex '1))) g$q$10000$sFQex g$lev$9996$sFQex)))) g$lev$9996$sFQex '0))) g$ls/false$10002$sFQex) ((case-lambda ((g$C$17623$sFQex g$t$10004$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17624$sFQex) ((case-lambda ((g$C$17622$sFQex g$ls/false$10005$sFQex) (if g$ls/false$10005$sFQex (apply g$C$17622$sFQex (case-lambda ((g$C$17608$sFQex g$p$10006$sFQex) (= (case-lambda ((g$T$17609$sFQex) (if g$T$17609$sFQex (g$vquasi$9962$sFQex (case-lambda ((g$V$17610$sFQex) (g$quasiappend$9960$sFQex g$C$17608$sFQex g$p$10006$sFQex g$V$17610$sFQex))) g$q$10000$sFQex g$lev$9996$sFQex) (g$vquasi$9962$sFQex (case-lambda ((g$V$17611$sFQex) (- (case-lambda ((g$V$17612$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17613$sFQex) (g$datum$9942$sFQex (case-lambda ((g$V$17614$sFQex) (g$quasicons$9959$sFQex (case-lambda ((g$V$17615$sFQex) (g$quasicons$9959$sFQex g$C$17608$sFQex g$V$17615$sFQex g$V$17611$sFQex))) g$V$17614$sFQex g$V$17613$sFQex))) 'unquote-splicing))) g$p$10006$sFQex g$V$17612$sFQex))) g$lev$9996$sFQex '1))) g$q$10000$sFQex g$lev$9996$sFQex)))) g$lev$9996$sFQex '0))) g$ls/false$10005$sFQex) ((case-lambda ((g$C$17620$sFQex g$t$10007$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17621$sFQex) ((case-lambda ((g$C$17619$sFQex g$ls/false$10008$sFQex) (if g$ls/false$10008$sFQex (apply g$C$17619$sFQex (case-lambda ((g$C$17616$sFQex g$p$10009$sFQex) (g$vquasi$9962$sFQex (case-lambda ((g$V$17617$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17618$sFQex) (g$quasicons$9959$sFQex g$C$17616$sFQex g$V$17618$sFQex g$V$17617$sFQex))) g$p$10009$sFQex g$lev$9996$sFQex))) g$q$10000$sFQex g$lev$9996$sFQex))) g$ls/false$10008$sFQex) (g$syntax-violation$9073$sFQex g$C$17619$sFQex '#f '"invalid syntax" g$t$10007$sFQex)))) g$C$17620$sFQex g$V$17621$sFQex))) g$t$10007$sFQex 'any))) g$C$17622$sFQex g$t$10004$sFQex)))) g$C$17623$sFQex g$V$17624$sFQex))) g$t$10004$sFQex '(#(scheme-id unquote-splicing) . each-any)))) g$C$17625$sFQex g$t$10001$sFQex)))) g$C$17626$sFQex g$V$17627$sFQex))) g$t$10001$sFQex '(#(scheme-id unquote) . each-any)))) g$C$17628$sFQex g$p$9999$sFQex))) g$ls/false$9998$sFQex) ((case-lambda ((g$C$17632$sFQex g$t$10010$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17633$sFQex) ((case-lambda ((g$C$17631$sFQex g$ls/false$10011$sFQex) (if g$ls/false$10011$sFQex (apply g$C$17631$sFQex (case-lambda ((g$C$17629$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17630$sFQex) (list g$C$17629$sFQex g$V$17630$sFQex '()))) 'quote))) g$ls/false$10011$sFQex) (g$syntax-violation$9073$sFQex g$C$17631$sFQex '#f '"invalid syntax" g$t$10010$sFQex)))) g$C$17632$sFQex g$V$17633$sFQex))) g$t$10010$sFQex '()))) g$C$17634$sFQex g$t$9997$sFQex)))) g$C$17635$sFQex g$V$17636$sFQex))) g$t$9997$sFQex '(any . any)))) g$C$17637$sFQex g$p$9995$sFQex)))) (begin (set! g$quasi$9963$sFQex (case-lambda ((g$C$17697$sFQex g$p$9968$sFQex g$lev$9969$sFQex) ((case-lambda ((g$C$17695$sFQex g$t$9970$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17696$sFQex) ((case-lambda ((g$C$17694$sFQex g$ls/false$9971$sFQex) (if g$ls/false$9971$sFQex (apply g$C$17694$sFQex (case-lambda ((g$C$17638$sFQex g$p$9972$sFQex) (= (case-lambda ((g$T$17639$sFQex) (if g$T$17639$sFQex (g$C$17638$sFQex g$p$9972$sFQex) (- (case-lambda ((g$V$17640$sFQex) (list (case-lambda ((g$V$17641$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17642$sFQex) (g$datum$9942$sFQex (case-lambda ((g$V$17643$sFQex) (g$quasicons$9959$sFQex g$C$17638$sFQex g$V$17643$sFQex g$V$17642$sFQex))) 'unquote))) g$V$17641$sFQex g$V$17640$sFQex))) g$p$9972$sFQex))) g$lev$9969$sFQex '1)))) g$lev$9969$sFQex '0))) g$ls/false$9971$sFQex) ((case-lambda ((g$C$17692$sFQex g$t$9973$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17693$sFQex) ((case-lambda ((g$C$17691$sFQex g$ls/false$9974$sFQex) (if g$ls/false$9974$sFQex (apply g$C$17691$sFQex (case-lambda ((g$C$17644$sFQex g$p$9975$sFQex g$q$9976$sFQex) (= (case-lambda ((g$T$17645$sFQex) (if g$T$17645$sFQex (g$quasi$9963$sFQex (case-lambda ((g$V$17646$sFQex) (g$quasicons*$9958$sFQex g$C$17644$sFQex g$p$9975$sFQex g$V$17646$sFQex))) g$q$9976$sFQex g$lev$9969$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17647$sFQex) (- (case-lambda ((g$V$17648$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17649$sFQex) (g$datum$9942$sFQex (case-lambda ((g$V$17650$sFQex) (g$quasicons$9959$sFQex (case-lambda ((g$V$17651$sFQex) (g$quasicons$9959$sFQex g$C$17644$sFQex g$V$17651$sFQex g$V$17647$sFQex))) g$V$17650$sFQex g$V$17649$sFQex))) 'unquote))) g$p$9975$sFQex g$V$17648$sFQex))) g$lev$9969$sFQex '1))) g$q$9976$sFQex g$lev$9969$sFQex)))) g$lev$9969$sFQex '0))) g$ls/false$9974$sFQex) ((case-lambda ((g$C$17689$sFQex g$t$9977$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17690$sFQex) ((case-lambda ((g$C$17688$sFQex g$ls/false$9978$sFQex) (if g$ls/false$9978$sFQex (apply g$C$17688$sFQex (case-lambda ((g$C$17652$sFQex g$p$9979$sFQex g$q$9980$sFQex) (= (case-lambda ((g$T$17653$sFQex) (if g$T$17653$sFQex (g$quasi$9963$sFQex (case-lambda ((g$V$17654$sFQex) (g$quasiappend$9960$sFQex g$C$17652$sFQex g$p$9979$sFQex g$V$17654$sFQex))) g$q$9980$sFQex g$lev$9969$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17655$sFQex) (- (case-lambda ((g$V$17656$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17657$sFQex) (g$datum$9942$sFQex (case-lambda ((g$V$17658$sFQex) (g$quasicons$9959$sFQex (case-lambda ((g$V$17659$sFQex) (g$quasicons$9959$sFQex g$C$17652$sFQex g$V$17659$sFQex g$V$17655$sFQex))) g$V$17658$sFQex g$V$17657$sFQex))) 'unquote-splicing))) g$p$9979$sFQex g$V$17656$sFQex))) g$lev$9969$sFQex '1))) g$q$9980$sFQex g$lev$9969$sFQex)))) g$lev$9969$sFQex '0))) g$ls/false$9978$sFQex) ((case-lambda ((g$C$17686$sFQex g$t$9981$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17687$sFQex) ((case-lambda ((g$C$17685$sFQex g$ls/false$9982$sFQex) (if g$ls/false$9982$sFQex (apply g$C$17685$sFQex (case-lambda ((g$C$17660$sFQex g$p$9983$sFQex) (+ (case-lambda ((g$V$17661$sFQex) (list (case-lambda ((g$V$17662$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17663$sFQex) (g$datum$9942$sFQex (case-lambda ((g$V$17664$sFQex) (g$quasicons$9959$sFQex g$C$17660$sFQex g$V$17664$sFQex g$V$17663$sFQex))) 'quasiquote))) g$V$17662$sFQex g$V$17661$sFQex))) g$p$9983$sFQex))) g$lev$9969$sFQex '1))) g$ls/false$9982$sFQex) ((case-lambda ((g$C$17683$sFQex g$t$9984$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17684$sFQex) ((case-lambda ((g$C$17682$sFQex g$ls/false$9985$sFQex) (if g$ls/false$9985$sFQex (apply g$C$17682$sFQex (case-lambda ((g$C$17665$sFQex g$p$9986$sFQex g$q$9987$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17666$sFQex) (g$quasi$9963$sFQex (case-lambda ((g$V$17667$sFQex) (g$quasicons$9959$sFQex g$C$17665$sFQex g$V$17667$sFQex g$V$17666$sFQex))) g$p$9986$sFQex g$lev$9969$sFQex))) g$q$9987$sFQex g$lev$9969$sFQex))) g$ls/false$9985$sFQex) ((case-lambda ((g$C$17680$sFQex g$t$9988$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17681$sFQex) ((case-lambda ((g$C$17677$sFQex g$ls/false$9989$sFQex) ((case-lambda ((g$J$17679$sFQex) (if g$ls/false$9989$sFQex (apply g$J$17679$sFQex (case-lambda ((g$C$17668$sFQex g$x$9990$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$V$17669$sFQex) (not g$C$17668$sFQex g$V$17669$sFQex))) g$x$9990$sFQex))) g$ls/false$9989$sFQex) (g$J$17679$sFQex '#f)))) (case-lambda ((g$T$17678$sFQex) (if g$T$17678$sFQex (apply g$C$17677$sFQex (case-lambda ((g$C$17670$sFQex g$x$9991$sFQex) (g$vquasi$9962$sFQex (case-lambda ((g$V$17671$sFQex) (g$quasivector$9961$sFQex g$C$17670$sFQex g$V$17671$sFQex))) g$x$9991$sFQex g$lev$9969$sFQex))) g$ls/false$9989$sFQex) ((case-lambda ((g$C$17675$sFQex g$t$9992$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17676$sFQex) ((case-lambda ((g$C$17674$sFQex g$ls/false$9993$sFQex) (if g$ls/false$9993$sFQex (apply g$C$17674$sFQex (case-lambda ((g$C$17672$sFQex g$p$9994$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$17673$sFQex) (list g$C$17672$sFQex g$V$17673$sFQex g$p$9994$sFQex))) 'quote))) g$ls/false$9993$sFQex) (g$syntax-violation$9073$sFQex g$C$17674$sFQex '#f '"invalid syntax" g$t$9992$sFQex)))) g$C$17675$sFQex g$V$17676$sFQex))) g$t$9992$sFQex 'any))) g$C$17677$sFQex g$t$9988$sFQex))))))) g$C$17680$sFQex g$V$17681$sFQex))) g$t$9988$sFQex '#(vector each-any)))) g$C$17682$sFQex g$t$9984$sFQex)))) g$C$17683$sFQex g$V$17684$sFQex))) g$t$9984$sFQex '(any . any)))) g$C$17685$sFQex g$t$9981$sFQex)))) g$C$17686$sFQex g$V$17687$sFQex))) g$t$9981$sFQex '(#(scheme-id quasiquote) any)))) g$C$17688$sFQex g$t$9977$sFQex)))) g$C$17689$sFQex g$V$17690$sFQex))) g$t$9977$sFQex '((#(scheme-id unquote-splicing) . each-any) . any)))) g$C$17691$sFQex g$t$9973$sFQex)))) g$C$17692$sFQex g$V$17693$sFQex))) g$t$9973$sFQex '((#(scheme-id unquote) . each-any) . any)))) g$C$17694$sFQex g$t$9970$sFQex)))) g$C$17695$sFQex g$V$17696$sFQex))) g$t$9970$sFQex '(#(scheme-id unquote) any)))) g$C$17697$sFQex g$p$9968$sFQex)))) (g$C$17703$sFQex (case-lambda ((g$C$17702$sFQex g$x$9964$sFQex) ((case-lambda ((g$C$17700$sFQex g$t$9965$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17701$sFQex) ((case-lambda ((g$C$17699$sFQex g$ls/false$9966$sFQex) (if g$ls/false$9966$sFQex (apply g$C$17699$sFQex (case-lambda ((g$C$17698$sFQex g$e$9967$sFQex) (g$quasi$9963$sFQex g$C$17698$sFQex g$e$9967$sFQex '0))) g$ls/false$9966$sFQex) (g$syntax-violation$9073$sFQex g$C$17699$sFQex '#f '"invalid syntax" g$t$9965$sFQex)))) g$C$17700$sFQex g$V$17701$sFQex))) g$t$9965$sFQex '(_ any)))) g$C$17702$sFQex g$x$9964$sFQex))))))))))))) g$C$17704$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$20912$sFQex))) (library-letrec*-identity 'g$quasiquote-macro$8952$sFQex))) (g$quasisyntax-macro$8953$sFQex g$quasisyntax-macro$12472$sFQex ((case-lambda ((g$C$20913$sFQex) ((case-lambda ((g$C$17829$sFQex) ((case-lambda ((g$C$17828$sFQex g$quasi$10074$sFQex) (begin (set! g$quasi$10074$sFQex (case-lambda ((g$C$17815$sFQex g$p$10088$sFQex g$lev$10089$sFQex) ((case-lambda ((g$C$17813$sFQex g$t$10090$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17814$sFQex) ((case-lambda ((g$C$17812$sFQex g$ls/false$10091$sFQex) (if g$ls/false$10091$sFQex (apply g$C$17812$sFQex (case-lambda ((g$C$17713$sFQex g$p$10092$sFQex) (= (case-lambda ((g$T$17714$sFQex) (if g$T$17714$sFQex (gensym (case-lambda ((g$V$17715$sFQex) ((case-lambda ((g$C$17705$sFQex g$g$10093$sFQex) (list (case-lambda ((g$V$17706$sFQex) (list (case-lambda ((g$V$17707$sFQex) (values g$C$17705$sFQex g$V$17707$sFQex g$V$17706$sFQex g$g$10093$sFQex))) g$g$10093$sFQex))) g$p$10092$sFQex))) g$C$17713$sFQex g$V$17715$sFQex)))) (call-with-values g$C$17713$sFQex (case-lambda ((g$C$17708$sFQex) (- (case-lambda ((g$V$17709$sFQex) (g$quasi$10074$sFQex g$C$17708$sFQex g$p$10092$sFQex g$V$17709$sFQex))) g$lev$10089$sFQex '1))) (case-lambda ((g$C$17712$sFQex g$lhs*$10097$sFQex g$rhs*$10098$sFQex g$p$10099$sFQex) ((case-lambda ((g$C$17710$sFQex g$p$10100$sFQex g$rhs*$10101$sFQex g$lhs*$10102$sFQex) (list (case-lambda ((g$V$17711$sFQex) (values g$C$17710$sFQex g$lhs*$10102$sFQex g$rhs*$10101$sFQex g$V$17711$sFQex))) 'unsyntax g$p$10100$sFQex))) g$C$17712$sFQex g$p$10099$sFQex g$rhs*$10098$sFQex g$lhs*$10097$sFQex))))))) g$lev$10089$sFQex '0))) g$ls/false$10091$sFQex) ((case-lambda ((g$C$17810$sFQex g$t$10103$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17811$sFQex) ((case-lambda ((g$C$17807$sFQex g$ls/false$10104$sFQex) ((case-lambda ((g$J$17809$sFQex) (if g$ls/false$10104$sFQex (apply g$J$17809$sFQex (case-lambda ((g$C$17716$sFQex) (= g$C$17716$sFQex g$lev$10089$sFQex '0))) g$ls/false$10104$sFQex) (g$J$17809$sFQex '#f)))) (case-lambda ((g$T$17808$sFQex) (if g$T$17808$sFQex (apply g$C$17807$sFQex (case-lambda ((g$C$17717$sFQex) (g$syntax-violation$9073$sFQex g$C$17717$sFQex '#f '"incorrect use of unsyntax" g$p$10088$sFQex))) g$ls/false$10104$sFQex) ((case-lambda ((g$C$17805$sFQex g$t$10105$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17806$sFQex) ((case-lambda ((g$C$17804$sFQex g$ls/false$10106$sFQex) (if g$ls/false$10106$sFQex (apply g$C$17804$sFQex (case-lambda ((g$C$17736$sFQex g$p*$10107$sFQex g$q$10108$sFQex) (call-with-values g$C$17736$sFQex (case-lambda ((g$C$17718$sFQex) (g$quasi$10074$sFQex g$C$17718$sFQex g$q$10108$sFQex g$lev$10089$sFQex))) (case-lambda ((g$C$17735$sFQex g$lhs*$10112$sFQex g$rhs*$10113$sFQex g$q$10114$sFQex) ((case-lambda ((g$C$17732$sFQex g$q$10115$sFQex g$rhs*$10116$sFQex g$lhs*$10117$sFQex) (= (case-lambda ((g$T$17733$sFQex) (if g$T$17733$sFQex (g$map$5680$sFQex (case-lambda ((g$V$17734$sFQex) ((case-lambda ((g$C$17719$sFQex g$g*$10118$sFQex) (append (case-lambda ((g$V$17720$sFQex) (append (case-lambda ((g$V$17721$sFQex) (append (case-lambda ((g$V$17722$sFQex) (values g$C$17719$sFQex g$V$17722$sFQex g$V$17721$sFQex g$V$17720$sFQex))) g$g*$10118$sFQex g$lhs*$10117$sFQex))) g$p*$10107$sFQex g$rhs*$10116$sFQex))) g$g*$10118$sFQex g$q$10115$sFQex))) g$C$17732$sFQex g$V$17734$sFQex))) (case-lambda ((g$C$17723$sFQex g$x$10119$sFQex) (gensym g$C$17723$sFQex))) g$p*$10107$sFQex) (call-with-values g$C$17732$sFQex (case-lambda ((g$C$17724$sFQex) (- (case-lambda ((g$V$17725$sFQex) (g$quasi$10074$sFQex g$C$17724$sFQex g$p*$10107$sFQex g$V$17725$sFQex))) g$lev$10089$sFQex '1))) (case-lambda ((g$C$17731$sFQex g$lhs2*$10123$sFQex g$rhs2*$10124$sFQex g$p*$10125$sFQex) ((case-lambda ((g$C$17726$sFQex g$p*$10126$sFQex g$rhs2*$10127$sFQex g$lhs2*$10128$sFQex) (cons (case-lambda ((g$V$17727$sFQex) (cons (case-lambda ((g$V$17728$sFQex) (append (case-lambda ((g$V$17729$sFQex) (append (case-lambda ((g$V$17730$sFQex) (values g$C$17726$sFQex g$V$17730$sFQex g$V$17729$sFQex g$V$17728$sFQex))) g$lhs2*$10128$sFQex g$lhs*$10117$sFQex))) g$rhs2*$10127$sFQex g$rhs*$10116$sFQex))) g$V$17727$sFQex g$q$10115$sFQex))) 'unsyntax g$p*$10126$sFQex))) g$C$17731$sFQex g$p*$10125$sFQex g$rhs2*$10124$sFQex g$lhs2*$10123$sFQex))))))) g$lev$10089$sFQex '0))) g$C$17735$sFQex g$q$10114$sFQex g$rhs*$10113$sFQex g$lhs*$10112$sFQex)))))) g$ls/false$10106$sFQex) ((case-lambda ((g$C$17802$sFQex g$t$10129$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17803$sFQex) ((case-lambda ((g$C$17801$sFQex g$ls/false$10130$sFQex) (if g$ls/false$10130$sFQex (apply g$C$17801$sFQex (case-lambda ((g$C$17760$sFQex g$p*$10131$sFQex g$q$10132$sFQex) (call-with-values g$C$17760$sFQex (case-lambda ((g$C$17737$sFQex) (g$quasi$10074$sFQex g$C$17737$sFQex g$q$10132$sFQex g$lev$10089$sFQex))) (case-lambda ((g$C$17759$sFQex g$lhs*$10136$sFQex g$rhs*$10137$sFQex g$q$10138$sFQex) ((case-lambda ((g$C$17756$sFQex g$q$10139$sFQex g$rhs*$10140$sFQex g$lhs*$10141$sFQex) (= (case-lambda ((g$T$17757$sFQex) (if g$T$17757$sFQex (g$map$5680$sFQex (case-lambda ((g$V$17758$sFQex) ((case-lambda ((g$C$17740$sFQex g$g*$10142$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$17741$sFQex) (apply (case-lambda ((g$V$17742$sFQex) (append (case-lambda ((g$V$17743$sFQex) (append (case-lambda ((g$V$17744$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$17745$sFQex) (append (case-lambda ((g$V$17746$sFQex) (values g$C$17740$sFQex g$V$17746$sFQex g$V$17744$sFQex g$V$17743$sFQex))) g$V$17745$sFQex g$lhs*$10141$sFQex))) (case-lambda ((g$C$17738$sFQex g$g$10143$sFQex) (cons g$C$17738$sFQex g$g$10143$sFQex '(...)))) g$g*$10142$sFQex))) g$p*$10131$sFQex g$rhs*$10140$sFQex))) g$V$17742$sFQex g$q$10139$sFQex))) append g$V$17741$sFQex))) (case-lambda ((g$C$17739$sFQex g$g$10144$sFQex) (cons g$C$17739$sFQex g$g$10144$sFQex '(...)))) g$g*$10142$sFQex))) g$C$17756$sFQex g$V$17758$sFQex))) (case-lambda ((g$C$17747$sFQex g$x$10145$sFQex) (gensym g$C$17747$sFQex))) g$p*$10131$sFQex) (call-with-values g$C$17756$sFQex (case-lambda ((g$C$17748$sFQex) (- (case-lambda ((g$V$17749$sFQex) (g$quasi$10074$sFQex g$C$17748$sFQex g$p*$10131$sFQex g$V$17749$sFQex))) g$lev$10089$sFQex '1))) (case-lambda ((g$C$17755$sFQex g$lhs2*$10149$sFQex g$rhs2*$10150$sFQex g$p*$10151$sFQex) ((case-lambda ((g$C$17750$sFQex g$p*$10152$sFQex g$rhs2*$10153$sFQex g$lhs2*$10154$sFQex) (cons (case-lambda ((g$V$17751$sFQex) (cons (case-lambda ((g$V$17752$sFQex) (append (case-lambda ((g$V$17753$sFQex) (append (case-lambda ((g$V$17754$sFQex) (values g$C$17750$sFQex g$V$17754$sFQex g$V$17753$sFQex g$V$17752$sFQex))) g$lhs2*$10154$sFQex g$lhs*$10141$sFQex))) g$rhs2*$10153$sFQex g$rhs*$10140$sFQex))) g$V$17751$sFQex g$q$10139$sFQex))) 'unsyntax-splicing g$p*$10152$sFQex))) g$C$17755$sFQex g$p*$10151$sFQex g$rhs2*$10150$sFQex g$lhs2*$10149$sFQex))))))) g$lev$10089$sFQex '0))) g$C$17759$sFQex g$q$10138$sFQex g$rhs*$10137$sFQex g$lhs*$10136$sFQex)))))) g$ls/false$10130$sFQex) ((case-lambda ((g$C$17799$sFQex g$t$10155$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17800$sFQex) ((case-lambda ((g$C$17796$sFQex g$ls/false$10156$sFQex) ((case-lambda ((g$J$17798$sFQex) (if g$ls/false$10156$sFQex (apply g$J$17798$sFQex (case-lambda ((g$C$17761$sFQex) (= g$C$17761$sFQex g$lev$10089$sFQex '0))) g$ls/false$10156$sFQex) (g$J$17798$sFQex '#f)))) (case-lambda ((g$T$17797$sFQex) (if g$T$17797$sFQex (apply g$C$17796$sFQex (case-lambda ((g$C$17762$sFQex) (g$syntax-violation$9073$sFQex g$C$17762$sFQex '#f '"incorrect use of unsyntax-splicing" g$p$10088$sFQex))) g$ls/false$10156$sFQex) ((case-lambda ((g$C$17794$sFQex g$t$10157$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17795$sFQex) ((case-lambda ((g$C$17793$sFQex g$ls/false$10158$sFQex) (if g$ls/false$10158$sFQex (apply g$C$17793$sFQex (case-lambda ((g$C$17768$sFQex g$p$10159$sFQex) (call-with-values g$C$17768$sFQex (case-lambda ((g$C$17763$sFQex) (+ (case-lambda ((g$V$17764$sFQex) (g$quasi$10074$sFQex g$C$17763$sFQex g$p$10159$sFQex g$V$17764$sFQex))) g$lev$10089$sFQex '1))) (case-lambda ((g$C$17767$sFQex g$lhs*$10163$sFQex g$rhs*$10164$sFQex g$p$10165$sFQex) ((case-lambda ((g$C$17765$sFQex g$p$10166$sFQex g$rhs*$10167$sFQex g$lhs*$10168$sFQex) (list (case-lambda ((g$V$17766$sFQex) (values g$C$17765$sFQex g$lhs*$10168$sFQex g$rhs*$10167$sFQex g$V$17766$sFQex))) 'quasisyntax g$p$10166$sFQex))) g$C$17767$sFQex g$p$10165$sFQex g$rhs*$10164$sFQex g$lhs*$10163$sFQex)))))) g$ls/false$10158$sFQex) ((case-lambda ((g$C$17791$sFQex g$t$10169$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17792$sFQex) ((case-lambda ((g$C$17790$sFQex g$ls/false$10170$sFQex) (if g$ls/false$10170$sFQex (apply g$C$17790$sFQex (case-lambda ((g$C$17777$sFQex g$p$10171$sFQex g$q$10172$sFQex) (call-with-values g$C$17777$sFQex (case-lambda ((g$C$17769$sFQex) (g$quasi$10074$sFQex g$C$17769$sFQex g$p$10171$sFQex g$lev$10089$sFQex))) (case-lambda ((g$C$17776$sFQex g$lhs*$10179$sFQex g$rhs*$10180$sFQex g$p$10181$sFQex) (call-with-values g$C$17776$sFQex (case-lambda ((g$C$17770$sFQex) (g$quasi$10074$sFQex g$C$17770$sFQex g$q$10172$sFQex g$lev$10089$sFQex))) (case-lambda ((g$C$17775$sFQex g$lhs2*$10182$sFQex g$rhs2*$10183$sFQex g$q$10184$sFQex) ((case-lambda ((g$C$17771$sFQex g$q$10185$sFQex g$rhs2*$10186$sFQex g$lhs2*$10187$sFQex g$p$10188$sFQex g$rhs*$10189$sFQex g$lhs*$10190$sFQex) (cons (case-lambda ((g$V$17772$sFQex) (append (case-lambda ((g$V$17773$sFQex) (append (case-lambda ((g$V$17774$sFQex) (values g$C$17771$sFQex g$V$17774$sFQex g$V$17773$sFQex g$V$17772$sFQex))) g$lhs2*$10187$sFQex g$lhs*$10190$sFQex))) g$rhs2*$10186$sFQex g$rhs*$10189$sFQex))) g$p$10188$sFQex g$q$10185$sFQex))) g$C$17775$sFQex g$q$10184$sFQex g$rhs2*$10183$sFQex g$lhs2*$10182$sFQex g$p$10181$sFQex g$rhs*$10180$sFQex g$lhs*$10179$sFQex))))))))) g$ls/false$10170$sFQex) ((case-lambda ((g$C$17788$sFQex g$t$10191$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17789$sFQex) ((case-lambda ((g$C$17787$sFQex g$ls/false$10192$sFQex) (if g$ls/false$10192$sFQex (apply g$C$17787$sFQex (case-lambda ((g$C$17782$sFQex g$x*$10193$sFQex) (call-with-values g$C$17782$sFQex (case-lambda ((g$C$17778$sFQex) (g$quasi$10074$sFQex g$C$17778$sFQex g$x*$10193$sFQex g$lev$10089$sFQex))) (case-lambda ((g$C$17781$sFQex g$lhs*$10197$sFQex g$rhs*$10198$sFQex g$x*$10199$sFQex) ((case-lambda ((g$C$17779$sFQex g$x*$10200$sFQex g$rhs*$10201$sFQex g$lhs*$10202$sFQex) (g$list->vector$6163$sFQex (case-lambda ((g$V$17780$sFQex) (values g$C$17779$sFQex g$lhs*$10202$sFQex g$rhs*$10201$sFQex g$V$17780$sFQex))) g$x*$10200$sFQex))) g$C$17781$sFQex g$x*$10199$sFQex g$rhs*$10198$sFQex g$lhs*$10197$sFQex)))))) g$ls/false$10192$sFQex) ((case-lambda ((g$C$17785$sFQex g$t$10203$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17786$sFQex) ((case-lambda ((g$C$17784$sFQex g$ls/false$10204$sFQex) (if g$ls/false$10204$sFQex (apply g$C$17784$sFQex (case-lambda ((g$C$17783$sFQex) (values g$C$17783$sFQex '() '() g$p$10088$sFQex))) g$ls/false$10204$sFQex) (g$syntax-violation$9073$sFQex g$C$17784$sFQex '#f '"invalid syntax" g$t$10203$sFQex)))) g$C$17785$sFQex g$V$17786$sFQex))) g$t$10203$sFQex '_))) g$C$17787$sFQex g$t$10191$sFQex)))) g$C$17788$sFQex g$V$17789$sFQex))) g$t$10191$sFQex '#(vector each-any)))) g$C$17790$sFQex g$t$10169$sFQex)))) g$C$17791$sFQex g$V$17792$sFQex))) g$t$10169$sFQex '(any . any)))) g$C$17793$sFQex g$t$10157$sFQex)))) g$C$17794$sFQex g$V$17795$sFQex))) g$t$10157$sFQex '(#(scheme-id quasisyntax) any)))) g$C$17796$sFQex g$t$10155$sFQex))))))) g$C$17799$sFQex g$V$17800$sFQex))) g$t$10155$sFQex '#(scheme-id unsyntax-splicing)))) g$C$17801$sFQex g$t$10129$sFQex)))) g$C$17802$sFQex g$V$17803$sFQex))) g$t$10129$sFQex '((#(scheme-id unsyntax-splicing) . each-any) . any)))) g$C$17804$sFQex g$t$10105$sFQex)))) g$C$17805$sFQex g$V$17806$sFQex))) g$t$10105$sFQex '((#(scheme-id unsyntax) . each-any) . any)))) g$C$17807$sFQex g$t$10103$sFQex))))))) g$C$17810$sFQex g$V$17811$sFQex))) g$t$10103$sFQex '#(scheme-id unsyntax)))) g$C$17812$sFQex g$t$10090$sFQex)))) g$C$17813$sFQex g$V$17814$sFQex))) g$t$10090$sFQex '(#(scheme-id unsyntax) any)))) g$C$17815$sFQex g$p$10088$sFQex)))) (g$C$17828$sFQex (case-lambda ((g$C$17827$sFQex g$x$10075$sFQex) ((case-lambda ((g$C$17825$sFQex g$t$10076$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17826$sFQex) ((case-lambda ((g$C$17824$sFQex g$ls/false$10077$sFQex) (if g$ls/false$10077$sFQex (apply g$C$17824$sFQex (case-lambda ((g$C$17823$sFQex g$e$10078$sFQex) (call-with-values g$C$17823$sFQex (case-lambda ((g$C$17816$sFQex) (g$quasi$10074$sFQex g$C$17816$sFQex g$e$10078$sFQex '0))) (case-lambda ((g$C$17822$sFQex g$lhs*$10082$sFQex g$rhs*$10083$sFQex g$v$10084$sFQex) ((case-lambda ((g$C$17817$sFQex g$v$10085$sFQex g$rhs*$10086$sFQex g$lhs*$10087$sFQex) (list (case-lambda ((g$V$17818$sFQex) (list (case-lambda ((g$V$17819$sFQex) (cons (case-lambda ((g$V$17820$sFQex) (list (case-lambda ((g$V$17821$sFQex) (g$bless$8924$sFQex g$C$17817$sFQex g$V$17821$sFQex))) 'syntax-case g$V$17820$sFQex '() g$V$17819$sFQex))) 'list g$rhs*$10086$sFQex))) g$lhs*$10087$sFQex g$V$17818$sFQex))) 'syntax g$v$10085$sFQex))) g$C$17822$sFQex g$v$10084$sFQex g$rhs*$10083$sFQex g$lhs*$10082$sFQex)))))) g$ls/false$10077$sFQex) (g$syntax-violation$9073$sFQex g$C$17824$sFQex '#f '"invalid syntax" g$t$10076$sFQex)))) g$C$17825$sFQex g$V$17826$sFQex))) g$t$10076$sFQex '(_ any)))) g$C$17827$sFQex g$x$10075$sFQex))))))) g$C$17829$sFQex uninitialized))) g$C$20913$sFQex))) (library-letrec*-identity 'g$quasisyntax-macro$8953$sFQex))) (g$define-struct-macro$8954$sFQex g$define-struct-macro$12473$sFQex ((case-lambda ((g$C$20914$sFQex) (g$C$20914$sFQex (case-lambda ((g$C$17830$sFQex g$stx$10205$sFQex) (g$syntax-violation$9073$sFQex g$C$17830$sFQex '#f '"define-struct not supported" g$stx$10205$sFQex)))))) (library-letrec*-identity 'g$define-struct-macro$8954$sFQex))) (g$define-record-type-macro$8955$sFQex g$define-record-type-macro$12474$sFQex ((case-lambda ((g$C$20915$sFQex) (g$C$20915$sFQex (case-lambda ((g$C$18220$sFQex g$x$10206$sFQex) ((case-lambda ((g$C$18219$sFQex g$id$10207$sFQex g$get-record-name$10208$sFQex g$get-record-constructor-name$10209$sFQex g$get-record-predicate-name$10210$sFQex g$get-clause$10211$sFQex g$foo-rtd-code$10212$sFQex g$parent-rtd-code$10213$sFQex g$parent-rcd-code$10214$sFQex g$foo-rcd-code$10215$sFQex g$get-protocol-code$10216$sFQex g$get-fields$10217$sFQex g$get-mutator-indices$10218$sFQex g$get-mutators$10219$sFQex g$get-accessors$10220$sFQex g$enumerate$10221$sFQex g$do-define-record$10222$sFQex g$verify-clauses$10223$sFQex) (begin (set! g$id$10207$sFQex (case-lambda ((g$C$17834$sFQex g$ctxt$10459$sFQex . g$str*$10460$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$17835$sFQex) (apply (case-lambda ((g$V$17836$sFQex) (string->symbol (case-lambda ((g$V$17837$sFQex) (g$datum->syntax$9075$sFQex g$C$17834$sFQex g$ctxt$10459$sFQex g$V$17837$sFQex))) g$V$17836$sFQex))) string-append g$V$17835$sFQex))) (case-lambda ((g$C$17831$sFQex g$x$10461$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$17832$sFQex) (if g$T$17832$sFQex (symbol->string g$C$17831$sFQex g$x$10461$sFQex) (string? (case-lambda ((g$T$17833$sFQex) (if g$T$17833$sFQex (g$C$17831$sFQex g$x$10461$sFQex) (g$assertion-violation$6456$sFQex g$C$17831$sFQex 'define-record-type '"BUG")))) g$x$10461$sFQex)))) g$x$10461$sFQex))) g$str*$10460$sFQex)))) (begin (set! g$get-record-name$10208$sFQex (case-lambda ((g$C$17846$sFQex g$spec$10450$sFQex) ((case-lambda ((g$C$17844$sFQex g$t$10451$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17845$sFQex) ((case-lambda ((g$C$17843$sFQex g$ls/false$10452$sFQex) (if g$ls/false$10452$sFQex (apply g$C$17843$sFQex (case-lambda ((g$C$17838$sFQex g$foo$10453$sFQex g$make-foo$10454$sFQex g$foo?$10455$sFQex) (g$C$17838$sFQex g$foo$10453$sFQex))) g$ls/false$10452$sFQex) ((case-lambda ((g$C$17841$sFQex g$t$10456$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17842$sFQex) ((case-lambda ((g$C$17840$sFQex g$ls/false$10457$sFQex) (if g$ls/false$10457$sFQex (apply g$C$17840$sFQex (case-lambda ((g$C$17839$sFQex g$foo$10458$sFQex) (g$C$17839$sFQex g$foo$10458$sFQex))) g$ls/false$10457$sFQex) (g$syntax-violation$9073$sFQex g$C$17840$sFQex '#f '"invalid syntax" g$t$10456$sFQex)))) g$C$17841$sFQex g$V$17842$sFQex))) g$t$10456$sFQex 'any))) g$C$17843$sFQex g$t$10451$sFQex)))) g$C$17844$sFQex g$V$17845$sFQex))) g$t$10451$sFQex '(any any any)))) g$C$17846$sFQex g$spec$10450$sFQex)))) (begin (set! g$get-record-constructor-name$10209$sFQex (case-lambda ((g$C$17859$sFQex g$spec$10440$sFQex) ((case-lambda ((g$C$17857$sFQex g$t$10441$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17858$sFQex) ((case-lambda ((g$C$17856$sFQex g$ls/false$10442$sFQex) (if g$ls/false$10442$sFQex (apply g$C$17856$sFQex (case-lambda ((g$C$17847$sFQex g$foo$10443$sFQex g$make-foo$10444$sFQex g$foo?$10445$sFQex) (g$C$17847$sFQex g$make-foo$10444$sFQex))) g$ls/false$10442$sFQex) ((case-lambda ((g$C$17854$sFQex g$t$10446$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17855$sFQex) ((case-lambda ((g$C$17851$sFQex g$ls/false$10447$sFQex) ((case-lambda ((g$J$17853$sFQex) (if g$ls/false$10447$sFQex (apply g$J$17853$sFQex (case-lambda ((g$C$17848$sFQex g$foo$10448$sFQex) (g$id?$8682$sFQex g$C$17848$sFQex g$foo$10448$sFQex))) g$ls/false$10447$sFQex) (g$J$17853$sFQex '#f)))) (case-lambda ((g$T$17852$sFQex) (if g$T$17852$sFQex (apply g$C$17851$sFQex (case-lambda ((g$C$17849$sFQex g$foo$10449$sFQex) (g$stx->datum$8693$sFQex (case-lambda ((g$V$17850$sFQex) (g$id$10207$sFQex g$C$17849$sFQex g$foo$10449$sFQex '"make-" g$V$17850$sFQex))) g$foo$10449$sFQex))) g$ls/false$10447$sFQex) (g$syntax-violation$9073$sFQex g$C$17851$sFQex '#f '"invalid syntax" g$t$10446$sFQex))))))) g$C$17854$sFQex g$V$17855$sFQex))) g$t$10446$sFQex 'any))) g$C$17856$sFQex g$t$10441$sFQex)))) g$C$17857$sFQex g$V$17858$sFQex))) g$t$10441$sFQex '(any any any)))) g$C$17859$sFQex g$spec$10440$sFQex)))) (begin (set! g$get-record-predicate-name$10210$sFQex (case-lambda ((g$C$17872$sFQex g$spec$10430$sFQex) ((case-lambda ((g$C$17870$sFQex g$t$10431$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17871$sFQex) ((case-lambda ((g$C$17869$sFQex g$ls/false$10432$sFQex) (if g$ls/false$10432$sFQex (apply g$C$17869$sFQex (case-lambda ((g$C$17860$sFQex g$foo$10433$sFQex g$make-foo$10434$sFQex g$foo?$10435$sFQex) (g$C$17860$sFQex g$foo?$10435$sFQex))) g$ls/false$10432$sFQex) ((case-lambda ((g$C$17867$sFQex g$t$10436$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17868$sFQex) ((case-lambda ((g$C$17864$sFQex g$ls/false$10437$sFQex) ((case-lambda ((g$J$17866$sFQex) (if g$ls/false$10437$sFQex (apply g$J$17866$sFQex (case-lambda ((g$C$17861$sFQex g$foo$10438$sFQex) (g$id?$8682$sFQex g$C$17861$sFQex g$foo$10438$sFQex))) g$ls/false$10437$sFQex) (g$J$17866$sFQex '#f)))) (case-lambda ((g$T$17865$sFQex) (if g$T$17865$sFQex (apply g$C$17864$sFQex (case-lambda ((g$C$17862$sFQex g$foo$10439$sFQex) (g$stx->datum$8693$sFQex (case-lambda ((g$V$17863$sFQex) (g$id$10207$sFQex g$C$17862$sFQex g$foo$10439$sFQex g$V$17863$sFQex '"?"))) g$foo$10439$sFQex))) g$ls/false$10437$sFQex) (g$syntax-violation$9073$sFQex g$C$17864$sFQex '#f '"invalid syntax" g$t$10436$sFQex))))))) g$C$17867$sFQex g$V$17868$sFQex))) g$t$10436$sFQex 'any))) g$C$17869$sFQex g$t$10431$sFQex)))) g$C$17870$sFQex g$V$17871$sFQex))) g$t$10431$sFQex '(any any any)))) g$C$17872$sFQex g$spec$10430$sFQex)))) (begin (set! g$get-clause$10211$sFQex (case-lambda ((g$C$17883$sFQex g$id$10421$sFQex g$ls$10422$sFQex) ((case-lambda ((g$C$17881$sFQex g$t$10423$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17882$sFQex) ((case-lambda ((g$C$17880$sFQex g$ls/false$10424$sFQex) (if g$ls/false$10424$sFQex (apply g$C$17880$sFQex (case-lambda ((g$C$17873$sFQex) (g$C$17873$sFQex '#f))) g$ls/false$10424$sFQex) ((case-lambda ((g$C$17878$sFQex g$t$10425$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17879$sFQex) ((case-lambda ((g$C$17877$sFQex g$ls/false$10426$sFQex) (if g$ls/false$10426$sFQex (apply g$C$17877$sFQex (case-lambda ((g$C$17874$sFQex g$x$10427$sFQex g$rest$10428$sFQex g$ls$10429$sFQex) (g$bless$8924$sFQex (case-lambda ((g$V$17875$sFQex) (g$free-id=?$8686$sFQex (case-lambda ((g$T$17876$sFQex) (if g$T$17876$sFQex (cons g$C$17874$sFQex g$x$10427$sFQex g$rest$10428$sFQex) (g$get-clause$10211$sFQex g$C$17874$sFQex g$id$10421$sFQex g$ls$10429$sFQex)))) g$V$17875$sFQex g$x$10427$sFQex))) g$id$10421$sFQex))) g$ls/false$10426$sFQex) (g$syntax-violation$9073$sFQex g$C$17877$sFQex '#f '"invalid syntax" g$t$10425$sFQex)))) g$C$17878$sFQex g$V$17879$sFQex))) g$t$10425$sFQex '((any . any) . any)))) g$C$17880$sFQex g$t$10423$sFQex)))) g$C$17881$sFQex g$V$17882$sFQex))) g$t$10423$sFQex '()))) g$C$17883$sFQex g$ls$10422$sFQex)))) (begin (set! g$foo-rtd-code$10212$sFQex (case-lambda ((g$C$17949$sFQex g$name$10380$sFQex g$clause*$10381$sFQex g$parent-rtd-code$10382$sFQex) ((case-lambda ((g$C$17940$sFQex g$convert-field-spec*$10383$sFQex) (begin (set! g$convert-field-spec*$10383$sFQex (case-lambda ((g$C$17897$sFQex g$ls$10408$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$17898$sFQex) (g$list->vector$6163$sFQex g$C$17897$sFQex g$V$17898$sFQex))) (case-lambda ((g$C$17896$sFQex g$x$10409$sFQex) ((case-lambda ((g$C$17894$sFQex g$t$10410$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17895$sFQex) ((case-lambda ((g$C$17893$sFQex g$ls/false$10411$sFQex) (if g$ls/false$10411$sFQex (apply g$C$17893$sFQex (case-lambda ((g$C$17884$sFQex g$name$10412$sFQex g$rest$10413$sFQex) (list g$C$17884$sFQex 'mutable g$name$10412$sFQex))) g$ls/false$10411$sFQex) ((case-lambda ((g$C$17891$sFQex g$t$10414$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17892$sFQex) ((case-lambda ((g$C$17890$sFQex g$ls/false$10415$sFQex) (if g$ls/false$10415$sFQex (apply g$C$17890$sFQex (case-lambda ((g$C$17885$sFQex g$name$10416$sFQex g$rest$10417$sFQex) (list g$C$17885$sFQex 'immutable g$name$10416$sFQex))) g$ls/false$10415$sFQex) ((case-lambda ((g$C$17888$sFQex g$t$10418$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17889$sFQex) ((case-lambda ((g$C$17887$sFQex g$ls/false$10419$sFQex) (if g$ls/false$10419$sFQex (apply g$C$17887$sFQex (case-lambda ((g$C$17886$sFQex g$name$10420$sFQex) (list g$C$17886$sFQex 'immutable g$name$10420$sFQex))) g$ls/false$10419$sFQex) (g$syntax-violation$9073$sFQex g$C$17887$sFQex '#f '"invalid syntax" g$t$10418$sFQex)))) g$C$17888$sFQex g$V$17889$sFQex))) g$t$10418$sFQex 'any))) g$C$17890$sFQex g$t$10414$sFQex)))) g$C$17891$sFQex g$V$17892$sFQex))) g$t$10414$sFQex '(#(scheme-id immutable) any . any)))) g$C$17893$sFQex g$t$10410$sFQex)))) g$C$17894$sFQex g$V$17895$sFQex))) g$t$10410$sFQex '(#(scheme-id mutable) any . any)))) g$C$17896$sFQex g$x$10409$sFQex))) g$ls$10408$sFQex)))) (g$get-clause$10211$sFQex (case-lambda ((g$V$17941$sFQex) ((case-lambda ((g$C$17938$sFQex g$t$10403$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17939$sFQex) ((case-lambda ((g$C$17937$sFQex g$ls/false$10404$sFQex) (if g$ls/false$10404$sFQex (apply g$C$17937$sFQex (case-lambda ((g$C$17931$sFQex g$field-spec*$10405$sFQex) (g$convert-field-spec*$10383$sFQex (case-lambda ((g$V$17932$sFQex) (list g$C$17931$sFQex 'quote g$V$17932$sFQex))) g$field-spec*$10405$sFQex))) g$ls/false$10404$sFQex) ((case-lambda ((g$C$17935$sFQex g$t$10406$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17936$sFQex) ((case-lambda ((g$C$17934$sFQex g$ls/false$10407$sFQex) (if g$ls/false$10407$sFQex (apply g$C$17934$sFQex (case-lambda ((g$C$17933$sFQex) (g$C$17933$sFQex ''#()))) g$ls/false$10407$sFQex) (g$syntax-violation$9073$sFQex g$C$17934$sFQex '#f '"invalid syntax" g$t$10406$sFQex)))) g$C$17935$sFQex g$V$17936$sFQex))) g$t$10406$sFQex '_))) g$C$17937$sFQex g$t$10403$sFQex)))) g$C$17938$sFQex g$V$17939$sFQex))) g$t$10403$sFQex '(_ . each-any)))) (case-lambda ((g$V$17942$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17943$sFQex) ((case-lambda ((g$C$17929$sFQex g$t$10399$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17930$sFQex) ((case-lambda ((g$C$17928$sFQex g$ls/false$10400$sFQex) (if g$ls/false$10400$sFQex (apply g$C$17928$sFQex (case-lambda ((g$C$17923$sFQex) (g$C$17923$sFQex '#t))) g$ls/false$10400$sFQex) ((case-lambda ((g$C$17926$sFQex g$t$10401$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17927$sFQex) ((case-lambda ((g$C$17925$sFQex g$ls/false$10402$sFQex) (if g$ls/false$10402$sFQex (apply g$C$17925$sFQex (case-lambda ((g$C$17924$sFQex) (g$C$17924$sFQex '#f))) g$ls/false$10402$sFQex) (g$syntax-violation$9073$sFQex g$C$17925$sFQex '#f '"invalid syntax" g$t$10401$sFQex)))) g$C$17926$sFQex g$V$17927$sFQex))) g$t$10401$sFQex '_))) g$C$17928$sFQex g$t$10399$sFQex)))) g$C$17929$sFQex g$V$17930$sFQex))) g$t$10399$sFQex '(_ #(atom #t))))) (case-lambda ((g$V$17944$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17945$sFQex) ((case-lambda ((g$C$17921$sFQex g$t$10395$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17922$sFQex) ((case-lambda ((g$C$17920$sFQex g$ls/false$10396$sFQex) (if g$ls/false$10396$sFQex (apply g$C$17920$sFQex (case-lambda ((g$C$17915$sFQex) (g$C$17915$sFQex '#t))) g$ls/false$10396$sFQex) ((case-lambda ((g$C$17918$sFQex g$t$10397$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17919$sFQex) ((case-lambda ((g$C$17917$sFQex g$ls/false$10398$sFQex) (if g$ls/false$10398$sFQex (apply g$C$17917$sFQex (case-lambda ((g$C$17916$sFQex) (g$C$17916$sFQex '#f))) g$ls/false$10398$sFQex) (g$syntax-violation$9073$sFQex g$C$17917$sFQex '#f '"invalid syntax" g$t$10397$sFQex)))) g$C$17918$sFQex g$V$17919$sFQex))) g$t$10397$sFQex '_))) g$C$17920$sFQex g$t$10395$sFQex)))) g$C$17921$sFQex g$V$17922$sFQex))) g$t$10395$sFQex '(_ #(atom #t))))) (case-lambda ((g$V$17946$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17947$sFQex) ((case-lambda ((g$C$17913$sFQex g$t$10388$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17914$sFQex) ((case-lambda ((g$C$17912$sFQex g$ls/false$10389$sFQex) (if g$ls/false$10389$sFQex (apply g$C$17912$sFQex (case-lambda ((g$C$17902$sFQex) (gensym (case-lambda ((g$V$17903$sFQex) (list g$C$17902$sFQex 'quote g$V$17903$sFQex)))))) g$ls/false$10389$sFQex) ((case-lambda ((g$C$17910$sFQex g$t$10390$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17911$sFQex) ((case-lambda ((g$C$17909$sFQex g$ls/false$10391$sFQex) (if g$ls/false$10391$sFQex (apply g$C$17909$sFQex (case-lambda ((g$C$17904$sFQex g$uid$10392$sFQex) (list g$C$17904$sFQex 'quote g$uid$10392$sFQex))) g$ls/false$10391$sFQex) ((case-lambda ((g$C$17907$sFQex g$t$10393$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17908$sFQex) ((case-lambda ((g$C$17906$sFQex g$ls/false$10394$sFQex) (if g$ls/false$10394$sFQex (apply g$C$17906$sFQex (case-lambda ((g$C$17905$sFQex) (g$C$17905$sFQex '#f))) g$ls/false$10394$sFQex) (g$syntax-violation$9073$sFQex g$C$17906$sFQex '#f '"invalid syntax" g$t$10393$sFQex)))) g$C$17907$sFQex g$V$17908$sFQex))) g$t$10393$sFQex '_))) g$C$17909$sFQex g$t$10390$sFQex)))) g$C$17910$sFQex g$V$17911$sFQex))) g$t$10390$sFQex '(_ any)))) g$C$17912$sFQex g$t$10388$sFQex)))) g$C$17913$sFQex g$V$17914$sFQex))) g$t$10388$sFQex '(_)))) (case-lambda ((g$V$17948$sFQex) ((case-lambda ((g$C$17899$sFQex g$uid-code$10384$sFQex g$sealed?$10385$sFQex g$opaque?$10386$sFQex g$fields$10387$sFQex) (list (case-lambda ((g$V$17900$sFQex) (list (case-lambda ((g$V$17901$sFQex) (g$bless$8924$sFQex g$C$17899$sFQex g$V$17901$sFQex))) 'make-record-type-descriptor g$V$17900$sFQex g$parent-rtd-code$10382$sFQex g$uid-code$10384$sFQex g$sealed?$10385$sFQex g$opaque?$10386$sFQex g$fields$10387$sFQex))) 'quote g$name$10380$sFQex))) g$C$17940$sFQex g$V$17948$sFQex g$V$17946$sFQex g$V$17944$sFQex g$V$17942$sFQex))) g$V$17947$sFQex))) 'nongenerative g$clause*$10381$sFQex))) g$V$17945$sFQex))) 'sealed g$clause*$10381$sFQex))) g$V$17943$sFQex))) 'opaque g$clause*$10381$sFQex))) g$V$17941$sFQex))) 'fields g$clause*$10381$sFQex)))) g$C$17949$sFQex uninitialized)))) (begin (set! g$parent-rtd-code$10213$sFQex (case-lambda ((g$C$17967$sFQex g$clause*$10368$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17968$sFQex) ((case-lambda ((g$C$17965$sFQex g$t$10369$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17966$sFQex) ((case-lambda ((g$C$17964$sFQex g$ls/false$10370$sFQex) (if g$ls/false$10370$sFQex (apply g$C$17964$sFQex (case-lambda ((g$C$17950$sFQex g$name$10371$sFQex) (list g$C$17950$sFQex 'record-type-descriptor g$name$10371$sFQex))) g$ls/false$10370$sFQex) ((case-lambda ((g$C$17962$sFQex g$t$10372$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17963$sFQex) ((case-lambda ((g$C$17961$sFQex g$ls/false$10373$sFQex) (if g$ls/false$10373$sFQex (apply g$C$17961$sFQex (case-lambda ((g$C$17959$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17960$sFQex) ((case-lambda ((g$C$17957$sFQex g$t$10374$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17958$sFQex) ((case-lambda ((g$C$17956$sFQex g$ls/false$10375$sFQex) (if g$ls/false$10375$sFQex (apply g$C$17956$sFQex (case-lambda ((g$C$17951$sFQex g$rtd$10376$sFQex g$rcd$10377$sFQex) (g$C$17951$sFQex g$rtd$10376$sFQex))) g$ls/false$10375$sFQex) ((case-lambda ((g$C$17954$sFQex g$t$10378$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17955$sFQex) ((case-lambda ((g$C$17953$sFQex g$ls/false$10379$sFQex) (if g$ls/false$10379$sFQex (apply g$C$17953$sFQex (case-lambda ((g$C$17952$sFQex) (g$C$17952$sFQex '#f))) g$ls/false$10379$sFQex) (g$syntax-violation$9073$sFQex g$C$17953$sFQex '#f '"invalid syntax" g$t$10378$sFQex)))) g$C$17954$sFQex g$V$17955$sFQex))) g$t$10378$sFQex '#(atom #f)))) g$C$17956$sFQex g$t$10374$sFQex)))) g$C$17957$sFQex g$V$17958$sFQex))) g$t$10374$sFQex '(_ any any)))) g$C$17959$sFQex g$V$17960$sFQex))) 'parent-rtd g$clause*$10368$sFQex))) g$ls/false$10373$sFQex) (g$syntax-violation$9073$sFQex g$C$17961$sFQex '#f '"invalid syntax" g$t$10372$sFQex)))) g$C$17962$sFQex g$V$17963$sFQex))) g$t$10372$sFQex '#(atom #f)))) g$C$17964$sFQex g$t$10369$sFQex)))) g$C$17965$sFQex g$V$17966$sFQex))) g$t$10369$sFQex '(_ any)))) g$C$17967$sFQex g$V$17968$sFQex))) 'parent g$clause*$10368$sFQex)))) (begin (set! g$parent-rcd-code$10214$sFQex (case-lambda ((g$C$17986$sFQex g$clause*$10356$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17987$sFQex) ((case-lambda ((g$C$17984$sFQex g$t$10357$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17985$sFQex) ((case-lambda ((g$C$17983$sFQex g$ls/false$10358$sFQex) (if g$ls/false$10358$sFQex (apply g$C$17983$sFQex (case-lambda ((g$C$17969$sFQex g$name$10359$sFQex) (list g$C$17969$sFQex 'record-constructor-descriptor g$name$10359$sFQex))) g$ls/false$10358$sFQex) ((case-lambda ((g$C$17981$sFQex g$t$10360$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17982$sFQex) ((case-lambda ((g$C$17980$sFQex g$ls/false$10361$sFQex) (if g$ls/false$10361$sFQex (apply g$C$17980$sFQex (case-lambda ((g$C$17978$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17979$sFQex) ((case-lambda ((g$C$17976$sFQex g$t$10362$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17977$sFQex) ((case-lambda ((g$C$17975$sFQex g$ls/false$10363$sFQex) (if g$ls/false$10363$sFQex (apply g$C$17975$sFQex (case-lambda ((g$C$17970$sFQex g$rtd$10364$sFQex g$rcd$10365$sFQex) (g$C$17970$sFQex g$rcd$10365$sFQex))) g$ls/false$10363$sFQex) ((case-lambda ((g$C$17973$sFQex g$t$10366$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17974$sFQex) ((case-lambda ((g$C$17972$sFQex g$ls/false$10367$sFQex) (if g$ls/false$10367$sFQex (apply g$C$17972$sFQex (case-lambda ((g$C$17971$sFQex) (g$C$17971$sFQex '#f))) g$ls/false$10367$sFQex) (g$syntax-violation$9073$sFQex g$C$17972$sFQex '#f '"invalid syntax" g$t$10366$sFQex)))) g$C$17973$sFQex g$V$17974$sFQex))) g$t$10366$sFQex '#(atom #f)))) g$C$17975$sFQex g$t$10362$sFQex)))) g$C$17976$sFQex g$V$17977$sFQex))) g$t$10362$sFQex '(_ any any)))) g$C$17978$sFQex g$V$17979$sFQex))) 'parent-rtd g$clause*$10356$sFQex))) g$ls/false$10361$sFQex) (g$syntax-violation$9073$sFQex g$C$17980$sFQex '#f '"invalid syntax" g$t$10360$sFQex)))) g$C$17981$sFQex g$V$17982$sFQex))) g$t$10360$sFQex '#(atom #f)))) g$C$17983$sFQex g$t$10357$sFQex)))) g$C$17984$sFQex g$V$17985$sFQex))) g$t$10357$sFQex '(_ any)))) g$C$17986$sFQex g$V$17987$sFQex))) 'parent g$clause*$10356$sFQex)))) (begin (set! g$foo-rcd-code$10215$sFQex (case-lambda ((g$C$17988$sFQex g$clause*$10352$sFQex g$foo-rtd$10353$sFQex g$protocol$10354$sFQex g$parent-rcd-code$10355$sFQex) (list g$C$17988$sFQex 'make-record-constructor-descriptor g$foo-rtd$10353$sFQex g$parent-rcd-code$10355$sFQex g$protocol$10354$sFQex)))) (begin (set! g$get-protocol-code$10216$sFQex (case-lambda ((g$C$17997$sFQex g$clause*$10346$sFQex) (g$get-clause$10211$sFQex (case-lambda ((g$V$17998$sFQex) ((case-lambda ((g$C$17995$sFQex g$t$10347$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17996$sFQex) ((case-lambda ((g$C$17994$sFQex g$ls/false$10348$sFQex) (if g$ls/false$10348$sFQex (apply g$C$17994$sFQex (case-lambda ((g$C$17989$sFQex g$expr$10349$sFQex) (g$C$17989$sFQex g$expr$10349$sFQex))) g$ls/false$10348$sFQex) ((case-lambda ((g$C$17992$sFQex g$t$10350$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$17993$sFQex) ((case-lambda ((g$C$17991$sFQex g$ls/false$10351$sFQex) (if g$ls/false$10351$sFQex (apply g$C$17991$sFQex (case-lambda ((g$C$17990$sFQex) (g$C$17990$sFQex '#f))) g$ls/false$10351$sFQex) (g$syntax-violation$9073$sFQex g$C$17991$sFQex '#f '"invalid syntax" g$t$10350$sFQex)))) g$C$17992$sFQex g$V$17993$sFQex))) g$t$10350$sFQex '_))) g$C$17994$sFQex g$t$10347$sFQex)))) g$C$17995$sFQex g$V$17996$sFQex))) g$t$10347$sFQex '(_ any)))) g$C$17997$sFQex g$V$17998$sFQex))) 'protocol g$clause*$10346$sFQex)))) (begin (set! g$get-fields$10217$sFQex (case-lambda ((g$C$18011$sFQex g$clause*$10337$sFQex) ((case-lambda ((g$C$18009$sFQex g$t$10338$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18010$sFQex) ((case-lambda ((g$C$18008$sFQex g$ls/false$10339$sFQex) (if g$ls/false$10339$sFQex (apply g$C$18008$sFQex (case-lambda ((g$C$17999$sFQex) (g$C$17999$sFQex '()))) g$ls/false$10339$sFQex) ((case-lambda ((g$C$18006$sFQex g$t$10340$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18007$sFQex) ((case-lambda ((g$C$18005$sFQex g$ls/false$10341$sFQex) (if g$ls/false$10341$sFQex (apply g$C$18005$sFQex (case-lambda ((g$C$18000$sFQex g$f*$10342$sFQex) (g$C$18000$sFQex g$f*$10342$sFQex))) g$ls/false$10341$sFQex) ((case-lambda ((g$C$18003$sFQex g$t$10343$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18004$sFQex) ((case-lambda ((g$C$18002$sFQex g$ls/false$10344$sFQex) (if g$ls/false$10344$sFQex (apply g$C$18002$sFQex (case-lambda ((g$C$18001$sFQex g$rest$10345$sFQex) (g$get-fields$10217$sFQex g$C$18001$sFQex g$rest$10345$sFQex))) g$ls/false$10344$sFQex) (g$syntax-violation$9073$sFQex g$C$18002$sFQex '#f '"invalid syntax" g$t$10343$sFQex)))) g$C$18003$sFQex g$V$18004$sFQex))) g$t$10343$sFQex '(_ . any)))) g$C$18005$sFQex g$t$10340$sFQex)))) g$C$18006$sFQex g$V$18007$sFQex))) g$t$10340$sFQex '((#(scheme-id fields) . each-any) . _)))) g$C$18008$sFQex g$t$10338$sFQex)))) g$C$18009$sFQex g$V$18010$sFQex))) g$t$10338$sFQex '()))) g$C$18011$sFQex g$clause*$10337$sFQex)))) (begin (set! g$get-mutator-indices$10218$sFQex (case-lambda ((g$C$18031$sFQex g$fields$10325$sFQex) ((case-lambda ((g$C$18030$sFQex g$f$10326$sFQex) ((case-lambda ((g$C$18013$sFQex g$f$18012$sFQex) (begin (set! g$f$10326$sFQex g$f$18012$sFQex) (g$C$18013$sFQex g$f$10326$sFQex)))) g$C$18030$sFQex (case-lambda ((g$C$18029$sFQex g$fields$10327$sFQex g$i$10328$sFQex) ((case-lambda ((g$C$18027$sFQex g$t$10329$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18028$sFQex) ((case-lambda ((g$C$18026$sFQex g$ls/false$10330$sFQex) (if g$ls/false$10330$sFQex (apply g$C$18026$sFQex (case-lambda ((g$C$18014$sFQex) (g$C$18014$sFQex '()))) g$ls/false$10330$sFQex) ((case-lambda ((g$C$18024$sFQex g$t$10331$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18025$sFQex) ((case-lambda ((g$C$18023$sFQex g$ls/false$10332$sFQex) (if g$ls/false$10332$sFQex (apply g$C$18023$sFQex (case-lambda ((g$C$18015$sFQex g$rest$10333$sFQex) (+ (case-lambda ((g$V$18016$sFQex) (g$f$10326$sFQex (case-lambda ((g$V$18017$sFQex) (cons g$C$18015$sFQex g$i$10328$sFQex g$V$18017$sFQex))) g$rest$10333$sFQex g$V$18016$sFQex))) g$i$10328$sFQex '1))) g$ls/false$10332$sFQex) ((case-lambda ((g$C$18021$sFQex g$t$10334$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18022$sFQex) ((case-lambda ((g$C$18020$sFQex g$ls/false$10335$sFQex) (if g$ls/false$10335$sFQex (apply g$C$18020$sFQex (case-lambda ((g$C$18018$sFQex g$rest$10336$sFQex) (+ (case-lambda ((g$V$18019$sFQex) (g$f$10326$sFQex g$C$18018$sFQex g$rest$10336$sFQex g$V$18019$sFQex))) g$i$10328$sFQex '1))) g$ls/false$10335$sFQex) (g$syntax-violation$9073$sFQex g$C$18020$sFQex '#f '"invalid syntax" g$t$10334$sFQex)))) g$C$18021$sFQex g$V$18022$sFQex))) g$t$10334$sFQex '(_ . any)))) g$C$18023$sFQex g$t$10331$sFQex)))) g$C$18024$sFQex g$V$18025$sFQex))) g$t$10331$sFQex '((#(scheme-id mutable) . _) . any)))) g$C$18026$sFQex g$t$10329$sFQex)))) g$C$18027$sFQex g$V$18028$sFQex))) g$t$10329$sFQex '()))) g$C$18029$sFQex g$fields$10327$sFQex)))))) (case-lambda ((g$V$18032$sFQex) (g$V$18032$sFQex g$C$18031$sFQex g$fields$10325$sFQex '0))) uninitialized)))) (begin (set! g$get-mutators$10219$sFQex (case-lambda ((g$C$18065$sFQex g$foo$10304$sFQex g$fields$10305$sFQex) ((case-lambda ((g$C$18063$sFQex g$gen-name$10306$sFQex) (begin (set! g$gen-name$10306$sFQex (case-lambda ((g$C$18033$sFQex g$x$10324$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$18034$sFQex) (symbol->string (case-lambda ((g$V$18035$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$18036$sFQex) (symbol->string (case-lambda ((g$V$18037$sFQex) (string-append (case-lambda ((g$V$18038$sFQex) (string->symbol (case-lambda ((g$V$18039$sFQex) (g$datum->syntax$9075$sFQex g$C$18033$sFQex g$foo$10304$sFQex g$V$18039$sFQex))) g$V$18038$sFQex))) g$V$18037$sFQex '"-" g$V$18035$sFQex '"-set!"))) g$V$18036$sFQex))) g$foo$10304$sFQex))) g$V$18034$sFQex))) g$x$10324$sFQex)))) ((case-lambda ((g$C$18062$sFQex g$f$10307$sFQex) ((case-lambda ((g$C$18041$sFQex g$f$18040$sFQex) (begin (set! g$f$10307$sFQex g$f$18040$sFQex) (g$C$18041$sFQex g$f$10307$sFQex)))) g$C$18062$sFQex (case-lambda ((g$C$18061$sFQex g$fields$10308$sFQex) ((case-lambda ((g$C$18059$sFQex g$t$10309$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18060$sFQex) ((case-lambda ((g$C$18058$sFQex g$ls/false$10310$sFQex) (if g$ls/false$10310$sFQex (apply g$C$18058$sFQex (case-lambda ((g$C$18042$sFQex) (g$C$18042$sFQex '()))) g$ls/false$10310$sFQex) ((case-lambda ((g$C$18056$sFQex g$t$10311$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18057$sFQex) ((case-lambda ((g$C$18055$sFQex g$ls/false$10312$sFQex) (if g$ls/false$10312$sFQex (apply g$C$18055$sFQex (case-lambda ((g$C$18043$sFQex g$name$10313$sFQex g$accessor$10314$sFQex g$mutator$10315$sFQex g$rest$10316$sFQex) (g$f$10307$sFQex (case-lambda ((g$V$18044$sFQex) (cons g$C$18043$sFQex g$mutator$10315$sFQex g$V$18044$sFQex))) g$rest$10316$sFQex))) g$ls/false$10312$sFQex) ((case-lambda ((g$C$18053$sFQex g$t$10317$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18054$sFQex) ((case-lambda ((g$C$18052$sFQex g$ls/false$10318$sFQex) (if g$ls/false$10318$sFQex (apply g$C$18052$sFQex (case-lambda ((g$C$18045$sFQex g$name$10319$sFQex g$rest$10320$sFQex) (g$f$10307$sFQex (case-lambda ((g$V$18046$sFQex) (g$gen-name$10306$sFQex (case-lambda ((g$V$18047$sFQex) (cons g$C$18045$sFQex g$V$18047$sFQex g$V$18046$sFQex))) g$name$10319$sFQex))) g$rest$10320$sFQex))) g$ls/false$10318$sFQex) ((case-lambda ((g$C$18050$sFQex g$t$10321$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18051$sFQex) ((case-lambda ((g$C$18049$sFQex g$ls/false$10322$sFQex) (if g$ls/false$10322$sFQex (apply g$C$18049$sFQex (case-lambda ((g$C$18048$sFQex g$rest$10323$sFQex) (g$f$10307$sFQex g$C$18048$sFQex g$rest$10323$sFQex))) g$ls/false$10322$sFQex) (g$syntax-violation$9073$sFQex g$C$18049$sFQex '#f '"invalid syntax" g$t$10321$sFQex)))) g$C$18050$sFQex g$V$18051$sFQex))) g$t$10321$sFQex '(_ . any)))) g$C$18052$sFQex g$t$10317$sFQex)))) g$C$18053$sFQex g$V$18054$sFQex))) g$t$10317$sFQex '((#(scheme-id mutable) any) . any)))) g$C$18055$sFQex g$t$10311$sFQex)))) g$C$18056$sFQex g$V$18057$sFQex))) g$t$10311$sFQex '((#(scheme-id mutable) any any any) . any)))) g$C$18058$sFQex g$t$10309$sFQex)))) g$C$18059$sFQex g$V$18060$sFQex))) g$t$10309$sFQex '()))) g$C$18061$sFQex g$fields$10308$sFQex)))))) (case-lambda ((g$V$18064$sFQex) (g$V$18064$sFQex g$C$18063$sFQex g$fields$10305$sFQex))) uninitialized)))) g$C$18065$sFQex uninitialized)))) (begin (set! g$get-accessors$10220$sFQex (case-lambda ((g$C$18114$sFQex g$foo$10270$sFQex g$fields$10271$sFQex) ((case-lambda ((g$C$18113$sFQex g$gen-name$10272$sFQex) (begin (set! g$gen-name$10272$sFQex (case-lambda ((g$C$18066$sFQex g$x$10303$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$18067$sFQex) (symbol->string (case-lambda ((g$V$18068$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$18069$sFQex) (symbol->string (case-lambda ((g$V$18070$sFQex) (string-append (case-lambda ((g$V$18071$sFQex) (string->symbol (case-lambda ((g$V$18072$sFQex) (g$datum->syntax$9075$sFQex g$C$18066$sFQex g$foo$10270$sFQex g$V$18072$sFQex))) g$V$18071$sFQex))) g$V$18070$sFQex '"-" g$V$18068$sFQex))) g$V$18069$sFQex))) g$foo$10270$sFQex))) g$V$18067$sFQex))) g$x$10303$sFQex)))) (g$map$5680$sFQex g$C$18113$sFQex (case-lambda ((g$C$18112$sFQex g$field$10273$sFQex) ((case-lambda ((g$C$18110$sFQex g$t$10274$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18111$sFQex) ((case-lambda ((g$C$18107$sFQex g$ls/false$10275$sFQex) ((case-lambda ((g$J$18109$sFQex) (if g$ls/false$10275$sFQex (apply g$J$18109$sFQex (case-lambda ((g$C$18073$sFQex g$name$10276$sFQex g$accessor$10277$sFQex g$mutator$10278$sFQex) (g$id?$8682$sFQex g$C$18073$sFQex g$accessor$10277$sFQex))) g$ls/false$10275$sFQex) (g$J$18109$sFQex '#f)))) (case-lambda ((g$T$18108$sFQex) (if g$T$18108$sFQex (apply g$C$18107$sFQex (case-lambda ((g$C$18074$sFQex g$name$10279$sFQex g$accessor$10280$sFQex g$mutator$10281$sFQex) (g$C$18074$sFQex g$accessor$10280$sFQex))) g$ls/false$10275$sFQex) ((case-lambda ((g$C$18105$sFQex g$t$10282$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18106$sFQex) ((case-lambda ((g$C$18102$sFQex g$ls/false$10283$sFQex) ((case-lambda ((g$J$18104$sFQex) (if g$ls/false$10283$sFQex (apply g$J$18104$sFQex (case-lambda ((g$C$18075$sFQex g$name$10284$sFQex g$accessor$10285$sFQex) (g$id?$8682$sFQex g$C$18075$sFQex g$accessor$10285$sFQex))) g$ls/false$10283$sFQex) (g$J$18104$sFQex '#f)))) (case-lambda ((g$T$18103$sFQex) (if g$T$18103$sFQex (apply g$C$18102$sFQex (case-lambda ((g$C$18076$sFQex g$name$10286$sFQex g$accessor$10287$sFQex) (g$C$18076$sFQex g$accessor$10287$sFQex))) g$ls/false$10283$sFQex) ((case-lambda ((g$C$18100$sFQex g$t$10288$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18101$sFQex) ((case-lambda ((g$C$18097$sFQex g$ls/false$10289$sFQex) ((case-lambda ((g$J$18099$sFQex) (if g$ls/false$10289$sFQex (apply g$J$18099$sFQex (case-lambda ((g$C$18077$sFQex g$name$10290$sFQex) (g$id?$8682$sFQex g$C$18077$sFQex g$name$10290$sFQex))) g$ls/false$10289$sFQex) (g$J$18099$sFQex '#f)))) (case-lambda ((g$T$18098$sFQex) (if g$T$18098$sFQex (apply g$C$18097$sFQex (case-lambda ((g$C$18078$sFQex g$name$10291$sFQex) (g$gen-name$10272$sFQex g$C$18078$sFQex g$name$10291$sFQex))) g$ls/false$10289$sFQex) ((case-lambda ((g$C$18095$sFQex g$t$10292$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18096$sFQex) ((case-lambda ((g$C$18092$sFQex g$ls/false$10293$sFQex) ((case-lambda ((g$J$18094$sFQex) (if g$ls/false$10293$sFQex (apply g$J$18094$sFQex (case-lambda ((g$C$18079$sFQex g$name$10294$sFQex) (g$id?$8682$sFQex g$C$18079$sFQex g$name$10294$sFQex))) g$ls/false$10293$sFQex) (g$J$18094$sFQex '#f)))) (case-lambda ((g$T$18093$sFQex) (if g$T$18093$sFQex (apply g$C$18092$sFQex (case-lambda ((g$C$18080$sFQex g$name$10295$sFQex) (g$gen-name$10272$sFQex g$C$18080$sFQex g$name$10295$sFQex))) g$ls/false$10293$sFQex) ((case-lambda ((g$C$18090$sFQex g$t$10296$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18091$sFQex) ((case-lambda ((g$C$18087$sFQex g$ls/false$10297$sFQex) ((case-lambda ((g$J$18089$sFQex) (if g$ls/false$10297$sFQex (apply g$J$18089$sFQex (case-lambda ((g$C$18081$sFQex g$name$10298$sFQex) (g$id?$8682$sFQex g$C$18081$sFQex g$name$10298$sFQex))) g$ls/false$10297$sFQex) (g$J$18089$sFQex '#f)))) (case-lambda ((g$T$18088$sFQex) (if g$T$18088$sFQex (apply g$C$18087$sFQex (case-lambda ((g$C$18082$sFQex g$name$10299$sFQex) (g$gen-name$10272$sFQex g$C$18082$sFQex g$name$10299$sFQex))) g$ls/false$10297$sFQex) ((case-lambda ((g$C$18085$sFQex g$t$10300$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18086$sFQex) ((case-lambda ((g$C$18084$sFQex g$ls/false$10301$sFQex) (if g$ls/false$10301$sFQex (apply g$C$18084$sFQex (case-lambda ((g$C$18083$sFQex g$others$10302$sFQex) (g$syntax-violation$9073$sFQex g$C$18083$sFQex '#f '"invalid field spec" g$field$10273$sFQex))) g$ls/false$10301$sFQex) (g$syntax-violation$9073$sFQex g$C$18084$sFQex '#f '"invalid syntax" g$t$10300$sFQex)))) g$C$18085$sFQex g$V$18086$sFQex))) g$t$10300$sFQex 'any))) g$C$18087$sFQex g$t$10296$sFQex))))))) g$C$18090$sFQex g$V$18091$sFQex))) g$t$10296$sFQex 'any))) g$C$18092$sFQex g$t$10292$sFQex))))))) g$C$18095$sFQex g$V$18096$sFQex))) g$t$10292$sFQex '(#(scheme-id immutable) any)))) g$C$18097$sFQex g$t$10288$sFQex))))))) g$C$18100$sFQex g$V$18101$sFQex))) g$t$10288$sFQex '(#(scheme-id mutable) any)))) g$C$18102$sFQex g$t$10282$sFQex))))))) g$C$18105$sFQex g$V$18106$sFQex))) g$t$10282$sFQex '(#(scheme-id immutable) any any)))) g$C$18107$sFQex g$t$10274$sFQex))))))) g$C$18110$sFQex g$V$18111$sFQex))) g$t$10274$sFQex '(#(scheme-id mutable) any any any)))) g$C$18112$sFQex g$field$10273$sFQex))) g$fields$10271$sFQex)))) g$C$18114$sFQex uninitialized)))) (begin (set! g$enumerate$10221$sFQex (case-lambda ((g$C$18123$sFQex g$ls$10266$sFQex) ((case-lambda ((g$C$18122$sFQex g$f$10267$sFQex) ((case-lambda ((g$C$18116$sFQex g$f$18115$sFQex) (begin (set! g$f$10267$sFQex g$f$18115$sFQex) (g$C$18116$sFQex g$f$10267$sFQex)))) g$C$18122$sFQex (case-lambda ((g$C$18117$sFQex g$ls$10268$sFQex g$i$10269$sFQex) (null? (case-lambda ((g$T$18118$sFQex) (if g$T$18118$sFQex (g$C$18117$sFQex '()) (+ (case-lambda ((g$V$18119$sFQex) (cdr (case-lambda ((g$V$18120$sFQex) (g$f$10267$sFQex (case-lambda ((g$V$18121$sFQex) (cons g$C$18117$sFQex g$i$10269$sFQex g$V$18121$sFQex))) g$V$18120$sFQex g$V$18119$sFQex))) g$ls$10268$sFQex))) g$i$10269$sFQex '1)))) g$ls$10268$sFQex)))))) (case-lambda ((g$V$18124$sFQex) (g$V$18124$sFQex g$C$18123$sFQex g$ls$10266$sFQex '0))) uninitialized)))) (begin (set! g$do-define-record$10222$sFQex (case-lambda ((g$C$18179$sFQex g$namespec$10246$sFQex g$clause*$10247$sFQex) (g$get-record-name$10208$sFQex (case-lambda ((g$V$18180$sFQex) ((case-lambda ((g$C$18177$sFQex g$foo$10248$sFQex) (gensym (case-lambda ((g$V$18178$sFQex) ((case-lambda ((g$C$18175$sFQex g$foo-rtd$10249$sFQex) (gensym (case-lambda ((g$V$18176$sFQex) ((case-lambda ((g$C$18173$sFQex g$foo-rcd$10250$sFQex) (gensym (case-lambda ((g$V$18174$sFQex) ((case-lambda ((g$C$18171$sFQex g$protocol$10251$sFQex) (g$get-record-constructor-name$10209$sFQex (case-lambda ((g$V$18172$sFQex) ((case-lambda ((g$C$18169$sFQex g$make-foo$10252$sFQex) (g$get-fields$10217$sFQex (case-lambda ((g$V$18170$sFQex) ((case-lambda ((g$C$18167$sFQex g$fields$10253$sFQex) (g$enumerate$10221$sFQex (case-lambda ((g$V$18168$sFQex) ((case-lambda ((g$C$18165$sFQex g$idx*$10254$sFQex) (g$get-accessors$10220$sFQex (case-lambda ((g$V$18166$sFQex) ((case-lambda ((g$C$18163$sFQex g$foo-x*$10255$sFQex) (g$get-mutators$10219$sFQex (case-lambda ((g$V$18164$sFQex) ((case-lambda ((g$C$18161$sFQex g$set-foo-x!*$10256$sFQex) (g$get-mutator-indices$10218$sFQex (case-lambda ((g$V$18162$sFQex) ((case-lambda ((g$C$18159$sFQex g$set-foo-idx*$10257$sFQex) (g$get-record-predicate-name$10210$sFQex (case-lambda ((g$V$18160$sFQex) ((case-lambda ((g$C$18156$sFQex g$foo?$10258$sFQex) (g$parent-rtd-code$10213$sFQex (case-lambda ((g$V$18157$sFQex) (g$foo-rtd-code$10212$sFQex (case-lambda ((g$V$18158$sFQex) ((case-lambda ((g$C$18153$sFQex g$foo-rtd-code$10259$sFQex) (g$parent-rcd-code$10214$sFQex (case-lambda ((g$V$18154$sFQex) (g$foo-rcd-code$10215$sFQex (case-lambda ((g$V$18155$sFQex) ((case-lambda ((g$C$18151$sFQex g$foo-rcd-code$10260$sFQex) (g$get-protocol-code$10216$sFQex (case-lambda ((g$V$18152$sFQex) ((case-lambda ((g$C$18129$sFQex g$protocol-code$10261$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18130$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18131$sFQex) (append (case-lambda ((g$V$18132$sFQex) (list (case-lambda ((g$V$18133$sFQex) (list (case-lambda ((g$V$18134$sFQex) (cons (case-lambda ((g$V$18135$sFQex) (list (case-lambda ((g$V$18136$sFQex) (list (case-lambda ((g$V$18137$sFQex) (cons (case-lambda ((g$V$18138$sFQex) (list (case-lambda ((g$V$18139$sFQex) (list (case-lambda ((g$V$18140$sFQex) (list (case-lambda ((g$V$18141$sFQex) (list (case-lambda ((g$V$18142$sFQex) (cons (case-lambda ((g$V$18143$sFQex) (list (case-lambda ((g$V$18144$sFQex) (cons (case-lambda ((g$V$18145$sFQex) (list (case-lambda ((g$V$18146$sFQex) (cons (case-lambda ((g$V$18147$sFQex) (list (case-lambda ((g$V$18148$sFQex) (cons (case-lambda ((g$V$18149$sFQex) (cons (case-lambda ((g$V$18150$sFQex) (g$bless$8924$sFQex g$C$18129$sFQex g$V$18150$sFQex))) 'begin g$V$18149$sFQex))) g$V$18148$sFQex g$V$18147$sFQex))) 'define g$foo-rtd$10249$sFQex g$foo-rtd-code$10259$sFQex))) g$V$18146$sFQex g$V$18145$sFQex))) 'define g$protocol$10251$sFQex g$protocol-code$10261$sFQex))) g$V$18144$sFQex g$V$18143$sFQex))) 'define g$foo-rcd$10250$sFQex g$foo-rcd-code$10260$sFQex))) g$V$18142$sFQex g$V$18138$sFQex))) 'define-syntax g$foo$10248$sFQex g$V$18141$sFQex))) 'list ''$rtd g$V$18140$sFQex g$V$18139$sFQex))) 'syntax g$foo-rtd$10249$sFQex))) 'syntax g$foo-rcd$10250$sFQex))) g$V$18137$sFQex g$V$18135$sFQex))) 'define g$foo?$10258$sFQex g$V$18136$sFQex))) 'record-predicate g$foo-rtd$10249$sFQex))) g$V$18134$sFQex g$V$18132$sFQex))) 'define g$make-foo$10252$sFQex g$V$18133$sFQex))) 'record-constructor g$foo-rcd$10250$sFQex))) g$V$18131$sFQex g$V$18130$sFQex))) (case-lambda ((g$C$18125$sFQex g$foo-x$10262$sFQex g$idx$10263$sFQex) (list (case-lambda ((g$V$18126$sFQex) (list g$C$18125$sFQex 'define g$foo-x$10262$sFQex g$V$18126$sFQex))) 'record-accessor g$foo-rtd$10249$sFQex g$idx$10263$sFQex))) g$foo-x*$10255$sFQex g$idx*$10254$sFQex))) (case-lambda ((g$C$18127$sFQex g$set-foo-x!$10264$sFQex g$idx$10265$sFQex) (list (case-lambda ((g$V$18128$sFQex) (list g$C$18127$sFQex 'define g$set-foo-x!$10264$sFQex g$V$18128$sFQex))) 'record-mutator g$foo-rtd$10249$sFQex g$idx$10265$sFQex))) g$set-foo-x!*$10256$sFQex g$set-foo-idx*$10257$sFQex))) g$C$18151$sFQex g$V$18152$sFQex))) g$clause*$10247$sFQex))) g$C$18153$sFQex g$V$18155$sFQex))) g$clause*$10247$sFQex g$foo-rtd$10249$sFQex g$protocol$10251$sFQex g$V$18154$sFQex))) g$clause*$10247$sFQex))) g$C$18156$sFQex g$V$18158$sFQex))) g$foo$10248$sFQex g$clause*$10247$sFQex g$V$18157$sFQex))) g$clause*$10247$sFQex))) g$C$18159$sFQex g$V$18160$sFQex))) g$namespec$10246$sFQex))) g$C$18161$sFQex g$V$18162$sFQex))) g$fields$10253$sFQex))) g$C$18163$sFQex g$V$18164$sFQex))) g$foo$10248$sFQex g$fields$10253$sFQex))) g$C$18165$sFQex g$V$18166$sFQex))) g$foo$10248$sFQex g$fields$10253$sFQex))) g$C$18167$sFQex g$V$18168$sFQex))) g$fields$10253$sFQex))) g$C$18169$sFQex g$V$18170$sFQex))) g$clause*$10247$sFQex))) g$C$18171$sFQex g$V$18172$sFQex))) g$namespec$10246$sFQex))) g$C$18173$sFQex g$V$18174$sFQex)))))) g$C$18175$sFQex g$V$18176$sFQex)))))) g$C$18177$sFQex g$V$18178$sFQex)))))) g$C$18179$sFQex g$V$18180$sFQex))) g$namespec$10246$sFQex)))) (begin (set! g$verify-clauses$10223$sFQex (case-lambda ((g$C$18213$sFQex g$x$10228$sFQex g$cls*$10229$sFQex) ((case-lambda ((g$C$18210$sFQex g$valid-kwds$10230$sFQex g$free-id-member?$10231$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18211$sFQex) (begin (set! g$valid-kwds$10230$sFQex g$V$18211$sFQex) (begin (set! g$free-id-member?$10231$sFQex (case-lambda ((g$C$18183$sFQex g$x$10243$sFQex g$ls$10244$sFQex) (pair? (case-lambda ((g$T$18184$sFQex) (if g$T$18184$sFQex (car (case-lambda ((g$V$18185$sFQex) (g$free-id=?$8686$sFQex (case-lambda ((g$V$18186$sFQex) ((case-lambda ((g$C$18181$sFQex g$t$10245$sFQex) (if g$t$10245$sFQex (g$C$18181$sFQex g$t$10245$sFQex) (cdr (case-lambda ((g$V$18182$sFQex) (g$free-id-member?$10231$sFQex g$C$18181$sFQex g$x$10243$sFQex g$V$18182$sFQex))) g$ls$10244$sFQex)))) g$C$18183$sFQex g$V$18186$sFQex))) g$x$10243$sFQex g$V$18185$sFQex))) g$ls$10244$sFQex) (g$C$18183$sFQex '#f)))) g$ls$10244$sFQex)))) ((case-lambda ((g$C$18209$sFQex g$f$10232$sFQex) ((case-lambda ((g$C$18188$sFQex g$f$18187$sFQex) (begin (set! g$f$10232$sFQex g$f$18187$sFQex) (g$C$18188$sFQex g$f$10232$sFQex)))) g$C$18209$sFQex (case-lambda ((g$C$18205$sFQex g$cls*$10233$sFQex g$seen*$10234$sFQex) (null? (case-lambda ((g$V$18206$sFQex) (not (case-lambda ((g$T$18207$sFQex) (if g$T$18207$sFQex (car (case-lambda ((g$V$18208$sFQex) ((case-lambda ((g$C$18203$sFQex g$t$10235$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18204$sFQex) ((case-lambda ((g$C$18202$sFQex g$ls/false$10236$sFQex) (if g$ls/false$10236$sFQex (apply g$C$18202$sFQex (case-lambda ((g$C$18191$sFQex g$kwd$10237$sFQex g$rest$10238$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$18192$sFQex) (not (case-lambda ((g$V$18193$sFQex) ((case-lambda ((g$C$18189$sFQex g$t$10239$sFQex) (if g$t$10239$sFQex (g$C$18189$sFQex g$t$10239$sFQex) (g$free-id-member?$10231$sFQex (case-lambda ((g$V$18190$sFQex) (not g$C$18189$sFQex g$V$18190$sFQex))) g$kwd$10237$sFQex g$valid-kwds$10230$sFQex)))) (case-lambda ((g$T$18194$sFQex) (if g$T$18194$sFQex (g$syntax-violation$9073$sFQex g$C$18191$sFQex '#f '"not a valid define-record-type keyword" g$kwd$10237$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$18195$sFQex) (if g$T$18195$sFQex (g$syntax-violation$9073$sFQex g$C$18191$sFQex '#f '"duplicate use of keyword " g$x$10228$sFQex g$kwd$10237$sFQex) (cons (case-lambda ((g$V$18196$sFQex) (cdr (case-lambda ((g$V$18197$sFQex) (g$f$10232$sFQex g$C$18191$sFQex g$V$18197$sFQex g$V$18196$sFQex))) g$cls*$10233$sFQex))) g$kwd$10237$sFQex g$seen*$10234$sFQex)))) g$kwd$10237$sFQex g$seen*$10234$sFQex)))) g$V$18193$sFQex))) g$V$18192$sFQex))) g$kwd$10237$sFQex))) g$ls/false$10236$sFQex) ((case-lambda ((g$C$18200$sFQex g$t$10240$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18201$sFQex) ((case-lambda ((g$C$18199$sFQex g$ls/false$10241$sFQex) (if g$ls/false$10241$sFQex (apply g$C$18199$sFQex (case-lambda ((g$C$18198$sFQex g$cls$10242$sFQex) (g$syntax-violation$9073$sFQex g$C$18198$sFQex '#f '"malformed define-record-type clause" g$cls$10242$sFQex))) g$ls/false$10241$sFQex) (g$syntax-violation$9073$sFQex g$C$18199$sFQex '#f '"invalid syntax" g$t$10240$sFQex)))) g$C$18200$sFQex g$V$18201$sFQex))) g$t$10240$sFQex 'any))) g$C$18202$sFQex g$t$10235$sFQex)))) g$C$18203$sFQex g$V$18204$sFQex))) g$t$10235$sFQex '(any . any)))) g$C$18205$sFQex g$V$18208$sFQex))) g$cls*$10233$sFQex) (void g$C$18205$sFQex)))) g$V$18206$sFQex))) g$cls*$10233$sFQex)))))) (case-lambda ((g$V$18212$sFQex) (g$V$18212$sFQex g$C$18210$sFQex g$cls*$10229$sFQex '()))) uninitialized))))) g$bless$8924$sFQex '(fields parent parent-rtd protocol sealed opaque nongenerative)))) g$C$18213$sFQex uninitialized uninitialized)))) ((case-lambda ((g$C$18217$sFQex g$t$10224$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18218$sFQex) ((case-lambda ((g$C$18216$sFQex g$ls/false$10225$sFQex) (if g$ls/false$10225$sFQex (apply g$C$18216$sFQex (case-lambda ((g$C$18214$sFQex g$namespec$10226$sFQex g$clause*$10227$sFQex) (g$verify-clauses$10223$sFQex (case-lambda (g$IGNORE$18215$sFQex (g$do-define-record$10222$sFQex g$C$18214$sFQex g$namespec$10226$sFQex g$clause*$10227$sFQex))) g$x$10206$sFQex g$clause*$10227$sFQex))) g$ls/false$10225$sFQex) (g$syntax-violation$9073$sFQex g$C$18216$sFQex '#f '"invalid syntax" g$t$10224$sFQex)))) g$C$18217$sFQex g$V$18218$sFQex))) g$t$10224$sFQex '(_ any . each-any)))) g$C$18219$sFQex g$x$10206$sFQex)))))))))))))))))))) g$C$18220$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$define-record-type-macro$8955$sFQex))) (g$define-condition-type-macro$8956$sFQex g$define-condition-type-macro$12475$sFQex ((case-lambda ((g$C$20916$sFQex) (g$C$20916$sFQex (case-lambda ((g$C$18262$sFQex g$x$10462$sFQex) ((case-lambda ((g$C$18261$sFQex g$mkname$10463$sFQex) (begin (set! g$mkname$10463$sFQex (case-lambda ((g$C$18221$sFQex g$name$10486$sFQex g$suffix$10487$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$18222$sFQex) (symbol->string (case-lambda ((g$V$18223$sFQex) (string-append (case-lambda ((g$V$18224$sFQex) (string->symbol (case-lambda ((g$V$18225$sFQex) (g$datum->syntax$9075$sFQex g$C$18221$sFQex g$name$10486$sFQex g$V$18225$sFQex))) g$V$18224$sFQex))) g$V$18223$sFQex g$suffix$10487$sFQex))) g$V$18222$sFQex))) g$name$10486$sFQex)))) ((case-lambda ((g$C$18259$sFQex g$t$10464$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18260$sFQex) ((case-lambda ((g$C$18256$sFQex g$ls/false$10465$sFQex) ((case-lambda ((g$J$18258$sFQex) (if g$ls/false$10465$sFQex (apply g$J$18258$sFQex (case-lambda ((g$C$18226$sFQex g$ctxt$10466$sFQex g$name$10467$sFQex g$super$10468$sFQex g$constructor$10469$sFQex g$predicate$10470$sFQex g$field*$10471$sFQex g$accessor*$10472$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$18227$sFQex) (if g$T$18227$sFQex (g$id?$8682$sFQex (case-lambda ((g$T$18228$sFQex) (if g$T$18228$sFQex (g$id?$8682$sFQex (case-lambda ((g$T$18229$sFQex) (if g$T$18229$sFQex (g$id?$8682$sFQex (case-lambda ((g$T$18230$sFQex) (if g$T$18230$sFQex (g$for-all$5678$sFQex (case-lambda ((g$T$18231$sFQex) (if g$T$18231$sFQex (g$for-all$5678$sFQex g$C$18226$sFQex g$id?$8682$sFQex g$accessor*$10472$sFQex) (g$C$18226$sFQex '#f)))) g$id?$8682$sFQex g$field*$10471$sFQex) (g$C$18226$sFQex '#f)))) g$predicate$10470$sFQex) (g$C$18226$sFQex '#f)))) g$constructor$10469$sFQex) (g$C$18226$sFQex '#f)))) g$super$10468$sFQex) (g$C$18226$sFQex '#f)))) g$name$10467$sFQex))) g$ls/false$10465$sFQex) (g$J$18258$sFQex '#f)))) (case-lambda ((g$T$18257$sFQex) (if g$T$18257$sFQex (apply g$C$18256$sFQex (case-lambda ((g$C$18254$sFQex g$ctxt$10473$sFQex g$name$10474$sFQex g$super$10475$sFQex g$constructor$10476$sFQex g$predicate$10477$sFQex g$field*$10478$sFQex g$accessor*$10479$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18255$sFQex) ((case-lambda ((g$C$18236$sFQex g$aux-accessor*$10480$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18237$sFQex) (list (case-lambda ((g$V$18238$sFQex) (list (case-lambda ((g$V$18239$sFQex) (list (case-lambda ((g$V$18240$sFQex) (cons (case-lambda ((g$V$18241$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18242$sFQex) (cons (case-lambda ((g$V$18243$sFQex) (cons (case-lambda ((g$V$18244$sFQex) (list (case-lambda ((g$V$18245$sFQex) (cons (case-lambda ((g$V$18246$sFQex) (gensym (case-lambda ((g$V$18247$sFQex) (list (case-lambda ((g$V$18248$sFQex) (cons (case-lambda ((g$V$18249$sFQex) (cons (case-lambda ((g$V$18250$sFQex) (cons (case-lambda ((g$V$18251$sFQex) (cons (case-lambda ((g$V$18252$sFQex) (g$bless$8924$sFQex g$C$18236$sFQex g$V$18252$sFQex))) 'begin g$V$18251$sFQex))) g$V$18250$sFQex g$V$18241$sFQex))) 'define-record-type g$V$18249$sFQex))) g$V$18248$sFQex g$V$18246$sFQex))) g$name$10474$sFQex g$constructor$10476$sFQex g$V$18247$sFQex)))))) g$V$18245$sFQex g$V$18244$sFQex))) 'parent g$super$10475$sFQex))) g$V$18243$sFQex '((nongenerative) (sealed #f) (opaque #f))))) 'fields g$V$18242$sFQex))) (case-lambda ((g$C$18232$sFQex g$field$10481$sFQex g$aux$10482$sFQex) (list g$C$18232$sFQex 'immutable g$field$10481$sFQex g$aux$10482$sFQex))) g$field*$10478$sFQex g$aux-accessor*$10480$sFQex))) g$V$18240$sFQex g$V$18237$sFQex))) 'define g$predicate$10477$sFQex g$V$18239$sFQex))) 'condition-predicate g$V$18238$sFQex))) 'record-type-descriptor g$name$10474$sFQex))) (case-lambda ((g$C$18233$sFQex g$accessor$10483$sFQex g$aux$10484$sFQex) (list (case-lambda ((g$V$18234$sFQex) (list (case-lambda ((g$V$18235$sFQex) (list g$C$18233$sFQex 'define g$accessor$10483$sFQex g$V$18235$sFQex))) 'condition-accessor g$V$18234$sFQex g$aux$10484$sFQex))) 'record-type-descriptor g$name$10474$sFQex))) g$accessor*$10479$sFQex g$aux-accessor*$10480$sFQex))) g$C$18254$sFQex g$V$18255$sFQex))) (case-lambda ((g$C$18253$sFQex g$x$10485$sFQex) (gensym g$C$18253$sFQex))) g$accessor*$10479$sFQex))) g$ls/false$10465$sFQex) (g$syntax-violation$9073$sFQex g$C$18256$sFQex '#f '"invalid syntax" g$t$10464$sFQex))))))) g$C$18259$sFQex g$V$18260$sFQex))) g$t$10464$sFQex '(any any any any any . #(each (any any)))))) g$C$18261$sFQex g$x$10462$sFQex)))) g$C$18262$sFQex uninitialized)))))) (library-letrec*-identity 'g$define-condition-type-macro$8956$sFQex))) (g$incorrect-usage-macro$8957$sFQex g$incorrect-usage-macro$12476$sFQex ((case-lambda ((g$C$20917$sFQex) (g$C$20917$sFQex (case-lambda ((g$C$18263$sFQex g$e$10488$sFQex) (g$syntax-violation$9073$sFQex g$C$18263$sFQex '#f '"incorrect usage of auxiliary keyword" g$e$10488$sFQex)))))) (library-letrec*-identity 'g$incorrect-usage-macro$8957$sFQex))) (g$parameterize-macro$8958$sFQex g$parameterize-macro$12477$sFQex ((case-lambda ((g$C$20918$sFQex) (g$C$20918$sFQex (case-lambda ((g$C$18301$sFQex g$e$10489$sFQex) ((case-lambda ((g$C$18299$sFQex g$t$10490$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18300$sFQex) ((case-lambda ((g$C$18298$sFQex g$ls/false$10491$sFQex) (if g$ls/false$10491$sFQex (apply g$C$18298$sFQex (case-lambda ((g$C$18264$sFQex g$b$10492$sFQex g$b*$10493$sFQex) (cons (case-lambda ((g$V$18265$sFQex) (cons (case-lambda ((g$V$18266$sFQex) (cons (case-lambda ((g$V$18267$sFQex) (g$bless$8924$sFQex g$C$18264$sFQex g$V$18267$sFQex))) 'let g$V$18266$sFQex))) '() g$V$18265$sFQex))) g$b$10492$sFQex g$b*$10493$sFQex))) g$ls/false$10491$sFQex) ((case-lambda ((g$C$18296$sFQex g$t$10494$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18297$sFQex) ((case-lambda ((g$C$18295$sFQex g$ls/false$10495$sFQex) (if g$ls/false$10495$sFQex (apply g$C$18295$sFQex (case-lambda ((g$C$18292$sFQex g$olhs*$10496$sFQex g$orhs*$10497$sFQex g$b$10498$sFQex g$b*$10499$sFQex) (g$generate-temporaries$9063$sFQex (case-lambda ((g$V$18293$sFQex) (g$generate-temporaries$9063$sFQex (case-lambda ((g$V$18294$sFQex) ((case-lambda ((g$C$18275$sFQex g$lhs*$10500$sFQex g$rhs*$10501$sFQex) (append (case-lambda ((g$V$18276$sFQex) (cons (case-lambda ((g$V$18277$sFQex) (cons (case-lambda ((g$V$18278$sFQex) (cons (case-lambda ((g$V$18279$sFQex) (cons (case-lambda ((g$V$18280$sFQex) (cons (case-lambda ((g$V$18281$sFQex) (cons (case-lambda ((g$V$18282$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18283$sFQex) (cons (case-lambda ((g$V$18284$sFQex) (cons (case-lambda ((g$V$18285$sFQex) (list (case-lambda ((g$V$18286$sFQex) (list (case-lambda ((g$V$18287$sFQex) (list (case-lambda ((g$V$18288$sFQex) (append (case-lambda ((g$V$18289$sFQex) (list (case-lambda ((g$V$18290$sFQex) (cons (case-lambda ((g$V$18291$sFQex) (g$bless$8924$sFQex g$C$18275$sFQex g$V$18291$sFQex))) g$V$18290$sFQex g$V$18276$sFQex))) 'lambda g$V$18289$sFQex g$V$18288$sFQex))) g$lhs*$10500$sFQex g$rhs*$10501$sFQex))) 'let g$V$18287$sFQex g$V$18282$sFQex))) g$V$18286$sFQex))) 'swap g$V$18285$sFQex))) 'lambda g$V$18284$sFQex))) '() g$V$18283$sFQex))) (case-lambda ((g$C$18268$sFQex g$lhs$10502$sFQex g$rhs$10503$sFQex) (cons (case-lambda ((g$V$18269$sFQex) (cons (case-lambda ((g$V$18270$sFQex) (list (case-lambda ((g$V$18271$sFQex) (list (case-lambda ((g$V$18272$sFQex) (list (case-lambda ((g$V$18273$sFQex) (list (case-lambda ((g$V$18274$sFQex) (list g$C$18268$sFQex 'let g$V$18274$sFQex g$V$18271$sFQex g$V$18270$sFQex))) g$V$18273$sFQex))) 't g$V$18272$sFQex))) g$lhs$10502$sFQex))) g$lhs$10502$sFQex g$rhs$10503$sFQex))) 'set! g$V$18269$sFQex))) g$rhs$10503$sFQex '(t)))) g$lhs*$10500$sFQex g$rhs*$10501$sFQex))) 'dynamic-wind g$V$18281$sFQex))) 'swap g$V$18280$sFQex))) g$V$18279$sFQex '(swap)))) 'lambda g$V$18278$sFQex))) '() g$V$18277$sFQex))) g$b$10498$sFQex g$b*$10499$sFQex))) g$olhs*$10496$sFQex g$orhs*$10497$sFQex))) g$C$18292$sFQex g$V$18294$sFQex g$V$18293$sFQex))) g$olhs*$10496$sFQex))) g$orhs*$10497$sFQex))) g$ls/false$10495$sFQex) (g$syntax-violation$9073$sFQex g$C$18295$sFQex '#f '"invalid syntax" g$t$10494$sFQex)))) g$C$18296$sFQex g$V$18297$sFQex))) g$t$10494$sFQex '(_ #(each (any any)) any . each-any)))) g$C$18298$sFQex g$t$10490$sFQex)))) g$C$18299$sFQex g$V$18300$sFQex))) g$t$10490$sFQex '(_ () any . each-any)))) g$C$18301$sFQex g$e$10489$sFQex)))))) (library-letrec*-identity 'g$parameterize-macro$8958$sFQex))) (g$foreign-call-transformer$8959$sFQex g$foreign-call-transformer$12478$sFQex ((case-lambda ((g$C$20919$sFQex) (g$C$20919$sFQex (case-lambda ((g$C$18309$sFQex g$e$10504$sFQex g$r$10505$sFQex g$mr$10506$sFQex) ((case-lambda ((g$C$18307$sFQex g$t$10507$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18308$sFQex) ((case-lambda ((g$C$18306$sFQex g$ls/false$10508$sFQex) (if g$ls/false$10508$sFQex (apply g$C$18306$sFQex (case-lambda ((g$C$18302$sFQex g$name$10509$sFQex g$arg*$10510$sFQex) (g$chi-expr*$8977$sFQex (case-lambda ((g$V$18303$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$18304$sFQex) (cons (case-lambda ((g$V$18305$sFQex) (cons g$C$18302$sFQex 'foreign-call g$V$18305$sFQex))) g$V$18304$sFQex g$V$18303$sFQex))) g$name$10509$sFQex g$r$10505$sFQex g$mr$10506$sFQex))) g$arg*$10510$sFQex g$r$10505$sFQex g$mr$10506$sFQex))) g$ls/false$10508$sFQex) (g$syntax-violation$9073$sFQex g$C$18306$sFQex '#f '"invalid syntax" g$t$10507$sFQex)))) g$C$18307$sFQex g$V$18308$sFQex))) g$t$10507$sFQex '(_ any . each-any)))) g$C$18309$sFQex g$e$10504$sFQex)))))) (library-letrec*-identity 'g$foreign-call-transformer$8959$sFQex))) (g$convert-pattern$8960$sFQex g$convert-pattern$12479$sFQex ((case-lambda ((g$C$20920$sFQex) (g$C$20920$sFQex (case-lambda ((g$C$18402$sFQex g$pattern$10511$sFQex g$keys$10512$sFQex) ((case-lambda ((g$C$18401$sFQex g$cvt*$10513$sFQex g$cvt$10514$sFQex) (begin (set! g$cvt*$10513$sFQex (case-lambda ((g$C$18319$sFQex g$p*$10593$sFQex g$n$10594$sFQex g$ids$10595$sFQex) (null? (case-lambda ((g$T$18320$sFQex) (if g$T$18320$sFQex (values g$C$18319$sFQex '() g$ids$10595$sFQex) (call-with-values g$C$18319$sFQex (case-lambda ((g$C$18310$sFQex) (cdr (case-lambda ((g$V$18311$sFQex) (g$cvt*$10513$sFQex g$C$18310$sFQex g$V$18311$sFQex g$n$10594$sFQex g$ids$10595$sFQex))) g$p*$10593$sFQex))) (case-lambda ((g$C$18318$sFQex g$y$10598$sFQex g$ids$10599$sFQex) ((case-lambda ((g$C$18317$sFQex g$ids$10600$sFQex g$y$10601$sFQex) (call-with-values g$C$18317$sFQex (case-lambda ((g$C$18312$sFQex) (car (case-lambda ((g$V$18313$sFQex) (g$cvt$10514$sFQex g$C$18312$sFQex g$V$18313$sFQex g$n$10594$sFQex g$ids$10600$sFQex))) g$p*$10593$sFQex))) (case-lambda ((g$C$18316$sFQex g$x$10604$sFQex g$ids$10605$sFQex) ((case-lambda ((g$C$18314$sFQex g$ids$10606$sFQex g$x$10607$sFQex) (cons (case-lambda ((g$V$18315$sFQex) (values g$C$18314$sFQex g$V$18315$sFQex g$ids$10606$sFQex))) g$x$10607$sFQex g$y$10601$sFQex))) g$C$18316$sFQex g$ids$10605$sFQex g$x$10604$sFQex)))))) g$C$18318$sFQex g$ids$10599$sFQex g$y$10598$sFQex))))))) g$p*$10593$sFQex)))) (begin (set! g$cvt$10514$sFQex (case-lambda ((g$C$18400$sFQex g$p$10515$sFQex g$n$10516$sFQex g$ids$10517$sFQex) ((case-lambda ((g$C$18398$sFQex g$t$10518$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18399$sFQex) ((case-lambda ((g$C$18395$sFQex g$ls/false$10519$sFQex) ((case-lambda ((g$J$18397$sFQex) (if g$ls/false$10519$sFQex (apply g$J$18397$sFQex (case-lambda ((g$C$18321$sFQex g$id$10520$sFQex) (g$id?$8682$sFQex g$C$18321$sFQex g$id$10520$sFQex))) g$ls/false$10519$sFQex) (g$J$18397$sFQex '#f)))) (case-lambda ((g$T$18396$sFQex) (if g$T$18396$sFQex (apply g$C$18395$sFQex (case-lambda ((g$C$18322$sFQex g$id$10521$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$18323$sFQex) (if g$T$18323$sFQex (vector (case-lambda ((g$V$18324$sFQex) (values g$C$18322$sFQex g$V$18324$sFQex g$ids$10517$sFQex))) 'free-id g$p$10515$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$18325$sFQex) (g$free-id=?$8686$sFQex (case-lambda ((g$T$18326$sFQex) (if g$T$18326$sFQex (values g$C$18322$sFQex '_ g$ids$10517$sFQex) (cons (case-lambda ((g$V$18327$sFQex) (cons (case-lambda ((g$V$18328$sFQex) (values g$C$18322$sFQex 'any g$V$18328$sFQex))) g$V$18327$sFQex g$ids$10517$sFQex))) g$p$10515$sFQex g$n$10516$sFQex)))) g$p$10515$sFQex g$V$18325$sFQex))) '_)))) g$p$10515$sFQex g$keys$10512$sFQex))) g$ls/false$10519$sFQex) ((case-lambda ((g$C$18393$sFQex g$t$10522$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18394$sFQex) ((case-lambda ((g$C$18390$sFQex g$ls/false$10523$sFQex) ((case-lambda ((g$J$18392$sFQex) (if g$ls/false$10523$sFQex (apply g$J$18392$sFQex (case-lambda ((g$C$18329$sFQex g$p$10524$sFQex g$dots$10525$sFQex) (g$ellipsis?$8962$sFQex g$C$18329$sFQex g$dots$10525$sFQex))) g$ls/false$10523$sFQex) (g$J$18392$sFQex '#f)))) (case-lambda ((g$T$18391$sFQex) (if g$T$18391$sFQex (apply g$C$18390$sFQex (case-lambda ((g$C$18337$sFQex g$p$10526$sFQex g$dots$10527$sFQex) (call-with-values g$C$18337$sFQex (case-lambda ((g$C$18330$sFQex) (+ (case-lambda ((g$V$18331$sFQex) (g$cvt$10514$sFQex g$C$18330$sFQex g$p$10526$sFQex g$V$18331$sFQex g$ids$10517$sFQex))) g$n$10516$sFQex '1))) (case-lambda ((g$C$18336$sFQex g$p$10530$sFQex g$ids$10531$sFQex) ((case-lambda ((g$C$18332$sFQex g$ids$10532$sFQex g$p$10533$sFQex) ((case-lambda ((g$J$18334$sFQex) (eq? (case-lambda ((g$T$18335$sFQex) (if g$T$18335$sFQex (g$J$18334$sFQex 'each-any) (vector g$J$18334$sFQex 'each g$p$10533$sFQex)))) g$p$10533$sFQex 'any))) (case-lambda ((g$V$18333$sFQex) (values g$C$18332$sFQex g$V$18333$sFQex g$ids$10532$sFQex)))))) g$C$18336$sFQex g$ids$10531$sFQex g$p$10530$sFQex)))))) g$ls/false$10523$sFQex) ((case-lambda ((g$C$18388$sFQex g$t$10534$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18389$sFQex) ((case-lambda ((g$C$18385$sFQex g$ls/false$10535$sFQex) ((case-lambda ((g$J$18387$sFQex) (if g$ls/false$10535$sFQex (apply g$J$18387$sFQex (case-lambda ((g$C$18338$sFQex g$x$10536$sFQex g$dots$10537$sFQex g$ys$10538$sFQex g$z$10539$sFQex) (g$ellipsis?$8962$sFQex g$C$18338$sFQex g$dots$10537$sFQex))) g$ls/false$10535$sFQex) (g$J$18387$sFQex '#f)))) (case-lambda ((g$T$18386$sFQex) (if g$T$18386$sFQex (apply g$C$18385$sFQex (case-lambda ((g$C$18351$sFQex g$x$10540$sFQex g$dots$10541$sFQex g$ys$10542$sFQex g$z$10543$sFQex) (call-with-values g$C$18351$sFQex (case-lambda ((g$C$18339$sFQex) (g$cvt$10514$sFQex g$C$18339$sFQex g$z$10543$sFQex g$n$10516$sFQex g$ids$10517$sFQex))) (case-lambda ((g$C$18350$sFQex g$z$10546$sFQex g$ids$10547$sFQex) ((case-lambda ((g$C$18349$sFQex g$ids$10548$sFQex g$z$10549$sFQex) (call-with-values g$C$18349$sFQex (case-lambda ((g$C$18340$sFQex) (g$cvt*$10513$sFQex g$C$18340$sFQex g$ys$10542$sFQex g$n$10516$sFQex g$ids$10548$sFQex))) (case-lambda ((g$C$18348$sFQex g$ys$10552$sFQex g$ids$10553$sFQex) ((case-lambda ((g$C$18347$sFQex g$ids$10554$sFQex g$ys$10555$sFQex) (call-with-values g$C$18347$sFQex (case-lambda ((g$C$18341$sFQex) (+ (case-lambda ((g$V$18342$sFQex) (g$cvt$10514$sFQex g$C$18341$sFQex g$x$10540$sFQex g$V$18342$sFQex g$ids$10554$sFQex))) g$n$10516$sFQex '1))) (case-lambda ((g$C$18346$sFQex g$x$10558$sFQex g$ids$10559$sFQex) ((case-lambda ((g$C$18343$sFQex g$ids$10560$sFQex g$x$10561$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$18344$sFQex) (vector (case-lambda ((g$V$18345$sFQex) (values g$C$18343$sFQex g$V$18345$sFQex g$ids$10560$sFQex))) 'each+ g$x$10561$sFQex g$V$18344$sFQex g$z$10549$sFQex))) g$ys$10555$sFQex))) g$C$18346$sFQex g$ids$10559$sFQex g$x$10558$sFQex)))))) g$C$18348$sFQex g$ids$10553$sFQex g$ys$10552$sFQex)))))) g$C$18350$sFQex g$ids$10547$sFQex g$z$10546$sFQex)))))) g$ls/false$10535$sFQex) ((case-lambda ((g$C$18383$sFQex g$t$10562$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18384$sFQex) ((case-lambda ((g$C$18382$sFQex g$ls/false$10563$sFQex) (if g$ls/false$10563$sFQex (apply g$C$18382$sFQex (case-lambda ((g$C$18359$sFQex g$x$10564$sFQex g$y$10565$sFQex) (call-with-values g$C$18359$sFQex (case-lambda ((g$C$18352$sFQex) (g$cvt$10514$sFQex g$C$18352$sFQex g$y$10565$sFQex g$n$10516$sFQex g$ids$10517$sFQex))) (case-lambda ((g$C$18358$sFQex g$y$10568$sFQex g$ids$10569$sFQex) ((case-lambda ((g$C$18357$sFQex g$ids$10570$sFQex g$y$10571$sFQex) (call-with-values g$C$18357$sFQex (case-lambda ((g$C$18353$sFQex) (g$cvt$10514$sFQex g$C$18353$sFQex g$x$10564$sFQex g$n$10516$sFQex g$ids$10570$sFQex))) (case-lambda ((g$C$18356$sFQex g$x$10574$sFQex g$ids$10575$sFQex) ((case-lambda ((g$C$18354$sFQex g$ids$10576$sFQex g$x$10577$sFQex) (cons (case-lambda ((g$V$18355$sFQex) (values g$C$18354$sFQex g$V$18355$sFQex g$ids$10576$sFQex))) g$x$10577$sFQex g$y$10571$sFQex))) g$C$18356$sFQex g$ids$10575$sFQex g$x$10574$sFQex)))))) g$C$18358$sFQex g$ids$10569$sFQex g$y$10568$sFQex)))))) g$ls/false$10563$sFQex) ((case-lambda ((g$C$18380$sFQex g$t$10578$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18381$sFQex) ((case-lambda ((g$C$18379$sFQex g$ls/false$10579$sFQex) (if g$ls/false$10579$sFQex (apply g$C$18379$sFQex (case-lambda ((g$C$18360$sFQex) (values g$C$18360$sFQex '() g$ids$10517$sFQex))) g$ls/false$10579$sFQex) ((case-lambda ((g$C$18377$sFQex g$t$10580$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18378$sFQex) ((case-lambda ((g$C$18374$sFQex g$ls/false$10581$sFQex) ((case-lambda ((g$J$18376$sFQex) (if g$ls/false$10581$sFQex (apply g$J$18376$sFQex (case-lambda ((g$C$18361$sFQex g$p$10582$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$V$18362$sFQex) (not g$C$18361$sFQex g$V$18362$sFQex))) g$p$10582$sFQex))) g$ls/false$10581$sFQex) (g$J$18376$sFQex '#f)))) (case-lambda ((g$T$18375$sFQex) (if g$T$18375$sFQex (apply g$C$18374$sFQex (case-lambda ((g$C$18367$sFQex g$p$10583$sFQex) (call-with-values g$C$18367$sFQex (case-lambda ((g$C$18363$sFQex) (g$cvt$10514$sFQex g$C$18363$sFQex g$p$10583$sFQex g$n$10516$sFQex g$ids$10517$sFQex))) (case-lambda ((g$C$18366$sFQex g$p$10586$sFQex g$ids$10587$sFQex) ((case-lambda ((g$C$18364$sFQex g$ids$10588$sFQex g$p$10589$sFQex) (vector (case-lambda ((g$V$18365$sFQex) (values g$C$18364$sFQex g$V$18365$sFQex g$ids$10588$sFQex))) 'vector g$p$10589$sFQex))) g$C$18366$sFQex g$ids$10587$sFQex g$p$10586$sFQex)))))) g$ls/false$10581$sFQex) ((case-lambda ((g$C$18372$sFQex g$t$10590$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18373$sFQex) ((case-lambda ((g$C$18371$sFQex g$ls/false$10591$sFQex) (if g$ls/false$10591$sFQex (apply g$C$18371$sFQex (case-lambda ((g$C$18368$sFQex g$datum$10592$sFQex) (g$stx->datum$8693$sFQex (case-lambda ((g$V$18369$sFQex) (vector (case-lambda ((g$V$18370$sFQex) (values g$C$18368$sFQex g$V$18370$sFQex g$ids$10517$sFQex))) 'atom g$V$18369$sFQex))) g$datum$10592$sFQex))) g$ls/false$10591$sFQex) (g$syntax-violation$9073$sFQex g$C$18371$sFQex '#f '"invalid syntax" g$t$10590$sFQex)))) g$C$18372$sFQex g$V$18373$sFQex))) g$t$10590$sFQex 'any))) g$C$18374$sFQex g$t$10580$sFQex))))))) g$C$18377$sFQex g$V$18378$sFQex))) g$t$10580$sFQex '#(vector each-any)))) g$C$18379$sFQex g$t$10578$sFQex)))) g$C$18380$sFQex g$V$18381$sFQex))) g$t$10578$sFQex '()))) g$C$18382$sFQex g$t$10562$sFQex)))) g$C$18383$sFQex g$V$18384$sFQex))) g$t$10562$sFQex '(any . any)))) g$C$18385$sFQex g$t$10534$sFQex))))))) g$C$18388$sFQex g$V$18389$sFQex))) g$t$10534$sFQex '(any any . #(each+ any () any))))) g$C$18390$sFQex g$t$10522$sFQex))))))) g$C$18393$sFQex g$V$18394$sFQex))) g$t$10522$sFQex '(any any)))) g$C$18395$sFQex g$t$10518$sFQex))))))) g$C$18398$sFQex g$V$18399$sFQex))) g$t$10518$sFQex 'any))) g$C$18400$sFQex g$p$10515$sFQex)))) (g$cvt$10514$sFQex g$C$18401$sFQex g$pattern$10511$sFQex '0 '()))))) g$C$18402$sFQex uninitialized uninitialized)))))) (library-letrec*-identity 'g$convert-pattern$8960$sFQex))) (g$syntax-dispatch$8961$sFQex g$syntax-dispatch$12480$sFQex ((case-lambda ((g$C$20921$sFQex) ((case-lambda ((g$C$18571$sFQex) ((case-lambda ((g$C$18570$sFQex g$stx^$10608$sFQex g$match-each$10609$sFQex g$match-each+$10610$sFQex g$match-each-any$10611$sFQex g$match-empty$10612$sFQex g$combine$10613$sFQex g$match*$10614$sFQex g$match$10615$sFQex) (begin (set! g$stx^$10608$sFQex (case-lambda ((g$C$18403$sFQex g$e$10718$sFQex g$m*$10719$sFQex g$s*$10720$sFQex g$ae*$10721$sFQex) ((case-lambda ((g$J$18405$sFQex) (null? (case-lambda ((g$T$18406$sFQex) (if g$T$18406$sFQex (null? (case-lambda ((g$T$18407$sFQex) (if g$T$18407$sFQex (null? g$J$18405$sFQex g$ae*$10721$sFQex) (g$J$18405$sFQex '#f)))) g$s*$10720$sFQex) (g$J$18405$sFQex '#f)))) g$m*$10719$sFQex))) (case-lambda ((g$T$18404$sFQex) (if g$T$18404$sFQex (g$C$18403$sFQex g$e$10718$sFQex) (g$mkstx$8670$sFQex g$C$18403$sFQex g$e$10718$sFQex g$m*$10719$sFQex g$s*$10720$sFQex g$ae*$10721$sFQex)))))))) (begin (set! g$match-each$10609$sFQex (case-lambda ((g$C$18416$sFQex g$e$10702$sFQex g$p$10703$sFQex g$m*$10704$sFQex g$s*$10705$sFQex g$ae*$10706$sFQex) (pair? (case-lambda ((g$T$18417$sFQex) (if g$T$18417$sFQex (car (case-lambda ((g$V$18418$sFQex) (g$match$10615$sFQex (case-lambda ((g$V$18419$sFQex) ((case-lambda ((g$C$18409$sFQex g$first$10707$sFQex) (if g$first$10707$sFQex (cdr (case-lambda ((g$V$18410$sFQex) (g$match-each$10609$sFQex (case-lambda ((g$V$18411$sFQex) ((case-lambda ((g$C$18408$sFQex g$rest$10708$sFQex) (if g$rest$10708$sFQex (cons g$C$18408$sFQex g$first$10707$sFQex g$rest$10708$sFQex) (g$C$18408$sFQex '#f)))) g$C$18409$sFQex g$V$18411$sFQex))) g$V$18410$sFQex g$p$10703$sFQex g$m*$10704$sFQex g$s*$10705$sFQex g$ae*$10706$sFQex))) g$e$10702$sFQex) (g$C$18409$sFQex '#f)))) g$C$18416$sFQex g$V$18419$sFQex))) g$V$18418$sFQex g$p$10703$sFQex g$m*$10704$sFQex g$s*$10705$sFQex g$ae*$10706$sFQex '()))) g$e$10702$sFQex) (null? (case-lambda ((g$T$18420$sFQex) (if g$T$18420$sFQex (g$C$18416$sFQex '()) (g$stx?$8654$sFQex (case-lambda ((g$T$18421$sFQex) (if g$T$18421$sFQex (g$top-marked?$8620$sFQex (case-lambda ((g$V$18422$sFQex) (not (case-lambda ((g$T$18423$sFQex) (if g$T$18423$sFQex (call-with-values g$C$18416$sFQex (case-lambda ((g$C$18412$sFQex) (g$join-wraps$8669$sFQex g$C$18412$sFQex g$m*$10704$sFQex g$s*$10705$sFQex g$ae*$10706$sFQex g$e$10702$sFQex))) (case-lambda ((g$C$18415$sFQex g$m*$10712$sFQex g$s*$10713$sFQex g$ae*$10714$sFQex) ((case-lambda ((g$C$18413$sFQex g$ae*$10715$sFQex g$s*$10716$sFQex g$m*$10717$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$18414$sFQex) (g$match-each$10609$sFQex g$C$18413$sFQex g$V$18414$sFQex g$p$10703$sFQex g$m*$10717$sFQex g$s*$10716$sFQex g$ae*$10715$sFQex))) g$e$10702$sFQex))) g$C$18415$sFQex g$ae*$10714$sFQex g$s*$10713$sFQex g$m*$10712$sFQex)))) (g$C$18416$sFQex '#f)))) g$V$18422$sFQex))) g$m*$10704$sFQex) (annotation? (case-lambda ((g$T$18424$sFQex) (if g$T$18424$sFQex (annotation-expression (case-lambda ((g$V$18425$sFQex) (g$match-each$10609$sFQex g$C$18416$sFQex g$V$18425$sFQex g$p$10703$sFQex g$m*$10704$sFQex g$s*$10705$sFQex g$ae*$10706$sFQex))) g$e$10702$sFQex) (g$C$18416$sFQex '#f)))) g$e$10702$sFQex)))) g$e$10702$sFQex)))) g$e$10702$sFQex)))) g$e$10702$sFQex)))) (begin (set! g$match-each+$10610$sFQex (case-lambda ((g$C$18454$sFQex g$e$10670$sFQex g$x-pat$10671$sFQex g$y-pat$10672$sFQex g$z-pat$10673$sFQex g$m*$10674$sFQex g$s*$10675$sFQex g$ae*$10676$sFQex g$r$10677$sFQex) ((case-lambda ((g$C$18453$sFQex g$f$10678$sFQex) ((case-lambda ((g$C$18427$sFQex g$f$18426$sFQex) (begin (set! g$f$10678$sFQex g$f$18426$sFQex) (g$C$18427$sFQex g$f$10678$sFQex)))) g$C$18453$sFQex (case-lambda ((g$C$18445$sFQex g$e$10679$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex) (pair? (case-lambda ((g$T$18446$sFQex) (if g$T$18446$sFQex (call-with-values g$C$18445$sFQex (case-lambda ((g$C$18428$sFQex) (cdr (case-lambda ((g$V$18429$sFQex) (g$f$10678$sFQex g$C$18428$sFQex g$V$18429$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex))) g$e$10679$sFQex))) (case-lambda ((g$C$18440$sFQex g$xr*$10686$sFQex g$y-pat$10687$sFQex g$r$10688$sFQex) ((case-lambda ((g$C$18432$sFQex g$r$10689$sFQex g$y-pat$10690$sFQex g$xr*$10691$sFQex) (if g$r$10689$sFQex (null? (case-lambda ((g$T$18433$sFQex) (if g$T$18433$sFQex (car (case-lambda ((g$V$18434$sFQex) (g$match$10615$sFQex (case-lambda ((g$V$18435$sFQex) ((case-lambda ((g$C$18430$sFQex g$xr$10692$sFQex) (if g$xr$10692$sFQex (cons (case-lambda ((g$V$18431$sFQex) (values g$C$18430$sFQex g$V$18431$sFQex g$y-pat$10690$sFQex g$r$10689$sFQex))) g$xr$10692$sFQex g$xr*$10691$sFQex) (values g$C$18430$sFQex '#f '#f '#f)))) g$C$18432$sFQex g$V$18435$sFQex))) g$V$18434$sFQex g$x-pat$10671$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex '()))) g$e$10679$sFQex) (car (case-lambda ((g$V$18436$sFQex) (car (case-lambda ((g$V$18437$sFQex) (g$match$10615$sFQex (case-lambda ((g$V$18438$sFQex) (cdr (case-lambda ((g$V$18439$sFQex) (values g$C$18432$sFQex '() g$V$18439$sFQex g$V$18438$sFQex))) g$y-pat$10690$sFQex))) g$V$18437$sFQex g$V$18436$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex g$r$10689$sFQex))) g$e$10679$sFQex))) g$y-pat$10690$sFQex)))) g$y-pat$10690$sFQex) (values g$C$18432$sFQex '#f '#f '#f)))) g$C$18440$sFQex g$r$10688$sFQex g$y-pat$10687$sFQex g$xr*$10686$sFQex)))) (g$stx?$8654$sFQex (case-lambda ((g$T$18447$sFQex) (if g$T$18447$sFQex (g$top-marked?$8620$sFQex (case-lambda ((g$T$18448$sFQex) (if g$T$18448$sFQex (g$match$10615$sFQex (case-lambda ((g$V$18449$sFQex) (values g$C$18445$sFQex '() g$y-pat$10672$sFQex g$V$18449$sFQex))) g$e$10679$sFQex g$z-pat$10673$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex g$r$10677$sFQex) (call-with-values g$C$18445$sFQex (case-lambda ((g$C$18441$sFQex) (g$join-wraps$8669$sFQex g$C$18441$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex g$e$10679$sFQex))) (case-lambda ((g$C$18444$sFQex g$m*$10696$sFQex g$s*$10697$sFQex g$ae*$10698$sFQex) ((case-lambda ((g$C$18442$sFQex g$ae*$10699$sFQex g$s*$10700$sFQex g$m*$10701$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$18443$sFQex) (g$f$10678$sFQex g$C$18442$sFQex g$V$18443$sFQex g$m*$10701$sFQex g$s*$10700$sFQex g$ae*$10699$sFQex))) g$e$10679$sFQex))) g$C$18444$sFQex g$ae*$10698$sFQex g$s*$10697$sFQex g$m*$10696$sFQex))))))) g$m*$10680$sFQex) (annotation? (case-lambda ((g$T$18450$sFQex) (if g$T$18450$sFQex (annotation-expression (case-lambda ((g$V$18451$sFQex) (g$f$10678$sFQex g$C$18445$sFQex g$V$18451$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex))) g$e$10679$sFQex) (g$match$10615$sFQex (case-lambda ((g$V$18452$sFQex) (values g$C$18445$sFQex '() g$y-pat$10672$sFQex g$V$18452$sFQex))) g$e$10679$sFQex g$z-pat$10673$sFQex g$m*$10680$sFQex g$s*$10681$sFQex g$ae*$10682$sFQex g$r$10677$sFQex)))) g$e$10679$sFQex)))) g$e$10679$sFQex)))) g$e$10679$sFQex)))))) (case-lambda ((g$V$18455$sFQex) (g$V$18455$sFQex g$C$18454$sFQex g$e$10670$sFQex g$m*$10674$sFQex g$s*$10675$sFQex g$ae*$10676$sFQex))) uninitialized)))) (begin (set! g$match-each-any$10611$sFQex (case-lambda ((g$C$18463$sFQex g$e$10656$sFQex g$m*$10657$sFQex g$s*$10658$sFQex g$ae*$10659$sFQex) (pair? (case-lambda ((g$T$18464$sFQex) (if g$T$18464$sFQex (cdr (case-lambda ((g$V$18465$sFQex) (g$match-each-any$10611$sFQex (case-lambda ((g$V$18466$sFQex) ((case-lambda ((g$C$18456$sFQex g$l$10660$sFQex) (if g$l$10660$sFQex (car (case-lambda ((g$V$18457$sFQex) (g$stx^$10608$sFQex (case-lambda ((g$V$18458$sFQex) (cons g$C$18456$sFQex g$V$18458$sFQex g$l$10660$sFQex))) g$V$18457$sFQex g$m*$10657$sFQex g$s*$10658$sFQex g$ae*$10659$sFQex))) g$e$10656$sFQex) (g$C$18456$sFQex '#f)))) g$C$18463$sFQex g$V$18466$sFQex))) g$V$18465$sFQex g$m*$10657$sFQex g$s*$10658$sFQex g$ae*$10659$sFQex))) g$e$10656$sFQex) (null? (case-lambda ((g$T$18467$sFQex) (if g$T$18467$sFQex (g$C$18463$sFQex '()) (g$stx?$8654$sFQex (case-lambda ((g$T$18468$sFQex) (if g$T$18468$sFQex (g$top-marked?$8620$sFQex (case-lambda ((g$V$18469$sFQex) (not (case-lambda ((g$T$18470$sFQex) (if g$T$18470$sFQex (call-with-values g$C$18463$sFQex (case-lambda ((g$C$18459$sFQex) (g$join-wraps$8669$sFQex g$C$18459$sFQex g$m*$10657$sFQex g$s*$10658$sFQex g$ae*$10659$sFQex g$e$10656$sFQex))) (case-lambda ((g$C$18462$sFQex g$m*$10664$sFQex g$s*$10665$sFQex g$ae*$10666$sFQex) ((case-lambda ((g$C$18460$sFQex g$ae*$10667$sFQex g$s*$10668$sFQex g$m*$10669$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$18461$sFQex) (g$match-each-any$10611$sFQex g$C$18460$sFQex g$V$18461$sFQex g$m*$10669$sFQex g$s*$10668$sFQex g$ae*$10667$sFQex))) g$e$10656$sFQex))) g$C$18462$sFQex g$ae*$10666$sFQex g$s*$10665$sFQex g$m*$10664$sFQex)))) (g$C$18463$sFQex '#f)))) g$V$18469$sFQex))) g$m*$10657$sFQex) (annotation? (case-lambda ((g$T$18471$sFQex) (if g$T$18471$sFQex (annotation-expression (case-lambda ((g$V$18472$sFQex) (g$match-each-any$10611$sFQex g$C$18463$sFQex g$V$18472$sFQex g$m*$10657$sFQex g$s*$10658$sFQex g$ae*$10659$sFQex))) g$e$10656$sFQex) (g$C$18463$sFQex '#f)))) g$e$10656$sFQex)))) g$e$10656$sFQex)))) g$e$10656$sFQex)))) g$e$10656$sFQex)))) (begin (set! g$match-empty$10612$sFQex (case-lambda ((g$C$18487$sFQex g$p$10653$sFQex g$r$10654$sFQex) (null? (case-lambda ((g$T$18488$sFQex) (if g$T$18488$sFQex (g$C$18487$sFQex g$r$10654$sFQex) (eq? (case-lambda ((g$T$18489$sFQex) (if g$T$18489$sFQex (g$C$18487$sFQex g$r$10654$sFQex) (eq? (case-lambda ((g$T$18490$sFQex) (if g$T$18490$sFQex (cons g$C$18487$sFQex '() g$r$10654$sFQex) (pair? (case-lambda ((g$T$18491$sFQex) (if g$T$18491$sFQex (cdr (case-lambda ((g$V$18492$sFQex) (g$match-empty$10612$sFQex (case-lambda ((g$V$18493$sFQex) (car (case-lambda ((g$V$18494$sFQex) (g$match-empty$10612$sFQex g$C$18487$sFQex g$V$18494$sFQex g$V$18493$sFQex))) g$p$10653$sFQex))) g$V$18492$sFQex g$r$10654$sFQex))) g$p$10653$sFQex) (eq? (case-lambda ((g$T$18495$sFQex) (if g$T$18495$sFQex (cons g$C$18487$sFQex '() g$r$10654$sFQex) (vector-ref (case-lambda ((g$V$18496$sFQex) ((case-lambda ((g$C$18473$sFQex g$t$10655$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18474$sFQex) (if g$T$18474$sFQex (vector-ref (case-lambda ((g$V$18475$sFQex) (g$match-empty$10612$sFQex g$C$18473$sFQex g$V$18475$sFQex g$r$10654$sFQex))) g$p$10653$sFQex '1) (g$memv$5673$sFQex (case-lambda ((g$T$18476$sFQex) (if g$T$18476$sFQex (vector-ref (case-lambda ((g$V$18477$sFQex) (g$match-empty$10612$sFQex (case-lambda ((g$V$18478$sFQex) (vector-ref (case-lambda ((g$V$18479$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$18480$sFQex) (g$match-empty$10612$sFQex (case-lambda ((g$V$18481$sFQex) (vector-ref (case-lambda ((g$V$18482$sFQex) (g$match-empty$10612$sFQex g$C$18473$sFQex g$V$18482$sFQex g$V$18481$sFQex))) g$p$10653$sFQex '1))) g$V$18480$sFQex g$V$18478$sFQex))) g$V$18479$sFQex))) g$p$10653$sFQex '2))) g$V$18477$sFQex g$r$10654$sFQex))) g$p$10653$sFQex '3) (g$memv$5673$sFQex (case-lambda ((g$T$18483$sFQex) (if g$T$18483$sFQex (g$C$18473$sFQex g$r$10654$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18484$sFQex) (if g$T$18484$sFQex (g$C$18473$sFQex g$r$10654$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18485$sFQex) (if g$T$18485$sFQex (vector-ref (case-lambda ((g$V$18486$sFQex) (g$match-empty$10612$sFQex g$C$18473$sFQex g$V$18486$sFQex g$r$10654$sFQex))) g$p$10653$sFQex '1) (g$assertion-violation$6456$sFQex g$C$18473$sFQex 'syntax-dispatch '"invalid pattern" g$p$10653$sFQex)))) g$t$10655$sFQex '(vector))))) g$t$10655$sFQex '(scheme-id atom))))) g$t$10655$sFQex '(free-id atom))))) g$t$10655$sFQex '(each+))))) g$t$10655$sFQex '(each)))) g$C$18487$sFQex g$V$18496$sFQex))) g$p$10653$sFQex '0)))) g$p$10653$sFQex 'each-any)))) g$p$10653$sFQex)))) g$p$10653$sFQex 'any)))) g$p$10653$sFQex '_)))) g$p$10653$sFQex)))) (begin (set! g$combine$10613$sFQex (case-lambda ((g$C$18497$sFQex g$r*$10651$sFQex g$r$10652$sFQex) (car (case-lambda ((g$V$18498$sFQex) (null? (case-lambda ((g$T$18499$sFQex) (if g$T$18499$sFQex (g$C$18497$sFQex g$r$10652$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18500$sFQex) (g$combine$10613$sFQex (case-lambda ((g$V$18501$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18502$sFQex) (cons g$C$18497$sFQex g$V$18502$sFQex g$V$18501$sFQex))) car g$r*$10651$sFQex))) g$V$18500$sFQex g$r$10652$sFQex))) cdr g$r*$10651$sFQex)))) g$V$18498$sFQex))) g$r*$10651$sFQex)))) (begin (set! g$match*$10614$sFQex (case-lambda ((g$C$18542$sFQex g$e$10633$sFQex g$p$10634$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex g$r$10638$sFQex) (null? (case-lambda ((g$T$18543$sFQex) (if g$T$18543$sFQex (null? (case-lambda ((g$T$18544$sFQex) (if g$T$18544$sFQex (g$C$18542$sFQex g$r$10638$sFQex) (g$C$18542$sFQex '#f)))) g$e$10633$sFQex) (pair? (case-lambda ((g$T$18545$sFQex) (if g$T$18545$sFQex (pair? (case-lambda ((g$T$18546$sFQex) (if g$T$18546$sFQex (cdr (case-lambda ((g$V$18547$sFQex) (cdr (case-lambda ((g$V$18548$sFQex) (g$match$10615$sFQex (case-lambda ((g$V$18549$sFQex) (car (case-lambda ((g$V$18550$sFQex) (car (case-lambda ((g$V$18551$sFQex) (g$match$10615$sFQex g$C$18542$sFQex g$V$18551$sFQex g$V$18550$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex g$V$18549$sFQex))) g$e$10633$sFQex))) g$p$10634$sFQex))) g$V$18548$sFQex g$V$18547$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex g$r$10638$sFQex))) g$e$10633$sFQex))) g$p$10634$sFQex) (g$C$18542$sFQex '#f)))) g$e$10633$sFQex) (eq? (case-lambda ((g$T$18552$sFQex) (if g$T$18552$sFQex (g$match-each-any$10611$sFQex (case-lambda ((g$V$18553$sFQex) ((case-lambda ((g$C$18503$sFQex g$l$10639$sFQex) (if g$l$10639$sFQex (cons g$C$18503$sFQex g$l$10639$sFQex g$r$10638$sFQex) (g$C$18503$sFQex '#f)))) g$C$18542$sFQex g$V$18553$sFQex))) g$e$10633$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex) (vector-ref (case-lambda ((g$V$18554$sFQex) ((case-lambda ((g$C$18514$sFQex g$t$10640$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18515$sFQex) (if g$T$18515$sFQex (null? (case-lambda ((g$T$18516$sFQex) (if g$T$18516$sFQex (vector-ref (case-lambda ((g$V$18517$sFQex) (g$match-empty$10612$sFQex g$C$18514$sFQex g$V$18517$sFQex g$r$10638$sFQex))) g$p$10634$sFQex '1) (vector-ref (case-lambda ((g$V$18518$sFQex) (g$match-each$10609$sFQex (case-lambda ((g$V$18519$sFQex) ((case-lambda ((g$C$18504$sFQex g$r*$10641$sFQex) (if g$r*$10641$sFQex (g$combine$10613$sFQex g$C$18504$sFQex g$r*$10641$sFQex g$r$10638$sFQex) (g$C$18504$sFQex '#f)))) g$C$18514$sFQex g$V$18519$sFQex))) g$e$10633$sFQex g$V$18518$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex))) g$p$10634$sFQex '1)))) g$e$10633$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18520$sFQex) (if g$T$18520$sFQex (g$symbol?$6168$sFQex (case-lambda ((g$T$18521$sFQex) (if g$T$18521$sFQex (g$top-marked?$8620$sFQex (case-lambda ((g$T$18522$sFQex) (if g$T$18522$sFQex (vector-ref (case-lambda ((g$V$18523$sFQex) (g$stx^$10608$sFQex (case-lambda ((g$V$18524$sFQex) (g$free-id=?$8686$sFQex (case-lambda ((g$T$18525$sFQex) (if g$T$18525$sFQex (g$C$18514$sFQex g$r$10638$sFQex) (g$C$18514$sFQex '#f)))) g$V$18524$sFQex g$V$18523$sFQex))) g$e$10633$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex))) g$p$10634$sFQex '1) (g$C$18514$sFQex '#f)))) g$m*$10635$sFQex) (g$C$18514$sFQex '#f)))) g$e$10633$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18526$sFQex) (if g$T$18526$sFQex (g$symbol?$6168$sFQex (case-lambda ((g$T$18527$sFQex) (if g$T$18527$sFQex (g$top-marked?$8620$sFQex (case-lambda ((g$T$18528$sFQex) (if g$T$18528$sFQex (vector-ref (case-lambda ((g$V$18529$sFQex) (g$scheme-stx$8904$sFQex (case-lambda ((g$V$18530$sFQex) (g$stx^$10608$sFQex (case-lambda ((g$V$18531$sFQex) (g$free-id=?$8686$sFQex (case-lambda ((g$T$18532$sFQex) (if g$T$18532$sFQex (g$C$18514$sFQex g$r$10638$sFQex) (g$C$18514$sFQex '#f)))) g$V$18531$sFQex g$V$18530$sFQex))) g$e$10633$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex))) g$V$18529$sFQex))) g$p$10634$sFQex '1) (g$C$18514$sFQex '#f)))) g$m*$10635$sFQex) (g$C$18514$sFQex '#f)))) g$e$10633$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18533$sFQex) (if g$T$18533$sFQex (call-with-values g$C$18514$sFQex (case-lambda ((g$C$18505$sFQex) (vector-ref (case-lambda ((g$V$18506$sFQex) (vector-ref (case-lambda ((g$V$18507$sFQex) (vector-ref (case-lambda ((g$V$18508$sFQex) (g$match-each+$10610$sFQex g$C$18505$sFQex g$e$10633$sFQex g$V$18508$sFQex g$V$18507$sFQex g$V$18506$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex g$r$10638$sFQex))) g$p$10634$sFQex '1))) g$p$10634$sFQex '2))) g$p$10634$sFQex '3))) (case-lambda ((g$C$18513$sFQex g$xr*$10645$sFQex g$y-pat$10646$sFQex g$r$10647$sFQex) ((case-lambda ((g$C$18509$sFQex g$r$10648$sFQex g$y-pat$10649$sFQex g$xr*$10650$sFQex) (if g$r$10648$sFQex (null? (case-lambda ((g$T$18510$sFQex) (if g$T$18510$sFQex (null? (case-lambda ((g$T$18511$sFQex) (if g$T$18511$sFQex (vector-ref (case-lambda ((g$V$18512$sFQex) (g$match-empty$10612$sFQex g$C$18509$sFQex g$V$18512$sFQex g$r$10648$sFQex))) g$p$10634$sFQex '1) (g$combine$10613$sFQex g$C$18509$sFQex g$xr*$10650$sFQex g$r$10648$sFQex)))) g$xr*$10650$sFQex) (g$C$18509$sFQex '#f)))) g$y-pat$10649$sFQex) (g$C$18509$sFQex '#f)))) g$C$18513$sFQex g$r$10647$sFQex g$y-pat$10646$sFQex g$xr*$10645$sFQex)))) (g$memv$5673$sFQex (case-lambda ((g$T$18534$sFQex) (if g$T$18534$sFQex (g$strip$8692$sFQex (case-lambda ((g$V$18535$sFQex) (vector-ref (case-lambda ((g$V$18536$sFQex) (equal? (case-lambda ((g$T$18537$sFQex) (if g$T$18537$sFQex (g$C$18514$sFQex g$r$10638$sFQex) (g$C$18514$sFQex '#f)))) g$V$18536$sFQex g$V$18535$sFQex))) g$p$10634$sFQex '1))) g$e$10633$sFQex g$m*$10635$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18538$sFQex) (if g$T$18538$sFQex (g$vector?$6166$sFQex (case-lambda ((g$T$18539$sFQex) (if g$T$18539$sFQex (vector-ref (case-lambda ((g$V$18540$sFQex) (vector->list (case-lambda ((g$V$18541$sFQex) (g$match$10615$sFQex g$C$18514$sFQex g$V$18541$sFQex g$V$18540$sFQex g$m*$10635$sFQex g$s*$10636$sFQex g$ae*$10637$sFQex g$r$10638$sFQex))) g$e$10633$sFQex))) g$p$10634$sFQex '1) (g$C$18514$sFQex '#f)))) g$e$10633$sFQex) (g$assertion-violation$6456$sFQex g$C$18514$sFQex 'syntax-dispatch '"invalid pattern" g$p$10634$sFQex)))) g$t$10640$sFQex '(vector))))) g$t$10640$sFQex '(atom))))) g$t$10640$sFQex '(each+))))) g$t$10640$sFQex '(scheme-id))))) g$t$10640$sFQex '(free-id))))) g$t$10640$sFQex '(each)))) g$C$18542$sFQex g$V$18554$sFQex))) g$p$10634$sFQex '0)))) g$p$10634$sFQex 'each-any)))) g$p$10634$sFQex)))) g$p$10634$sFQex)))) (begin (set! g$match$10615$sFQex (case-lambda ((g$C$18559$sFQex g$e$10618$sFQex g$p$10619$sFQex g$m*$10620$sFQex g$s*$10621$sFQex g$ae*$10622$sFQex g$r$10623$sFQex) (not (case-lambda ((g$T$18560$sFQex) (if g$T$18560$sFQex (g$C$18559$sFQex '#f) (eq? (case-lambda ((g$T$18561$sFQex) (if g$T$18561$sFQex (g$C$18559$sFQex g$r$10623$sFQex) (eq? (case-lambda ((g$T$18562$sFQex) (if g$T$18562$sFQex (g$stx^$10608$sFQex (case-lambda ((g$V$18563$sFQex) (cons g$C$18559$sFQex g$V$18563$sFQex g$r$10623$sFQex))) g$e$10618$sFQex g$m*$10620$sFQex g$s*$10621$sFQex g$ae*$10622$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$18564$sFQex) (if g$T$18564$sFQex (g$top-marked?$8620$sFQex (case-lambda ((g$V$18565$sFQex) (not (case-lambda ((g$T$18566$sFQex) (if g$T$18566$sFQex (call-with-values g$C$18559$sFQex (case-lambda ((g$C$18555$sFQex) (g$join-wraps$8669$sFQex g$C$18555$sFQex g$m*$10620$sFQex g$s*$10621$sFQex g$ae*$10622$sFQex g$e$10618$sFQex))) (case-lambda ((g$C$18558$sFQex g$m*$10627$sFQex g$s*$10628$sFQex g$ae*$10629$sFQex) ((case-lambda ((g$C$18556$sFQex g$ae*$10630$sFQex g$s*$10631$sFQex g$m*$10632$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$18557$sFQex) (g$match$10615$sFQex g$C$18556$sFQex g$V$18557$sFQex g$p$10619$sFQex g$m*$10632$sFQex g$s*$10631$sFQex g$ae*$10630$sFQex g$r$10623$sFQex))) g$e$10618$sFQex))) g$C$18558$sFQex g$ae*$10629$sFQex g$s*$10628$sFQex g$m*$10627$sFQex)))) (g$C$18559$sFQex '#f)))) g$V$18565$sFQex))) g$m*$10620$sFQex) (annotation? (case-lambda ((g$T$18567$sFQex) (if g$T$18567$sFQex (annotation-expression (case-lambda ((g$V$18568$sFQex) (g$match$10615$sFQex g$C$18559$sFQex g$V$18568$sFQex g$p$10619$sFQex g$m*$10620$sFQex g$s*$10621$sFQex g$ae*$10622$sFQex g$r$10623$sFQex))) g$e$10618$sFQex) (g$match*$10614$sFQex g$C$18559$sFQex g$e$10618$sFQex g$p$10619$sFQex g$m*$10620$sFQex g$s*$10621$sFQex g$ae*$10622$sFQex g$r$10623$sFQex)))) g$e$10618$sFQex)))) g$e$10618$sFQex)))) g$p$10619$sFQex 'any)))) g$p$10619$sFQex '_)))) g$r$10623$sFQex)))) (g$C$18570$sFQex (case-lambda ((g$C$18569$sFQex g$e$10616$sFQex g$p$10617$sFQex) (g$match$10615$sFQex g$C$18569$sFQex g$e$10616$sFQex g$p$10617$sFQex '() '() '() '())))))))))))))) g$C$18571$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$20921$sFQex))) (library-letrec*-identity 'g$syntax-dispatch$8961$sFQex))) (g$ellipsis?$8962$sFQex g$ellipsis?$12481$sFQex ((case-lambda ((g$C$20922$sFQex) (g$C$20922$sFQex (case-lambda ((g$C$18572$sFQex g$x$10722$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$18573$sFQex) (if g$T$18573$sFQex (g$scheme-stx$8904$sFQex (case-lambda ((g$V$18574$sFQex) (g$free-id=?$8686$sFQex g$C$18572$sFQex g$x$10722$sFQex g$V$18574$sFQex))) '...) (g$C$18572$sFQex '#f)))) g$x$10722$sFQex)))))) (library-letrec*-identity 'g$ellipsis?$8962$sFQex))) (g$underscore?$8963$sFQex g$underscore?$12482$sFQex ((case-lambda ((g$C$20923$sFQex) (g$C$20923$sFQex (case-lambda ((g$C$18575$sFQex g$x$10723$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$18576$sFQex) (if g$T$18576$sFQex (g$scheme-stx$8904$sFQex (case-lambda ((g$V$18577$sFQex) (g$free-id=?$8686$sFQex g$C$18575$sFQex g$x$10723$sFQex g$V$18577$sFQex))) '_) (g$C$18575$sFQex '#f)))) g$x$10723$sFQex)))))) (library-letrec*-identity 'g$underscore?$8963$sFQex))) (g$verify-literals$8964$sFQex g$verify-literals$12483$sFQex ((case-lambda ((g$C$20924$sFQex) (g$C$20924$sFQex (case-lambda ((g$C$18585$sFQex g$lits$10724$sFQex g$expr$10725$sFQex) (g$for-each$5681$sFQex g$C$18585$sFQex (case-lambda ((g$C$18581$sFQex g$x$10726$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$18582$sFQex) (not (case-lambda ((g$V$18583$sFQex) ((case-lambda ((g$C$18579$sFQex g$t$10727$sFQex) (if g$t$10727$sFQex (g$C$18579$sFQex g$t$10727$sFQex) (g$ellipsis?$8962$sFQex (case-lambda ((g$V$18580$sFQex) ((case-lambda ((g$C$18578$sFQex g$t$10728$sFQex) (if g$t$10728$sFQex (g$C$18578$sFQex g$t$10728$sFQex) (g$underscore?$8963$sFQex g$C$18578$sFQex g$x$10726$sFQex)))) g$C$18579$sFQex g$V$18580$sFQex))) g$x$10726$sFQex)))) (case-lambda ((g$T$18584$sFQex) (if g$T$18584$sFQex (g$syntax-violation$9073$sFQex g$C$18581$sFQex '#f '"invalid literal" g$expr$10725$sFQex g$x$10726$sFQex) (void g$C$18581$sFQex)))) g$V$18583$sFQex))) g$V$18582$sFQex))) g$x$10726$sFQex))) g$lits$10724$sFQex)))))) (library-letrec*-identity 'g$verify-literals$8964$sFQex))) (g$syntax-case-transformer$8965$sFQex g$syntax-case-transformer$12484$sFQex ((case-lambda ((g$C$20925$sFQex) ((case-lambda ((g$C$18701$sFQex) ((case-lambda ((g$C$18700$sFQex g$build-dispatch-call$10729$sFQex g$invalid-ids-error$10730$sFQex g$gen-clause$10731$sFQex g$gen-syntax-case$10732$sFQex) (begin (set! g$build-dispatch-call$10729$sFQex (case-lambda ((g$C$18601$sFQex g$pvars$10786$sFQex g$expr$10787$sFQex g$y$10788$sFQex g$r$10789$sFQex g$mr$10790$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18602$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18603$sFQex) ((case-lambda ((g$C$18598$sFQex g$ids$10791$sFQex g$levels$10792$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18599$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18600$sFQex) ((case-lambda ((g$C$18591$sFQex g$labels$10793$sFQex g$new-vars$10794$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18592$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18593$sFQex) (append (case-lambda ((g$V$18594$sFQex) (g$make-full-rib$8650$sFQex (case-lambda ((g$V$18595$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$18596$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$18597$sFQex) ((case-lambda ((g$C$18586$sFQex g$body$10795$sFQex) (g$build-lambda$8608$sFQex (case-lambda ((g$V$18587$sFQex) (list g$C$18586$sFQex '(primitive apply) g$V$18587$sFQex g$y$10788$sFQex))) '#f g$new-vars$10794$sFQex g$body$10795$sFQex))) g$C$18591$sFQex g$V$18597$sFQex))) g$V$18596$sFQex g$V$18594$sFQex g$mr$10790$sFQex))) g$V$18595$sFQex g$expr$10787$sFQex))) g$ids$10791$sFQex g$labels$10793$sFQex))) g$V$18593$sFQex g$r$10789$sFQex))) (case-lambda ((g$C$18588$sFQex g$label$10796$sFQex g$var$10797$sFQex g$level$10798$sFQex) (cons (case-lambda ((g$V$18589$sFQex) (g$make-binding$8698$sFQex (case-lambda ((g$V$18590$sFQex) (cons g$C$18588$sFQex g$label$10796$sFQex g$V$18590$sFQex))) 'syntax g$V$18589$sFQex))) g$var$10797$sFQex g$level$10798$sFQex))) g$labels$10793$sFQex g$new-vars$10794$sFQex g$V$18592$sFQex))) cdr g$pvars$10786$sFQex))) g$C$18598$sFQex g$V$18600$sFQex g$V$18599$sFQex))) g$gen-label$8623$sFQex g$ids$10791$sFQex))) g$gen-lexical$8621$sFQex g$ids$10791$sFQex))) g$C$18601$sFQex g$V$18603$sFQex g$V$18602$sFQex))) car g$pvars$10786$sFQex))) cdr g$pvars$10786$sFQex)))) (begin (set! g$invalid-ids-error$10730$sFQex (case-lambda ((g$C$18618$sFQex g$id*$10780$sFQex g$e$10781$sFQex g$class$10782$sFQex) ((case-lambda ((g$C$18617$sFQex g$find$10783$sFQex) ((case-lambda ((g$C$18605$sFQex g$find$18604$sFQex) (begin (set! g$find$10783$sFQex g$find$18604$sFQex) (g$C$18605$sFQex g$find$10783$sFQex)))) g$C$18617$sFQex (case-lambda ((g$C$18606$sFQex g$id*$10784$sFQex g$ok*$10785$sFQex) (null? (case-lambda ((g$T$18607$sFQex) (if g$T$18607$sFQex (g$syntax-violation$9073$sFQex g$C$18606$sFQex '#f '"invalid syntax" g$e$10781$sFQex) (car (case-lambda ((g$V$18608$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$18609$sFQex) (if g$T$18609$sFQex (car (case-lambda ((g$V$18610$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$18611$sFQex) (if g$T$18611$sFQex (car (case-lambda ((g$V$18612$sFQex) (g$syntax-error$9070$sFQex g$C$18606$sFQex g$V$18612$sFQex '"duplicate " g$class$10782$sFQex))) g$id*$10784$sFQex) (car (case-lambda ((g$V$18613$sFQex) (cons (case-lambda ((g$V$18614$sFQex) (cdr (case-lambda ((g$V$18615$sFQex) (g$find$10783$sFQex g$C$18606$sFQex g$V$18615$sFQex g$V$18614$sFQex))) g$id*$10784$sFQex))) g$V$18613$sFQex g$ok*$10785$sFQex))) g$id*$10784$sFQex)))) g$V$18610$sFQex g$ok*$10785$sFQex))) g$id*$10784$sFQex) (car (case-lambda ((g$V$18616$sFQex) (g$syntax-error$9070$sFQex g$C$18606$sFQex g$V$18616$sFQex '"invalid " g$class$10782$sFQex))) g$id*$10784$sFQex)))) g$V$18608$sFQex))) g$id*$10784$sFQex)))) g$id*$10784$sFQex)))))) (case-lambda ((g$V$18619$sFQex) (g$V$18619$sFQex g$C$18618$sFQex g$id*$10780$sFQex '()))) uninitialized)))) (begin (set! g$gen-clause$10731$sFQex (case-lambda ((g$C$18650$sFQex g$x$10760$sFQex g$keys$10761$sFQex g$clauses$10762$sFQex g$r$10763$sFQex g$mr$10764$sFQex g$pat$10765$sFQex g$fender$10766$sFQex g$expr$10767$sFQex) (call-with-values g$C$18650$sFQex (case-lambda ((g$C$18620$sFQex) (g$convert-pattern$8960$sFQex g$C$18620$sFQex g$pat$10765$sFQex g$keys$10761$sFQex))) (case-lambda ((g$C$18649$sFQex g$p$10770$sFQex g$pvars$10771$sFQex) ((case-lambda ((g$C$18641$sFQex g$pvars$10772$sFQex g$p$10773$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18642$sFQex) (g$distinct-bound-ids?$8688$sFQex (case-lambda ((g$V$18643$sFQex) (not (case-lambda ((g$T$18644$sFQex) (if g$T$18644$sFQex (g$map$5680$sFQex (case-lambda ((g$V$18645$sFQex) (g$invalid-ids-error$10730$sFQex g$C$18641$sFQex g$V$18645$sFQex g$pat$10765$sFQex '"pattern variable"))) car g$pvars$10772$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$V$18646$sFQex) (not (case-lambda ((g$T$18647$sFQex) (if g$T$18647$sFQex (g$syntax-violation$9073$sFQex g$C$18641$sFQex '#f '"misplaced ellipsis in syntax-case pattern" g$pat$10765$sFQex) (g$gen-lexical$8621$sFQex (case-lambda ((g$V$18648$sFQex) ((case-lambda ((g$C$18636$sFQex g$y$10775$sFQex) ((case-lambda ((g$J$18638$sFQex) (eq? (case-lambda ((g$T$18639$sFQex) (if g$T$18639$sFQex (g$J$18638$sFQex g$y$10775$sFQex) (g$build-dispatch-call$10729$sFQex (case-lambda ((g$V$18640$sFQex) ((case-lambda ((g$C$18634$sFQex g$call$10779$sFQex) (list (case-lambda ((g$V$18635$sFQex) (list g$C$18634$sFQex 'if g$y$10775$sFQex g$call$10779$sFQex g$V$18635$sFQex))) 'quote '#f))) g$J$18638$sFQex g$V$18640$sFQex))) g$pvars$10772$sFQex g$fender$10766$sFQex g$y$10775$sFQex g$r$10763$sFQex g$mr$10764$sFQex)))) g$fender$10766$sFQex '#t))) (case-lambda ((g$V$18637$sFQex) ((case-lambda ((g$C$18632$sFQex g$test$10776$sFQex) (g$build-dispatch-call$10729$sFQex (case-lambda ((g$V$18633$sFQex) ((case-lambda ((g$C$18630$sFQex g$conseq$10777$sFQex) (g$gen-syntax-case$10732$sFQex (case-lambda ((g$V$18631$sFQex) ((case-lambda ((g$C$18624$sFQex g$altern$10778$sFQex) (list (case-lambda ((g$V$18625$sFQex) (list (case-lambda ((g$V$18626$sFQex) (list (case-lambda ((g$V$18627$sFQex) (list (case-lambda ((g$V$18628$sFQex) (g$build-lambda$8608$sFQex (case-lambda ((g$V$18629$sFQex) (list g$C$18624$sFQex g$V$18629$sFQex g$V$18626$sFQex))) '#f g$V$18628$sFQex g$V$18627$sFQex))) g$y$10775$sFQex))) 'if g$test$10776$sFQex g$conseq$10777$sFQex g$altern$10778$sFQex))) '(primitive syntax-dispatch) g$x$10760$sFQex g$V$18625$sFQex))) 'quote g$p$10773$sFQex))) g$C$18630$sFQex g$V$18631$sFQex))) g$x$10760$sFQex g$keys$10761$sFQex g$clauses$10762$sFQex g$r$10763$sFQex g$mr$10764$sFQex))) g$C$18632$sFQex g$V$18633$sFQex))) g$pvars$10772$sFQex g$expr$10767$sFQex g$y$10775$sFQex g$r$10763$sFQex g$mr$10764$sFQex))) g$C$18636$sFQex g$V$18637$sFQex)))))) g$C$18641$sFQex g$V$18648$sFQex))) 'tmp)))) g$V$18646$sFQex))) (case-lambda ((g$C$18621$sFQex g$x$10774$sFQex) (car (case-lambda ((g$V$18622$sFQex) (g$ellipsis?$8962$sFQex (case-lambda ((g$V$18623$sFQex) (not g$C$18621$sFQex g$V$18623$sFQex))) g$V$18622$sFQex))) g$x$10774$sFQex))) g$pvars$10772$sFQex)))) g$V$18643$sFQex))) g$V$18642$sFQex))) car g$pvars$10772$sFQex))) g$C$18649$sFQex g$pvars$10771$sFQex g$p$10770$sFQex))))))) (begin (set! g$gen-syntax-case$10732$sFQex (case-lambda ((g$C$18684$sFQex g$x$10743$sFQex g$keys$10744$sFQex g$clauses$10745$sFQex g$r$10746$sFQex g$mr$10747$sFQex) (null? (case-lambda ((g$T$18685$sFQex) (if g$T$18685$sFQex (list g$C$18684$sFQex '(primitive syntax-error) g$x$10743$sFQex) (car (case-lambda ((g$V$18686$sFQex) ((case-lambda ((g$C$18682$sFQex g$t$10748$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18683$sFQex) ((case-lambda ((g$C$18681$sFQex g$ls/false$10749$sFQex) (if g$ls/false$10749$sFQex (apply g$C$18681$sFQex (case-lambda ((g$C$18664$sFQex g$pat$10750$sFQex g$expr$10751$sFQex) ((case-lambda ((g$J$18671$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$18672$sFQex) (if g$T$18672$sFQex (g$bound-id-member?$8689$sFQex (case-lambda ((g$V$18673$sFQex) (not (case-lambda ((g$T$18674$sFQex) (if g$T$18674$sFQex (g$ellipsis?$8962$sFQex (case-lambda ((g$V$18675$sFQex) (not g$J$18671$sFQex g$V$18675$sFQex))) g$pat$10750$sFQex) (g$J$18671$sFQex '#f)))) g$V$18673$sFQex))) g$pat$10750$sFQex g$keys$10744$sFQex) (g$J$18671$sFQex '#f)))) g$pat$10750$sFQex))) (case-lambda ((g$T$18665$sFQex) (if g$T$18665$sFQex (g$scheme-stx$8904$sFQex (case-lambda ((g$V$18666$sFQex) (g$free-id=?$8686$sFQex (case-lambda ((g$T$18667$sFQex) (if g$T$18667$sFQex (g$chi-expr$8979$sFQex g$C$18664$sFQex g$expr$10751$sFQex g$r$10746$sFQex g$mr$10747$sFQex) (g$gen-lexical$8621$sFQex (case-lambda ((g$V$18668$sFQex) (g$gen-label$8623$sFQex (case-lambda ((g$V$18669$sFQex) ((case-lambda ((g$C$18654$sFQex g$lab$10752$sFQex g$lex$10753$sFQex) (cons (case-lambda ((g$V$18655$sFQex) (g$make-binding$8698$sFQex (case-lambda ((g$V$18656$sFQex) (cons (case-lambda ((g$V$18657$sFQex) (cons (case-lambda ((g$V$18658$sFQex) (list (case-lambda ((g$V$18659$sFQex) (list (case-lambda ((g$V$18660$sFQex) (g$make-full-rib$8650$sFQex (case-lambda ((g$V$18661$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$18662$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$18663$sFQex) ((case-lambda ((g$C$18651$sFQex g$body$10754$sFQex) (list (case-lambda ((g$V$18652$sFQex) (g$build-lambda$8608$sFQex (case-lambda ((g$V$18653$sFQex) (list g$C$18651$sFQex g$V$18653$sFQex g$x$10743$sFQex))) '#f g$V$18652$sFQex g$body$10754$sFQex))) g$lex$10753$sFQex))) g$C$18654$sFQex g$V$18663$sFQex))) g$V$18662$sFQex g$V$18658$sFQex g$mr$10747$sFQex))) g$V$18661$sFQex g$expr$10751$sFQex))) g$V$18660$sFQex g$V$18659$sFQex))) g$pat$10750$sFQex))) g$lab$10752$sFQex))) g$V$18657$sFQex g$r$10746$sFQex))) g$lab$10752$sFQex g$V$18656$sFQex))) 'syntax g$V$18655$sFQex))) g$lex$10753$sFQex '0))) g$C$18664$sFQex g$V$18669$sFQex g$V$18668$sFQex))) g$pat$10750$sFQex))) g$pat$10750$sFQex)))) g$pat$10750$sFQex g$V$18666$sFQex))) '_) (cdr (case-lambda ((g$V$18670$sFQex) (g$gen-clause$10731$sFQex g$C$18664$sFQex g$x$10743$sFQex g$keys$10744$sFQex g$V$18670$sFQex g$r$10746$sFQex g$mr$10747$sFQex g$pat$10750$sFQex '#t g$expr$10751$sFQex))) g$clauses$10745$sFQex))))))) g$ls/false$10749$sFQex) ((case-lambda ((g$C$18679$sFQex g$t$10755$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18680$sFQex) ((case-lambda ((g$C$18678$sFQex g$ls/false$10756$sFQex) (if g$ls/false$10756$sFQex (apply g$C$18678$sFQex (case-lambda ((g$C$18676$sFQex g$pat$10757$sFQex g$fender$10758$sFQex g$expr$10759$sFQex) (cdr (case-lambda ((g$V$18677$sFQex) (g$gen-clause$10731$sFQex g$C$18676$sFQex g$x$10743$sFQex g$keys$10744$sFQex g$V$18677$sFQex g$r$10746$sFQex g$mr$10747$sFQex g$pat$10757$sFQex g$fender$10758$sFQex g$expr$10759$sFQex))) g$clauses$10745$sFQex))) g$ls/false$10756$sFQex) (g$syntax-violation$9073$sFQex g$C$18678$sFQex '#f '"invalid syntax" g$t$10755$sFQex)))) g$C$18679$sFQex g$V$18680$sFQex))) g$t$10755$sFQex '(any any any)))) g$C$18681$sFQex g$t$10748$sFQex)))) g$C$18682$sFQex g$V$18683$sFQex))) g$t$10748$sFQex '(any any)))) g$C$18684$sFQex g$V$18686$sFQex))) g$clauses$10745$sFQex)))) g$clauses$10745$sFQex)))) (g$C$18700$sFQex (case-lambda ((g$C$18699$sFQex g$e$10733$sFQex g$r$10734$sFQex g$mr$10735$sFQex) ((case-lambda ((g$C$18697$sFQex g$t$10736$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18698$sFQex) ((case-lambda ((g$C$18696$sFQex g$ls/false$10737$sFQex) (if g$ls/false$10737$sFQex (apply g$C$18696$sFQex (case-lambda ((g$C$18693$sFQex g$expr$10738$sFQex g$keys$10739$sFQex g$clauses$10740$sFQex) (g$verify-literals$8964$sFQex (case-lambda (g$IGNORE$18694$sFQex (g$gen-lexical$8621$sFQex (case-lambda ((g$V$18695$sFQex) ((case-lambda ((g$C$18691$sFQex g$x$10741$sFQex) (g$gen-syntax-case$10732$sFQex (case-lambda ((g$V$18692$sFQex) ((case-lambda ((g$C$18687$sFQex g$body$10742$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$18688$sFQex) (list (case-lambda ((g$V$18689$sFQex) (g$build-lambda$8608$sFQex (case-lambda ((g$V$18690$sFQex) (list g$C$18687$sFQex g$V$18690$sFQex g$V$18688$sFQex))) '#f g$V$18689$sFQex g$body$10742$sFQex))) g$x$10741$sFQex))) g$expr$10738$sFQex g$r$10734$sFQex g$mr$10735$sFQex))) g$C$18691$sFQex g$V$18692$sFQex))) g$x$10741$sFQex g$keys$10739$sFQex g$clauses$10740$sFQex g$r$10734$sFQex g$mr$10735$sFQex))) g$C$18693$sFQex g$V$18695$sFQex))) 'tmp))) g$keys$10739$sFQex g$e$10733$sFQex))) g$ls/false$10737$sFQex) (g$syntax-violation$9073$sFQex g$C$18696$sFQex '#f '"invalid syntax" g$t$10736$sFQex)))) g$C$18697$sFQex g$V$18698$sFQex))) g$t$10736$sFQex '(_ any each-any . each-any)))) g$C$18699$sFQex g$e$10733$sFQex)))))))))) g$C$18701$sFQex uninitialized uninitialized uninitialized uninitialized))) g$C$20925$sFQex))) (library-letrec*-identity 'g$syntax-case-transformer$8965$sFQex))) (g$ellipsis-map$8966$sFQex g$ellipsis-map$12485$sFQex ((case-lambda ((g$C$20926$sFQex) (g$C$20926$sFQex (case-lambda ((g$C$18721$sFQex g$proc$10799$sFQex g$ls$10800$sFQex . g$ls*$10801$sFQex) ((case-lambda ((g$C$18711$sFQex g$who$10802$sFQex) (begin (set! g$who$10802$sFQex '...) ((case-lambda ((g$J$18718$sFQex) (list? (case-lambda ((g$V$18719$sFQex) (not (case-lambda ((g$T$18720$sFQex) (if g$T$18720$sFQex (g$assertion-violation$6456$sFQex g$J$18718$sFQex g$who$10802$sFQex '"not a list" g$ls$10800$sFQex) (void g$J$18718$sFQex)))) g$V$18719$sFQex))) g$ls$10800$sFQex))) (case-lambda (g$IGNORE$18712$sFQex ((case-lambda ((g$J$18714$sFQex) (null? (case-lambda ((g$V$18715$sFQex) (not (case-lambda ((g$T$18716$sFQex) (if g$T$18716$sFQex (length (case-lambda ((g$V$18717$sFQex) ((case-lambda ((g$C$18710$sFQex g$n$10803$sFQex) (g$for-each$5681$sFQex g$C$18710$sFQex (case-lambda ((g$C$18702$sFQex g$x$10804$sFQex) ((case-lambda ((g$J$18707$sFQex) (list? (case-lambda ((g$V$18708$sFQex) (not (case-lambda ((g$T$18709$sFQex) (if g$T$18709$sFQex (g$assertion-violation$6456$sFQex g$J$18707$sFQex g$who$10802$sFQex '"not a list" g$x$10804$sFQex) (void g$J$18707$sFQex)))) g$V$18708$sFQex))) g$x$10804$sFQex))) (case-lambda (g$IGNORE$18703$sFQex (length (case-lambda ((g$V$18704$sFQex) (= (case-lambda ((g$V$18705$sFQex) (not (case-lambda ((g$T$18706$sFQex) (if g$T$18706$sFQex (g$assertion-violation$6456$sFQex g$C$18702$sFQex g$who$10802$sFQex '"length mismatch" g$ls$10800$sFQex g$x$10804$sFQex) (void g$C$18702$sFQex)))) g$V$18705$sFQex))) g$V$18704$sFQex g$n$10803$sFQex))) g$x$10804$sFQex)))))) g$ls*$10801$sFQex))) g$J$18714$sFQex g$V$18717$sFQex))) g$ls$10800$sFQex) (void g$J$18714$sFQex)))) g$V$18715$sFQex))) g$ls*$10801$sFQex))) (case-lambda (g$IGNORE$18713$sFQex (apply g$C$18711$sFQex g$map$5680$sFQex g$proc$10799$sFQex g$ls$10800$sFQex g$ls*$10801$sFQex)))))))))) g$C$18721$sFQex uninitialized)))))) (library-letrec*-identity 'g$ellipsis-map$8966$sFQex))) (g$syntax-transformer$8967$sFQex g$syntax-transformer$12486$sFQex ((case-lambda ((g$C$20927$sFQex) ((case-lambda ((g$C$18945$sFQex) ((case-lambda ((g$C$18944$sFQex g$gen-syntax$10805$sFQex g$gen-ref$10806$sFQex g$gen-append$10807$sFQex g$gen-mappend$10808$sFQex g$gen-map$10809$sFQex g$gen-cons$10810$sFQex g$gen-vector$10811$sFQex g$regen$10812$sFQex) (begin (set! g$gen-syntax$10805$sFQex (case-lambda ((g$C$18837$sFQex g$src$10865$sFQex g$e$10866$sFQex g$r$10867$sFQex g$maps$10868$sFQex g$ellipsis?$10869$sFQex g$vec?$10870$sFQex) ((case-lambda ((g$C$18835$sFQex g$t$10871$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18836$sFQex) ((case-lambda ((g$C$18832$sFQex g$ls/false$10872$sFQex) ((case-lambda ((g$J$18834$sFQex) (if g$ls/false$10872$sFQex (apply g$J$18834$sFQex (case-lambda ((g$C$18722$sFQex g$dots$10873$sFQex) (g$ellipsis?$10869$sFQex g$C$18722$sFQex g$dots$10873$sFQex))) g$ls/false$10872$sFQex) (g$J$18834$sFQex '#f)))) (case-lambda ((g$T$18833$sFQex) (if g$T$18833$sFQex (apply g$C$18832$sFQex (case-lambda ((g$C$18723$sFQex g$dots$10874$sFQex) (g$syntax-violation$9073$sFQex g$C$18723$sFQex '#f '"misplaced ellipsis in syntax form" g$src$10865$sFQex))) g$ls/false$10872$sFQex) ((case-lambda ((g$C$18830$sFQex g$t$10875$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18831$sFQex) ((case-lambda ((g$C$18827$sFQex g$ls/false$10876$sFQex) ((case-lambda ((g$J$18829$sFQex) (if g$ls/false$10876$sFQex (apply g$J$18829$sFQex (case-lambda ((g$C$18724$sFQex g$id$10877$sFQex) (g$id?$8682$sFQex g$C$18724$sFQex g$id$10877$sFQex))) g$ls/false$10876$sFQex) (g$J$18829$sFQex '#f)))) (case-lambda ((g$T$18828$sFQex) (if g$T$18828$sFQex (apply g$C$18827$sFQex (case-lambda ((g$C$18739$sFQex g$id$10878$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$18740$sFQex) ((case-lambda ((g$C$18737$sFQex g$label$10879$sFQex) (g$label->binding$8697$sFQex (case-lambda ((g$V$18738$sFQex) ((case-lambda ((g$C$18733$sFQex g$b$10880$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$18734$sFQex) (eq? (case-lambda ((g$T$18735$sFQex) (if g$T$18735$sFQex (call-with-values g$C$18733$sFQex (case-lambda ((g$C$18728$sFQex) (g$binding-value$8700$sFQex (case-lambda ((g$V$18729$sFQex) ((case-lambda ((g$C$18725$sFQex g$var.lev$10883$sFQex) (cdr (case-lambda ((g$V$18726$sFQex) (car (case-lambda ((g$V$18727$sFQex) (g$gen-ref$10806$sFQex g$C$18725$sFQex g$src$10865$sFQex g$V$18727$sFQex g$V$18726$sFQex g$maps$10868$sFQex))) g$var.lev$10883$sFQex))) g$var.lev$10883$sFQex))) g$C$18728$sFQex g$V$18729$sFQex))) g$b$10880$sFQex))) (case-lambda ((g$C$18732$sFQex g$var$10884$sFQex g$maps$10885$sFQex) ((case-lambda ((g$C$18730$sFQex g$maps$10886$sFQex g$var$10887$sFQex) (list (case-lambda ((g$V$18731$sFQex) (values g$C$18730$sFQex g$V$18731$sFQex g$maps$10886$sFQex))) 'ref g$var$10887$sFQex))) g$C$18732$sFQex g$maps$10885$sFQex g$var$10884$sFQex)))) (list (case-lambda ((g$V$18736$sFQex) (values g$C$18733$sFQex g$V$18736$sFQex g$maps$10868$sFQex))) 'quote g$e$10866$sFQex)))) g$V$18734$sFQex 'syntax))) g$b$10880$sFQex))) g$C$18737$sFQex g$V$18738$sFQex))) g$label$10879$sFQex g$r$10867$sFQex))) g$C$18739$sFQex g$V$18740$sFQex))) g$e$10866$sFQex))) g$ls/false$10876$sFQex) ((case-lambda ((g$C$18825$sFQex g$t$10888$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18826$sFQex) ((case-lambda ((g$C$18822$sFQex g$ls/false$10889$sFQex) ((case-lambda ((g$J$18824$sFQex) (if g$ls/false$10889$sFQex (apply g$J$18824$sFQex (case-lambda ((g$C$18741$sFQex g$dots$10890$sFQex g$e$10891$sFQex) (g$ellipsis?$10869$sFQex g$C$18741$sFQex g$dots$10890$sFQex))) g$ls/false$10889$sFQex) (g$J$18824$sFQex '#f)))) (case-lambda ((g$T$18823$sFQex) (if g$T$18823$sFQex (apply g$C$18822$sFQex (case-lambda ((g$C$18743$sFQex g$dots$10892$sFQex g$e$10893$sFQex) (if g$vec?$10870$sFQex (g$syntax-violation$9073$sFQex g$C$18743$sFQex '#f '"misplaced ellipsis in syntax form" g$src$10865$sFQex) (g$gen-syntax$10805$sFQex g$C$18743$sFQex g$src$10865$sFQex g$e$10893$sFQex g$r$10867$sFQex g$maps$10868$sFQex (case-lambda ((g$C$18742$sFQex g$x$10894$sFQex) (g$C$18742$sFQex '#f))) '#f)))) g$ls/false$10889$sFQex) ((case-lambda ((g$C$18820$sFQex g$t$10895$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18821$sFQex) ((case-lambda ((g$C$18817$sFQex g$ls/false$10896$sFQex) ((case-lambda ((g$J$18819$sFQex) (if g$ls/false$10896$sFQex (apply g$J$18819$sFQex (case-lambda ((g$C$18744$sFQex g$x$10897$sFQex g$dots$10898$sFQex g$y$10899$sFQex) (g$ellipsis?$10869$sFQex g$C$18744$sFQex g$dots$10898$sFQex))) g$ls/false$10896$sFQex) (g$J$18819$sFQex '#f)))) (case-lambda ((g$T$18818$sFQex) (if g$T$18818$sFQex (apply g$C$18817$sFQex (case-lambda ((g$C$18791$sFQex g$x$10900$sFQex g$dots$10901$sFQex g$y$10902$sFQex) ((case-lambda ((g$C$18780$sFQex g$f$10903$sFQex) ((case-lambda ((g$C$18746$sFQex g$f$18745$sFQex) (begin (set! g$f$10903$sFQex g$f$18745$sFQex) (g$C$18746$sFQex g$f$10903$sFQex)))) g$C$18780$sFQex (case-lambda ((g$C$18779$sFQex g$y$10904$sFQex g$k$10905$sFQex) ((case-lambda ((g$C$18777$sFQex g$t$10906$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18778$sFQex) ((case-lambda ((g$C$18776$sFQex g$ls/false$10907$sFQex) (if g$ls/false$10907$sFQex (apply g$C$18776$sFQex (case-lambda ((g$C$18747$sFQex) (g$k$10905$sFQex g$C$18747$sFQex g$maps$10868$sFQex))) g$ls/false$10907$sFQex) ((case-lambda ((g$C$18774$sFQex g$t$10908$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18775$sFQex) ((case-lambda ((g$C$18771$sFQex g$ls/false$10909$sFQex) ((case-lambda ((g$J$18773$sFQex) (if g$ls/false$10909$sFQex (apply g$J$18773$sFQex (case-lambda ((g$C$18748$sFQex g$dots$10910$sFQex g$y$10911$sFQex) (g$ellipsis?$10869$sFQex g$C$18748$sFQex g$dots$10910$sFQex))) g$ls/false$10909$sFQex) (g$J$18773$sFQex '#f)))) (case-lambda ((g$T$18772$sFQex) (if g$T$18772$sFQex (apply g$C$18771$sFQex (case-lambda ((g$C$18759$sFQex g$dots$10912$sFQex g$y$10913$sFQex) (g$f$10903$sFQex g$C$18759$sFQex g$y$10913$sFQex (case-lambda ((g$C$18758$sFQex g$maps$10914$sFQex) (call-with-values g$C$18758$sFQex (case-lambda ((g$C$18749$sFQex) (cons (case-lambda ((g$V$18750$sFQex) (g$k$10905$sFQex g$C$18749$sFQex g$V$18750$sFQex))) '() g$maps$10914$sFQex))) (case-lambda ((g$C$18757$sFQex g$x$10917$sFQex g$maps$10918$sFQex) ((case-lambda ((g$C$18751$sFQex g$maps$10919$sFQex g$x$10920$sFQex) (car (case-lambda ((g$V$18752$sFQex) (null? (case-lambda ((g$T$18753$sFQex) (if g$T$18753$sFQex (g$syntax-violation$9073$sFQex g$C$18751$sFQex '#f '"extra ellipsis in syntax form" g$src$10865$sFQex) (cdr (case-lambda ((g$V$18754$sFQex) (car (case-lambda ((g$V$18755$sFQex) (g$gen-mappend$10808$sFQex (case-lambda ((g$V$18756$sFQex) (values g$C$18751$sFQex g$V$18756$sFQex g$V$18754$sFQex))) g$x$10920$sFQex g$V$18755$sFQex))) g$maps$10919$sFQex))) g$maps$10919$sFQex)))) g$V$18752$sFQex))) g$maps$10919$sFQex))) g$C$18757$sFQex g$maps$10918$sFQex g$x$10917$sFQex))))))))) g$ls/false$10909$sFQex) ((case-lambda ((g$C$18769$sFQex g$t$10921$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18770$sFQex) ((case-lambda ((g$C$18768$sFQex g$ls/false$10922$sFQex) (if g$ls/false$10922$sFQex (apply g$C$18768$sFQex (case-lambda ((g$C$18767$sFQex) (call-with-values g$C$18767$sFQex (case-lambda ((g$C$18760$sFQex) (g$gen-syntax$10805$sFQex g$C$18760$sFQex g$src$10865$sFQex g$y$10904$sFQex g$r$10867$sFQex g$maps$10868$sFQex g$ellipsis?$10869$sFQex g$vec?$10870$sFQex))) (case-lambda ((g$C$18766$sFQex g$y$10925$sFQex g$maps$10926$sFQex) ((case-lambda ((g$C$18765$sFQex g$maps$10927$sFQex g$y$10928$sFQex) (call-with-values g$C$18765$sFQex (case-lambda ((g$C$18761$sFQex) (g$k$10905$sFQex g$C$18761$sFQex g$maps$10927$sFQex))) (case-lambda ((g$C$18764$sFQex g$x$10931$sFQex g$maps$10932$sFQex) ((case-lambda ((g$C$18762$sFQex g$maps$10933$sFQex g$x$10934$sFQex) (g$gen-append$10807$sFQex (case-lambda ((g$V$18763$sFQex) (values g$C$18762$sFQex g$V$18763$sFQex g$maps$10933$sFQex))) g$x$10934$sFQex g$y$10928$sFQex))) g$C$18764$sFQex g$maps$10932$sFQex g$x$10931$sFQex)))))) g$C$18766$sFQex g$maps$10926$sFQex g$y$10925$sFQex)))))) g$ls/false$10922$sFQex) (g$syntax-violation$9073$sFQex g$C$18768$sFQex '#f '"invalid syntax" g$t$10921$sFQex)))) g$C$18769$sFQex g$V$18770$sFQex))) g$t$10921$sFQex '_))) g$C$18771$sFQex g$t$10908$sFQex))))))) g$C$18774$sFQex g$V$18775$sFQex))) g$t$10908$sFQex '(any . any)))) g$C$18776$sFQex g$t$10906$sFQex)))) g$C$18777$sFQex g$V$18778$sFQex))) g$t$10906$sFQex '()))) g$C$18779$sFQex g$y$10904$sFQex)))))) (case-lambda ((g$V$18792$sFQex) (g$V$18792$sFQex g$C$18791$sFQex g$y$10902$sFQex (case-lambda ((g$C$18790$sFQex g$maps$10935$sFQex) (call-with-values g$C$18790$sFQex (case-lambda ((g$C$18781$sFQex) (cons (case-lambda ((g$V$18782$sFQex) (g$gen-syntax$10805$sFQex g$C$18781$sFQex g$src$10865$sFQex g$x$10900$sFQex g$r$10867$sFQex g$V$18782$sFQex g$ellipsis?$10869$sFQex '#f))) '() g$maps$10935$sFQex))) (case-lambda ((g$C$18789$sFQex g$x$10938$sFQex g$maps$10939$sFQex) ((case-lambda ((g$C$18783$sFQex g$maps$10940$sFQex g$x$10941$sFQex) (car (case-lambda ((g$V$18784$sFQex) (null? (case-lambda ((g$T$18785$sFQex) (if g$T$18785$sFQex (g$syntax-violation$9073$sFQex g$C$18783$sFQex '#f '"extra ellipsis in syntax form" g$src$10865$sFQex) (cdr (case-lambda ((g$V$18786$sFQex) (car (case-lambda ((g$V$18787$sFQex) (g$gen-map$10809$sFQex (case-lambda ((g$V$18788$sFQex) (values g$C$18783$sFQex g$V$18788$sFQex g$V$18786$sFQex))) g$x$10941$sFQex g$V$18787$sFQex))) g$maps$10940$sFQex))) g$maps$10940$sFQex)))) g$V$18784$sFQex))) g$maps$10940$sFQex))) g$C$18789$sFQex g$maps$10939$sFQex g$x$10938$sFQex))))))))) uninitialized))) g$ls/false$10896$sFQex) ((case-lambda ((g$C$18815$sFQex g$t$10942$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18816$sFQex) ((case-lambda ((g$C$18814$sFQex g$ls/false$10943$sFQex) (if g$ls/false$10943$sFQex (apply g$C$18814$sFQex (case-lambda ((g$C$18800$sFQex g$x$10944$sFQex g$y$10945$sFQex) (call-with-values g$C$18800$sFQex (case-lambda ((g$C$18793$sFQex) (g$gen-syntax$10805$sFQex g$C$18793$sFQex g$src$10865$sFQex g$x$10944$sFQex g$r$10867$sFQex g$maps$10868$sFQex g$ellipsis?$10869$sFQex '#f))) (case-lambda ((g$C$18799$sFQex g$xnew$10948$sFQex g$maps$10949$sFQex) ((case-lambda ((g$C$18798$sFQex g$maps$10950$sFQex g$xnew$10951$sFQex) (call-with-values g$C$18798$sFQex (case-lambda ((g$C$18794$sFQex) (g$gen-syntax$10805$sFQex g$C$18794$sFQex g$src$10865$sFQex g$y$10945$sFQex g$r$10867$sFQex g$maps$10950$sFQex g$ellipsis?$10869$sFQex g$vec?$10870$sFQex))) (case-lambda ((g$C$18797$sFQex g$ynew$10954$sFQex g$maps$10955$sFQex) ((case-lambda ((g$C$18795$sFQex g$maps$10956$sFQex g$ynew$10957$sFQex) (g$gen-cons$10810$sFQex (case-lambda ((g$V$18796$sFQex) (values g$C$18795$sFQex g$V$18796$sFQex g$maps$10956$sFQex))) g$e$10866$sFQex g$x$10944$sFQex g$y$10945$sFQex g$xnew$10951$sFQex g$ynew$10957$sFQex))) g$C$18797$sFQex g$maps$10955$sFQex g$ynew$10954$sFQex)))))) g$C$18799$sFQex g$maps$10949$sFQex g$xnew$10948$sFQex)))))) g$ls/false$10943$sFQex) ((case-lambda ((g$C$18812$sFQex g$t$10958$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18813$sFQex) ((case-lambda ((g$C$18811$sFQex g$ls/false$10959$sFQex) (if g$ls/false$10959$sFQex (apply g$C$18811$sFQex (case-lambda ((g$C$18805$sFQex g$ls$10960$sFQex) (call-with-values g$C$18805$sFQex (case-lambda ((g$C$18801$sFQex) (g$gen-syntax$10805$sFQex g$C$18801$sFQex g$src$10865$sFQex g$ls$10960$sFQex g$r$10867$sFQex g$maps$10868$sFQex g$ellipsis?$10869$sFQex '#t))) (case-lambda ((g$C$18804$sFQex g$lsnew$10963$sFQex g$maps$10964$sFQex) ((case-lambda ((g$C$18802$sFQex g$maps$10965$sFQex g$lsnew$10966$sFQex) (g$gen-vector$10811$sFQex (case-lambda ((g$V$18803$sFQex) (values g$C$18802$sFQex g$V$18803$sFQex g$maps$10965$sFQex))) g$e$10866$sFQex g$ls$10960$sFQex g$lsnew$10966$sFQex))) g$C$18804$sFQex g$maps$10964$sFQex g$lsnew$10963$sFQex)))))) g$ls/false$10959$sFQex) ((case-lambda ((g$C$18809$sFQex g$t$10967$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18810$sFQex) ((case-lambda ((g$C$18808$sFQex g$ls/false$10968$sFQex) (if g$ls/false$10968$sFQex (apply g$C$18808$sFQex (case-lambda ((g$C$18806$sFQex) (list (case-lambda ((g$V$18807$sFQex) (values g$C$18806$sFQex g$V$18807$sFQex g$maps$10868$sFQex))) 'quote g$e$10866$sFQex))) g$ls/false$10968$sFQex) (g$syntax-violation$9073$sFQex g$C$18808$sFQex '#f '"invalid syntax" g$t$10967$sFQex)))) g$C$18809$sFQex g$V$18810$sFQex))) g$t$10967$sFQex '_))) g$C$18811$sFQex g$t$10958$sFQex)))) g$C$18812$sFQex g$V$18813$sFQex))) g$t$10958$sFQex '#(vector each-any)))) g$C$18814$sFQex g$t$10942$sFQex)))) g$C$18815$sFQex g$V$18816$sFQex))) g$t$10942$sFQex '(any . any)))) g$C$18817$sFQex g$t$10895$sFQex))))))) g$C$18820$sFQex g$V$18821$sFQex))) g$t$10895$sFQex '(any any . any)))) g$C$18822$sFQex g$t$10888$sFQex))))))) g$C$18825$sFQex g$V$18826$sFQex))) g$t$10888$sFQex '(any any)))) g$C$18827$sFQex g$t$10875$sFQex))))))) g$C$18830$sFQex g$V$18831$sFQex))) g$t$10875$sFQex 'any))) g$C$18832$sFQex g$t$10871$sFQex))))))) g$C$18835$sFQex g$V$18836$sFQex))) g$t$10871$sFQex 'any))) g$C$18837$sFQex g$e$10866$sFQex)))) (begin (set! g$gen-ref$10806$sFQex (case-lambda ((g$C$18854$sFQex g$src$10852$sFQex g$var$10853$sFQex g$level$10854$sFQex g$maps$10855$sFQex) (= (case-lambda ((g$T$18855$sFQex) (if g$T$18855$sFQex (values g$C$18854$sFQex g$var$10853$sFQex g$maps$10855$sFQex) (null? (case-lambda ((g$T$18856$sFQex) (if g$T$18856$sFQex (g$syntax-violation$9073$sFQex g$C$18854$sFQex '#f '"missing ellipsis in syntax form" g$src$10852$sFQex) (call-with-values g$C$18854$sFQex (case-lambda ((g$C$18838$sFQex) (cdr (case-lambda ((g$V$18839$sFQex) (- (case-lambda ((g$V$18840$sFQex) (g$gen-ref$10806$sFQex g$C$18838$sFQex g$src$10852$sFQex g$var$10853$sFQex g$V$18840$sFQex g$V$18839$sFQex))) g$level$10854$sFQex '1))) g$maps$10855$sFQex))) (case-lambda ((g$C$18853$sFQex g$outer-var$10858$sFQex g$outer-maps$10859$sFQex) ((case-lambda ((g$C$18850$sFQex g$outer-maps$10860$sFQex g$outer-var$10861$sFQex) (car (case-lambda ((g$V$18851$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$18852$sFQex) ((case-lambda ((g$C$18848$sFQex g$t$10862$sFQex) (if g$t$10862$sFQex ((case-lambda ((g$C$18841$sFQex g$b$10863$sFQex) (cdr (case-lambda ((g$V$18842$sFQex) (values g$C$18841$sFQex g$V$18842$sFQex g$maps$10855$sFQex))) g$b$10863$sFQex))) g$C$18848$sFQex g$t$10862$sFQex) (g$gen-lexical$8621$sFQex (case-lambda ((g$V$18849$sFQex) ((case-lambda ((g$C$18843$sFQex g$inner-var$10864$sFQex) (car (case-lambda ((g$V$18844$sFQex) (cons (case-lambda ((g$V$18845$sFQex) (cons (case-lambda ((g$V$18846$sFQex) (cons (case-lambda ((g$V$18847$sFQex) (values g$C$18843$sFQex g$inner-var$10864$sFQex g$V$18847$sFQex))) g$V$18846$sFQex g$outer-maps$10860$sFQex))) g$V$18845$sFQex g$V$18844$sFQex))) g$outer-var$10861$sFQex g$inner-var$10864$sFQex))) g$maps$10855$sFQex))) g$C$18848$sFQex g$V$18849$sFQex))) 'tmp)))) g$C$18850$sFQex g$V$18852$sFQex))) g$outer-var$10861$sFQex g$V$18851$sFQex))) g$maps$10855$sFQex))) g$C$18853$sFQex g$outer-maps$10859$sFQex g$outer-var$10858$sFQex))))))) g$maps$10855$sFQex)))) g$level$10854$sFQex '0)))) (begin (set! g$gen-append$10807$sFQex (case-lambda ((g$C$18857$sFQex g$x$10850$sFQex g$y$10851$sFQex) (equal? (case-lambda ((g$T$18858$sFQex) (if g$T$18858$sFQex (g$C$18857$sFQex g$x$10850$sFQex) (list g$C$18857$sFQex 'append g$x$10850$sFQex g$y$10851$sFQex)))) g$y$10851$sFQex ''())))) (begin (set! g$gen-mappend$10808$sFQex (case-lambda ((g$C$18859$sFQex g$e$10848$sFQex g$map-env$10849$sFQex) (g$gen-map$10809$sFQex (case-lambda ((g$V$18860$sFQex) (list g$C$18859$sFQex 'apply '(primitive append) g$V$18860$sFQex))) g$e$10848$sFQex g$map-env$10849$sFQex)))) (begin (set! g$gen-map$10809$sFQex (case-lambda ((g$C$18885$sFQex g$e$10839$sFQex g$map-env$10840$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18886$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18887$sFQex) ((case-lambda ((g$C$18873$sFQex g$formals$10841$sFQex g$actuals$10842$sFQex) (car (case-lambda ((g$V$18874$sFQex) (eq? (case-lambda ((g$T$18875$sFQex) (if g$T$18875$sFQex (car g$C$18873$sFQex g$actuals$10842$sFQex) (cdr (case-lambda ((g$V$18876$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$T$18877$sFQex) (if g$T$18877$sFQex (cdr (case-lambda ((g$V$18878$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18879$sFQex) ((case-lambda ((g$C$18872$sFQex g$r$10845$sFQex) (g$C$18872$sFQex (case-lambda ((g$C$18869$sFQex g$x$10846$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$18870$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$18871$sFQex) (cdr g$C$18869$sFQex g$V$18871$sFQex))) g$V$18870$sFQex g$r$10845$sFQex))) g$x$10846$sFQex)))))) (case-lambda ((g$V$18880$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18881$sFQex) ((case-lambda ((g$C$18865$sFQex g$args$10844$sFQex) (car (case-lambda ((g$V$18866$sFQex) (list (case-lambda ((g$V$18867$sFQex) (cons (case-lambda ((g$V$18868$sFQex) (cons g$C$18865$sFQex 'map g$V$18868$sFQex))) g$V$18867$sFQex g$args$10844$sFQex))) 'primitive g$V$18866$sFQex))) g$e$10839$sFQex))) g$C$18873$sFQex g$V$18881$sFQex))) g$V$18880$sFQex g$V$18878$sFQex))) g$V$18879$sFQex))) cons g$formals$10841$sFQex g$actuals$10842$sFQex))) g$e$10839$sFQex) (list (case-lambda ((g$V$18882$sFQex) (g$cons*$5682$sFQex g$C$18873$sFQex 'map g$V$18882$sFQex g$actuals$10842$sFQex))) 'lambda g$formals$10841$sFQex g$e$10839$sFQex)))) (case-lambda ((g$C$18861$sFQex g$x$10843$sFQex) (car (case-lambda ((g$V$18862$sFQex) (eq? (case-lambda ((g$T$18863$sFQex) (if g$T$18863$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$18864$sFQex) (g$memq$5672$sFQex g$C$18861$sFQex g$V$18864$sFQex g$formals$10841$sFQex))) g$x$10843$sFQex) (g$C$18861$sFQex '#f)))) g$V$18862$sFQex 'ref))) g$x$10843$sFQex))) g$V$18876$sFQex))) g$e$10839$sFQex)))) g$V$18874$sFQex 'ref))) g$e$10839$sFQex))) g$C$18885$sFQex g$V$18887$sFQex g$V$18886$sFQex))) cdr g$map-env$10840$sFQex))) (case-lambda ((g$C$18883$sFQex g$x$10847$sFQex) (car (case-lambda ((g$V$18884$sFQex) (list g$C$18883$sFQex 'ref g$V$18884$sFQex))) g$x$10847$sFQex))) g$map-env$10840$sFQex)))) (begin (set! g$gen-cons$10810$sFQex (case-lambda ((g$C$18904$sFQex g$e$10831$sFQex g$x$10832$sFQex g$y$10833$sFQex g$xnew$10834$sFQex g$ynew$10835$sFQex) (car (case-lambda ((g$V$18905$sFQex) ((case-lambda ((g$C$18893$sFQex g$t$10836$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18894$sFQex) (if g$T$18894$sFQex (car (case-lambda ((g$V$18895$sFQex) (eq? (case-lambda ((g$T$18896$sFQex) (if g$T$18896$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$18897$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$18898$sFQex) ((case-lambda ((g$C$18888$sFQex g$xnew$10837$sFQex g$ynew$10838$sFQex) ((case-lambda ((g$J$18891$sFQex) (eq? (case-lambda ((g$T$18892$sFQex) (if g$T$18892$sFQex (eq? g$J$18891$sFQex g$ynew$10838$sFQex g$y$10833$sFQex) (g$J$18891$sFQex '#f)))) g$xnew$10837$sFQex g$x$10832$sFQex))) (case-lambda ((g$T$18889$sFQex) (if g$T$18889$sFQex (list g$C$18888$sFQex 'quote g$e$10831$sFQex) (cons (case-lambda ((g$V$18890$sFQex) (list g$C$18888$sFQex 'quote g$V$18890$sFQex))) g$xnew$10837$sFQex g$ynew$10838$sFQex))))))) g$C$18893$sFQex g$V$18898$sFQex g$V$18897$sFQex))) g$xnew$10834$sFQex))) g$ynew$10835$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$18899$sFQex) (null? (case-lambda ((g$T$18900$sFQex) (if g$T$18900$sFQex (list g$C$18893$sFQex 'list g$xnew$10834$sFQex) (list g$C$18893$sFQex 'cons g$xnew$10834$sFQex g$ynew$10835$sFQex)))) g$V$18899$sFQex))) g$ynew$10835$sFQex)))) g$V$18895$sFQex 'quote))) g$xnew$10834$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18901$sFQex) (if g$T$18901$sFQex (cdr (case-lambda ((g$V$18902$sFQex) (cons (case-lambda ((g$V$18903$sFQex) (cons g$C$18893$sFQex 'list g$V$18903$sFQex))) g$xnew$10834$sFQex g$V$18902$sFQex))) g$ynew$10835$sFQex) (list g$C$18893$sFQex 'cons g$xnew$10834$sFQex g$ynew$10835$sFQex)))) g$t$10836$sFQex '(list))))) g$t$10836$sFQex '(quote)))) g$C$18904$sFQex g$V$18905$sFQex))) g$ynew$10835$sFQex)))) (begin (set! g$gen-vector$10811$sFQex (case-lambda ((g$C$18906$sFQex g$e$10828$sFQex g$ls$10829$sFQex g$lsnew$10830$sFQex) (car (case-lambda ((g$V$18907$sFQex) (eq? (case-lambda ((g$T$18908$sFQex) (if g$T$18908$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$18909$sFQex) (eq? (case-lambda ((g$T$18910$sFQex) (if g$T$18910$sFQex (list g$C$18906$sFQex 'quote g$e$10828$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$18911$sFQex) (g$list->vector$6163$sFQex (case-lambda ((g$V$18912$sFQex) (list g$C$18906$sFQex 'quote g$V$18912$sFQex))) g$V$18911$sFQex))) g$lsnew$10830$sFQex)))) g$V$18909$sFQex g$ls$10829$sFQex))) g$lsnew$10830$sFQex) (car (case-lambda ((g$V$18913$sFQex) (eq? (case-lambda ((g$T$18914$sFQex) (if g$T$18914$sFQex (cdr (case-lambda ((g$V$18915$sFQex) (cons g$C$18906$sFQex 'vector g$V$18915$sFQex))) g$lsnew$10830$sFQex) (list g$C$18906$sFQex 'list->vector g$lsnew$10830$sFQex)))) g$V$18913$sFQex 'list))) g$lsnew$10830$sFQex)))) g$V$18907$sFQex 'quote))) g$lsnew$10830$sFQex)))) (begin (set! g$regen$10812$sFQex (case-lambda ((g$C$18934$sFQex g$x$10825$sFQex) (car (case-lambda ((g$V$18935$sFQex) ((case-lambda ((g$C$18917$sFQex g$t$10826$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18918$sFQex) (if g$T$18918$sFQex (g$cadr$6177$sFQex g$C$18917$sFQex g$x$10825$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18919$sFQex) (if g$T$18919$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$18920$sFQex) (list g$C$18917$sFQex 'primitive g$V$18920$sFQex))) g$x$10825$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18921$sFQex) (if g$T$18921$sFQex (g$cadr$6177$sFQex (case-lambda ((g$V$18922$sFQex) (list g$C$18917$sFQex 'quote g$V$18922$sFQex))) g$x$10825$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18923$sFQex) (if g$T$18923$sFQex (g$caddr$6183$sFQex (case-lambda ((g$V$18924$sFQex) (g$regen$10812$sFQex (case-lambda ((g$V$18925$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$18926$sFQex) (g$build-lambda$8608$sFQex g$C$18917$sFQex '#f g$V$18926$sFQex g$V$18925$sFQex))) g$x$10825$sFQex))) g$V$18924$sFQex))) g$x$10825$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18927$sFQex) (if g$T$18927$sFQex (cdr (case-lambda ((g$V$18928$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18929$sFQex) ((case-lambda ((g$C$18916$sFQex g$ls$10827$sFQex) (cons g$C$18916$sFQex '(primitive ellipsis-map) g$ls$10827$sFQex))) g$C$18917$sFQex g$V$18929$sFQex))) g$regen$10812$sFQex g$V$18928$sFQex))) g$x$10825$sFQex) (cdr (case-lambda ((g$V$18930$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18931$sFQex) (car (case-lambda ((g$V$18932$sFQex) (list (case-lambda ((g$V$18933$sFQex) (cons g$C$18917$sFQex g$V$18933$sFQex g$V$18931$sFQex))) 'primitive g$V$18932$sFQex))) g$x$10825$sFQex))) g$regen$10812$sFQex g$V$18930$sFQex))) g$x$10825$sFQex)))) g$t$10826$sFQex '(map))))) g$t$10826$sFQex '(lambda))))) g$t$10826$sFQex '(quote))))) g$t$10826$sFQex '(primitive))))) g$t$10826$sFQex '(ref)))) g$C$18934$sFQex g$V$18935$sFQex))) g$x$10825$sFQex)))) (g$C$18944$sFQex (case-lambda ((g$C$18943$sFQex g$e$10813$sFQex g$r$10814$sFQex g$mr$10815$sFQex) ((case-lambda ((g$C$18941$sFQex g$t$10816$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18942$sFQex) ((case-lambda ((g$C$18940$sFQex g$ls/false$10817$sFQex) (if g$ls/false$10817$sFQex (apply g$C$18940$sFQex (case-lambda ((g$C$18939$sFQex g$x$10818$sFQex) (call-with-values g$C$18939$sFQex (case-lambda ((g$C$18936$sFQex) (g$gen-syntax$10805$sFQex g$C$18936$sFQex g$e$10813$sFQex g$x$10818$sFQex g$r$10814$sFQex '() g$ellipsis?$8962$sFQex '#f))) (case-lambda ((g$C$18938$sFQex g$e$10821$sFQex g$maps$10822$sFQex) ((case-lambda ((g$C$18937$sFQex g$maps$10823$sFQex g$e$10824$sFQex) (g$regen$10812$sFQex g$C$18937$sFQex g$e$10824$sFQex))) g$C$18938$sFQex g$maps$10822$sFQex g$e$10821$sFQex)))))) g$ls/false$10817$sFQex) (g$syntax-violation$9073$sFQex g$C$18940$sFQex '#f '"invalid syntax" g$t$10816$sFQex)))) g$C$18941$sFQex g$V$18942$sFQex))) g$t$10816$sFQex '(_ any)))) g$C$18943$sFQex g$e$10813$sFQex)))))))))))))) g$C$18945$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized))) g$C$20927$sFQex))) (library-letrec*-identity 'g$syntax-transformer$8967$sFQex))) (g$core-macro-transformer$8968$sFQex g$core-macro-transformer$12487$sFQex ((case-lambda ((g$C$20928$sFQex) (g$C$20928$sFQex (case-lambda ((g$C$18960$sFQex g$name$10969$sFQex) ((case-lambda ((g$C$18946$sFQex g$t$10970$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18947$sFQex) (if g$T$18947$sFQex (g$C$18946$sFQex g$quote-transformer$8921$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18948$sFQex) (if g$T$18948$sFQex (g$C$18946$sFQex g$lambda-transformer$8923$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18949$sFQex) (if g$T$18949$sFQex (g$C$18946$sFQex g$case-lambda-transformer$8922$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18950$sFQex) (if g$T$18950$sFQex (g$C$18946$sFQex g$letrec-transformer$8911$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18951$sFQex) (if g$T$18951$sFQex (g$C$18946$sFQex g$letrec*-transformer$8912$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18952$sFQex) (if g$T$18952$sFQex (g$C$18946$sFQex g$if-transformer$8919$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18953$sFQex) (if g$T$18953$sFQex (g$C$18946$sFQex g$foreign-call-transformer$8959$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18954$sFQex) (if g$T$18954$sFQex (g$C$18946$sFQex g$syntax-case-transformer$8965$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18955$sFQex) (if g$T$18955$sFQex (g$C$18946$sFQex g$syntax-transformer$8967$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18956$sFQex) (if g$T$18956$sFQex (g$C$18946$sFQex g$type-descriptor-transformer$8914$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18957$sFQex) (if g$T$18957$sFQex (g$C$18946$sFQex g$record-type-descriptor-transformer$8915$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18958$sFQex) (if g$T$18958$sFQex (g$C$18946$sFQex g$record-constructor-descriptor-transformer$8916$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18959$sFQex) (if g$T$18959$sFQex (g$C$18946$sFQex g$fluid-let-syntax-transformer$8913$sFQex) (g$assertion-violation$6456$sFQex g$C$18946$sFQex 'macro-transformer '"BUG: cannot find transformer" g$name$10969$sFQex)))) g$t$10970$sFQex '(fluid-let-syntax))))) g$t$10970$sFQex '(record-constructor-descriptor))))) g$t$10970$sFQex '(record-type-descriptor))))) g$t$10970$sFQex '(type-descriptor))))) g$t$10970$sFQex '(syntax))))) g$t$10970$sFQex '(syntax-case))))) g$t$10970$sFQex '(foreign-call))))) g$t$10970$sFQex '(if))))) g$t$10970$sFQex '(letrec*))))) g$t$10970$sFQex '(letrec))))) g$t$10970$sFQex '(case-lambda))))) g$t$10970$sFQex '(lambda))))) g$t$10970$sFQex '(quote)))) g$C$18960$sFQex g$name$10969$sFQex)))))) (library-letrec*-identity 'g$core-macro-transformer$8968$sFQex))) (g$file-options-macro$8969$sFQex g$file-options-macro$12488$sFQex ((case-lambda ((g$C$20929$sFQex) (g$C$20929$sFQex (case-lambda ((g$C$18977$sFQex g$x$10971$sFQex) ((case-lambda ((g$C$18976$sFQex g$valid-option?$10972$sFQex) (begin (set! g$valid-option?$10972$sFQex (case-lambda ((g$C$18961$sFQex g$x$10977$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$18962$sFQex) (if g$T$18962$sFQex (g$id->sym$8683$sFQex (case-lambda ((g$V$18963$sFQex) (g$memq$5672$sFQex g$C$18961$sFQex g$V$18963$sFQex '(no-fail no-create no-truncate)))) g$x$10977$sFQex) (g$C$18961$sFQex '#f)))) g$x$10977$sFQex)))) ((case-lambda ((g$C$18974$sFQex g$t$10973$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18975$sFQex) ((case-lambda ((g$C$18971$sFQex g$ls/false$10974$sFQex) ((case-lambda ((g$J$18973$sFQex) (if g$ls/false$10974$sFQex (apply g$J$18973$sFQex (case-lambda ((g$C$18964$sFQex g$opt*$10975$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$T$18965$sFQex) (if g$T$18965$sFQex (g$map$5680$sFQex (case-lambda ((g$V$18966$sFQex) (g$file-options-spec$7981$sFQex g$C$18964$sFQex g$V$18966$sFQex))) g$id->sym$8683$sFQex g$opt*$10975$sFQex) (g$C$18964$sFQex '#f)))) g$valid-option?$10972$sFQex g$opt*$10975$sFQex))) g$ls/false$10974$sFQex) (g$J$18973$sFQex '#f)))) (case-lambda ((g$T$18972$sFQex) (if g$T$18972$sFQex (apply g$C$18971$sFQex (case-lambda ((g$C$18967$sFQex g$opt*$10976$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$18968$sFQex) (g$file-options-spec$7981$sFQex (case-lambda ((g$V$18969$sFQex) (list (case-lambda ((g$V$18970$sFQex) (g$bless$8924$sFQex g$C$18967$sFQex g$V$18970$sFQex))) 'quote g$V$18969$sFQex))) g$V$18968$sFQex))) g$id->sym$8683$sFQex g$opt*$10976$sFQex))) g$ls/false$10974$sFQex) (g$syntax-violation$9073$sFQex g$C$18971$sFQex '#f '"invalid syntax" g$t$10973$sFQex))))))) g$C$18974$sFQex g$V$18975$sFQex))) g$t$10973$sFQex '(_ . each-any)))) g$C$18976$sFQex g$x$10971$sFQex)))) g$C$18977$sFQex uninitialized)))))) (library-letrec*-identity 'g$file-options-macro$8969$sFQex))) (g$symbol-macro$8970$sFQex g$symbol-macro$12489$sFQex ((case-lambda ((g$C$20930$sFQex) (g$C$20930$sFQex (case-lambda ((g$C$18988$sFQex g$x$10978$sFQex g$set$10979$sFQex) ((case-lambda ((g$C$18986$sFQex g$t$10980$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$18987$sFQex) ((case-lambda ((g$C$18983$sFQex g$ls/false$10981$sFQex) ((case-lambda ((g$J$18985$sFQex) (if g$ls/false$10981$sFQex (apply g$J$18985$sFQex (case-lambda ((g$C$18978$sFQex g$name$10982$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$18979$sFQex) (if g$T$18979$sFQex (g$id->sym$8683$sFQex (case-lambda ((g$V$18980$sFQex) (g$memq$5672$sFQex g$C$18978$sFQex g$V$18980$sFQex g$set$10979$sFQex))) g$name$10982$sFQex) (g$C$18978$sFQex '#f)))) g$name$10982$sFQex))) g$ls/false$10981$sFQex) (g$J$18985$sFQex '#f)))) (case-lambda ((g$T$18984$sFQex) (if g$T$18984$sFQex (apply g$C$18983$sFQex (case-lambda ((g$C$18981$sFQex g$name$10983$sFQex) (list (case-lambda ((g$V$18982$sFQex) (g$bless$8924$sFQex g$C$18981$sFQex g$V$18982$sFQex))) 'quote g$name$10983$sFQex))) g$ls/false$10981$sFQex) (g$syntax-violation$9073$sFQex g$C$18983$sFQex '#f '"invalid syntax" g$t$10980$sFQex))))))) g$C$18986$sFQex g$V$18987$sFQex))) g$t$10980$sFQex '(_ any)))) g$C$18988$sFQex g$x$10978$sFQex)))))) (library-letrec*-identity 'g$symbol-macro$8970$sFQex))) (g$macro-transformer$8971$sFQex g$macro-transformer$12490$sFQex ((case-lambda ((g$C$20931$sFQex) (g$C$20931$sFQex (case-lambda ((g$C$19031$sFQex g$x$10984$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$19032$sFQex) (if g$T$19032$sFQex (g$C$19031$sFQex g$x$10984$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$19033$sFQex) (if g$T$19033$sFQex ((case-lambda ((g$C$18992$sFQex g$t$10985$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18993$sFQex) (if g$T$18993$sFQex (g$C$18992$sFQex g$define-record-type-macro$8955$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18994$sFQex) (if g$T$18994$sFQex (g$C$18992$sFQex g$define-struct-macro$8954$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18995$sFQex) (if g$T$18995$sFQex (g$C$18992$sFQex g$include-macro$8949$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18996$sFQex) (if g$T$18996$sFQex (g$C$18992$sFQex g$cond-macro$8947$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18997$sFQex) (if g$T$18997$sFQex (g$C$18992$sFQex g$let-macro$8927$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18998$sFQex) (if g$T$18998$sFQex (g$C$18992$sFQex g$do-macro$8943$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$18999$sFQex) (if g$T$18999$sFQex (g$C$18992$sFQex g$or-macro$8945$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19000$sFQex) (if g$T$19000$sFQex (g$C$18992$sFQex g$and-macro$8946$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19001$sFQex) (if g$T$19001$sFQex (g$C$18992$sFQex g$let*-macro$8944$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19002$sFQex) (if g$T$19002$sFQex (g$C$18992$sFQex g$let-values-macro$8928$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19003$sFQex) (if g$T$19003$sFQex (g$C$18992$sFQex g$let*-values-macro$8929$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19004$sFQex) (if g$T$19004$sFQex (g$C$18992$sFQex g$syntax-rules-macro$8951$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19005$sFQex) (if g$T$19005$sFQex (g$C$18992$sFQex g$quasiquote-macro$8952$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19006$sFQex) (if g$T$19006$sFQex (g$C$18992$sFQex g$quasisyntax-macro$8953$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19007$sFQex) (if g$T$19007$sFQex (g$C$18992$sFQex g$with-syntax-macro$8925$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19008$sFQex) (if g$T$19008$sFQex (g$C$18992$sFQex g$when-macro$8917$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19009$sFQex) (if g$T$19009$sFQex (g$C$18992$sFQex g$unless-macro$8918$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19010$sFQex) (if g$T$19010$sFQex (g$C$18992$sFQex g$case-macro$8920$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19011$sFQex) (if g$T$19011$sFQex (g$C$18992$sFQex g$identifier-syntax-macro$8942$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19012$sFQex) (if g$T$19012$sFQex (g$C$18992$sFQex g$time-macro$8938$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19013$sFQex) (if g$T$19013$sFQex (g$C$18992$sFQex g$delay-macro$8939$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19014$sFQex) (if g$T$19014$sFQex (g$C$18992$sFQex g$assert-macro$8940$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19015$sFQex) (if g$T$19015$sFQex (g$C$18992$sFQex g$endianness-macro$8941$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19016$sFQex) (if g$T$19016$sFQex (g$C$18992$sFQex g$guard-macro$8936$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19017$sFQex) (if g$T$19017$sFQex (g$C$18992$sFQex g$define-enumeration-macro$8937$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19018$sFQex) (if g$T$19018$sFQex (g$C$18992$sFQex g$trace-lambda-macro$8930$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19019$sFQex) (if g$T$19019$sFQex (g$C$18992$sFQex g$trace-define-macro$8931$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19020$sFQex) (if g$T$19020$sFQex (g$C$18992$sFQex g$trace-define-syntax-macro$8932$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19021$sFQex) (if g$T$19021$sFQex (g$C$18992$sFQex g$trace-let-syntax-macro$8934$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19022$sFQex) (if g$T$19022$sFQex (g$C$18992$sFQex g$trace-letrec-syntax-macro$8935$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19023$sFQex) (if g$T$19023$sFQex (g$C$18992$sFQex g$define-condition-type-macro$8956$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19024$sFQex) (if g$T$19024$sFQex (g$C$18992$sFQex g$parameterize-macro$8958$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19025$sFQex) (if g$T$19025$sFQex (g$C$18992$sFQex g$include-into-macro$8950$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19026$sFQex) (if g$T$19026$sFQex (g$C$18992$sFQex (case-lambda ((g$C$18989$sFQex g$x$10986$sFQex) (g$symbol-macro$8970$sFQex g$C$18989$sFQex g$x$10986$sFQex '(none lf cr crlf nel crnel ls))))) (g$memv$5673$sFQex (case-lambda ((g$T$19027$sFQex) (if g$T$19027$sFQex (g$C$18992$sFQex (case-lambda ((g$C$18990$sFQex g$x$10987$sFQex) (g$symbol-macro$8970$sFQex g$C$18990$sFQex g$x$10987$sFQex '(ignore raise replace))))) (g$memv$5673$sFQex (case-lambda ((g$T$19028$sFQex) (if g$T$19028$sFQex (g$C$18992$sFQex (case-lambda ((g$C$18991$sFQex g$x$10988$sFQex) (g$symbol-macro$8970$sFQex g$C$18991$sFQex g$x$10988$sFQex '(none line block))))) (g$memv$5673$sFQex (case-lambda ((g$T$19029$sFQex) (if g$T$19029$sFQex (g$C$18992$sFQex g$file-options-macro$8969$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19030$sFQex) (if g$T$19030$sFQex (g$C$18992$sFQex g$incorrect-usage-macro$8957$sFQex) (g$error$6457$sFQex g$C$18992$sFQex 'macro-transformer '"BUG: invalid macro" g$x$10984$sFQex)))) g$t$10985$sFQex '(... => _ else unquote unquote-splicing unsyntax unsyntax-splicing fields mutable immutable parent protocol sealed opaque nongenerative parent-rtd))))) g$t$10985$sFQex '(file-options))))) g$t$10985$sFQex '(buffer-mode))))) g$t$10985$sFQex '(error-handling-mode))))) g$t$10985$sFQex '(eol-style))))) g$t$10985$sFQex '(include-into))))) g$t$10985$sFQex '(parameterize))))) g$t$10985$sFQex '(define-condition-type))))) g$t$10985$sFQex '(trace-letrec-syntax))))) g$t$10985$sFQex '(trace-let-syntax))))) g$t$10985$sFQex '(trace-define-syntax))))) g$t$10985$sFQex '(trace-define))))) g$t$10985$sFQex '(trace-lambda))))) g$t$10985$sFQex '(define-enumeration))))) g$t$10985$sFQex '(guard))))) g$t$10985$sFQex '(endianness))))) g$t$10985$sFQex '(assert))))) g$t$10985$sFQex '(delay))))) g$t$10985$sFQex '(time))))) g$t$10985$sFQex '(identifier-syntax))))) g$t$10985$sFQex '(case))))) g$t$10985$sFQex '(unless))))) g$t$10985$sFQex '(when))))) g$t$10985$sFQex '(with-syntax))))) g$t$10985$sFQex '(quasisyntax))))) g$t$10985$sFQex '(quasiquote))))) g$t$10985$sFQex '(syntax-rules))))) g$t$10985$sFQex '(let*-values))))) g$t$10985$sFQex '(let-values))))) g$t$10985$sFQex '(let*))))) g$t$10985$sFQex '(and))))) g$t$10985$sFQex '(or))))) g$t$10985$sFQex '(do))))) g$t$10985$sFQex '(let))))) g$t$10985$sFQex '(cond))))) g$t$10985$sFQex '(include))))) g$t$10985$sFQex '(define-struct))))) g$t$10985$sFQex '(define-record-type)))) g$C$19031$sFQex g$x$10984$sFQex) (g$error$6457$sFQex g$C$19031$sFQex 'core-macro-transformer '"BUG: invalid macro" g$x$10984$sFQex)))) g$x$10984$sFQex)))) g$x$10984$sFQex)))))) (library-letrec*-identity 'g$macro-transformer$8971$sFQex))) (g$local-macro-transformer$8972$sFQex g$local-macro-transformer$12491$sFQex ((case-lambda ((g$C$20932$sFQex) (g$C$20932$sFQex (case-lambda ((g$C$19034$sFQex g$x$10989$sFQex) (car g$C$19034$sFQex g$x$10989$sFQex)))))) (library-letrec*-identity 'g$local-macro-transformer$8972$sFQex))) (g$do-macro-call$8973$sFQex g$do-macro-call$12492$sFQex ((case-lambda ((g$C$20933$sFQex) (g$C$20933$sFQex (case-lambda ((g$C$19074$sFQex g$transformer$10990$sFQex g$expr$10991$sFQex g$r$10992$sFQex) ((case-lambda ((g$C$19071$sFQex g$return$10993$sFQex) (begin (set! g$return$10993$sFQex (case-lambda ((g$C$19047$sFQex g$x$11001$sFQex) ((case-lambda ((g$C$19046$sFQex g$f$11002$sFQex) ((case-lambda ((g$C$19036$sFQex g$f$19035$sFQex) (begin (set! g$f$11002$sFQex g$f$19035$sFQex) (g$C$19036$sFQex g$f$11002$sFQex)))) g$C$19046$sFQex (case-lambda ((g$C$19037$sFQex g$x$11003$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$V$19038$sFQex) (not (case-lambda ((g$T$19039$sFQex) (if g$T$19039$sFQex (pair? (case-lambda ((g$T$19040$sFQex) (if g$T$19040$sFQex (car (case-lambda ((g$V$19041$sFQex) (g$f$11002$sFQex (case-lambda (g$IGNORE$19042$sFQex (cdr (case-lambda ((g$V$19043$sFQex) (g$f$11002$sFQex g$C$19037$sFQex g$V$19043$sFQex))) g$x$11003$sFQex))) g$V$19041$sFQex))) g$x$11003$sFQex) (g$vector?$6166$sFQex (case-lambda ((g$T$19044$sFQex) (if g$T$19044$sFQex (g$vector-for-each$6229$sFQex g$C$19037$sFQex g$f$11002$sFQex g$x$11003$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$T$19045$sFQex) (if g$T$19045$sFQex (g$syntax-violation$9073$sFQex g$C$19037$sFQex '#f '"raw symbol encountered in output of macro" g$expr$10991$sFQex g$x$11003$sFQex) (void g$C$19037$sFQex)))) g$x$11003$sFQex)))) g$x$11003$sFQex)))) g$x$11003$sFQex) (void g$C$19037$sFQex)))) g$V$19038$sFQex))) g$x$11003$sFQex)))))) (case-lambda ((g$V$19048$sFQex) (g$V$19048$sFQex (case-lambda (g$IGNORE$19049$sFQex (g$gen-mark$8666$sFQex (case-lambda ((g$V$19050$sFQex) (g$add-mark$8671$sFQex g$C$19047$sFQex g$V$19050$sFQex g$x$11001$sFQex g$expr$10991$sFQex)))))) g$x$11001$sFQex))) uninitialized)))) (g$add-mark$8671$sFQex (case-lambda ((g$V$19072$sFQex) (g$transformer$10990$sFQex (case-lambda ((g$V$19073$sFQex) ((case-lambda ((g$C$19068$sFQex g$x$10994$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$19069$sFQex) (if g$T$19069$sFQex (g$x$10994$sFQex (case-lambda ((g$V$19070$sFQex) (g$return$10993$sFQex g$C$19068$sFQex g$V$19070$sFQex))) (case-lambda ((g$C$19062$sFQex g$id$10995$sFQex) ((case-lambda ((g$J$19065$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$19066$sFQex) (not (case-lambda ((g$T$19067$sFQex) (if g$T$19067$sFQex (g$assertion-violation$6456$sFQex g$J$19065$sFQex 'rho '"not an identifier" g$id$10995$sFQex) (void g$J$19065$sFQex)))) g$V$19066$sFQex))) g$id$10995$sFQex))) (case-lambda (g$IGNORE$19063$sFQex (g$id->label$8695$sFQex (case-lambda ((g$V$19064$sFQex) ((case-lambda ((g$C$19060$sFQex g$label$10996$sFQex) (g$label->binding$8697$sFQex (case-lambda ((g$V$19061$sFQex) ((case-lambda ((g$C$19058$sFQex g$binding$10997$sFQex) (car (case-lambda ((g$V$19059$sFQex) ((case-lambda ((g$C$19053$sFQex g$t$10998$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19054$sFQex) (if g$T$19054$sFQex (g$cadr$6177$sFQex g$C$19053$sFQex g$binding$10997$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19055$sFQex) (if g$T$19055$sFQex (g$cddr$6179$sFQex (case-lambda ((g$V$19056$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$19057$sFQex) ((case-lambda ((g$C$19051$sFQex g$lib$10999$sFQex g$loc$11000$sFQex) (g$visit-library$8490$sFQex (case-lambda (g$IGNORE$19052$sFQex (symbol-value g$C$19051$sFQex g$loc$11000$sFQex))) g$lib$10999$sFQex))) g$C$19053$sFQex g$V$19057$sFQex g$V$19056$sFQex))) g$binding$10997$sFQex))) g$binding$10997$sFQex) (g$C$19053$sFQex '#f)))) g$t$10998$sFQex '(global-ctv))))) g$t$10998$sFQex '(local-ctv)))) g$C$19058$sFQex g$V$19059$sFQex))) g$binding$10997$sFQex))) g$C$19060$sFQex g$V$19061$sFQex))) g$label$10996$sFQex g$r$10992$sFQex))) g$C$19062$sFQex g$V$19064$sFQex))) g$id$10995$sFQex))))))) (g$return$10993$sFQex g$C$19068$sFQex g$x$10994$sFQex)))) g$x$10994$sFQex))) g$C$19071$sFQex g$V$19073$sFQex))) g$V$19072$sFQex))) g$anti-mark$8667$sFQex g$expr$10991$sFQex '#f)))) g$C$19074$sFQex uninitialized)))))) (library-letrec*-identity 'g$do-macro-call$8973$sFQex))) (g$chi-macro$8974$sFQex g$chi-macro$12493$sFQex ((case-lambda ((g$C$20934$sFQex) (g$C$20934$sFQex (case-lambda ((g$C$19075$sFQex g$p$11004$sFQex g$e$11005$sFQex g$r$11006$sFQex) (g$macro-transformer$8971$sFQex (case-lambda ((g$V$19076$sFQex) (g$do-macro-call$8973$sFQex g$C$19075$sFQex g$V$19076$sFQex g$e$11005$sFQex g$r$11006$sFQex))) g$p$11004$sFQex)))))) (library-letrec*-identity 'g$chi-macro$8974$sFQex))) (g$chi-local-macro$8975$sFQex g$chi-local-macro$12494$sFQex ((case-lambda ((g$C$20935$sFQex) (g$C$20935$sFQex (case-lambda ((g$C$19077$sFQex g$p$11007$sFQex g$e$11008$sFQex g$r$11009$sFQex) (g$local-macro-transformer$8972$sFQex (case-lambda ((g$V$19078$sFQex) (g$do-macro-call$8973$sFQex g$C$19077$sFQex g$V$19078$sFQex g$e$11008$sFQex g$r$11009$sFQex))) g$p$11007$sFQex)))))) (library-letrec*-identity 'g$chi-local-macro$8975$sFQex))) (g$chi-global-macro$8976$sFQex g$chi-global-macro$12495$sFQex ((case-lambda ((g$C$20936$sFQex) (g$C$20936$sFQex (case-lambda ((g$C$19087$sFQex g$p$11010$sFQex g$e$11011$sFQex g$r$11012$sFQex) (cdr (case-lambda ((g$V$19088$sFQex) (car (case-lambda ((g$V$19089$sFQex) ((case-lambda ((g$C$19084$sFQex g$lib$11013$sFQex g$loc$11014$sFQex) (g$visit-library$8490$sFQex (case-lambda (g$IGNORE$19085$sFQex (symbol-value (case-lambda ((g$V$19086$sFQex) ((case-lambda ((g$C$19080$sFQex g$x$11015$sFQex) ((case-lambda ((g$J$19082$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$T$19083$sFQex) (if g$T$19083$sFQex (g$J$19082$sFQex g$x$11015$sFQex) (g$assertion-violation$6456$sFQex g$J$19082$sFQex 'chi-global-macro '"BUG: not a procedure" g$x$11015$sFQex)))) g$x$11015$sFQex))) (case-lambda ((g$V$19081$sFQex) ((case-lambda ((g$C$19079$sFQex g$transformer$11016$sFQex) (g$do-macro-call$8973$sFQex g$C$19079$sFQex g$transformer$11016$sFQex g$e$11011$sFQex g$r$11012$sFQex))) g$C$19080$sFQex g$V$19081$sFQex)))))) g$C$19084$sFQex g$V$19086$sFQex))) g$loc$11014$sFQex))) g$lib$11013$sFQex))) g$C$19087$sFQex g$V$19089$sFQex g$V$19088$sFQex))) g$p$11010$sFQex))) g$p$11010$sFQex)))))) (library-letrec*-identity 'g$chi-global-macro$8976$sFQex))) (g$chi-expr*$8977$sFQex g$chi-expr*$12496$sFQex ((case-lambda ((g$C$20937$sFQex) (g$C$20937$sFQex (case-lambda ((g$C$19093$sFQex g$e*$11017$sFQex g$r$11018$sFQex g$mr$11019$sFQex) (null? (case-lambda ((g$T$19094$sFQex) (if g$T$19094$sFQex (g$C$19093$sFQex '()) (car (case-lambda ((g$V$19095$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$19096$sFQex) ((case-lambda ((g$C$19090$sFQex g$e$11020$sFQex) (cdr (case-lambda ((g$V$19091$sFQex) (g$chi-expr*$8977$sFQex (case-lambda ((g$V$19092$sFQex) (cons g$C$19090$sFQex g$e$11020$sFQex g$V$19092$sFQex))) g$V$19091$sFQex g$r$11018$sFQex g$mr$11019$sFQex))) g$e*$11017$sFQex))) g$C$19093$sFQex g$V$19096$sFQex))) g$V$19095$sFQex g$r$11018$sFQex g$mr$11019$sFQex))) g$e*$11017$sFQex)))) g$e*$11017$sFQex)))))) (library-letrec*-identity 'g$chi-expr*$8977$sFQex))) (g$chi-application$8978$sFQex g$chi-application$12497$sFQex ((case-lambda ((g$C$20938$sFQex) (g$C$20938$sFQex (case-lambda ((g$C$19104$sFQex g$e$11021$sFQex g$r$11022$sFQex g$mr$11023$sFQex) ((case-lambda ((g$C$19102$sFQex g$t$11024$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19103$sFQex) ((case-lambda ((g$C$19101$sFQex g$ls/false$11025$sFQex) (if g$ls/false$11025$sFQex (apply g$C$19101$sFQex (case-lambda ((g$C$19099$sFQex g$rator$11026$sFQex g$rands$11027$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$19100$sFQex) ((case-lambda ((g$C$19097$sFQex g$rator$11028$sFQex) (g$chi-expr*$8977$sFQex (case-lambda ((g$V$19098$sFQex) (cons g$C$19097$sFQex g$rator$11028$sFQex g$V$19098$sFQex))) g$rands$11027$sFQex g$r$11022$sFQex g$mr$11023$sFQex))) g$C$19099$sFQex g$V$19100$sFQex))) g$rator$11026$sFQex g$r$11022$sFQex g$mr$11023$sFQex))) g$ls/false$11025$sFQex) (g$syntax-violation$9073$sFQex g$C$19101$sFQex '#f '"invalid syntax" g$t$11024$sFQex)))) g$C$19102$sFQex g$V$19103$sFQex))) g$t$11024$sFQex '(any . each-any)))) g$C$19104$sFQex g$e$11021$sFQex)))))) (library-letrec*-identity 'g$chi-application$8978$sFQex))) (g$chi-expr$8979$sFQex g$chi-expr$12498$sFQex ((case-lambda ((g$C$20939$sFQex) (g$C$20939$sFQex (case-lambda ((g$C$19183$sFQex g$e$11029$sFQex g$r$11030$sFQex g$mr$11031$sFQex) (call-with-values g$C$19183$sFQex (case-lambda ((g$C$19105$sFQex) (g$syntax-type$8702$sFQex g$C$19105$sFQex g$e$11029$sFQex g$r$11030$sFQex))) (case-lambda ((g$C$19182$sFQex g$type$11035$sFQex g$value$11036$sFQex g$kwd$11037$sFQex) ((case-lambda ((g$C$19181$sFQex g$kwd$11038$sFQex g$value$11039$sFQex g$type$11040$sFQex) ((case-lambda ((g$C$19156$sFQex g$t$11041$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19157$sFQex) (if g$T$19157$sFQex (g$core-macro-transformer$8968$sFQex (case-lambda ((g$V$19158$sFQex) ((case-lambda ((g$C$19106$sFQex g$transformer$11042$sFQex) (g$transformer$11042$sFQex g$C$19106$sFQex g$e$11029$sFQex g$r$11030$sFQex g$mr$11031$sFQex))) g$C$19156$sFQex g$V$19158$sFQex))) g$value$11039$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19159$sFQex) (if g$T$19159$sFQex (car (case-lambda ((g$V$19160$sFQex) ((case-lambda ((g$C$19110$sFQex g$lib$11043$sFQex) (cdr (case-lambda ((g$V$19111$sFQex) ((case-lambda ((g$C$19107$sFQex g$loc$11044$sFQex) (g$inv-collector$9013$sFQex (case-lambda ((g$V$19108$sFQex) (g$V$19108$sFQex (case-lambda (g$IGNORE$19109$sFQex (g$C$19107$sFQex g$loc$11044$sFQex))) g$lib$11043$sFQex)))))) g$C$19110$sFQex g$V$19111$sFQex))) g$value$11039$sFQex))) g$C$19156$sFQex g$V$19160$sFQex))) g$value$11039$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19161$sFQex) (if g$T$19161$sFQex ((case-lambda ((g$C$19112$sFQex g$name$11045$sFQex) (list g$C$19112$sFQex 'primitive g$name$11045$sFQex))) g$C$19156$sFQex g$value$11039$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19162$sFQex) (if g$T$19162$sFQex (g$chi-application$8978$sFQex g$C$19156$sFQex g$e$11029$sFQex g$r$11030$sFQex g$mr$11031$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19163$sFQex) (if g$T$19163$sFQex (g$lexical-var$8905$sFQex (case-lambda ((g$V$19164$sFQex) ((case-lambda ((g$C$19113$sFQex g$lex$11046$sFQex) (g$C$19113$sFQex g$lex$11046$sFQex))) g$C$19156$sFQex g$V$19164$sFQex))) g$value$11039$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19165$sFQex) (if g$T$19165$sFQex (g$chi-global-macro$8976$sFQex (case-lambda ((g$V$19166$sFQex) (g$chi-expr$8979$sFQex g$C$19156$sFQex g$V$19166$sFQex g$r$11030$sFQex g$mr$11031$sFQex))) g$value$11039$sFQex g$e$11029$sFQex g$r$11030$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19167$sFQex) (if g$T$19167$sFQex (g$chi-local-macro$8975$sFQex (case-lambda ((g$V$19168$sFQex) (g$chi-expr$8979$sFQex g$C$19156$sFQex g$V$19168$sFQex g$r$11030$sFQex g$mr$11031$sFQex))) g$value$11039$sFQex g$e$11029$sFQex g$r$11030$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19169$sFQex) (if g$T$19169$sFQex (g$chi-macro$8974$sFQex (case-lambda ((g$V$19170$sFQex) (g$chi-expr$8979$sFQex g$C$19156$sFQex g$V$19170$sFQex g$r$11030$sFQex g$mr$11031$sFQex))) g$value$11039$sFQex g$e$11029$sFQex g$r$11030$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19171$sFQex) (if g$T$19171$sFQex ((case-lambda ((g$C$19114$sFQex g$datum$11047$sFQex) (list g$C$19114$sFQex 'quote g$datum$11047$sFQex))) g$C$19156$sFQex g$value$11039$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19172$sFQex) (if g$T$19172$sFQex (g$chi-set!$8980$sFQex g$C$19156$sFQex g$e$11029$sFQex g$r$11030$sFQex g$mr$11031$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19173$sFQex) (if g$T$19173$sFQex ((case-lambda ((g$C$19119$sFQex g$t$11048$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19120$sFQex) ((case-lambda ((g$C$19118$sFQex g$ls/false$11049$sFQex) (if g$ls/false$11049$sFQex (apply g$C$19118$sFQex (case-lambda ((g$C$19115$sFQex g$x$11050$sFQex g$x*$11051$sFQex) (cons (case-lambda ((g$V$19116$sFQex) (g$chi-expr*$8977$sFQex (case-lambda ((g$V$19117$sFQex) (g$build-sequence$8611$sFQex g$C$19115$sFQex '#f g$V$19117$sFQex))) g$V$19116$sFQex g$r$11030$sFQex g$mr$11031$sFQex))) g$x$11050$sFQex g$x*$11051$sFQex))) g$ls/false$11049$sFQex) (g$syntax-violation$9073$sFQex g$C$19118$sFQex '#f '"invalid syntax" g$t$11048$sFQex)))) g$C$19119$sFQex g$V$19120$sFQex))) g$t$11048$sFQex '(_ any . each-any)))) g$C$19156$sFQex g$e$11029$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19174$sFQex) (if g$T$19174$sFQex ((case-lambda ((g$C$19147$sFQex g$t$11052$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19148$sFQex) ((case-lambda ((g$C$19144$sFQex g$ls/false$11053$sFQex) ((case-lambda ((g$J$19146$sFQex) (if g$ls/false$11053$sFQex (apply g$J$19146$sFQex (case-lambda ((g$C$19121$sFQex g$xlhs*$11054$sFQex g$xrhs*$11055$sFQex g$xbody$11056$sFQex g$xbody*$11057$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$V$19122$sFQex) (not (case-lambda ((g$T$19123$sFQex) (if g$T$19123$sFQex (g$syntax-violation$9073$sFQex g$C$19121$sFQex '#f '"invalid identifiers" g$e$11029$sFQex) (void g$C$19121$sFQex)))) g$V$19122$sFQex))) g$xlhs*$11054$sFQex))) g$ls/false$11053$sFQex) (g$J$19146$sFQex '#f)))) (case-lambda ((g$T$19145$sFQex) (if g$T$19145$sFQex (apply g$C$19144$sFQex (case-lambda ((g$C$19142$sFQex g$xlhs*$11058$sFQex g$xrhs*$11059$sFQex g$xbody$11060$sFQex g$xbody*$11061$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19143$sFQex) ((case-lambda ((g$C$19140$sFQex g$xlab*$11062$sFQex) (g$make-full-rib$8650$sFQex (case-lambda ((g$V$19141$sFQex) ((case-lambda ((g$C$19138$sFQex g$xrib$11063$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19139$sFQex) ((case-lambda ((g$C$19125$sFQex g$xb*$11064$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19126$sFQex) (append (case-lambda ((g$V$19127$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19128$sFQex) (append (case-lambda ((g$V$19129$sFQex) (cons (case-lambda ((g$V$19130$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19131$sFQex) (g$chi-expr*$8977$sFQex (case-lambda ((g$V$19132$sFQex) (g$build-sequence$8611$sFQex g$C$19125$sFQex '#f g$V$19132$sFQex))) g$V$19131$sFQex g$V$19129$sFQex g$V$19127$sFQex))) (case-lambda ((g$C$19124$sFQex g$x$11065$sFQex) (g$add-subst$8672$sFQex g$C$19124$sFQex g$xrib$11063$sFQex g$x$11065$sFQex))) g$V$19130$sFQex))) g$xbody$11060$sFQex g$xbody*$11061$sFQex))) g$V$19128$sFQex g$r$11030$sFQex))) cons g$xlab*$11062$sFQex g$xb*$11064$sFQex))) g$V$19126$sFQex g$mr$11031$sFQex))) cons g$xlab*$11062$sFQex g$xb*$11064$sFQex))) g$C$19138$sFQex g$V$19139$sFQex))) (case-lambda ((g$C$19133$sFQex g$x$11066$sFQex) ((case-lambda ((g$J$19136$sFQex) (eq? (case-lambda ((g$T$19137$sFQex) (if g$T$19137$sFQex (g$J$19136$sFQex g$x$11066$sFQex) (g$add-subst$8672$sFQex g$J$19136$sFQex g$xrib$11063$sFQex g$x$11066$sFQex)))) g$type$11040$sFQex 'let-syntax))) (case-lambda ((g$V$19134$sFQex) (g$expand-transformer$9006$sFQex (case-lambda ((g$V$19135$sFQex) (g$make-eval-transformer$8715$sFQex g$C$19133$sFQex g$V$19135$sFQex))) g$V$19134$sFQex g$mr$11031$sFQex)))))) g$xrhs*$11059$sFQex))) g$C$19140$sFQex g$V$19141$sFQex))) g$xlhs*$11058$sFQex g$xlab*$11062$sFQex))) g$C$19142$sFQex g$V$19143$sFQex))) g$gen-label$8623$sFQex g$xlhs*$11058$sFQex))) g$ls/false$11053$sFQex) (g$syntax-violation$9073$sFQex g$C$19144$sFQex '#f '"invalid syntax" g$t$11052$sFQex))))))) g$C$19147$sFQex g$V$19148$sFQex))) g$t$11052$sFQex '(_ #(each (any any)) any . each-any)))) g$C$19156$sFQex g$e$11029$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19175$sFQex) (if g$T$19175$sFQex (g$syntax-violation$9073$sFQex g$C$19156$sFQex '#f '"identifier out of context" g$e$11029$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19176$sFQex) (if g$T$19176$sFQex (g$syntax-violation$9073$sFQex g$C$19156$sFQex '#f '"reference to pattern variable outside a syntax form" g$e$11029$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19177$sFQex) (if g$T$19177$sFQex ((case-lambda ((g$C$19149$sFQex g$t$11067$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19150$sFQex) (if g$T$19150$sFQex (g$C$19149$sFQex '"a definition") (g$memv$5673$sFQex (case-lambda ((g$T$19151$sFQex) (if g$T$19151$sFQex (g$C$19149$sFQex '"a define-syntax") (g$memv$5673$sFQex (case-lambda ((g$T$19152$sFQex) (if g$T$19152$sFQex (g$C$19149$sFQex '"a module definition") (g$memv$5673$sFQex (case-lambda ((g$T$19153$sFQex) (if g$T$19153$sFQex (g$C$19149$sFQex '"a library definition") (g$memv$5673$sFQex (case-lambda ((g$T$19154$sFQex) (if g$T$19154$sFQex (g$C$19149$sFQex '"an import declaration") (g$memv$5673$sFQex (case-lambda ((g$T$19155$sFQex) (if g$T$19155$sFQex (g$C$19149$sFQex '"an export declaration") (g$C$19149$sFQex '"a non-expression")))) g$t$11067$sFQex '(export))))) g$t$11067$sFQex '(import))))) g$t$11067$sFQex '(library))))) g$t$11067$sFQex '(module))))) g$t$11067$sFQex '(define-syntax))))) g$t$11067$sFQex '(define)))) (case-lambda ((g$V$19178$sFQex) (string-append (case-lambda ((g$V$19179$sFQex) (g$syntax-violation$9073$sFQex g$C$19156$sFQex '#f g$V$19179$sFQex g$e$11029$sFQex))) g$V$19178$sFQex '" was found where an expression was expected"))) g$type$11040$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19180$sFQex) (if g$T$19180$sFQex (g$syntax-violation$9073$sFQex g$C$19156$sFQex '#f '"attempt to reference an unexportable variable" g$e$11029$sFQex) (g$syntax-violation$9073$sFQex g$C$19156$sFQex '#f '"invalid expression" g$e$11029$sFQex)))) g$t$11041$sFQex '(mutable))))) g$t$11041$sFQex '(define define-syntax module import library))))) g$t$11041$sFQex '(syntax))))) g$t$11041$sFQex '(displaced-lexical))))) g$t$11041$sFQex '(let-syntax letrec-syntax))))) g$t$11041$sFQex '(begin))))) g$t$11041$sFQex '(set!))))) g$t$11041$sFQex '(constant))))) g$t$11041$sFQex '(macro macro!))))) g$t$11041$sFQex '(local-macro local-macro!))))) g$t$11041$sFQex '(global-macro global-macro!))))) g$t$11041$sFQex '(lexical))))) g$t$11041$sFQex '(call))))) g$t$11041$sFQex '(core-prim))))) g$t$11041$sFQex '(global))))) g$t$11041$sFQex '(core-macro)))) g$C$19181$sFQex g$type$11040$sFQex))) g$C$19182$sFQex g$kwd$11037$sFQex g$value$11036$sFQex g$type$11035$sFQex))))))))) (library-letrec*-identity 'g$chi-expr$8979$sFQex))) (g$chi-set!$8980$sFQex g$chi-set!$12499$sFQex ((case-lambda ((g$C$20940$sFQex) (g$C$20940$sFQex (case-lambda ((g$C$19206$sFQex g$e$11068$sFQex g$r$11069$sFQex g$mr$11070$sFQex) ((case-lambda ((g$C$19204$sFQex g$t$11071$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19205$sFQex) ((case-lambda ((g$C$19201$sFQex g$ls/false$11072$sFQex) ((case-lambda ((g$J$19203$sFQex) (if g$ls/false$11072$sFQex (apply g$J$19203$sFQex (case-lambda ((g$C$19184$sFQex g$x$11073$sFQex g$v$11074$sFQex) (g$id?$8682$sFQex g$C$19184$sFQex g$x$11073$sFQex))) g$ls/false$11072$sFQex) (g$J$19203$sFQex '#f)))) (case-lambda ((g$T$19202$sFQex) (if g$T$19202$sFQex (apply g$C$19201$sFQex (case-lambda ((g$C$19200$sFQex g$x$11075$sFQex g$v$11076$sFQex) (call-with-values g$C$19200$sFQex (case-lambda ((g$C$19185$sFQex) (g$syntax-type$8702$sFQex g$C$19185$sFQex g$x$11075$sFQex g$r$11069$sFQex))) (case-lambda ((g$C$19199$sFQex g$type$11080$sFQex g$value$11081$sFQex g$kwd$11082$sFQex) ((case-lambda ((g$C$19198$sFQex g$kwd$11083$sFQex g$value$11084$sFQex g$type$11085$sFQex) ((case-lambda ((g$C$19186$sFQex g$t$11086$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19187$sFQex) (if g$T$19187$sFQex (g$set-lexical-mutable!$8907$sFQex (case-lambda (g$IGNORE$19188$sFQex (g$chi-expr$8979$sFQex (case-lambda ((g$V$19189$sFQex) (g$lexical-var$8905$sFQex (case-lambda ((g$V$19190$sFQex) (list g$C$19186$sFQex 'set! g$V$19190$sFQex g$V$19189$sFQex))) g$value$11084$sFQex))) g$v$11076$sFQex g$r$11069$sFQex g$mr$11070$sFQex))) g$value$11084$sFQex '#t) (g$memv$5673$sFQex (case-lambda ((g$T$19191$sFQex) (if g$T$19191$sFQex (g$syntax-violation$9073$sFQex g$C$19186$sFQex '#f '"cannot modify imported core primitive" g$e$11068$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19192$sFQex) (if g$T$19192$sFQex (g$syntax-violation$9073$sFQex g$C$19186$sFQex '#f '"attempt to modify imported binding" g$e$11068$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19193$sFQex) (if g$T$19193$sFQex (g$chi-global-macro$8976$sFQex (case-lambda ((g$V$19194$sFQex) (g$chi-expr$8979$sFQex g$C$19186$sFQex g$V$19194$sFQex g$r$11069$sFQex g$mr$11070$sFQex))) g$value$11084$sFQex g$e$11068$sFQex g$r$11069$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19195$sFQex) (if g$T$19195$sFQex (g$chi-local-macro$8975$sFQex (case-lambda ((g$V$19196$sFQex) (g$chi-expr$8979$sFQex g$C$19186$sFQex g$V$19196$sFQex g$r$11069$sFQex g$mr$11070$sFQex))) g$value$11084$sFQex g$e$11068$sFQex g$r$11069$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19197$sFQex) (if g$T$19197$sFQex (g$syntax-violation$9073$sFQex g$C$19186$sFQex '#f '"attempt to assign to an unexportable variable" g$e$11068$sFQex) (g$syntax-violation$9073$sFQex g$C$19186$sFQex '#f '"invalid syntax" g$e$11068$sFQex)))) g$t$11086$sFQex '(mutable))))) g$t$11086$sFQex '(local-macro!))))) g$t$11086$sFQex '(global-macro!))))) g$t$11086$sFQex '(global))))) g$t$11086$sFQex '(core-prim))))) g$t$11086$sFQex '(lexical)))) g$C$19198$sFQex g$type$11085$sFQex))) g$C$19199$sFQex g$kwd$11082$sFQex g$value$11081$sFQex g$type$11080$sFQex)))))) g$ls/false$11072$sFQex) (g$syntax-violation$9073$sFQex g$C$19201$sFQex '#f '"invalid syntax" g$t$11071$sFQex))))))) g$C$19204$sFQex g$V$19205$sFQex))) g$t$11071$sFQex '(_ any any)))) g$C$19206$sFQex g$e$11068$sFQex)))))) (library-letrec*-identity 'g$chi-set!$8980$sFQex))) (g$verify-formals$8981$sFQex g$verify-formals$12500$sFQex ((case-lambda ((g$C$20941$sFQex) (g$C$20941$sFQex (case-lambda ((g$C$19224$sFQex g$fmls$11087$sFQex g$stx$11088$sFQex) ((case-lambda ((g$C$19222$sFQex g$t$11089$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19223$sFQex) ((case-lambda ((g$C$19221$sFQex g$ls/false$11090$sFQex) (if g$ls/false$11090$sFQex (apply g$C$19221$sFQex (case-lambda ((g$C$19207$sFQex g$x*$11091$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$V$19208$sFQex) (not (case-lambda ((g$T$19209$sFQex) (if g$T$19209$sFQex (g$invalid-fmls-error$8926$sFQex g$C$19207$sFQex g$stx$11088$sFQex g$fmls$11087$sFQex) (void g$C$19207$sFQex)))) g$V$19208$sFQex))) g$x*$11091$sFQex))) g$ls/false$11090$sFQex) ((case-lambda ((g$C$19219$sFQex g$t$11092$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19220$sFQex) ((case-lambda ((g$C$19218$sFQex g$ls/false$11093$sFQex) (if g$ls/false$11093$sFQex (apply g$C$19218$sFQex (case-lambda ((g$C$19210$sFQex g$x*$11094$sFQex g$x$11095$sFQex) (cons (case-lambda ((g$V$19211$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$V$19212$sFQex) (not (case-lambda ((g$T$19213$sFQex) (if g$T$19213$sFQex (g$invalid-fmls-error$8926$sFQex g$C$19210$sFQex g$stx$11088$sFQex g$fmls$11087$sFQex) (void g$C$19210$sFQex)))) g$V$19212$sFQex))) g$V$19211$sFQex))) g$x$11095$sFQex g$x*$11094$sFQex))) g$ls/false$11093$sFQex) ((case-lambda ((g$C$19216$sFQex g$t$11096$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19217$sFQex) ((case-lambda ((g$C$19215$sFQex g$ls/false$11097$sFQex) (if g$ls/false$11097$sFQex (apply g$C$19215$sFQex (case-lambda ((g$C$19214$sFQex) (g$syntax-violation$9073$sFQex g$C$19214$sFQex '#f '"invalid syntax" g$stx$11088$sFQex))) g$ls/false$11097$sFQex) (g$syntax-violation$9073$sFQex g$C$19215$sFQex '#f '"invalid syntax" g$t$11096$sFQex)))) g$C$19216$sFQex g$V$19217$sFQex))) g$t$11096$sFQex '_))) g$C$19218$sFQex g$t$11092$sFQex)))) g$C$19219$sFQex g$V$19220$sFQex))) g$t$11092$sFQex '#(each+ any () any)))) g$C$19221$sFQex g$t$11089$sFQex)))) g$C$19222$sFQex g$V$19223$sFQex))) g$t$11089$sFQex 'each-any))) g$C$19224$sFQex g$fmls$11087$sFQex)))))) (library-letrec*-identity 'g$verify-formals$8981$sFQex))) (g$chi-lambda-clause$8982$sFQex g$chi-lambda-clause$12501$sFQex ((case-lambda ((g$C$20942$sFQex) (g$C$20942$sFQex (case-lambda ((g$C$19260$sFQex g$stx$11098$sFQex g$fmls$11099$sFQex g$body*$11100$sFQex g$r$11101$sFQex g$mr$11102$sFQex) ((case-lambda ((g$C$19258$sFQex g$t$11103$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19259$sFQex) ((case-lambda ((g$C$19257$sFQex g$ls/false$11104$sFQex) (if g$ls/false$11104$sFQex (apply g$C$19257$sFQex (case-lambda ((g$C$19230$sFQex g$x*$11105$sFQex) (g$verify-formals$8981$sFQex (case-lambda (g$IGNORE$19231$sFQex (g$map$5680$sFQex (case-lambda ((g$V$19232$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19233$sFQex) ((case-lambda ((g$C$19225$sFQex g$lex*$11106$sFQex g$lab*$11107$sFQex) (g$add-lexicals$8909$sFQex (case-lambda ((g$V$19226$sFQex) (g$make-full-rib$8650$sFQex (case-lambda ((g$V$19227$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$19228$sFQex) (g$chi-internal$8990$sFQex (case-lambda ((g$V$19229$sFQex) (values g$C$19225$sFQex g$lex*$11106$sFQex g$V$19229$sFQex))) g$V$19228$sFQex g$V$19226$sFQex g$mr$11102$sFQex))) g$V$19227$sFQex g$body*$11100$sFQex))) g$x*$11105$sFQex g$lab*$11107$sFQex))) g$lab*$11107$sFQex g$lex*$11106$sFQex g$r$11101$sFQex))) g$C$19230$sFQex g$V$19233$sFQex g$V$19232$sFQex))) g$gen-lexical$8621$sFQex g$x*$11105$sFQex))) g$gen-label$8623$sFQex g$x*$11105$sFQex))) g$fmls$11099$sFQex g$stx$11098$sFQex))) g$ls/false$11104$sFQex) ((case-lambda ((g$C$19255$sFQex g$t$11108$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19256$sFQex) ((case-lambda ((g$C$19254$sFQex g$ls/false$11109$sFQex) (if g$ls/false$11109$sFQex (apply g$C$19254$sFQex (case-lambda ((g$C$19244$sFQex g$x*$11110$sFQex g$x$11111$sFQex) (g$verify-formals$8981$sFQex (case-lambda (g$IGNORE$19245$sFQex (g$gen-label$8623$sFQex (case-lambda ((g$V$19246$sFQex) (g$gen-lexical$8621$sFQex (case-lambda ((g$V$19247$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19248$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19249$sFQex) ((case-lambda ((g$C$19234$sFQex g$lex*$11112$sFQex g$lab*$11113$sFQex g$lex$11114$sFQex g$lab$11115$sFQex) (cons (case-lambda ((g$V$19235$sFQex) (cons (case-lambda ((g$V$19236$sFQex) (g$add-lexicals$8909$sFQex (case-lambda ((g$V$19237$sFQex) (cons (case-lambda ((g$V$19238$sFQex) (cons (case-lambda ((g$V$19239$sFQex) (g$make-full-rib$8650$sFQex (case-lambda ((g$V$19240$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$19241$sFQex) (g$chi-internal$8990$sFQex (case-lambda ((g$V$19242$sFQex) (append (case-lambda ((g$V$19243$sFQex) (values g$C$19234$sFQex g$V$19243$sFQex g$V$19242$sFQex))) g$lex*$11112$sFQex g$lex$11114$sFQex))) g$V$19241$sFQex g$V$19237$sFQex g$mr$11102$sFQex))) g$V$19240$sFQex g$body*$11100$sFQex))) g$V$19239$sFQex g$V$19238$sFQex))) g$x$11111$sFQex g$x*$11110$sFQex))) g$lab$11115$sFQex g$lab*$11113$sFQex))) g$V$19236$sFQex g$V$19235$sFQex g$r$11101$sFQex))) g$lab$11115$sFQex g$lab*$11113$sFQex))) g$lex$11114$sFQex g$lex*$11112$sFQex))) g$C$19244$sFQex g$V$19249$sFQex g$V$19248$sFQex g$V$19247$sFQex g$V$19246$sFQex))) g$gen-lexical$8621$sFQex g$x*$11110$sFQex))) g$gen-label$8623$sFQex g$x*$11110$sFQex))) g$x$11111$sFQex))) g$x$11111$sFQex))) g$fmls$11099$sFQex g$stx$11098$sFQex))) g$ls/false$11109$sFQex) ((case-lambda ((g$C$19252$sFQex g$t$11116$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19253$sFQex) ((case-lambda ((g$C$19251$sFQex g$ls/false$11117$sFQex) (if g$ls/false$11117$sFQex (apply g$C$19251$sFQex (case-lambda ((g$C$19250$sFQex) (g$syntax-violation$9073$sFQex g$C$19250$sFQex '#f '"invalid syntax" g$fmls$11099$sFQex))) g$ls/false$11117$sFQex) (g$syntax-violation$9073$sFQex g$C$19251$sFQex '#f '"invalid syntax" g$t$11116$sFQex)))) g$C$19252$sFQex g$V$19253$sFQex))) g$t$11116$sFQex '_))) g$C$19254$sFQex g$t$11108$sFQex)))) g$C$19255$sFQex g$V$19256$sFQex))) g$t$11108$sFQex '#(each+ any () any)))) g$C$19257$sFQex g$t$11103$sFQex)))) g$C$19258$sFQex g$V$19259$sFQex))) g$t$11103$sFQex 'each-any))) g$C$19260$sFQex g$fmls$11099$sFQex)))))) (library-letrec*-identity 'g$chi-lambda-clause$8982$sFQex))) (g$chi-lambda-clause*$8983$sFQex g$chi-lambda-clause*$12502$sFQex ((case-lambda ((g$C$20943$sFQex) (g$C$20943$sFQex (case-lambda ((g$C$19273$sFQex g$stx$11118$sFQex g$fmls*$11119$sFQex g$body**$11120$sFQex g$r$11121$sFQex g$mr$11122$sFQex) (null? (case-lambda ((g$T$19274$sFQex) (if g$T$19274$sFQex (values g$C$19273$sFQex '() '()) (call-with-values g$C$19273$sFQex (case-lambda ((g$C$19261$sFQex) (car (case-lambda ((g$V$19262$sFQex) (car (case-lambda ((g$V$19263$sFQex) (g$chi-lambda-clause$8982$sFQex g$C$19261$sFQex g$stx$11118$sFQex g$V$19263$sFQex g$V$19262$sFQex g$r$11121$sFQex g$mr$11122$sFQex))) g$fmls*$11119$sFQex))) g$body**$11120$sFQex))) (case-lambda ((g$C$19272$sFQex g$a$11125$sFQex g$b$11126$sFQex) ((case-lambda ((g$C$19271$sFQex g$b$11127$sFQex g$a$11128$sFQex) (call-with-values g$C$19271$sFQex (case-lambda ((g$C$19264$sFQex) (cdr (case-lambda ((g$V$19265$sFQex) (cdr (case-lambda ((g$V$19266$sFQex) (g$chi-lambda-clause*$8983$sFQex g$C$19264$sFQex g$stx$11118$sFQex g$V$19266$sFQex g$V$19265$sFQex g$r$11121$sFQex g$mr$11122$sFQex))) g$fmls*$11119$sFQex))) g$body**$11120$sFQex))) (case-lambda ((g$C$19270$sFQex g$a*$11131$sFQex g$b*$11132$sFQex) ((case-lambda ((g$C$19267$sFQex g$b*$11133$sFQex g$a*$11134$sFQex) (cons (case-lambda ((g$V$19268$sFQex) (cons (case-lambda ((g$V$19269$sFQex) (values g$C$19267$sFQex g$V$19269$sFQex g$V$19268$sFQex))) g$a$11128$sFQex g$a*$11134$sFQex))) g$b$11127$sFQex g$b*$11133$sFQex))) g$C$19270$sFQex g$b*$11132$sFQex g$a*$11131$sFQex)))))) g$C$19272$sFQex g$b$11126$sFQex g$a$11125$sFQex))))))) g$fmls*$11119$sFQex)))))) (library-letrec*-identity 'g$chi-lambda-clause*$8983$sFQex))) (g$chi-defun$8984$sFQex g$chi-defun$12503$sFQex ((case-lambda ((g$C$20944$sFQex) (g$C$20944$sFQex (case-lambda ((g$C$19279$sFQex g$x$11135$sFQex g$r$11136$sFQex g$mr$11137$sFQex) (cdr (case-lambda ((g$V$19280$sFQex) (car (case-lambda ((g$V$19281$sFQex) ((case-lambda ((g$C$19278$sFQex g$fmls$11138$sFQex g$body*$11139$sFQex) (call-with-values g$C$19278$sFQex (case-lambda ((g$C$19275$sFQex) (g$chi-lambda-clause$8982$sFQex g$C$19275$sFQex g$fmls$11138$sFQex g$fmls$11138$sFQex g$body*$11139$sFQex g$r$11136$sFQex g$mr$11137$sFQex))) (case-lambda ((g$C$19277$sFQex g$fmls$11142$sFQex g$body$11143$sFQex) ((case-lambda ((g$C$19276$sFQex g$body$11144$sFQex g$fmls$11145$sFQex) (g$build-lambda$8608$sFQex g$C$19276$sFQex '#f g$fmls$11145$sFQex g$body$11144$sFQex))) g$C$19277$sFQex g$body$11143$sFQex g$fmls$11142$sFQex)))))) g$C$19279$sFQex g$V$19281$sFQex g$V$19280$sFQex))) g$x$11135$sFQex))) g$x$11135$sFQex)))))) (library-letrec*-identity 'g$chi-defun$8984$sFQex))) (g$chi-rhs$8985$sFQex g$chi-rhs$12504$sFQex ((case-lambda ((g$C$20945$sFQex) (g$C$20945$sFQex (case-lambda ((g$C$19294$sFQex g$rhs$11146$sFQex g$r$11147$sFQex g$mr$11148$sFQex) (car (case-lambda ((g$V$19295$sFQex) ((case-lambda ((g$C$19287$sFQex g$t$11149$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19288$sFQex) (if g$T$19288$sFQex (cdr (case-lambda ((g$V$19289$sFQex) (g$chi-defun$8984$sFQex g$C$19287$sFQex g$V$19289$sFQex g$r$11147$sFQex g$mr$11148$sFQex))) g$rhs$11146$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19290$sFQex) (if g$T$19290$sFQex (cdr (case-lambda ((g$V$19291$sFQex) ((case-lambda ((g$C$19282$sFQex g$expr$11150$sFQex) (g$chi-expr$8979$sFQex g$C$19282$sFQex g$expr$11150$sFQex g$r$11147$sFQex g$mr$11148$sFQex))) g$C$19287$sFQex g$V$19291$sFQex))) g$rhs$11146$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19292$sFQex) (if g$T$19292$sFQex (cdr (case-lambda ((g$V$19293$sFQex) ((case-lambda ((g$C$19283$sFQex g$expr$11151$sFQex) (g$build-void$8612$sFQex (case-lambda ((g$V$19284$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$19285$sFQex) (list (case-lambda ((g$V$19286$sFQex) (g$build-sequence$8611$sFQex g$C$19283$sFQex '#f g$V$19286$sFQex))) g$V$19285$sFQex g$V$19284$sFQex))) g$expr$11151$sFQex g$r$11147$sFQex g$mr$11148$sFQex)))))) g$C$19287$sFQex g$V$19293$sFQex))) g$rhs$11146$sFQex) (g$assertion-violation$6456$sFQex g$C$19287$sFQex 'chi-rhs '"BUG: invalid rhs" g$rhs$11146$sFQex)))) g$t$11149$sFQex '(top-expr))))) g$t$11149$sFQex '(expr))))) g$t$11149$sFQex '(defun)))) g$C$19294$sFQex g$V$19295$sFQex))) g$rhs$11146$sFQex)))))) (library-letrec*-identity 'g$chi-rhs$8985$sFQex))) (g$expand-interaction-rhs*/init*$8986$sFQex g$expand-interaction-rhs*/init*$12505$sFQex ((case-lambda ((g$C$20946$sFQex) (g$C$20946$sFQex (case-lambda ((g$C$19330$sFQex g$lhs*$11152$sFQex g$rhs*$11153$sFQex g$init*$11154$sFQex g$r$11155$sFQex g$mr$11156$sFQex) ((case-lambda ((g$C$19329$sFQex g$f$11157$sFQex) ((case-lambda ((g$C$19297$sFQex g$f$19296$sFQex) (begin (set! g$f$11157$sFQex g$f$19296$sFQex) (g$C$19297$sFQex g$f$11157$sFQex)))) g$C$19329$sFQex (case-lambda ((g$C$19325$sFQex g$lhs*$11158$sFQex g$rhs*$11159$sFQex) (null? (case-lambda ((g$T$19326$sFQex) (if g$T$19326$sFQex (g$map$5680$sFQex g$C$19325$sFQex (case-lambda ((g$C$19298$sFQex g$x$11160$sFQex) (g$chi-expr$8979$sFQex g$C$19298$sFQex g$x$11160$sFQex g$r$11155$sFQex g$mr$11156$sFQex))) g$init*$11154$sFQex) (car (case-lambda ((g$V$19327$sFQex) (car (case-lambda ((g$V$19328$sFQex) ((case-lambda ((g$C$19323$sFQex g$lhs$11161$sFQex g$rhs$11162$sFQex) (car (case-lambda ((g$V$19324$sFQex) ((case-lambda ((g$C$19313$sFQex g$t$11163$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19314$sFQex) (if g$T$19314$sFQex (cdr (case-lambda ((g$V$19315$sFQex) (g$chi-defun$8984$sFQex (case-lambda ((g$V$19316$sFQex) ((case-lambda ((g$C$19299$sFQex g$rhs$11164$sFQex) (cdr (case-lambda ((g$V$19300$sFQex) (cdr (case-lambda ((g$V$19301$sFQex) (g$f$11157$sFQex (case-lambda ((g$V$19302$sFQex) (list (case-lambda ((g$V$19303$sFQex) (cons g$C$19299$sFQex g$V$19303$sFQex g$V$19302$sFQex))) 'set! g$lhs$11161$sFQex g$rhs$11164$sFQex))) g$V$19301$sFQex g$V$19300$sFQex))) g$lhs*$11158$sFQex))) g$rhs*$11159$sFQex))) g$C$19313$sFQex g$V$19316$sFQex))) g$V$19315$sFQex g$r$11155$sFQex g$mr$11156$sFQex))) g$rhs$11162$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19317$sFQex) (if g$T$19317$sFQex (cdr (case-lambda ((g$V$19318$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$19319$sFQex) ((case-lambda ((g$C$19304$sFQex g$rhs$11165$sFQex) (cdr (case-lambda ((g$V$19305$sFQex) (cdr (case-lambda ((g$V$19306$sFQex) (g$f$11157$sFQex (case-lambda ((g$V$19307$sFQex) (list (case-lambda ((g$V$19308$sFQex) (cons g$C$19304$sFQex g$V$19308$sFQex g$V$19307$sFQex))) 'set! g$lhs$11161$sFQex g$rhs$11165$sFQex))) g$V$19306$sFQex g$V$19305$sFQex))) g$lhs*$11158$sFQex))) g$rhs*$11159$sFQex))) g$C$19313$sFQex g$V$19319$sFQex))) g$V$19318$sFQex g$r$11155$sFQex g$mr$11156$sFQex))) g$rhs$11162$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19320$sFQex) (if g$T$19320$sFQex (cdr (case-lambda ((g$V$19321$sFQex) (g$chi-expr$8979$sFQex (case-lambda ((g$V$19322$sFQex) ((case-lambda ((g$C$19309$sFQex g$e$11166$sFQex) (cdr (case-lambda ((g$V$19310$sFQex) (cdr (case-lambda ((g$V$19311$sFQex) (g$f$11157$sFQex (case-lambda ((g$V$19312$sFQex) (cons g$C$19309$sFQex g$e$11166$sFQex g$V$19312$sFQex))) g$V$19311$sFQex g$V$19310$sFQex))) g$lhs*$11158$sFQex))) g$rhs*$11159$sFQex))) g$C$19313$sFQex g$V$19322$sFQex))) g$V$19321$sFQex g$r$11155$sFQex g$mr$11156$sFQex))) g$rhs$11162$sFQex) (g$error$6457$sFQex g$C$19313$sFQex 'expand-interaction '"invallid" g$rhs$11162$sFQex)))) g$t$11163$sFQex '(top-expr))))) g$t$11163$sFQex '(expr))))) g$t$11163$sFQex '(defun)))) g$C$19323$sFQex g$V$19324$sFQex))) g$rhs$11162$sFQex))) g$C$19325$sFQex g$V$19328$sFQex g$V$19327$sFQex))) g$lhs*$11158$sFQex))) g$rhs*$11159$sFQex)))) g$lhs*$11158$sFQex)))))) (case-lambda ((g$V$19331$sFQex) (g$V$19331$sFQex g$C$19330$sFQex g$lhs*$11152$sFQex g$rhs*$11153$sFQex))) uninitialized)))))) (library-letrec*-identity 'g$expand-interaction-rhs*/init*$8986$sFQex))) (g$chi-rhs*$8987$sFQex g$chi-rhs*$12506$sFQex ((case-lambda ((g$C$20947$sFQex) (g$C$20947$sFQex (case-lambda ((g$C$19342$sFQex g$rhs*$11167$sFQex g$r$11168$sFQex g$mr$11169$sFQex) ((case-lambda ((g$C$19341$sFQex g$f$11170$sFQex) ((case-lambda ((g$C$19333$sFQex g$f$19332$sFQex) (begin (set! g$f$11170$sFQex g$f$19332$sFQex) (g$C$19333$sFQex g$f$11170$sFQex)))) g$C$19341$sFQex (case-lambda ((g$C$19337$sFQex g$ls$11171$sFQex) (null? (case-lambda ((g$T$19338$sFQex) (if g$T$19338$sFQex (g$C$19337$sFQex '()) (car (case-lambda ((g$V$19339$sFQex) (g$chi-rhs$8985$sFQex (case-lambda ((g$V$19340$sFQex) ((case-lambda ((g$C$19334$sFQex g$a$11172$sFQex) (cdr (case-lambda ((g$V$19335$sFQex) (g$f$11170$sFQex (case-lambda ((g$V$19336$sFQex) (cons g$C$19334$sFQex g$a$11172$sFQex g$V$19336$sFQex))) g$V$19335$sFQex))) g$ls$11171$sFQex))) g$C$19337$sFQex g$V$19340$sFQex))) g$V$19339$sFQex g$r$11168$sFQex g$mr$11169$sFQex))) g$ls$11171$sFQex)))) g$ls$11171$sFQex)))))) (case-lambda ((g$V$19343$sFQex) (g$V$19343$sFQex g$C$19342$sFQex g$rhs*$11167$sFQex))) uninitialized)))))) (library-letrec*-identity 'g$chi-rhs*$8987$sFQex))) (g$find-bound=?$8988$sFQex g$find-bound=?$12507$sFQex ((case-lambda ((g$C$20948$sFQex) (g$C$20948$sFQex (case-lambda ((g$C$19344$sFQex g$x$11173$sFQex g$lhs*$11174$sFQex g$rhs*$11175$sFQex) (null? (case-lambda ((g$T$19345$sFQex) (if g$T$19345$sFQex (g$C$19344$sFQex '#f) (car (case-lambda ((g$V$19346$sFQex) (g$bound-id=?$8685$sFQex (case-lambda ((g$T$19347$sFQex) (if g$T$19347$sFQex (car g$C$19344$sFQex g$rhs*$11175$sFQex) (cdr (case-lambda ((g$V$19348$sFQex) (cdr (case-lambda ((g$V$19349$sFQex) (g$find-bound=?$8988$sFQex g$C$19344$sFQex g$x$11173$sFQex g$V$19349$sFQex g$V$19348$sFQex))) g$lhs*$11174$sFQex))) g$rhs*$11175$sFQex)))) g$x$11173$sFQex g$V$19346$sFQex))) g$lhs*$11174$sFQex)))) g$lhs*$11174$sFQex)))))) (library-letrec*-identity 'g$find-bound=?$8988$sFQex))) (g$find-dups$8989$sFQex g$find-dups$12508$sFQex ((case-lambda ((g$C$20949$sFQex) (g$C$20949$sFQex (case-lambda ((g$C$19366$sFQex g$ls$11176$sFQex) ((case-lambda ((g$C$19365$sFQex g$f$11177$sFQex) ((case-lambda ((g$C$19351$sFQex g$f$19350$sFQex) (begin (set! g$f$11177$sFQex g$f$19350$sFQex) (g$C$19351$sFQex g$f$11177$sFQex)))) g$C$19365$sFQex (case-lambda ((g$C$19359$sFQex g$ls$11178$sFQex g$dups$11179$sFQex) (null? (case-lambda ((g$T$19360$sFQex) (if g$T$19360$sFQex (g$C$19359$sFQex g$dups$11179$sFQex) (cdr (case-lambda ((g$V$19361$sFQex) (cdr (case-lambda ((g$V$19362$sFQex) (car (case-lambda ((g$V$19363$sFQex) (g$find-bound=?$8988$sFQex (case-lambda ((g$V$19364$sFQex) ((case-lambda ((g$C$19357$sFQex g$t$11180$sFQex) (if g$t$11180$sFQex ((case-lambda ((g$C$19352$sFQex g$x$11181$sFQex) (car (case-lambda ((g$V$19353$sFQex) (list (case-lambda ((g$V$19354$sFQex) (cons (case-lambda ((g$V$19355$sFQex) (cdr (case-lambda ((g$V$19356$sFQex) (g$f$11177$sFQex g$C$19352$sFQex g$V$19356$sFQex g$V$19355$sFQex))) g$ls$11178$sFQex))) g$V$19354$sFQex g$dups$11179$sFQex))) g$V$19353$sFQex g$x$11181$sFQex))) g$ls$11178$sFQex))) g$C$19357$sFQex g$t$11180$sFQex) (cdr (case-lambda ((g$V$19358$sFQex) (g$f$11177$sFQex g$C$19357$sFQex g$V$19358$sFQex g$dups$11179$sFQex))) g$ls$11178$sFQex)))) g$C$19359$sFQex g$V$19364$sFQex))) g$V$19363$sFQex g$V$19362$sFQex g$V$19361$sFQex))) g$ls$11178$sFQex))) g$ls$11178$sFQex))) g$ls$11178$sFQex)))) g$ls$11178$sFQex)))))) (case-lambda ((g$V$19367$sFQex) (g$V$19367$sFQex g$C$19366$sFQex g$ls$11176$sFQex '()))) uninitialized)))))) (library-letrec*-identity 'g$find-dups$8989$sFQex))) (g$chi-internal$8990$sFQex g$chi-internal$12509$sFQex ((case-lambda ((g$C$20950$sFQex) (g$C$20950$sFQex (case-lambda ((g$C$19388$sFQex g$e*$11182$sFQex g$r$11183$sFQex g$mr$11184$sFQex) (g$make-empty-rib$8642$sFQex (case-lambda ((g$V$19389$sFQex) ((case-lambda ((g$C$19387$sFQex g$rib$11185$sFQex) (call-with-values g$C$19387$sFQex (case-lambda ((g$C$19369$sFQex) (g$syntax->list$8681$sFQex (case-lambda ((g$V$19370$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19371$sFQex) (g$chi-body*$9005$sFQex g$C$19369$sFQex g$V$19371$sFQex g$r$11183$sFQex g$mr$11184$sFQex '() '() '() '() '() g$rib$11185$sFQex '#f '#t))) (case-lambda ((g$C$19368$sFQex g$x$11194$sFQex) (g$add-subst$8672$sFQex g$C$19368$sFQex g$rib$11185$sFQex g$x$11194$sFQex))) g$V$19370$sFQex))) g$e*$11182$sFQex))) (case-lambda ((g$C$19386$sFQex g$e*$11195$sFQex g$r$11196$sFQex g$mr$11197$sFQex g$lex*$11198$sFQex g$rhs*$11199$sFQex g$mod**$11200$sFQex g$kwd*$11201$sFQex g$_exp*$11202$sFQex) ((case-lambda ((g$C$19378$sFQex g$_exp*$11203$sFQex g$kwd*$11204$sFQex g$mod**$11205$sFQex g$rhs*$11206$sFQex g$lex*$11207$sFQex g$mr$11208$sFQex g$r$11209$sFQex g$e*$11210$sFQex) ((case-lambda ((g$J$19384$sFQex) (null? (case-lambda ((g$T$19385$sFQex) (if g$T$19385$sFQex (g$syntax-violation$9073$sFQex g$J$19384$sFQex '#f '"no expression in body" g$e*$11210$sFQex) (void g$J$19384$sFQex)))) g$e*$11210$sFQex))) (case-lambda (g$IGNORE$19379$sFQex (g$reverse$6175$sFQex (case-lambda ((g$V$19380$sFQex) (apply (case-lambda ((g$V$19381$sFQex) (append (case-lambda ((g$V$19382$sFQex) (g$chi-expr*$8977$sFQex (case-lambda ((g$V$19383$sFQex) ((case-lambda ((g$C$19376$sFQex g$init*$11211$sFQex) (g$chi-rhs*$8987$sFQex (case-lambda ((g$V$19377$sFQex) ((case-lambda ((g$C$19372$sFQex g$rhs*$11212$sFQex) (g$build-sequence$8611$sFQex (case-lambda ((g$V$19373$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$19374$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$19375$sFQex) (g$build-letrec*$8614$sFQex g$C$19372$sFQex '#f g$V$19375$sFQex g$V$19374$sFQex g$V$19373$sFQex))) g$lex*$11207$sFQex))) g$rhs*$11212$sFQex))) '#f g$init*$11211$sFQex))) g$C$19376$sFQex g$V$19377$sFQex))) g$rhs*$11206$sFQex g$r$11209$sFQex g$mr$11208$sFQex))) g$C$19378$sFQex g$V$19383$sFQex))) g$V$19382$sFQex g$r$11209$sFQex g$mr$11208$sFQex))) g$V$19381$sFQex g$e*$11210$sFQex))) append g$V$19380$sFQex))) g$mod**$11205$sFQex)))))) g$C$19386$sFQex g$_exp*$11202$sFQex g$kwd*$11201$sFQex g$mod**$11200$sFQex g$rhs*$11199$sFQex g$lex*$11198$sFQex g$mr$11197$sFQex g$r$11196$sFQex g$e*$11195$sFQex)))))) g$C$19388$sFQex g$V$19389$sFQex))))))))) (library-letrec*-identity 'g$chi-internal$8990$sFQex))) (g$parse-module$8991$sFQex g$parse-module$12510$sFQex ((case-lambda ((g$C$20951$sFQex) (g$C$20951$sFQex (case-lambda ((g$C$19412$sFQex g$e$11213$sFQex) ((case-lambda ((g$C$19410$sFQex g$t$11214$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19411$sFQex) ((case-lambda ((g$C$19409$sFQex g$ls/false$11215$sFQex) (if g$ls/false$11215$sFQex (apply g$C$19409$sFQex (case-lambda ((g$C$19390$sFQex g$export*$11216$sFQex g$b*$11217$sFQex) ((case-lambda ((g$J$19393$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$V$19394$sFQex) (not (case-lambda ((g$T$19395$sFQex) (if g$T$19395$sFQex (g$syntax-violation$9073$sFQex g$J$19393$sFQex '#f '"module exports must be identifiers" g$e$11213$sFQex) (void g$J$19393$sFQex)))) g$V$19394$sFQex))) g$id?$8682$sFQex g$export*$11216$sFQex))) (case-lambda (g$IGNORE$19391$sFQex (g$list->vector$6163$sFQex (case-lambda ((g$V$19392$sFQex) (values g$C$19390$sFQex '#f g$V$19392$sFQex g$b*$11217$sFQex))) g$export*$11216$sFQex)))))) g$ls/false$11215$sFQex) ((case-lambda ((g$C$19407$sFQex g$t$11218$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19408$sFQex) ((case-lambda ((g$C$19406$sFQex g$ls/false$11219$sFQex) (if g$ls/false$11219$sFQex (apply g$C$19406$sFQex (case-lambda ((g$C$19396$sFQex g$name$11220$sFQex g$export*$11221$sFQex g$b*$11222$sFQex) ((case-lambda ((g$J$19403$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$19404$sFQex) (not (case-lambda ((g$T$19405$sFQex) (if g$T$19405$sFQex (g$syntax-violation$9073$sFQex g$J$19403$sFQex '#f '"module name must be an identifier" g$e$11213$sFQex) (void g$J$19403$sFQex)))) g$V$19404$sFQex))) g$name$11220$sFQex))) (case-lambda (g$IGNORE$19397$sFQex ((case-lambda ((g$J$19400$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$V$19401$sFQex) (not (case-lambda ((g$T$19402$sFQex) (if g$T$19402$sFQex (g$syntax-violation$9073$sFQex g$J$19400$sFQex '#f '"module exports must be identifiers" g$e$11213$sFQex) (void g$J$19400$sFQex)))) g$V$19401$sFQex))) g$id?$8682$sFQex g$export*$11221$sFQex))) (case-lambda (g$IGNORE$19398$sFQex (g$list->vector$6163$sFQex (case-lambda ((g$V$19399$sFQex) (values g$C$19396$sFQex g$name$11220$sFQex g$V$19399$sFQex g$b*$11222$sFQex))) g$export*$11221$sFQex))))))))) g$ls/false$11219$sFQex) (g$syntax-violation$9073$sFQex g$C$19406$sFQex '#f '"invalid syntax" g$t$11218$sFQex)))) g$C$19407$sFQex g$V$19408$sFQex))) g$t$11218$sFQex '(_ any each-any . each-any)))) g$C$19409$sFQex g$t$11214$sFQex)))) g$C$19410$sFQex g$V$19411$sFQex))) g$t$11214$sFQex '(_ each-any . each-any)))) g$C$19412$sFQex g$e$11213$sFQex)))))) (library-letrec*-identity 'g$parse-module$8991$sFQex))) (g$10121$8992$sFQex g$10121$12511$sFQex ((case-lambda ((g$C$20952$sFQex) (make-record-type-descriptor g$C$20952$sFQex 'module-interface '#f 'g$10124$sFQex '#t '#t '#((mutable first-mark) (mutable exp-id-vec) (mutable exp-lab-vec))))) (library-letrec*-identity 'g$10121$8992$sFQex))) (g$10123$8993$sFQex g$10123$12512$sFQex ((case-lambda ((g$C$20953$sFQex) (g$C$20953$sFQex '#f))) (library-letrec*-identity 'g$10123$8993$sFQex))) (g$10122$8994$sFQex g$10122$12513$sFQex ((case-lambda ((g$C$20954$sFQex) (make-record-constructor-descriptor g$C$20954$sFQex g$10121$8992$sFQex '#f g$10123$8993$sFQex))) (library-letrec*-identity 'g$10122$8994$sFQex))) (g$module-interface?$8995$sFQex g$module-interface?$12514$sFQex ((case-lambda ((g$C$20955$sFQex) (record-predicate g$C$20955$sFQex g$10121$8992$sFQex))) (library-letrec*-identity 'g$module-interface?$8995$sFQex))) (g$make-module-interface$8996$sFQex g$make-module-interface$12515$sFQex ((case-lambda ((g$C$20956$sFQex) (record-constructor g$C$20956$sFQex g$10122$8994$sFQex))) (library-letrec*-identity 'g$make-module-interface$8996$sFQex))) (g$module-interface-first-mark$8997$sFQex g$module-interface-first-mark$12516$sFQex ((case-lambda ((g$C$20957$sFQex) (record-accessor g$C$20957$sFQex g$10121$8992$sFQex '0))) (library-letrec*-identity 'g$module-interface-first-mark$8997$sFQex))) (g$module-interface-exp-id-vec$8998$sFQex g$module-interface-exp-id-vec$12517$sFQex ((case-lambda ((g$C$20958$sFQex) (record-accessor g$C$20958$sFQex g$10121$8992$sFQex '1))) (library-letrec*-identity 'g$module-interface-exp-id-vec$8998$sFQex))) (g$module-interface-exp-lab-vec$8999$sFQex g$module-interface-exp-lab-vec$12518$sFQex ((case-lambda ((g$C$20959$sFQex) (record-accessor g$C$20959$sFQex g$10121$8992$sFQex '2))) (library-letrec*-identity 'g$module-interface-exp-lab-vec$8999$sFQex))) (g$set-module-interface-first-mark!$9000$sFQex g$set-module-interface-first-mark!$12519$sFQex ((case-lambda ((g$C$20960$sFQex) (record-mutator g$C$20960$sFQex g$10121$8992$sFQex '0))) (library-letrec*-identity 'g$set-module-interface-first-mark!$9000$sFQex))) (g$set-module-interface-exp-id-vec!$9001$sFQex g$set-module-interface-exp-id-vec!$12520$sFQex ((case-lambda ((g$C$20961$sFQex) (record-mutator g$C$20961$sFQex g$10121$8992$sFQex '1))) (library-letrec*-identity 'g$set-module-interface-exp-id-vec!$9001$sFQex))) (g$set-module-interface-exp-lab-vec!$9002$sFQex g$set-module-interface-exp-lab-vec!$12521$sFQex ((case-lambda ((g$C$20962$sFQex) (record-mutator g$C$20962$sFQex g$10121$8992$sFQex '2))) (library-letrec*-identity 'g$set-module-interface-exp-lab-vec!$9002$sFQex))) (g$module-interface-exp-id*$9003$sFQex g$module-interface-exp-id*$12522$sFQex ((case-lambda ((g$C$20963$sFQex) (g$C$20963$sFQex (case-lambda ((g$C$19433$sFQex g$iface$11223$sFQex g$id$11224$sFQex) ((case-lambda ((g$C$19428$sFQex g$diff-marks$11225$sFQex) (begin (set! g$diff-marks$11225$sFQex (case-lambda ((g$C$19417$sFQex g$ls$11229$sFQex g$x$11230$sFQex) ((case-lambda ((g$J$19420$sFQex) (null? (case-lambda ((g$T$19421$sFQex) (if g$T$19421$sFQex (g$error$6457$sFQex g$J$19420$sFQex 'diff-marks '"BUG: should not happen") (void g$J$19420$sFQex)))) g$ls$11229$sFQex))) (case-lambda (g$IGNORE$19418$sFQex (car (case-lambda ((g$V$19419$sFQex) ((case-lambda ((g$C$19413$sFQex g$a$11231$sFQex) (eq? (case-lambda ((g$T$19414$sFQex) (if g$T$19414$sFQex (g$C$19413$sFQex '()) (cdr (case-lambda ((g$V$19415$sFQex) (g$diff-marks$11225$sFQex (case-lambda ((g$V$19416$sFQex) (cons g$C$19413$sFQex g$a$11231$sFQex g$V$19416$sFQex))) g$V$19415$sFQex g$x$11230$sFQex))) g$ls$11229$sFQex)))) g$a$11231$sFQex g$x$11230$sFQex))) g$C$19417$sFQex g$V$19419$sFQex))) g$ls$11229$sFQex))))))) (g$module-interface-exp-id-vec$8998$sFQex (case-lambda ((g$V$19429$sFQex) (g$module-interface-first-mark$8997$sFQex (case-lambda ((g$V$19430$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$19431$sFQex) (g$diff-marks$11225$sFQex (case-lambda ((g$V$19432$sFQex) ((case-lambda ((g$C$19426$sFQex g$diff$11226$sFQex g$id-vec$11227$sFQex) (null? (case-lambda ((g$T$19427$sFQex) (if g$T$19427$sFQex (g$C$19426$sFQex g$id-vec$11227$sFQex) (g$vector-map$6228$sFQex g$C$19426$sFQex (case-lambda ((g$C$19422$sFQex g$x$11228$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$19423$sFQex) (append (case-lambda ((g$V$19424$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$19425$sFQex) (g$make-stx$8655$sFQex g$C$19422$sFQex g$V$19425$sFQex g$V$19424$sFQex '() '()))) g$x$11228$sFQex))) g$diff$11226$sFQex g$V$19423$sFQex))) g$x$11228$sFQex))) g$id-vec$11227$sFQex)))) g$diff$11226$sFQex))) g$C$19428$sFQex g$V$19432$sFQex g$V$19429$sFQex))) g$V$19431$sFQex g$V$19430$sFQex))) g$id$11224$sFQex))) g$iface$11223$sFQex))) g$iface$11223$sFQex)))) g$C$19433$sFQex uninitialized)))))) (library-letrec*-identity 'g$module-interface-exp-id*$9003$sFQex))) (g$chi-internal-module$9004$sFQex g$chi-internal-module$12523$sFQex ((case-lambda ((g$C$20964$sFQex) (g$C$20964$sFQex (case-lambda ((g$C$19474$sFQex g$e$11232$sFQex g$r$11233$sFQex g$mr$11234$sFQex g$lex*$11235$sFQex g$rhs*$11236$sFQex g$mod**$11237$sFQex g$kwd*$11238$sFQex) (call-with-values g$C$19474$sFQex (case-lambda ((g$C$19434$sFQex) (g$parse-module$8991$sFQex g$C$19434$sFQex g$e$11232$sFQex))) (case-lambda ((g$C$19473$sFQex g$name$11242$sFQex g$exp-id*$11243$sFQex g$e*$11244$sFQex) ((case-lambda ((g$C$19471$sFQex g$e*$11245$sFQex g$exp-id*$11246$sFQex g$name$11247$sFQex) (g$make-empty-rib$8642$sFQex (case-lambda ((g$V$19472$sFQex) ((case-lambda ((g$C$19468$sFQex g$rib$11248$sFQex) (g$syntax->list$8681$sFQex (case-lambda ((g$V$19469$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19470$sFQex) ((case-lambda ((g$C$19466$sFQex g$e*$11249$sFQex) (call-with-values g$C$19466$sFQex (case-lambda ((g$C$19435$sFQex) (g$chi-body*$9005$sFQex g$C$19435$sFQex g$e*$11249$sFQex g$r$11233$sFQex g$mr$11234$sFQex g$lex*$11235$sFQex g$rhs*$11236$sFQex g$mod**$11237$sFQex g$kwd*$11238$sFQex '() g$rib$11248$sFQex '#f '#t))) (case-lambda ((g$C$19465$sFQex g$e*$11258$sFQex g$r$11259$sFQex g$mr$11260$sFQex g$lex*$11261$sFQex g$rhs*$11262$sFQex g$mod**$11263$sFQex g$kwd*$11264$sFQex g$_exp*$11265$sFQex) ((case-lambda ((g$C$19462$sFQex g$_exp*$11266$sFQex g$kwd*$11267$sFQex g$mod**$11268$sFQex g$rhs*$11269$sFQex g$lex*$11270$sFQex g$mr$11271$sFQex g$r$11272$sFQex g$e*$11273$sFQex) (cons (case-lambda ((g$V$19463$sFQex) (g$vector-map$6228$sFQex (case-lambda ((g$V$19464$sFQex) ((case-lambda ((g$C$19448$sFQex g$exp-lab*$11274$sFQex g$mod**$11275$sFQex) (not (case-lambda ((g$T$19449$sFQex) (if g$T$19449$sFQex (values g$C$19448$sFQex g$lex*$11270$sFQex g$rhs*$11269$sFQex g$exp-id*$11246$sFQex g$exp-lab*$11274$sFQex g$r$11272$sFQex g$mr$11271$sFQex g$mod**$11275$sFQex g$kwd*$11267$sFQex) (g$vector-map$6228$sFQex (case-lambda ((g$V$19450$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$19451$sFQex) (car (case-lambda ((g$V$19452$sFQex) (g$make-module-interface$8996$sFQex (case-lambda ((g$V$19453$sFQex) (g$gen-label$8623$sFQex (case-lambda ((g$V$19454$sFQex) ((case-lambda ((g$C$19436$sFQex g$lab$11276$sFQex g$iface$11277$sFQex) (cons (case-lambda ((g$V$19437$sFQex) (cons (case-lambda ((g$V$19438$sFQex) (cons (case-lambda ((g$V$19439$sFQex) (cons (case-lambda ((g$V$19440$sFQex) (cons (case-lambda ((g$V$19441$sFQex) (cons (case-lambda ((g$V$19442$sFQex) (vector (case-lambda ((g$V$19443$sFQex) (vector (case-lambda ((g$V$19444$sFQex) (values g$C$19436$sFQex g$lex*$11270$sFQex g$rhs*$11269$sFQex g$V$19444$sFQex g$V$19443$sFQex g$V$19442$sFQex g$V$19439$sFQex g$mod**$11275$sFQex g$kwd*$11267$sFQex))) g$name$11247$sFQex))) g$lab$11276$sFQex))) g$V$19441$sFQex g$r$11272$sFQex))) g$lab$11276$sFQex g$V$19440$sFQex))) '$module g$iface$11277$sFQex))) g$V$19438$sFQex g$mr$11271$sFQex))) g$lab$11276$sFQex g$V$19437$sFQex))) '$module g$iface$11277$sFQex))) g$C$19448$sFQex g$V$19454$sFQex g$V$19453$sFQex))) 'module))) g$V$19452$sFQex g$V$19450$sFQex g$exp-lab*$11274$sFQex))) g$V$19451$sFQex))) g$name$11247$sFQex))) (case-lambda ((g$C$19445$sFQex g$x$11278$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$19446$sFQex) (g$stx-expr$8656$sFQex (case-lambda ((g$V$19447$sFQex) (g$make-stx$8655$sFQex g$C$19445$sFQex g$V$19447$sFQex g$V$19446$sFQex '() '()))) g$x$11278$sFQex))) g$x$11278$sFQex))) g$exp-id*$11246$sFQex)))) g$name$11247$sFQex))) g$C$19462$sFQex g$V$19464$sFQex g$V$19463$sFQex))) (case-lambda ((g$C$19456$sFQex g$x$11279$sFQex) (list (case-lambda ((g$V$19457$sFQex) (g$stx-mark*$8657$sFQex (case-lambda ((g$V$19458$sFQex) (g$id->sym$8683$sFQex (case-lambda ((g$V$19459$sFQex) (g$make-stx$8655$sFQex (case-lambda ((g$V$19460$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$19461$sFQex) ((case-lambda ((g$C$19455$sFQex g$t$11280$sFQex) (if g$t$11280$sFQex (g$C$19455$sFQex g$t$11280$sFQex) (g$syntax-violation$9073$sFQex g$C$19455$sFQex '#f '"cannot find module export" g$x$11279$sFQex)))) g$C$19456$sFQex g$V$19461$sFQex))) g$V$19460$sFQex))) g$V$19459$sFQex g$V$19458$sFQex g$V$19457$sFQex '()))) g$x$11279$sFQex))) g$x$11279$sFQex))) g$rib$11248$sFQex))) g$exp-id*$11246$sFQex))) g$e*$11273$sFQex g$mod**$11268$sFQex))) g$C$19465$sFQex g$_exp*$11265$sFQex g$kwd*$11264$sFQex g$mod**$11263$sFQex g$rhs*$11262$sFQex g$lex*$11261$sFQex g$mr$11260$sFQex g$r$11259$sFQex g$e*$11258$sFQex)))))) g$C$19468$sFQex g$V$19470$sFQex))) (case-lambda ((g$C$19467$sFQex g$x$11281$sFQex) (g$add-subst$8672$sFQex g$C$19467$sFQex g$rib$11248$sFQex g$x$11281$sFQex))) g$V$19469$sFQex))) g$e*$11245$sFQex))) g$C$19471$sFQex g$V$19472$sFQex)))))) g$C$19473$sFQex g$e*$11244$sFQex g$exp-id*$11243$sFQex g$name$11242$sFQex))))))))) (library-letrec*-identity 'g$chi-internal-module$9004$sFQex))) (g$chi-body*$9005$sFQex g$chi-body*$12524$sFQex ((case-lambda ((g$C$20965$sFQex) (g$C$20965$sFQex (case-lambda ((g$C$19649$sFQex g$e*$11282$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11288$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex) (null? (case-lambda ((g$T$19650$sFQex) (if g$T$19650$sFQex (values g$C$19649$sFQex g$e*$11282$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11288$sFQex g$exp*$11289$sFQex) (car (case-lambda ((g$V$19651$sFQex) ((case-lambda ((g$C$19648$sFQex g$e$11293$sFQex) (call-with-values g$C$19648$sFQex (case-lambda ((g$C$19475$sFQex) (g$syntax-type$8702$sFQex g$C$19475$sFQex g$e$11293$sFQex g$r$11283$sFQex))) (case-lambda ((g$C$19647$sFQex g$type$11297$sFQex g$value$11298$sFQex g$kwd$11299$sFQex) ((case-lambda ((g$C$19643$sFQex g$kwd$11300$sFQex g$value$11301$sFQex g$type$11302$sFQex) ((case-lambda ((g$J$19645$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$19646$sFQex) (if g$T$19646$sFQex (cons g$J$19645$sFQex g$kwd$11300$sFQex g$kwd*$11288$sFQex) (g$J$19645$sFQex g$kwd*$11288$sFQex)))) g$kwd$11300$sFQex))) (case-lambda ((g$V$19644$sFQex) ((case-lambda ((g$C$19642$sFQex g$kwd*$11303$sFQex) ((case-lambda ((g$C$19610$sFQex g$t$11304$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19611$sFQex) (if g$T$19611$sFQex (call-with-values g$C$19610$sFQex (case-lambda ((g$C$19476$sFQex) (g$parse-define$8901$sFQex g$C$19476$sFQex g$e$11293$sFQex))) (case-lambda ((g$C$19489$sFQex g$id$11307$sFQex g$rhs$11308$sFQex) ((case-lambda ((g$C$19485$sFQex g$rhs$11309$sFQex g$id$11310$sFQex) ((case-lambda ((g$J$19487$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$19488$sFQex) (if g$T$19488$sFQex (g$syntax-violation$9073$sFQex g$J$19487$sFQex '#f '"cannot redefine keyword" g$e$11293$sFQex) (void g$J$19487$sFQex)))) g$id$11310$sFQex g$kwd*$11303$sFQex))) (case-lambda (g$IGNORE$19486$sFQex (call-with-values g$C$19485$sFQex (case-lambda ((g$C$19477$sFQex) (g$gen-define-label+loc$8625$sFQex g$C$19477$sFQex g$id$11310$sFQex g$rib$11290$sFQex g$sd?$11292$sFQex))) (case-lambda ((g$C$19484$sFQex g$lab$11313$sFQex g$lex$11314$sFQex) ((case-lambda ((g$C$19478$sFQex g$lex$11315$sFQex g$lab$11316$sFQex) (g$extend-rib!$8645$sFQex (case-lambda (g$IGNORE$19479$sFQex (cons (case-lambda ((g$V$19480$sFQex) (cons (case-lambda ((g$V$19481$sFQex) (g$add-lexical$8908$sFQex (case-lambda ((g$V$19482$sFQex) (cdr (case-lambda ((g$V$19483$sFQex) (g$chi-body*$9005$sFQex g$C$19478$sFQex g$V$19483$sFQex g$V$19482$sFQex g$mr$11284$sFQex g$V$19481$sFQex g$V$19480$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$e*$11282$sFQex))) g$lab$11316$sFQex g$lex$11315$sFQex g$r$11283$sFQex))) g$lex$11315$sFQex g$lex*$11285$sFQex))) g$rhs$11309$sFQex g$rhs*$11286$sFQex))) g$rib$11290$sFQex g$id$11310$sFQex g$lab$11316$sFQex g$sd?$11292$sFQex))) g$C$19484$sFQex g$lex$11314$sFQex g$lab$11313$sFQex))))))))) g$C$19489$sFQex g$rhs$11308$sFQex g$id$11307$sFQex)))) (g$memv$5673$sFQex (case-lambda ((g$T$19612$sFQex) (if g$T$19612$sFQex (call-with-values g$C$19610$sFQex (case-lambda ((g$C$19490$sFQex) (g$parse-define-syntax$8902$sFQex g$C$19490$sFQex g$e$11293$sFQex))) (case-lambda ((g$C$19507$sFQex g$id$11319$sFQex g$rhs$11320$sFQex) ((case-lambda ((g$C$19502$sFQex g$rhs$11321$sFQex g$id$11322$sFQex) ((case-lambda ((g$J$19505$sFQex) (g$bound-id-member?$8689$sFQex (case-lambda ((g$T$19506$sFQex) (if g$T$19506$sFQex (g$syntax-violation$9073$sFQex g$J$19505$sFQex '#f '"cannot redefine keyword" g$e$11293$sFQex) (void g$J$19505$sFQex)))) g$id$11322$sFQex g$kwd*$11303$sFQex))) (case-lambda (g$IGNORE$19503$sFQex (g$gen-define-label$8626$sFQex (case-lambda ((g$V$19504$sFQex) ((case-lambda ((g$C$19500$sFQex g$lab$11323$sFQex) (g$expand-transformer$9006$sFQex (case-lambda ((g$V$19501$sFQex) ((case-lambda ((g$C$19497$sFQex g$expanded-rhs$11324$sFQex) (g$extend-rib!$8645$sFQex (case-lambda (g$IGNORE$19498$sFQex (g$make-eval-transformer$8715$sFQex (case-lambda ((g$V$19499$sFQex) ((case-lambda ((g$C$19491$sFQex g$b$11325$sFQex) (cons (case-lambda ((g$V$19492$sFQex) (cons (case-lambda ((g$V$19493$sFQex) (cons (case-lambda ((g$V$19494$sFQex) (cons (case-lambda ((g$V$19495$sFQex) (cdr (case-lambda ((g$V$19496$sFQex) (g$chi-body*$9005$sFQex g$C$19491$sFQex g$V$19496$sFQex g$V$19495$sFQex g$V$19493$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$e*$11282$sFQex))) g$V$19494$sFQex g$r$11283$sFQex))) g$lab$11323$sFQex g$b$11325$sFQex))) g$V$19492$sFQex g$mr$11284$sFQex))) g$lab$11323$sFQex g$b$11325$sFQex))) g$C$19497$sFQex g$V$19499$sFQex))) g$expanded-rhs$11324$sFQex))) g$rib$11290$sFQex g$id$11322$sFQex g$lab$11323$sFQex g$sd?$11292$sFQex))) g$C$19500$sFQex g$V$19501$sFQex))) g$rhs$11321$sFQex g$mr$11284$sFQex))) g$C$19502$sFQex g$V$19504$sFQex))) g$id$11322$sFQex g$rib$11290$sFQex g$sd?$11292$sFQex)))))) g$C$19507$sFQex g$rhs$11320$sFQex g$id$11319$sFQex)))) (g$memv$5673$sFQex (case-lambda ((g$T$19613$sFQex) (if g$T$19613$sFQex ((case-lambda ((g$C$19534$sFQex g$t$11326$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19535$sFQex) ((case-lambda ((g$C$19531$sFQex g$ls/false$11327$sFQex) ((case-lambda ((g$J$19533$sFQex) (if g$ls/false$11327$sFQex (apply g$J$19533$sFQex (case-lambda ((g$C$19508$sFQex g$xlhs*$11328$sFQex g$xrhs*$11329$sFQex g$xbody*$11330$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$V$19509$sFQex) (not (case-lambda ((g$T$19510$sFQex) (if g$T$19510$sFQex (g$syntax-violation$9073$sFQex g$C$19508$sFQex '#f '"invalid identifiers" g$e$11293$sFQex) (void g$C$19508$sFQex)))) g$V$19509$sFQex))) g$xlhs*$11328$sFQex))) g$ls/false$11327$sFQex) (g$J$19533$sFQex '#f)))) (case-lambda ((g$T$19532$sFQex) (if g$T$19532$sFQex (apply g$C$19531$sFQex (case-lambda ((g$C$19529$sFQex g$xlhs*$11331$sFQex g$xrhs*$11332$sFQex g$xbody*$11333$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19530$sFQex) ((case-lambda ((g$C$19527$sFQex g$xlab*$11334$sFQex) (g$make-full-rib$8650$sFQex (case-lambda ((g$V$19528$sFQex) ((case-lambda ((g$C$19525$sFQex g$xrib$11335$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19526$sFQex) ((case-lambda ((g$C$19512$sFQex g$xb*$11336$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19513$sFQex) (append (case-lambda ((g$V$19514$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19515$sFQex) (append (case-lambda ((g$V$19516$sFQex) (cdr (case-lambda ((g$V$19517$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19518$sFQex) (append (case-lambda ((g$V$19519$sFQex) (g$chi-body*$9005$sFQex g$C$19512$sFQex g$V$19519$sFQex g$V$19516$sFQex g$V$19514$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$V$19518$sFQex g$V$19517$sFQex))) (case-lambda ((g$C$19511$sFQex g$x$11337$sFQex) (g$add-subst$8672$sFQex g$C$19511$sFQex g$xrib$11335$sFQex g$x$11337$sFQex))) g$xbody*$11333$sFQex))) g$e*$11282$sFQex))) g$V$19515$sFQex g$r$11283$sFQex))) cons g$xlab*$11334$sFQex g$xb*$11336$sFQex))) g$V$19513$sFQex g$mr$11284$sFQex))) cons g$xlab*$11334$sFQex g$xb*$11336$sFQex))) g$C$19525$sFQex g$V$19526$sFQex))) (case-lambda ((g$C$19520$sFQex g$x$11338$sFQex) ((case-lambda ((g$J$19523$sFQex) (eq? (case-lambda ((g$T$19524$sFQex) (if g$T$19524$sFQex (g$J$19523$sFQex g$x$11338$sFQex) (g$add-subst$8672$sFQex g$J$19523$sFQex g$xrib$11335$sFQex g$x$11338$sFQex)))) g$type$11302$sFQex 'let-syntax))) (case-lambda ((g$V$19521$sFQex) (g$expand-transformer$9006$sFQex (case-lambda ((g$V$19522$sFQex) (g$make-eval-transformer$8715$sFQex g$C$19520$sFQex g$V$19522$sFQex))) g$V$19521$sFQex g$mr$11284$sFQex)))))) g$xrhs*$11332$sFQex))) g$C$19527$sFQex g$V$19528$sFQex))) g$xlhs*$11331$sFQex g$xlab*$11334$sFQex))) g$C$19529$sFQex g$V$19530$sFQex))) g$gen-label$8623$sFQex g$xlhs*$11331$sFQex))) g$ls/false$11327$sFQex) (g$syntax-violation$9073$sFQex g$C$19531$sFQex '#f '"invalid syntax" g$t$11326$sFQex))))))) g$C$19534$sFQex g$V$19535$sFQex))) g$t$11326$sFQex '(_ #(each (any any)) . each-any)))) g$C$19610$sFQex g$e$11293$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19614$sFQex) (if g$T$19614$sFQex ((case-lambda ((g$C$19540$sFQex g$t$11339$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19541$sFQex) ((case-lambda ((g$C$19539$sFQex g$ls/false$11340$sFQex) (if g$ls/false$11340$sFQex (apply g$C$19539$sFQex (case-lambda ((g$C$19536$sFQex g$x*$11341$sFQex) (cdr (case-lambda ((g$V$19537$sFQex) (append (case-lambda ((g$V$19538$sFQex) (g$chi-body*$9005$sFQex g$C$19536$sFQex g$V$19538$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$x*$11341$sFQex g$V$19537$sFQex))) g$e*$11282$sFQex))) g$ls/false$11340$sFQex) (g$syntax-violation$9073$sFQex g$C$19539$sFQex '#f '"invalid syntax" g$t$11339$sFQex)))) g$C$19540$sFQex g$V$19541$sFQex))) g$t$11339$sFQex '(_ . each-any)))) g$C$19610$sFQex g$e$11293$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19615$sFQex) (if g$T$19615$sFQex (cdr (case-lambda ((g$V$19616$sFQex) (g$chi-global-macro$8976$sFQex (case-lambda ((g$V$19617$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$19618$sFQex) (cons (case-lambda ((g$V$19619$sFQex) (g$chi-body*$9005$sFQex g$C$19610$sFQex g$V$19619$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$V$19618$sFQex g$V$19616$sFQex))) g$rib$11290$sFQex g$V$19617$sFQex))) g$value$11301$sFQex g$e$11293$sFQex g$r$11283$sFQex))) g$e*$11282$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19620$sFQex) (if g$T$19620$sFQex (cdr (case-lambda ((g$V$19621$sFQex) (g$chi-local-macro$8975$sFQex (case-lambda ((g$V$19622$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$19623$sFQex) (cons (case-lambda ((g$V$19624$sFQex) (g$chi-body*$9005$sFQex g$C$19610$sFQex g$V$19624$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$V$19623$sFQex g$V$19621$sFQex))) g$rib$11290$sFQex g$V$19622$sFQex))) g$value$11301$sFQex g$e$11293$sFQex g$r$11283$sFQex))) g$e*$11282$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19625$sFQex) (if g$T$19625$sFQex (cdr (case-lambda ((g$V$19626$sFQex) (g$chi-macro$8974$sFQex (case-lambda ((g$V$19627$sFQex) (g$add-subst$8672$sFQex (case-lambda ((g$V$19628$sFQex) (cons (case-lambda ((g$V$19629$sFQex) (g$chi-body*$9005$sFQex g$C$19610$sFQex g$V$19629$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$V$19628$sFQex g$V$19626$sFQex))) g$rib$11290$sFQex g$V$19627$sFQex))) g$value$11301$sFQex g$e$11293$sFQex g$r$11283$sFQex))) g$e*$11282$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19630$sFQex) (if g$T$19630$sFQex (call-with-values g$C$19610$sFQex (case-lambda ((g$C$19542$sFQex) (g$chi-internal-module$9004$sFQex g$C$19542$sFQex g$e$11293$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex))) (case-lambda ((g$C$19547$sFQex g$lex*$11350$sFQex g$rhs*$11351$sFQex g$m-exp-id*$11352$sFQex g$m-exp-lab*$11353$sFQex g$r$11354$sFQex g$mr$11355$sFQex g$mod**$11356$sFQex g$kwd*$11357$sFQex) ((case-lambda ((g$C$19544$sFQex g$kwd*$11358$sFQex g$mod**$11359$sFQex g$mr$11360$sFQex g$r$11361$sFQex g$m-exp-lab*$11362$sFQex g$m-exp-id*$11363$sFQex g$rhs*$11364$sFQex g$lex*$11365$sFQex) (g$vector-for-each$6229$sFQex (case-lambda (g$IGNORE$19545$sFQex (cdr (case-lambda ((g$V$19546$sFQex) (g$chi-body*$9005$sFQex g$C$19544$sFQex g$V$19546$sFQex g$r$11361$sFQex g$mr$11360$sFQex g$lex*$11365$sFQex g$rhs*$11364$sFQex g$mod**$11359$sFQex g$kwd*$11358$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$e*$11282$sFQex))) (case-lambda ((g$C$19543$sFQex g$id$11366$sFQex g$lab$11367$sFQex) (g$extend-rib!$8645$sFQex g$C$19543$sFQex g$rib$11290$sFQex g$id$11366$sFQex g$lab$11367$sFQex g$sd?$11292$sFQex))) g$m-exp-id*$11363$sFQex g$m-exp-lab*$11362$sFQex))) g$C$19547$sFQex g$kwd*$11357$sFQex g$mod**$11356$sFQex g$mr$11355$sFQex g$r$11354$sFQex g$m-exp-lab*$11353$sFQex g$m-exp-id*$11352$sFQex g$rhs*$11351$sFQex g$lex*$11350$sFQex)))) (g$memv$5673$sFQex (case-lambda ((g$T$19631$sFQex) (if g$T$19631$sFQex (g$stx->datum$8693$sFQex (case-lambda ((g$V$19632$sFQex) (g$library-expander$9057$sFQex (case-lambda (g$IGNORE$19633$sFQex (cdr (case-lambda ((g$V$19634$sFQex) (g$chi-body*$9005$sFQex g$C$19610$sFQex g$V$19634$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$e*$11282$sFQex))) g$V$19632$sFQex))) g$e$11293$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19635$sFQex) (if g$T$19635$sFQex ((case-lambda ((g$C$19552$sFQex g$t$11368$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19553$sFQex) ((case-lambda ((g$C$19551$sFQex g$ls/false$11369$sFQex) (if g$ls/false$11369$sFQex (apply g$C$19551$sFQex (case-lambda ((g$C$19548$sFQex g$exp-decl*$11370$sFQex) (append (case-lambda ((g$V$19549$sFQex) (cdr (case-lambda ((g$V$19550$sFQex) (g$chi-body*$9005$sFQex g$C$19548$sFQex g$V$19550$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$V$19549$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$e*$11282$sFQex))) g$exp-decl*$11370$sFQex g$exp*$11289$sFQex))) g$ls/false$11369$sFQex) (g$syntax-violation$9073$sFQex g$C$19551$sFQex '#f '"invalid syntax" g$t$11368$sFQex)))) g$C$19552$sFQex g$V$19553$sFQex))) g$t$11368$sFQex '(_ . each-any)))) g$C$19610$sFQex g$e$11293$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19636$sFQex) (if g$T$19636$sFQex ((case-lambda ((g$C$19609$sFQex) ((case-lambda ((g$C$19606$sFQex g$module-import?$11371$sFQex g$module-import$11372$sFQex g$library-import$11373$sFQex) (begin (set! g$module-import?$11371$sFQex (case-lambda ((g$C$19569$sFQex g$e$11413$sFQex) ((case-lambda ((g$C$19567$sFQex g$t$11414$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19568$sFQex) ((case-lambda ((g$C$19564$sFQex g$ls/false$11415$sFQex) ((case-lambda ((g$J$19566$sFQex) (if g$ls/false$11415$sFQex (apply g$J$19566$sFQex (case-lambda ((g$C$19554$sFQex g$id$11416$sFQex) (g$id?$8682$sFQex g$C$19554$sFQex g$id$11416$sFQex))) g$ls/false$11415$sFQex) (g$J$19566$sFQex '#f)))) (case-lambda ((g$T$19565$sFQex) (if g$T$19565$sFQex (apply g$C$19564$sFQex (case-lambda ((g$C$19555$sFQex g$id$11417$sFQex) (g$C$19555$sFQex '#t))) g$ls/false$11415$sFQex) ((case-lambda ((g$C$19562$sFQex g$t$11418$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19563$sFQex) ((case-lambda ((g$C$19561$sFQex g$ls/false$11419$sFQex) (if g$ls/false$11419$sFQex (apply g$C$19561$sFQex (case-lambda ((g$C$19556$sFQex g$imp*$11420$sFQex) (g$C$19556$sFQex '#f))) g$ls/false$11419$sFQex) ((case-lambda ((g$C$19559$sFQex g$t$11421$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19560$sFQex) ((case-lambda ((g$C$19558$sFQex g$ls/false$11422$sFQex) (if g$ls/false$11422$sFQex (apply g$C$19558$sFQex (case-lambda ((g$C$19557$sFQex) (g$syntax-violation$9073$sFQex g$C$19557$sFQex '#f '"malformed import form" g$e$11413$sFQex))) g$ls/false$11422$sFQex) (g$syntax-violation$9073$sFQex g$C$19558$sFQex '#f '"invalid syntax" g$t$11421$sFQex)))) g$C$19559$sFQex g$V$19560$sFQex))) g$t$11421$sFQex '_))) g$C$19561$sFQex g$t$11418$sFQex)))) g$C$19562$sFQex g$V$19563$sFQex))) g$t$11418$sFQex '(_ . each-any)))) g$C$19564$sFQex g$t$11414$sFQex))))))) g$C$19567$sFQex g$V$19568$sFQex))) g$t$11414$sFQex '(_ any)))) g$C$19569$sFQex g$e$11413$sFQex)))) (begin (set! g$module-import$11372$sFQex (case-lambda ((g$C$19585$sFQex g$e$11396$sFQex g$r$11397$sFQex) ((case-lambda ((g$C$19583$sFQex g$t$11398$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19584$sFQex) ((case-lambda ((g$C$19580$sFQex g$ls/false$11399$sFQex) ((case-lambda ((g$J$19582$sFQex) (if g$ls/false$11399$sFQex (apply g$J$19582$sFQex (case-lambda ((g$C$19570$sFQex g$id$11400$sFQex) (g$id?$8682$sFQex g$C$19570$sFQex g$id$11400$sFQex))) g$ls/false$11399$sFQex) (g$J$19582$sFQex '#f)))) (case-lambda ((g$T$19581$sFQex) (if g$T$19581$sFQex (apply g$C$19580$sFQex (case-lambda ((g$C$19579$sFQex g$id$11401$sFQex) (call-with-values g$C$19579$sFQex (case-lambda ((g$C$19571$sFQex) (g$syntax-type$8702$sFQex g$C$19571$sFQex g$id$11401$sFQex g$r$11397$sFQex))) (case-lambda ((g$C$19578$sFQex g$type$11405$sFQex g$value$11406$sFQex g$kwd$11407$sFQex) ((case-lambda ((g$C$19577$sFQex g$kwd$11408$sFQex g$value$11409$sFQex g$type$11410$sFQex) ((case-lambda ((g$C$19575$sFQex g$t$11411$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$19576$sFQex) (if g$T$19576$sFQex ((case-lambda ((g$C$19572$sFQex g$iface$11412$sFQex) (g$module-interface-exp-lab-vec$8999$sFQex (case-lambda ((g$V$19573$sFQex) (g$module-interface-exp-id*$9003$sFQex (case-lambda ((g$V$19574$sFQex) (values g$C$19572$sFQex g$V$19574$sFQex g$V$19573$sFQex))) g$iface$11412$sFQex g$id$11401$sFQex))) g$iface$11412$sFQex))) g$C$19575$sFQex g$value$11409$sFQex) (g$syntax-violation$9073$sFQex g$C$19575$sFQex '#f '"invalid import" g$e$11396$sFQex)))) g$t$11411$sFQex '($module)))) g$C$19577$sFQex g$type$11410$sFQex))) g$C$19578$sFQex g$kwd$11407$sFQex g$value$11406$sFQex g$type$11405$sFQex)))))) g$ls/false$11399$sFQex) (g$syntax-violation$9073$sFQex g$C$19580$sFQex '#f '"invalid syntax" g$t$11398$sFQex))))))) g$C$19583$sFQex g$V$19584$sFQex))) g$t$11398$sFQex '(_ any)))) g$C$19585$sFQex g$e$11396$sFQex)))) (begin (set! g$library-import$11373$sFQex (case-lambda ((g$C$19600$sFQex g$e$11382$sFQex) ((case-lambda ((g$C$19598$sFQex g$t$11383$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19599$sFQex) ((case-lambda ((g$C$19597$sFQex g$ls/false$11384$sFQex) (if g$ls/false$11384$sFQex (apply g$C$19597$sFQex (case-lambda ((g$C$19592$sFQex g$ctxt$11385$sFQex g$imp*$11386$sFQex) (call-with-values g$C$19592$sFQex (case-lambda ((g$C$19586$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19587$sFQex) (g$parse-import-spec*$9010$sFQex g$C$19586$sFQex g$V$19587$sFQex))) g$imp*$11386$sFQex))) (case-lambda ((g$C$19591$sFQex g$subst-names$11389$sFQex g$subst-labels$11390$sFQex) ((case-lambda ((g$C$19589$sFQex g$subst-labels$11391$sFQex g$subst-names$11392$sFQex) (g$vector-map$6228$sFQex (case-lambda ((g$V$19590$sFQex) (values g$C$19589$sFQex g$V$19590$sFQex g$subst-labels$11391$sFQex))) (case-lambda ((g$C$19588$sFQex g$name$11393$sFQex) (g$datum->stx$8665$sFQex g$C$19588$sFQex g$ctxt$11385$sFQex g$name$11393$sFQex))) g$subst-names$11392$sFQex))) g$C$19591$sFQex g$subst-labels$11390$sFQex g$subst-names$11389$sFQex)))))) g$ls/false$11384$sFQex) ((case-lambda ((g$C$19595$sFQex g$t$11394$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19596$sFQex) ((case-lambda ((g$C$19594$sFQex g$ls/false$11395$sFQex) (if g$ls/false$11395$sFQex (apply g$C$19594$sFQex (case-lambda ((g$C$19593$sFQex) (g$syntax-violation$9073$sFQex g$C$19593$sFQex '#f '"invalid import form" g$e$11382$sFQex))) g$ls/false$11395$sFQex) (g$syntax-violation$9073$sFQex g$C$19594$sFQex '#f '"invalid syntax" g$t$11394$sFQex)))) g$C$19595$sFQex g$V$19596$sFQex))) g$t$11394$sFQex '_))) g$C$19597$sFQex g$t$11383$sFQex)))) g$C$19598$sFQex g$V$19599$sFQex))) g$t$11383$sFQex '(any . each-any)))) g$C$19600$sFQex g$e$11382$sFQex)))) (call-with-values (case-lambda (g$IGNORE$19607$sFQex (cdr (case-lambda ((g$V$19608$sFQex) (g$chi-body*$9005$sFQex g$C$19606$sFQex g$V$19608$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex g$mix?$11291$sFQex g$sd?$11292$sFQex))) g$e*$11282$sFQex))) (case-lambda ((g$C$19601$sFQex) (g$module-import?$11371$sFQex (case-lambda ((g$T$19602$sFQex) (if g$T$19602$sFQex (g$module-import$11372$sFQex g$C$19601$sFQex g$e$11293$sFQex g$r$11283$sFQex) (g$library-import$11373$sFQex g$C$19601$sFQex g$e$11293$sFQex)))) g$e$11293$sFQex))) (case-lambda ((g$C$19605$sFQex g$id*$11376$sFQex g$lab*$11377$sFQex) ((case-lambda ((g$C$19604$sFQex g$lab*$11378$sFQex g$id*$11379$sFQex) (g$vector-for-each$6229$sFQex g$C$19604$sFQex (case-lambda ((g$C$19603$sFQex g$id$11380$sFQex g$lab$11381$sFQex) (g$extend-rib!$8645$sFQex g$C$19603$sFQex g$rib$11290$sFQex g$id$11380$sFQex g$lab$11381$sFQex g$sd?$11292$sFQex))) g$id*$11379$sFQex g$lab*$11378$sFQex))) g$C$19605$sFQex g$lab*$11377$sFQex g$id*$11376$sFQex))))))))) g$C$19609$sFQex uninitialized uninitialized uninitialized))) g$C$19610$sFQex) (if g$mix?$11291$sFQex (cons (case-lambda ((g$V$19637$sFQex) (cons (case-lambda ((g$V$19638$sFQex) (g$gen-lexical$8621$sFQex (case-lambda ((g$V$19639$sFQex) (cons (case-lambda ((g$V$19640$sFQex) (cdr (case-lambda ((g$V$19641$sFQex) (g$chi-body*$9005$sFQex g$C$19610$sFQex g$V$19641$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$V$19640$sFQex g$V$19638$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex g$rib$11290$sFQex '#t g$sd?$11292$sFQex))) g$e*$11282$sFQex))) g$V$19639$sFQex g$lex*$11285$sFQex))) 'dummy))) g$V$19637$sFQex g$rhs*$11286$sFQex))) 'top-expr g$e$11293$sFQex) (values g$C$19610$sFQex g$e*$11282$sFQex g$r$11283$sFQex g$mr$11284$sFQex g$lex*$11285$sFQex g$rhs*$11286$sFQex g$mod**$11287$sFQex g$kwd*$11303$sFQex g$exp*$11289$sFQex))))) g$t$11304$sFQex '(import))))) g$t$11304$sFQex '(export))))) g$t$11304$sFQex '(library))))) g$t$11304$sFQex '(module))))) g$t$11304$sFQex '(macro macro!))))) g$t$11304$sFQex '(local-macro local-macro!))))) g$t$11304$sFQex '(global-macro global-macro!))))) g$t$11304$sFQex '(begin))))) g$t$11304$sFQex '(let-syntax letrec-syntax))))) g$t$11304$sFQex '(define-syntax))))) g$t$11304$sFQex '(define)))) g$C$19642$sFQex g$type$11302$sFQex))) g$C$19643$sFQex g$V$19644$sFQex)))))) g$C$19647$sFQex g$kwd$11299$sFQex g$value$11298$sFQex g$type$11297$sFQex)))))) g$C$19649$sFQex g$V$19651$sFQex))) g$e*$11282$sFQex)))) g$e*$11282$sFQex)))))) (library-letrec*-identity 'g$chi-body*$9005$sFQex))) (g$expand-transformer$9006$sFQex g$expand-transformer$12525$sFQex ((case-lambda ((g$C$20966$sFQex) (g$C$20966$sFQex (case-lambda ((g$C$19674$sFQex g$expr$11423$sFQex g$r$11424$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$19675$sFQex) ((case-lambda ((g$C$19672$sFQex g$rtc$11425$sFQex) ((case-lambda ((g$C$19670$sFQex g$inv-collector$11433$sFQex g$vis-collector$11434$sFQex g$inv-collector$11435$sFQex g$vis-collector$11436$sFQex) ((case-lambda ((g$C$19661$sFQex g$swap$11437$sFQex) (dynamic-wind g$C$19661$sFQex g$swap$11437$sFQex (case-lambda ((g$C$19660$sFQex) (g$chi-expr$8979$sFQex g$C$19660$sFQex g$expr$11423$sFQex g$r$11424$sFQex g$r$11424$sFQex))) g$swap$11437$sFQex))) g$C$19670$sFQex (case-lambda ((g$C$19666$sFQex) (g$inv-collector$11433$sFQex (case-lambda ((g$V$19667$sFQex) ((case-lambda ((g$C$19662$sFQex g$t$11438$sFQex) (g$inv-collector$11433$sFQex (case-lambda (g$IGNORE$19663$sFQex (begin (set! g$inv-collector$11435$sFQex g$t$11438$sFQex) (g$C$19662$sFQex (cps-void))))) g$inv-collector$11435$sFQex))) (case-lambda (g$IGNORE$19668$sFQex (g$vis-collector$11434$sFQex (case-lambda ((g$V$19669$sFQex) ((case-lambda ((g$C$19664$sFQex g$t$11439$sFQex) (g$vis-collector$11434$sFQex (case-lambda (g$IGNORE$19665$sFQex (begin (set! g$vis-collector$11436$sFQex g$t$11439$sFQex) (g$C$19664$sFQex (cps-void))))) g$vis-collector$11436$sFQex))) g$C$19666$sFQex g$V$19669$sFQex)))))) g$V$19667$sFQex))))))))) (case-lambda ((g$V$19673$sFQex) ((case-lambda ((g$C$19655$sFQex g$expanded-rhs$11426$sFQex) (g$rtc$11425$sFQex (case-lambda ((g$V$19656$sFQex) (g$vis-collector$9014$sFQex (case-lambda ((g$V$19657$sFQex) ((case-lambda ((g$C$19654$sFQex g$mark-visit$11427$sFQex) (g$C$19654$sFQex (case-lambda ((g$C$19652$sFQex g$x$11428$sFQex) (g$invoke-library$8489$sFQex (case-lambda (g$IGNORE$19653$sFQex (g$mark-visit$11427$sFQex g$C$19652$sFQex g$x$11428$sFQex))) g$x$11428$sFQex)))))) (case-lambda ((g$V$19658$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$19659$sFQex (g$C$19655$sFQex g$expanded-rhs$11426$sFQex))) g$V$19658$sFQex g$V$19656$sFQex))) g$V$19657$sFQex))))))))) g$C$19672$sFQex g$V$19673$sFQex))) g$inv-collector$9013$sFQex g$vis-collector$9014$sFQex g$rtc$11425$sFQex (case-lambda ((g$C$19671$sFQex g$x$11440$sFQex) (values g$C$19671$sFQex)))))) g$C$19674$sFQex g$V$19675$sFQex))))))))) (library-letrec*-identity 'g$expand-transformer$9006$sFQex))) (g$parse-exports$9007$sFQex g$parse-exports$12526$sFQex ((case-lambda ((g$C$20967$sFQex) (g$C$20967$sFQex (case-lambda ((g$C$19715$sFQex g$exp*$11441$sFQex) ((case-lambda ((g$C$19714$sFQex g$f$11442$sFQex) ((case-lambda ((g$C$19677$sFQex g$f$19676$sFQex) (begin (set! g$f$11442$sFQex g$f$19676$sFQex) (g$C$19677$sFQex g$f$11442$sFQex)))) g$C$19714$sFQex (case-lambda ((g$C$19705$sFQex g$exp*$11443$sFQex g$int*$11444$sFQex g$ext*$11445$sFQex) (null? (case-lambda ((g$T$19706$sFQex) (if g$T$19706$sFQex ((case-lambda ((g$J$19709$sFQex) (g$valid-bound-ids?$8687$sFQex (case-lambda ((g$V$19710$sFQex) (not (case-lambda ((g$T$19711$sFQex) (if g$T$19711$sFQex (g$find-dups$8989$sFQex (case-lambda ((g$V$19712$sFQex) (g$syntax-violation$9073$sFQex g$J$19709$sFQex 'export '"invalid exports" g$V$19712$sFQex))) g$ext*$11445$sFQex) (void g$J$19709$sFQex)))) g$V$19710$sFQex))) g$ext*$11445$sFQex))) (case-lambda (g$IGNORE$19707$sFQex (g$map$5680$sFQex (case-lambda ((g$V$19708$sFQex) (values g$C$19705$sFQex g$V$19708$sFQex g$int*$11444$sFQex))) g$syntax->datum$9076$sFQex g$ext*$11445$sFQex)))) (car (case-lambda ((g$V$19713$sFQex) ((case-lambda ((g$C$19703$sFQex g$t$11446$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19704$sFQex) ((case-lambda ((g$C$19702$sFQex g$ls/false$11447$sFQex) (if g$ls/false$11447$sFQex (apply g$C$19702$sFQex (case-lambda ((g$C$19678$sFQex g$rename$11448$sFQex g$i*$11449$sFQex g$e*$11450$sFQex) ((case-lambda ((g$J$19683$sFQex) ((case-lambda ((g$J$19687$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19688$sFQex) (eq? (case-lambda ((g$T$19689$sFQex) (if g$T$19689$sFQex (g$for-all$5678$sFQex (case-lambda ((g$T$19690$sFQex) (if g$T$19690$sFQex (g$for-all$5678$sFQex g$J$19687$sFQex g$id?$8682$sFQex g$e*$11450$sFQex) (g$J$19687$sFQex '#f)))) g$id?$8682$sFQex g$i*$11449$sFQex) (g$J$19687$sFQex '#f)))) g$V$19688$sFQex 'rename))) g$rename$11448$sFQex))) (case-lambda ((g$V$19684$sFQex) (not (case-lambda ((g$T$19685$sFQex) (if g$T$19685$sFQex (car (case-lambda ((g$V$19686$sFQex) (g$syntax-violation$9073$sFQex g$J$19683$sFQex 'export '"invalid export specifier" g$V$19686$sFQex))) g$exp*$11443$sFQex) (void g$J$19683$sFQex)))) g$V$19684$sFQex)))))) (case-lambda (g$IGNORE$19679$sFQex (append (case-lambda ((g$V$19680$sFQex) (append (case-lambda ((g$V$19681$sFQex) (cdr (case-lambda ((g$V$19682$sFQex) (g$f$11442$sFQex g$C$19678$sFQex g$V$19682$sFQex g$V$19681$sFQex g$V$19680$sFQex))) g$exp*$11443$sFQex))) g$i*$11449$sFQex g$int*$11444$sFQex))) g$e*$11450$sFQex g$ext*$11445$sFQex)))))) g$ls/false$11447$sFQex) ((case-lambda ((g$C$19700$sFQex g$t$11451$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19701$sFQex) ((case-lambda ((g$C$19699$sFQex g$ls/false$11452$sFQex) (if g$ls/false$11452$sFQex (apply g$C$19699$sFQex (case-lambda ((g$C$19691$sFQex g$ie$11453$sFQex) ((case-lambda ((g$J$19696$sFQex) (g$id?$8682$sFQex (case-lambda ((g$V$19697$sFQex) (not (case-lambda ((g$T$19698$sFQex) (if g$T$19698$sFQex (g$syntax-violation$9073$sFQex g$J$19696$sFQex 'export '"invalid export" g$ie$11453$sFQex) (void g$J$19696$sFQex)))) g$V$19697$sFQex))) g$ie$11453$sFQex))) (case-lambda (g$IGNORE$19692$sFQex (cons (case-lambda ((g$V$19693$sFQex) (cons (case-lambda ((g$V$19694$sFQex) (cdr (case-lambda ((g$V$19695$sFQex) (g$f$11442$sFQex g$C$19691$sFQex g$V$19695$sFQex g$V$19694$sFQex g$V$19693$sFQex))) g$exp*$11443$sFQex))) g$ie$11453$sFQex g$int*$11444$sFQex))) g$ie$11453$sFQex g$ext*$11445$sFQex)))))) g$ls/false$11452$sFQex) (g$syntax-violation$9073$sFQex g$C$19699$sFQex '#f '"invalid syntax" g$t$11451$sFQex)))) g$C$19700$sFQex g$V$19701$sFQex))) g$t$11451$sFQex 'any))) g$C$19702$sFQex g$t$11446$sFQex)))) g$C$19703$sFQex g$V$19704$sFQex))) g$t$11446$sFQex '(any . #(each (any any)))))) g$C$19705$sFQex g$V$19713$sFQex))) g$exp*$11443$sFQex)))) g$exp*$11443$sFQex)))))) (case-lambda ((g$V$19716$sFQex) (g$V$19716$sFQex g$C$19715$sFQex g$exp*$11441$sFQex '() '()))) uninitialized)))))) (library-letrec*-identity 'g$parse-exports$9007$sFQex))) (g$parse-library-name$9008$sFQex g$parse-library-name$12527$sFQex ((case-lambda ((g$C$20968$sFQex) (g$C$20968$sFQex (case-lambda ((g$C$19758$sFQex g$spec$11454$sFQex) ((case-lambda ((g$C$19757$sFQex g$parse$11455$sFQex) (begin (set! g$parse$11455$sFQex (case-lambda ((g$C$19750$sFQex g$x$11462$sFQex) ((case-lambda ((g$C$19748$sFQex g$t$11463$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19749$sFQex) ((case-lambda ((g$C$19745$sFQex g$ls/false$11464$sFQex) ((case-lambda ((g$J$19747$sFQex) (if g$ls/false$11464$sFQex (apply g$J$19747$sFQex (case-lambda ((g$C$19721$sFQex g$v*$11465$sFQex) (g$for-all$5678$sFQex g$C$19721$sFQex (case-lambda ((g$C$19719$sFQex g$x$11466$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19720$sFQex) ((case-lambda ((g$C$19717$sFQex g$x$11467$sFQex) (integer? (case-lambda ((g$T$19718$sFQex) (if g$T$19718$sFQex (exact? g$C$19717$sFQex g$x$11467$sFQex) (g$C$19717$sFQex '#f)))) g$x$11467$sFQex))) g$C$19719$sFQex g$V$19720$sFQex))) g$x$11466$sFQex))) g$v*$11465$sFQex))) g$ls/false$11464$sFQex) (g$J$19747$sFQex '#f)))) (case-lambda ((g$T$19746$sFQex) (if g$T$19746$sFQex (apply g$C$19745$sFQex (case-lambda ((g$C$19722$sFQex g$v*$11468$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19723$sFQex) (values g$C$19722$sFQex '() g$V$19723$sFQex))) g$syntax->datum$9076$sFQex g$v*$11468$sFQex))) g$ls/false$11464$sFQex) ((case-lambda ((g$C$19743$sFQex g$t$11469$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19744$sFQex) ((case-lambda ((g$C$19740$sFQex g$ls/false$11470$sFQex) ((case-lambda ((g$J$19742$sFQex) (if g$ls/false$11470$sFQex (apply g$J$19742$sFQex (case-lambda ((g$C$19724$sFQex g$x$11471$sFQex g$rest$11472$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19725$sFQex) (g$symbol?$6168$sFQex g$C$19724$sFQex g$V$19725$sFQex))) g$x$11471$sFQex))) g$ls/false$11470$sFQex) (g$J$19742$sFQex '#f)))) (case-lambda ((g$T$19741$sFQex) (if g$T$19741$sFQex (apply g$C$19740$sFQex (case-lambda ((g$C$19731$sFQex g$x$11473$sFQex g$rest$11474$sFQex) (call-with-values g$C$19731$sFQex (case-lambda ((g$C$19726$sFQex) (g$parse$11455$sFQex g$C$19726$sFQex g$rest$11474$sFQex))) (case-lambda ((g$C$19730$sFQex g$x*$11477$sFQex g$v*$11478$sFQex) ((case-lambda ((g$C$19727$sFQex g$v*$11479$sFQex g$x*$11480$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19728$sFQex) (cons (case-lambda ((g$V$19729$sFQex) (values g$C$19727$sFQex g$V$19729$sFQex g$v*$11479$sFQex))) g$V$19728$sFQex g$x*$11480$sFQex))) g$x$11473$sFQex))) g$C$19730$sFQex g$v*$11478$sFQex g$x*$11477$sFQex)))))) g$ls/false$11470$sFQex) ((case-lambda ((g$C$19738$sFQex g$t$11481$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19739$sFQex) ((case-lambda ((g$C$19737$sFQex g$ls/false$11482$sFQex) (if g$ls/false$11482$sFQex (apply g$C$19737$sFQex (case-lambda ((g$C$19732$sFQex) (values g$C$19732$sFQex '() '()))) g$ls/false$11482$sFQex) ((case-lambda ((g$C$19735$sFQex g$t$11483$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19736$sFQex) ((case-lambda ((g$C$19734$sFQex g$ls/false$11484$sFQex) (if g$ls/false$11484$sFQex (apply g$C$19734$sFQex (case-lambda ((g$C$19733$sFQex) (g$syntax-violation$9073$sFQex g$C$19733$sFQex '#f '"invalid library name" g$spec$11454$sFQex))) g$ls/false$11484$sFQex) (g$syntax-violation$9073$sFQex g$C$19734$sFQex '#f '"invalid syntax" g$t$11483$sFQex)))) g$C$19735$sFQex g$V$19736$sFQex))) g$t$11483$sFQex '_))) g$C$19737$sFQex g$t$11481$sFQex)))) g$C$19738$sFQex g$V$19739$sFQex))) g$t$11481$sFQex '()))) g$C$19740$sFQex g$t$11469$sFQex))))))) g$C$19743$sFQex g$V$19744$sFQex))) g$t$11469$sFQex '(any . any)))) g$C$19745$sFQex g$t$11463$sFQex))))))) g$C$19748$sFQex g$V$19749$sFQex))) g$t$11463$sFQex '(each-any)))) g$C$19750$sFQex g$x$11462$sFQex)))) (call-with-values g$C$19757$sFQex (case-lambda ((g$C$19751$sFQex) (g$parse$11455$sFQex g$C$19751$sFQex g$spec$11454$sFQex))) (case-lambda ((g$C$19756$sFQex g$name*$11458$sFQex g$ver*$11459$sFQex) ((case-lambda ((g$C$19752$sFQex g$ver*$11460$sFQex g$name*$11461$sFQex) ((case-lambda ((g$J$19754$sFQex) (null? (case-lambda ((g$T$19755$sFQex) (if g$T$19755$sFQex (g$syntax-violation$9073$sFQex g$J$19754$sFQex '#f '"empty library name" g$spec$11454$sFQex) (void g$J$19754$sFQex)))) g$name*$11461$sFQex))) (case-lambda (g$IGNORE$19753$sFQex (values g$C$19752$sFQex g$name*$11461$sFQex g$ver*$11460$sFQex)))))) g$C$19756$sFQex g$ver*$11459$sFQex g$name*$11458$sFQex))))))) g$C$19758$sFQex uninitialized)))))) (library-letrec*-identity 'g$parse-library-name$9008$sFQex))) (g$parse-library$9009$sFQex g$parse-library$12528$sFQex ((case-lambda ((g$C$20969$sFQex) (g$C$20969$sFQex (case-lambda ((g$C$19775$sFQex g$e$11485$sFQex) ((case-lambda ((g$C$19773$sFQex g$t$11486$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19774$sFQex) ((case-lambda ((g$C$19770$sFQex g$ls/false$11487$sFQex) ((case-lambda ((g$J$19772$sFQex) (if g$ls/false$11487$sFQex (apply g$J$19772$sFQex (case-lambda ((g$C$19759$sFQex g$library$11488$sFQex g$name*$11489$sFQex g$export$11490$sFQex g$exp*$11491$sFQex g$import$11492$sFQex g$imp*$11493$sFQex g$b*$11494$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19760$sFQex) (eq? (case-lambda ((g$T$19761$sFQex) (if g$T$19761$sFQex (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19762$sFQex) (eq? (case-lambda ((g$T$19763$sFQex) (if g$T$19763$sFQex (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19764$sFQex) (eq? g$C$19759$sFQex g$V$19764$sFQex 'library))) g$library$11488$sFQex) (g$C$19759$sFQex '#f)))) g$V$19762$sFQex 'import))) g$import$11492$sFQex) (g$C$19759$sFQex '#f)))) g$V$19760$sFQex 'export))) g$export$11490$sFQex))) g$ls/false$11487$sFQex) (g$J$19772$sFQex '#f)))) (case-lambda ((g$T$19771$sFQex) (if g$T$19771$sFQex (apply g$C$19770$sFQex (case-lambda ((g$C$19765$sFQex g$library$11495$sFQex g$name*$11496$sFQex g$export$11497$sFQex g$exp*$11498$sFQex g$import$11499$sFQex g$imp*$11500$sFQex g$b*$11501$sFQex) (values g$C$19765$sFQex g$name*$11496$sFQex g$exp*$11498$sFQex g$imp*$11500$sFQex g$b*$11501$sFQex))) g$ls/false$11487$sFQex) ((case-lambda ((g$C$19768$sFQex g$t$11502$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19769$sFQex) ((case-lambda ((g$C$19767$sFQex g$ls/false$11503$sFQex) (if g$ls/false$11503$sFQex (apply g$C$19767$sFQex (case-lambda ((g$C$19766$sFQex) (g$syntax-violation$9073$sFQex g$C$19766$sFQex '#f '"malformed library" g$e$11485$sFQex))) g$ls/false$11503$sFQex) (g$syntax-violation$9073$sFQex g$C$19767$sFQex '#f '"invalid syntax" g$t$11502$sFQex)))) g$C$19768$sFQex g$V$19769$sFQex))) g$t$11502$sFQex '_))) g$C$19770$sFQex g$t$11486$sFQex))))))) g$C$19773$sFQex g$V$19774$sFQex))) g$t$11486$sFQex '(any each-any (any . each-any) (any . each-any) . each-any)))) g$C$19775$sFQex g$e$11485$sFQex)))))) (library-letrec*-identity 'g$parse-library$9009$sFQex))) (g$parse-import-spec*$9010$sFQex g$parse-import-spec*$12529$sFQex ((case-lambda ((g$C$20970$sFQex) (g$C$20970$sFQex (case-lambda ((g$C$20159$sFQex g$imp*$11504$sFQex) ((case-lambda ((g$C$20156$sFQex g$idsyn?$11505$sFQex g$dup-error$11506$sFQex g$merge-substs$11507$sFQex g$exclude*$11508$sFQex g$find*$11509$sFQex g$rem*$11510$sFQex g$remove-dups$11511$sFQex g$parse-library-name$11512$sFQex g$import-library$11513$sFQex g$get-import$11514$sFQex g$add-imports!$11515$sFQex) (begin (set! g$idsyn?$11505$sFQex (case-lambda ((g$C$19776$sFQex g$x$11765$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19777$sFQex) (g$symbol?$6168$sFQex g$C$19776$sFQex g$V$19777$sFQex))) g$x$11765$sFQex)))) (begin (set! g$dup-error$11506$sFQex (case-lambda ((g$C$19778$sFQex g$name$11764$sFQex) (g$syntax-violation$9073$sFQex g$C$19778$sFQex 'import '"two imports with different bindings" g$name$11764$sFQex)))) (begin (set! g$merge-substs$11507$sFQex (case-lambda ((g$C$19793$sFQex g$s$11755$sFQex g$subst$11756$sFQex) ((case-lambda ((g$C$19788$sFQex g$insert-to-subst$11757$sFQex) (begin (set! g$insert-to-subst$11757$sFQex (case-lambda ((g$C$19785$sFQex g$a$11758$sFQex g$subst$11759$sFQex) (cdr (case-lambda ((g$V$19786$sFQex) (car (case-lambda ((g$V$19787$sFQex) ((case-lambda ((g$C$19783$sFQex g$name$11760$sFQex g$label$11761$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$19784$sFQex) ((case-lambda ((g$C$19782$sFQex g$t$11762$sFQex) (if g$t$11762$sFQex ((case-lambda ((g$C$19779$sFQex g$x$11763$sFQex) (cdr (case-lambda ((g$V$19780$sFQex) (eq? (case-lambda ((g$T$19781$sFQex) (if g$T$19781$sFQex (g$C$19779$sFQex g$subst$11759$sFQex) (g$dup-error$11506$sFQex g$C$19779$sFQex g$name$11760$sFQex)))) g$V$19780$sFQex g$label$11761$sFQex))) g$x$11763$sFQex))) g$C$19782$sFQex g$t$11762$sFQex) (cons g$C$19782$sFQex g$a$11758$sFQex g$subst$11759$sFQex)))) g$C$19783$sFQex g$V$19784$sFQex))) g$name$11760$sFQex g$subst$11759$sFQex))) g$C$19785$sFQex g$V$19787$sFQex g$V$19786$sFQex))) g$a$11758$sFQex))) g$a$11758$sFQex)))) (null? (case-lambda ((g$T$19789$sFQex) (if g$T$19789$sFQex (g$C$19788$sFQex g$subst$11756$sFQex) (cdr (case-lambda ((g$V$19790$sFQex) (g$merge-substs$11507$sFQex (case-lambda ((g$V$19791$sFQex) (car (case-lambda ((g$V$19792$sFQex) (g$insert-to-subst$11757$sFQex g$C$19788$sFQex g$V$19792$sFQex g$V$19791$sFQex))) g$s$11755$sFQex))) g$V$19790$sFQex g$subst$11756$sFQex))) g$s$11755$sFQex)))) g$s$11755$sFQex)))) g$C$19793$sFQex uninitialized)))) (begin (set! g$exclude*$11508$sFQex (case-lambda ((g$C$19818$sFQex g$sym*$11731$sFQex g$subst$11732$sFQex) ((case-lambda ((g$C$19816$sFQex g$exclude$11733$sFQex) (begin (set! g$exclude$11733$sFQex (case-lambda ((g$C$19800$sFQex g$sym$11746$sFQex g$subst$11747$sFQex) (null? (case-lambda ((g$T$19801$sFQex) (if g$T$19801$sFQex (g$syntax-violation$9073$sFQex g$C$19800$sFQex 'import '"cannot rename unbound identifier" g$sym$11746$sFQex) (g$caar$6176$sFQex (case-lambda ((g$V$19802$sFQex) (eq? (case-lambda ((g$T$19803$sFQex) (if g$T$19803$sFQex (cdr (case-lambda ((g$V$19804$sFQex) (g$cdar$6178$sFQex (case-lambda ((g$V$19805$sFQex) (values g$C$19800$sFQex g$V$19805$sFQex g$V$19804$sFQex))) g$subst$11747$sFQex))) g$subst$11747$sFQex) (car (case-lambda ((g$V$19806$sFQex) ((case-lambda ((g$C$19799$sFQex g$a$11748$sFQex) (call-with-values g$C$19799$sFQex (case-lambda ((g$C$19794$sFQex) (cdr (case-lambda ((g$V$19795$sFQex) (g$exclude$11733$sFQex g$C$19794$sFQex g$sym$11746$sFQex g$V$19795$sFQex))) g$subst$11747$sFQex))) (case-lambda ((g$C$19798$sFQex g$old$11751$sFQex g$subst$11752$sFQex) ((case-lambda ((g$C$19796$sFQex g$subst$11753$sFQex g$old$11754$sFQex) (cons (case-lambda ((g$V$19797$sFQex) (values g$C$19796$sFQex g$old$11754$sFQex g$V$19797$sFQex))) g$a$11748$sFQex g$subst$11753$sFQex))) g$C$19798$sFQex g$subst$11752$sFQex g$old$11751$sFQex)))))) g$C$19800$sFQex g$V$19806$sFQex))) g$subst$11747$sFQex)))) g$sym$11746$sFQex g$V$19802$sFQex))) g$subst$11747$sFQex)))) g$subst$11747$sFQex)))) (null? (case-lambda ((g$T$19817$sFQex) (if g$T$19817$sFQex (values g$C$19816$sFQex '() g$subst$11732$sFQex) (call-with-values g$C$19816$sFQex (case-lambda ((g$C$19807$sFQex) (car (case-lambda ((g$V$19808$sFQex) (g$exclude$11733$sFQex g$C$19807$sFQex g$V$19808$sFQex g$subst$11732$sFQex))) g$sym*$11731$sFQex))) (case-lambda ((g$C$19815$sFQex g$old$11736$sFQex g$subst$11737$sFQex) ((case-lambda ((g$C$19814$sFQex g$subst$11738$sFQex g$old$11739$sFQex) (call-with-values g$C$19814$sFQex (case-lambda ((g$C$19809$sFQex) (cdr (case-lambda ((g$V$19810$sFQex) (g$exclude*$11508$sFQex g$C$19809$sFQex g$V$19810$sFQex g$subst$11738$sFQex))) g$sym*$11731$sFQex))) (case-lambda ((g$C$19813$sFQex g$old*$11742$sFQex g$subst$11743$sFQex) ((case-lambda ((g$C$19811$sFQex g$subst$11744$sFQex g$old*$11745$sFQex) (cons (case-lambda ((g$V$19812$sFQex) (values g$C$19811$sFQex g$V$19812$sFQex g$subst$11744$sFQex))) g$old$11739$sFQex g$old*$11745$sFQex))) g$C$19813$sFQex g$subst$11743$sFQex g$old*$11742$sFQex)))))) g$C$19815$sFQex g$subst$11737$sFQex g$old$11736$sFQex))))))) g$sym*$11731$sFQex)))) g$C$19818$sFQex uninitialized)))) (begin (set! g$find*$11509$sFQex (case-lambda ((g$C$19822$sFQex g$sym*$11727$sFQex g$subst$11728$sFQex) (g$map$5680$sFQex g$C$19822$sFQex (case-lambda ((g$C$19820$sFQex g$x$11729$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$19821$sFQex) ((case-lambda ((g$C$19819$sFQex g$t$11730$sFQex) (if g$t$11730$sFQex (cdr g$C$19819$sFQex g$t$11730$sFQex) (g$syntax-violation$9073$sFQex g$C$19819$sFQex 'import '"cannot find identifier" g$x$11729$sFQex)))) g$C$19820$sFQex g$V$19821$sFQex))) g$x$11729$sFQex g$subst$11728$sFQex))) g$sym*$11727$sFQex)))) (begin (set! g$rem*$11510$sFQex (case-lambda ((g$C$19834$sFQex g$sym*$11723$sFQex g$subst$11724$sFQex) ((case-lambda ((g$C$19833$sFQex g$f$11725$sFQex) ((case-lambda ((g$C$19824$sFQex g$f$19823$sFQex) (begin (set! g$f$11725$sFQex g$f$19823$sFQex) (g$C$19824$sFQex g$f$11725$sFQex)))) g$C$19833$sFQex (case-lambda ((g$C$19825$sFQex g$subst$11726$sFQex) (null? (case-lambda ((g$T$19826$sFQex) (if g$T$19826$sFQex (g$C$19825$sFQex '()) (g$caar$6176$sFQex (case-lambda ((g$V$19827$sFQex) (g$memq$5672$sFQex (case-lambda ((g$T$19828$sFQex) (if g$T$19828$sFQex (cdr (case-lambda ((g$V$19829$sFQex) (g$f$11725$sFQex g$C$19825$sFQex g$V$19829$sFQex))) g$subst$11726$sFQex) (cdr (case-lambda ((g$V$19830$sFQex) (g$f$11725$sFQex (case-lambda ((g$V$19831$sFQex) (car (case-lambda ((g$V$19832$sFQex) (cons g$C$19825$sFQex g$V$19832$sFQex g$V$19831$sFQex))) g$subst$11726$sFQex))) g$V$19830$sFQex))) g$subst$11726$sFQex)))) g$V$19827$sFQex g$sym*$11723$sFQex))) g$subst$11726$sFQex)))) g$subst$11726$sFQex)))))) (case-lambda ((g$V$19835$sFQex) (g$V$19835$sFQex g$C$19834$sFQex g$subst$11724$sFQex))) uninitialized)))) (begin (set! g$remove-dups$11511$sFQex (case-lambda ((g$C$19836$sFQex g$ls$11722$sFQex) (null? (case-lambda ((g$T$19837$sFQex) (if g$T$19837$sFQex (g$C$19836$sFQex '()) (cdr (case-lambda ((g$V$19838$sFQex) (car (case-lambda ((g$V$19839$sFQex) (g$memq$5672$sFQex (case-lambda ((g$T$19840$sFQex) (if g$T$19840$sFQex (cdr (case-lambda ((g$V$19841$sFQex) (g$remove-dups$11511$sFQex g$C$19836$sFQex g$V$19841$sFQex))) g$ls$11722$sFQex) (cdr (case-lambda ((g$V$19842$sFQex) (g$remove-dups$11511$sFQex (case-lambda ((g$V$19843$sFQex) (car (case-lambda ((g$V$19844$sFQex) (cons g$C$19836$sFQex g$V$19844$sFQex g$V$19843$sFQex))) g$ls$11722$sFQex))) g$V$19842$sFQex))) g$ls$11722$sFQex)))) g$V$19839$sFQex g$V$19838$sFQex))) g$ls$11722$sFQex))) g$ls$11722$sFQex)))) g$ls$11722$sFQex)))) (begin (set! g$parse-library-name$11512$sFQex (case-lambda ((g$C$20019$sFQex g$spec$11606$sFQex) ((case-lambda ((g$C$20017$sFQex g$subversion?$11607$sFQex g$subversion-pred$11608$sFQex g$version-pred$11609$sFQex) (begin (set! g$subversion?$11607$sFQex (case-lambda ((g$C$19848$sFQex g$x$11720$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19849$sFQex) ((case-lambda ((g$C$19845$sFQex g$x$11721$sFQex) (integer? (case-lambda ((g$T$19846$sFQex) (if g$T$19846$sFQex (exact? (case-lambda ((g$T$19847$sFQex) (if g$T$19847$sFQex (>= g$C$19845$sFQex g$x$11721$sFQex '0) (g$C$19845$sFQex '#f)))) g$x$11721$sFQex) (g$C$19845$sFQex '#f)))) g$x$11721$sFQex))) g$C$19848$sFQex g$V$19849$sFQex))) g$x$11720$sFQex)))) (begin (set! g$subversion-pred$11608$sFQex (case-lambda ((g$C$19921$sFQex g$x*$11672$sFQex) ((case-lambda ((g$C$19919$sFQex g$t$11673$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19920$sFQex) ((case-lambda ((g$C$19916$sFQex g$ls/false$11674$sFQex) ((case-lambda ((g$J$19918$sFQex) (if g$ls/false$11674$sFQex (apply g$J$19918$sFQex (case-lambda ((g$C$19850$sFQex g$n$11675$sFQex) (g$subversion?$11607$sFQex g$C$19850$sFQex g$n$11675$sFQex))) g$ls/false$11674$sFQex) (g$J$19918$sFQex '#f)))) (case-lambda ((g$T$19917$sFQex) (if g$T$19917$sFQex (apply g$C$19916$sFQex (case-lambda ((g$C$19853$sFQex g$n$11676$sFQex) (g$C$19853$sFQex (case-lambda ((g$C$19851$sFQex g$x$11677$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19852$sFQex) (= g$C$19851$sFQex g$x$11677$sFQex g$V$19852$sFQex))) g$n$11676$sFQex)))))) g$ls/false$11674$sFQex) ((case-lambda ((g$C$19914$sFQex g$t$11678$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19915$sFQex) ((case-lambda ((g$C$19911$sFQex g$ls/false$11679$sFQex) ((case-lambda ((g$J$19913$sFQex) (if g$ls/false$11679$sFQex (apply g$J$19913$sFQex (case-lambda ((g$C$19854$sFQex g$p?$11680$sFQex g$sub*$11681$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19855$sFQex) (eq? g$C$19854$sFQex g$V$19855$sFQex 'and))) g$p?$11680$sFQex))) g$ls/false$11679$sFQex) (g$J$19913$sFQex '#f)))) (case-lambda ((g$T$19912$sFQex) (if g$T$19912$sFQex (apply g$C$19911$sFQex (case-lambda ((g$C$19859$sFQex g$p?$11682$sFQex g$sub*$11683$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19860$sFQex) ((case-lambda ((g$C$19858$sFQex g$p*$11684$sFQex) (g$C$19858$sFQex (case-lambda ((g$C$19857$sFQex g$x$11685$sFQex) (g$for-all$5678$sFQex g$C$19857$sFQex (case-lambda ((g$C$19856$sFQex g$p$11686$sFQex) (g$p$11686$sFQex g$C$19856$sFQex g$x$11685$sFQex))) g$p*$11684$sFQex)))))) g$C$19859$sFQex g$V$19860$sFQex))) g$subversion-pred$11608$sFQex g$sub*$11683$sFQex))) g$ls/false$11679$sFQex) ((case-lambda ((g$C$19909$sFQex g$t$11687$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19910$sFQex) ((case-lambda ((g$C$19906$sFQex g$ls/false$11688$sFQex) ((case-lambda ((g$J$19908$sFQex) (if g$ls/false$11688$sFQex (apply g$J$19908$sFQex (case-lambda ((g$C$19861$sFQex g$p?$11689$sFQex g$sub*$11690$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19862$sFQex) (eq? g$C$19861$sFQex g$V$19862$sFQex 'or))) g$p?$11689$sFQex))) g$ls/false$11688$sFQex) (g$J$19908$sFQex '#f)))) (case-lambda ((g$T$19907$sFQex) (if g$T$19907$sFQex (apply g$C$19906$sFQex (case-lambda ((g$C$19866$sFQex g$p?$11691$sFQex g$sub*$11692$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19867$sFQex) ((case-lambda ((g$C$19865$sFQex g$p*$11693$sFQex) (g$C$19865$sFQex (case-lambda ((g$C$19864$sFQex g$x$11694$sFQex) (g$exists$5679$sFQex g$C$19864$sFQex (case-lambda ((g$C$19863$sFQex g$p$11695$sFQex) (g$p$11695$sFQex g$C$19863$sFQex g$x$11694$sFQex))) g$p*$11693$sFQex)))))) g$C$19866$sFQex g$V$19867$sFQex))) g$subversion-pred$11608$sFQex g$sub*$11692$sFQex))) g$ls/false$11688$sFQex) ((case-lambda ((g$C$19904$sFQex g$t$11696$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19905$sFQex) ((case-lambda ((g$C$19901$sFQex g$ls/false$11697$sFQex) ((case-lambda ((g$J$19903$sFQex) (if g$ls/false$11697$sFQex (apply g$J$19903$sFQex (case-lambda ((g$C$19868$sFQex g$p?$11698$sFQex g$sub$11699$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19869$sFQex) (eq? g$C$19868$sFQex g$V$19869$sFQex 'not))) g$p?$11698$sFQex))) g$ls/false$11697$sFQex) (g$J$19903$sFQex '#f)))) (case-lambda ((g$T$19902$sFQex) (if g$T$19902$sFQex (apply g$C$19901$sFQex (case-lambda ((g$C$19873$sFQex g$p?$11700$sFQex g$sub$11701$sFQex) (g$subversion-pred$11608$sFQex (case-lambda ((g$V$19874$sFQex) ((case-lambda ((g$C$19872$sFQex g$p$11702$sFQex) (g$C$19872$sFQex (case-lambda ((g$C$19870$sFQex g$x$11703$sFQex) (g$p$11702$sFQex (case-lambda ((g$V$19871$sFQex) (not g$C$19870$sFQex g$V$19871$sFQex))) g$x$11703$sFQex)))))) g$C$19873$sFQex g$V$19874$sFQex))) g$sub$11701$sFQex))) g$ls/false$11697$sFQex) ((case-lambda ((g$C$19899$sFQex g$t$11704$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19900$sFQex) ((case-lambda ((g$C$19896$sFQex g$ls/false$11705$sFQex) ((case-lambda ((g$J$19898$sFQex) (if g$ls/false$11705$sFQex (apply g$J$19898$sFQex (case-lambda ((g$C$19875$sFQex g$p?$11706$sFQex g$n$11707$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19876$sFQex) (eq? (case-lambda ((g$T$19877$sFQex) (if g$T$19877$sFQex (g$subversion?$11607$sFQex g$C$19875$sFQex g$n$11707$sFQex) (g$C$19875$sFQex '#f)))) g$V$19876$sFQex '<=))) g$p?$11706$sFQex))) g$ls/false$11705$sFQex) (g$J$19898$sFQex '#f)))) (case-lambda ((g$T$19897$sFQex) (if g$T$19897$sFQex (apply g$C$19896$sFQex (case-lambda ((g$C$19880$sFQex g$p?$11708$sFQex g$n$11709$sFQex) (g$C$19880$sFQex (case-lambda ((g$C$19878$sFQex g$x$11710$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19879$sFQex) (<= g$C$19878$sFQex g$x$11710$sFQex g$V$19879$sFQex))) g$n$11709$sFQex)))))) g$ls/false$11705$sFQex) ((case-lambda ((g$C$19894$sFQex g$t$11711$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19895$sFQex) ((case-lambda ((g$C$19891$sFQex g$ls/false$11712$sFQex) ((case-lambda ((g$J$19893$sFQex) (if g$ls/false$11712$sFQex (apply g$J$19893$sFQex (case-lambda ((g$C$19881$sFQex g$p?$11713$sFQex g$n$11714$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19882$sFQex) (eq? (case-lambda ((g$T$19883$sFQex) (if g$T$19883$sFQex (g$subversion?$11607$sFQex g$C$19881$sFQex g$n$11714$sFQex) (g$C$19881$sFQex '#f)))) g$V$19882$sFQex '>=))) g$p?$11713$sFQex))) g$ls/false$11712$sFQex) (g$J$19893$sFQex '#f)))) (case-lambda ((g$T$19892$sFQex) (if g$T$19892$sFQex (apply g$C$19891$sFQex (case-lambda ((g$C$19886$sFQex g$p?$11715$sFQex g$n$11716$sFQex) (g$C$19886$sFQex (case-lambda ((g$C$19884$sFQex g$x$11717$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19885$sFQex) (>= g$C$19884$sFQex g$x$11717$sFQex g$V$19885$sFQex))) g$n$11716$sFQex)))))) g$ls/false$11712$sFQex) ((case-lambda ((g$C$19889$sFQex g$t$11718$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19890$sFQex) ((case-lambda ((g$C$19888$sFQex g$ls/false$11719$sFQex) (if g$ls/false$11719$sFQex (apply g$C$19888$sFQex (case-lambda ((g$C$19887$sFQex) (g$syntax-violation$9073$sFQex g$C$19887$sFQex 'import '"invalid sub-version spec" g$spec$11606$sFQex g$x*$11672$sFQex))) g$ls/false$11719$sFQex) (g$syntax-violation$9073$sFQex g$C$19888$sFQex '#f '"invalid syntax" g$t$11718$sFQex)))) g$C$19889$sFQex g$V$19890$sFQex))) g$t$11718$sFQex '_))) g$C$19891$sFQex g$t$11711$sFQex))))))) g$C$19894$sFQex g$V$19895$sFQex))) g$t$11711$sFQex '(any any)))) g$C$19896$sFQex g$t$11704$sFQex))))))) g$C$19899$sFQex g$V$19900$sFQex))) g$t$11704$sFQex '(any any)))) g$C$19901$sFQex g$t$11696$sFQex))))))) g$C$19904$sFQex g$V$19905$sFQex))) g$t$11696$sFQex '(any any)))) g$C$19906$sFQex g$t$11687$sFQex))))))) g$C$19909$sFQex g$V$19910$sFQex))) g$t$11687$sFQex '(any . each-any)))) g$C$19911$sFQex g$t$11678$sFQex))))))) g$C$19914$sFQex g$V$19915$sFQex))) g$t$11678$sFQex '(any . each-any)))) g$C$19916$sFQex g$t$11673$sFQex))))))) g$C$19919$sFQex g$V$19920$sFQex))) g$t$11673$sFQex 'any))) g$C$19921$sFQex g$x*$11672$sFQex)))) (begin (set! g$version-pred$11609$sFQex (case-lambda ((g$C$19986$sFQex g$x*$11632$sFQex) ((case-lambda ((g$C$19984$sFQex g$t$11633$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19985$sFQex) ((case-lambda ((g$C$19983$sFQex g$ls/false$11634$sFQex) (if g$ls/false$11634$sFQex (apply g$C$19983$sFQex (case-lambda ((g$C$19923$sFQex) (g$C$19923$sFQex (case-lambda ((g$C$19922$sFQex g$x$11635$sFQex) (g$C$19922$sFQex '#t)))))) g$ls/false$11634$sFQex) ((case-lambda ((g$C$19981$sFQex g$t$11636$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19982$sFQex) ((case-lambda ((g$C$19978$sFQex g$ls/false$11637$sFQex) ((case-lambda ((g$J$19980$sFQex) (if g$ls/false$11637$sFQex (apply g$J$19980$sFQex (case-lambda ((g$C$19924$sFQex g$c$11638$sFQex g$ver*$11639$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19925$sFQex) (eq? g$C$19924$sFQex g$V$19925$sFQex 'and))) g$c$11638$sFQex))) g$ls/false$11637$sFQex) (g$J$19980$sFQex '#f)))) (case-lambda ((g$T$19979$sFQex) (if g$T$19979$sFQex (apply g$C$19978$sFQex (case-lambda ((g$C$19929$sFQex g$c$11640$sFQex g$ver*$11641$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19930$sFQex) ((case-lambda ((g$C$19928$sFQex g$p*$11642$sFQex) (g$C$19928$sFQex (case-lambda ((g$C$19927$sFQex g$x$11643$sFQex) (g$for-all$5678$sFQex g$C$19927$sFQex (case-lambda ((g$C$19926$sFQex g$p$11644$sFQex) (g$p$11644$sFQex g$C$19926$sFQex g$x$11643$sFQex))) g$p*$11642$sFQex)))))) g$C$19929$sFQex g$V$19930$sFQex))) g$version-pred$11609$sFQex g$ver*$11641$sFQex))) g$ls/false$11637$sFQex) ((case-lambda ((g$C$19976$sFQex g$t$11645$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19977$sFQex) ((case-lambda ((g$C$19973$sFQex g$ls/false$11646$sFQex) ((case-lambda ((g$J$19975$sFQex) (if g$ls/false$11646$sFQex (apply g$J$19975$sFQex (case-lambda ((g$C$19931$sFQex g$c$11647$sFQex g$ver*$11648$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19932$sFQex) (eq? g$C$19931$sFQex g$V$19932$sFQex 'or))) g$c$11647$sFQex))) g$ls/false$11646$sFQex) (g$J$19975$sFQex '#f)))) (case-lambda ((g$T$19974$sFQex) (if g$T$19974$sFQex (apply g$C$19973$sFQex (case-lambda ((g$C$19936$sFQex g$c$11649$sFQex g$ver*$11650$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19937$sFQex) ((case-lambda ((g$C$19935$sFQex g$p*$11651$sFQex) (g$C$19935$sFQex (case-lambda ((g$C$19934$sFQex g$x$11652$sFQex) (g$exists$5679$sFQex g$C$19934$sFQex (case-lambda ((g$C$19933$sFQex g$p$11653$sFQex) (g$p$11653$sFQex g$C$19933$sFQex g$x$11652$sFQex))) g$p*$11651$sFQex)))))) g$C$19936$sFQex g$V$19937$sFQex))) g$version-pred$11609$sFQex g$ver*$11650$sFQex))) g$ls/false$11646$sFQex) ((case-lambda ((g$C$19971$sFQex g$t$11654$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19972$sFQex) ((case-lambda ((g$C$19968$sFQex g$ls/false$11655$sFQex) ((case-lambda ((g$J$19970$sFQex) (if g$ls/false$11655$sFQex (apply g$J$19970$sFQex (case-lambda ((g$C$19938$sFQex g$c$11656$sFQex g$ver$11657$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19939$sFQex) (eq? g$C$19938$sFQex g$V$19939$sFQex 'not))) g$c$11656$sFQex))) g$ls/false$11655$sFQex) (g$J$19970$sFQex '#f)))) (case-lambda ((g$T$19969$sFQex) (if g$T$19969$sFQex (apply g$C$19968$sFQex (case-lambda ((g$C$19943$sFQex g$c$11658$sFQex g$ver$11659$sFQex) (g$version-pred$11609$sFQex (case-lambda ((g$V$19944$sFQex) ((case-lambda ((g$C$19942$sFQex g$p$11660$sFQex) (g$C$19942$sFQex (case-lambda ((g$C$19940$sFQex g$x$11661$sFQex) (g$p$11660$sFQex (case-lambda ((g$V$19941$sFQex) (not g$C$19940$sFQex g$V$19941$sFQex))) g$x$11661$sFQex)))))) g$C$19943$sFQex g$V$19944$sFQex))) g$ver$11659$sFQex))) g$ls/false$11655$sFQex) ((case-lambda ((g$C$19966$sFQex g$t$11662$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19967$sFQex) ((case-lambda ((g$C$19965$sFQex g$ls/false$11663$sFQex) (if g$ls/false$11663$sFQex (apply g$C$19965$sFQex (case-lambda ((g$C$19959$sFQex g$sub*$11664$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$19960$sFQex) ((case-lambda ((g$C$19958$sFQex g$p*$11665$sFQex) (g$C$19958$sFQex (case-lambda ((g$C$19956$sFQex g$x$11666$sFQex) ((case-lambda ((g$C$19955$sFQex g$f$11667$sFQex) ((case-lambda ((g$C$19946$sFQex g$f$19945$sFQex) (begin (set! g$f$11667$sFQex g$f$19945$sFQex) (g$C$19946$sFQex g$f$11667$sFQex)))) g$C$19955$sFQex (case-lambda ((g$C$19947$sFQex g$p*$11668$sFQex g$x$11669$sFQex) (null? (case-lambda ((g$T$19948$sFQex) (if g$T$19948$sFQex (g$C$19947$sFQex '#t) (null? (case-lambda ((g$T$19949$sFQex) (if g$T$19949$sFQex (g$C$19947$sFQex '#f) (car (case-lambda ((g$V$19950$sFQex) (car (case-lambda ((g$V$19951$sFQex) (g$V$19951$sFQex (case-lambda ((g$T$19952$sFQex) (if g$T$19952$sFQex (cdr (case-lambda ((g$V$19953$sFQex) (cdr (case-lambda ((g$V$19954$sFQex) (g$f$11667$sFQex g$C$19947$sFQex g$V$19954$sFQex g$V$19953$sFQex))) g$p*$11668$sFQex))) g$x$11669$sFQex) (g$C$19947$sFQex '#f)))) g$V$19950$sFQex))) g$p*$11668$sFQex))) g$x$11669$sFQex)))) g$x$11669$sFQex)))) g$p*$11668$sFQex)))))) (case-lambda ((g$V$19957$sFQex) (g$V$19957$sFQex g$C$19956$sFQex g$p*$11665$sFQex g$x$11666$sFQex))) uninitialized)))))) g$C$19959$sFQex g$V$19960$sFQex))) g$subversion-pred$11608$sFQex g$sub*$11664$sFQex))) g$ls/false$11663$sFQex) ((case-lambda ((g$C$19963$sFQex g$t$11670$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$19964$sFQex) ((case-lambda ((g$C$19962$sFQex g$ls/false$11671$sFQex) (if g$ls/false$11671$sFQex (apply g$C$19962$sFQex (case-lambda ((g$C$19961$sFQex) (g$syntax-violation$9073$sFQex g$C$19961$sFQex 'import '"invalid version spec" g$spec$11606$sFQex g$x*$11632$sFQex))) g$ls/false$11671$sFQex) (g$syntax-violation$9073$sFQex g$C$19962$sFQex '#f '"invalid syntax" g$t$11670$sFQex)))) g$C$19963$sFQex g$V$19964$sFQex))) g$t$11670$sFQex '_))) g$C$19965$sFQex g$t$11662$sFQex)))) g$C$19966$sFQex g$V$19967$sFQex))) g$t$11662$sFQex 'each-any))) g$C$19968$sFQex g$t$11654$sFQex))))))) g$C$19971$sFQex g$V$19972$sFQex))) g$t$11654$sFQex '(any any)))) g$C$19973$sFQex g$t$11645$sFQex))))))) g$C$19976$sFQex g$V$19977$sFQex))) g$t$11645$sFQex '(any . each-any)))) g$C$19978$sFQex g$t$11636$sFQex))))))) g$C$19981$sFQex g$V$19982$sFQex))) g$t$11636$sFQex '(any . each-any)))) g$C$19983$sFQex g$t$11633$sFQex)))) g$C$19984$sFQex g$V$19985$sFQex))) g$t$11633$sFQex '()))) g$C$19986$sFQex g$x*$11632$sFQex)))) ((case-lambda ((g$C$20016$sFQex g$f$11610$sFQex) ((case-lambda ((g$C$19988$sFQex g$f$19987$sFQex) (begin (set! g$f$11610$sFQex g$f$19987$sFQex) (g$C$19988$sFQex g$f$11610$sFQex)))) g$C$20016$sFQex (case-lambda ((g$C$20015$sFQex g$x$11611$sFQex) ((case-lambda ((g$C$20013$sFQex g$t$11612$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20014$sFQex) ((case-lambda ((g$C$20012$sFQex g$ls/false$11613$sFQex) (if g$ls/false$11613$sFQex (apply g$C$20012$sFQex (case-lambda ((g$C$19989$sFQex g$version-spec*$11614$sFQex) (g$version-pred$11609$sFQex (case-lambda ((g$V$19990$sFQex) (values g$C$19989$sFQex '() g$V$19990$sFQex))) g$version-spec*$11614$sFQex))) g$ls/false$11613$sFQex) ((case-lambda ((g$C$20010$sFQex g$t$11615$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20011$sFQex) ((case-lambda ((g$C$20007$sFQex g$ls/false$11616$sFQex) ((case-lambda ((g$J$20009$sFQex) (if g$ls/false$11616$sFQex (apply g$J$20009$sFQex (case-lambda ((g$C$19991$sFQex g$x$11617$sFQex g$x*$11618$sFQex) (g$idsyn?$11505$sFQex g$C$19991$sFQex g$x$11617$sFQex))) g$ls/false$11616$sFQex) (g$J$20009$sFQex '#f)))) (case-lambda ((g$T$20008$sFQex) (if g$T$20008$sFQex (apply g$C$20007$sFQex (case-lambda ((g$C$19997$sFQex g$x$11619$sFQex g$x*$11620$sFQex) (call-with-values g$C$19997$sFQex (case-lambda ((g$C$19992$sFQex) (g$f$11610$sFQex g$C$19992$sFQex g$x*$11620$sFQex))) (case-lambda ((g$C$19996$sFQex g$name$11623$sFQex g$pred$11624$sFQex) ((case-lambda ((g$C$19993$sFQex g$pred$11625$sFQex g$name$11626$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$19994$sFQex) (cons (case-lambda ((g$V$19995$sFQex) (values g$C$19993$sFQex g$V$19995$sFQex g$pred$11625$sFQex))) g$V$19994$sFQex g$name$11626$sFQex))) g$x$11619$sFQex))) g$C$19996$sFQex g$pred$11624$sFQex g$name$11623$sFQex)))))) g$ls/false$11616$sFQex) ((case-lambda ((g$C$20005$sFQex g$t$11627$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20006$sFQex) ((case-lambda ((g$C$20004$sFQex g$ls/false$11628$sFQex) (if g$ls/false$11628$sFQex (apply g$C$20004$sFQex (case-lambda ((g$C$19999$sFQex) (values g$C$19999$sFQex '() (case-lambda ((g$C$19998$sFQex g$x$11629$sFQex) (g$C$19998$sFQex '#t)))))) g$ls/false$11628$sFQex) ((case-lambda ((g$C$20002$sFQex g$t$11630$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20003$sFQex) ((case-lambda ((g$C$20001$sFQex g$ls/false$11631$sFQex) (if g$ls/false$11631$sFQex (apply g$C$20001$sFQex (case-lambda ((g$C$20000$sFQex) (g$syntax-violation$9073$sFQex g$C$20000$sFQex '#f '"invalid import spec" g$spec$11606$sFQex))) g$ls/false$11631$sFQex) (g$syntax-violation$9073$sFQex g$C$20001$sFQex '#f '"invalid syntax" g$t$11630$sFQex)))) g$C$20002$sFQex g$V$20003$sFQex))) g$t$11630$sFQex '_))) g$C$20004$sFQex g$t$11627$sFQex)))) g$C$20005$sFQex g$V$20006$sFQex))) g$t$11627$sFQex '()))) g$C$20007$sFQex g$t$11615$sFQex))))))) g$C$20010$sFQex g$V$20011$sFQex))) g$t$11615$sFQex '(any . any)))) g$C$20012$sFQex g$t$11612$sFQex)))) g$C$20013$sFQex g$V$20014$sFQex))) g$t$11612$sFQex '(each-any)))) g$C$20015$sFQex g$x$11611$sFQex)))))) (case-lambda ((g$V$20018$sFQex) (g$V$20018$sFQex g$C$20017$sFQex g$spec$11606$sFQex))) uninitialized)))))) g$C$20019$sFQex uninitialized uninitialized uninitialized)))) (begin (set! g$import-library$11513$sFQex (case-lambda ((g$C$20038$sFQex g$spec*$11598$sFQex) (call-with-values g$C$20038$sFQex (case-lambda ((g$C$20020$sFQex) (g$parse-library-name$11512$sFQex g$C$20020$sFQex g$spec*$11598$sFQex))) (case-lambda ((g$C$20037$sFQex g$name$11601$sFQex g$pred$11602$sFQex) ((case-lambda ((g$C$20032$sFQex g$pred$11603$sFQex g$name$11604$sFQex) ((case-lambda ((g$J$20035$sFQex) (null? (case-lambda ((g$T$20036$sFQex) (if g$T$20036$sFQex (g$syntax-violation$9073$sFQex g$J$20035$sFQex 'import '"empty library name" g$spec*$11598$sFQex) (void g$J$20035$sFQex)))) g$name$11604$sFQex))) (case-lambda (g$IGNORE$20033$sFQex (g$find-library-by-name$8482$sFQex (case-lambda ((g$V$20034$sFQex) ((case-lambda ((g$C$20021$sFQex g$lib$11605$sFQex) ((case-lambda ((g$J$20030$sFQex) (not (case-lambda ((g$T$20031$sFQex) (if g$T$20031$sFQex (g$syntax-violation$9073$sFQex g$J$20030$sFQex 'import '"cannot find library with required name" g$name$11604$sFQex) (void g$J$20030$sFQex)))) g$lib$11605$sFQex))) (case-lambda (g$IGNORE$20022$sFQex ((case-lambda ((g$J$20026$sFQex) (g$library-version$8442$sFQex (case-lambda ((g$V$20027$sFQex) (g$pred$11603$sFQex (case-lambda ((g$V$20028$sFQex) (not (case-lambda ((g$T$20029$sFQex) (if g$T$20029$sFQex (g$syntax-violation$9073$sFQex g$J$20026$sFQex 'import '"library does not satisfy version specification" g$spec*$11598$sFQex g$lib$11605$sFQex) (void g$J$20026$sFQex)))) g$V$20028$sFQex))) g$V$20027$sFQex))) g$lib$11605$sFQex))) (case-lambda (g$IGNORE$20023$sFQex (g$imp-collector$9015$sFQex (case-lambda ((g$V$20024$sFQex) (g$V$20024$sFQex (case-lambda (g$IGNORE$20025$sFQex (g$library-subst$8446$sFQex g$C$20021$sFQex g$lib$11605$sFQex))) g$lib$11605$sFQex)))))))))))) g$C$20032$sFQex g$V$20034$sFQex))) g$name$11604$sFQex)))))) g$C$20037$sFQex g$pred$11602$sFQex g$name$11601$sFQex))))))) (begin (set! g$get-import$11514$sFQex (case-lambda ((g$C$20135$sFQex g$spec$11527$sFQex) ((case-lambda ((g$C$20133$sFQex g$t$11528$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20134$sFQex) ((case-lambda ((g$C$20130$sFQex g$ls/false$11529$sFQex) ((case-lambda ((g$J$20132$sFQex) (if g$ls/false$11529$sFQex (apply g$J$20132$sFQex (case-lambda ((g$C$20039$sFQex g$x$11530$sFQex g$x*$11531$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20040$sFQex) (g$memq$5672$sFQex (case-lambda ((g$V$20041$sFQex) (not g$C$20039$sFQex g$V$20041$sFQex))) g$V$20040$sFQex '(for rename except only prefix library)))) g$x$11530$sFQex))) g$ls/false$11529$sFQex) (g$J$20132$sFQex '#f)))) (case-lambda ((g$T$20131$sFQex) (if g$T$20131$sFQex (apply g$C$20130$sFQex (case-lambda ((g$C$20042$sFQex g$x$11532$sFQex g$x*$11533$sFQex) (cons (case-lambda ((g$V$20043$sFQex) (g$import-library$11513$sFQex g$C$20042$sFQex g$V$20043$sFQex))) g$x$11532$sFQex g$x*$11533$sFQex))) g$ls/false$11529$sFQex) ((case-lambda ((g$C$20128$sFQex g$t$11534$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20129$sFQex) ((case-lambda ((g$C$20125$sFQex g$ls/false$11535$sFQex) ((case-lambda ((g$J$20127$sFQex) (if g$ls/false$11535$sFQex (apply g$J$20127$sFQex (case-lambda ((g$C$20044$sFQex g$rename$11536$sFQex g$isp$11537$sFQex g$old*$11538$sFQex g$new*$11539$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20045$sFQex) (eq? (case-lambda ((g$T$20046$sFQex) (if g$T$20046$sFQex (g$for-all$5678$sFQex (case-lambda ((g$T$20047$sFQex) (if g$T$20047$sFQex (g$for-all$5678$sFQex g$C$20044$sFQex g$idsyn?$11505$sFQex g$new*$11539$sFQex) (g$C$20044$sFQex '#f)))) g$idsyn?$11505$sFQex g$old*$11538$sFQex) (g$C$20044$sFQex '#f)))) g$V$20045$sFQex 'rename))) g$rename$11536$sFQex))) g$ls/false$11535$sFQex) (g$J$20127$sFQex '#f)))) (case-lambda ((g$T$20126$sFQex) (if g$T$20126$sFQex (apply g$C$20125$sFQex (case-lambda ((g$C$20054$sFQex g$rename$11540$sFQex g$isp$11541$sFQex g$old*$11542$sFQex g$new*$11543$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20055$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20056$sFQex) (g$get-import$11514$sFQex (case-lambda ((g$V$20057$sFQex) ((case-lambda ((g$C$20052$sFQex g$subst$11544$sFQex g$old*$11545$sFQex g$new*$11546$sFQex) (g$find*$11509$sFQex (case-lambda ((g$V$20053$sFQex) ((case-lambda ((g$C$20050$sFQex g$old-label*$11547$sFQex) (g$rem*$11510$sFQex (case-lambda ((g$V$20051$sFQex) ((case-lambda ((g$C$20048$sFQex g$subst$11548$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20049$sFQex) (g$merge-substs$11507$sFQex g$C$20048$sFQex g$V$20049$sFQex g$subst$11548$sFQex))) cons g$new*$11546$sFQex g$old-label*$11547$sFQex))) g$C$20050$sFQex g$V$20051$sFQex))) g$old*$11545$sFQex g$subst$11544$sFQex))) g$C$20052$sFQex g$V$20053$sFQex))) g$old*$11545$sFQex g$subst$11544$sFQex))) g$C$20054$sFQex g$V$20057$sFQex g$V$20056$sFQex g$V$20055$sFQex))) g$isp$11541$sFQex))) g$syntax->datum$9076$sFQex g$old*$11542$sFQex))) g$syntax->datum$9076$sFQex g$new*$11543$sFQex))) g$ls/false$11535$sFQex) ((case-lambda ((g$C$20123$sFQex g$t$11549$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20124$sFQex) ((case-lambda ((g$C$20120$sFQex g$ls/false$11550$sFQex) ((case-lambda ((g$J$20122$sFQex) (if g$ls/false$11550$sFQex (apply g$J$20122$sFQex (case-lambda ((g$C$20058$sFQex g$except$11551$sFQex g$isp$11552$sFQex g$sym*$11553$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20059$sFQex) (eq? (case-lambda ((g$T$20060$sFQex) (if g$T$20060$sFQex (g$for-all$5678$sFQex g$C$20058$sFQex g$idsyn?$11505$sFQex g$sym*$11553$sFQex) (g$C$20058$sFQex '#f)))) g$V$20059$sFQex 'except))) g$except$11551$sFQex))) g$ls/false$11550$sFQex) (g$J$20122$sFQex '#f)))) (case-lambda ((g$T$20121$sFQex) (if g$T$20121$sFQex (apply g$C$20120$sFQex (case-lambda ((g$C$20063$sFQex g$except$11554$sFQex g$isp$11555$sFQex g$sym*$11556$sFQex) (g$get-import$11514$sFQex (case-lambda ((g$V$20064$sFQex) ((case-lambda ((g$C$20061$sFQex g$subst$11557$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20062$sFQex) (g$rem*$11510$sFQex g$C$20061$sFQex g$V$20062$sFQex g$subst$11557$sFQex))) g$syntax->datum$9076$sFQex g$sym*$11556$sFQex))) g$C$20063$sFQex g$V$20064$sFQex))) g$isp$11555$sFQex))) g$ls/false$11550$sFQex) ((case-lambda ((g$C$20118$sFQex g$t$11558$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20119$sFQex) ((case-lambda ((g$C$20115$sFQex g$ls/false$11559$sFQex) ((case-lambda ((g$J$20117$sFQex) (if g$ls/false$11559$sFQex (apply g$J$20117$sFQex (case-lambda ((g$C$20065$sFQex g$only$11560$sFQex g$isp$11561$sFQex g$sym*$11562$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20066$sFQex) (eq? (case-lambda ((g$T$20067$sFQex) (if g$T$20067$sFQex (g$for-all$5678$sFQex g$C$20065$sFQex g$idsyn?$11505$sFQex g$sym*$11562$sFQex) (g$C$20065$sFQex '#f)))) g$V$20066$sFQex 'only))) g$only$11560$sFQex))) g$ls/false$11559$sFQex) (g$J$20117$sFQex '#f)))) (case-lambda ((g$T$20116$sFQex) (if g$T$20116$sFQex (apply g$C$20115$sFQex (case-lambda ((g$C$20073$sFQex g$only$11563$sFQex g$isp$11564$sFQex g$sym*$11565$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20074$sFQex) (g$get-import$11514$sFQex (case-lambda ((g$V$20075$sFQex) ((case-lambda ((g$C$20071$sFQex g$subst$11566$sFQex g$sym*$11567$sFQex) (g$remove-dups$11511$sFQex (case-lambda ((g$V$20072$sFQex) ((case-lambda ((g$C$20069$sFQex g$sym*$11568$sFQex) (g$find*$11509$sFQex (case-lambda ((g$V$20070$sFQex) ((case-lambda ((g$C$20068$sFQex g$lab*$11569$sFQex) (g$map$5680$sFQex g$C$20068$sFQex cons g$sym*$11568$sFQex g$lab*$11569$sFQex))) g$C$20069$sFQex g$V$20070$sFQex))) g$sym*$11568$sFQex g$subst$11566$sFQex))) g$C$20071$sFQex g$V$20072$sFQex))) g$sym*$11567$sFQex))) g$C$20073$sFQex g$V$20075$sFQex g$V$20074$sFQex))) g$isp$11564$sFQex))) g$syntax->datum$9076$sFQex g$sym*$11565$sFQex))) g$ls/false$11559$sFQex) ((case-lambda ((g$C$20113$sFQex g$t$11570$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20114$sFQex) ((case-lambda ((g$C$20110$sFQex g$ls/false$11571$sFQex) ((case-lambda ((g$J$20112$sFQex) (if g$ls/false$11571$sFQex (apply g$J$20112$sFQex (case-lambda ((g$C$20076$sFQex g$prefix$11572$sFQex g$isp$11573$sFQex g$p$11574$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20077$sFQex) (eq? (case-lambda ((g$T$20078$sFQex) (if g$T$20078$sFQex (g$idsyn?$11505$sFQex g$C$20076$sFQex g$p$11574$sFQex) (g$C$20076$sFQex '#f)))) g$V$20077$sFQex 'prefix))) g$prefix$11572$sFQex))) g$ls/false$11571$sFQex) (g$J$20112$sFQex '#f)))) (case-lambda ((g$T$20111$sFQex) (if g$T$20111$sFQex (apply g$C$20110$sFQex (case-lambda ((g$C$20086$sFQex g$prefix$11575$sFQex g$isp$11576$sFQex g$p$11577$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20087$sFQex) (symbol->string (case-lambda ((g$V$20088$sFQex) (g$get-import$11514$sFQex (case-lambda ((g$V$20089$sFQex) ((case-lambda ((g$C$20085$sFQex g$subst$11578$sFQex g$prefix$11579$sFQex) (g$map$5680$sFQex g$C$20085$sFQex (case-lambda ((g$C$20079$sFQex g$x$11580$sFQex) (cdr (case-lambda ((g$V$20080$sFQex) (car (case-lambda ((g$V$20081$sFQex) (symbol->string (case-lambda ((g$V$20082$sFQex) (string-append (case-lambda ((g$V$20083$sFQex) (string->symbol (case-lambda ((g$V$20084$sFQex) (cons g$C$20079$sFQex g$V$20084$sFQex g$V$20080$sFQex))) g$V$20083$sFQex))) g$prefix$11579$sFQex g$V$20082$sFQex))) g$V$20081$sFQex))) g$x$11580$sFQex))) g$x$11580$sFQex))) g$subst$11578$sFQex))) g$C$20086$sFQex g$V$20089$sFQex g$V$20088$sFQex))) g$isp$11576$sFQex))) g$V$20087$sFQex))) g$p$11577$sFQex))) g$ls/false$11571$sFQex) ((case-lambda ((g$C$20108$sFQex g$t$11581$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20109$sFQex) ((case-lambda ((g$C$20105$sFQex g$ls/false$11582$sFQex) ((case-lambda ((g$J$20107$sFQex) (if g$ls/false$11582$sFQex (apply g$J$20107$sFQex (case-lambda ((g$C$20090$sFQex g$library$11583$sFQex g$spec*$11584$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20091$sFQex) (eq? g$C$20090$sFQex g$V$20091$sFQex 'library))) g$library$11583$sFQex))) g$ls/false$11582$sFQex) (g$J$20107$sFQex '#f)))) (case-lambda ((g$T$20106$sFQex) (if g$T$20106$sFQex (apply g$C$20105$sFQex (case-lambda ((g$C$20092$sFQex g$library$11585$sFQex g$spec*$11586$sFQex) (g$import-library$11513$sFQex g$C$20092$sFQex g$spec*$11586$sFQex))) g$ls/false$11582$sFQex) ((case-lambda ((g$C$20103$sFQex g$t$11587$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20104$sFQex) ((case-lambda ((g$C$20100$sFQex g$ls/false$11588$sFQex) ((case-lambda ((g$J$20102$sFQex) (if g$ls/false$11588$sFQex (apply g$J$20102$sFQex (case-lambda ((g$C$20093$sFQex g$for$11589$sFQex g$isp$11590$sFQex g$rest$11591$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20094$sFQex) (eq? g$C$20093$sFQex g$V$20094$sFQex 'for))) g$for$11589$sFQex))) g$ls/false$11588$sFQex) (g$J$20102$sFQex '#f)))) (case-lambda ((g$T$20101$sFQex) (if g$T$20101$sFQex (apply g$C$20100$sFQex (case-lambda ((g$C$20095$sFQex g$for$11592$sFQex g$isp$11593$sFQex g$rest$11594$sFQex) (g$get-import$11514$sFQex g$C$20095$sFQex g$isp$11593$sFQex))) g$ls/false$11588$sFQex) ((case-lambda ((g$C$20098$sFQex g$t$11595$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20099$sFQex) ((case-lambda ((g$C$20097$sFQex g$ls/false$11596$sFQex) (if g$ls/false$11596$sFQex (apply g$C$20097$sFQex (case-lambda ((g$C$20096$sFQex g$spec$11597$sFQex) (g$syntax-violation$9073$sFQex g$C$20096$sFQex 'import '"invalid import spec" g$spec$11597$sFQex))) g$ls/false$11596$sFQex) (g$syntax-violation$9073$sFQex g$C$20097$sFQex '#f '"invalid syntax" g$t$11595$sFQex)))) g$C$20098$sFQex g$V$20099$sFQex))) g$t$11595$sFQex 'any))) g$C$20100$sFQex g$t$11587$sFQex))))))) g$C$20103$sFQex g$V$20104$sFQex))) g$t$11587$sFQex '(any any . any)))) g$C$20105$sFQex g$t$11581$sFQex))))))) g$C$20108$sFQex g$V$20109$sFQex))) g$t$11581$sFQex '(any each-any)))) g$C$20110$sFQex g$t$11570$sFQex))))))) g$C$20113$sFQex g$V$20114$sFQex))) g$t$11570$sFQex '(any any any)))) g$C$20115$sFQex g$t$11558$sFQex))))))) g$C$20118$sFQex g$V$20119$sFQex))) g$t$11558$sFQex '(any any . each-any)))) g$C$20120$sFQex g$t$11549$sFQex))))))) g$C$20123$sFQex g$V$20124$sFQex))) g$t$11549$sFQex '(any any . each-any)))) g$C$20125$sFQex g$t$11534$sFQex))))))) g$C$20128$sFQex g$V$20129$sFQex))) g$t$11534$sFQex '(any any . #(each (any any)))))) g$C$20130$sFQex g$t$11528$sFQex))))))) g$C$20133$sFQex g$V$20134$sFQex))) g$t$11528$sFQex '(any . each-any)))) g$C$20135$sFQex g$spec$11527$sFQex)))) (begin (set! g$add-imports!$11515$sFQex (case-lambda ((g$C$20146$sFQex g$imp$11519$sFQex g$h$11520$sFQex) (g$get-import$11514$sFQex (case-lambda ((g$V$20147$sFQex) ((case-lambda ((g$C$20145$sFQex g$subst$11521$sFQex) (g$for-each$5681$sFQex g$C$20145$sFQex (case-lambda ((g$C$20142$sFQex g$x$11522$sFQex) (cdr (case-lambda ((g$V$20143$sFQex) (car (case-lambda ((g$V$20144$sFQex) ((case-lambda ((g$C$20140$sFQex g$name$11523$sFQex g$label$11524$sFQex) (g$hashtable-ref$6270$sFQex (case-lambda ((g$V$20141$sFQex) ((case-lambda ((g$C$20139$sFQex g$t$11525$sFQex) (if g$t$11525$sFQex ((case-lambda ((g$C$20136$sFQex g$l$11526$sFQex) (eq? (case-lambda ((g$V$20137$sFQex) (not (case-lambda ((g$T$20138$sFQex) (if g$T$20138$sFQex (g$dup-error$11506$sFQex g$C$20136$sFQex g$name$11523$sFQex) (void g$C$20136$sFQex)))) g$V$20137$sFQex))) g$l$11526$sFQex g$label$11524$sFQex))) g$C$20139$sFQex g$t$11525$sFQex) (g$hashtable-set!$6271$sFQex g$C$20139$sFQex g$h$11520$sFQex g$name$11523$sFQex g$label$11524$sFQex)))) g$C$20140$sFQex g$V$20141$sFQex))) g$h$11520$sFQex g$name$11523$sFQex '#f))) g$C$20142$sFQex g$V$20144$sFQex g$V$20143$sFQex))) g$x$11522$sFQex))) g$x$11522$sFQex))) g$subst$11521$sFQex))) g$C$20146$sFQex g$V$20147$sFQex))) g$imp$11519$sFQex)))) (g$make-eq-hashtable$6267$sFQex (case-lambda ((g$V$20157$sFQex) ((case-lambda ((g$C$20155$sFQex g$f$11516$sFQex) ((case-lambda ((g$C$20149$sFQex g$f$20148$sFQex) (begin (set! g$f$11516$sFQex g$f$20148$sFQex) (g$C$20149$sFQex g$f$11516$sFQex)))) g$C$20155$sFQex (case-lambda ((g$C$20150$sFQex g$imp*$11517$sFQex g$h$11518$sFQex) (null? (case-lambda ((g$T$20151$sFQex) (if g$T$20151$sFQex (hashtable-entries g$C$20150$sFQex g$h$11518$sFQex) (car (case-lambda ((g$V$20152$sFQex) (g$add-imports!$11515$sFQex (case-lambda (g$IGNORE$20153$sFQex (cdr (case-lambda ((g$V$20154$sFQex) (g$f$11516$sFQex g$C$20150$sFQex g$V$20154$sFQex g$h$11518$sFQex))) g$imp*$11517$sFQex))) g$V$20152$sFQex g$h$11518$sFQex))) g$imp*$11517$sFQex)))) g$imp*$11517$sFQex)))))) (case-lambda ((g$V$20158$sFQex) (g$V$20158$sFQex g$C$20156$sFQex g$imp*$11504$sFQex g$V$20157$sFQex))) uninitialized))))))))))))))))) g$C$20159$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$parse-import-spec*$9010$sFQex))) (g$make-top-rib$9011$sFQex g$make-top-rib$12530$sFQex ((case-lambda ((g$C$20971$sFQex) (g$C$20971$sFQex (case-lambda ((g$C$20168$sFQex g$names$11766$sFQex g$labels$11767$sFQex) (g$make-cache-rib$8643$sFQex (case-lambda ((g$V$20169$sFQex) ((case-lambda ((g$C$20166$sFQex g$rib$11768$sFQex) (g$vector-for-each$6229$sFQex (case-lambda (g$IGNORE$20167$sFQex (g$C$20166$sFQex g$rib$11768$sFQex))) (case-lambda ((g$C$20160$sFQex g$name$11769$sFQex g$label$11770$sFQex) ((case-lambda ((g$J$20163$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$V$20164$sFQex) (not (case-lambda ((g$T$20165$sFQex) (if g$T$20165$sFQex (g$error$6457$sFQex g$J$20163$sFQex 'make-top-rib '"BUG: not a symbol" g$name$11769$sFQex) (void g$J$20163$sFQex)))) g$V$20164$sFQex))) g$name$11769$sFQex))) (case-lambda (g$IGNORE$20161$sFQex (g$make-stx$8655$sFQex (case-lambda ((g$V$20162$sFQex) (g$extend-rib/nc!$8646$sFQex g$C$20160$sFQex g$rib$11768$sFQex g$V$20162$sFQex g$label$11770$sFQex))) g$name$11769$sFQex g$top-mark*$8619$sFQex '() '())))))) g$names$11766$sFQex g$labels$11767$sFQex))) g$C$20168$sFQex g$V$20169$sFQex))))))))) (library-letrec*-identity 'g$make-top-rib$9011$sFQex))) (g$make-collector$9012$sFQex g$make-collector$12531$sFQex ((case-lambda ((g$C$20972$sFQex) (g$C$20972$sFQex (case-lambda ((g$C$20173$sFQex) ((case-lambda ((g$C$20172$sFQex g$ls$11771$sFQex) (g$C$20172$sFQex (case-lambda ((g$C$20170$sFQex) (g$C$20170$sFQex g$ls$11771$sFQex)) ((g$C$20170$sFQex g$x$11772$sFQex) (g$set-cons$8616$sFQex (case-lambda ((g$V$20171$sFQex) (begin (set! g$ls$11771$sFQex g$V$20171$sFQex) (g$C$20170$sFQex (cps-void))))) g$x$11772$sFQex g$ls$11771$sFQex)))))) g$C$20173$sFQex '())))))) (library-letrec*-identity 'g$make-collector$9012$sFQex))) (g$inv-collector$9013$sFQex g$inv-collector$12532$sFQex ((case-lambda ((g$C$20973$sFQex) (g$make-parameter$7979$sFQex g$C$20973$sFQex (case-lambda ((g$C$20174$sFQex . g$args$11773$sFQex) (g$assertion-violation$6456$sFQex g$C$20174$sFQex 'inv-collector '"BUG: not initialized"))) (case-lambda ((g$C$20175$sFQex g$x$11774$sFQex) ((case-lambda ((g$J$20177$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$V$20178$sFQex) (not (case-lambda ((g$T$20179$sFQex) (if g$T$20179$sFQex (g$assertion-violation$6456$sFQex g$J$20177$sFQex 'inv-collector '"BUG: not a procedure" g$x$11774$sFQex) (void g$J$20177$sFQex)))) g$V$20178$sFQex))) g$x$11774$sFQex))) (case-lambda (g$IGNORE$20176$sFQex (g$C$20175$sFQex g$x$11774$sFQex))))))))) (library-letrec*-identity 'g$inv-collector$9013$sFQex))) (g$vis-collector$9014$sFQex g$vis-collector$12533$sFQex ((case-lambda ((g$C$20974$sFQex) (g$make-parameter$7979$sFQex g$C$20974$sFQex (case-lambda ((g$C$20180$sFQex . g$args$11775$sFQex) (g$assertion-violation$6456$sFQex g$C$20180$sFQex 'vis-collector '"BUG: not initialized"))) (case-lambda ((g$C$20181$sFQex g$x$11776$sFQex) ((case-lambda ((g$J$20183$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$V$20184$sFQex) (not (case-lambda ((g$T$20185$sFQex) (if g$T$20185$sFQex (g$assertion-violation$6456$sFQex g$J$20183$sFQex 'vis-collector '"BUG: not a procedure" g$x$11776$sFQex) (void g$J$20183$sFQex)))) g$V$20184$sFQex))) g$x$11776$sFQex))) (case-lambda (g$IGNORE$20182$sFQex (g$C$20181$sFQex g$x$11776$sFQex))))))))) (library-letrec*-identity 'g$vis-collector$9014$sFQex))) (g$imp-collector$9015$sFQex g$imp-collector$12534$sFQex ((case-lambda ((g$C$20975$sFQex) (g$make-parameter$7979$sFQex g$C$20975$sFQex (case-lambda ((g$C$20186$sFQex . g$args$11777$sFQex) (g$assertion-violation$6456$sFQex g$C$20186$sFQex 'imp-collector '"BUG: not initialized"))) (case-lambda ((g$C$20187$sFQex g$x$11778$sFQex) ((case-lambda ((g$J$20189$sFQex) (g$procedure?$6170$sFQex (case-lambda ((g$V$20190$sFQex) (not (case-lambda ((g$T$20191$sFQex) (if g$T$20191$sFQex (g$assertion-violation$6456$sFQex g$J$20189$sFQex 'imp-collector '"BUG: not a procedure" g$x$11778$sFQex) (void g$J$20189$sFQex)))) g$V$20190$sFQex))) g$x$11778$sFQex))) (case-lambda (g$IGNORE$20188$sFQex (g$C$20187$sFQex g$x$11778$sFQex))))))))) (library-letrec*-identity 'g$imp-collector$9015$sFQex))) (g$chi-library-internal$9016$sFQex g$chi-library-internal$12535$sFQex ((case-lambda ((g$C$20976$sFQex) (g$C$20976$sFQex (case-lambda ((g$C$20200$sFQex g$e*$11779$sFQex g$rib$11780$sFQex g$mix?$11781$sFQex) (call-with-values g$C$20200$sFQex (case-lambda ((g$C$20192$sFQex) (g$chi-body*$9005$sFQex g$C$20192$sFQex g$e*$11779$sFQex '() '() '() '() '() '() '() g$rib$11780$sFQex g$mix?$11781$sFQex '#t))) (case-lambda ((g$C$20199$sFQex g$e*$11790$sFQex g$r$11791$sFQex g$mr$11792$sFQex g$lex*$11793$sFQex g$rhs*$11794$sFQex g$mod**$11795$sFQex g$_kwd*$11796$sFQex g$exp*$11797$sFQex) ((case-lambda ((g$C$20193$sFQex g$exp*$11798$sFQex g$_kwd*$11799$sFQex g$mod**$11800$sFQex g$rhs*$11801$sFQex g$lex*$11802$sFQex g$mr$11803$sFQex g$r$11804$sFQex g$e*$11805$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$20194$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$20195$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$20196$sFQex) (apply (case-lambda ((g$V$20197$sFQex) (append (case-lambda ((g$V$20198$sFQex) (values g$C$20193$sFQex g$V$20198$sFQex g$r$11804$sFQex g$mr$11803$sFQex g$V$20195$sFQex g$V$20194$sFQex g$exp*$11798$sFQex))) g$V$20197$sFQex g$e*$11805$sFQex))) append g$V$20196$sFQex))) g$mod**$11800$sFQex))) g$lex*$11802$sFQex))) g$rhs*$11801$sFQex))) g$C$20199$sFQex g$exp*$11797$sFQex g$_kwd*$11796$sFQex g$mod**$11795$sFQex g$rhs*$11794$sFQex g$lex*$11793$sFQex g$mr$11792$sFQex g$r$11791$sFQex g$e*$11790$sFQex))))))))) (library-letrec*-identity 'g$chi-library-internal$9016$sFQex))) (g$chi-interaction-expr$9017$sFQex g$chi-interaction-expr$12536$sFQex ((case-lambda ((g$C$20977$sFQex) (g$C$20977$sFQex (case-lambda ((g$C$20218$sFQex g$e$11806$sFQex g$rib$11807$sFQex g$r$11808$sFQex) (call-with-values g$C$20218$sFQex (case-lambda ((g$C$20201$sFQex) (list (case-lambda ((g$V$20202$sFQex) (g$chi-body*$9005$sFQex g$C$20201$sFQex g$V$20202$sFQex g$r$11808$sFQex g$r$11808$sFQex '() '() '() '() '() g$rib$11807$sFQex '#t '#f))) g$e$11806$sFQex))) (case-lambda ((g$C$20217$sFQex g$e*$11817$sFQex g$r$11818$sFQex g$mr$11819$sFQex g$lex*$11820$sFQex g$rhs*$11821$sFQex g$mod**$11822$sFQex g$_kwd*$11823$sFQex g$_exp*$11824$sFQex) ((case-lambda ((g$C$20210$sFQex g$_exp*$11825$sFQex g$_kwd*$11826$sFQex g$mod**$11827$sFQex g$rhs*$11828$sFQex g$lex*$11829$sFQex g$mr$11830$sFQex g$r$11831$sFQex g$e*$11832$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$20211$sFQex) (apply (case-lambda ((g$V$20212$sFQex) (append (case-lambda ((g$V$20213$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$20214$sFQex) (g$reverse$6175$sFQex (case-lambda ((g$V$20215$sFQex) (g$expand-interaction-rhs*/init*$8986$sFQex (case-lambda ((g$V$20216$sFQex) ((case-lambda ((g$C$20204$sFQex g$e*$11833$sFQex) ((case-lambda ((g$J$20206$sFQex) (null? (case-lambda ((g$T$20207$sFQex) (if g$T$20207$sFQex (g$build-void$8612$sFQex g$J$20206$sFQex) (cdr (case-lambda ((g$V$20208$sFQex) (null? (case-lambda ((g$T$20209$sFQex) (if g$T$20209$sFQex (car g$J$20206$sFQex g$e*$11833$sFQex) (g$build-sequence$8611$sFQex g$J$20206$sFQex '#f g$e*$11833$sFQex)))) g$V$20208$sFQex))) g$e*$11833$sFQex)))) g$e*$11833$sFQex))) (case-lambda ((g$V$20205$sFQex) ((case-lambda ((g$C$20203$sFQex g$e$11834$sFQex) (values g$C$20203$sFQex g$e$11834$sFQex g$r$11831$sFQex))) g$C$20204$sFQex g$V$20205$sFQex)))))) g$C$20210$sFQex g$V$20216$sFQex))) g$V$20215$sFQex g$V$20214$sFQex g$V$20213$sFQex g$r$11831$sFQex g$mr$11830$sFQex))) g$lex*$11829$sFQex))) g$rhs*$11828$sFQex))) g$V$20212$sFQex g$e*$11832$sFQex))) append g$V$20211$sFQex))) g$mod**$11827$sFQex))) g$C$20217$sFQex g$_exp*$11824$sFQex g$_kwd*$11823$sFQex g$mod**$11822$sFQex g$rhs*$11821$sFQex g$lex*$11820$sFQex g$mr$11819$sFQex g$r$11818$sFQex g$e*$11817$sFQex))))))))) (library-letrec*-identity 'g$chi-interaction-expr$9017$sFQex))) (g$library-body-expander$9018$sFQex g$library-body-expander$12537$sFQex ((case-lambda ((g$C$20978$sFQex) (g$C$20978$sFQex (case-lambda ((g$C$20301$sFQex g$name$11835$sFQex g$main-exp*$11836$sFQex g$imp*$11837$sFQex g$b*$11838$sFQex g$mix?$11839$sFQex) ((case-lambda ((g$C$20299$sFQex g$itc$11840$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$20300$sFQex) (begin (set! g$itc$11840$sFQex g$V$20300$sFQex) ((case-lambda ((g$C$20298$sFQex g$imp-collector$11845$sFQex g$top-level-context$11846$sFQex g$imp-collector$11847$sFQex g$top-level-context$11848$sFQex) ((case-lambda ((g$C$20289$sFQex g$swap$11849$sFQex) (dynamic-wind g$C$20289$sFQex g$swap$11849$sFQex (case-lambda ((g$C$20288$sFQex) (call-with-values g$C$20288$sFQex (case-lambda ((g$C$20219$sFQex) (g$parse-import-spec*$9010$sFQex g$C$20219$sFQex g$imp*$11837$sFQex))) (case-lambda ((g$C$20287$sFQex g$subst-names$11852$sFQex g$subst-labels$11853$sFQex) ((case-lambda ((g$C$20285$sFQex g$subst-labels$11854$sFQex g$subst-names$11855$sFQex) (g$make-top-rib$9011$sFQex (case-lambda ((g$V$20286$sFQex) ((case-lambda ((g$C$20284$sFQex g$rib$11856$sFQex) ((case-lambda ((g$C$20279$sFQex g$wrap$11857$sFQex) (begin (set! g$wrap$11857$sFQex (case-lambda ((g$C$20220$sFQex g$x$11919$sFQex) (list (case-lambda ((g$V$20221$sFQex) (g$make-stx$8655$sFQex g$C$20220$sFQex g$x$11919$sFQex g$top-mark*$8619$sFQex g$V$20221$sFQex '()))) g$rib$11856$sFQex)))) (g$make-collector$9012$sFQex (case-lambda ((g$V$20280$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$20281$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20282$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20283$sFQex) ((case-lambda ((g$C$20278$sFQex g$b*$11858$sFQex g$main-exp*$11859$sFQex g$rtc$11860$sFQex g$vtc$11861$sFQex) ((case-lambda ((g$C$20277$sFQex g$inv-collector$11866$sFQex g$vis-collector$11867$sFQex g$inv-collector$11868$sFQex g$vis-collector$11869$sFQex) ((case-lambda ((g$C$20268$sFQex g$swap$11870$sFQex) (dynamic-wind g$C$20268$sFQex g$swap$11870$sFQex (case-lambda ((g$C$20267$sFQex) (call-with-values g$C$20267$sFQex (case-lambda ((g$C$20222$sFQex) (g$chi-library-internal$9016$sFQex g$C$20222$sFQex g$b*$11858$sFQex g$rib$11856$sFQex g$mix?$11839$sFQex))) (case-lambda ((g$C$20266$sFQex g$init*$11877$sFQex g$r$11878$sFQex g$mr$11879$sFQex g$lex*$11880$sFQex g$rhs*$11881$sFQex g$internal-exp*$11882$sFQex) ((case-lambda ((g$C$20265$sFQex g$internal-exp*$11883$sFQex g$rhs*$11884$sFQex g$lex*$11885$sFQex g$mr$11886$sFQex g$r$11887$sFQex g$init*$11888$sFQex) (call-with-values g$C$20265$sFQex (case-lambda ((g$C$20223$sFQex) (append (case-lambda ((g$V$20224$sFQex) (g$parse-exports$9007$sFQex g$C$20223$sFQex g$V$20224$sFQex))) g$main-exp*$11859$sFQex g$internal-exp*$11883$sFQex))) (case-lambda ((g$C$20264$sFQex g$exp-name*$11891$sFQex g$exp-id*$11892$sFQex) ((case-lambda ((g$C$20261$sFQex g$exp-id*$11893$sFQex g$exp-name*$11894$sFQex) (g$seal-rib!$8648$sFQex (case-lambda (g$IGNORE$20262$sFQex (g$chi-expr*$8977$sFQex (case-lambda ((g$V$20263$sFQex) ((case-lambda ((g$C$20259$sFQex g$init*$11895$sFQex) (g$chi-rhs*$8987$sFQex (case-lambda ((g$V$20260$sFQex) ((case-lambda ((g$C$20255$sFQex g$rhs*$11896$sFQex) (g$unseal-rib!$8649$sFQex (case-lambda (g$IGNORE$20256$sFQex (g$make-export-subst$9061$sFQex (case-lambda ((g$V$20257$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20258$sFQex) ((case-lambda ((g$C$20254$sFQex g$loc*$11897$sFQex g$export-subst$11898$sFQex) ((case-lambda ((g$C$20253$sFQex g$errstr$11899$sFQex) (begin (set! g$errstr$11899$sFQex '"attempt to export mutated variable") (call-with-values g$C$20253$sFQex (case-lambda ((g$C$20225$sFQex) (g$make-export-env/macros$9062$sFQex g$C$20225$sFQex g$lex*$11885$sFQex g$loc*$11897$sFQex g$r$11887$sFQex))) (case-lambda ((g$C$20252$sFQex g$export-env$11903$sFQex g$global*$11904$sFQex g$macro*$11905$sFQex) ((case-lambda ((g$C$20244$sFQex g$macro*$11906$sFQex g$global*$11907$sFQex g$export-env$11908$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$20245$sFQex (g$map$5680$sFQex (case-lambda ((g$V$20246$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20247$sFQex) ((case-lambda ((g$J$20250$sFQex) (null? (case-lambda ((g$T$20251$sFQex) (if g$T$20251$sFQex (g$build-void$8612$sFQex g$J$20250$sFQex) (g$build-sequence$8611$sFQex g$J$20250$sFQex '#f g$init*$11895$sFQex)))) g$init*$11895$sFQex))) (case-lambda ((g$V$20248$sFQex) (g$build-library-letrec*$8615$sFQex (case-lambda ((g$V$20249$sFQex) ((case-lambda ((g$C$20237$sFQex g$invoke-body$11915$sFQex g$invoke-definitions$11916$sFQex) (list (case-lambda ((g$V$20238$sFQex) (append (case-lambda ((g$V$20239$sFQex) (g$build-sequence$8611$sFQex (case-lambda ((g$V$20240$sFQex) (g$vtc$11861$sFQex (case-lambda ((g$V$20241$sFQex) (g$rtc$11860$sFQex (case-lambda ((g$V$20242$sFQex) (g$itc$11840$sFQex (case-lambda ((g$V$20243$sFQex) (values g$C$20237$sFQex g$V$20243$sFQex g$V$20242$sFQex g$V$20241$sFQex g$V$20240$sFQex g$macro*$11906$sFQex g$export-subst$11898$sFQex g$export-env$11908$sFQex)))))))))))) '#f g$V$20239$sFQex))) g$invoke-definitions$11916$sFQex g$V$20238$sFQex))) g$invoke-body$11915$sFQex))) g$C$20244$sFQex g$V$20249$sFQex g$V$20247$sFQex))) '#f g$name$11835$sFQex g$lex*$11885$sFQex g$loc*$11897$sFQex g$rhs*$11896$sFQex g$V$20248$sFQex)))))) g$build-global-define$8607$sFQex g$V$20246$sFQex))) cdr g$global*$11907$sFQex))) (case-lambda ((g$C$20234$sFQex g$s$11909$sFQex) (cdr (case-lambda ((g$V$20235$sFQex) (car (case-lambda ((g$V$20236$sFQex) ((case-lambda ((g$C$20232$sFQex g$name$11910$sFQex g$label$11911$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$20233$sFQex) ((case-lambda ((g$C$20230$sFQex g$p$11912$sFQex) (if g$p$11912$sFQex (cdr (case-lambda ((g$V$20231$sFQex) ((case-lambda ((g$C$20228$sFQex g$b$11913$sFQex) (car (case-lambda ((g$V$20229$sFQex) ((case-lambda ((g$C$20226$sFQex g$type$11914$sFQex) (eq? (case-lambda ((g$T$20227$sFQex) (if g$T$20227$sFQex (g$syntax-violation$9073$sFQex g$C$20226$sFQex 'export g$errstr$11899$sFQex g$name$11910$sFQex) (void g$C$20226$sFQex)))) g$type$11914$sFQex 'mutable))) g$C$20228$sFQex g$V$20229$sFQex))) g$b$11913$sFQex))) g$C$20230$sFQex g$V$20231$sFQex))) g$p$11912$sFQex) (void g$C$20230$sFQex)))) g$C$20232$sFQex g$V$20233$sFQex))) g$label$11911$sFQex g$export-env$11908$sFQex))) g$C$20234$sFQex g$V$20236$sFQex g$V$20235$sFQex))) g$s$11909$sFQex))) g$s$11909$sFQex))) g$export-subst$11898$sFQex))) g$C$20252$sFQex g$macro*$11905$sFQex g$global*$11904$sFQex g$export-env$11903$sFQex))))))) g$C$20254$sFQex uninitialized))) g$C$20255$sFQex g$V$20258$sFQex g$V$20257$sFQex))) g$gen-global$8622$sFQex g$lex*$11885$sFQex))) g$exp-name*$11894$sFQex g$exp-id*$11893$sFQex))) g$rib$11856$sFQex))) g$C$20259$sFQex g$V$20260$sFQex))) g$rhs*$11884$sFQex g$r$11887$sFQex g$mr$11886$sFQex))) g$C$20261$sFQex g$V$20263$sFQex))) g$init*$11888$sFQex g$r$11887$sFQex g$mr$11886$sFQex))) g$rib$11856$sFQex))) g$C$20264$sFQex g$exp-id*$11892$sFQex g$exp-name*$11891$sFQex)))))) g$C$20266$sFQex g$internal-exp*$11882$sFQex g$rhs*$11881$sFQex g$lex*$11880$sFQex g$mr$11879$sFQex g$r$11878$sFQex g$init*$11877$sFQex)))))) g$swap$11870$sFQex))) g$C$20277$sFQex (case-lambda ((g$C$20273$sFQex) (g$inv-collector$11866$sFQex (case-lambda ((g$V$20274$sFQex) ((case-lambda ((g$C$20269$sFQex g$t$11917$sFQex) (g$inv-collector$11866$sFQex (case-lambda (g$IGNORE$20270$sFQex (begin (set! g$inv-collector$11868$sFQex g$t$11917$sFQex) (g$C$20269$sFQex (cps-void))))) g$inv-collector$11868$sFQex))) (case-lambda (g$IGNORE$20275$sFQex (g$vis-collector$11867$sFQex (case-lambda ((g$V$20276$sFQex) ((case-lambda ((g$C$20271$sFQex g$t$11918$sFQex) (g$vis-collector$11867$sFQex (case-lambda (g$IGNORE$20272$sFQex (begin (set! g$vis-collector$11869$sFQex g$t$11918$sFQex) (g$C$20271$sFQex (cps-void))))) g$vis-collector$11869$sFQex))) g$C$20273$sFQex g$V$20276$sFQex)))))) g$V$20274$sFQex))))))))) g$C$20278$sFQex g$inv-collector$9013$sFQex g$vis-collector$9014$sFQex g$rtc$11860$sFQex g$vtc$11861$sFQex))) g$C$20279$sFQex g$V$20283$sFQex g$V$20282$sFQex g$V$20281$sFQex g$V$20280$sFQex))) g$wrap$11857$sFQex g$b*$11838$sFQex))) g$wrap$11857$sFQex g$main-exp*$11836$sFQex)))))))))) g$C$20284$sFQex uninitialized))) g$C$20285$sFQex g$V$20286$sFQex))) g$subst-names$11855$sFQex g$subst-labels$11854$sFQex))) g$C$20287$sFQex g$subst-labels$11853$sFQex g$subst-names$11852$sFQex)))))) g$swap$11849$sFQex))) g$C$20298$sFQex (case-lambda ((g$C$20294$sFQex) (g$imp-collector$11845$sFQex (case-lambda ((g$V$20295$sFQex) ((case-lambda ((g$C$20290$sFQex g$t$11920$sFQex) (g$imp-collector$11845$sFQex (case-lambda (g$IGNORE$20291$sFQex (begin (set! g$imp-collector$11847$sFQex g$t$11920$sFQex) (g$C$20290$sFQex (cps-void))))) g$imp-collector$11847$sFQex))) (case-lambda (g$IGNORE$20296$sFQex (g$top-level-context$11846$sFQex (case-lambda ((g$V$20297$sFQex) ((case-lambda ((g$C$20292$sFQex g$t$11921$sFQex) (g$top-level-context$11846$sFQex (case-lambda (g$IGNORE$20293$sFQex (begin (set! g$top-level-context$11848$sFQex g$t$11921$sFQex) (g$C$20292$sFQex (cps-void))))) g$top-level-context$11848$sFQex))) g$C$20294$sFQex g$V$20297$sFQex)))))) g$V$20295$sFQex))))))))) g$C$20299$sFQex g$imp-collector$9015$sFQex g$top-level-context$9081$sFQex g$itc$11840$sFQex '#f))))))) g$C$20301$sFQex uninitialized)))))) (library-letrec*-identity 'g$library-body-expander$9018$sFQex))) (g$core-library-expander$9019$sFQex g$core-library-expander$12538$sFQex ((case-lambda ((g$C$20979$sFQex) (g$C$20979$sFQex (case-lambda ((g$C$20312$sFQex g$e$11922$sFQex g$verify-name$11923$sFQex) (call-with-values g$C$20312$sFQex (case-lambda ((g$C$20302$sFQex) (g$parse-library$9009$sFQex g$C$20302$sFQex g$e$11922$sFQex))) (case-lambda ((g$C$20311$sFQex g$name*$11928$sFQex g$exp*$11929$sFQex g$imp*$11930$sFQex g$b*$11931$sFQex) ((case-lambda ((g$C$20310$sFQex g$b*$11932$sFQex g$imp*$11933$sFQex g$exp*$11934$sFQex g$name*$11935$sFQex) (call-with-values g$C$20310$sFQex (case-lambda ((g$C$20303$sFQex) (g$parse-library-name$9008$sFQex g$C$20303$sFQex g$name*$11935$sFQex))) (case-lambda ((g$C$20309$sFQex g$name$11938$sFQex g$ver$11939$sFQex) ((case-lambda ((g$C$20307$sFQex g$ver$11940$sFQex g$name$11941$sFQex) (g$verify-name$11923$sFQex (case-lambda (g$IGNORE$20308$sFQex (call-with-values g$C$20307$sFQex (case-lambda ((g$C$20304$sFQex) (g$library-body-expander$9018$sFQex g$C$20304$sFQex g$name$11941$sFQex g$exp*$11934$sFQex g$imp*$11933$sFQex g$b*$11932$sFQex '#f))) (case-lambda ((g$C$20306$sFQex g$imp*$11949$sFQex g$invoke-req*$11950$sFQex g$visit-req*$11951$sFQex g$invoke-code$11952$sFQex g$visit-code$11953$sFQex g$export-subst$11954$sFQex g$export-env$11955$sFQex) ((case-lambda ((g$C$20305$sFQex g$export-env$11956$sFQex g$export-subst$11957$sFQex g$visit-code$11958$sFQex g$invoke-code$11959$sFQex g$visit-req*$11960$sFQex g$invoke-req*$11961$sFQex g$imp*$11962$sFQex) (values g$C$20305$sFQex g$name$11941$sFQex g$ver$11940$sFQex g$imp*$11962$sFQex g$invoke-req*$11961$sFQex g$visit-req*$11960$sFQex g$invoke-code$11959$sFQex g$visit-code$11958$sFQex g$export-subst$11957$sFQex g$export-env$11956$sFQex))) g$C$20306$sFQex g$export-env$11955$sFQex g$export-subst$11954$sFQex g$visit-code$11953$sFQex g$invoke-code$11952$sFQex g$visit-req*$11951$sFQex g$invoke-req*$11950$sFQex g$imp*$11949$sFQex)))))) g$name$11941$sFQex))) g$C$20309$sFQex g$ver$11939$sFQex g$name$11938$sFQex)))))) g$C$20311$sFQex g$b*$11931$sFQex g$imp*$11930$sFQex g$exp*$11929$sFQex g$name*$11928$sFQex))))))))) (library-letrec*-identity 'g$core-library-expander$9019$sFQex))) (g$parse-top-level-program$9020$sFQex g$parse-top-level-program$12539$sFQex ((case-lambda ((g$C$20980$sFQex) (g$C$20980$sFQex (case-lambda ((g$C$20334$sFQex g$e*$11963$sFQex) ((case-lambda ((g$C$20332$sFQex g$t$11964$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20333$sFQex) ((case-lambda ((g$C$20329$sFQex g$ls/false$11965$sFQex) ((case-lambda ((g$J$20331$sFQex) (if g$ls/false$11965$sFQex (apply g$J$20331$sFQex (case-lambda ((g$C$20313$sFQex g$import$11966$sFQex g$imp*$11967$sFQex g$b*$11968$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20314$sFQex) (eq? g$C$20313$sFQex g$V$20314$sFQex 'import))) g$import$11966$sFQex))) g$ls/false$11965$sFQex) (g$J$20331$sFQex '#f)))) (case-lambda ((g$T$20330$sFQex) (if g$T$20330$sFQex (apply g$C$20329$sFQex (case-lambda ((g$C$20315$sFQex g$import$11969$sFQex g$imp*$11970$sFQex g$b*$11971$sFQex) (values g$C$20315$sFQex g$imp*$11970$sFQex g$b*$11971$sFQex))) g$ls/false$11965$sFQex) ((case-lambda ((g$C$20327$sFQex g$t$11972$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20328$sFQex) ((case-lambda ((g$C$20324$sFQex g$ls/false$11973$sFQex) ((case-lambda ((g$J$20326$sFQex) (if g$ls/false$11973$sFQex (apply g$J$20326$sFQex (case-lambda ((g$C$20316$sFQex g$import$11974$sFQex g$x$11975$sFQex g$y$11976$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20317$sFQex) (eq? g$C$20316$sFQex g$V$20317$sFQex 'import))) g$import$11974$sFQex))) g$ls/false$11973$sFQex) (g$J$20326$sFQex '#f)))) (case-lambda ((g$T$20325$sFQex) (if g$T$20325$sFQex (apply g$C$20324$sFQex (case-lambda ((g$C$20318$sFQex g$import$11977$sFQex g$x$11978$sFQex g$y$11979$sFQex) (g$syntax-car$8679$sFQex (case-lambda ((g$V$20319$sFQex) (g$syntax-violation$9073$sFQex g$C$20318$sFQex 'expander '"invalid syntax of top-level program" g$V$20319$sFQex))) g$e*$11963$sFQex))) g$ls/false$11973$sFQex) ((case-lambda ((g$C$20322$sFQex g$t$11980$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20323$sFQex) ((case-lambda ((g$C$20321$sFQex g$ls/false$11981$sFQex) (if g$ls/false$11981$sFQex (apply g$C$20321$sFQex (case-lambda ((g$C$20320$sFQex) (g$assertion-violation$6456$sFQex g$C$20320$sFQex 'expander '"top-level program is missing an (import ---) clause"))) g$ls/false$11981$sFQex) (g$syntax-violation$9073$sFQex g$C$20321$sFQex '#f '"invalid syntax" g$t$11980$sFQex)))) g$C$20322$sFQex g$V$20323$sFQex))) g$t$11980$sFQex '_))) g$C$20324$sFQex g$t$11972$sFQex))))))) g$C$20327$sFQex g$V$20328$sFQex))) g$t$11972$sFQex '((any . any) . any)))) g$C$20329$sFQex g$t$11964$sFQex))))))) g$C$20332$sFQex g$V$20333$sFQex))) g$t$11964$sFQex '((any . each-any) . each-any)))) g$C$20334$sFQex g$e*$11963$sFQex)))))) (library-letrec*-identity 'g$parse-top-level-program$9020$sFQex))) (g$top-level-expander$9021$sFQex g$top-level-expander$12540$sFQex ((case-lambda ((g$C$20981$sFQex) (g$C$20981$sFQex (case-lambda ((g$C$20341$sFQex g$e*$11982$sFQex) (call-with-values g$C$20341$sFQex (case-lambda ((g$C$20335$sFQex) (g$parse-top-level-program$9020$sFQex g$C$20335$sFQex g$e*$11982$sFQex))) (case-lambda ((g$C$20340$sFQex g$imp*$11985$sFQex g$b*$11986$sFQex) ((case-lambda ((g$C$20339$sFQex g$b*$11987$sFQex g$imp*$11988$sFQex) (call-with-values g$C$20339$sFQex (case-lambda ((g$C$20336$sFQex) (g$library-body-expander$9018$sFQex g$C$20336$sFQex '() '() g$imp*$11988$sFQex g$b*$11987$sFQex '#t))) (case-lambda ((g$C$20338$sFQex g$imp*$11996$sFQex g$invoke-req*$11997$sFQex g$visit-req*$11998$sFQex g$invoke-code$11999$sFQex g$visit-code$12000$sFQex g$export-subst$12001$sFQex g$export-env$12002$sFQex) ((case-lambda ((g$C$20337$sFQex g$export-env$12003$sFQex g$export-subst$12004$sFQex g$visit-code$12005$sFQex g$invoke-code$12006$sFQex g$visit-req*$12007$sFQex g$invoke-req*$12008$sFQex g$imp*$12009$sFQex) (values g$C$20337$sFQex g$invoke-req*$12008$sFQex g$invoke-code$12006$sFQex))) g$C$20338$sFQex g$export-env$12002$sFQex g$export-subst$12001$sFQex g$visit-code$12000$sFQex g$invoke-code$11999$sFQex g$visit-req*$11998$sFQex g$invoke-req*$11997$sFQex g$imp*$11996$sFQex)))))) g$C$20340$sFQex g$b*$11986$sFQex g$imp*$11985$sFQex))))))))) (library-letrec*-identity 'g$top-level-expander$9021$sFQex))) (g$10158$9022$sFQex g$10158$12541$sFQex ((case-lambda ((g$C$20982$sFQex) (make-record-type-descriptor g$C$20982$sFQex 'env '#f 'g$10161$sFQex '#t '#t '#((mutable names) (mutable labels) (mutable itc))))) (library-letrec*-identity 'g$10158$9022$sFQex))) (g$10160$9023$sFQex g$10160$12542$sFQex ((case-lambda ((g$C$20983$sFQex) (g$C$20983$sFQex '#f))) (library-letrec*-identity 'g$10160$9023$sFQex))) (g$10159$9024$sFQex g$10159$12543$sFQex ((case-lambda ((g$C$20984$sFQex) (make-record-constructor-descriptor g$C$20984$sFQex g$10158$9022$sFQex '#f g$10160$9023$sFQex))) (library-letrec*-identity 'g$10159$9024$sFQex))) (g$env?$9025$sFQex g$env?$12544$sFQex ((case-lambda ((g$C$20985$sFQex) (record-predicate g$C$20985$sFQex g$10158$9022$sFQex))) (library-letrec*-identity 'g$env?$9025$sFQex))) (g$make-env$9026$sFQex g$make-env$12545$sFQex ((case-lambda ((g$C$20986$sFQex) (record-constructor g$C$20986$sFQex g$10159$9024$sFQex))) (library-letrec*-identity 'g$make-env$9026$sFQex))) (g$env-names$9027$sFQex g$env-names$12546$sFQex ((case-lambda ((g$C$20987$sFQex) (record-accessor g$C$20987$sFQex g$10158$9022$sFQex '0))) (library-letrec*-identity 'g$env-names$9027$sFQex))) (g$env-labels$9028$sFQex g$env-labels$12547$sFQex ((case-lambda ((g$C$20988$sFQex) (record-accessor g$C$20988$sFQex g$10158$9022$sFQex '1))) (library-letrec*-identity 'g$env-labels$9028$sFQex))) (g$env-itc$9029$sFQex g$env-itc$12548$sFQex ((case-lambda ((g$C$20989$sFQex) (record-accessor g$C$20989$sFQex g$10158$9022$sFQex '2))) (library-letrec*-identity 'g$env-itc$9029$sFQex))) (g$set-env-names!$9030$sFQex g$set-env-names!$12549$sFQex ((case-lambda ((g$C$20990$sFQex) (record-mutator g$C$20990$sFQex g$10158$9022$sFQex '0))) (library-letrec*-identity 'g$set-env-names!$9030$sFQex))) (g$set-env-labels!$9031$sFQex g$set-env-labels!$12550$sFQex ((case-lambda ((g$C$20991$sFQex) (record-mutator g$C$20991$sFQex g$10158$9022$sFQex '1))) (library-letrec*-identity 'g$set-env-labels!$9031$sFQex))) (g$set-env-itc!$9032$sFQex g$set-env-itc!$12551$sFQex ((case-lambda ((g$C$20992$sFQex) (record-mutator g$C$20992$sFQex g$10158$9022$sFQex '2))) (library-letrec*-identity 'g$set-env-itc!$9032$sFQex))) (g$rp$9033$sFQex g$rp$12552$sFQex ((case-lambda ((g$C$20993$sFQex) (make-record-printer g$C$20993$sFQex 'env (case-lambda ((g$C$20342$sFQex g$x$12010$sFQex g$p$12011$sFQex g$wr$12012$sFQex) (display g$C$20342$sFQex '"#<environment>" g$p$12011$sFQex)))))) (library-letrec*-identity 'g$rp$9033$sFQex))) (g$10177$9034$sFQex g$10177$12553$sFQex ((case-lambda ((g$C$20994$sFQex) (make-record-type-descriptor g$C$20994$sFQex 'interaction-env '#f 'g$10180$sFQex '#t '#t '#((mutable rib) (mutable r) (mutable locs))))) (library-letrec*-identity 'g$10177$9034$sFQex))) (g$10179$9035$sFQex g$10179$12554$sFQex ((case-lambda ((g$C$20995$sFQex) (g$C$20995$sFQex '#f))) (library-letrec*-identity 'g$10179$9035$sFQex))) (g$10178$9036$sFQex g$10178$12555$sFQex ((case-lambda ((g$C$20996$sFQex) (make-record-constructor-descriptor g$C$20996$sFQex g$10177$9034$sFQex '#f g$10179$9035$sFQex))) (library-letrec*-identity 'g$10178$9036$sFQex))) (g$interaction-env?$9037$sFQex g$interaction-env?$12556$sFQex ((case-lambda ((g$C$20997$sFQex) (record-predicate g$C$20997$sFQex g$10177$9034$sFQex))) (library-letrec*-identity 'g$interaction-env?$9037$sFQex))) (g$make-interaction-env$9038$sFQex g$make-interaction-env$12557$sFQex ((case-lambda ((g$C$20998$sFQex) (record-constructor g$C$20998$sFQex g$10178$9036$sFQex))) (library-letrec*-identity 'g$make-interaction-env$9038$sFQex))) (g$interaction-env-rib$9039$sFQex g$interaction-env-rib$12558$sFQex ((case-lambda ((g$C$20999$sFQex) (record-accessor g$C$20999$sFQex g$10177$9034$sFQex '0))) (library-letrec*-identity 'g$interaction-env-rib$9039$sFQex))) (g$interaction-env-r$9040$sFQex g$interaction-env-r$12559$sFQex ((case-lambda ((g$C$21000$sFQex) (record-accessor g$C$21000$sFQex g$10177$9034$sFQex '1))) (library-letrec*-identity 'g$interaction-env-r$9040$sFQex))) (g$interaction-env-locs$9041$sFQex g$interaction-env-locs$12560$sFQex ((case-lambda ((g$C$21001$sFQex) (record-accessor g$C$21001$sFQex g$10177$9034$sFQex '2))) (library-letrec*-identity 'g$interaction-env-locs$9041$sFQex))) (g$set-interaction-env-rib!$9042$sFQex g$set-interaction-env-rib!$12561$sFQex ((case-lambda ((g$C$21002$sFQex) (record-mutator g$C$21002$sFQex g$10177$9034$sFQex '0))) (library-letrec*-identity 'g$set-interaction-env-rib!$9042$sFQex))) (g$set-interaction-env-r!$9043$sFQex g$set-interaction-env-r!$12562$sFQex ((case-lambda ((g$C$21003$sFQex) (record-mutator g$C$21003$sFQex g$10177$9034$sFQex '1))) (library-letrec*-identity 'g$set-interaction-env-r!$9043$sFQex))) (g$set-interaction-env-locs!$9044$sFQex g$set-interaction-env-locs!$12563$sFQex ((case-lambda ((g$C$21004$sFQex) (record-mutator g$C$21004$sFQex g$10177$9034$sFQex '2))) (library-letrec*-identity 'g$set-interaction-env-locs!$9044$sFQex))) (g$rp$9045$sFQex g$rp$12564$sFQex ((case-lambda ((g$C$21005$sFQex) (make-record-printer g$C$21005$sFQex 'interaction-env (case-lambda ((g$C$20343$sFQex g$x$12013$sFQex g$p$12014$sFQex g$wr$12015$sFQex) (display g$C$20343$sFQex '"#<environment>" g$p$12014$sFQex)))))) (library-letrec*-identity 'g$rp$9045$sFQex))) (g$interaction-environment-symbols$9046$sFQex g$interaction-environment-symbols$12565$sFQex ((case-lambda ((g$C$21006$sFQex) (g$C$21006$sFQex (case-lambda ((g$C$20344$sFQex) (g$interaction-environment$9080$sFQex (case-lambda ((g$V$20345$sFQex) (g$environment-symbols$9050$sFQex g$C$20344$sFQex g$V$20345$sFQex))))))))) (library-letrec*-identity 'g$interaction-environment-symbols$9046$sFQex))) (g$environment-bindings$9047$sFQex g$environment-bindings$12566$sFQex ((case-lambda ((g$C$21007$sFQex) (g$C$21007$sFQex (case-lambda ((g$C$20349$sFQex g$e$12016$sFQex) (g$env-labels$9028$sFQex (case-lambda ((g$V$20350$sFQex) (g$env-names$9027$sFQex (case-lambda ((g$V$20351$sFQex) (g$vector-map$6228$sFQex (case-lambda ((g$V$20352$sFQex) (vector->list g$C$20349$sFQex g$V$20352$sFQex))) (case-lambda ((g$C$20346$sFQex g$name$12017$sFQex g$label$12018$sFQex) (g$imported-label->binding$8488$sFQex (case-lambda ((g$V$20347$sFQex) (cons (case-lambda ((g$V$20348$sFQex) (g$parse-binding$9048$sFQex g$C$20346$sFQex g$V$20348$sFQex))) g$name$12017$sFQex g$V$20347$sFQex))) g$label$12018$sFQex))) g$V$20351$sFQex g$V$20350$sFQex))) g$e$12016$sFQex))) g$e$12016$sFQex)))))) (library-letrec*-identity 'g$environment-bindings$9047$sFQex))) (g$parse-binding$9048$sFQex g$parse-binding$12567$sFQex ((case-lambda ((g$C$21008$sFQex) (g$C$21008$sFQex (case-lambda ((g$C$20360$sFQex g$b$12019$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$20361$sFQex) ((case-lambda ((g$C$20353$sFQex g$t$12020$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$20354$sFQex) (if g$T$20354$sFQex (g$C$20353$sFQex 'procedure) (g$memv$5673$sFQex (case-lambda ((g$T$20355$sFQex) (if g$T$20355$sFQex (g$C$20353$sFQex 'syntax) (g$memv$5673$sFQex (case-lambda ((g$T$20356$sFQex) (if g$T$20356$sFQex (g$C$20353$sFQex 'record) (g$cadr$6177$sFQex (case-lambda ((g$V$20357$sFQex) (car (case-lambda ((g$V$20358$sFQex) (eq? (case-lambda ((g$T$20359$sFQex) (if g$T$20359$sFQex (g$C$20353$sFQex 'syntax) (g$C$20353$sFQex 'unknown)))) g$V$20358$sFQex g$V$20357$sFQex))) g$b$12019$sFQex))) g$b$12019$sFQex)))) g$t$12020$sFQex '($core-rtd))))) g$t$12020$sFQex '(core-macro macro global-macro))))) g$t$12020$sFQex '(core-prim global)))) (case-lambda ((g$V$20362$sFQex) (car (case-lambda ((g$V$20363$sFQex) (cons g$C$20360$sFQex g$V$20363$sFQex g$V$20362$sFQex))) g$b$12019$sFQex))) g$V$20361$sFQex))) g$b$12019$sFQex)))))) (library-letrec*-identity 'g$parse-binding$9048$sFQex))) (g$environment?$9049$sFQex g$environment?$12568$sFQex ((case-lambda ((g$C$21009$sFQex) (g$C$21009$sFQex (case-lambda ((g$C$20365$sFQex g$x$12021$sFQex) (g$env?$9025$sFQex (case-lambda ((g$V$20366$sFQex) ((case-lambda ((g$C$20364$sFQex g$t$12022$sFQex) (if g$t$12022$sFQex (g$C$20364$sFQex g$t$12022$sFQex) (g$interaction-env?$9037$sFQex g$C$20364$sFQex g$x$12021$sFQex)))) g$C$20365$sFQex g$V$20366$sFQex))) g$x$12021$sFQex)))))) (library-letrec*-identity 'g$environment?$9049$sFQex))) (g$environment-symbols$9050$sFQex g$environment-symbols$12569$sFQex ((case-lambda ((g$C$21010$sFQex) (g$C$21010$sFQex (case-lambda ((g$C$20367$sFQex g$x$12023$sFQex) (g$env?$9025$sFQex (case-lambda ((g$T$20368$sFQex) (if g$T$20368$sFQex (g$env-names$9027$sFQex (case-lambda ((g$V$20369$sFQex) (vector->list g$C$20367$sFQex g$V$20369$sFQex))) g$x$12023$sFQex) (g$interaction-env?$9037$sFQex (case-lambda ((g$T$20370$sFQex) (if g$T$20370$sFQex (g$interaction-env-rib$9039$sFQex (case-lambda ((g$V$20371$sFQex) (g$rib-sym*$8632$sFQex (case-lambda ((g$V$20372$sFQex) (g$map$5680$sFQex g$C$20367$sFQex values g$V$20372$sFQex))) g$V$20371$sFQex))) g$x$12023$sFQex) (g$assertion-violation$6456$sFQex g$C$20367$sFQex 'environment-symbols '"not an environment" g$x$12023$sFQex)))) g$x$12023$sFQex)))) g$x$12023$sFQex)))))) (library-letrec*-identity 'g$environment-symbols$9050$sFQex))) (g$environment$9051$sFQex g$environment$12570$sFQex ((case-lambda ((g$C$21011$sFQex) (g$C$21011$sFQex (case-lambda ((g$C$20384$sFQex . g$imp*$12024$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$20385$sFQex) ((case-lambda ((g$C$20383$sFQex g$itc$12025$sFQex) ((case-lambda ((g$C$20382$sFQex g$imp-collector$12028$sFQex g$imp-collector$12029$sFQex) ((case-lambda ((g$C$20377$sFQex g$swap$12030$sFQex) (dynamic-wind g$C$20377$sFQex g$swap$12030$sFQex (case-lambda ((g$C$20376$sFQex) (call-with-values g$C$20376$sFQex (case-lambda ((g$C$20373$sFQex) (g$parse-import-spec*$9010$sFQex g$C$20373$sFQex g$imp*$12024$sFQex))) (case-lambda ((g$C$20375$sFQex g$subst-names$12033$sFQex g$subst-labels$12034$sFQex) ((case-lambda ((g$C$20374$sFQex g$subst-labels$12035$sFQex g$subst-names$12036$sFQex) (g$make-env$9026$sFQex g$C$20374$sFQex g$subst-names$12036$sFQex g$subst-labels$12035$sFQex g$itc$12025$sFQex))) g$C$20375$sFQex g$subst-labels$12034$sFQex g$subst-names$12033$sFQex)))))) g$swap$12030$sFQex))) g$C$20382$sFQex (case-lambda ((g$C$20380$sFQex) (g$imp-collector$12028$sFQex (case-lambda ((g$V$20381$sFQex) ((case-lambda ((g$C$20378$sFQex g$t$12037$sFQex) (g$imp-collector$12028$sFQex (case-lambda (g$IGNORE$20379$sFQex (begin (set! g$imp-collector$12029$sFQex g$t$12037$sFQex) (g$C$20378$sFQex (cps-void))))) g$imp-collector$12029$sFQex))) g$C$20380$sFQex g$V$20381$sFQex))))))))) g$C$20383$sFQex g$imp-collector$9015$sFQex g$itc$12025$sFQex))) g$C$20384$sFQex g$V$20385$sFQex))))))))) (library-letrec*-identity 'g$environment$9051$sFQex))) (g$null-environment$9052$sFQex g$null-environment$12571$sFQex ((case-lambda ((g$C$21012$sFQex) (g$C$21012$sFQex (case-lambda ((g$C$20386$sFQex g$n$12038$sFQex) ((case-lambda ((g$J$20388$sFQex) (eqv? (case-lambda ((g$V$20389$sFQex) (not (case-lambda ((g$T$20390$sFQex) (if g$T$20390$sFQex (g$assertion-violation$6456$sFQex g$J$20388$sFQex 'null-environment '"not 5" g$n$12038$sFQex) (void g$J$20388$sFQex)))) g$V$20389$sFQex))) g$n$12038$sFQex '5))) (case-lambda (g$IGNORE$20387$sFQex (g$environment$9051$sFQex g$C$20386$sFQex '(psyntax null-environment-5)))))))))) (library-letrec*-identity 'g$null-environment$9052$sFQex))) (g$scheme-report-environment$9053$sFQex g$scheme-report-environment$12572$sFQex ((case-lambda ((g$C$21013$sFQex) (g$C$21013$sFQex (case-lambda ((g$C$20391$sFQex g$n$12039$sFQex) ((case-lambda ((g$J$20393$sFQex) (eqv? (case-lambda ((g$V$20394$sFQex) (not (case-lambda ((g$T$20395$sFQex) (if g$T$20395$sFQex (g$assertion-violation$6456$sFQex g$J$20393$sFQex 'scheme-report-environment '"not 5" g$n$12039$sFQex) (void g$J$20393$sFQex)))) g$V$20394$sFQex))) g$n$12039$sFQex '5))) (case-lambda (g$IGNORE$20392$sFQex (g$environment$9051$sFQex g$C$20391$sFQex '(psyntax scheme-report-environment-5)))))))))) (library-letrec*-identity 'g$scheme-report-environment$9053$sFQex))) (g$expand$9054$sFQex g$expand$12573$sFQex ((case-lambda ((g$C$21014$sFQex) (g$C$21014$sFQex (case-lambda ((g$C$20456$sFQex g$x$12040$sFQex g$env$12041$sFQex) (g$env?$9025$sFQex (case-lambda ((g$T$20457$sFQex) (if g$T$20457$sFQex (g$env-labels$9028$sFQex (case-lambda ((g$V$20458$sFQex) (g$env-names$9027$sFQex (case-lambda ((g$V$20459$sFQex) (g$make-top-rib$9011$sFQex (case-lambda ((g$V$20460$sFQex) ((case-lambda ((g$C$20420$sFQex g$rib$12042$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$20421$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$20422$sFQex) (g$env-itc$9029$sFQex (case-lambda ((g$V$20423$sFQex) (list (case-lambda ((g$V$20424$sFQex) (g$make-stx$8655$sFQex (case-lambda ((g$V$20425$sFQex) ((case-lambda ((g$C$20418$sFQex g$x$12043$sFQex g$itc$12044$sFQex g$rtc$12045$sFQex g$vtc$12046$sFQex) ((case-lambda ((g$C$20417$sFQex g$top-level-context$12056$sFQex g$inv-collector$12057$sFQex g$vis-collector$12058$sFQex g$imp-collector$12059$sFQex g$top-level-context$12060$sFQex g$inv-collector$12061$sFQex g$vis-collector$12062$sFQex g$imp-collector$12063$sFQex) ((case-lambda ((g$C$20400$sFQex g$swap$12064$sFQex) (dynamic-wind g$C$20400$sFQex g$swap$12064$sFQex (case-lambda ((g$C$20399$sFQex) (g$chi-expr$8979$sFQex g$C$20399$sFQex g$x$12043$sFQex '() '()))) g$swap$12064$sFQex))) g$C$20417$sFQex (case-lambda ((g$C$20409$sFQex) (g$top-level-context$12056$sFQex (case-lambda ((g$V$20410$sFQex) ((case-lambda ((g$C$20401$sFQex g$t$12065$sFQex) (g$top-level-context$12056$sFQex (case-lambda (g$IGNORE$20402$sFQex (begin (set! g$top-level-context$12060$sFQex g$t$12065$sFQex) (g$C$20401$sFQex (cps-void))))) g$top-level-context$12060$sFQex))) (case-lambda (g$IGNORE$20411$sFQex (g$inv-collector$12057$sFQex (case-lambda ((g$V$20412$sFQex) ((case-lambda ((g$C$20403$sFQex g$t$12066$sFQex) (g$inv-collector$12057$sFQex (case-lambda (g$IGNORE$20404$sFQex (begin (set! g$inv-collector$12061$sFQex g$t$12066$sFQex) (g$C$20403$sFQex (cps-void))))) g$inv-collector$12061$sFQex))) (case-lambda (g$IGNORE$20413$sFQex (g$vis-collector$12058$sFQex (case-lambda ((g$V$20414$sFQex) ((case-lambda ((g$C$20405$sFQex g$t$12067$sFQex) (g$vis-collector$12058$sFQex (case-lambda (g$IGNORE$20406$sFQex (begin (set! g$vis-collector$12062$sFQex g$t$12067$sFQex) (g$C$20405$sFQex (cps-void))))) g$vis-collector$12062$sFQex))) (case-lambda (g$IGNORE$20415$sFQex (g$imp-collector$12059$sFQex (case-lambda ((g$V$20416$sFQex) ((case-lambda ((g$C$20407$sFQex g$t$12068$sFQex) (g$imp-collector$12059$sFQex (case-lambda (g$IGNORE$20408$sFQex (begin (set! g$imp-collector$12063$sFQex g$t$12068$sFQex) (g$C$20407$sFQex (cps-void))))) g$imp-collector$12063$sFQex))) g$C$20409$sFQex g$V$20416$sFQex)))))) g$V$20414$sFQex)))))) g$V$20412$sFQex)))))) g$V$20410$sFQex))))))))) (case-lambda ((g$V$20419$sFQex) ((case-lambda ((g$C$20396$sFQex g$x$12047$sFQex) (g$seal-rib!$8648$sFQex (case-lambda (g$IGNORE$20397$sFQex (g$rtc$12045$sFQex (case-lambda ((g$V$20398$sFQex) (values g$C$20396$sFQex g$x$12047$sFQex g$V$20398$sFQex)))))) g$rib$12042$sFQex))) g$C$20418$sFQex g$V$20419$sFQex))) g$top-level-context$9081$sFQex g$inv-collector$9013$sFQex g$vis-collector$9014$sFQex g$imp-collector$9015$sFQex '#f g$rtc$12045$sFQex g$vtc$12046$sFQex g$itc$12044$sFQex))) g$C$20420$sFQex g$V$20425$sFQex g$V$20423$sFQex g$V$20422$sFQex g$V$20421$sFQex))) g$x$12040$sFQex g$top-mark*$8619$sFQex g$V$20424$sFQex '()))) g$rib$12042$sFQex))) g$env$12041$sFQex))))))))) g$C$20456$sFQex g$V$20460$sFQex))) g$V$20459$sFQex g$V$20458$sFQex))) g$env$12041$sFQex))) g$env$12041$sFQex) (g$interaction-env?$9037$sFQex (case-lambda ((g$T$20461$sFQex) (if g$T$20461$sFQex (g$make-collector$9012$sFQex (case-lambda ((g$V$20462$sFQex) (g$interaction-env-r$9040$sFQex (case-lambda ((g$V$20463$sFQex) (g$interaction-env-rib$9039$sFQex (case-lambda ((g$V$20464$sFQex) ((case-lambda ((g$C$20453$sFQex g$rib$12069$sFQex g$r$12070$sFQex g$rtc$12071$sFQex) (list (case-lambda ((g$V$20454$sFQex) (g$make-stx$8655$sFQex (case-lambda ((g$V$20455$sFQex) ((case-lambda ((g$C$20452$sFQex g$x$12072$sFQex) (call-with-values g$C$20452$sFQex (case-lambda ((g$C$20445$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$20446$sFQex) (g$make-collector$9012$sFQex (case-lambda ((g$V$20447$sFQex) ((case-lambda ((g$C$20444$sFQex g$top-level-context$12083$sFQex g$inv-collector$12084$sFQex g$vis-collector$12085$sFQex g$imp-collector$12086$sFQex g$top-level-context$12087$sFQex g$inv-collector$12088$sFQex g$vis-collector$12089$sFQex g$imp-collector$12090$sFQex) ((case-lambda ((g$C$20427$sFQex g$swap$12091$sFQex) (dynamic-wind g$C$20427$sFQex g$swap$12091$sFQex (case-lambda ((g$C$20426$sFQex) (g$chi-interaction-expr$9017$sFQex g$C$20426$sFQex g$x$12072$sFQex g$rib$12069$sFQex g$r$12070$sFQex))) g$swap$12091$sFQex))) g$C$20444$sFQex (case-lambda ((g$C$20436$sFQex) (g$top-level-context$12083$sFQex (case-lambda ((g$V$20437$sFQex) ((case-lambda ((g$C$20428$sFQex g$t$12092$sFQex) (g$top-level-context$12083$sFQex (case-lambda (g$IGNORE$20429$sFQex (begin (set! g$top-level-context$12087$sFQex g$t$12092$sFQex) (g$C$20428$sFQex (cps-void))))) g$top-level-context$12087$sFQex))) (case-lambda (g$IGNORE$20438$sFQex (g$inv-collector$12084$sFQex (case-lambda ((g$V$20439$sFQex) ((case-lambda ((g$C$20430$sFQex g$t$12093$sFQex) (g$inv-collector$12084$sFQex (case-lambda (g$IGNORE$20431$sFQex (begin (set! g$inv-collector$12088$sFQex g$t$12093$sFQex) (g$C$20430$sFQex (cps-void))))) g$inv-collector$12088$sFQex))) (case-lambda (g$IGNORE$20440$sFQex (g$vis-collector$12085$sFQex (case-lambda ((g$V$20441$sFQex) ((case-lambda ((g$C$20432$sFQex g$t$12094$sFQex) (g$vis-collector$12085$sFQex (case-lambda (g$IGNORE$20433$sFQex (begin (set! g$vis-collector$12089$sFQex g$t$12094$sFQex) (g$C$20432$sFQex (cps-void))))) g$vis-collector$12089$sFQex))) (case-lambda (g$IGNORE$20442$sFQex (g$imp-collector$12086$sFQex (case-lambda ((g$V$20443$sFQex) ((case-lambda ((g$C$20434$sFQex g$t$12095$sFQex) (g$imp-collector$12086$sFQex (case-lambda (g$IGNORE$20435$sFQex (begin (set! g$imp-collector$12090$sFQex g$t$12095$sFQex) (g$C$20434$sFQex (cps-void))))) g$imp-collector$12090$sFQex))) g$C$20436$sFQex g$V$20443$sFQex)))))) g$V$20441$sFQex)))))) g$V$20439$sFQex)))))) g$V$20437$sFQex))))))))) g$C$20445$sFQex g$top-level-context$9081$sFQex g$inv-collector$9013$sFQex g$vis-collector$9014$sFQex g$imp-collector$9015$sFQex g$env$12041$sFQex g$rtc$12071$sFQex g$V$20447$sFQex g$V$20446$sFQex))))))))) (case-lambda ((g$C$20451$sFQex g$e$12096$sFQex g$r^$12097$sFQex) ((case-lambda ((g$C$20448$sFQex g$r^$12098$sFQex g$e$12099$sFQex) (g$set-interaction-env-r!$9043$sFQex (case-lambda (g$IGNORE$20449$sFQex (g$rtc$12071$sFQex (case-lambda ((g$V$20450$sFQex) (values g$C$20448$sFQex g$e$12099$sFQex g$V$20450$sFQex)))))) g$env$12041$sFQex g$r^$12098$sFQex))) g$C$20451$sFQex g$r^$12097$sFQex g$e$12096$sFQex)))))) g$C$20453$sFQex g$V$20455$sFQex))) g$x$12040$sFQex g$top-mark*$8619$sFQex g$V$20454$sFQex '()))) g$rib$12069$sFQex))) g$C$20456$sFQex g$V$20464$sFQex g$V$20463$sFQex g$V$20462$sFQex))) g$env$12041$sFQex))) g$env$12041$sFQex)))) (g$assertion-violation$6456$sFQex g$C$20456$sFQex 'expand '"not an environment" g$env$12041$sFQex)))) g$env$12041$sFQex)))) g$env$12041$sFQex)))))) (library-letrec*-identity 'g$expand$9054$sFQex))) (g$eval$9055$sFQex g$eval$12574$sFQex ((case-lambda ((g$C$21015$sFQex) (g$C$21015$sFQex (case-lambda ((g$C$20470$sFQex g$x$12100$sFQex g$env$12101$sFQex) ((case-lambda ((g$J$20472$sFQex) (g$environment?$9049$sFQex (case-lambda ((g$V$20473$sFQex) (not (case-lambda ((g$T$20474$sFQex) (if g$T$20474$sFQex (g$error$6457$sFQex g$J$20472$sFQex 'eval '"not an environment" g$env$12101$sFQex) (void g$J$20472$sFQex)))) g$V$20473$sFQex))) g$env$12101$sFQex))) (case-lambda (g$IGNORE$20471$sFQex (call-with-values g$C$20470$sFQex (case-lambda ((g$C$20465$sFQex) (g$expand$9054$sFQex g$C$20465$sFQex g$x$12100$sFQex g$env$12101$sFQex))) (case-lambda ((g$C$20469$sFQex g$x$12104$sFQex g$invoke-req*$12105$sFQex) ((case-lambda ((g$C$20466$sFQex g$invoke-req*$12106$sFQex g$x$12107$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$20467$sFQex (g$expanded->core$8227$sFQex (case-lambda ((g$V$20468$sFQex) (eval-core g$C$20466$sFQex g$V$20468$sFQex))) g$x$12107$sFQex))) g$invoke-library$8489$sFQex g$invoke-req*$12106$sFQex))) g$C$20469$sFQex g$invoke-req*$12105$sFQex g$x$12104$sFQex)))))))))))) (library-letrec*-identity 'g$eval$9055$sFQex))) (g$expand->core$9056$sFQex g$expand->core$12575$sFQex ((case-lambda ((g$C$21016$sFQex) (g$C$21016$sFQex (case-lambda ((g$C$20479$sFQex g$x$12108$sFQex g$env$12109$sFQex) ((case-lambda ((g$J$20481$sFQex) (g$environment?$9049$sFQex (case-lambda ((g$V$20482$sFQex) (not (case-lambda ((g$T$20483$sFQex) (if g$T$20483$sFQex (g$error$6457$sFQex g$J$20481$sFQex 'eval '"not an environment" g$env$12109$sFQex) (void g$J$20481$sFQex)))) g$V$20482$sFQex))) g$env$12109$sFQex))) (case-lambda (g$IGNORE$20480$sFQex (call-with-values g$C$20479$sFQex (case-lambda ((g$C$20475$sFQex) (g$expand$9054$sFQex g$C$20475$sFQex g$x$12108$sFQex g$env$12109$sFQex))) (case-lambda ((g$C$20478$sFQex g$x$12112$sFQex g$invoke-req*$12113$sFQex) ((case-lambda ((g$C$20476$sFQex g$invoke-req*$12114$sFQex g$x$12115$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$20477$sFQex (g$expanded->core$8227$sFQex g$C$20476$sFQex g$x$12115$sFQex))) g$invoke-library$8489$sFQex g$invoke-req*$12114$sFQex))) g$C$20478$sFQex g$invoke-req*$12113$sFQex g$x$12112$sFQex)))))))))))) (library-letrec*-identity 'g$expand->core$9056$sFQex))) (g$library-expander$9057$sFQex g$library-expander$12576$sFQex ((case-lambda ((g$C$21017$sFQex) (g$C$21017$sFQex (case-lambda ((g$C$20512$sFQex g$x$12116$sFQex g$filename$12117$sFQex g$verify-name$12118$sFQex) ((case-lambda ((g$C$20509$sFQex g$build-visit-code$12119$sFQex g$visit!$12120$sFQex) (begin (set! g$build-visit-code$12119$sFQex (case-lambda ((g$C$20488$sFQex g$macro*$12162$sFQex) (null? (case-lambda ((g$T$20489$sFQex) (if g$T$20489$sFQex (g$build-void$8612$sFQex g$C$20488$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20490$sFQex) (g$build-sequence$8611$sFQex g$C$20488$sFQex '#f g$V$20490$sFQex))) (case-lambda ((g$C$20485$sFQex g$x$12163$sFQex) (g$cddr$6179$sFQex (case-lambda ((g$V$20486$sFQex) (car (case-lambda ((g$V$20487$sFQex) ((case-lambda ((g$C$20484$sFQex g$loc$12164$sFQex g$src$12165$sFQex) (list g$C$20484$sFQex 'set! g$loc$12164$sFQex g$src$12165$sFQex))) g$C$20485$sFQex g$V$20487$sFQex g$V$20486$sFQex))) g$x$12163$sFQex))) g$x$12163$sFQex))) g$macro*$12162$sFQex)))) g$macro*$12162$sFQex)))) (begin (set! g$visit!$12120$sFQex (case-lambda ((g$C$20495$sFQex g$macro*$12158$sFQex) (g$for-each$5681$sFQex g$C$20495$sFQex (case-lambda ((g$C$20492$sFQex g$x$12159$sFQex) (g$cadr$6177$sFQex (case-lambda ((g$V$20493$sFQex) (car (case-lambda ((g$V$20494$sFQex) ((case-lambda ((g$C$20491$sFQex g$loc$12160$sFQex g$proc$12161$sFQex) (set-symbol-value! g$C$20491$sFQex g$loc$12160$sFQex g$proc$12161$sFQex))) g$C$20492$sFQex g$V$20494$sFQex g$V$20493$sFQex))) g$x$12159$sFQex))) g$x$12159$sFQex))) g$macro*$12158$sFQex)))) (call-with-values g$C$20509$sFQex (case-lambda ((g$C$20496$sFQex) (g$core-library-expander$9019$sFQex g$C$20496$sFQex g$x$12116$sFQex g$verify-name$12118$sFQex))) (case-lambda ((g$C$20508$sFQex g$name$12130$sFQex g$ver$12131$sFQex g$imp*$12132$sFQex g$inv*$12133$sFQex g$vis*$12134$sFQex g$invoke-code$12135$sFQex g$macro*$12136$sFQex g$export-subst$12137$sFQex g$export-env$12138$sFQex) ((case-lambda ((g$C$20502$sFQex g$export-env$12139$sFQex g$export-subst$12140$sFQex g$macro*$12141$sFQex g$invoke-code$12142$sFQex g$vis*$12143$sFQex g$inv*$12144$sFQex g$imp*$12145$sFQex g$ver$12146$sFQex g$name$12147$sFQex) (g$build-visit-code$12119$sFQex (case-lambda ((g$V$20503$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20504$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20505$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20506$sFQex) (gensym (case-lambda ((g$V$20507$sFQex) ((case-lambda ((g$C$20497$sFQex g$id$12148$sFQex g$name$12149$sFQex g$ver$12150$sFQex g$imp*$12151$sFQex g$vis*$12152$sFQex g$inv*$12153$sFQex g$visit-proc$12154$sFQex g$invoke-proc$12155$sFQex g$visit-code$12156$sFQex g$invoke-code$12157$sFQex) (g$install-library$8487$sFQex (case-lambda (g$IGNORE$20498$sFQex (values g$C$20497$sFQex g$id$12148$sFQex g$name$12149$sFQex g$ver$12150$sFQex g$imp*$12151$sFQex g$vis*$12152$sFQex g$inv*$12153$sFQex g$invoke-code$12157$sFQex g$visit-code$12156$sFQex g$export-subst$12140$sFQex g$export-env$12139$sFQex))) g$id$12148$sFQex g$name$12149$sFQex g$ver$12150$sFQex g$imp*$12151$sFQex g$vis*$12152$sFQex g$inv*$12153$sFQex g$export-subst$12140$sFQex g$export-env$12139$sFQex g$visit-proc$12154$sFQex g$invoke-proc$12155$sFQex g$visit-code$12156$sFQex g$invoke-code$12157$sFQex '#t g$filename$12117$sFQex))) g$C$20502$sFQex g$V$20507$sFQex g$name$12147$sFQex g$ver$12146$sFQex g$V$20506$sFQex g$V$20505$sFQex g$V$20504$sFQex (case-lambda ((g$C$20499$sFQex) (g$visit!$12120$sFQex g$C$20499$sFQex g$macro*$12141$sFQex))) (case-lambda ((g$C$20500$sFQex) (g$expanded->core$8227$sFQex (case-lambda ((g$V$20501$sFQex) (eval-core g$C$20500$sFQex g$V$20501$sFQex))) g$invoke-code$12142$sFQex))) g$V$20503$sFQex g$invoke-code$12142$sFQex)))))) g$library-spec$8493$sFQex g$imp*$12145$sFQex))) g$library-spec$8493$sFQex g$vis*$12143$sFQex))) g$library-spec$8493$sFQex g$inv*$12144$sFQex))) g$macro*$12141$sFQex))) g$C$20508$sFQex g$export-env$12138$sFQex g$export-subst$12137$sFQex g$macro*$12136$sFQex g$invoke-code$12135$sFQex g$vis*$12134$sFQex g$inv*$12133$sFQex g$imp*$12132$sFQex g$ver$12131$sFQex g$name$12130$sFQex)))))))) g$C$20512$sFQex uninitialized uninitialized)) ((g$C$20512$sFQex g$x$12166$sFQex g$filename$12167$sFQex) (g$library-expander$9057$sFQex g$C$20512$sFQex g$x$12166$sFQex g$filename$12167$sFQex (case-lambda ((g$C$20510$sFQex g$x$12168$sFQex) (values g$C$20510$sFQex))))) ((g$C$20512$sFQex g$x$12169$sFQex) (g$library-expander$9057$sFQex g$C$20512$sFQex g$x$12169$sFQex '#f (case-lambda ((g$C$20511$sFQex g$x$12170$sFQex) (values g$C$20511$sFQex))))))))) (library-letrec*-identity 'g$library-expander$9057$sFQex))) (g$boot-library-expand$9058$sFQex g$boot-library-expand$12577$sFQex ((case-lambda ((g$C$21018$sFQex) (g$C$21018$sFQex (case-lambda ((g$C$20516$sFQex g$x$12171$sFQex) (call-with-values g$C$20516$sFQex (case-lambda ((g$C$20513$sFQex) (g$library-expander$9057$sFQex g$C$20513$sFQex g$x$12171$sFQex))) (case-lambda ((g$C$20515$sFQex g$id$12182$sFQex g$name$12183$sFQex g$ver$12184$sFQex g$imp*$12185$sFQex g$vis*$12186$sFQex g$inv*$12187$sFQex g$invoke-code$12188$sFQex g$visit-code$12189$sFQex g$export-subst$12190$sFQex g$export-env$12191$sFQex) ((case-lambda ((g$C$20514$sFQex g$export-env$12192$sFQex g$export-subst$12193$sFQex g$visit-code$12194$sFQex g$invoke-code$12195$sFQex g$inv*$12196$sFQex g$vis*$12197$sFQex g$imp*$12198$sFQex g$ver$12199$sFQex g$name$12200$sFQex g$id$12201$sFQex) (values g$C$20514$sFQex g$name$12200$sFQex g$invoke-code$12195$sFQex g$export-subst$12193$sFQex g$export-env$12192$sFQex))) g$C$20515$sFQex g$export-env$12191$sFQex g$export-subst$12190$sFQex g$visit-code$12189$sFQex g$invoke-code$12188$sFQex g$inv*$12187$sFQex g$vis*$12186$sFQex g$imp*$12185$sFQex g$ver$12184$sFQex g$name$12183$sFQex g$id$12182$sFQex))))))))) (library-letrec*-identity 'g$boot-library-expand$9058$sFQex))) (g$rev-map-append$9059$sFQex g$rev-map-append$12578$sFQex ((case-lambda ((g$C$21019$sFQex) (g$C$21019$sFQex (case-lambda ((g$C$20517$sFQex g$f$12202$sFQex g$ls$12203$sFQex g$ac$12204$sFQex) (null? (case-lambda ((g$T$20518$sFQex) (if g$T$20518$sFQex (g$C$20517$sFQex g$ac$12204$sFQex) (car (case-lambda ((g$V$20519$sFQex) (g$f$12202$sFQex (case-lambda ((g$V$20520$sFQex) (cons (case-lambda ((g$V$20521$sFQex) (cdr (case-lambda ((g$V$20522$sFQex) (g$rev-map-append$9059$sFQex g$C$20517$sFQex g$f$12202$sFQex g$V$20522$sFQex g$V$20521$sFQex))) g$ls$12203$sFQex))) g$V$20520$sFQex g$ac$12204$sFQex))) g$V$20519$sFQex))) g$ls$12203$sFQex)))) g$ls$12203$sFQex)))))) (library-letrec*-identity 'g$rev-map-append$9059$sFQex))) (g$build-exports$9060$sFQex g$build-exports$12579$sFQex ((case-lambda ((g$C$21020$sFQex) (g$C$21020$sFQex (case-lambda ((g$C$20526$sFQex g$lex*+loc*$12205$sFQex g$init*$12206$sFQex) (g$rev-map-append$9059$sFQex (case-lambda ((g$V$20527$sFQex) (g$build-void$8612$sFQex (case-lambda ((g$V$20528$sFQex) (cons (case-lambda ((g$V$20529$sFQex) (g$build-sequence$8611$sFQex g$C$20526$sFQex '#f g$V$20529$sFQex))) g$V$20528$sFQex g$V$20527$sFQex)))))) (case-lambda ((g$C$20523$sFQex g$x$12207$sFQex) (car (case-lambda ((g$V$20524$sFQex) (cdr (case-lambda ((g$V$20525$sFQex) (list g$C$20523$sFQex 'set! g$V$20525$sFQex g$V$20524$sFQex))) g$x$12207$sFQex))) g$x$12207$sFQex))) g$lex*+loc*$12205$sFQex g$init*$12206$sFQex)))))) (library-letrec*-identity 'g$build-exports$9060$sFQex))) (g$make-export-subst$9061$sFQex g$make-export-subst$12580$sFQex ((case-lambda ((g$C$21021$sFQex) (g$C$21021$sFQex (case-lambda ((g$C$20536$sFQex g$name*$12208$sFQex g$id*$12209$sFQex) (g$map$5680$sFQex g$C$20536$sFQex (case-lambda ((g$C$20534$sFQex g$name$12210$sFQex g$id$12211$sFQex) (g$id->label$8695$sFQex (case-lambda ((g$V$20535$sFQex) ((case-lambda ((g$C$20530$sFQex g$label$12212$sFQex) ((case-lambda ((g$J$20532$sFQex) (not (case-lambda ((g$T$20533$sFQex) (if g$T$20533$sFQex (g$syntax-violation$9073$sFQex g$J$20532$sFQex '#f '"cannot export unbound identifier" g$id$12211$sFQex) (void g$J$20532$sFQex)))) g$label$12212$sFQex))) (case-lambda (g$IGNORE$20531$sFQex (cons g$C$20530$sFQex g$name$12210$sFQex g$label$12212$sFQex)))))) g$C$20534$sFQex g$V$20535$sFQex))) g$id$12211$sFQex))) g$name*$12208$sFQex g$id*$12209$sFQex)))))) (library-letrec*-identity 'g$make-export-subst$9061$sFQex))) (g$make-export-env/macros$9062$sFQex g$make-export-env/macros$12581$sFQex ((case-lambda ((g$C$21022$sFQex) (g$C$21022$sFQex (case-lambda ((g$C$20609$sFQex g$lex*$12213$sFQex g$loc*$12214$sFQex g$r$12215$sFQex) ((case-lambda ((g$C$20607$sFQex g$lookup$12216$sFQex) (begin (set! g$lookup$12216$sFQex (case-lambda ((g$C$20546$sFQex g$x$12232$sFQex) ((case-lambda ((g$C$20545$sFQex g$f$12233$sFQex) ((case-lambda ((g$C$20538$sFQex g$f$20537$sFQex) (begin (set! g$f$12233$sFQex g$f$20537$sFQex) (g$C$20538$sFQex g$f$12233$sFQex)))) g$C$20545$sFQex (case-lambda ((g$C$20539$sFQex g$x$12234$sFQex g$lex*$12235$sFQex g$loc*$12236$sFQex) (pair? (case-lambda ((g$T$20540$sFQex) (if g$T$20540$sFQex (car (case-lambda ((g$V$20541$sFQex) (eq? (case-lambda ((g$T$20542$sFQex) (if g$T$20542$sFQex (car g$C$20539$sFQex g$loc*$12236$sFQex) (cdr (case-lambda ((g$V$20543$sFQex) (cdr (case-lambda ((g$V$20544$sFQex) (g$f$12233$sFQex g$C$20539$sFQex g$x$12234$sFQex g$V$20544$sFQex g$V$20543$sFQex))) g$lex*$12235$sFQex))) g$loc*$12236$sFQex)))) g$x$12234$sFQex g$V$20541$sFQex))) g$lex*$12235$sFQex) (g$assertion-violation$6456$sFQex g$C$20539$sFQex 'lookup-make-export '"BUG")))) g$lex*$12235$sFQex)))))) (case-lambda ((g$V$20547$sFQex) (g$V$20547$sFQex g$C$20546$sFQex g$x$12232$sFQex g$lex*$12213$sFQex g$loc*$12214$sFQex))) uninitialized)))) ((case-lambda ((g$C$20606$sFQex g$f$12217$sFQex) ((case-lambda ((g$C$20549$sFQex g$f$20548$sFQex) (begin (set! g$f$12217$sFQex g$f$20548$sFQex) (g$C$20549$sFQex g$f$12217$sFQex)))) g$C$20606$sFQex (case-lambda ((g$C$20603$sFQex g$r$12218$sFQex g$env$12219$sFQex g$global*$12220$sFQex g$macro*$12221$sFQex) (null? (case-lambda ((g$T$20604$sFQex) (if g$T$20604$sFQex (values g$C$20603$sFQex g$env$12219$sFQex g$global*$12220$sFQex g$macro*$12221$sFQex) (car (case-lambda ((g$V$20605$sFQex) ((case-lambda ((g$C$20600$sFQex g$x$12222$sFQex) (cdr (case-lambda ((g$V$20601$sFQex) (car (case-lambda ((g$V$20602$sFQex) ((case-lambda ((g$C$20598$sFQex g$label$12223$sFQex g$b$12224$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$20599$sFQex) ((case-lambda ((g$C$20584$sFQex g$t$12225$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$20585$sFQex) (if g$T$20585$sFQex (g$binding-value$8700$sFQex (case-lambda ((g$V$20586$sFQex) ((case-lambda ((g$C$20557$sFQex g$v$12226$sFQex) ((case-lambda ((g$J$20561$sFQex) (g$lexical-mutable?$8906$sFQex (case-lambda ((g$T$20562$sFQex) (if g$T$20562$sFQex (g$J$20561$sFQex 'mutable) (g$J$20561$sFQex 'global)))) g$v$12226$sFQex))) (case-lambda ((g$V$20558$sFQex) (g$lexical-var$8905$sFQex (case-lambda ((g$V$20559$sFQex) (g$lookup$12216$sFQex (case-lambda ((g$V$20560$sFQex) ((case-lambda ((g$C$20550$sFQex g$loc$12227$sFQex g$type$12228$sFQex) (g$lexical-var$8905$sFQex (case-lambda ((g$V$20551$sFQex) (cons (case-lambda ((g$V$20552$sFQex) (cons (case-lambda ((g$V$20553$sFQex) (g$cons*$5682$sFQex (case-lambda ((g$V$20554$sFQex) (cons (case-lambda ((g$V$20555$sFQex) (cdr (case-lambda ((g$V$20556$sFQex) (g$f$12217$sFQex g$C$20550$sFQex g$V$20556$sFQex g$V$20555$sFQex g$V$20553$sFQex g$macro*$12221$sFQex))) g$r$12218$sFQex))) g$V$20554$sFQex g$env$12219$sFQex))) g$label$12223$sFQex g$type$12228$sFQex g$loc$12227$sFQex))) g$V$20552$sFQex g$global*$12220$sFQex))) g$V$20551$sFQex g$loc$12227$sFQex))) g$v$12226$sFQex))) g$C$20557$sFQex g$V$20560$sFQex g$V$20558$sFQex))) g$V$20559$sFQex))) g$v$12226$sFQex)))))) g$C$20584$sFQex g$V$20586$sFQex))) g$b$12224$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$20587$sFQex) (if g$T$20587$sFQex (gensym (case-lambda ((g$V$20588$sFQex) ((case-lambda ((g$C$20563$sFQex g$loc$12229$sFQex) (g$binding-value$8700$sFQex (case-lambda ((g$V$20564$sFQex) (cons (case-lambda ((g$V$20565$sFQex) (cons (case-lambda ((g$V$20566$sFQex) (g$cons*$5682$sFQex (case-lambda ((g$V$20567$sFQex) (cons (case-lambda ((g$V$20568$sFQex) (cdr (case-lambda ((g$V$20569$sFQex) (g$f$12217$sFQex g$C$20563$sFQex g$V$20569$sFQex g$V$20568$sFQex g$global*$12220$sFQex g$V$20566$sFQex))) g$r$12218$sFQex))) g$V$20567$sFQex g$env$12219$sFQex))) g$label$12223$sFQex 'global-macro g$loc$12229$sFQex))) g$V$20565$sFQex g$macro*$12221$sFQex))) g$loc$12229$sFQex g$V$20564$sFQex))) g$b$12224$sFQex))) g$C$20584$sFQex g$V$20588$sFQex)))) (g$memv$5673$sFQex (case-lambda ((g$T$20589$sFQex) (if g$T$20589$sFQex (gensym (case-lambda ((g$V$20590$sFQex) ((case-lambda ((g$C$20570$sFQex g$loc$12230$sFQex) (g$binding-value$8700$sFQex (case-lambda ((g$V$20571$sFQex) (cons (case-lambda ((g$V$20572$sFQex) (cons (case-lambda ((g$V$20573$sFQex) (g$cons*$5682$sFQex (case-lambda ((g$V$20574$sFQex) (cons (case-lambda ((g$V$20575$sFQex) (cdr (case-lambda ((g$V$20576$sFQex) (g$f$12217$sFQex g$C$20570$sFQex g$V$20576$sFQex g$V$20575$sFQex g$global*$12220$sFQex g$V$20573$sFQex))) g$r$12218$sFQex))) g$V$20574$sFQex g$env$12219$sFQex))) g$label$12223$sFQex 'global-macro! g$loc$12230$sFQex))) g$V$20572$sFQex g$macro*$12221$sFQex))) g$loc$12230$sFQex g$V$20571$sFQex))) g$b$12224$sFQex))) g$C$20584$sFQex g$V$20590$sFQex)))) (g$memv$5673$sFQex (case-lambda ((g$T$20591$sFQex) (if g$T$20591$sFQex (gensym (case-lambda ((g$V$20592$sFQex) ((case-lambda ((g$C$20577$sFQex g$loc$12231$sFQex) (g$binding-value$8700$sFQex (case-lambda ((g$V$20578$sFQex) (cons (case-lambda ((g$V$20579$sFQex) (cons (case-lambda ((g$V$20580$sFQex) (g$cons*$5682$sFQex (case-lambda ((g$V$20581$sFQex) (cons (case-lambda ((g$V$20582$sFQex) (cdr (case-lambda ((g$V$20583$sFQex) (g$f$12217$sFQex g$C$20577$sFQex g$V$20583$sFQex g$V$20582$sFQex g$global*$12220$sFQex g$V$20580$sFQex))) g$r$12218$sFQex))) g$V$20581$sFQex g$env$12219$sFQex))) g$label$12223$sFQex 'global-ctv g$loc$12231$sFQex))) g$V$20579$sFQex g$macro*$12221$sFQex))) g$loc$12231$sFQex g$V$20578$sFQex))) g$b$12224$sFQex))) g$C$20584$sFQex g$V$20592$sFQex)))) (g$memv$5673$sFQex (case-lambda ((g$T$20593$sFQex) (if g$T$20593$sFQex (cons (case-lambda ((g$V$20594$sFQex) (cdr (case-lambda ((g$V$20595$sFQex) (g$f$12217$sFQex g$C$20584$sFQex g$V$20595$sFQex g$V$20594$sFQex g$global*$12220$sFQex g$macro*$12221$sFQex))) g$r$12218$sFQex))) g$x$12222$sFQex g$env$12219$sFQex) (g$binding-value$8700$sFQex (case-lambda ((g$V$20596$sFQex) (g$binding-type$8699$sFQex (case-lambda ((g$V$20597$sFQex) (g$assertion-violation$6456$sFQex g$C$20584$sFQex 'expander '"BUG: do not know how to export" g$V$20597$sFQex g$V$20596$sFQex))) g$b$12224$sFQex))) g$b$12224$sFQex)))) g$t$12225$sFQex '($rtd $module))))) g$t$12225$sFQex '(local-ctv))))) g$t$12225$sFQex '(local-macro!))))) g$t$12225$sFQex '(local-macro))))) g$t$12225$sFQex '(lexical)))) g$C$20598$sFQex g$V$20599$sFQex))) g$b$12224$sFQex))) g$C$20600$sFQex g$V$20602$sFQex g$V$20601$sFQex))) g$x$12222$sFQex))) g$x$12222$sFQex))) g$C$20603$sFQex g$V$20605$sFQex))) g$r$12218$sFQex)))) g$r$12218$sFQex)))))) (case-lambda ((g$V$20608$sFQex) (g$V$20608$sFQex g$C$20607$sFQex g$r$12215$sFQex '() '() '()))) uninitialized)))) g$C$20609$sFQex uninitialized)))))) (library-letrec*-identity 'g$make-export-env/macros$9062$sFQex))) (g$generate-temporaries$9063$sFQex g$generate-temporaries$12582$sFQex ((case-lambda ((g$C$21023$sFQex) (g$C$21023$sFQex (case-lambda ((g$C$20625$sFQex g$ls$12237$sFQex) ((case-lambda ((g$C$20623$sFQex g$t$12238$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20624$sFQex) ((case-lambda ((g$C$20622$sFQex g$ls/false$12239$sFQex) (if g$ls/false$12239$sFQex (apply g$C$20622$sFQex (case-lambda ((g$C$20617$sFQex g$ls$12240$sFQex) (g$map$5680$sFQex g$C$20617$sFQex (case-lambda ((g$C$20614$sFQex g$x$12241$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20615$sFQex) ((case-lambda ((g$C$20611$sFQex g$x$12242$sFQex) (g$symbol?$6168$sFQex (case-lambda ((g$V$20612$sFQex) ((case-lambda ((g$C$20610$sFQex g$t$12243$sFQex) (if g$t$12243$sFQex (g$C$20610$sFQex g$t$12243$sFQex) (string? g$C$20610$sFQex g$x$12242$sFQex)))) (case-lambda ((g$T$20613$sFQex) (if g$T$20613$sFQex (gensym g$C$20611$sFQex g$x$12242$sFQex) (gensym g$C$20611$sFQex 't)))) g$V$20612$sFQex))) g$x$12242$sFQex))) (case-lambda ((g$V$20616$sFQex) (g$make-stx$8655$sFQex g$C$20614$sFQex g$V$20616$sFQex g$top-mark*$8619$sFQex '() '()))) g$V$20615$sFQex))) g$x$12241$sFQex))) g$ls$12240$sFQex))) g$ls/false$12239$sFQex) ((case-lambda ((g$C$20620$sFQex g$t$12244$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20621$sFQex) ((case-lambda ((g$C$20619$sFQex g$ls/false$12245$sFQex) (if g$ls/false$12245$sFQex (apply g$C$20619$sFQex (case-lambda ((g$C$20618$sFQex) (g$assertion-violation$6456$sFQex g$C$20618$sFQex 'generate-temporaries '"not a list"))) g$ls/false$12245$sFQex) (g$syntax-violation$9073$sFQex g$C$20619$sFQex '#f '"invalid syntax" g$t$12244$sFQex)))) g$C$20620$sFQex g$V$20621$sFQex))) g$t$12244$sFQex '_))) g$C$20622$sFQex g$t$12238$sFQex)))) g$C$20623$sFQex g$V$20624$sFQex))) g$t$12238$sFQex 'each-any))) g$C$20625$sFQex g$ls$12237$sFQex)))))) (library-letrec*-identity 'g$generate-temporaries$9063$sFQex))) (g$free-identifier=?$9064$sFQex g$free-identifier=?$12583$sFQex ((case-lambda ((g$C$21024$sFQex) (g$C$21024$sFQex (case-lambda ((g$C$20626$sFQex g$x$12246$sFQex g$y$12247$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$20627$sFQex) (if g$T$20627$sFQex (g$id?$8682$sFQex (case-lambda ((g$T$20628$sFQex) (if g$T$20628$sFQex (g$free-id=?$8686$sFQex g$C$20626$sFQex g$x$12246$sFQex g$y$12247$sFQex) (g$assertion-violation$6456$sFQex g$C$20626$sFQex 'free-identifier=? '"not an identifier" g$y$12247$sFQex)))) g$y$12247$sFQex) (g$assertion-violation$6456$sFQex g$C$20626$sFQex 'free-identifier=? '"not an identifier" g$x$12246$sFQex)))) g$x$12246$sFQex)))))) (library-letrec*-identity 'g$free-identifier=?$9064$sFQex))) (g$bound-identifier=?$9065$sFQex g$bound-identifier=?$12584$sFQex ((case-lambda ((g$C$21025$sFQex) (g$C$21025$sFQex (case-lambda ((g$C$20629$sFQex g$x$12248$sFQex g$y$12249$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$20630$sFQex) (if g$T$20630$sFQex (g$id?$8682$sFQex (case-lambda ((g$T$20631$sFQex) (if g$T$20631$sFQex (g$bound-id=?$8685$sFQex g$C$20629$sFQex g$x$12248$sFQex g$y$12249$sFQex) (g$assertion-violation$6456$sFQex g$C$20629$sFQex 'bound-identifier=? '"not an identifier" g$y$12249$sFQex)))) g$y$12249$sFQex) (g$assertion-violation$6456$sFQex g$C$20629$sFQex 'bound-identifier=? '"not an identifier" g$x$12248$sFQex)))) g$x$12248$sFQex)))))) (library-letrec*-identity 'g$bound-identifier=?$9065$sFQex))) (g$make-source-condition$9066$sFQex g$make-source-condition$12585$sFQex ((case-lambda ((g$C$21026$sFQex) (g$C$21026$sFQex (case-lambda ((g$C$20645$sFQex g$x$12250$sFQex) ((case-lambda ((g$C$20632$sFQex g$13128$12251$sFQex g$13130$12252$sFQex g$13129$12253$sFQex g$13127$12254$sFQex g$make-source-condition$12255$sFQex g$13125$12256$sFQex g$13126$12257$sFQex g$source-condition?$12258$sFQex g$source-filename$12259$sFQex g$source-character$12260$sFQex) (make-record-type-descriptor (case-lambda ((g$V$20633$sFQex) (begin (set! g$13128$12251$sFQex g$V$20633$sFQex) (begin (set! g$13130$12252$sFQex '#f) (make-record-constructor-descriptor (case-lambda ((g$V$20634$sFQex) (begin (set! g$13129$12253$sFQex g$V$20634$sFQex) (record-predicate (case-lambda ((g$V$20635$sFQex) (begin (set! g$13127$12254$sFQex g$V$20635$sFQex) (record-constructor (case-lambda ((g$V$20636$sFQex) (begin (set! g$make-source-condition$12255$sFQex g$V$20636$sFQex) (record-accessor (case-lambda ((g$V$20637$sFQex) (begin (set! g$13125$12256$sFQex g$V$20637$sFQex) (record-accessor (case-lambda ((g$V$20638$sFQex) (begin (set! g$13126$12257$sFQex g$V$20638$sFQex) (condition-predicate (case-lambda ((g$V$20639$sFQex) (begin (set! g$source-condition?$12258$sFQex g$V$20639$sFQex) (condition-accessor (case-lambda ((g$V$20640$sFQex) (begin (set! g$source-filename$12259$sFQex g$V$20640$sFQex) (condition-accessor (case-lambda ((g$V$20641$sFQex) (begin (set! g$source-character$12260$sFQex g$V$20641$sFQex) (pair? (case-lambda ((g$T$20642$sFQex) (if g$T$20642$sFQex (cdr (case-lambda ((g$V$20643$sFQex) (car (case-lambda ((g$V$20644$sFQex) (g$make-source-condition$12255$sFQex g$C$20632$sFQex g$V$20644$sFQex g$V$20643$sFQex))) g$x$12250$sFQex))) g$x$12250$sFQex) (condition g$C$20632$sFQex)))) g$x$12250$sFQex)))) g$13128$12251$sFQex g$13126$12257$sFQex)))) g$13128$12251$sFQex g$13125$12256$sFQex)))) g$13128$12251$sFQex)))) g$13128$12251$sFQex '1)))) g$13128$12251$sFQex '0)))) g$13129$12253$sFQex)))) g$13128$12251$sFQex)))) g$13128$12251$sFQex &condition-rcd g$13130$12252$sFQex))))) '&source-information &condition-rtd 'g$13131$sFQex '#f '#f '#((immutable file-name) (immutable character))))) g$C$20645$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$make-source-condition$9066$sFQex))) (g$extract-position-condition$9067$sFQex g$extract-position-condition$12586$sFQex ((case-lambda ((g$C$21027$sFQex) (g$C$21027$sFQex (case-lambda ((g$C$20646$sFQex g$x$12261$sFQex) (g$expression-position$9068$sFQex (case-lambda ((g$V$20647$sFQex) (g$make-source-condition$9066$sFQex g$C$20646$sFQex g$V$20647$sFQex))) g$x$12261$sFQex)))))) (library-letrec*-identity 'g$extract-position-condition$9067$sFQex))) (g$expression-position$9068$sFQex g$expression-position$12587$sFQex ((case-lambda ((g$C$21028$sFQex) (g$C$21028$sFQex (case-lambda ((g$C$20650$sFQex g$x$12262$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$20651$sFQex) (if g$T$20651$sFQex (g$stx-expr$8656$sFQex (case-lambda ((g$V$20652$sFQex) ((case-lambda ((g$C$20648$sFQex g$x$12263$sFQex) (annotation? (case-lambda ((g$T$20649$sFQex) (if g$T$20649$sFQex (annotation-source g$C$20648$sFQex g$x$12263$sFQex) (g$C$20648$sFQex '#f)))) g$x$12263$sFQex))) g$C$20650$sFQex g$V$20652$sFQex))) g$x$12262$sFQex) (g$C$20650$sFQex '#f)))) g$x$12262$sFQex)))))) (library-letrec*-identity 'g$expression-position$9068$sFQex))) (g$assertion-error$9069$sFQex g$assertion-error$12588$sFQex ((case-lambda ((g$C$21029$sFQex) (g$C$21029$sFQex (case-lambda ((g$C$20653$sFQex g$expr$12264$sFQex g$pos$12265$sFQex) (g$make-source-condition$9066$sFQex (case-lambda ((g$V$20654$sFQex) (list (case-lambda ((g$V$20655$sFQex) (g$make-irritants-condition$6602$sFQex (case-lambda ((g$V$20656$sFQex) (g$make-message-condition$6564$sFQex (case-lambda ((g$V$20657$sFQex) (g$make-who-condition$6610$sFQex (case-lambda ((g$V$20658$sFQex) (g$make-assertion-violation$6596$sFQex (case-lambda ((g$V$20659$sFQex) (condition (case-lambda ((g$V$20660$sFQex) (g$raise$6454$sFQex g$C$20653$sFQex g$V$20660$sFQex))) g$V$20659$sFQex g$V$20658$sFQex g$V$20657$sFQex g$V$20656$sFQex g$V$20654$sFQex)))))) 'assert))) '"assertion failed"))) g$V$20655$sFQex))) g$expr$12264$sFQex))) g$pos$12265$sFQex)))))) (library-letrec*-identity 'g$assertion-error$9069$sFQex))) (g$syntax-error$9070$sFQex g$syntax-error$12589$sFQex ((case-lambda ((g$C$21030$sFQex) (g$C$21030$sFQex (case-lambda ((g$C$20661$sFQex g$x$12266$sFQex . g$args$12267$sFQex) ((case-lambda ((g$J$20672$sFQex) (g$for-all$5678$sFQex (case-lambda ((g$V$20673$sFQex) (not (case-lambda ((g$T$20674$sFQex) (if g$T$20674$sFQex (g$assertion-violation$6456$sFQex g$J$20672$sFQex 'syntax-error '"invalid argument" g$args$12267$sFQex) (void g$J$20672$sFQex)))) g$V$20673$sFQex))) string? g$args$12267$sFQex))) (case-lambda (g$IGNORE$20662$sFQex (g$extract-trace$9071$sFQex (case-lambda ((g$V$20663$sFQex) (g$extract-position-condition$9067$sFQex (case-lambda ((g$V$20664$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20665$sFQex) (g$make-syntax-violation$6636$sFQex (case-lambda ((g$V$20666$sFQex) ((case-lambda ((g$J$20670$sFQex) (null? (case-lambda ((g$T$20671$sFQex) (if g$T$20671$sFQex (g$J$20670$sFQex '"invalid syntax") (apply g$J$20670$sFQex string-append g$args$12267$sFQex)))) g$args$12267$sFQex))) (case-lambda ((g$V$20667$sFQex) (g$make-message-condition$6564$sFQex (case-lambda ((g$V$20668$sFQex) (condition (case-lambda ((g$V$20669$sFQex) (g$raise$6454$sFQex g$C$20661$sFQex g$V$20669$sFQex))) g$V$20668$sFQex g$V$20666$sFQex g$V$20664$sFQex g$V$20663$sFQex))) g$V$20667$sFQex)))))) g$V$20665$sFQex '#f))) g$x$12266$sFQex))) g$x$12266$sFQex))) g$x$12266$sFQex))))))))) (library-letrec*-identity 'g$syntax-error$9070$sFQex))) (g$extract-trace$9071$sFQex g$extract-trace$12590$sFQex ((case-lambda ((g$C$21031$sFQex) (g$C$21031$sFQex (case-lambda ((g$C$20694$sFQex g$x$12268$sFQex) ((case-lambda ((g$C$20685$sFQex g$13155$12269$sFQex g$13157$12270$sFQex g$13156$12271$sFQex g$13154$12272$sFQex g$make-trace$12273$sFQex g$13153$12274$sFQex g$trace?$12275$sFQex g$trace-form$12276$sFQex) (make-record-type-descriptor (case-lambda ((g$V$20686$sFQex) (begin (set! g$13155$12269$sFQex g$V$20686$sFQex) (begin (set! g$13157$12270$sFQex '#f) (make-record-constructor-descriptor (case-lambda ((g$V$20687$sFQex) (begin (set! g$13156$12271$sFQex g$V$20687$sFQex) (record-predicate (case-lambda ((g$V$20688$sFQex) (begin (set! g$13154$12272$sFQex g$V$20688$sFQex) (record-constructor (case-lambda ((g$V$20689$sFQex) (begin (set! g$make-trace$12273$sFQex g$V$20689$sFQex) (record-accessor (case-lambda ((g$V$20690$sFQex) (begin (set! g$13153$12274$sFQex g$V$20690$sFQex) (condition-predicate (case-lambda ((g$V$20691$sFQex) (begin (set! g$trace?$12275$sFQex g$V$20691$sFQex) (condition-accessor (case-lambda ((g$V$20692$sFQex) (begin (set! g$trace-form$12276$sFQex g$V$20692$sFQex) ((case-lambda ((g$C$20684$sFQex g$f$12277$sFQex) ((case-lambda ((g$C$20676$sFQex g$f$20675$sFQex) (begin (set! g$f$12277$sFQex g$f$20675$sFQex) (g$C$20676$sFQex g$f$12277$sFQex)))) g$C$20684$sFQex (case-lambda ((g$C$20677$sFQex g$x$12278$sFQex) (g$stx?$8654$sFQex (case-lambda ((g$T$20678$sFQex) (if g$T$20678$sFQex (g$stx-ae*$8659$sFQex (case-lambda ((g$V$20679$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20680$sFQex) (g$make-trace$12273$sFQex (case-lambda ((g$V$20681$sFQex) (apply g$C$20677$sFQex condition g$V$20681$sFQex g$V$20680$sFQex))) g$x$12278$sFQex))) g$f$12277$sFQex g$V$20679$sFQex))) g$x$12278$sFQex) (annotation? (case-lambda ((g$T$20682$sFQex) (if g$T$20682$sFQex (g$make-stx$8655$sFQex (case-lambda ((g$V$20683$sFQex) (g$make-trace$12273$sFQex g$C$20677$sFQex g$V$20683$sFQex))) g$x$12278$sFQex '() '() '()) (condition g$C$20677$sFQex)))) g$x$12278$sFQex)))) g$x$12278$sFQex)))))) (case-lambda ((g$V$20693$sFQex) (g$V$20693$sFQex g$C$20685$sFQex g$x$12268$sFQex))) uninitialized)))) g$13155$12269$sFQex g$13153$12274$sFQex)))) g$13155$12269$sFQex)))) g$13155$12269$sFQex '0)))) g$13156$12271$sFQex)))) g$13155$12269$sFQex)))) g$13155$12269$sFQex &condition-rcd g$13157$12270$sFQex))))) '&trace &condition-rtd 'g$13158$sFQex '#f '#f '#((immutable form))))) g$C$20694$sFQex uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized uninitialized)))))) (library-letrec*-identity 'g$extract-trace$9071$sFQex))) (g$syntax-violation*$9072$sFQex g$syntax-violation*$12591$sFQex ((case-lambda ((g$C$21032$sFQex) (g$C$21032$sFQex (case-lambda ((g$C$20721$sFQex g$who$12279$sFQex g$msg$12280$sFQex g$form$12281$sFQex g$condition-object$12282$sFQex) ((case-lambda ((g$J$20728$sFQex) (string? (case-lambda ((g$V$20729$sFQex) (not (case-lambda ((g$T$20730$sFQex) (if g$T$20730$sFQex (g$assertion-violation$6456$sFQex g$J$20728$sFQex 'syntax-violation '"message is not a string" g$msg$12280$sFQex) (void g$J$20728$sFQex)))) g$V$20729$sFQex))) g$msg$12280$sFQex))) (case-lambda (g$IGNORE$20722$sFQex ((case-lambda ((g$J$20724$sFQex) (string? (case-lambda ((g$V$20725$sFQex) ((case-lambda ((g$C$20702$sFQex g$t$12284$sFQex) (if g$t$12284$sFQex (g$C$20702$sFQex g$t$12284$sFQex) (g$symbol?$6168$sFQex g$C$20702$sFQex g$who$12279$sFQex)))) (case-lambda ((g$T$20726$sFQex) (if g$T$20726$sFQex (g$J$20724$sFQex g$who$12279$sFQex) (not (case-lambda ((g$T$20727$sFQex) (if g$T$20727$sFQex ((case-lambda ((g$C$20719$sFQex g$t$12285$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20720$sFQex) ((case-lambda ((g$C$20716$sFQex g$ls/false$12286$sFQex) ((case-lambda ((g$J$20718$sFQex) (if g$ls/false$12286$sFQex (apply g$J$20718$sFQex (case-lambda ((g$C$20703$sFQex g$id$12287$sFQex) (g$id?$8682$sFQex g$C$20703$sFQex g$id$12287$sFQex))) g$ls/false$12286$sFQex) (g$J$20718$sFQex '#f)))) (case-lambda ((g$T$20717$sFQex) (if g$T$20717$sFQex (apply g$C$20716$sFQex (case-lambda ((g$C$20704$sFQex g$id$12288$sFQex) (g$syntax->datum$9076$sFQex g$C$20704$sFQex g$id$12288$sFQex))) g$ls/false$12286$sFQex) ((case-lambda ((g$C$20714$sFQex g$t$12289$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20715$sFQex) ((case-lambda ((g$C$20711$sFQex g$ls/false$12290$sFQex) ((case-lambda ((g$J$20713$sFQex) (if g$ls/false$12290$sFQex (apply g$J$20713$sFQex (case-lambda ((g$C$20705$sFQex g$id$12291$sFQex g$rest$12292$sFQex) (g$id?$8682$sFQex g$C$20705$sFQex g$id$12291$sFQex))) g$ls/false$12290$sFQex) (g$J$20713$sFQex '#f)))) (case-lambda ((g$T$20712$sFQex) (if g$T$20712$sFQex (apply g$C$20711$sFQex (case-lambda ((g$C$20706$sFQex g$id$12293$sFQex g$rest$12294$sFQex) (g$syntax->datum$9076$sFQex g$C$20706$sFQex g$id$12293$sFQex))) g$ls/false$12290$sFQex) ((case-lambda ((g$C$20709$sFQex g$t$12295$sFQex) (g$syntax-dispatch$8961$sFQex (case-lambda ((g$V$20710$sFQex) ((case-lambda ((g$C$20708$sFQex g$ls/false$12296$sFQex) (if g$ls/false$12296$sFQex (apply g$C$20708$sFQex (case-lambda ((g$C$20707$sFQex) (g$C$20707$sFQex '#f))) g$ls/false$12296$sFQex) (g$syntax-violation$9073$sFQex g$C$20708$sFQex '#f '"invalid syntax" g$t$12295$sFQex)))) g$C$20709$sFQex g$V$20710$sFQex))) g$t$12295$sFQex '_))) g$C$20711$sFQex g$t$12289$sFQex))))))) g$C$20714$sFQex g$V$20715$sFQex))) g$t$12289$sFQex '(any . any)))) g$C$20716$sFQex g$t$12285$sFQex))))))) g$C$20719$sFQex g$V$20720$sFQex))) g$t$12285$sFQex 'any))) g$J$20724$sFQex g$form$12281$sFQex) (g$assertion-violation$6456$sFQex g$J$20724$sFQex 'syntax-violation '"invalid who argument" g$who$12279$sFQex)))) g$who$12279$sFQex)))) g$V$20725$sFQex))) g$who$12279$sFQex))) (case-lambda ((g$V$20723$sFQex) ((case-lambda ((g$C$20695$sFQex g$who$12283$sFQex) (g$extract-trace$9071$sFQex (case-lambda ((g$V$20696$sFQex) (g$extract-position-condition$9067$sFQex (case-lambda ((g$V$20697$sFQex) (g$make-message-condition$6564$sFQex (case-lambda ((g$V$20698$sFQex) ((case-lambda ((g$J$20701$sFQex) (if g$who$12283$sFQex (g$make-who-condition$6610$sFQex g$J$20701$sFQex g$who$12283$sFQex) (condition g$J$20701$sFQex)))) (case-lambda ((g$V$20699$sFQex) (condition (case-lambda ((g$V$20700$sFQex) (g$raise$6454$sFQex g$C$20695$sFQex g$V$20700$sFQex))) g$V$20699$sFQex g$V$20698$sFQex g$condition-object$12282$sFQex g$V$20697$sFQex g$V$20696$sFQex)))))) g$msg$12280$sFQex))) g$form$12281$sFQex))) g$form$12281$sFQex))) g$C$20721$sFQex g$V$20723$sFQex)))))))))))) (library-letrec*-identity 'g$syntax-violation*$9072$sFQex))) (g$syntax-violation$9073$sFQex g$syntax-violation$12592$sFQex ((case-lambda ((g$C$21033$sFQex) (g$C$21033$sFQex (case-lambda ((g$C$20731$sFQex g$who$12297$sFQex g$msg$12298$sFQex g$form$12299$sFQex) (g$syntax-violation$9073$sFQex g$C$20731$sFQex g$who$12297$sFQex g$msg$12298$sFQex g$form$12299$sFQex '#f)) ((g$C$20731$sFQex g$who$12300$sFQex g$msg$12301$sFQex g$form$12302$sFQex g$subform$12303$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20732$sFQex) (g$syntax->datum$9076$sFQex (case-lambda ((g$V$20733$sFQex) (g$make-syntax-violation$6636$sFQex (case-lambda ((g$V$20734$sFQex) (g$syntax-violation*$9072$sFQex g$C$20731$sFQex g$who$12300$sFQex g$msg$12301$sFQex g$form$12302$sFQex g$V$20734$sFQex))) g$V$20733$sFQex g$V$20732$sFQex))) g$form$12302$sFQex))) g$subform$12303$sFQex)))))) (library-letrec*-identity 'g$syntax-violation$9073$sFQex))) (g$identifier?$9074$sFQex g$identifier?$12593$sFQex ((case-lambda ((g$C$21034$sFQex) (g$C$21034$sFQex (case-lambda ((g$C$20735$sFQex g$x$12304$sFQex) (g$id?$8682$sFQex g$C$20735$sFQex g$x$12304$sFQex)))))) (library-letrec*-identity 'g$identifier?$9074$sFQex))) (g$datum->syntax$9075$sFQex g$datum->syntax$12594$sFQex ((case-lambda ((g$C$21035$sFQex) (g$C$21035$sFQex (case-lambda ((g$C$20736$sFQex g$id$12305$sFQex g$datum$12306$sFQex) (g$id?$8682$sFQex (case-lambda ((g$T$20737$sFQex) (if g$T$20737$sFQex (g$datum->stx$8665$sFQex g$C$20736$sFQex g$id$12305$sFQex g$datum$12306$sFQex) (g$assertion-violation$6456$sFQex g$C$20736$sFQex 'datum->syntax '"not an identifier" g$id$12305$sFQex)))) g$id$12305$sFQex)))))) (library-letrec*-identity 'g$datum->syntax$9075$sFQex))) (g$syntax->datum$9076$sFQex g$syntax->datum$12595$sFQex ((case-lambda ((g$C$21036$sFQex) (g$C$21036$sFQex (case-lambda ((g$C$20738$sFQex g$x$12307$sFQex) (g$stx->datum$8693$sFQex g$C$20738$sFQex g$x$12307$sFQex)))))) (library-letrec*-identity 'g$syntax->datum$9076$sFQex))) (g$compile-r6rs-top-level$9077$sFQex g$compile-r6rs-top-level$12596$sFQex ((case-lambda ((g$C$21037$sFQex) (g$C$21037$sFQex (case-lambda ((g$C$20745$sFQex g$x*$12308$sFQex) (call-with-values g$C$20745$sFQex (case-lambda ((g$C$20739$sFQex) (g$top-level-expander$9021$sFQex g$C$20739$sFQex g$x*$12308$sFQex))) (case-lambda ((g$C$20744$sFQex g$lib*$12311$sFQex g$invoke-code$12312$sFQex) ((case-lambda ((g$C$20743$sFQex g$invoke-code$12313$sFQex g$lib*$12314$sFQex) (g$C$20743$sFQex (case-lambda ((g$C$20740$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$20741$sFQex (g$expanded->core$8227$sFQex (case-lambda ((g$V$20742$sFQex) (eval-core g$C$20740$sFQex g$V$20742$sFQex))) g$invoke-code$12313$sFQex))) g$invoke-library$8489$sFQex g$lib*$12314$sFQex)))))) g$C$20744$sFQex g$invoke-code$12312$sFQex g$lib*$12311$sFQex))))))))) (library-letrec*-identity 'g$compile-r6rs-top-level$9077$sFQex))) (g$pre-compile-r6rs-top-level$9078$sFQex g$pre-compile-r6rs-top-level$12597$sFQex ((case-lambda ((g$C$21038$sFQex) (g$C$21038$sFQex (case-lambda ((g$C$20751$sFQex g$x*$12315$sFQex) (call-with-values g$C$20751$sFQex (case-lambda ((g$C$20746$sFQex) (g$top-level-expander$9021$sFQex g$C$20746$sFQex g$x*$12315$sFQex))) (case-lambda ((g$C$20750$sFQex g$lib*$12318$sFQex g$invoke-code$12319$sFQex) ((case-lambda ((g$C$20747$sFQex g$invoke-code$12320$sFQex g$lib*$12321$sFQex) (g$for-each$5681$sFQex (case-lambda (g$IGNORE$20748$sFQex (g$expanded->core$8227$sFQex (case-lambda ((g$V$20749$sFQex) (compile-core g$C$20747$sFQex g$V$20749$sFQex))) g$invoke-code$12320$sFQex))) g$invoke-library$8489$sFQex g$lib*$12321$sFQex))) g$C$20750$sFQex g$invoke-code$12319$sFQex g$lib*$12318$sFQex))))))))) (library-letrec*-identity 'g$pre-compile-r6rs-top-level$9078$sFQex))) (g$new-interaction-environment$9079$sFQex g$new-interaction-environment$12598$sFQex ((case-lambda ((g$C$21039$sFQex) (g$C$21039$sFQex (case-lambda ((g$C$20762$sFQex) (g$make-empty-rib$8642$sFQex (case-lambda ((g$V$20763$sFQex) (g$find-library-by-name$8482$sFQex (case-lambda ((g$V$20764$sFQex) ((case-lambda ((g$C$20759$sFQex g$lib$12322$sFQex g$rib$12323$sFQex) (g$library-subst$8446$sFQex (case-lambda ((g$V$20760$sFQex) ((case-lambda ((g$C$20753$sFQex g$subst$12324$sFQex) (g$map$5680$sFQex (case-lambda ((g$V$20754$sFQex) (g$set-rib-sym*!$8637$sFQex (case-lambda (g$IGNORE$20755$sFQex (g$map$5680$sFQex (case-lambda ((g$V$20756$sFQex) (g$set-rib-mark**!$8638$sFQex (case-lambda (g$IGNORE$20757$sFQex (g$map$5680$sFQex (case-lambda ((g$V$20758$sFQex) (g$set-rib-label*!$8639$sFQex g$C$20753$sFQex g$rib$12323$sFQex g$V$20758$sFQex))) cdr g$subst$12324$sFQex))) g$rib$12323$sFQex g$V$20756$sFQex))) (case-lambda ((g$C$20752$sFQex g$x$12325$sFQex) (g$C$20752$sFQex g$top-mark*$8619$sFQex))) g$subst$12324$sFQex))) g$rib$12323$sFQex g$V$20754$sFQex))) car g$subst$12324$sFQex))) (case-lambda (g$IGNORE$20761$sFQex (g$make-interaction-env$9038$sFQex g$C$20759$sFQex g$rib$12323$sFQex '() '()))) g$V$20760$sFQex))) g$lib$12322$sFQex))) g$C$20762$sFQex g$V$20764$sFQex g$V$20763$sFQex))) '(ironscheme)))))))))) (library-letrec*-identity 'g$new-interaction-environment$9079$sFQex))) (g$interaction-environment$9080$sFQex g$interaction-environment$12599$sFQex ((case-lambda ((g$C$21040$sFQex) ((case-lambda ((g$C$20768$sFQex g$e$12326$sFQex) (g$C$20768$sFQex (case-lambda ((g$C$20767$sFQex) ((case-lambda ((g$C$20765$sFQex g$t$12327$sFQex) (if g$t$12327$sFQex (g$C$20765$sFQex g$t$12327$sFQex) (g$new-interaction-environment$9079$sFQex (case-lambda ((g$V$20766$sFQex) (begin (set! g$e$12326$sFQex g$V$20766$sFQex) (g$C$20765$sFQex g$e$12326$sFQex)))))))) g$C$20767$sFQex g$e$12326$sFQex)))))) g$C$21040$sFQex '#f))) (library-letrec*-identity 'g$interaction-environment$9080$sFQex))) (g$top-level-context$9081$sFQex g$top-level-context$12600$sFQex ((case-lambda ((g$C$21041$sFQex) (g$make-parameter$7979$sFQex g$C$21041$sFQex '#f))) (library-letrec*-identity 'g$top-level-context$9081$sFQex)))) (g$current-library-expander$8479$sFQex identity-for-cps g$library-expander$9057$sFQex))(library-letrec* (psyntax primlocs) () (g$current-primitive-locations$8224$sFQex (case-lambda (g$IGNORE$21045$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21046$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21047$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21048$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21049$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21050$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21051$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21052$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21053$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21054$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21055$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21056$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21057$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21058$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21059$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21060$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21061$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21062$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21063$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21064$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21065$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21066$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21067$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21068$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21069$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21070$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21071$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21072$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21073$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21074$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21075$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21076$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21077$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21078$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21079$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21080$sFQex (g$install-library$8487$sFQex (case-lambda (g$IGNORE$21081$sFQex (g$install-library$8487$sFQex identity-for-cps 'g$13826$sFQex '(psyntax system $bootstrap) '() '() '() '() '((compile-core . g$13709$sFQex) (eval-core . g$13708$sFQex) (set-symbol-value! . g$13707$sFQex) (symbol-value . g$13706$sFQex) (gensym . g$13703$sFQex) (void . g$13702$sFQex)) '() values values '#f '#f '#f '#f))) 'g$13825$sFQex '(psyntax system $all) '() '() '() '() '((ellipsis-map . g$10095$sFQex) (&no-nans-rcd . g$13789$sFQex) (&no-nans-rtd . g$13788$sFQex) (&no-infinities-rcd . g$13787$sFQex) (&no-infinities-rtd . g$13786$sFQex) (&i/o-encoding-rcd . g$13785$sFQex) (&i/o-encoding-rtd . g$13784$sFQex) (&i/o-decoding-rcd . g$13783$sFQex) (&i/o-decoding-rtd . g$13782$sFQex) (&i/o-port-rcd . g$13781$sFQex) (&i/o-port-rtd . g$13780$sFQex) (&i/o-file-does-not-exist-rcd . g$13779$sFQex) (&i/o-file-does-not-exist-rtd . g$13778$sFQex) (&i/o-file-already-exists-rcd . g$13777$sFQex) (&i/o-file-already-exists-rtd . g$13776$sFQex) (&i/o-file-is-read-only-rcd . g$13775$sFQex) (&i/o-file-is-read-only-rtd . g$13774$sFQex) (&i/o-file-protection-rcd . g$13773$sFQex) (&i/o-file-protection-rtd . g$13772$sFQex) (&i/o-filename-rcd . g$13771$sFQex) (&i/o-filename-rtd . g$13770$sFQex) (&i/o-invalid-position-rcd . g$13769$sFQex) (&i/o-invalid-position-rtd . g$13768$sFQex) (&i/o-write-rcd . g$13767$sFQex) (&i/o-write-rtd . g$13766$sFQex) (&i/o-read-rcd . g$13765$sFQex) (&i/o-read-rtd . g$13764$sFQex) (&i/o-rcd . g$13763$sFQex) (&i/o-rtd . g$13762$sFQex) (&undefined-rcd . g$13761$sFQex) (&undefined-rtd . g$13760$sFQex) (&syntax-rcd . g$13759$sFQex) (&syntax-rtd . g$13758$sFQex) (&lexical-rcd . g$13757$sFQex) (&lexical-rtd . g$13756$sFQex) (&implementation-restriction-rcd . g$13755$sFQex) (&implementation-restriction-rtd . g$13754$sFQex) (&non-continuable-rcd . g$13753$sFQex) (&non-continuable-rtd . g$13752$sFQex) (&who-rcd . g$13751$sFQex) (&who-rtd . g$13750$sFQex) (&irritants-rcd . g$13749$sFQex) (&irritants-rtd . g$13748$sFQex) (&assertion-rcd . g$13747$sFQex) (&assertion-rtd . g$13746$sFQex) (&violation-rcd . g$13745$sFQex) (&violation-rtd . g$13744$sFQex) (&error-rcd . g$13743$sFQex) (&error-rtd . g$13742$sFQex) (&serious-rcd . g$13741$sFQex) (&serious-rtd . g$13740$sFQex) (&warning-rcd . g$13739$sFQex) (&warning-rtd . g$13738$sFQex) (&message-rcd . g$13737$sFQex) (&message-rtd . g$13736$sFQex) (&condition-rcd . g$13735$sFQex) (&condition-rtd . g$13734$sFQex) (library-letrec* . g$13733$sFQex) (annotation-stripped . g$13732$sFQex) (annotation-source . g$13731$sFQex) (annotation-expression . g$13730$sFQex) (annotation? . g$13729$sFQex) (read-annotated . g$13728$sFQex) (tanh . g$13727$sFQex) (cosh . g$13726$sFQex) (sinh . g$13725$sFQex) (make-guid . g$13724$sFQex) (unspecified? . g$13723$sFQex) (make-list . g$6663$sFQex) (last-pair . g$6662$sFQex) (load-r5rs . g$13722$sFQex) (license . g$13721$sFQex) (stacktrace . g$13720$sFQex) (ironscheme-build . g$13226$sFQex) (define-clr-class-internal . g$13719$sFQex) (clr-field-set!-internal . g$13718$sFQex) (clr-field-get-internal . g$13717$sFQex) (clr-cast-internal . g$13716$sFQex) (clr-call-internal . g$13715$sFQex) (clr-new-internal . g$13714$sFQex) (clr-new-array-internal . g$13713$sFQex) (clr-is-internal . g$13712$sFQex) (clr-reference-internal . g$13711$sFQex) (clr-using-internal . g$13710$sFQex) (syntax-error . g$10220$sFQex) (syntax-dispatch . g$10090$sFQex) (compile-core . g$13709$sFQex) (eval-core . g$13708$sFQex) (set-symbol-value! . g$13707$sFQex) (symbol-value . g$13706$sFQex) (symbol-bound? . g$13705$sFQex) (ungensym . g$13704$sFQex) (gensym . g$13703$sFQex) (void . g$13702$sFQex) (load-serialized-library . g$13701$sFQex) (serialize-library . g$13700$sFQex) (compile-system-libraries . g$13229$sFQex) (compile->closure . g$13231$sFQex) (compile . g$13230$sFQex) (load . g$13225$sFQex) (string-normalize . g$13699$sFQex) (interaction-environment . g$10230$sFQex) (char-ready? . g$13698$sFQex) (string-upcase . g$13697$sFQex) (string-titlecase . g$13696$sFQex) (string-normalize-nfkd . g$7965$sFQex) (string-normalize-nfkc . g$7964$sFQex) (string-normalize-nfd . g$7963$sFQex) (string-normalize-nfc . g$7962$sFQex) (string-foldcase . g$13695$sFQex) (string-downcase . g$13694$sFQex) (string-ci>? . g$7920$sFQex) (string-ci>=? . g$7922$sFQex) (string-ci=? . g$7918$sFQex) (string-ci<? . g$7919$sFQex) (string-ci<=? . g$7921$sFQex) (char-whitespace? . g$13693$sFQex) (char-upper-case? . g$13692$sFQex) (char-title-case? . g$13691$sFQex) (char-numeric? . g$13690$sFQex) (char-lower-case? . g$13689$sFQex) (char-general-category . g$13688$sFQex) (char-upcase . g$13687$sFQex) (char-titlecase . g$13686$sFQex) (char-foldcase . g$13685$sFQex) (char-downcase . g$13684$sFQex) (char-ci>? . g$7959$sFQex) (char-ci>=? . g$7961$sFQex) (char-ci=? . g$7957$sFQex) (char-ci<? . g$7958$sFQex) (char-ci<=? . g$7960$sFQex) (char-alphabetic? . g$13683$sFQex) (variable-transformer-procedure . g$9827$sFQex) (variable-transformer? . g$9826$sFQex) (make-variable-transformer . g$9824$sFQex) (identifier? . g$10224$sFQex) (generate-temporaries . g$10213$sFQex) (free-identifier=? . g$10214$sFQex) (syntax->datum . g$10226$sFQex) (datum->syntax . g$10225$sFQex) (bound-identifier=? . g$10215$sFQex) (record-type-descriptor? . g$13682$sFQex) (record-predicate . g$13681$sFQex) (record-mutator . g$13680$sFQex) (record-constructor . g$13679$sFQex) (record-accessor . g$13678$sFQex) (make-record-type-descriptor . g$13677$sFQex) (make-record-constructor-descriptor . g$13676$sFQex) (record? . g$13675$sFQex) (record-type-uid . g$13674$sFQex) (record-type-sealed? . g$13673$sFQex) (record-type-parent . g$13672$sFQex) (record-type-opaque? . g$13671$sFQex) (record-type-name . g$13670$sFQex) (record-type-generative? . g$13669$sFQex) (record-type-field-names . g$13668$sFQex) (record-rtd . g$13667$sFQex) (record-field-mutable? . g$13666$sFQex) (delete-file . g$7471$sFQex) (file-exists? . g$7470$sFQex) (vector-sort! . g$13665$sFQex) (vector-sort . g$13664$sFQex) (list-sort . g$7860$sFQex) (symbol-hash . g$13663$sFQex) (string-ci-hash . g$13662$sFQex) (string-hash . g$13661$sFQex) (equal-hash . g$13660$sFQex) (hashtable-equivalence-function . g$13659$sFQex) (make-hashtable . g$13658$sFQex) (hashtable-hash-function . g$13657$sFQex) (make-eqv-hashtable . g$7439$sFQex) (make-eq-hashtable . g$7438$sFQex) (hashtable? . g$13656$sFQex) (hashtable-update! . g$7445$sFQex) (hashtable-size . g$7440$sFQex) (hashtable-set! . g$7442$sFQex) (hashtable-ref . g$7441$sFQex) (hashtable-mutable? . g$13655$sFQex) (hashtable-keys . g$13654$sFQex) (hashtable-entries . g$13653$sFQex) (hashtable-delete! . g$7443$sFQex) (hashtable-copy . g$13652$sFQex) (hashtable-contains? . g$7444$sFQex) (hashtable-clear! . g$7446$sFQex) (call-with-output-file . g$8510$sFQex) (call-with-input-file . g$8509$sFQex) (write-char . g$8491$sFQex) (write . g$13651$sFQex) (with-output-to-file . g$8508$sFQex) (with-input-from-file . g$8507$sFQex) (read-char . g$8490$sFQex) (read . g$13650$sFQex) (peek-char . g$8489$sFQex) (open-output-file . g$13649$sFQex) (open-input-file . g$13648$sFQex) (newline . g$8511$sFQex) (display . g$13647$sFQex) (close-output-port . g$13646$sFQex) (close-input-port . g$13645$sFQex) (eof-object? . g$13644$sFQex) (eof-object . g$13643$sFQex) (current-error-port . g$13642$sFQex) (current-output-port . g$13641$sFQex) (current-input-port . g$13640$sFQex) (output-port? . g$13639$sFQex) (input-port? . g$13638$sFQex) (utf-8-codec . g$13637$sFQex) (utf-16-codec . g$13636$sFQex) (transcoder-error-handling-mode . g$13635$sFQex) (transcoder-eol-style . g$13634$sFQex) (transcoder-codec . g$13633$sFQex) (transcoded-port . g$13632$sFQex) (textual-port? . g$13631$sFQex) (string->bytevector . g$13630$sFQex) (standard-output-port . g$13629$sFQex) (standard-input-port . g$13628$sFQex) (standard-error-port . g$13627$sFQex) (set-port-position! . g$13626$sFQex) (put-u8 . g$13625$sFQex) (put-string . g$13624$sFQex) (put-datum . g$8469$sFQex) (put-char . g$13623$sFQex) (put-bytevector . g$13622$sFQex) (port? . g$8474$sFQex) (port-transcoder . g$13621$sFQex) (port-position . g$13620$sFQex) (port-has-set-port-position!? . g$13619$sFQex) (port-has-port-position? . g$13618$sFQex) (port-eof? . g$13617$sFQex) (output-port-buffer-mode . g$13616$sFQex) (open-string-output-port . g$8473$sFQex) (open-string-input-port . g$13615$sFQex) (open-file-output-port . g$13614$sFQex) (open-file-input/output-port . g$13613$sFQex) (open-file-input-port . g$13612$sFQex) (open-bytevector-output-port . g$13611$sFQex) (open-bytevector-input-port . g$13610$sFQex) (native-transcoder . g$13609$sFQex) (native-eol-style . g$13608$sFQex) (make-transcoder . g$13607$sFQex) (latin-1-codec . g$13606$sFQex) (make-i/o-write-error . g$8327$sFQex) (make-i/o-read-error . g$8313$sFQex) (make-i/o-port-error . g$8432$sFQex) (make-i/o-invalid-position-error . g$8342$sFQex) (make-i/o-filename-error . g$8359$sFQex) (make-i/o-file-protection-error . g$8375$sFQex) (make-i/o-file-is-read-only-error . g$8389$sFQex) (make-i/o-file-does-not-exist-error . g$8417$sFQex) (make-i/o-file-already-exists-error . g$8403$sFQex) (make-i/o-error . g$8299$sFQex) (make-i/o-encoding-error . g$8463$sFQex) (make-i/o-decoding-error . g$8448$sFQex) (make-custom-textual-output-port . g$13605$sFQex) (make-custom-textual-input/output-port . g$13604$sFQex) (make-custom-textual-input-port . g$13603$sFQex) (make-custom-binary-output-port . g$13602$sFQex) (make-custom-binary-input/output-port . g$13601$sFQex) (make-custom-binary-input-port . g$13600$sFQex) (make-bytevector . g$13599$sFQex) (lookahead-u8 . g$13598$sFQex) (lookahead-char . g$13597$sFQex) (i/o-write-error? . g$8328$sFQex) (i/o-read-error? . g$8314$sFQex) (i/o-port-error? . g$8434$sFQex) (i/o-invalid-position-error? . g$8344$sFQex) (i/o-error-position . g$8345$sFQex) (i/o-filename-error? . g$8361$sFQex) (i/o-file-protection-error? . g$8376$sFQex) (i/o-file-is-read-only-error? . g$8390$sFQex) (i/o-file-does-not-exist-error? . g$8418$sFQex) (i/o-file-already-exists-error? . g$8404$sFQex) (i/o-error? . g$8300$sFQex) (i/o-error-port . g$8435$sFQex) (i/o-error-filename . g$8362$sFQex) (i/o-encoding-error? . g$8465$sFQex) (i/o-encoding-error-char . g$8466$sFQex) (i/o-decoding-error? . g$8449$sFQex) (get-u8 . g$13596$sFQex) (get-string-n! . g$13595$sFQex) (get-string-n . g$13594$sFQex) (get-string-all . g$13593$sFQex) (get-line . g$13592$sFQex) (get-datum . g$8470$sFQex) (get-char . g$13591$sFQex) (get-bytevector-some . g$13590$sFQex) (get-bytevector-n! . g$13589$sFQex) (get-bytevector-n . g$13588$sFQex) (get-bytevector-all . g$13587$sFQex) (flush-output-port . g$13586$sFQex) (close-port . g$13585$sFQex) (call-with-string-output-port . g$8475$sFQex) (call-with-port . g$8476$sFQex) (call-with-bytevector-output-port . g$13584$sFQex) (bytevector->string . g$13583$sFQex) (buffer-mode? . g$13582$sFQex) (binary-port? . g$13581$sFQex) (scheme-report-environment . g$10203$sFQex) (quotient . g$7839$sFQex) (null-environment . g$10202$sFQex) (remainder . g$7840$sFQex) (modulo . g$7841$sFQex) (inexact->exact . g$7836$sFQex) (force . g$7843$sFQex) (exact->inexact . g$7837$sFQex) (exit . g$13580$sFQex) (command-line . g$13222$sFQex) (string-fill! . g$13579$sFQex) (string-set! . g$13578$sFQex) (set-cdr! . g$13577$sFQex) (set-car! . g$13576$sFQex) (remove . g$6685$sFQex) (remv . g$6686$sFQex) (remp . g$6666$sFQex) (remq . g$6687$sFQex) (partition . g$6665$sFQex) (memv . g$6673$sFQex) (memq . g$6672$sFQex) (memp . g$6675$sFQex) (member . g$6674$sFQex) (exists . g$6679$sFQex) (for-all . g$6678$sFQex) (fold-right . g$6684$sFQex) (fold-left . g$6683$sFQex) (find . g$6664$sFQex) (filter . g$6667$sFQex) (cons* . g$6682$sFQex) (assv . g$6669$sFQex) (assq . g$6668$sFQex) (assp . g$6671$sFQex) (assoc . g$6670$sFQex) (with-exception-handler . g$7592$sFQex) (raise-continuable . g$7595$sFQex) (raise . g$7594$sFQex) (eval . g$10205$sFQex) (environment . g$10201$sFQex) (make-enumeration . g$8575$sFQex) (enum-set=? . g$8582$sFQex) (enum-set-universe . g$8576$sFQex) (enum-set-union . g$8583$sFQex) (enum-set-subset? . g$8581$sFQex) (enum-set-projection . g$8587$sFQex) (enum-set-member? . g$8580$sFQex) (enum-set-intersection . g$8584$sFQex) (enum-set-indexer . g$8577$sFQex) (enum-set-difference . g$8585$sFQex) (enum-set-constructor . g$8578$sFQex) (enum-set-complement . g$8586$sFQex) (enum-set->list . g$8579$sFQex) (who-condition? . g$7748$sFQex) (warning? . g$7659$sFQex) (violation? . g$7701$sFQex) (undefined-violation? . g$7825$sFQex) (syntax-violation? . g$7809$sFQex) (syntax-violation-subform . g$7811$sFQex) (syntax-violation-form . g$7810$sFQex) (syntax-violation . g$10223$sFQex) (simple-conditions . g$13575$sFQex) (serious-condition? . g$7673$sFQex) (non-continuable-violation? . g$7763$sFQex) (message-condition? . g$7644$sFQex) (make-who-condition . g$7746$sFQex) (make-warning . g$7658$sFQex) (make-violation . g$7700$sFQex) (make-undefined-violation . g$7824$sFQex) (make-syntax-violation . g$7806$sFQex) (make-serious-condition . g$7672$sFQex) (make-non-continuable-violation . g$7762$sFQex) (make-message-condition . g$7642$sFQex) (make-lexical-violation . g$7790$sFQex) (make-irritants-condition . g$7729$sFQex) (make-implementation-restriction-violation . g$7776$sFQex) (make-error . g$7686$sFQex) (make-assertion-violation . g$7714$sFQex) (lexical-violation? . g$7791$sFQex) (irritants-condition? . g$7731$sFQex) (implementation-restriction-violation? . g$7777$sFQex) (error? . g$7687$sFQex) (condition-who . g$7749$sFQex) (condition-predicate . g$13574$sFQex) (condition-message . g$7645$sFQex) (condition-irritants . g$7732$sFQex) (condition-accessor . g$13573$sFQex) (condition . g$13572$sFQex) (assertion-violation? . g$7715$sFQex) (condition? . g$13571$sFQex) (utf32->string . g$13570$sFQex) (utf16->string . g$13569$sFQex) (utf8->string . g$13568$sFQex) (uint-list->bytevector . g$13567$sFQex) (u8-list->bytevector . g$13566$sFQex) (string->utf8 . g$13565$sFQex) (string->utf32 . g$13564$sFQex) (string->utf16 . g$13563$sFQex) (sint-list->bytevector . g$13562$sFQex) (native-endianness . g$7477$sFQex) (bytevector? . g$7105$sFQex) (bytevector=? . g$13561$sFQex) (bytevector-uint-set! . g$13560$sFQex) (bytevector-uint-ref . g$13559$sFQex) (bytevector-u8-set! . g$13558$sFQex) (bytevector-u8-ref . g$13557$sFQex) (bytevector-u64-set! . g$7498$sFQex) (bytevector-u64-ref . g$7494$sFQex) (bytevector-u64-native-set! . g$7500$sFQex) (bytevector-u64-native-ref . g$7496$sFQex) (bytevector-u32-set! . g$7490$sFQex) (bytevector-u32-ref . g$7486$sFQex) (bytevector-u32-native-set! . g$7492$sFQex) (bytevector-u32-native-ref . g$7488$sFQex) (bytevector-u16-set! . g$7482$sFQex) (bytevector-u16-ref . g$7478$sFQex) (bytevector-u16-native-set! . g$7484$sFQex) (bytevector-u16-native-ref . g$7480$sFQex) (bytevector-sint-set! . g$13556$sFQex) (bytevector-sint-ref . g$13555$sFQex) (bytevector-s8-set! . g$13554$sFQex) (bytevector-s8-ref . g$13553$sFQex) (bytevector-s64-set! . g$7499$sFQex) (bytevector-s64-ref . g$7495$sFQex) (bytevector-s64-native-set! . g$7501$sFQex) (bytevector-s64-native-ref . g$7497$sFQex) (bytevector-s32-set! . g$7491$sFQex) (bytevector-s32-ref . g$7487$sFQex) (bytevector-s32-native-set! . g$7493$sFQex) (bytevector-s32-native-ref . g$7489$sFQex) (bytevector-s16-set! . g$7483$sFQex) (bytevector-s16-ref . g$7479$sFQex) (bytevector-s16-native-set! . g$7485$sFQex) (bytevector-s16-native-ref . g$7481$sFQex) (bytevector-length . g$13552$sFQex) (bytevector-ieee-single-set! . g$13551$sFQex) (bytevector-ieee-single-ref . g$13550$sFQex) (bytevector-ieee-single-native-set! . g$7504$sFQex) (bytevector-ieee-single-native-ref . g$7502$sFQex) (bytevector-ieee-double-set! . g$13549$sFQex) (bytevector-ieee-double-ref . g$13548$sFQex) (bytevector-ieee-double-native-set! . g$7505$sFQex) (bytevector-ieee-double-native-ref . g$7503$sFQex) (bytevector-fill! . g$13547$sFQex) (bytevector-copy! . g$13546$sFQex) (bytevector-copy . g$13545$sFQex) (bytevector->uint-list . g$13544$sFQex) (bytevector->u8-list . g$13543$sFQex) (bytevector->sint-list . g$13542$sFQex) (no-nans-violation? . g$8212$sFQex) (no-infinities-violation? . g$8198$sFQex) (make-no-nans-violation . g$8211$sFQex) (make-no-infinities-violation . g$8197$sFQex) (real->flonum . g$13541$sFQex) (flzero? . g$8180$sFQex) (fltruncate . g$8175$sFQex) (fltan . g$8165$sFQex) (flsqrt . g$8170$sFQex) (flsin . g$8163$sFQex) (flround . g$8176$sFQex) (flpositive? . g$8178$sFQex) (flonum? . g$7110$sFQex) (flodd? . g$8182$sFQex) (flnumerator . g$13540$sFQex) (flnegative? . g$8179$sFQex) (flnan? . g$8162$sFQex) (flmod0 . g$8158$sFQex) (flmod . g$8157$sFQex) (flmin . g$8184$sFQex) (flmax . g$8183$sFQex) (fllog . g$8169$sFQex) (flinteger? . g$8159$sFQex) (flinfinite? . g$8161$sFQex) (flfloor . g$8174$sFQex) (flfinite? . g$8160$sFQex) (flexpt . g$8172$sFQex) (flexp . g$8171$sFQex) (fleven? . g$8181$sFQex) (fldiv0-and-mod0 . g$8154$sFQex) (fldiv0 . g$8156$sFQex) (fldiv-and-mod . g$8153$sFQex) (fldiv . g$8155$sFQex) (fldenominator . g$13539$sFQex) (flcos . g$8164$sFQex) (flceiling . g$8173$sFQex) (flatan . g$8168$sFQex) (flasin . g$8166$sFQex) (flacos . g$8167$sFQex) (flabs . g$8177$sFQex) (fl>? . g$13538$sFQex) (fl>=? . g$13537$sFQex) (fl=? . g$13536$sFQex) (fl<? . g$13535$sFQex) (fl<=? . g$13534$sFQex) (fl/ . g$13533$sFQex) (fl- . g$13532$sFQex) (fl+ . g$13531$sFQex) (fl* . g$13530$sFQex) (fixnum->flonum . g$13529$sFQex) (fxzero? . g$8061$sFQex) (fxxor . g$13528$sFQex) (fxrotate-bit-field . g$8075$sFQex) (fxreverse-bit-field . g$13527$sFQex) (fxpositive? . g$8059$sFQex) (fxodd? . g$8063$sFQex) (fxnot . g$13526$sFQex) (fxnegative? . g$8060$sFQex) (fxmod0 . g$8058$sFQex) (fxmod . g$8057$sFQex) (fxmin . g$8065$sFQex) (fxmax . g$8064$sFQex) (fxlength . g$13525$sFQex) (fxior . g$13524$sFQex) (fxif . g$8069$sFQex) (fxfirst-bit-set . g$13523$sFQex) (fxeven? . g$8062$sFQex) (fxdiv0-and-mod0 . g$13522$sFQex) (fxdiv0 . g$8056$sFQex) (fxdiv-and-mod . g$13521$sFQex) (fxdiv . g$8055$sFQex) (fxcopy-bit-field . g$8072$sFQex) (fxcopy-bit . g$8070$sFQex) (fxbit-set? . g$13520$sFQex) (fxbit-field . g$8071$sFQex) (fxbit-count . g$13519$sFQex) (fxarithmetic-shift-right . g$8074$sFQex) (fxarithmetic-shift-left . g$8073$sFQex) (fxarithmetic-shift . g$13518$sFQex) (fxand . g$13517$sFQex) (fx>? . g$13516$sFQex) (fx>=? . g$13515$sFQex) (fx=? . g$13514$sFQex) (fx<? . g$13513$sFQex) (fx<=? . g$13512$sFQex) (fx-/carry . g$8067$sFQex) (fx- . g$13511$sFQex) (fx+/carry . g$8068$sFQex) (fx+ . g$13510$sFQex) (fx*/carry . g$8066$sFQex) (fx* . g$13509$sFQex) (greatest-fixnum . g$13508$sFQex) (least-fixnum . g$13507$sFQex) (fixnum-width . g$7111$sFQex) (fixnum? . g$7109$sFQex) (bitwise-rotate-bit-field . g$8029$sFQex) (bitwise-reverse-bit-field . g$13506$sFQex) (bitwise-length . g$13505$sFQex) (bitwise-if . g$8023$sFQex) (bitwise-first-bit-set . g$13504$sFQex) (bitwise-copy-bit-field . g$8026$sFQex) (bitwise-copy-bit . g$8024$sFQex) (bitwise-bit-set? . g$13503$sFQex) (bitwise-bit-field . g$8025$sFQex) (bitwise-bit-count . g$13502$sFQex) (bitwise-xor . g$13501$sFQex) (bitwise-ior . g$13500$sFQex) (bitwise-and . g$13499$sFQex) (bitwise-not . g$13498$sFQex) (bitwise-arithmetic-shift-right . g$8028$sFQex) (bitwise-arithmetic-shift-left . g$8027$sFQex) (bitwise-arithmetic-shift . g$13497$sFQex) (zero? . g$7144$sFQex) (vector? . g$7104$sFQex) (vector-set! . g$13496$sFQex) (vector-ref . g$13495$sFQex) (vector-map . g$7238$sFQex) (vector-length . g$13494$sFQex) (vector-for-each . g$7239$sFQex) (vector-fill! . g$7112$sFQex) (vector->list . g$13493$sFQex) (vector . g$13492$sFQex) (values . g$13491$sFQex) (truncate . g$13490$sFQex) (tan . g$13489$sFQex) (symbol? . g$7106$sFQex) (symbol=? . g$7192$sFQex) (symbol->string . g$13488$sFQex) (substring . g$13487$sFQex) (string? . g$13486$sFQex) (string>? . g$7189$sFQex) (string>=? . g$7191$sFQex) (string=? . g$7187$sFQex) (string<? . g$7188$sFQex) (string<=? . g$7190$sFQex) (string-ref . g$13485$sFQex) (string-length . g$13484$sFQex) (string-for-each . g$7240$sFQex) (string-copy . g$13483$sFQex) (string-append . g$13482$sFQex) (string->symbol . g$13481$sFQex) (string->number . g$13480$sFQex) (string->list . g$13479$sFQex) (string . g$13478$sFQex) (sqrt . g$13477$sFQex) (sin . g$13476$sFQex) (round . g$13475$sFQex) (reverse . g$7113$sFQex) (real? . g$13474$sFQex) (real-valued? . g$13473$sFQex) (real-part . g$13472$sFQex) (rationalize . g$7235$sFQex) (rational? . g$13471$sFQex) (rational-valued? . g$13470$sFQex) (procedure? . g$7108$sFQex) (positive? . g$7142$sFQex) (pair? . g$13469$sFQex) (odd? . g$7146$sFQex) (numerator . g$13468$sFQex) (number? . g$13467$sFQex) (number->string . g$13466$sFQex) (null? . g$13465$sFQex) (not . g$13464$sFQex) (negative? . g$7143$sFQex) (nan? . g$13463$sFQex) (min . g$7148$sFQex) (max . g$7147$sFQex) (map . g$6680$sFQex) (make-vector . g$13462$sFQex) (make-string . g$13461$sFQex) (make-rectangular . g$13460$sFQex) (make-polar . g$13459$sFQex) (magnitude . g$13458$sFQex) (log . g$13457$sFQex) (list? . g$13456$sFQex) (list-tail . g$6660$sFQex) (list-ref . g$6661$sFQex) (list->vector . g$7101$sFQex) (list->string . g$7102$sFQex) (list . g$13455$sFQex) (length . g$13454$sFQex) (lcm . g$7150$sFQex) (integer? . g$13453$sFQex) (integer-valued? . g$13452$sFQex) (integer->char . g$13451$sFQex) (infinite? . g$13450$sFQex) (inexact? . g$13449$sFQex) (inexact . g$13448$sFQex) (imag-part . g$13447$sFQex) (gcd . g$7149$sFQex) (for-each . g$6681$sFQex) (floor . g$13446$sFQex) (finite? . g$13445$sFQex) (expt . g$13444$sFQex) (exp . g$13443$sFQex) (exact? . g$13442$sFQex) (exact-integer-sqrt . g$13441$sFQex) (exact . g$13440$sFQex) (even? . g$7145$sFQex) (error . g$7597$sFQex) (eqv? . g$13439$sFQex) (equal? . g$13438$sFQex) (eq? . g$13437$sFQex) (dynamic-wind . g$13436$sFQex) (div0-and-mod0 . g$13435$sFQex) (mod0 . g$7100$sFQex) (div0 . g$7098$sFQex) (div-and-mod . g$13434$sFQex) (mod . g$7099$sFQex) (div . g$7097$sFQex) (denominator . g$13433$sFQex) (cos . g$13432$sFQex) (cons . g$13431$sFQex) (complex? . g$13430$sFQex) (char? . g$7103$sFQex) (char>? . g$7232$sFQex) (char>=? . g$7234$sFQex) (char=? . g$7230$sFQex) (char<? . g$7231$sFQex) (char<=? . g$7233$sFQex) (char->integer . g$13429$sFQex) (ceiling . g$13428$sFQex) (call-with-values . g$13427$sFQex) (call/cc . g$13426$sFQex) (call-with-current-continuation . g$13425$sFQex) (cddddr . g$7141$sFQex) (cdddar . g$7140$sFQex) (cddadr . g$7139$sFQex) (cddaar . g$7138$sFQex) (cdaddr . g$7137$sFQex) (cdadar . g$7136$sFQex) (cdaadr . g$7135$sFQex) (cdaaar . g$7134$sFQex) (cadddr . g$7133$sFQex) (caddar . g$7132$sFQex) (cadadr . g$7131$sFQex) (cadaar . g$7130$sFQex) (caaddr . g$7129$sFQex) (caadar . g$7128$sFQex) (caaadr . g$7127$sFQex) (caaaar . g$7126$sFQex) (cdddr . g$7125$sFQex) (cddar . g$7124$sFQex) (cdadr . g$7123$sFQex) (cdaar . g$7122$sFQex) (caddr . g$7121$sFQex) (cadar . g$7120$sFQex) (caadr . g$7119$sFQex) (caaar . g$7118$sFQex) (cddr . g$7117$sFQex) (cdar . g$7116$sFQex) (cadr . g$7115$sFQex) (caar . g$7114$sFQex) (cdr . g$13424$sFQex) (car . g$13423$sFQex) (boolean? . g$7107$sFQex) (boolean=? . g$7193$sFQex) (atan . g$13422$sFQex) (assertion-violation . g$7596$sFQex) (asin . g$13421$sFQex) (apply . g$13420$sFQex) (append . g$13419$sFQex) (angle . g$13418$sFQex) (acos . g$13417$sFQex) (abs . g$13416$sFQex) (/ . g$13415$sFQex) (* . g$13414$sFQex) (- . g$13413$sFQex) (+ . g$13412$sFQex) (>= . g$13411$sFQex) (> . g$13410$sFQex) (= . g$13409$sFQex) (<= . g$13408$sFQex) (< . g$13407$sFQex) (make-record-printer . g$13406$sFQex) (eqv-hash . g$13405$sFQex) (reverse! . g$13404$sFQex) (deserialize-port . g$13403$sFQex) (serialize-port . g$13402$sFQex) (enum-set? . g$8550$sFQex) (make-promise . g$7842$sFQex) (load/args . g$13224$sFQex) (printf . g$8661$sFQex) (fprintf . g$8662$sFQex) (format . g$8663$sFQex) (procedure-form . g$13401$sFQex) (procedure-environment . g$13400$sFQex) (procedure-name . g$13399$sFQex) (procedure-arity . g$13398$sFQex) (gc-collect . g$13397$sFQex) (clr-type? . g$13396$sFQex) (get-clr-type . g$13395$sFQex) (get-command-line . g$13394$sFQex) (vector-append . g$13393$sFQex) (vector-filter . g$13392$sFQex) (vector-reverse! . g$13391$sFQex) (vector-contains? . g$13390$sFQex) (vector-index-of . g$13389$sFQex) (vector-copy . g$13388$sFQex) (vector-binary-search . g$13387$sFQex) (string-ci-compare . g$13386$sFQex) (string-compare . g$13385$sFQex) (string-format . g$13384$sFQex) (trace-printer . g$13221$sFQex) (make-traced-procedure . g$13383$sFQex) (make-traced-macro . g$8683$sFQex) (assertion-error . g$10219$sFQex) (time-it . g$13382$sFQex) (make-parameter . g$8956$sFQex) (library-locator . g$13381$sFQex) (get-library-paths . g$13380$sFQex) (open-tcp-input/output-port . g$13379$sFQex) (hashtable-for-each . g$13378$sFQex) (hashtable-map . g$13377$sFQex) (environment-bindings . g$10197$sFQex) (environment-symbols . g$10200$sFQex) (interaction-environment-symbols . g$10196$sFQex) (optimization-level . g$13376$sFQex) (library-path . g$9367$sFQex) (make-compile-time-value . g$9825$sFQex) (expand->core . g$10206$sFQex) (expand . g$10204$sFQex) (convert->cps . g$8739$sFQex) (installed-libraries . g$9388$sFQex) (uninstall-library . g$9379$sFQex) (&no-nans . g$13375$sFQex) (&no-infinities . g$13374$sFQex) (&i/o-encoding . g$13373$sFQex) (&i/o-decoding . g$13372$sFQex) (&i/o-port . g$13371$sFQex) (&i/o-file-does-not-exist . g$13370$sFQex) (&i/o-file-already-exists . g$13369$sFQex) (&i/o-file-is-read-only . g$13368$sFQex) (&i/o-file-protection . g$13367$sFQex) (&i/o-filename . g$13366$sFQex) (&i/o-invalid-position . g$13365$sFQex) (&i/o-write . g$13364$sFQex) (&i/o-read . g$13363$sFQex) (&i/o . g$13362$sFQex) (&non-continuable . g$13361$sFQex) (&undefined . g$13360$sFQex) (&syntax . g$13359$sFQex) (&lexical . g$13358$sFQex) (&implementation-restriction . g$13357$sFQex) (&who . g$13356$sFQex) (&irritants . g$13355$sFQex) (&assertion . g$13354$sFQex) (&violation . g$13353$sFQex) (&error . g$13352$sFQex) (&serious . g$13351$sFQex) (&warning . g$13350$sFQex) (&message . g$13349$sFQex) (&condition . g$13348$sFQex) (define-condition-type . g$13347$sFQex) (define-enumeration . g$13346$sFQex) (define-record-type . g$13345$sFQex) (parent-rtd . g$13344$sFQex) (nongenerative . g$13343$sFQex) (opaque . g$13342$sFQex) (sealed . g$13341$sFQex) (protocol . g$13340$sFQex) (parent . g$13339$sFQex) (immutable . g$13338$sFQex) (mutable . g$13337$sFQex) (fields . g$13336$sFQex) (error-handling-mode . g$13335$sFQex) (file-options . g$13334$sFQex) (buffer-mode . g$13333$sFQex) (eol-style . g$13332$sFQex) (guard . g$13331$sFQex) (trace-letrec-syntax . g$13330$sFQex) (trace-let-syntax . g$13329$sFQex) (trace-define-syntax . g$13328$sFQex) (trace-define . g$13327$sFQex) (trace-lambda . g$13326$sFQex) (unsyntax-splicing . g$13325$sFQex) (unsyntax . g$13324$sFQex) (unquote-splicing . g$13323$sFQex) (unquote . g$13322$sFQex) (_ . g$13321$sFQex) (else . g$13320$sFQex) (=> . g$13319$sFQex) (... . g$13318$sFQex) (assert . g$13317$sFQex) (endianness . g$13316$sFQex) (delay . g$13315$sFQex) (time . g$13314$sFQex) (or . g$13313$sFQex) (and . g$13312$sFQex) (do . g$13311$sFQex) (cond . g$13310$sFQex) (let* . g$13309$sFQex) (let . g$13308$sFQex) (identifier-syntax . g$13307$sFQex) (with-syntax . g$13306$sFQex) (quasisyntax . g$13305$sFQex) (quasiquote . g$13304$sFQex) (syntax-rules . g$13303$sFQex) (include-into . g$13302$sFQex) (include . g$13301$sFQex) (define-struct . g$13300$sFQex) (let-values . g$13299$sFQex) (let*-values . g$13298$sFQex) (record-constructor-descriptor . g$13297$sFQex) (record-type-descriptor . g$13296$sFQex) (fluid-let-syntax . g$13295$sFQex) (case . g$13294$sFQex) (parameterize . g$13293$sFQex) (unless . g$13292$sFQex) (when . g$13291$sFQex) (if . g$13290$sFQex) (letrec* . g$13289$sFQex) (letrec . g$13288$sFQex) (type-descriptor . g$13287$sFQex) (case-lambda . g$13286$sFQex) (lambda . g$13285$sFQex) (syntax . g$13284$sFQex) (syntax-case . g$13283$sFQex) (quote . g$13282$sFQex) (foreign-call . g$13281$sFQex) (letrec-syntax . g$13280$sFQex) (let-syntax . g$13279$sFQex) (set! . g$13278$sFQex) (export . g$13277$sFQex) (import . g$13276$sFQex) (library . g$13275$sFQex) (begin . g$13274$sFQex) (module . g$13273$sFQex) (define-syntax . g$13272$sFQex) (define . g$13271$sFQex)) '((g$10095$sFQex core-prim . ellipsis-map) (g$13789$sFQex core-prim . &no-nans-rcd) (g$13788$sFQex core-prim . &no-nans-rtd) (g$13787$sFQex core-prim . &no-infinities-rcd) (g$13786$sFQex core-prim . &no-infinities-rtd) (g$13785$sFQex core-prim . &i/o-encoding-rcd) (g$13784$sFQex core-prim . &i/o-encoding-rtd) (g$13783$sFQex core-prim . &i/o-decoding-rcd) (g$13782$sFQex core-prim . &i/o-decoding-rtd) (g$13781$sFQex core-prim . &i/o-port-rcd) (g$13780$sFQex core-prim . &i/o-port-rtd) (g$13779$sFQex core-prim . &i/o-file-does-not-exist-rcd) (g$13778$sFQex core-prim . &i/o-file-does-not-exist-rtd) (g$13777$sFQex core-prim . &i/o-file-already-exists-rcd) (g$13776$sFQex core-prim . &i/o-file-already-exists-rtd) (g$13775$sFQex core-prim . &i/o-file-is-read-only-rcd) (g$13774$sFQex core-prim . &i/o-file-is-read-only-rtd) (g$13773$sFQex core-prim . &i/o-file-protection-rcd) (g$13772$sFQex core-prim . &i/o-file-protection-rtd) (g$13771$sFQex core-prim . &i/o-filename-rcd) (g$13770$sFQex core-prim . &i/o-filename-rtd) (g$13769$sFQex core-prim . &i/o-invalid-position-rcd) (g$13768$sFQex core-prim . &i/o-invalid-position-rtd) (g$13767$sFQex core-prim . &i/o-write-rcd) (g$13766$sFQex core-prim . &i/o-write-rtd) (g$13765$sFQex core-prim . &i/o-read-rcd) (g$13764$sFQex core-prim . &i/o-read-rtd) (g$13763$sFQex core-prim . &i/o-rcd) (g$13762$sFQex core-prim . &i/o-rtd) (g$13761$sFQex core-prim . &undefined-rcd) (g$13760$sFQex core-prim . &undefined-rtd) (g$13759$sFQex core-prim . &syntax-rcd) (g$13758$sFQex core-prim . &syntax-rtd) (g$13757$sFQex core-prim . &lexical-rcd) (g$13756$sFQex core-prim . &lexical-rtd) (g$13755$sFQex core-prim . &implementation-restriction-rcd) (g$13754$sFQex core-prim . &implementation-restriction-rtd) (g$13753$sFQex core-prim . &non-continuable-rcd) (g$13752$sFQex core-prim . &non-continuable-rtd) (g$13751$sFQex core-prim . &who-rcd) (g$13750$sFQex core-prim . &who-rtd) (g$13749$sFQex core-prim . &irritants-rcd) (g$13748$sFQex core-prim . &irritants-rtd) (g$13747$sFQex core-prim . &assertion-rcd) (g$13746$sFQex core-prim . &assertion-rtd) (g$13745$sFQex core-prim . &violation-rcd) (g$13744$sFQex core-prim . &violation-rtd) (g$13743$sFQex core-prim . &error-rcd) (g$13742$sFQex core-prim . &error-rtd) (g$13741$sFQex core-prim . &serious-rcd) (g$13740$sFQex core-prim . &serious-rtd) (g$13739$sFQex core-prim . &warning-rcd) (g$13738$sFQex core-prim . &warning-rtd) (g$13737$sFQex core-prim . &message-rcd) (g$13736$sFQex core-prim . &message-rtd) (g$13735$sFQex core-prim . &condition-rcd) (g$13734$sFQex core-prim . &condition-rtd) (g$13733$sFQex core-prim . library-letrec*) (g$13732$sFQex core-prim . annotation-stripped) (g$13731$sFQex core-prim . annotation-source) (g$13730$sFQex core-prim . annotation-expression) (g$13729$sFQex core-prim . annotation?) (g$13728$sFQex core-prim . read-annotated) (g$13727$sFQex core-prim . tanh) (g$13726$sFQex core-prim . cosh) (g$13725$sFQex core-prim . sinh) (g$13724$sFQex core-prim . make-guid) (g$13723$sFQex core-prim . unspecified?) (g$6663$sFQex core-prim . make-list) (g$6662$sFQex core-prim . last-pair) (g$13722$sFQex core-prim . load-r5rs) (g$13721$sFQex core-prim . license) (g$13720$sFQex core-prim . stacktrace) (g$13226$sFQex core-prim . ironscheme-build) (g$13719$sFQex core-prim . define-clr-class-internal) (g$13718$sFQex core-prim . clr-field-set!-internal) (g$13717$sFQex core-prim . clr-field-get-internal) (g$13716$sFQex core-prim . clr-cast-internal) (g$13715$sFQex core-prim . clr-call-internal) (g$13714$sFQex core-prim . clr-new-internal) (g$13713$sFQex core-prim . clr-new-array-internal) (g$13712$sFQex core-prim . clr-is-internal) (g$13711$sFQex core-prim . clr-reference-internal) (g$13710$sFQex core-prim . clr-using-internal) (g$10220$sFQex core-prim . syntax-error) (g$10090$sFQex core-prim . syntax-dispatch) (g$13709$sFQex core-prim . compile-core) (g$13708$sFQex core-prim . eval-core) (g$13707$sFQex core-prim . set-symbol-value!) (g$13706$sFQex core-prim . symbol-value) (g$13705$sFQex core-prim . symbol-bound?) (g$13704$sFQex core-prim . ungensym) (g$13703$sFQex core-prim . gensym) (g$13702$sFQex core-prim . void) (g$13701$sFQex core-prim . load-serialized-library) (g$13700$sFQex core-prim . serialize-library) (g$13229$sFQex core-prim . compile-system-libraries) (g$13231$sFQex core-prim . compile->closure) (g$13230$sFQex core-prim . compile) (g$13225$sFQex core-prim . load) (g$13699$sFQex core-prim . string-normalize) (g$10230$sFQex core-prim . interaction-environment) (g$13698$sFQex core-prim . char-ready?) (g$13697$sFQex core-prim . string-upcase) (g$13696$sFQex core-prim . string-titlecase) (g$7965$sFQex core-prim . string-normalize-nfkd) (g$7964$sFQex core-prim . string-normalize-nfkc) (g$7963$sFQex core-prim . string-normalize-nfd) (g$7962$sFQex core-prim . string-normalize-nfc) (g$13695$sFQex core-prim . string-foldcase) (g$13694$sFQex core-prim . string-downcase) (g$7920$sFQex core-prim . string-ci>?) (g$7922$sFQex core-prim . string-ci>=?) (g$7918$sFQex core-prim . string-ci=?) (g$7919$sFQex core-prim . string-ci<?) (g$7921$sFQex core-prim . string-ci<=?) (g$13693$sFQex core-prim . char-whitespace?) (g$13692$sFQex core-prim . char-upper-case?) (g$13691$sFQex core-prim . char-title-case?) (g$13690$sFQex core-prim . char-numeric?) (g$13689$sFQex core-prim . char-lower-case?) (g$13688$sFQex core-prim . char-general-category) (g$13687$sFQex core-prim . char-upcase) (g$13686$sFQex core-prim . char-titlecase) (g$13685$sFQex core-prim . char-foldcase) (g$13684$sFQex core-prim . char-downcase) (g$7959$sFQex core-prim . char-ci>?) (g$7961$sFQex core-prim . char-ci>=?) (g$7957$sFQex core-prim . char-ci=?) (g$7958$sFQex core-prim . char-ci<?) (g$7960$sFQex core-prim . char-ci<=?) (g$13683$sFQex core-prim . char-alphabetic?) (g$9827$sFQex core-prim . variable-transformer-procedure) (g$9826$sFQex core-prim . variable-transformer?) (g$9824$sFQex core-prim . make-variable-transformer) (g$10224$sFQex core-prim . identifier?) (g$10213$sFQex core-prim . generate-temporaries) (g$10214$sFQex core-prim . free-identifier=?) (g$10226$sFQex core-prim . syntax->datum) (g$10225$sFQex core-prim . datum->syntax) (g$10215$sFQex core-prim . bound-identifier=?) (g$13682$sFQex core-prim . record-type-descriptor?) (g$13681$sFQex core-prim . record-predicate) (g$13680$sFQex core-prim . record-mutator) (g$13679$sFQex core-prim . record-constructor) (g$13678$sFQex core-prim . record-accessor) (g$13677$sFQex core-prim . make-record-type-descriptor) (g$13676$sFQex core-prim . make-record-constructor-descriptor) (g$13675$sFQex core-prim . record?) (g$13674$sFQex core-prim . record-type-uid) (g$13673$sFQex core-prim . record-type-sealed?) (g$13672$sFQex core-prim . record-type-parent) (g$13671$sFQex core-prim . record-type-opaque?) (g$13670$sFQex core-prim . record-type-name) (g$13669$sFQex core-prim . record-type-generative?) (g$13668$sFQex core-prim . record-type-field-names) (g$13667$sFQex core-prim . record-rtd) (g$13666$sFQex core-prim . record-field-mutable?) (g$7471$sFQex core-prim . delete-file) (g$7470$sFQex core-prim . file-exists?) (g$13665$sFQex core-prim . vector-sort!) (g$13664$sFQex core-prim . vector-sort) (g$7860$sFQex core-prim . list-sort) (g$13663$sFQex core-prim . symbol-hash) (g$13662$sFQex core-prim . string-ci-hash) (g$13661$sFQex core-prim . string-hash) (g$13660$sFQex core-prim . equal-hash) (g$13659$sFQex core-prim . hashtable-equivalence-function) (g$13658$sFQex core-prim . make-hashtable) (g$13657$sFQex core-prim . hashtable-hash-function) (g$7439$sFQex core-prim . make-eqv-hashtable) (g$7438$sFQex core-prim . make-eq-hashtable) (g$13656$sFQex core-prim . hashtable?) (g$7445$sFQex core-prim . hashtable-update!) (g$7440$sFQex core-prim . hashtable-size) (g$7442$sFQex core-prim . hashtable-set!) (g$7441$sFQex core-prim . hashtable-ref) (g$13655$sFQex core-prim . hashtable-mutable?) (g$13654$sFQex core-prim . hashtable-keys) (g$13653$sFQex core-prim . hashtable-entries) (g$7443$sFQex core-prim . hashtable-delete!) (g$13652$sFQex core-prim . hashtable-copy) (g$7444$sFQex core-prim . hashtable-contains?) (g$7446$sFQex core-prim . hashtable-clear!) (g$8510$sFQex core-prim . call-with-output-file) (g$8509$sFQex core-prim . call-with-input-file) (g$8491$sFQex core-prim . write-char) (g$13651$sFQex core-prim . write) (g$8508$sFQex core-prim . with-output-to-file) (g$8507$sFQex core-prim . with-input-from-file) (g$8490$sFQex core-prim . read-char) (g$13650$sFQex core-prim . read) (g$8489$sFQex core-prim . peek-char) (g$13649$sFQex core-prim . open-output-file) (g$13648$sFQex core-prim . open-input-file) (g$8511$sFQex core-prim . newline) (g$13647$sFQex core-prim . display) (g$13646$sFQex core-prim . close-output-port) (g$13645$sFQex core-prim . close-input-port) (g$13644$sFQex core-prim . eof-object?) (g$13643$sFQex core-prim . eof-object) (g$13642$sFQex core-prim . current-error-port) (g$13641$sFQex core-prim . current-output-port) (g$13640$sFQex core-prim . current-input-port) (g$13639$sFQex core-prim . output-port?) (g$13638$sFQex core-prim . input-port?) (g$13637$sFQex core-prim . utf-8-codec) (g$13636$sFQex core-prim . utf-16-codec) (g$13635$sFQex core-prim . transcoder-error-handling-mode) (g$13634$sFQex core-prim . transcoder-eol-style) (g$13633$sFQex core-prim . transcoder-codec) (g$13632$sFQex core-prim . transcoded-port) (g$13631$sFQex core-prim . textual-port?) (g$13630$sFQex core-prim . string->bytevector) (g$13629$sFQex core-prim . standard-output-port) (g$13628$sFQex core-prim . standard-input-port) (g$13627$sFQex core-prim . standard-error-port) (g$13626$sFQex core-prim . set-port-position!) (g$13625$sFQex core-prim . put-u8) (g$13624$sFQex core-prim . put-string) (g$8469$sFQex core-prim . put-datum) (g$13623$sFQex core-prim . put-char) (g$13622$sFQex core-prim . put-bytevector) (g$8474$sFQex core-prim . port?) (g$13621$sFQex core-prim . port-transcoder) (g$13620$sFQex core-prim . port-position) (g$13619$sFQex core-prim . port-has-set-port-position!?) (g$13618$sFQex core-prim . port-has-port-position?) (g$13617$sFQex core-prim . port-eof?) (g$13616$sFQex core-prim . output-port-buffer-mode) (g$8473$sFQex core-prim . open-string-output-port) (g$13615$sFQex core-prim . open-string-input-port) (g$13614$sFQex core-prim . open-file-output-port) (g$13613$sFQex core-prim . open-file-input/output-port) (g$13612$sFQex core-prim . open-file-input-port) (g$13611$sFQex core-prim . open-bytevector-output-port) (g$13610$sFQex core-prim . open-bytevector-input-port) (g$13609$sFQex core-prim . native-transcoder) (g$13608$sFQex core-prim . native-eol-style) (g$13607$sFQex core-prim . make-transcoder) (g$13606$sFQex core-prim . latin-1-codec) (g$8327$sFQex core-prim . make-i/o-write-error) (g$8313$sFQex core-prim . make-i/o-read-error) (g$8432$sFQex core-prim . make-i/o-port-error) (g$8342$sFQex core-prim . make-i/o-invalid-position-error) (g$8359$sFQex core-prim . make-i/o-filename-error) (g$8375$sFQex core-prim . make-i/o-file-protection-error) (g$8389$sFQex core-prim . make-i/o-file-is-read-only-error) (g$8417$sFQex core-prim . make-i/o-file-does-not-exist-error) (g$8403$sFQex core-prim . make-i/o-file-already-exists-error) (g$8299$sFQex core-prim . make-i/o-error) (g$8463$sFQex core-prim . make-i/o-encoding-error) (g$8448$sFQex core-prim . make-i/o-decoding-error) (g$13605$sFQex core-prim . make-custom-textual-output-port) (g$13604$sFQex core-prim . make-custom-textual-input/output-port) (g$13603$sFQex core-prim . make-custom-textual-input-port) (g$13602$sFQex core-prim . make-custom-binary-output-port) (g$13601$sFQex core-prim . make-custom-binary-input/output-port) (g$13600$sFQex core-prim . make-custom-binary-input-port) (g$13599$sFQex core-prim . make-bytevector) (g$13598$sFQex core-prim . lookahead-u8) (g$13597$sFQex core-prim . lookahead-char) (g$8328$sFQex core-prim . i/o-write-error?) (g$8314$sFQex core-prim . i/o-read-error?) (g$8434$sFQex core-prim . i/o-port-error?) (g$8344$sFQex core-prim . i/o-invalid-position-error?) (g$8345$sFQex core-prim . i/o-error-position) (g$8361$sFQex core-prim . i/o-filename-error?) (g$8376$sFQex core-prim . i/o-file-protection-error?) (g$8390$sFQex core-prim . i/o-file-is-read-only-error?) (g$8418$sFQex core-prim . i/o-file-does-not-exist-error?) (g$8404$sFQex core-prim . i/o-file-already-exists-error?) (g$8300$sFQex core-prim . i/o-error?) (g$8435$sFQex core-prim . i/o-error-port) (g$8362$sFQex core-prim . i/o-error-filename) (g$8465$sFQex core-prim . i/o-encoding-error?) (g$8466$sFQex core-prim . i/o-encoding-error-char) (g$8449$sFQex core-prim . i/o-decoding-error?) (g$13596$sFQex core-prim . get-u8) (g$13595$sFQex core-prim . get-string-n!) (g$13594$sFQex core-prim . get-string-n) (g$13593$sFQex core-prim . get-string-all) (g$13592$sFQex core-prim . get-line) (g$8470$sFQex core-prim . get-datum) (g$13591$sFQex core-prim . get-char) (g$13590$sFQex core-prim . get-bytevector-some) (g$13589$sFQex core-prim . get-bytevector-n!) (g$13588$sFQex core-prim . get-bytevector-n) (g$13587$sFQex core-prim . get-bytevector-all) (g$13586$sFQex core-prim . flush-output-port) (g$13585$sFQex core-prim . close-port) (g$8475$sFQex core-prim . call-with-string-output-port) (g$8476$sFQex core-prim . call-with-port) (g$13584$sFQex core-prim . call-with-bytevector-output-port) (g$13583$sFQex core-prim . bytevector->string) (g$13582$sFQex core-prim . buffer-mode?) (g$13581$sFQex core-prim . binary-port?) (g$10203$sFQex core-prim . scheme-report-environment) (g$7839$sFQex core-prim . quotient) (g$10202$sFQex core-prim . null-environment) (g$7840$sFQex core-prim . remainder) (g$7841$sFQex core-prim . modulo) (g$7836$sFQex core-prim . inexact->exact) (g$7843$sFQex core-prim . force) (g$7837$sFQex core-prim . exact->inexact) (g$13580$sFQex core-prim . exit) (g$13222$sFQex core-prim . command-line) (g$13579$sFQex core-prim . string-fill!) (g$13578$sFQex core-prim . string-set!) (g$13577$sFQex core-prim . set-cdr!) (g$13576$sFQex core-prim . set-car!) (g$6685$sFQex core-prim . remove) (g$6686$sFQex core-prim . remv) (g$6666$sFQex core-prim . remp) (g$6687$sFQex core-prim . remq) (g$6665$sFQex core-prim . partition) (g$6673$sFQex core-prim . memv) (g$6672$sFQex core-prim . memq) (g$6675$sFQex core-prim . memp) (g$6674$sFQex core-prim . member) (g$6679$sFQex core-prim . exists) (g$6678$sFQex core-prim . for-all) (g$6684$sFQex core-prim . fold-right) (g$6683$sFQex core-prim . fold-left) (g$6664$sFQex core-prim . find) (g$6667$sFQex core-prim . filter) (g$6682$sFQex core-prim . cons*) (g$6669$sFQex core-prim . assv) (g$6668$sFQex core-prim . assq) (g$6671$sFQex core-prim . assp) (g$6670$sFQex core-prim . assoc) (g$7592$sFQex core-prim . with-exception-handler) (g$7595$sFQex core-prim . raise-continuable) (g$7594$sFQex core-prim . raise) (g$10205$sFQex core-prim . eval) (g$10201$sFQex core-prim . environment) (g$8575$sFQex core-prim . make-enumeration) (g$8582$sFQex core-prim . enum-set=?) (g$8576$sFQex core-prim . enum-set-universe) (g$8583$sFQex core-prim . enum-set-union) (g$8581$sFQex core-prim . enum-set-subset?) (g$8587$sFQex core-prim . enum-set-projection) (g$8580$sFQex core-prim . enum-set-member?) (g$8584$sFQex core-prim . enum-set-intersection) (g$8577$sFQex core-prim . enum-set-indexer) (g$8585$sFQex core-prim . enum-set-difference) (g$8578$sFQex core-prim . enum-set-constructor) (g$8586$sFQex core-prim . enum-set-complement) (g$8579$sFQex core-prim . enum-set->list) (g$7748$sFQex core-prim . who-condition?) (g$7659$sFQex core-prim . warning?) (g$7701$sFQex core-prim . violation?) (g$7825$sFQex core-prim . undefined-violation?) (g$7809$sFQex core-prim . syntax-violation?) (g$7811$sFQex core-prim . syntax-violation-subform) (g$7810$sFQex core-prim . syntax-violation-form) (g$10223$sFQex core-prim . syntax-violation) (g$13575$sFQex core-prim . simple-conditions) (g$7673$sFQex core-prim . serious-condition?) (g$7763$sFQex core-prim . non-continuable-violation?) (g$7644$sFQex core-prim . message-condition?) (g$7746$sFQex core-prim . make-who-condition) (g$7658$sFQex core-prim . make-warning) (g$7700$sFQex core-prim . make-violation) (g$7824$sFQex core-prim . make-undefined-violation) (g$7806$sFQex core-prim . make-syntax-violation) (g$7672$sFQex core-prim . make-serious-condition) (g$7762$sFQex core-prim . make-non-continuable-violation) (g$7642$sFQex core-prim . make-message-condition) (g$7790$sFQex core-prim . make-lexical-violation) (g$7729$sFQex core-prim . make-irritants-condition) (g$7776$sFQex core-prim . make-implementation-restriction-violation) (g$7686$sFQex core-prim . make-error) (g$7714$sFQex core-prim . make-assertion-violation) (g$7791$sFQex core-prim . lexical-violation?) (g$7731$sFQex core-prim . irritants-condition?) (g$7777$sFQex core-prim . implementation-restriction-violation?) (g$7687$sFQex core-prim . error?) (g$7749$sFQex core-prim . condition-who) (g$13574$sFQex core-prim . condition-predicate) (g$7645$sFQex core-prim . condition-message) (g$7732$sFQex core-prim . condition-irritants) (g$13573$sFQex core-prim . condition-accessor) (g$13572$sFQex core-prim . condition) (g$7715$sFQex core-prim . assertion-violation?) (g$13571$sFQex core-prim . condition?) (g$13570$sFQex core-prim . utf32->string) (g$13569$sFQex core-prim . utf16->string) (g$13568$sFQex core-prim . utf8->string) (g$13567$sFQex core-prim . uint-list->bytevector) (g$13566$sFQex core-prim . u8-list->bytevector) (g$13565$sFQex core-prim . string->utf8) (g$13564$sFQex core-prim . string->utf32) (g$13563$sFQex core-prim . string->utf16) (g$13562$sFQex core-prim . sint-list->bytevector) (g$7477$sFQex core-prim . native-endianness) (g$7105$sFQex core-prim . bytevector?) (g$13561$sFQex core-prim . bytevector=?) (g$13560$sFQex core-prim . bytevector-uint-set!) (g$13559$sFQex core-prim . bytevector-uint-ref) (g$13558$sFQex core-prim . bytevector-u8-set!) (g$13557$sFQex core-prim . bytevector-u8-ref) (g$7498$sFQex core-prim . bytevector-u64-set!) (g$7494$sFQex core-prim . bytevector-u64-ref) (g$7500$sFQex core-prim . bytevector-u64-native-set!) (g$7496$sFQex core-prim . bytevector-u64-native-ref) (g$7490$sFQex core-prim . bytevector-u32-set!) (g$7486$sFQex core-prim . bytevector-u32-ref) (g$7492$sFQex core-prim . bytevector-u32-native-set!) (g$7488$sFQex core-prim . bytevector-u32-native-ref) (g$7482$sFQex core-prim . bytevector-u16-set!) (g$7478$sFQex core-prim . bytevector-u16-ref) (g$7484$sFQex core-prim . bytevector-u16-native-set!) (g$7480$sFQex core-prim . bytevector-u16-native-ref) (g$13556$sFQex core-prim . bytevector-sint-set!) (g$13555$sFQex core-prim . bytevector-sint-ref) (g$13554$sFQex core-prim . bytevector-s8-set!) (g$13553$sFQex core-prim . bytevector-s8-ref) (g$7499$sFQex core-prim . bytevector-s64-set!) (g$7495$sFQex core-prim . bytevector-s64-ref) (g$7501$sFQex core-prim . bytevector-s64-native-set!) (g$7497$sFQex core-prim . bytevector-s64-native-ref) (g$7491$sFQex core-prim . bytevector-s32-set!) (g$7487$sFQex core-prim . bytevector-s32-ref) (g$7493$sFQex core-prim . bytevector-s32-native-set!) (g$7489$sFQex core-prim . bytevector-s32-native-ref) (g$7483$sFQex core-prim . bytevector-s16-set!) (g$7479$sFQex core-prim . bytevector-s16-ref) (g$7485$sFQex core-prim . bytevector-s16-native-set!) (g$7481$sFQex core-prim . bytevector-s16-native-ref) (g$13552$sFQex core-prim . bytevector-length) (g$13551$sFQex core-prim . bytevector-ieee-single-set!) (g$13550$sFQex core-prim . bytevector-ieee-single-ref) (g$7504$sFQex core-prim . bytevector-ieee-single-native-set!) (g$7502$sFQex core-prim . bytevector-ieee-single-native-ref) (g$13549$sFQex core-prim . bytevector-ieee-double-set!) (g$13548$sFQex core-prim . bytevector-ieee-double-ref) (g$7505$sFQex core-prim . bytevector-ieee-double-native-set!) (g$7503$sFQex core-prim . bytevector-ieee-double-native-ref) (g$13547$sFQex core-prim . bytevector-fill!) (g$13546$sFQex core-prim . bytevector-copy!) (g$13545$sFQex core-prim . bytevector-copy) (g$13544$sFQex core-prim . bytevector->uint-list) (g$13543$sFQex core-prim . bytevector->u8-list) (g$13542$sFQex core-prim . bytevector->sint-list) (g$8212$sFQex core-prim . no-nans-violation?) (g$8198$sFQex core-prim . no-infinities-violation?) (g$8211$sFQex core-prim . make-no-nans-violation) (g$8197$sFQex core-prim . make-no-infinities-violation) (g$13541$sFQex core-prim . real->flonum) (g$8180$sFQex core-prim . flzero?) (g$8175$sFQex core-prim . fltruncate) (g$8165$sFQex core-prim . fltan) (g$8170$sFQex core-prim . flsqrt) (g$8163$sFQex core-prim . flsin) (g$8176$sFQex core-prim . flround) (g$8178$sFQex core-prim . flpositive?) (g$7110$sFQex core-prim . flonum?) (g$8182$sFQex core-prim . flodd?) (g$13540$sFQex core-prim . flnumerator) (g$8179$sFQex core-prim . flnegative?) (g$8162$sFQex core-prim . flnan?) (g$8158$sFQex core-prim . flmod0) (g$8157$sFQex core-prim . flmod) (g$8184$sFQex core-prim . flmin) (g$8183$sFQex core-prim . flmax) (g$8169$sFQex core-prim . fllog) (g$8159$sFQex core-prim . flinteger?) (g$8161$sFQex core-prim . flinfinite?) (g$8174$sFQex core-prim . flfloor) (g$8160$sFQex core-prim . flfinite?) (g$8172$sFQex core-prim . flexpt) (g$8171$sFQex core-prim . flexp) (g$8181$sFQex core-prim . fleven?) (g$8154$sFQex core-prim . fldiv0-and-mod0) (g$8156$sFQex core-prim . fldiv0) (g$8153$sFQex core-prim . fldiv-and-mod) (g$8155$sFQex core-prim . fldiv) (g$13539$sFQex core-prim . fldenominator) (g$8164$sFQex core-prim . flcos) (g$8173$sFQex core-prim . flceiling) (g$8168$sFQex core-prim . flatan) (g$8166$sFQex core-prim . flasin) (g$8167$sFQex core-prim . flacos) (g$8177$sFQex core-prim . flabs) (g$13538$sFQex core-prim . fl>?) (g$13537$sFQex core-prim . fl>=?) (g$13536$sFQex core-prim . fl=?) (g$13535$sFQex core-prim . fl<?) (g$13534$sFQex core-prim . fl<=?) (g$13533$sFQex core-prim . fl/) (g$13532$sFQex core-prim . fl-) (g$13531$sFQex core-prim . fl+) (g$13530$sFQex core-prim . fl*) (g$13529$sFQex core-prim . fixnum->flonum) (g$8061$sFQex core-prim . fxzero?) (g$13528$sFQex core-prim . fxxor) (g$8075$sFQex core-prim . fxrotate-bit-field) (g$13527$sFQex core-prim . fxreverse-bit-field) (g$8059$sFQex core-prim . fxpositive?) (g$8063$sFQex core-prim . fxodd?) (g$13526$sFQex core-prim . fxnot) (g$8060$sFQex core-prim . fxnegative?) (g$8058$sFQex core-prim . fxmod0) (g$8057$sFQex core-prim . fxmod) (g$8065$sFQex core-prim . fxmin) (g$8064$sFQex core-prim . fxmax) (g$13525$sFQex core-prim . fxlength) (g$13524$sFQex core-prim . fxior) (g$8069$sFQex core-prim . fxif) (g$13523$sFQex core-prim . fxfirst-bit-set) (g$8062$sFQex core-prim . fxeven?) (g$13522$sFQex core-prim . fxdiv0-and-mod0) (g$8056$sFQex core-prim . fxdiv0) (g$13521$sFQex core-prim . fxdiv-and-mod) (g$8055$sFQex core-prim . fxdiv) (g$8072$sFQex core-prim . fxcopy-bit-field) (g$8070$sFQex core-prim . fxcopy-bit) (g$13520$sFQex core-prim . fxbit-set?) (g$8071$sFQex core-prim . fxbit-field) (g$13519$sFQex core-prim . fxbit-count) (g$8074$sFQex core-prim . fxarithmetic-shift-right) (g$8073$sFQex core-prim . fxarithmetic-shift-left) (g$13518$sFQex core-prim . fxarithmetic-shift) (g$13517$sFQex core-prim . fxand) (g$13516$sFQex core-prim . fx>?) (g$13515$sFQex core-prim . fx>=?) (g$13514$sFQex core-prim . fx=?) (g$13513$sFQex core-prim . fx<?) (g$13512$sFQex core-prim . fx<=?) (g$8067$sFQex core-prim . fx-/carry) (g$13511$sFQex core-prim . fx-) (g$8068$sFQex core-prim . fx+/carry) (g$13510$sFQex core-prim . fx+) (g$8066$sFQex core-prim . fx*/carry) (g$13509$sFQex core-prim . fx*) (g$13508$sFQex core-prim . greatest-fixnum) (g$13507$sFQex core-prim . least-fixnum) (g$7111$sFQex core-prim . fixnum-width) (g$7109$sFQex core-prim . fixnum?) (g$8029$sFQex core-prim . bitwise-rotate-bit-field) (g$13506$sFQex core-prim . bitwise-reverse-bit-field) (g$13505$sFQex core-prim . bitwise-length) (g$8023$sFQex core-prim . bitwise-if) (g$13504$sFQex core-prim . bitwise-first-bit-set) (g$8026$sFQex core-prim . bitwise-copy-bit-field) (g$8024$sFQex core-prim . bitwise-copy-bit) (g$13503$sFQex core-prim . bitwise-bit-set?) (g$8025$sFQex core-prim . bitwise-bit-field) (g$13502$sFQex core-prim . bitwise-bit-count) (g$13501$sFQex core-prim . bitwise-xor) (g$13500$sFQex core-prim . bitwise-ior) (g$13499$sFQex core-prim . bitwise-and) (g$13498$sFQex core-prim . bitwise-not) (g$8028$sFQex core-prim . bitwise-arithmetic-shift-right) (g$8027$sFQex core-prim . bitwise-arithmetic-shift-left) (g$13497$sFQex core-prim . bitwise-arithmetic-shift) (g$7144$sFQex core-prim . zero?) (g$7104$sFQex core-prim . vector?) (g$13496$sFQex core-prim . vector-set!) (g$13495$sFQex core-prim . vector-ref) (g$7238$sFQex core-prim . vector-map) (g$13494$sFQex core-prim . vector-length) (g$7239$sFQex core-prim . vector-for-each) (g$7112$sFQex core-prim . vector-fill!) (g$13493$sFQex core-prim . vector->list) (g$13492$sFQex core-prim . vector) (g$13491$sFQex core-prim . values) (g$13490$sFQex core-prim . truncate) (g$13489$sFQex core-prim . tan) (g$7106$sFQex core-prim . symbol?) (g$7192$sFQex core-prim . symbol=?) (g$13488$sFQex core-prim . symbol->string) (g$13487$sFQex core-prim . substring) (g$13486$sFQex core-prim . string?) (g$7189$sFQex core-prim . string>?) (g$7191$sFQex core-prim . string>=?) (g$7187$sFQex core-prim . string=?) (g$7188$sFQex core-prim . string<?) (g$7190$sFQex core-prim . string<=?) (g$13485$sFQex core-prim . string-ref) (g$13484$sFQex core-prim . string-length) (g$7240$sFQex core-prim . string-for-each) (g$13483$sFQex core-prim . string-copy) (g$13482$sFQex core-prim . string-append) (g$13481$sFQex core-prim . string->symbol) (g$13480$sFQex core-prim . string->number) (g$13479$sFQex core-prim . string->list) (g$13478$sFQex core-prim . string) (g$13477$sFQex core-prim . sqrt) (g$13476$sFQex core-prim . sin) (g$13475$sFQex core-prim . round) (g$7113$sFQex core-prim . reverse) (g$13474$sFQex core-prim . real?) (g$13473$sFQex core-prim . real-valued?) (g$13472$sFQex core-prim . real-part) (g$7235$sFQex core-prim . rationalize) (g$13471$sFQex core-prim . rational?) (g$13470$sFQex core-prim . rational-valued?) (g$7108$sFQex core-prim . procedure?) (g$7142$sFQex core-prim . positive?) (g$13469$sFQex core-prim . pair?) (g$7146$sFQex core-prim . odd?) (g$13468$sFQex core-prim . numerator) (g$13467$sFQex core-prim . number?) (g$13466$sFQex core-prim . number->string) (g$13465$sFQex core-prim . null?) (g$13464$sFQex core-prim . not) (g$7143$sFQex core-prim . negative?) (g$13463$sFQex core-prim . nan?) (g$7148$sFQex core-prim . min) (g$7147$sFQex core-prim . max) (g$6680$sFQex core-prim . map) (g$13462$sFQex core-prim . make-vector) (g$13461$sFQex core-prim . make-string) (g$13460$sFQex core-prim . make-rectangular) (g$13459$sFQex core-prim . make-polar) (g$13458$sFQex core-prim . magnitude) (g$13457$sFQex core-prim . log) (g$13456$sFQex core-prim . list?) (g$6660$sFQex core-prim . list-tail) (g$6661$sFQex core-prim . list-ref) (g$7101$sFQex core-prim . list->vector) (g$7102$sFQex core-prim . list->string) (g$13455$sFQex core-prim . list) (g$13454$sFQex core-prim . length) (g$7150$sFQex core-prim . lcm) (g$13453$sFQex core-prim . integer?) (g$13452$sFQex core-prim . integer-valued?) (g$13451$sFQex core-prim . integer->char) (g$13450$sFQex core-prim . infinite?) (g$13449$sFQex core-prim . inexact?) (g$13448$sFQex core-prim . inexact) (g$13447$sFQex core-prim . imag-part) (g$7149$sFQex core-prim . gcd) (g$6681$sFQex core-prim . for-each) (g$13446$sFQex core-prim . floor) (g$13445$sFQex core-prim . finite?) (g$13444$sFQex core-prim . expt) (g$13443$sFQex core-prim . exp) (g$13442$sFQex core-prim . exact?) (g$13441$sFQex core-prim . exact-integer-sqrt) (g$13440$sFQex core-prim . exact) (g$7145$sFQex core-prim . even?) (g$7597$sFQex core-prim . error) (g$13439$sFQex core-prim . eqv?) (g$13438$sFQex core-prim . equal?) (g$13437$sFQex core-prim . eq?) (g$13436$sFQex core-prim . dynamic-wind) (g$13435$sFQex core-prim . div0-and-mod0) (g$7100$sFQex core-prim . mod0) (g$7098$sFQex core-prim . div0) (g$13434$sFQex core-prim . div-and-mod) (g$7099$sFQex core-prim . mod) (g$7097$sFQex core-prim . div) (g$13433$sFQex core-prim . denominator) (g$13432$sFQex core-prim . cos) (g$13431$sFQex core-prim . cons) (g$13430$sFQex core-prim . complex?) (g$7103$sFQex core-prim . char?) (g$7232$sFQex core-prim . char>?) (g$7234$sFQex core-prim . char>=?) (g$7230$sFQex core-prim . char=?) (g$7231$sFQex core-prim . char<?) (g$7233$sFQex core-prim . char<=?) (g$13429$sFQex core-prim . char->integer) (g$13428$sFQex core-prim . ceiling) (g$13427$sFQex core-prim . call-with-values) (g$13426$sFQex core-prim . call/cc) (g$13425$sFQex core-prim . call-with-current-continuation) (g$7141$sFQex core-prim . cddddr) (g$7140$sFQex core-prim . cdddar) (g$7139$sFQex core-prim . cddadr) (g$7138$sFQex core-prim . cddaar) (g$7137$sFQex core-prim . cdaddr) (g$7136$sFQex core-prim . cdadar) (g$7135$sFQex core-prim . cdaadr) (g$7134$sFQex core-prim . cdaaar) (g$7133$sFQex core-prim . cadddr) (g$7132$sFQex core-prim . caddar) (g$7131$sFQex core-prim . cadadr) (g$7130$sFQex core-prim . cadaar) (g$7129$sFQex core-prim . caaddr) (g$7128$sFQex core-prim . caadar) (g$7127$sFQex core-prim . caaadr) (g$7126$sFQex core-prim . caaaar) (g$7125$sFQex core-prim . cdddr) (g$7124$sFQex core-prim . cddar) (g$7123$sFQex core-prim . cdadr) (g$7122$sFQex core-prim . cdaar) (g$7121$sFQex core-prim . caddr) (g$7120$sFQex core-prim . cadar) (g$7119$sFQex core-prim . caadr) (g$7118$sFQex core-prim . caaar) (g$7117$sFQex core-prim . cddr) (g$7116$sFQex core-prim . cdar) (g$7115$sFQex core-prim . cadr) (g$7114$sFQex core-prim . caar) (g$13424$sFQex core-prim . cdr) (g$13423$sFQex core-prim . car) (g$7107$sFQex core-prim . boolean?) (g$7193$sFQex core-prim . boolean=?) (g$13422$sFQex core-prim . atan) (g$7596$sFQex core-prim . assertion-violation) (g$13421$sFQex core-prim . asin) (g$13420$sFQex core-prim . apply) (g$13419$sFQex core-prim . append) (g$13418$sFQex core-prim . angle) (g$13417$sFQex core-prim . acos) (g$13416$sFQex core-prim . abs) (g$13415$sFQex core-prim . /) (g$13414$sFQex core-prim . *) (g$13413$sFQex core-prim . -) (g$13412$sFQex core-prim . +) (g$13411$sFQex core-prim . >=) (g$13410$sFQex core-prim . >) (g$13409$sFQex core-prim . =) (g$13408$sFQex core-prim . <=) (g$13407$sFQex core-prim . <) (g$13406$sFQex core-prim . make-record-printer) (g$13405$sFQex core-prim . eqv-hash) (g$13404$sFQex core-prim . reverse!) (g$13403$sFQex core-prim . deserialize-port) (g$13402$sFQex core-prim . serialize-port) (g$8550$sFQex core-prim . enum-set?) (g$7842$sFQex core-prim . make-promise) (g$13224$sFQex core-prim . load/args) (g$8661$sFQex core-prim . printf) (g$8662$sFQex core-prim . fprintf) (g$8663$sFQex core-prim . format) (g$13401$sFQex core-prim . procedure-form) (g$13400$sFQex core-prim . procedure-environment) (g$13399$sFQex core-prim . procedure-name) (g$13398$sFQex core-prim . procedure-arity) (g$13397$sFQex core-prim . gc-collect) (g$13396$sFQex core-prim . clr-type?) (g$13395$sFQex core-prim . get-clr-type) (g$13394$sFQex core-prim . get-command-line) (g$13393$sFQex core-prim . vector-append) (g$13392$sFQex core-prim . vector-filter) (g$13391$sFQex core-prim . vector-reverse!) (g$13390$sFQex core-prim . vector-contains?) (g$13389$sFQex core-prim . vector-index-of) (g$13388$sFQex core-prim . vector-copy) (g$13387$sFQex core-prim . vector-binary-search) (g$13386$sFQex core-prim . string-ci-compare) (g$13385$sFQex core-prim . string-compare) (g$13384$sFQex core-prim . string-format) (g$13221$sFQex core-prim . trace-printer) (g$13383$sFQex core-prim . make-traced-procedure) (g$8683$sFQex core-prim . make-traced-macro) (g$10219$sFQex core-prim . assertion-error) (g$13382$sFQex core-prim . time-it) (g$8956$sFQex core-prim . make-parameter) (g$13381$sFQex core-prim . library-locator) (g$13380$sFQex core-prim . get-library-paths) (g$13379$sFQex core-prim . open-tcp-input/output-port) (g$13378$sFQex core-prim . hashtable-for-each) (g$13377$sFQex core-prim . hashtable-map) (g$10197$sFQex core-prim . environment-bindings) (g$10200$sFQex core-prim . environment-symbols) (g$10196$sFQex core-prim . interaction-environment-symbols) (g$13376$sFQex core-prim . optimization-level) (g$9367$sFQex core-prim . library-path) (g$9825$sFQex core-prim . make-compile-time-value) (g$10206$sFQex core-prim . expand->core) (g$10204$sFQex core-prim . expand) (g$8739$sFQex core-prim . convert->cps) (g$9388$sFQex core-prim . installed-libraries) (g$9379$sFQex core-prim . uninstall-library) (g$13375$sFQex $core-rtd &no-nans-rtd &no-nans-rcd) (g$13374$sFQex $core-rtd &no-infinities-rtd &no-infinities-rcd) (g$13373$sFQex $core-rtd &i/o-encoding-rtd &i/o-encoding-rcd) (g$13372$sFQex $core-rtd &i/o-decoding-rtd &i/o-decoding-rcd) (g$13371$sFQex $core-rtd &i/o-port-rtd &i/o-port-rcd) (g$13370$sFQex $core-rtd &i/o-file-does-not-exist-rtd &i/o-file-does-not-exist-rcd) (g$13369$sFQex $core-rtd &i/o-file-already-exists-rtd &i/o-file-already-exists-rcd) (g$13368$sFQex $core-rtd &i/o-file-is-read-only-rtd &i/o-fie-is-read-only-rcd) (g$13367$sFQex $core-rtd &i/o-file-protection-rtd &i/o-file-protection-rcd) (g$13366$sFQex $core-rtd &i/o-filename-rtd &i/o-filename-rcd) (g$13365$sFQex $core-rtd &i/o-invalid-position-rtd &i/o-invalid-position-rcd) (g$13364$sFQex $core-rtd &i/o-write-rtd &i/o-write-rcd) (g$13363$sFQex $core-rtd &i/o-read-rtd &i/o-read-rcd) (g$13362$sFQex $core-rtd &i/o-rtd &i/o-rcd) (g$13361$sFQex $core-rtd &non-continuable-rtd &non-continuable-rcd) (g$13360$sFQex $core-rtd &undefined-rtd &undefined-rcd) (g$13359$sFQex $core-rtd &syntax-rtd &syntax-rcd) (g$13358$sFQex $core-rtd &lexical-rtd &lexical-rcd) (g$13357$sFQex $core-rtd &implementation-restriction-rtd &implementation-restriction-rcd) (g$13356$sFQex $core-rtd &who-rtd &who-rcd) (g$13355$sFQex $core-rtd &irritants-rtd &irritants-rcd) (g$13354$sFQex $core-rtd &assertion-rtd &assertion-rcd) (g$13353$sFQex $core-rtd &violation-rtd &violation-rcd) (g$13352$sFQex $core-rtd &error-rtd &error-rcd) (g$13351$sFQex $core-rtd &serious-rtd &serious-rcd) (g$13350$sFQex $core-rtd &warning-rtd &warning-rcd) (g$13349$sFQex $core-rtd &message-rtd &message-rcd) (g$13348$sFQex $core-rtd &condition-rtd &condition-rcd) (g$13347$sFQex macro . define-condition-type) (g$13346$sFQex macro . define-enumeration) (g$13345$sFQex macro . define-record-type) (g$13344$sFQex macro . parent-rtd) (g$13343$sFQex macro . nongenerative) (g$13342$sFQex macro . opaque) (g$13341$sFQex macro . sealed) (g$13340$sFQex macro . protocol) (g$13339$sFQex macro . parent) (g$13338$sFQex macro . immutable) (g$13337$sFQex macro . mutable) (g$13336$sFQex macro . fields) (g$13335$sFQex macro . error-handling-mode) (g$13334$sFQex macro . file-options) (g$13333$sFQex macro . buffer-mode) (g$13332$sFQex macro . eol-style) (g$13331$sFQex macro . guard) (g$13330$sFQex macro . trace-letrec-syntax) (g$13329$sFQex macro . trace-let-syntax) (g$13328$sFQex macro . trace-define-syntax) (g$13327$sFQex macro . trace-define) (g$13326$sFQex macro . trace-lambda) (g$13325$sFQex macro . unsyntax-splicing) (g$13324$sFQex macro . unsyntax) (g$13323$sFQex macro . unquote-splicing) (g$13322$sFQex macro . unquote) (g$13321$sFQex macro . _) (g$13320$sFQex macro . else) (g$13319$sFQex macro . =>) (g$13318$sFQex macro . ...) (g$13317$sFQex macro . assert) (g$13316$sFQex macro . endianness) (g$13315$sFQex macro . delay) (g$13314$sFQex macro . time) (g$13313$sFQex macro . or) (g$13312$sFQex macro . and) (g$13311$sFQex macro . do) (g$13310$sFQex macro . cond) (g$13309$sFQex macro . let*) (g$13308$sFQex macro . let) (g$13307$sFQex macro . identifier-syntax) (g$13306$sFQex macro . with-syntax) (g$13305$sFQex macro . quasisyntax) (g$13304$sFQex macro . quasiquote) (g$13303$sFQex macro . syntax-rules) (g$13302$sFQex macro . include-into) (g$13301$sFQex macro . include) (g$13300$sFQex macro . define-struct) (g$13299$sFQex macro . let-values) (g$13298$sFQex macro . let*-values) (g$13297$sFQex core-macro . record-constructor-descriptor) (g$13296$sFQex core-macro . record-type-descriptor) (g$13295$sFQex core-macro . fluid-let-syntax) (g$13294$sFQex macro . case) (g$13293$sFQex macro . parameterize) (g$13292$sFQex macro . unless) (g$13291$sFQex macro . when) (g$13290$sFQex core-macro . if) (g$13289$sFQex core-macro . letrec*) (g$13288$sFQex core-macro . letrec) (g$13287$sFQex core-macro . type-descriptor) (g$13286$sFQex core-macro . case-lambda) (g$13285$sFQex core-macro . lambda) (g$13284$sFQex core-macro . syntax) (g$13283$sFQex core-macro . syntax-case) (g$13282$sFQex core-macro . quote) (g$13281$sFQex core-macro . foreign-call) (g$13280$sFQex letrec-syntax) (g$13279$sFQex let-syntax) (g$13278$sFQex set!) (g$13277$sFQex export) (g$13276$sFQex import) (g$13275$sFQex library) (g$13274$sFQex begin) (g$13273$sFQex module) (g$13272$sFQex define-syntax) (g$13271$sFQex define)) values values '#f '#f '#f '#f))) 'g$13824$sFQex '(rnrs records syntactic) '(6) '() '() '() '((define-record-type . g$13345$sFQex) (parent-rtd . g$13344$sFQex) (nongenerative . g$13343$sFQex) (opaque . g$13342$sFQex) (sealed . g$13341$sFQex) (protocol . g$13340$sFQex) (parent . g$13339$sFQex) (immutable . g$13338$sFQex) (mutable . g$13337$sFQex) (fields . g$13336$sFQex) (record-constructor-descriptor . g$13297$sFQex) (record-type-descriptor . g$13296$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13823$sFQex '(rnrs records procedural) '(6) '() '() '() '((record-type-descriptor? . g$13682$sFQex) (record-predicate . g$13681$sFQex) (record-mutator . g$13680$sFQex) (record-constructor . g$13679$sFQex) (record-accessor . g$13678$sFQex) (make-record-type-descriptor . g$13677$sFQex) (make-record-constructor-descriptor . g$13676$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13822$sFQex '(rnrs records inspection) '(6) '() '() '() '((record? . g$13675$sFQex) (record-type-uid . g$13674$sFQex) (record-type-sealed? . g$13673$sFQex) (record-type-parent . g$13672$sFQex) (record-type-opaque? . g$13671$sFQex) (record-type-name . g$13670$sFQex) (record-type-generative? . g$13669$sFQex) (record-type-field-names . g$13668$sFQex) (record-rtd . g$13667$sFQex) (record-field-mutable? . g$13666$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13821$sFQex '(rnrs conditions) '(6) '() '() '() '((who-condition? . g$7748$sFQex) (warning? . g$7659$sFQex) (violation? . g$7701$sFQex) (undefined-violation? . g$7825$sFQex) (syntax-violation? . g$7809$sFQex) (syntax-violation-subform . g$7811$sFQex) (syntax-violation-form . g$7810$sFQex) (simple-conditions . g$13575$sFQex) (serious-condition? . g$7673$sFQex) (non-continuable-violation? . g$7763$sFQex) (message-condition? . g$7644$sFQex) (make-who-condition . g$7746$sFQex) (make-warning . g$7658$sFQex) (make-violation . g$7700$sFQex) (make-undefined-violation . g$7824$sFQex) (make-syntax-violation . g$7806$sFQex) (make-serious-condition . g$7672$sFQex) (make-non-continuable-violation . g$7762$sFQex) (make-message-condition . g$7642$sFQex) (make-lexical-violation . g$7790$sFQex) (make-irritants-condition . g$7729$sFQex) (make-implementation-restriction-violation . g$7776$sFQex) (make-error . g$7686$sFQex) (make-assertion-violation . g$7714$sFQex) (lexical-violation? . g$7791$sFQex) (irritants-condition? . g$7731$sFQex) (implementation-restriction-violation? . g$7777$sFQex) (error? . g$7687$sFQex) (condition-who . g$7749$sFQex) (condition-predicate . g$13574$sFQex) (condition-message . g$7645$sFQex) (condition-irritants . g$7732$sFQex) (condition-accessor . g$13573$sFQex) (condition . g$13572$sFQex) (assertion-violation? . g$7715$sFQex) (condition? . g$13571$sFQex) (&non-continuable . g$13361$sFQex) (&undefined . g$13360$sFQex) (&syntax . g$13359$sFQex) (&lexical . g$13358$sFQex) (&implementation-restriction . g$13357$sFQex) (&who . g$13356$sFQex) (&irritants . g$13355$sFQex) (&assertion . g$13354$sFQex) (&violation . g$13353$sFQex) (&error . g$13352$sFQex) (&serious . g$13351$sFQex) (&warning . g$13350$sFQex) (&message . g$13349$sFQex) (&condition . g$13348$sFQex) (define-condition-type . g$13347$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13820$sFQex '(rnrs enums) '(6) '() '() '() '((make-enumeration . g$8575$sFQex) (enum-set=? . g$8582$sFQex) (enum-set-universe . g$8576$sFQex) (enum-set-union . g$8583$sFQex) (enum-set-subset? . g$8581$sFQex) (enum-set-projection . g$8587$sFQex) (enum-set-member? . g$8580$sFQex) (enum-set-intersection . g$8584$sFQex) (enum-set-indexer . g$8577$sFQex) (enum-set-difference . g$8585$sFQex) (enum-set-constructor . g$8578$sFQex) (enum-set-complement . g$8586$sFQex) (enum-set->list . g$8579$sFQex) (define-enumeration . g$13346$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13819$sFQex '(rnrs io ports) '(6) '() '() '() '((eof-object? . g$13644$sFQex) (eof-object . g$13643$sFQex) (current-error-port . g$13642$sFQex) (current-output-port . g$13641$sFQex) (current-input-port . g$13640$sFQex) (output-port? . g$13639$sFQex) (input-port? . g$13638$sFQex) (utf-8-codec . g$13637$sFQex) (utf-16-codec . g$13636$sFQex) (transcoder-error-handling-mode . g$13635$sFQex) (transcoder-eol-style . g$13634$sFQex) (transcoder-codec . g$13633$sFQex) (transcoded-port . g$13632$sFQex) (textual-port? . g$13631$sFQex) (string->bytevector . g$13630$sFQex) (standard-output-port . g$13629$sFQex) (standard-input-port . g$13628$sFQex) (standard-error-port . g$13627$sFQex) (set-port-position! . g$13626$sFQex) (put-u8 . g$13625$sFQex) (put-string . g$13624$sFQex) (put-datum . g$8469$sFQex) (put-char . g$13623$sFQex) (put-bytevector . g$13622$sFQex) (port? . g$8474$sFQex) (port-transcoder . g$13621$sFQex) (port-position . g$13620$sFQex) (port-has-set-port-position!? . g$13619$sFQex) (port-has-port-position? . g$13618$sFQex) (port-eof? . g$13617$sFQex) (output-port-buffer-mode . g$13616$sFQex) (open-string-output-port . g$8473$sFQex) (open-string-input-port . g$13615$sFQex) (open-file-output-port . g$13614$sFQex) (open-file-input/output-port . g$13613$sFQex) (open-file-input-port . g$13612$sFQex) (open-bytevector-output-port . g$13611$sFQex) (open-bytevector-input-port . g$13610$sFQex) (native-transcoder . g$13609$sFQex) (native-eol-style . g$13608$sFQex) (make-transcoder . g$13607$sFQex) (latin-1-codec . g$13606$sFQex) (make-i/o-write-error . g$8327$sFQex) (make-i/o-read-error . g$8313$sFQex) (make-i/o-port-error . g$8432$sFQex) (make-i/o-invalid-position-error . g$8342$sFQex) (make-i/o-filename-error . g$8359$sFQex) (make-i/o-file-protection-error . g$8375$sFQex) (make-i/o-file-is-read-only-error . g$8389$sFQex) (make-i/o-file-does-not-exist-error . g$8417$sFQex) (make-i/o-file-already-exists-error . g$8403$sFQex) (make-i/o-error . g$8299$sFQex) (make-i/o-encoding-error . g$8463$sFQex) (make-i/o-decoding-error . g$8448$sFQex) (make-custom-textual-output-port . g$13605$sFQex) (make-custom-textual-input/output-port . g$13604$sFQex) (make-custom-textual-input-port . g$13603$sFQex) (make-custom-binary-output-port . g$13602$sFQex) (make-custom-binary-input/output-port . g$13601$sFQex) (make-custom-binary-input-port . g$13600$sFQex) (lookahead-u8 . g$13598$sFQex) (lookahead-char . g$13597$sFQex) (i/o-write-error? . g$8328$sFQex) (i/o-read-error? . g$8314$sFQex) (i/o-port-error? . g$8434$sFQex) (i/o-invalid-position-error? . g$8344$sFQex) (i/o-error-position . g$8345$sFQex) (i/o-filename-error? . g$8361$sFQex) (i/o-file-protection-error? . g$8376$sFQex) (i/o-file-is-read-only-error? . g$8390$sFQex) (i/o-file-does-not-exist-error? . g$8418$sFQex) (i/o-file-already-exists-error? . g$8404$sFQex) (i/o-error? . g$8300$sFQex) (i/o-error-port . g$8435$sFQex) (i/o-error-filename . g$8362$sFQex) (i/o-encoding-error? . g$8465$sFQex) (i/o-encoding-error-char . g$8466$sFQex) (i/o-decoding-error? . g$8449$sFQex) (get-u8 . g$13596$sFQex) (get-string-n! . g$13595$sFQex) (get-string-n . g$13594$sFQex) (get-string-all . g$13593$sFQex) (get-line . g$13592$sFQex) (get-datum . g$8470$sFQex) (get-char . g$13591$sFQex) (get-bytevector-some . g$13590$sFQex) (get-bytevector-n! . g$13589$sFQex) (get-bytevector-n . g$13588$sFQex) (get-bytevector-all . g$13587$sFQex) (flush-output-port . g$13586$sFQex) (close-port . g$13585$sFQex) (call-with-string-output-port . g$8475$sFQex) (call-with-port . g$8476$sFQex) (call-with-bytevector-output-port . g$13584$sFQex) (bytevector->string . g$13583$sFQex) (buffer-mode? . g$13582$sFQex) (binary-port? . g$13581$sFQex) (&i/o-encoding . g$13373$sFQex) (&i/o-decoding . g$13372$sFQex) (&i/o-port . g$13371$sFQex) (&i/o-file-does-not-exist . g$13370$sFQex) (&i/o-file-already-exists . g$13369$sFQex) (&i/o-file-is-read-only . g$13368$sFQex) (&i/o-file-protection . g$13367$sFQex) (&i/o-filename . g$13366$sFQex) (&i/o-invalid-position . g$13365$sFQex) (&i/o-write . g$13364$sFQex) (&i/o-read . g$13363$sFQex) (&i/o . g$13362$sFQex) (error-handling-mode . g$13335$sFQex) (file-options . g$13334$sFQex) (buffer-mode . g$13333$sFQex) (eol-style . g$13332$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13818$sFQex '(rnrs hashtables) '(6) '() '() '() '((symbol-hash . g$13663$sFQex) (string-ci-hash . g$13662$sFQex) (string-hash . g$13661$sFQex) (equal-hash . g$13660$sFQex) (hashtable-equivalence-function . g$13659$sFQex) (make-hashtable . g$13658$sFQex) (hashtable-hash-function . g$13657$sFQex) (make-eqv-hashtable . g$7439$sFQex) (make-eq-hashtable . g$7438$sFQex) (hashtable? . g$13656$sFQex) (hashtable-update! . g$7445$sFQex) (hashtable-size . g$7440$sFQex) (hashtable-set! . g$7442$sFQex) (hashtable-ref . g$7441$sFQex) (hashtable-mutable? . g$13655$sFQex) (hashtable-keys . g$13654$sFQex) (hashtable-entries . g$13653$sFQex) (hashtable-delete! . g$7443$sFQex) (hashtable-copy . g$13652$sFQex) (hashtable-contains? . g$7444$sFQex) (hashtable-clear! . g$7446$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13817$sFQex '(rnrs arithmetic flonums) '(6) '() '() '() '((no-nans-violation? . g$8212$sFQex) (no-infinities-violation? . g$8198$sFQex) (make-no-nans-violation . g$8211$sFQex) (make-no-infinities-violation . g$8197$sFQex) (real->flonum . g$13541$sFQex) (flzero? . g$8180$sFQex) (fltruncate . g$8175$sFQex) (fltan . g$8165$sFQex) (flsqrt . g$8170$sFQex) (flsin . g$8163$sFQex) (flround . g$8176$sFQex) (flpositive? . g$8178$sFQex) (flonum? . g$7110$sFQex) (flodd? . g$8182$sFQex) (flnumerator . g$13540$sFQex) (flnegative? . g$8179$sFQex) (flnan? . g$8162$sFQex) (flmod0 . g$8158$sFQex) (flmod . g$8157$sFQex) (flmin . g$8184$sFQex) (flmax . g$8183$sFQex) (fllog . g$8169$sFQex) (flinteger? . g$8159$sFQex) (flinfinite? . g$8161$sFQex) (flfloor . g$8174$sFQex) (flfinite? . g$8160$sFQex) (flexpt . g$8172$sFQex) (flexp . g$8171$sFQex) (fleven? . g$8181$sFQex) (fldiv0-and-mod0 . g$8154$sFQex) (fldiv0 . g$8156$sFQex) (fldiv-and-mod . g$8153$sFQex) (fldiv . g$8155$sFQex) (fldenominator . g$13539$sFQex) (flcos . g$8164$sFQex) (flceiling . g$8173$sFQex) (flatan . g$8168$sFQex) (flasin . g$8166$sFQex) (flacos . g$8167$sFQex) (flabs . g$8177$sFQex) (fl>? . g$13538$sFQex) (fl>=? . g$13537$sFQex) (fl=? . g$13536$sFQex) (fl<? . g$13535$sFQex) (fl<=? . g$13534$sFQex) (fl/ . g$13533$sFQex) (fl- . g$13532$sFQex) (fl+ . g$13531$sFQex) (fl* . g$13530$sFQex) (fixnum->flonum . g$13529$sFQex) (&no-nans . g$13375$sFQex) (&no-infinities . g$13374$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13816$sFQex '(rnrs arithmetic fixnums) '(6) '() '() '() '((fxzero? . g$8061$sFQex) (fxxor . g$13528$sFQex) (fxrotate-bit-field . g$8075$sFQex) (fxreverse-bit-field . g$13527$sFQex) (fxpositive? . g$8059$sFQex) (fxodd? . g$8063$sFQex) (fxnot . g$13526$sFQex) (fxnegative? . g$8060$sFQex) (fxmod0 . g$8058$sFQex) (fxmod . g$8057$sFQex) (fxmin . g$8065$sFQex) (fxmax . g$8064$sFQex) (fxlength . g$13525$sFQex) (fxior . g$13524$sFQex) (fxif . g$8069$sFQex) (fxfirst-bit-set . g$13523$sFQex) (fxeven? . g$8062$sFQex) (fxdiv0-and-mod0 . g$13522$sFQex) (fxdiv0 . g$8056$sFQex) (fxdiv-and-mod . g$13521$sFQex) (fxdiv . g$8055$sFQex) (fxcopy-bit-field . g$8072$sFQex) (fxcopy-bit . g$8070$sFQex) (fxbit-set? . g$13520$sFQex) (fxbit-field . g$8071$sFQex) (fxbit-count . g$13519$sFQex) (fxarithmetic-shift-right . g$8074$sFQex) (fxarithmetic-shift-left . g$8073$sFQex) (fxarithmetic-shift . g$13518$sFQex) (fxand . g$13517$sFQex) (fx>? . g$13516$sFQex) (fx>=? . g$13515$sFQex) (fx=? . g$13514$sFQex) (fx<? . g$13513$sFQex) (fx<=? . g$13512$sFQex) (fx-/carry . g$8067$sFQex) (fx- . g$13511$sFQex) (fx+/carry . g$8068$sFQex) (fx+ . g$13510$sFQex) (fx*/carry . g$8066$sFQex) (fx* . g$13509$sFQex) (greatest-fixnum . g$13508$sFQex) (least-fixnum . g$13507$sFQex) (fixnum-width . g$7111$sFQex) (fixnum? . g$7109$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13815$sFQex '(rnrs arithmetic bitwise) '(6) '() '() '() '((bitwise-rotate-bit-field . g$8029$sFQex) (bitwise-reverse-bit-field . g$13506$sFQex) (bitwise-length . g$13505$sFQex) (bitwise-if . g$8023$sFQex) (bitwise-first-bit-set . g$13504$sFQex) (bitwise-copy-bit-field . g$8026$sFQex) (bitwise-copy-bit . g$8024$sFQex) (bitwise-bit-set? . g$13503$sFQex) (bitwise-bit-field . g$8025$sFQex) (bitwise-bit-count . g$13502$sFQex) (bitwise-xor . g$13501$sFQex) (bitwise-ior . g$13500$sFQex) (bitwise-and . g$13499$sFQex) (bitwise-not . g$13498$sFQex) (bitwise-arithmetic-shift-right . g$8028$sFQex) (bitwise-arithmetic-shift-left . g$8027$sFQex) (bitwise-arithmetic-shift . g$13497$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13814$sFQex '(rnrs exceptions) '(6) '() '() '() '((with-exception-handler . g$7592$sFQex) (raise-continuable . g$7595$sFQex) (raise . g$7594$sFQex) (guard . g$13331$sFQex) (else . g$13320$sFQex) (=> . g$13319$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13813$sFQex '(rnrs unicode) '(6) '() '() '() '((string-upcase . g$13697$sFQex) (string-titlecase . g$13696$sFQex) (string-normalize-nfkd . g$7965$sFQex) (string-normalize-nfkc . g$7964$sFQex) (string-normalize-nfd . g$7963$sFQex) (string-normalize-nfc . g$7962$sFQex) (string-foldcase . g$13695$sFQex) (string-downcase . g$13694$sFQex) (string-ci>? . g$7920$sFQex) (string-ci>=? . g$7922$sFQex) (string-ci=? . g$7918$sFQex) (string-ci<? . g$7919$sFQex) (string-ci<=? . g$7921$sFQex) (char-whitespace? . g$13693$sFQex) (char-upper-case? . g$13692$sFQex) (char-title-case? . g$13691$sFQex) (char-numeric? . g$13690$sFQex) (char-lower-case? . g$13689$sFQex) (char-general-category . g$13688$sFQex) (char-upcase . g$13687$sFQex) (char-titlecase . g$13686$sFQex) (char-foldcase . g$13685$sFQex) (char-downcase . g$13684$sFQex) (char-ci>? . g$7959$sFQex) (char-ci>=? . g$7961$sFQex) (char-ci=? . g$7957$sFQex) (char-ci<? . g$7958$sFQex) (char-ci<=? . g$7960$sFQex) (char-alphabetic? . g$13683$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13812$sFQex '(rnrs bytevectors) '(6) '() '() '() '((make-bytevector . g$13599$sFQex) (utf32->string . g$13570$sFQex) (utf16->string . g$13569$sFQex) (utf8->string . g$13568$sFQex) (uint-list->bytevector . g$13567$sFQex) (u8-list->bytevector . g$13566$sFQex) (string->utf8 . g$13565$sFQex) (string->utf32 . g$13564$sFQex) (string->utf16 . g$13563$sFQex) (sint-list->bytevector . g$13562$sFQex) (native-endianness . g$7477$sFQex) (bytevector? . g$7105$sFQex) (bytevector=? . g$13561$sFQex) (bytevector-uint-set! . g$13560$sFQex) (bytevector-uint-ref . g$13559$sFQex) (bytevector-u8-set! . g$13558$sFQex) (bytevector-u8-ref . g$13557$sFQex) (bytevector-u64-set! . g$7498$sFQex) (bytevector-u64-ref . g$7494$sFQex) (bytevector-u64-native-set! . g$7500$sFQex) (bytevector-u64-native-ref . g$7496$sFQex) (bytevector-u32-set! . g$7490$sFQex) (bytevector-u32-ref . g$7486$sFQex) (bytevector-u32-native-set! . g$7492$sFQex) (bytevector-u32-native-ref . g$7488$sFQex) (bytevector-u16-set! . g$7482$sFQex) (bytevector-u16-ref . g$7478$sFQex) (bytevector-u16-native-set! . g$7484$sFQex) (bytevector-u16-native-ref . g$7480$sFQex) (bytevector-sint-set! . g$13556$sFQex) (bytevector-sint-ref . g$13555$sFQex) (bytevector-s8-set! . g$13554$sFQex) (bytevector-s8-ref . g$13553$sFQex) (bytevector-s64-set! . g$7499$sFQex) (bytevector-s64-ref . g$7495$sFQex) (bytevector-s64-native-set! . g$7501$sFQex) (bytevector-s64-native-ref . g$7497$sFQex) (bytevector-s32-set! . g$7491$sFQex) (bytevector-s32-ref . g$7487$sFQex) (bytevector-s32-native-set! . g$7493$sFQex) (bytevector-s32-native-ref . g$7489$sFQex) (bytevector-s16-set! . g$7483$sFQex) (bytevector-s16-ref . g$7479$sFQex) (bytevector-s16-native-set! . g$7485$sFQex) (bytevector-s16-native-ref . g$7481$sFQex) (bytevector-length . g$13552$sFQex) (bytevector-ieee-single-set! . g$13551$sFQex) (bytevector-ieee-single-ref . g$13550$sFQex) (bytevector-ieee-single-native-set! . g$7504$sFQex) (bytevector-ieee-single-native-ref . g$7502$sFQex) (bytevector-ieee-double-set! . g$13549$sFQex) (bytevector-ieee-double-ref . g$13548$sFQex) (bytevector-ieee-double-native-set! . g$7505$sFQex) (bytevector-ieee-double-native-ref . g$7503$sFQex) (bytevector-fill! . g$13547$sFQex) (bytevector-copy! . g$13546$sFQex) (bytevector-copy . g$13545$sFQex) (bytevector->uint-list . g$13544$sFQex) (bytevector->u8-list . g$13543$sFQex) (bytevector->sint-list . g$13542$sFQex) (endianness . g$13316$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13811$sFQex '(rnrs io simple) '(6) '() '() '() '((call-with-output-file . g$8510$sFQex) (call-with-input-file . g$8509$sFQex) (write-char . g$8491$sFQex) (write . g$13651$sFQex) (with-output-to-file . g$8508$sFQex) (with-input-from-file . g$8507$sFQex) (read-char . g$8490$sFQex) (read . g$13650$sFQex) (peek-char . g$8489$sFQex) (open-output-file . g$13649$sFQex) (open-input-file . g$13648$sFQex) (newline . g$8511$sFQex) (display . g$13647$sFQex) (close-output-port . g$13646$sFQex) (close-input-port . g$13645$sFQex) (eof-object? . g$13644$sFQex) (eof-object . g$13643$sFQex) (current-error-port . g$13642$sFQex) (current-output-port . g$13641$sFQex) (current-input-port . g$13640$sFQex) (output-port? . g$13639$sFQex) (input-port? . g$13638$sFQex) (make-i/o-write-error . g$8327$sFQex) (make-i/o-read-error . g$8313$sFQex) (make-i/o-port-error . g$8432$sFQex) (make-i/o-invalid-position-error . g$8342$sFQex) (make-i/o-filename-error . g$8359$sFQex) (make-i/o-file-protection-error . g$8375$sFQex) (make-i/o-file-is-read-only-error . g$8389$sFQex) (make-i/o-file-does-not-exist-error . g$8417$sFQex) (make-i/o-file-already-exists-error . g$8403$sFQex) (make-i/o-error . g$8299$sFQex) (i/o-write-error? . g$8328$sFQex) (i/o-read-error? . g$8314$sFQex) (i/o-port-error? . g$8434$sFQex) (i/o-invalid-position-error? . g$8344$sFQex) (i/o-error-position . g$8345$sFQex) (i/o-filename-error? . g$8361$sFQex) (i/o-file-protection-error? . g$8376$sFQex) (i/o-file-is-read-only-error? . g$8390$sFQex) (i/o-file-does-not-exist-error? . g$8418$sFQex) (i/o-file-already-exists-error? . g$8404$sFQex) (i/o-error? . g$8300$sFQex) (i/o-error-port . g$8435$sFQex) (i/o-error-filename . g$8362$sFQex) (&i/o-port . g$13371$sFQex) (&i/o-file-does-not-exist . g$13370$sFQex) (&i/o-file-already-exists . g$13369$sFQex) (&i/o-file-is-read-only . g$13368$sFQex) (&i/o-file-protection . g$13367$sFQex) (&i/o-filename . g$13366$sFQex) (&i/o-invalid-position . g$13365$sFQex) (&i/o-write . g$13364$sFQex) (&i/o-read . g$13363$sFQex) (&i/o . g$13362$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13810$sFQex '(rnrs lists) '(6) '() '() '() '((remove . g$6685$sFQex) (remv . g$6686$sFQex) (remp . g$6666$sFQex) (remq . g$6687$sFQex) (partition . g$6665$sFQex) (memv . g$6673$sFQex) (memq . g$6672$sFQex) (memp . g$6675$sFQex) (member . g$6674$sFQex) (exists . g$6679$sFQex) (for-all . g$6678$sFQex) (fold-right . g$6684$sFQex) (fold-left . g$6683$sFQex) (find . g$6664$sFQex) (filter . g$6667$sFQex) (cons* . g$6682$sFQex) (assv . g$6669$sFQex) (assq . g$6668$sFQex) (assp . g$6671$sFQex) (assoc . g$6670$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13809$sFQex '(rnrs base) '(6) '() '() '() '((zero? . g$7144$sFQex) (vector? . g$7104$sFQex) (vector-set! . g$13496$sFQex) (vector-ref . g$13495$sFQex) (vector-map . g$7238$sFQex) (vector-length . g$13494$sFQex) (vector-for-each . g$7239$sFQex) (vector-fill! . g$7112$sFQex) (vector->list . g$13493$sFQex) (vector . g$13492$sFQex) (values . g$13491$sFQex) (truncate . g$13490$sFQex) (tan . g$13489$sFQex) (symbol? . g$7106$sFQex) (symbol=? . g$7192$sFQex) (symbol->string . g$13488$sFQex) (substring . g$13487$sFQex) (string? . g$13486$sFQex) (string>? . g$7189$sFQex) (string>=? . g$7191$sFQex) (string=? . g$7187$sFQex) (string<? . g$7188$sFQex) (string<=? . g$7190$sFQex) (string-ref . g$13485$sFQex) (string-length . g$13484$sFQex) (string-for-each . g$7240$sFQex) (string-copy . g$13483$sFQex) (string-append . g$13482$sFQex) (string->symbol . g$13481$sFQex) (string->number . g$13480$sFQex) (string->list . g$13479$sFQex) (string . g$13478$sFQex) (sqrt . g$13477$sFQex) (sin . g$13476$sFQex) (round . g$13475$sFQex) (reverse . g$7113$sFQex) (real? . g$13474$sFQex) (real-valued? . g$13473$sFQex) (real-part . g$13472$sFQex) (rationalize . g$7235$sFQex) (rational? . g$13471$sFQex) (rational-valued? . g$13470$sFQex) (procedure? . g$7108$sFQex) (positive? . g$7142$sFQex) (pair? . g$13469$sFQex) (odd? . g$7146$sFQex) (numerator . g$13468$sFQex) (number? . g$13467$sFQex) (number->string . g$13466$sFQex) (null? . g$13465$sFQex) (not . g$13464$sFQex) (negative? . g$7143$sFQex) (nan? . g$13463$sFQex) (min . g$7148$sFQex) (max . g$7147$sFQex) (map . g$6680$sFQex) (make-vector . g$13462$sFQex) (make-string . g$13461$sFQex) (make-rectangular . g$13460$sFQex) (make-polar . g$13459$sFQex) (magnitude . g$13458$sFQex) (log . g$13457$sFQex) (list? . g$13456$sFQex) (list-tail . g$6660$sFQex) (list-ref . g$6661$sFQex) (list->vector . g$7101$sFQex) (list->string . g$7102$sFQex) (list . g$13455$sFQex) (length . g$13454$sFQex) (lcm . g$7150$sFQex) (integer? . g$13453$sFQex) (integer-valued? . g$13452$sFQex) (integer->char . g$13451$sFQex) (infinite? . g$13450$sFQex) (inexact? . g$13449$sFQex) (inexact . g$13448$sFQex) (imag-part . g$13447$sFQex) (gcd . g$7149$sFQex) (for-each . g$6681$sFQex) (floor . g$13446$sFQex) (finite? . g$13445$sFQex) (expt . g$13444$sFQex) (exp . g$13443$sFQex) (exact? . g$13442$sFQex) (exact-integer-sqrt . g$13441$sFQex) (exact . g$13440$sFQex) (even? . g$7145$sFQex) (error . g$7597$sFQex) (eqv? . g$13439$sFQex) (equal? . g$13438$sFQex) (eq? . g$13437$sFQex) (dynamic-wind . g$13436$sFQex) (div0-and-mod0 . g$13435$sFQex) (mod0 . g$7100$sFQex) (div0 . g$7098$sFQex) (div-and-mod . g$13434$sFQex) (mod . g$7099$sFQex) (div . g$7097$sFQex) (denominator . g$13433$sFQex) (cos . g$13432$sFQex) (cons . g$13431$sFQex) (complex? . g$13430$sFQex) (char? . g$7103$sFQex) (char>? . g$7232$sFQex) (char>=? . g$7234$sFQex) (char=? . g$7230$sFQex) (char<? . g$7231$sFQex) (char<=? . g$7233$sFQex) (char->integer . g$13429$sFQex) (ceiling . g$13428$sFQex) (call-with-values . g$13427$sFQex) (call/cc . g$13426$sFQex) (call-with-current-continuation . g$13425$sFQex) (cddddr . g$7141$sFQex) (cdddar . g$7140$sFQex) (cddadr . g$7139$sFQex) (cddaar . g$7138$sFQex) (cdaddr . g$7137$sFQex) (cdadar . g$7136$sFQex) (cdaadr . g$7135$sFQex) (cdaaar . g$7134$sFQex) (cadddr . g$7133$sFQex) (caddar . g$7132$sFQex) (cadadr . g$7131$sFQex) (cadaar . g$7130$sFQex) (caaddr . g$7129$sFQex) (caadar . g$7128$sFQex) (caaadr . g$7127$sFQex) (caaaar . g$7126$sFQex) (cdddr . g$7125$sFQex) (cddar . g$7124$sFQex) (cdadr . g$7123$sFQex) (cdaar . g$7122$sFQex) (caddr . g$7121$sFQex) (cadar . g$7120$sFQex) (caadr . g$7119$sFQex) (caaar . g$7118$sFQex) (cddr . g$7117$sFQex) (cdar . g$7116$sFQex) (cadr . g$7115$sFQex) (caar . g$7114$sFQex) (cdr . g$13424$sFQex) (car . g$13423$sFQex) (boolean? . g$7107$sFQex) (boolean=? . g$7193$sFQex) (atan . g$13422$sFQex) (assertion-violation . g$7596$sFQex) (asin . g$13421$sFQex) (apply . g$13420$sFQex) (append . g$13419$sFQex) (angle . g$13418$sFQex) (acos . g$13417$sFQex) (abs . g$13416$sFQex) (/ . g$13415$sFQex) (* . g$13414$sFQex) (- . g$13413$sFQex) (+ . g$13412$sFQex) (>= . g$13411$sFQex) (> . g$13410$sFQex) (= . g$13409$sFQex) (<= . g$13408$sFQex) (< . g$13407$sFQex) (unquote-splicing . g$13323$sFQex) (unquote . g$13322$sFQex) (_ . g$13321$sFQex) (else . g$13320$sFQex) (=> . g$13319$sFQex) (... . g$13318$sFQex) (assert . g$13317$sFQex) (or . g$13313$sFQex) (and . g$13312$sFQex) (cond . g$13310$sFQex) (let* . g$13309$sFQex) (let . g$13308$sFQex) (identifier-syntax . g$13307$sFQex) (quasiquote . g$13304$sFQex) (syntax-rules . g$13303$sFQex) (let-values . g$13299$sFQex) (let*-values . g$13298$sFQex) (case . g$13294$sFQex) (if . g$13290$sFQex) (letrec* . g$13289$sFQex) (letrec . g$13288$sFQex) (lambda . g$13285$sFQex) (quote . g$13282$sFQex) (letrec-syntax . g$13280$sFQex) (let-syntax . g$13279$sFQex) (set! . g$13278$sFQex) (begin . g$13274$sFQex) (define-syntax . g$13272$sFQex) (define . g$13271$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13808$sFQex '(rnrs sorting) '(6) '() '() '() '((vector-sort! . g$13665$sFQex) (vector-sort . g$13664$sFQex) (list-sort . g$7860$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13807$sFQex '(rnrs files) '(6) '() '() '() '((delete-file . g$7471$sFQex) (file-exists? . g$7470$sFQex) (make-i/o-write-error . g$8327$sFQex) (make-i/o-read-error . g$8313$sFQex) (make-i/o-port-error . g$8432$sFQex) (make-i/o-invalid-position-error . g$8342$sFQex) (make-i/o-filename-error . g$8359$sFQex) (make-i/o-file-protection-error . g$8375$sFQex) (make-i/o-file-is-read-only-error . g$8389$sFQex) (make-i/o-file-does-not-exist-error . g$8417$sFQex) (make-i/o-file-already-exists-error . g$8403$sFQex) (make-i/o-error . g$8299$sFQex) (i/o-write-error? . g$8328$sFQex) (i/o-read-error? . g$8314$sFQex) (i/o-port-error? . g$8434$sFQex) (i/o-invalid-position-error? . g$8344$sFQex) (i/o-error-position . g$8345$sFQex) (i/o-filename-error? . g$8361$sFQex) (i/o-file-protection-error? . g$8376$sFQex) (i/o-file-is-read-only-error? . g$8390$sFQex) (i/o-file-does-not-exist-error? . g$8418$sFQex) (i/o-file-already-exists-error? . g$8404$sFQex) (i/o-error? . g$8300$sFQex) (i/o-error-port . g$8435$sFQex) (i/o-error-filename . g$8362$sFQex) (&i/o-port . g$13371$sFQex) (&i/o-file-does-not-exist . g$13370$sFQex) (&i/o-file-already-exists . g$13369$sFQex) (&i/o-file-is-read-only . g$13368$sFQex) (&i/o-file-protection . g$13367$sFQex) (&i/o-filename . g$13366$sFQex) (&i/o-invalid-position . g$13365$sFQex) (&i/o-write . g$13364$sFQex) (&i/o-read . g$13363$sFQex) (&i/o . g$13362$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13806$sFQex '(rnrs syntax-case) '(6) '() '() '() '((make-variable-transformer . g$9824$sFQex) (identifier? . g$10224$sFQex) (generate-temporaries . g$10213$sFQex) (free-identifier=? . g$10214$sFQex) (syntax->datum . g$10226$sFQex) (datum->syntax . g$10225$sFQex) (bound-identifier=? . g$10215$sFQex) (syntax-violation . g$10223$sFQex) (unsyntax-splicing . g$13325$sFQex) (unsyntax . g$13324$sFQex) (_ . g$13321$sFQex) (... . g$13318$sFQex) (with-syntax . g$13306$sFQex) (quasisyntax . g$13305$sFQex) (syntax . g$13284$sFQex) (syntax-case . g$13283$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13805$sFQex '(rnrs programs) '(6) '() '() '() '((exit . g$13580$sFQex) (command-line . g$13222$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13804$sFQex '(rnrs mutable-strings) '(6) '() '() '() '((string-fill! . g$13579$sFQex) (string-set! . g$13578$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13803$sFQex '(rnrs mutable-pairs) '(6) '() '() '() '((set-cdr! . g$13577$sFQex) (set-car! . g$13576$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13802$sFQex '(rnrs eval) '(6) '() '() '() '((eval . g$10205$sFQex) (environment . g$10201$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13801$sFQex '(rnrs control) '(6) '() '() '() '((do . g$13311$sFQex) (unless . g$13292$sFQex) (when . g$13291$sFQex) (case-lambda . g$13286$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13800$sFQex '(rnrs r5rs) '(6) '() '() '() '((scheme-report-environment . g$10203$sFQex) (quotient . g$7839$sFQex) (null-environment . g$10202$sFQex) (remainder . g$7840$sFQex) (modulo . g$7841$sFQex) (inexact->exact . g$7836$sFQex) (force . g$7843$sFQex) (exact->inexact . g$7837$sFQex) (delay . g$13315$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13799$sFQex '(rnrs) '(6) '() '() '() '((string-upcase . g$13697$sFQex) (string-titlecase . g$13696$sFQex) (string-normalize-nfkd . g$7965$sFQex) (string-normalize-nfkc . g$7964$sFQex) (string-normalize-nfd . g$7963$sFQex) (string-normalize-nfc . g$7962$sFQex) (string-foldcase . g$13695$sFQex) (string-downcase . g$13694$sFQex) (string-ci>? . g$7920$sFQex) (string-ci>=? . g$7922$sFQex) (string-ci=? . g$7918$sFQex) (string-ci<? . g$7919$sFQex) (string-ci<=? . g$7921$sFQex) (char-whitespace? . g$13693$sFQex) (char-upper-case? . g$13692$sFQex) (char-title-case? . g$13691$sFQex) (char-numeric? . g$13690$sFQex) (char-lower-case? . g$13689$sFQex) (char-general-category . g$13688$sFQex) (char-upcase . g$13687$sFQex) (char-titlecase . g$13686$sFQex) (char-foldcase . g$13685$sFQex) (char-downcase . g$13684$sFQex) (char-ci>? . g$7959$sFQex) (char-ci>=? . g$7961$sFQex) (char-ci=? . g$7957$sFQex) (char-ci<? . g$7958$sFQex) (char-ci<=? . g$7960$sFQex) (char-alphabetic? . g$13683$sFQex) (make-variable-transformer . g$9824$sFQex) (identifier? . g$10224$sFQex) (generate-temporaries . g$10213$sFQex) (free-identifier=? . g$10214$sFQex) (syntax->datum . g$10226$sFQex) (datum->syntax . g$10225$sFQex) (bound-identifier=? . g$10215$sFQex) (record-type-descriptor? . g$13682$sFQex) (record-predicate . g$13681$sFQex) (record-mutator . g$13680$sFQex) (record-constructor . g$13679$sFQex) (record-accessor . g$13678$sFQex) (make-record-type-descriptor . g$13677$sFQex) (make-record-constructor-descriptor . g$13676$sFQex) (record? . g$13675$sFQex) (record-type-uid . g$13674$sFQex) (record-type-sealed? . g$13673$sFQex) (record-type-parent . g$13672$sFQex) (record-type-opaque? . g$13671$sFQex) (record-type-name . g$13670$sFQex) (record-type-generative? . g$13669$sFQex) (record-type-field-names . g$13668$sFQex) (record-rtd . g$13667$sFQex) (record-field-mutable? . g$13666$sFQex) (delete-file . g$7471$sFQex) (file-exists? . g$7470$sFQex) (vector-sort! . g$13665$sFQex) (vector-sort . g$13664$sFQex) (list-sort . g$7860$sFQex) (symbol-hash . g$13663$sFQex) (string-ci-hash . g$13662$sFQex) (string-hash . g$13661$sFQex) (equal-hash . g$13660$sFQex) (hashtable-equivalence-function . g$13659$sFQex) (make-hashtable . g$13658$sFQex) (hashtable-hash-function . g$13657$sFQex) (make-eqv-hashtable . g$7439$sFQex) (make-eq-hashtable . g$7438$sFQex) (hashtable? . g$13656$sFQex) (hashtable-update! . g$7445$sFQex) (hashtable-size . g$7440$sFQex) (hashtable-set! . g$7442$sFQex) (hashtable-ref . g$7441$sFQex) (hashtable-mutable? . g$13655$sFQex) (hashtable-keys . g$13654$sFQex) (hashtable-entries . g$13653$sFQex) (hashtable-delete! . g$7443$sFQex) (hashtable-copy . g$13652$sFQex) (hashtable-contains? . g$7444$sFQex) (hashtable-clear! . g$7446$sFQex) (call-with-output-file . g$8510$sFQex) (call-with-input-file . g$8509$sFQex) (write-char . g$8491$sFQex) (write . g$13651$sFQex) (with-output-to-file . g$8508$sFQex) (with-input-from-file . g$8507$sFQex) (read-char . g$8490$sFQex) (read . g$13650$sFQex) (peek-char . g$8489$sFQex) (open-output-file . g$13649$sFQex) (open-input-file . g$13648$sFQex) (newline . g$8511$sFQex) (display . g$13647$sFQex) (close-output-port . g$13646$sFQex) (close-input-port . g$13645$sFQex) (eof-object? . g$13644$sFQex) (eof-object . g$13643$sFQex) (current-error-port . g$13642$sFQex) (current-output-port . g$13641$sFQex) (current-input-port . g$13640$sFQex) (output-port? . g$13639$sFQex) (input-port? . g$13638$sFQex) (utf-8-codec . g$13637$sFQex) (utf-16-codec . g$13636$sFQex) (transcoder-error-handling-mode . g$13635$sFQex) (transcoder-eol-style . g$13634$sFQex) (transcoder-codec . g$13633$sFQex) (transcoded-port . g$13632$sFQex) (textual-port? . g$13631$sFQex) (string->bytevector . g$13630$sFQex) (standard-output-port . g$13629$sFQex) (standard-input-port . g$13628$sFQex) (standard-error-port . g$13627$sFQex) (set-port-position! . g$13626$sFQex) (put-u8 . g$13625$sFQex) (put-string . g$13624$sFQex) (put-datum . g$8469$sFQex) (put-char . g$13623$sFQex) (put-bytevector . g$13622$sFQex) (port? . g$8474$sFQex) (port-transcoder . g$13621$sFQex) (port-position . g$13620$sFQex) (port-has-set-port-position!? . g$13619$sFQex) (port-has-port-position? . g$13618$sFQex) (port-eof? . g$13617$sFQex) (output-port-buffer-mode . g$13616$sFQex) (open-string-output-port . g$8473$sFQex) (open-string-input-port . g$13615$sFQex) (open-file-output-port . g$13614$sFQex) (open-file-input/output-port . g$13613$sFQex) (open-file-input-port . g$13612$sFQex) (open-bytevector-output-port . g$13611$sFQex) (open-bytevector-input-port . g$13610$sFQex) (native-transcoder . g$13609$sFQex) (native-eol-style . g$13608$sFQex) (make-transcoder . g$13607$sFQex) (latin-1-codec . g$13606$sFQex) (make-i/o-write-error . g$8327$sFQex) (make-i/o-read-error . g$8313$sFQex) (make-i/o-port-error . g$8432$sFQex) (make-i/o-invalid-position-error . g$8342$sFQex) (make-i/o-filename-error . g$8359$sFQex) (make-i/o-file-protection-error . g$8375$sFQex) (make-i/o-file-is-read-only-error . g$8389$sFQex) (make-i/o-file-does-not-exist-error . g$8417$sFQex) (make-i/o-file-already-exists-error . g$8403$sFQex) (make-i/o-error . g$8299$sFQex) (make-i/o-encoding-error . g$8463$sFQex) (make-i/o-decoding-error . g$8448$sFQex) (make-custom-textual-output-port . g$13605$sFQex) (make-custom-textual-input/output-port . g$13604$sFQex) (make-custom-textual-input-port . g$13603$sFQex) (make-custom-binary-output-port . g$13602$sFQex) (make-custom-binary-input/output-port . g$13601$sFQex) (make-custom-binary-input-port . g$13600$sFQex) (make-bytevector . g$13599$sFQex) (lookahead-u8 . g$13598$sFQex) (lookahead-char . g$13597$sFQex) (i/o-write-error? . g$8328$sFQex) (i/o-read-error? . g$8314$sFQex) (i/o-port-error? . g$8434$sFQex) (i/o-invalid-position-error? . g$8344$sFQex) (i/o-error-position . g$8345$sFQex) (i/o-filename-error? . g$8361$sFQex) (i/o-file-protection-error? . g$8376$sFQex) (i/o-file-is-read-only-error? . g$8390$sFQex) (i/o-file-does-not-exist-error? . g$8418$sFQex) (i/o-file-already-exists-error? . g$8404$sFQex) (i/o-error? . g$8300$sFQex) (i/o-error-port . g$8435$sFQex) (i/o-error-filename . g$8362$sFQex) (i/o-encoding-error? . g$8465$sFQex) (i/o-encoding-error-char . g$8466$sFQex) (i/o-decoding-error? . g$8449$sFQex) (get-u8 . g$13596$sFQex) (get-string-n! . g$13595$sFQex) (get-string-n . g$13594$sFQex) (get-string-all . g$13593$sFQex) (get-line . g$13592$sFQex) (get-datum . g$8470$sFQex) (get-char . g$13591$sFQex) (get-bytevector-some . g$13590$sFQex) (get-bytevector-n! . g$13589$sFQex) (get-bytevector-n . g$13588$sFQex) (get-bytevector-all . g$13587$sFQex) (flush-output-port . g$13586$sFQex) (close-port . g$13585$sFQex) (call-with-string-output-port . g$8475$sFQex) (call-with-port . g$8476$sFQex) (call-with-bytevector-output-port . g$13584$sFQex) (bytevector->string . g$13583$sFQex) (buffer-mode? . g$13582$sFQex) (binary-port? . g$13581$sFQex) (exit . g$13580$sFQex) (command-line . g$13222$sFQex) (remove . g$6685$sFQex) (remv . g$6686$sFQex) (remp . g$6666$sFQex) (remq . g$6687$sFQex) (partition . g$6665$sFQex) (memv . g$6673$sFQex) (memq . g$6672$sFQex) (memp . g$6675$sFQex) (member . g$6674$sFQex) (exists . g$6679$sFQex) (for-all . g$6678$sFQex) (fold-right . g$6684$sFQex) (fold-left . g$6683$sFQex) (find . g$6664$sFQex) (filter . g$6667$sFQex) (cons* . g$6682$sFQex) (assv . g$6669$sFQex) (assq . g$6668$sFQex) (assp . g$6671$sFQex) (assoc . g$6670$sFQex) (with-exception-handler . g$7592$sFQex) (raise-continuable . g$7595$sFQex) (raise . g$7594$sFQex) (make-enumeration . g$8575$sFQex) (enum-set=? . g$8582$sFQex) (enum-set-universe . g$8576$sFQex) (enum-set-union . g$8583$sFQex) (enum-set-subset? . g$8581$sFQex) (enum-set-projection . g$8587$sFQex) (enum-set-member? . g$8580$sFQex) (enum-set-intersection . g$8584$sFQex) (enum-set-indexer . g$8577$sFQex) (enum-set-difference . g$8585$sFQex) (enum-set-constructor . g$8578$sFQex) (enum-set-complement . g$8586$sFQex) (enum-set->list . g$8579$sFQex) (who-condition? . g$7748$sFQex) (warning? . g$7659$sFQex) (violation? . g$7701$sFQex) (undefined-violation? . g$7825$sFQex) (syntax-violation? . g$7809$sFQex) (syntax-violation-subform . g$7811$sFQex) (syntax-violation-form . g$7810$sFQex) (syntax-violation . g$10223$sFQex) (simple-conditions . g$13575$sFQex) (serious-condition? . g$7673$sFQex) (non-continuable-violation? . g$7763$sFQex) (message-condition? . g$7644$sFQex) (make-who-condition . g$7746$sFQex) (make-warning . g$7658$sFQex) (make-violation . g$7700$sFQex) (make-undefined-violation . g$7824$sFQex) (make-syntax-violation . g$7806$sFQex) (make-serious-condition . g$7672$sFQex) (make-non-continuable-violation . g$7762$sFQex) (make-message-condition . g$7642$sFQex) (make-lexical-violation . g$7790$sFQex) (make-irritants-condition . g$7729$sFQex) (make-implementation-restriction-violation . g$7776$sFQex) (make-error . g$7686$sFQex) (make-assertion-violation . g$7714$sFQex) (lexical-violation? . g$7791$sFQex) (irritants-condition? . g$7731$sFQex) (implementation-restriction-violation? . g$7777$sFQex) (error? . g$7687$sFQex) (condition-who . g$7749$sFQex) (condition-predicate . g$13574$sFQex) (condition-message . g$7645$sFQex) (condition-irritants . g$7732$sFQex) (condition-accessor . g$13573$sFQex) (condition . g$13572$sFQex) (assertion-violation? . g$7715$sFQex) (condition? . g$13571$sFQex) (utf32->string . g$13570$sFQex) (utf16->string . g$13569$sFQex) (utf8->string . g$13568$sFQex) (uint-list->bytevector . g$13567$sFQex) (u8-list->bytevector . g$13566$sFQex) (string->utf8 . g$13565$sFQex) (string->utf32 . g$13564$sFQex) (string->utf16 . g$13563$sFQex) (sint-list->bytevector . g$13562$sFQex) (native-endianness . g$7477$sFQex) (bytevector? . g$7105$sFQex) (bytevector=? . g$13561$sFQex) (bytevector-uint-set! . g$13560$sFQex) (bytevector-uint-ref . g$13559$sFQex) (bytevector-u8-set! . g$13558$sFQex) (bytevector-u8-ref . g$13557$sFQex) (bytevector-u64-set! . g$7498$sFQex) (bytevector-u64-ref . g$7494$sFQex) (bytevector-u64-native-set! . g$7500$sFQex) (bytevector-u64-native-ref . g$7496$sFQex) (bytevector-u32-set! . g$7490$sFQex) (bytevector-u32-ref . g$7486$sFQex) (bytevector-u32-native-set! . g$7492$sFQex) (bytevector-u32-native-ref . g$7488$sFQex) (bytevector-u16-set! . g$7482$sFQex) (bytevector-u16-ref . g$7478$sFQex) (bytevector-u16-native-set! . g$7484$sFQex) (bytevector-u16-native-ref . g$7480$sFQex) (bytevector-sint-set! . g$13556$sFQex) (bytevector-sint-ref . g$13555$sFQex) (bytevector-s8-set! . g$13554$sFQex) (bytevector-s8-ref . g$13553$sFQex) (bytevector-s64-set! . g$7499$sFQex) (bytevector-s64-ref . g$7495$sFQex) (bytevector-s64-native-set! . g$7501$sFQex) (bytevector-s64-native-ref . g$7497$sFQex) (bytevector-s32-set! . g$7491$sFQex) (bytevector-s32-ref . g$7487$sFQex) (bytevector-s32-native-set! . g$7493$sFQex) (bytevector-s32-native-ref . g$7489$sFQex) (bytevector-s16-set! . g$7483$sFQex) (bytevector-s16-ref . g$7479$sFQex) (bytevector-s16-native-set! . g$7485$sFQex) (bytevector-s16-native-ref . g$7481$sFQex) (bytevector-length . g$13552$sFQex) (bytevector-ieee-single-set! . g$13551$sFQex) (bytevector-ieee-single-ref . g$13550$sFQex) (bytevector-ieee-single-native-set! . g$7504$sFQex) (bytevector-ieee-single-native-ref . g$7502$sFQex) (bytevector-ieee-double-set! . g$13549$sFQex) (bytevector-ieee-double-ref . g$13548$sFQex) (bytevector-ieee-double-native-set! . g$7505$sFQex) (bytevector-ieee-double-native-ref . g$7503$sFQex) (bytevector-fill! . g$13547$sFQex) (bytevector-copy! . g$13546$sFQex) (bytevector-copy . g$13545$sFQex) (bytevector->uint-list . g$13544$sFQex) (bytevector->u8-list . g$13543$sFQex) (bytevector->sint-list . g$13542$sFQex) (no-nans-violation? . g$8212$sFQex) (no-infinities-violation? . g$8198$sFQex) (make-no-nans-violation . g$8211$sFQex) (make-no-infinities-violation . g$8197$sFQex) (real->flonum . g$13541$sFQex) (flzero? . g$8180$sFQex) (fltruncate . g$8175$sFQex) (fltan . g$8165$sFQex) (flsqrt . g$8170$sFQex) (flsin . g$8163$sFQex) (flround . g$8176$sFQex) (flpositive? . g$8178$sFQex) (flonum? . g$7110$sFQex) (flodd? . g$8182$sFQex) (flnumerator . g$13540$sFQex) (flnegative? . g$8179$sFQex) (flnan? . g$8162$sFQex) (flmod0 . g$8158$sFQex) (flmod . g$8157$sFQex) (flmin . g$8184$sFQex) (flmax . g$8183$sFQex) (fllog . g$8169$sFQex) (flinteger? . g$8159$sFQex) (flinfinite? . g$8161$sFQex) (flfloor . g$8174$sFQex) (flfinite? . g$8160$sFQex) (flexpt . g$8172$sFQex) (flexp . g$8171$sFQex) (fleven? . g$8181$sFQex) (fldiv0-and-mod0 . g$8154$sFQex) (fldiv0 . g$8156$sFQex) (fldiv-and-mod . g$8153$sFQex) (fldiv . g$8155$sFQex) (fldenominator . g$13539$sFQex) (flcos . g$8164$sFQex) (flceiling . g$8173$sFQex) (flatan . g$8168$sFQex) (flasin . g$8166$sFQex) (flacos . g$8167$sFQex) (flabs . g$8177$sFQex) (fl>? . g$13538$sFQex) (fl>=? . g$13537$sFQex) (fl=? . g$13536$sFQex) (fl<? . g$13535$sFQex) (fl<=? . g$13534$sFQex) (fl/ . g$13533$sFQex) (fl- . g$13532$sFQex) (fl+ . g$13531$sFQex) (fl* . g$13530$sFQex) (fixnum->flonum . g$13529$sFQex) (fxzero? . g$8061$sFQex) (fxxor . g$13528$sFQex) (fxrotate-bit-field . g$8075$sFQex) (fxreverse-bit-field . g$13527$sFQex) (fxpositive? . g$8059$sFQex) (fxodd? . g$8063$sFQex) (fxnot . g$13526$sFQex) (fxnegative? . g$8060$sFQex) (fxmod0 . g$8058$sFQex) (fxmod . g$8057$sFQex) (fxmin . g$8065$sFQex) (fxmax . g$8064$sFQex) (fxlength . g$13525$sFQex) (fxior . g$13524$sFQex) (fxif . g$8069$sFQex) (fxfirst-bit-set . g$13523$sFQex) (fxeven? . g$8062$sFQex) (fxdiv0-and-mod0 . g$13522$sFQex) (fxdiv0 . g$8056$sFQex) (fxdiv-and-mod . g$13521$sFQex) (fxdiv . g$8055$sFQex) (fxcopy-bit-field . g$8072$sFQex) (fxcopy-bit . g$8070$sFQex) (fxbit-set? . g$13520$sFQex) (fxbit-field . g$8071$sFQex) (fxbit-count . g$13519$sFQex) (fxarithmetic-shift-right . g$8074$sFQex) (fxarithmetic-shift-left . g$8073$sFQex) (fxarithmetic-shift . g$13518$sFQex) (fxand . g$13517$sFQex) (fx>? . g$13516$sFQex) (fx>=? . g$13515$sFQex) (fx=? . g$13514$sFQex) (fx<? . g$13513$sFQex) (fx<=? . g$13512$sFQex) (fx-/carry . g$8067$sFQex) (fx- . g$13511$sFQex) (fx+/carry . g$8068$sFQex) (fx+ . g$13510$sFQex) (fx*/carry . g$8066$sFQex) (fx* . g$13509$sFQex) (greatest-fixnum . g$13508$sFQex) (least-fixnum . g$13507$sFQex) (fixnum-width . g$7111$sFQex) (fixnum? . g$7109$sFQex) (bitwise-rotate-bit-field . g$8029$sFQex) (bitwise-reverse-bit-field . g$13506$sFQex) (bitwise-length . g$13505$sFQex) (bitwise-if . g$8023$sFQex) (bitwise-first-bit-set . g$13504$sFQex) (bitwise-copy-bit-field . g$8026$sFQex) (bitwise-copy-bit . g$8024$sFQex) (bitwise-bit-set? . g$13503$sFQex) (bitwise-bit-field . g$8025$sFQex) (bitwise-bit-count . g$13502$sFQex) (bitwise-xor . g$13501$sFQex) (bitwise-ior . g$13500$sFQex) (bitwise-and . g$13499$sFQex) (bitwise-not . g$13498$sFQex) (bitwise-arithmetic-shift-right . g$8028$sFQex) (bitwise-arithmetic-shift-left . g$8027$sFQex) (bitwise-arithmetic-shift . g$13497$sFQex) (zero? . g$7144$sFQex) (vector? . g$7104$sFQex) (vector-set! . g$13496$sFQex) (vector-ref . g$13495$sFQex) (vector-map . g$7238$sFQex) (vector-length . g$13494$sFQex) (vector-for-each . g$7239$sFQex) (vector-fill! . g$7112$sFQex) (vector->list . g$13493$sFQex) (vector . g$13492$sFQex) (values . g$13491$sFQex) (truncate . g$13490$sFQex) (tan . g$13489$sFQex) (symbol? . g$7106$sFQex) (symbol=? . g$7192$sFQex) (symbol->string . g$13488$sFQex) (substring . g$13487$sFQex) (string? . g$13486$sFQex) (string>? . g$7189$sFQex) (string>=? . g$7191$sFQex) (string=? . g$7187$sFQex) (string<? . g$7188$sFQex) (string<=? . g$7190$sFQex) (string-ref . g$13485$sFQex) (string-length . g$13484$sFQex) (string-for-each . g$7240$sFQex) (string-copy . g$13483$sFQex) (string-append . g$13482$sFQex) (string->symbol . g$13481$sFQex) (string->number . g$13480$sFQex) (string->list . g$13479$sFQex) (string . g$13478$sFQex) (sqrt . g$13477$sFQex) (sin . g$13476$sFQex) (round . g$13475$sFQex) (reverse . g$7113$sFQex) (real? . g$13474$sFQex) (real-valued? . g$13473$sFQex) (real-part . g$13472$sFQex) (rationalize . g$7235$sFQex) (rational? . g$13471$sFQex) (rational-valued? . g$13470$sFQex) (procedure? . g$7108$sFQex) (positive? . g$7142$sFQex) (pair? . g$13469$sFQex) (odd? . g$7146$sFQex) (numerator . g$13468$sFQex) (number? . g$13467$sFQex) (number->string . g$13466$sFQex) (null? . g$13465$sFQex) (not . g$13464$sFQex) (negative? . g$7143$sFQex) (nan? . g$13463$sFQex) (min . g$7148$sFQex) (max . g$7147$sFQex) (map . g$6680$sFQex) (make-vector . g$13462$sFQex) (make-string . g$13461$sFQex) (make-rectangular . g$13460$sFQex) (make-polar . g$13459$sFQex) (magnitude . g$13458$sFQex) (log . g$13457$sFQex) (list? . g$13456$sFQex) (list-tail . g$6660$sFQex) (list-ref . g$6661$sFQex) (list->vector . g$7101$sFQex) (list->string . g$7102$sFQex) (list . g$13455$sFQex) (length . g$13454$sFQex) (lcm . g$7150$sFQex) (integer? . g$13453$sFQex) (integer-valued? . g$13452$sFQex) (integer->char . g$13451$sFQex) (infinite? . g$13450$sFQex) (inexact? . g$13449$sFQex) (inexact . g$13448$sFQex) (imag-part . g$13447$sFQex) (gcd . g$7149$sFQex) (for-each . g$6681$sFQex) (floor . g$13446$sFQex) (finite? . g$13445$sFQex) (expt . g$13444$sFQex) (exp . g$13443$sFQex) (exact? . g$13442$sFQex) (exact-integer-sqrt . g$13441$sFQex) (exact . g$13440$sFQex) (even? . g$7145$sFQex) (error . g$7597$sFQex) (eqv? . g$13439$sFQex) (equal? . g$13438$sFQex) (eq? . g$13437$sFQex) (dynamic-wind . g$13436$sFQex) (div0-and-mod0 . g$13435$sFQex) (mod0 . g$7100$sFQex) (div0 . g$7098$sFQex) (div-and-mod . g$13434$sFQex) (mod . g$7099$sFQex) (div . g$7097$sFQex) (denominator . g$13433$sFQex) (cos . g$13432$sFQex) (cons . g$13431$sFQex) (complex? . g$13430$sFQex) (char? . g$7103$sFQex) (char>? . g$7232$sFQex) (char>=? . g$7234$sFQex) (char=? . g$7230$sFQex) (char<? . g$7231$sFQex) (char<=? . g$7233$sFQex) (char->integer . g$13429$sFQex) (ceiling . g$13428$sFQex) (call-with-values . g$13427$sFQex) (call/cc . g$13426$sFQex) (call-with-current-continuation . g$13425$sFQex) (cddddr . g$7141$sFQex) (cdddar . g$7140$sFQex) (cddadr . g$7139$sFQex) (cddaar . g$7138$sFQex) (cdaddr . g$7137$sFQex) (cdadar . g$7136$sFQex) (cdaadr . g$7135$sFQex) (cdaaar . g$7134$sFQex) (cadddr . g$7133$sFQex) (caddar . g$7132$sFQex) (cadadr . g$7131$sFQex) (cadaar . g$7130$sFQex) (caaddr . g$7129$sFQex) (caadar . g$7128$sFQex) (caaadr . g$7127$sFQex) (caaaar . g$7126$sFQex) (cdddr . g$7125$sFQex) (cddar . g$7124$sFQex) (cdadr . g$7123$sFQex) (cdaar . g$7122$sFQex) (caddr . g$7121$sFQex) (cadar . g$7120$sFQex) (caadr . g$7119$sFQex) (caaar . g$7118$sFQex) (cddr . g$7117$sFQex) (cdar . g$7116$sFQex) (cadr . g$7115$sFQex) (caar . g$7114$sFQex) (cdr . g$13424$sFQex) (car . g$13423$sFQex) (boolean? . g$7107$sFQex) (boolean=? . g$7193$sFQex) (atan . g$13422$sFQex) (assertion-violation . g$7596$sFQex) (asin . g$13421$sFQex) (apply . g$13420$sFQex) (append . g$13419$sFQex) (angle . g$13418$sFQex) (acos . g$13417$sFQex) (abs . g$13416$sFQex) (/ . g$13415$sFQex) (* . g$13414$sFQex) (- . g$13413$sFQex) (+ . g$13412$sFQex) (>= . g$13411$sFQex) (> . g$13410$sFQex) (= . g$13409$sFQex) (<= . g$13408$sFQex) (< . g$13407$sFQex) (&no-nans . g$13375$sFQex) (&no-infinities . g$13374$sFQex) (&i/o-encoding . g$13373$sFQex) (&i/o-decoding . g$13372$sFQex) (&i/o-port . g$13371$sFQex) (&i/o-file-does-not-exist . g$13370$sFQex) (&i/o-file-already-exists . g$13369$sFQex) (&i/o-file-is-read-only . g$13368$sFQex) (&i/o-file-protection . g$13367$sFQex) (&i/o-filename . g$13366$sFQex) (&i/o-invalid-position . g$13365$sFQex) (&i/o-write . g$13364$sFQex) (&i/o-read . g$13363$sFQex) (&i/o . g$13362$sFQex) (&non-continuable . g$13361$sFQex) (&undefined . g$13360$sFQex) (&syntax . g$13359$sFQex) (&lexical . g$13358$sFQex) (&implementation-restriction . g$13357$sFQex) (&who . g$13356$sFQex) (&irritants . g$13355$sFQex) (&assertion . g$13354$sFQex) (&violation . g$13353$sFQex) (&error . g$13352$sFQex) (&serious . g$13351$sFQex) (&warning . g$13350$sFQex) (&message . g$13349$sFQex) (&condition . g$13348$sFQex) (define-condition-type . g$13347$sFQex) (define-enumeration . g$13346$sFQex) (define-record-type . g$13345$sFQex) (parent-rtd . g$13344$sFQex) (nongenerative . g$13343$sFQex) (opaque . g$13342$sFQex) (sealed . g$13341$sFQex) (protocol . g$13340$sFQex) (parent . g$13339$sFQex) (immutable . g$13338$sFQex) (mutable . g$13337$sFQex) (fields . g$13336$sFQex) (error-handling-mode . g$13335$sFQex) (file-options . g$13334$sFQex) (buffer-mode . g$13333$sFQex) (eol-style . g$13332$sFQex) (guard . g$13331$sFQex) (unsyntax-splicing . g$13325$sFQex) (unsyntax . g$13324$sFQex) (unquote-splicing . g$13323$sFQex) (unquote . g$13322$sFQex) (_ . g$13321$sFQex) (else . g$13320$sFQex) (=> . g$13319$sFQex) (... . g$13318$sFQex) (assert . g$13317$sFQex) (endianness . g$13316$sFQex) (or . g$13313$sFQex) (and . g$13312$sFQex) (do . g$13311$sFQex) (cond . g$13310$sFQex) (let* . g$13309$sFQex) (let . g$13308$sFQex) (identifier-syntax . g$13307$sFQex) (with-syntax . g$13306$sFQex) (quasisyntax . g$13305$sFQex) (quasiquote . g$13304$sFQex) (syntax-rules . g$13303$sFQex) (let-values . g$13299$sFQex) (let*-values . g$13298$sFQex) (record-constructor-descriptor . g$13297$sFQex) (record-type-descriptor . g$13296$sFQex) (case . g$13294$sFQex) (unless . g$13292$sFQex) (when . g$13291$sFQex) (if . g$13290$sFQex) (letrec* . g$13289$sFQex) (letrec . g$13288$sFQex) (case-lambda . g$13286$sFQex) (lambda . g$13285$sFQex) (syntax . g$13284$sFQex) (syntax-case . g$13283$sFQex) (quote . g$13282$sFQex) (letrec-syntax . g$13280$sFQex) (let-syntax . g$13279$sFQex) (set! . g$13278$sFQex) (begin . g$13274$sFQex) (define-syntax . g$13272$sFQex) (define . g$13271$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13798$sFQex '(psyntax scheme-report-environment-5) '() '() '() '() '((char-ready? . g$13698$sFQex) (string-ci>? . g$7920$sFQex) (string-ci>=? . g$7922$sFQex) (string-ci=? . g$7918$sFQex) (string-ci<? . g$7919$sFQex) (string-ci<=? . g$7921$sFQex) (char-whitespace? . g$13693$sFQex) (char-upper-case? . g$13692$sFQex) (char-numeric? . g$13690$sFQex) (char-lower-case? . g$13689$sFQex) (char-upcase . g$13687$sFQex) (char-downcase . g$13684$sFQex) (char-ci>? . g$7959$sFQex) (char-ci>=? . g$7961$sFQex) (char-ci=? . g$7957$sFQex) (char-ci<? . g$7958$sFQex) (char-ci<=? . g$7960$sFQex) (char-alphabetic? . g$13683$sFQex) (call-with-output-file . g$8510$sFQex) (call-with-input-file . g$8509$sFQex) (write-char . g$8491$sFQex) (write . g$13651$sFQex) (with-output-to-file . g$8508$sFQex) (with-input-from-file . g$8507$sFQex) (read-char . g$8490$sFQex) (read . g$13650$sFQex) (peek-char . g$8489$sFQex) (open-output-file . g$13649$sFQex) (open-input-file . g$13648$sFQex) (newline . g$8511$sFQex) (display . g$13647$sFQex) (close-output-port . g$13646$sFQex) (close-input-port . g$13645$sFQex) (eof-object? . g$13644$sFQex) (current-error-port . g$13642$sFQex) (current-output-port . g$13641$sFQex) (current-input-port . g$13640$sFQex) (output-port? . g$13639$sFQex) (input-port? . g$13638$sFQex) (scheme-report-environment . g$10203$sFQex) (quotient . g$7839$sFQex) (null-environment . g$10202$sFQex) (remainder . g$7840$sFQex) (modulo . g$7841$sFQex) (inexact->exact . g$7836$sFQex) (force . g$7843$sFQex) (exact->inexact . g$7837$sFQex) (string-fill! . g$13579$sFQex) (string-set! . g$13578$sFQex) (set-cdr! . g$13577$sFQex) (set-car! . g$13576$sFQex) (memv . g$6673$sFQex) (memq . g$6672$sFQex) (member . g$6674$sFQex) (assv . g$6669$sFQex) (assq . g$6668$sFQex) (assoc . g$6670$sFQex) (eval . g$10205$sFQex) (zero? . g$7144$sFQex) (vector? . g$7104$sFQex) (vector-set! . g$13496$sFQex) (vector-ref . g$13495$sFQex) (vector-length . g$13494$sFQex) (vector-fill! . g$7112$sFQex) (vector->list . g$13493$sFQex) (vector . g$13492$sFQex) (values . g$13491$sFQex) (truncate . g$13490$sFQex) (tan . g$13489$sFQex) (symbol? . g$7106$sFQex) (symbol->string . g$13488$sFQex) (substring . g$13487$sFQex) (string? . g$13486$sFQex) (string>? . g$7189$sFQex) (string>=? . g$7191$sFQex) (string=? . g$7187$sFQex) (string<? . g$7188$sFQex) (string<=? . g$7190$sFQex) (string-ref . g$13485$sFQex) (string-length . g$13484$sFQex) (string-copy . g$13483$sFQex) (string-append . g$13482$sFQex) (string->symbol . g$13481$sFQex) (string->number . g$13480$sFQex) (string->list . g$13479$sFQex) (string . g$13478$sFQex) (sqrt . g$13477$sFQex) (sin . g$13476$sFQex) (round . g$13475$sFQex) (reverse . g$7113$sFQex) (real? . g$13474$sFQex) (real-part . g$13472$sFQex) (rationalize . g$7235$sFQex) (rational? . g$13471$sFQex) (procedure? . g$7108$sFQex) (positive? . g$7142$sFQex) (pair? . g$13469$sFQex) (odd? . g$7146$sFQex) (numerator . g$13468$sFQex) (number? . g$13467$sFQex) (number->string . g$13466$sFQex) (null? . g$13465$sFQex) (not . g$13464$sFQex) (negative? . g$7143$sFQex) (min . g$7148$sFQex) (max . g$7147$sFQex) (map . g$6680$sFQex) (make-vector . g$13462$sFQex) (make-string . g$13461$sFQex) (make-rectangular . g$13460$sFQex) (make-polar . g$13459$sFQex) (magnitude . g$13458$sFQex) (log . g$13457$sFQex) (list? . g$13456$sFQex) (list-tail . g$6660$sFQex) (list-ref . g$6661$sFQex) (list->vector . g$7101$sFQex) (list->string . g$7102$sFQex) (list . g$13455$sFQex) (length . g$13454$sFQex) (lcm . g$7150$sFQex) (integer? . g$13453$sFQex) (integer->char . g$13451$sFQex) (inexact? . g$13449$sFQex) (imag-part . g$13447$sFQex) (gcd . g$7149$sFQex) (for-each . g$6681$sFQex) (floor . g$13446$sFQex) (expt . g$13444$sFQex) (exp . g$13443$sFQex) (exact? . g$13442$sFQex) (even? . g$7145$sFQex) (eqv? . g$13439$sFQex) (equal? . g$13438$sFQex) (eq? . g$13437$sFQex) (dynamic-wind . g$13436$sFQex) (denominator . g$13433$sFQex) (cos . g$13432$sFQex) (cons . g$13431$sFQex) (complex? . g$13430$sFQex) (char? . g$7103$sFQex) (char>? . g$7232$sFQex) (char>=? . g$7234$sFQex) (char=? . g$7230$sFQex) (char<? . g$7231$sFQex) (char<=? . g$7233$sFQex) (char->integer . g$13429$sFQex) (ceiling . g$13428$sFQex) (call-with-values . g$13427$sFQex) (call-with-current-continuation . g$13425$sFQex) (cddddr . g$7141$sFQex) (cdddar . g$7140$sFQex) (cddadr . g$7139$sFQex) (cddaar . g$7138$sFQex) (cdaddr . g$7137$sFQex) (cdadar . g$7136$sFQex) (cdaadr . g$7135$sFQex) (cdaaar . g$7134$sFQex) (cadddr . g$7133$sFQex) (caddar . g$7132$sFQex) (cadadr . g$7131$sFQex) (cadaar . g$7130$sFQex) (caaddr . g$7129$sFQex) (caadar . g$7128$sFQex) (caaadr . g$7127$sFQex) (caaaar . g$7126$sFQex) (cdddr . g$7125$sFQex) (cddar . g$7124$sFQex) (cdadr . g$7123$sFQex) (cdaar . g$7122$sFQex) (caddr . g$7121$sFQex) (cadar . g$7120$sFQex) (caadr . g$7119$sFQex) (caaar . g$7118$sFQex) (cddr . g$7117$sFQex) (cdar . g$7116$sFQex) (cadr . g$7115$sFQex) (caar . g$7114$sFQex) (cdr . g$13424$sFQex) (car . g$13423$sFQex) (boolean? . g$7107$sFQex) (atan . g$13422$sFQex) (asin . g$13421$sFQex) (apply . g$13420$sFQex) (append . g$13419$sFQex) (angle . g$13418$sFQex) (acos . g$13417$sFQex) (abs . g$13416$sFQex) (/ . g$13415$sFQex) (* . g$13414$sFQex) (- . g$13413$sFQex) (+ . g$13412$sFQex) (>= . g$13411$sFQex) (> . g$13410$sFQex) (= . g$13409$sFQex) (<= . g$13408$sFQex) (< . g$13407$sFQex) (unquote-splicing . g$13323$sFQex) (unquote . g$13322$sFQex) (else . g$13320$sFQex) (=> . g$13319$sFQex) (... . g$13318$sFQex) (delay . g$13315$sFQex) (or . g$13313$sFQex) (and . g$13312$sFQex) (do . g$13311$sFQex) (cond . g$13310$sFQex) (let* . g$13309$sFQex) (let . g$13308$sFQex) (quasiquote . g$13304$sFQex) (syntax-rules . g$13303$sFQex) (case . g$13294$sFQex) (if . g$13290$sFQex) (letrec . g$13288$sFQex) (lambda . g$13285$sFQex) (quote . g$13282$sFQex) (letrec-syntax . g$13280$sFQex) (let-syntax . g$13279$sFQex) (set! . g$13278$sFQex) (begin . g$13274$sFQex) (define-syntax . g$13272$sFQex) (define . g$13271$sFQex)) '() values values '#f '#f '#f '#f))) 'g$13797$sFQex '(psyntax null-environment-5) '() '() '() '() '((unquote-splicing . g$13323$sFQex) (unquote . g$13322$sFQex) (else . g$13320$sFQex) (=> . g$13319$sFQex) (delay . g$13315$sFQex) (or . g$13313$sFQex) (and . g$13312$sFQex) (do . g$13311$sFQex) (cond . g$13310$sFQex) (let* . g$13309$sFQex) (let . g$13308$sFQex) (quasiquote . g$13304$sFQex) (syntax-rules . g$13303$sFQex) (case . g$13294$sFQex) (if . g$13290$sFQex) (letrec . g$13288$sFQex) (lambda . g$13285$sFQex) (quote . g$13282$sFQex) (letrec-syntax . g$13280$sFQex) (let-syntax . g$13279$sFQex) (set! . g$13278$sFQex) (begin . g$13274$sFQex) (define-syntax . g$13272$sFQex) (define . g$13271$sFQex)) '() values values '#f '#f '#f '#f))) 'g$13796$sFQex '(ironscheme clr internal) '() '() '() '() '((define-clr-class-internal . g$13719$sFQex) (clr-field-set!-internal . g$13718$sFQex) (clr-field-get-internal . g$13717$sFQex) (clr-cast-internal . g$13716$sFQex) (clr-call-internal . g$13715$sFQex) (clr-new-internal . g$13714$sFQex) (clr-new-array-internal . g$13713$sFQex) (clr-is-internal . g$13712$sFQex) (clr-reference-internal . g$13711$sFQex) (clr-using-internal . g$13710$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13795$sFQex '(ironscheme records printer) '() '() '() '() '((make-record-printer . g$13406$sFQex)) '() values values '#f '#f '#t '#f))) 'g$13794$sFQex '(ironscheme core) '() '() '() '() '((string-normalize . g$13699$sFQex) (variable-transformer-procedure . g$9827$sFQex) (variable-transformer? . g$9826$sFQex) (eqv-hash . g$13405$sFQex) (reverse! . g$13404$sFQex) (make-promise . g$7842$sFQex) (format . g$8663$sFQex) (get-command-line . g$13394$sFQex) (make-traced-procedure . g$13383$sFQex) (make-traced-macro . g$8683$sFQex) (assertion-error . g$10219$sFQex) (library-locator . g$13381$sFQex) (get-library-paths . g$13380$sFQex) (library-path . g$9367$sFQex)) '() values values '#f '#f '#f '#f))) 'g$13793$sFQex '(ironscheme serialization) '() '() '() '() '((load-serialized-library . g$13701$sFQex) (serialize-library . g$13700$sFQex)) '() values values '#f '#f '#f '#f))) 'g$13792$sFQex '(ironscheme reader) '() '() '() '() '((annotation-stripped . g$13732$sFQex) (annotation-source . g$13731$sFQex) (annotation-expression . g$13730$sFQex) (annotation? . g$13729$sFQex) (read-annotated . g$13728$sFQex)) '() values values '#f '#f '#f '#f))) 'g$13791$sFQex '(ironscheme library) '() '() '() '() '((get-library-paths . g$13380$sFQex)) '() values values '#f '#f '#f '#f))) 'g$13790$sFQex '(ironscheme) '() '() '() '() '((tanh . g$13727$sFQex) (cosh . g$13726$sFQex) (sinh . g$13725$sFQex) (make-guid . g$13724$sFQex) (unspecified? . g$13723$sFQex) (make-list . g$6663$sFQex) (last-pair . g$6662$sFQex) (load-r5rs . g$13722$sFQex) (license . g$13721$sFQex) (stacktrace . g$13720$sFQex) (ironscheme-build . g$13226$sFQex) (set-symbol-value! . g$13707$sFQex) (symbol-value . g$13706$sFQex) (symbol-bound? . g$13705$sFQex) (ungensym . g$13704$sFQex) (gensym . g$13703$sFQex) (void . g$13702$sFQex) (compile-system-libraries . g$13229$sFQex) (compile->closure . g$13231$sFQex) (compile . g$13230$sFQex) (load . g$13225$sFQex) (interaction-environment . g$10230$sFQex) (string-upcase . g$13697$sFQex) (string-titlecase . g$13696$sFQex) (string-normalize-nfkd . g$7965$sFQex) (string-normalize-nfkc . g$7964$sFQex) (string-normalize-nfd . g$7963$sFQex) (string-normalize-nfc . g$7962$sFQex) (string-foldcase . g$13695$sFQex) (string-downcase . g$13694$sFQex) (string-ci>? . g$7920$sFQex) (string-ci>=? . g$7922$sFQex) (string-ci=? . g$7918$sFQex) (string-ci<? . g$7919$sFQex) (string-ci<=? . g$7921$sFQex) (char-whitespace? . g$13693$sFQex) (char-upper-case? . g$13692$sFQex) (char-title-case? . g$13691$sFQex) (char-numeric? . g$13690$sFQex) (char-lower-case? . g$13689$sFQex) (char-general-category . g$13688$sFQex) (char-upcase . g$13687$sFQex) (char-titlecase . g$13686$sFQex) (char-foldcase . g$13685$sFQex) (char-downcase . g$13684$sFQex) (char-ci>? . g$7959$sFQex) (char-ci>=? . g$7961$sFQex) (char-ci=? . g$7957$sFQex) (char-ci<? . g$7958$sFQex) (char-ci<=? . g$7960$sFQex) (char-alphabetic? . g$13683$sFQex) (make-variable-transformer . g$9824$sFQex) (identifier? . g$10224$sFQex) (generate-temporaries . g$10213$sFQex) (free-identifier=? . g$10214$sFQex) (syntax->datum . g$10226$sFQex) (datum->syntax . g$10225$sFQex) (bound-identifier=? . g$10215$sFQex) (record-type-descriptor? . g$13682$sFQex) (record-predicate . g$13681$sFQex) (record-mutator . g$13680$sFQex) (record-constructor . g$13679$sFQex) (record-accessor . g$13678$sFQex) (make-record-type-descriptor . g$13677$sFQex) (make-record-constructor-descriptor . g$13676$sFQex) (record? . g$13675$sFQex) (record-type-uid . g$13674$sFQex) (record-type-sealed? . g$13673$sFQex) (record-type-parent . g$13672$sFQex) (record-type-opaque? . g$13671$sFQex) (record-type-name . g$13670$sFQex) (record-type-generative? . g$13669$sFQex) (record-type-field-names . g$13668$sFQex) (record-rtd . g$13667$sFQex) (record-field-mutable? . g$13666$sFQex) (delete-file . g$7471$sFQex) (file-exists? . g$7470$sFQex) (vector-sort! . g$13665$sFQex) (vector-sort . g$13664$sFQex) (list-sort . g$7860$sFQex) (symbol-hash . g$13663$sFQex) (string-ci-hash . g$13662$sFQex) (string-hash . g$13661$sFQex) (equal-hash . g$13660$sFQex) (hashtable-equivalence-function . g$13659$sFQex) (make-hashtable . g$13658$sFQex) (hashtable-hash-function . g$13657$sFQex) (make-eqv-hashtable . g$7439$sFQex) (make-eq-hashtable . g$7438$sFQex) (hashtable? . g$13656$sFQex) (hashtable-update! . g$7445$sFQex) (hashtable-size . g$7440$sFQex) (hashtable-set! . g$7442$sFQex) (hashtable-ref . g$7441$sFQex) (hashtable-mutable? . g$13655$sFQex) (hashtable-keys . g$13654$sFQex) (hashtable-entries . g$13653$sFQex) (hashtable-delete! . g$7443$sFQex) (hashtable-copy . g$13652$sFQex) (hashtable-contains? . g$7444$sFQex) (hashtable-clear! . g$7446$sFQex) (call-with-output-file . g$8510$sFQex) (call-with-input-file . g$8509$sFQex) (write-char . g$8491$sFQex) (write . g$13651$sFQex) (with-output-to-file . g$8508$sFQex) (with-input-from-file . g$8507$sFQex) (read-char . g$8490$sFQex) (read . g$13650$sFQex) (peek-char . g$8489$sFQex) (open-output-file . g$13649$sFQex) (open-input-file . g$13648$sFQex) (newline . g$8511$sFQex) (display . g$13647$sFQex) (close-output-port . g$13646$sFQex) (close-input-port . g$13645$sFQex) (eof-object? . g$13644$sFQex) (eof-object . g$13643$sFQex) (current-error-port . g$13642$sFQex) (current-output-port . g$13641$sFQex) (current-input-port . g$13640$sFQex) (output-port? . g$13639$sFQex) (input-port? . g$13638$sFQex) (utf-8-codec . g$13637$sFQex) (utf-16-codec . g$13636$sFQex) (transcoder-error-handling-mode . g$13635$sFQex) (transcoder-eol-style . g$13634$sFQex) (transcoder-codec . g$13633$sFQex) (transcoded-port . g$13632$sFQex) (textual-port? . g$13631$sFQex) (string->bytevector . g$13630$sFQex) (standard-output-port . g$13629$sFQex) (standard-input-port . g$13628$sFQex) (standard-error-port . g$13627$sFQex) (set-port-position! . g$13626$sFQex) (put-u8 . g$13625$sFQex) (put-string . g$13624$sFQex) (put-datum . g$8469$sFQex) (put-char . g$13623$sFQex) (put-bytevector . g$13622$sFQex) (port? . g$8474$sFQex) (port-transcoder . g$13621$sFQex) (port-position . g$13620$sFQex) (port-has-set-port-position!? . g$13619$sFQex) (port-has-port-position? . g$13618$sFQex) (port-eof? . g$13617$sFQex) (output-port-buffer-mode . g$13616$sFQex) (open-string-output-port . g$8473$sFQex) (open-string-input-port . g$13615$sFQex) (open-file-output-port . g$13614$sFQex) (open-file-input/output-port . g$13613$sFQex) (open-file-input-port . g$13612$sFQex) (open-bytevector-output-port . g$13611$sFQex) (open-bytevector-input-port . g$13610$sFQex) (native-transcoder . g$13609$sFQex) (native-eol-style . g$13608$sFQex) (make-transcoder . g$13607$sFQex) (latin-1-codec . g$13606$sFQex) (make-i/o-write-error . g$8327$sFQex) (make-i/o-read-error . g$8313$sFQex) (make-i/o-port-error . g$8432$sFQex) (make-i/o-invalid-position-error . g$8342$sFQex) (make-i/o-filename-error . g$8359$sFQex) (make-i/o-file-protection-error . g$8375$sFQex) (make-i/o-file-is-read-only-error . g$8389$sFQex) (make-i/o-file-does-not-exist-error . g$8417$sFQex) (make-i/o-file-already-exists-error . g$8403$sFQex) (make-i/o-error . g$8299$sFQex) (make-i/o-encoding-error . g$8463$sFQex) (make-i/o-decoding-error . g$8448$sFQex) (make-custom-textual-output-port . g$13605$sFQex) (make-custom-textual-input/output-port . g$13604$sFQex) (make-custom-textual-input-port . g$13603$sFQex) (make-custom-binary-output-port . g$13602$sFQex) (make-custom-binary-input/output-port . g$13601$sFQex) (make-custom-binary-input-port . g$13600$sFQex) (make-bytevector . g$13599$sFQex) (lookahead-u8 . g$13598$sFQex) (lookahead-char . g$13597$sFQex) (i/o-write-error? . g$8328$sFQex) (i/o-read-error? . g$8314$sFQex) (i/o-port-error? . g$8434$sFQex) (i/o-invalid-position-error? . g$8344$sFQex) (i/o-error-position . g$8345$sFQex) (i/o-filename-error? . g$8361$sFQex) (i/o-file-protection-error? . g$8376$sFQex) (i/o-file-is-read-only-error? . g$8390$sFQex) (i/o-file-does-not-exist-error? . g$8418$sFQex) (i/o-file-already-exists-error? . g$8404$sFQex) (i/o-error? . g$8300$sFQex) (i/o-error-port . g$8435$sFQex) (i/o-error-filename . g$8362$sFQex) (i/o-encoding-error? . g$8465$sFQex) (i/o-encoding-error-char . g$8466$sFQex) (i/o-decoding-error? . g$8449$sFQex) (get-u8 . g$13596$sFQex) (get-string-n! . g$13595$sFQex) (get-string-n . g$13594$sFQex) (get-string-all . g$13593$sFQex) (get-line . g$13592$sFQex) (get-datum . g$8470$sFQex) (get-char . g$13591$sFQex) (get-bytevector-some . g$13590$sFQex) (get-bytevector-n! . g$13589$sFQex) (get-bytevector-n . g$13588$sFQex) (get-bytevector-all . g$13587$sFQex) (flush-output-port . g$13586$sFQex) (close-port . g$13585$sFQex) (call-with-string-output-port . g$8475$sFQex) (call-with-port . g$8476$sFQex) (call-with-bytevector-output-port . g$13584$sFQex) (bytevector->string . g$13583$sFQex) (buffer-mode? . g$13582$sFQex) (binary-port? . g$13581$sFQex) (scheme-report-environment . g$10203$sFQex) (quotient . g$7839$sFQex) (null-environment . g$10202$sFQex) (remainder . g$7840$sFQex) (modulo . g$7841$sFQex) (inexact->exact . g$7836$sFQex) (force . g$7843$sFQex) (exact->inexact . g$7837$sFQex) (exit . g$13580$sFQex) (command-line . g$13222$sFQex) (string-fill! . g$13579$sFQex) (string-set! . g$13578$sFQex) (set-cdr! . g$13577$sFQex) (set-car! . g$13576$sFQex) (remove . g$6685$sFQex) (remv . g$6686$sFQex) (remp . g$6666$sFQex) (remq . g$6687$sFQex) (partition . g$6665$sFQex) (memv . g$6673$sFQex) (memq . g$6672$sFQex) (memp . g$6675$sFQex) (member . g$6674$sFQex) (exists . g$6679$sFQex) (for-all . g$6678$sFQex) (fold-right . g$6684$sFQex) (fold-left . g$6683$sFQex) (find . g$6664$sFQex) (filter . g$6667$sFQex) (cons* . g$6682$sFQex) (assv . g$6669$sFQex) (assq . g$6668$sFQex) (assp . g$6671$sFQex) (assoc . g$6670$sFQex) (with-exception-handler . g$7592$sFQex) (raise-continuable . g$7595$sFQex) (raise . g$7594$sFQex) (eval . g$10205$sFQex) (environment . g$10201$sFQex) (make-enumeration . g$8575$sFQex) (enum-set=? . g$8582$sFQex) (enum-set-universe . g$8576$sFQex) (enum-set-union . g$8583$sFQex) (enum-set-subset? . g$8581$sFQex) (enum-set-projection . g$8587$sFQex) (enum-set-member? . g$8580$sFQex) (enum-set-intersection . g$8584$sFQex) (enum-set-indexer . g$8577$sFQex) (enum-set-difference . g$8585$sFQex) (enum-set-constructor . g$8578$sFQex) (enum-set-complement . g$8586$sFQex) (enum-set->list . g$8579$sFQex) (who-condition? . g$7748$sFQex) (warning? . g$7659$sFQex) (violation? . g$7701$sFQex) (undefined-violation? . g$7825$sFQex) (syntax-violation? . g$7809$sFQex) (syntax-violation-subform . g$7811$sFQex) (syntax-violation-form . g$7810$sFQex) (syntax-violation . g$10223$sFQex) (simple-conditions . g$13575$sFQex) (serious-condition? . g$7673$sFQex) (non-continuable-violation? . g$7763$sFQex) (message-condition? . g$7644$sFQex) (make-who-condition . g$7746$sFQex) (make-warning . g$7658$sFQex) (make-violation . g$7700$sFQex) (make-undefined-violation . g$7824$sFQex) (make-syntax-violation . g$7806$sFQex) (make-serious-condition . g$7672$sFQex) (make-non-continuable-violation . g$7762$sFQex) (make-message-condition . g$7642$sFQex) (make-lexical-violation . g$7790$sFQex) (make-irritants-condition . g$7729$sFQex) (make-implementation-restriction-violation . g$7776$sFQex) (make-error . g$7686$sFQex) (make-assertion-violation . g$7714$sFQex) (lexical-violation? . g$7791$sFQex) (irritants-condition? . g$7731$sFQex) (implementation-restriction-violation? . g$7777$sFQex) (error? . g$7687$sFQex) (condition-who . g$7749$sFQex) (condition-predicate . g$13574$sFQex) (condition-message . g$7645$sFQex) (condition-irritants . g$7732$sFQex) (condition-accessor . g$13573$sFQex) (condition . g$13572$sFQex) (assertion-violation? . g$7715$sFQex) (condition? . g$13571$sFQex) (utf32->string . g$13570$sFQex) (utf16->string . g$13569$sFQex) (utf8->string . g$13568$sFQex) (uint-list->bytevector . g$13567$sFQex) (u8-list->bytevector . g$13566$sFQex) (string->utf8 . g$13565$sFQex) (string->utf32 . g$13564$sFQex) (string->utf16 . g$13563$sFQex) (sint-list->bytevector . g$13562$sFQex) (native-endianness . g$7477$sFQex) (bytevector? . g$7105$sFQex) (bytevector=? . g$13561$sFQex) (bytevector-uint-set! . g$13560$sFQex) (bytevector-uint-ref . g$13559$sFQex) (bytevector-u8-set! . g$13558$sFQex) (bytevector-u8-ref . g$13557$sFQex) (bytevector-u64-set! . g$7498$sFQex) (bytevector-u64-ref . g$7494$sFQex) (bytevector-u64-native-set! . g$7500$sFQex) (bytevector-u64-native-ref . g$7496$sFQex) (bytevector-u32-set! . g$7490$sFQex) (bytevector-u32-ref . g$7486$sFQex) (bytevector-u32-native-set! . g$7492$sFQex) (bytevector-u32-native-ref . g$7488$sFQex) (bytevector-u16-set! . g$7482$sFQex) (bytevector-u16-ref . g$7478$sFQex) (bytevector-u16-native-set! . g$7484$sFQex) (bytevector-u16-native-ref . g$7480$sFQex) (bytevector-sint-set! . g$13556$sFQex) (bytevector-sint-ref . g$13555$sFQex) (bytevector-s8-set! . g$13554$sFQex) (bytevector-s8-ref . g$13553$sFQex) (bytevector-s64-set! . g$7499$sFQex) (bytevector-s64-ref . g$7495$sFQex) (bytevector-s64-native-set! . g$7501$sFQex) (bytevector-s64-native-ref . g$7497$sFQex) (bytevector-s32-set! . g$7491$sFQex) (bytevector-s32-ref . g$7487$sFQex) (bytevector-s32-native-set! . g$7493$sFQex) (bytevector-s32-native-ref . g$7489$sFQex) (bytevector-s16-set! . g$7483$sFQex) (bytevector-s16-ref . g$7479$sFQex) (bytevector-s16-native-set! . g$7485$sFQex) (bytevector-s16-native-ref . g$7481$sFQex) (bytevector-length . g$13552$sFQex) (bytevector-ieee-single-set! . g$13551$sFQex) (bytevector-ieee-single-ref . g$13550$sFQex) (bytevector-ieee-single-native-set! . g$7504$sFQex) (bytevector-ieee-single-native-ref . g$7502$sFQex) (bytevector-ieee-double-set! . g$13549$sFQex) (bytevector-ieee-double-ref . g$13548$sFQex) (bytevector-ieee-double-native-set! . g$7505$sFQex) (bytevector-ieee-double-native-ref . g$7503$sFQex) (bytevector-fill! . g$13547$sFQex) (bytevector-copy! . g$13546$sFQex) (bytevector-copy . g$13545$sFQex) (bytevector->uint-list . g$13544$sFQex) (bytevector->u8-list . g$13543$sFQex) (bytevector->sint-list . g$13542$sFQex) (no-nans-violation? . g$8212$sFQex) (no-infinities-violation? . g$8198$sFQex) (make-no-nans-violation . g$8211$sFQex) (make-no-infinities-violation . g$8197$sFQex) (real->flonum . g$13541$sFQex) (flzero? . g$8180$sFQex) (fltruncate . g$8175$sFQex) (fltan . g$8165$sFQex) (flsqrt . g$8170$sFQex) (flsin . g$8163$sFQex) (flround . g$8176$sFQex) (flpositive? . g$8178$sFQex) (flonum? . g$7110$sFQex) (flodd? . g$8182$sFQex) (flnumerator . g$13540$sFQex) (flnegative? . g$8179$sFQex) (flnan? . g$8162$sFQex) (flmod0 . g$8158$sFQex) (flmod . g$8157$sFQex) (flmin . g$8184$sFQex) (flmax . g$8183$sFQex) (fllog . g$8169$sFQex) (flinteger? . g$8159$sFQex) (flinfinite? . g$8161$sFQex) (flfloor . g$8174$sFQex) (flfinite? . g$8160$sFQex) (flexpt . g$8172$sFQex) (flexp . g$8171$sFQex) (fleven? . g$8181$sFQex) (fldiv0-and-mod0 . g$8154$sFQex) (fldiv0 . g$8156$sFQex) (fldiv-and-mod . g$8153$sFQex) (fldiv . g$8155$sFQex) (fldenominator . g$13539$sFQex) (flcos . g$8164$sFQex) (flceiling . g$8173$sFQex) (flatan . g$8168$sFQex) (flasin . g$8166$sFQex) (flacos . g$8167$sFQex) (flabs . g$8177$sFQex) (fl>? . g$13538$sFQex) (fl>=? . g$13537$sFQex) (fl=? . g$13536$sFQex) (fl<? . g$13535$sFQex) (fl<=? . g$13534$sFQex) (fl/ . g$13533$sFQex) (fl- . g$13532$sFQex) (fl+ . g$13531$sFQex) (fl* . g$13530$sFQex) (fixnum->flonum . g$13529$sFQex) (fxzero? . g$8061$sFQex) (fxxor . g$13528$sFQex) (fxrotate-bit-field . g$8075$sFQex) (fxreverse-bit-field . g$13527$sFQex) (fxpositive? . g$8059$sFQex) (fxodd? . g$8063$sFQex) (fxnot . g$13526$sFQex) (fxnegative? . g$8060$sFQex) (fxmod0 . g$8058$sFQex) (fxmod . g$8057$sFQex) (fxmin . g$8065$sFQex) (fxmax . g$8064$sFQex) (fxlength . g$13525$sFQex) (fxior . g$13524$sFQex) (fxif . g$8069$sFQex) (fxfirst-bit-set . g$13523$sFQex) (fxeven? . g$8062$sFQex) (fxdiv0-and-mod0 . g$13522$sFQex) (fxdiv0 . g$8056$sFQex) (fxdiv-and-mod . g$13521$sFQex) (fxdiv . g$8055$sFQex) (fxcopy-bit-field . g$8072$sFQex) (fxcopy-bit . g$8070$sFQex) (fxbit-set? . g$13520$sFQex) (fxbit-field . g$8071$sFQex) (fxbit-count . g$13519$sFQex) (fxarithmetic-shift-right . g$8074$sFQex) (fxarithmetic-shift-left . g$8073$sFQex) (fxarithmetic-shift . g$13518$sFQex) (fxand . g$13517$sFQex) (fx>? . g$13516$sFQex) (fx>=? . g$13515$sFQex) (fx=? . g$13514$sFQex) (fx<? . g$13513$sFQex) (fx<=? . g$13512$sFQex) (fx-/carry . g$8067$sFQex) (fx- . g$13511$sFQex) (fx+/carry . g$8068$sFQex) (fx+ . g$13510$sFQex) (fx*/carry . g$8066$sFQex) (fx* . g$13509$sFQex) (greatest-fixnum . g$13508$sFQex) (least-fixnum . g$13507$sFQex) (fixnum-width . g$7111$sFQex) (fixnum? . g$7109$sFQex) (bitwise-rotate-bit-field . g$8029$sFQex) (bitwise-reverse-bit-field . g$13506$sFQex) (bitwise-length . g$13505$sFQex) (bitwise-if . g$8023$sFQex) (bitwise-first-bit-set . g$13504$sFQex) (bitwise-copy-bit-field . g$8026$sFQex) (bitwise-copy-bit . g$8024$sFQex) (bitwise-bit-set? . g$13503$sFQex) (bitwise-bit-field . g$8025$sFQex) (bitwise-bit-count . g$13502$sFQex) (bitwise-xor . g$13501$sFQex) (bitwise-ior . g$13500$sFQex) (bitwise-and . g$13499$sFQex) (bitwise-not . g$13498$sFQex) (bitwise-arithmetic-shift-right . g$8028$sFQex) (bitwise-arithmetic-shift-left . g$8027$sFQex) (bitwise-arithmetic-shift . g$13497$sFQex) (zero? . g$7144$sFQex) (vector? . g$7104$sFQex) (vector-set! . g$13496$sFQex) (vector-ref . g$13495$sFQex) (vector-map . g$7238$sFQex) (vector-length . g$13494$sFQex) (vector-for-each . g$7239$sFQex) (vector-fill! . g$7112$sFQex) (vector->list . g$13493$sFQex) (vector . g$13492$sFQex) (values . g$13491$sFQex) (truncate . g$13490$sFQex) (tan . g$13489$sFQex) (symbol? . g$7106$sFQex) (symbol=? . g$7192$sFQex) (symbol->string . g$13488$sFQex) (substring . g$13487$sFQex) (string? . g$13486$sFQex) (string>? . g$7189$sFQex) (string>=? . g$7191$sFQex) (string=? . g$7187$sFQex) (string<? . g$7188$sFQex) (string<=? . g$7190$sFQex) (string-ref . g$13485$sFQex) (string-length . g$13484$sFQex) (string-for-each . g$7240$sFQex) (string-copy . g$13483$sFQex) (string-append . g$13482$sFQex) (string->symbol . g$13481$sFQex) (string->number . g$13480$sFQex) (string->list . g$13479$sFQex) (string . g$13478$sFQex) (sqrt . g$13477$sFQex) (sin . g$13476$sFQex) (round . g$13475$sFQex) (reverse . g$7113$sFQex) (real? . g$13474$sFQex) (real-valued? . g$13473$sFQex) (real-part . g$13472$sFQex) (rationalize . g$7235$sFQex) (rational? . g$13471$sFQex) (rational-valued? . g$13470$sFQex) (procedure? . g$7108$sFQex) (positive? . g$7142$sFQex) (pair? . g$13469$sFQex) (odd? . g$7146$sFQex) (numerator . g$13468$sFQex) (number? . g$13467$sFQex) (number->string . g$13466$sFQex) (null? . g$13465$sFQex) (not . g$13464$sFQex) (negative? . g$7143$sFQex) (nan? . g$13463$sFQex) (min . g$7148$sFQex) (max . g$7147$sFQex) (map . g$6680$sFQex) (make-vector . g$13462$sFQex) (make-string . g$13461$sFQex) (make-rectangular . g$13460$sFQex) (make-polar . g$13459$sFQex) (magnitude . g$13458$sFQex) (log . g$13457$sFQex) (list? . g$13456$sFQex) (list-tail . g$6660$sFQex) (list-ref . g$6661$sFQex) (list->vector . g$7101$sFQex) (list->string . g$7102$sFQex) (list . g$13455$sFQex) (length . g$13454$sFQex) (lcm . g$7150$sFQex) (integer? . g$13453$sFQex) (integer-valued? . g$13452$sFQex) (integer->char . g$13451$sFQex) (infinite? . g$13450$sFQex) (inexact? . g$13449$sFQex) (inexact . g$13448$sFQex) (imag-part . g$13447$sFQex) (gcd . g$7149$sFQex) (for-each . g$6681$sFQex) (floor . g$13446$sFQex) (finite? . g$13445$sFQex) (expt . g$13444$sFQex) (exp . g$13443$sFQex) (exact? . g$13442$sFQex) (exact-integer-sqrt . g$13441$sFQex) (exact . g$13440$sFQex) (even? . g$7145$sFQex) (error . g$7597$sFQex) (eqv? . g$13439$sFQex) (equal? . g$13438$sFQex) (eq? . g$13437$sFQex) (dynamic-wind . g$13436$sFQex) (div0-and-mod0 . g$13435$sFQex) (mod0 . g$7100$sFQex) (div0 . g$7098$sFQex) (div-and-mod . g$13434$sFQex) (mod . g$7099$sFQex) (div . g$7097$sFQex) (denominator . g$13433$sFQex) (cos . g$13432$sFQex) (cons . g$13431$sFQex) (complex? . g$13430$sFQex) (char? . g$7103$sFQex) (char>? . g$7232$sFQex) (char>=? . g$7234$sFQex) (char=? . g$7230$sFQex) (char<? . g$7231$sFQex) (char<=? . g$7233$sFQex) (char->integer . g$13429$sFQex) (ceiling . g$13428$sFQex) (call-with-values . g$13427$sFQex) (call/cc . g$13426$sFQex) (call-with-current-continuation . g$13425$sFQex) (cddddr . g$7141$sFQex) (cdddar . g$7140$sFQex) (cddadr . g$7139$sFQex) (cddaar . g$7138$sFQex) (cdaddr . g$7137$sFQex) (cdadar . g$7136$sFQex) (cdaadr . g$7135$sFQex) (cdaaar . g$7134$sFQex) (cadddr . g$7133$sFQex) (caddar . g$7132$sFQex) (cadadr . g$7131$sFQex) (cadaar . g$7130$sFQex) (caaddr . g$7129$sFQex) (caadar . g$7128$sFQex) (caaadr . g$7127$sFQex) (caaaar . g$7126$sFQex) (cdddr . g$7125$sFQex) (cddar . g$7124$sFQex) (cdadr . g$7123$sFQex) (cdaar . g$7122$sFQex) (caddr . g$7121$sFQex) (cadar . g$7120$sFQex) (caadr . g$7119$sFQex) (caaar . g$7118$sFQex) (cddr . g$7117$sFQex) (cdar . g$7116$sFQex) (cadr . g$7115$sFQex) (caar . g$7114$sFQex) (cdr . g$13424$sFQex) (car . g$13423$sFQex) (boolean? . g$7107$sFQex) (boolean=? . g$7193$sFQex) (atan . g$13422$sFQex) (assertion-violation . g$7596$sFQex) (asin . g$13421$sFQex) (apply . g$13420$sFQex) (append . g$13419$sFQex) (angle . g$13418$sFQex) (acos . g$13417$sFQex) (abs . g$13416$sFQex) (/ . g$13415$sFQex) (* . g$13414$sFQex) (- . g$13413$sFQex) (+ . g$13412$sFQex) (>= . g$13411$sFQex) (> . g$13410$sFQex) (= . g$13409$sFQex) (<= . g$13408$sFQex) (< . g$13407$sFQex) (deserialize-port . g$13403$sFQex) (serialize-port . g$13402$sFQex) (enum-set? . g$8550$sFQex) (load/args . g$13224$sFQex) (printf . g$8661$sFQex) (fprintf . g$8662$sFQex) (format . g$8663$sFQex) (procedure-form . g$13401$sFQex) (procedure-environment . g$13400$sFQex) (procedure-name . g$13399$sFQex) (procedure-arity . g$13398$sFQex) (gc-collect . g$13397$sFQex) (clr-type? . g$13396$sFQex) (get-clr-type . g$13395$sFQex) (vector-append . g$13393$sFQex) (vector-filter . g$13392$sFQex) (vector-reverse! . g$13391$sFQex) (vector-contains? . g$13390$sFQex) (vector-index-of . g$13389$sFQex) (vector-copy . g$13388$sFQex) (vector-binary-search . g$13387$sFQex) (string-ci-compare . g$13386$sFQex) (string-compare . g$13385$sFQex) (string-format . g$13384$sFQex) (trace-printer . g$13221$sFQex) (time-it . g$13382$sFQex) (make-parameter . g$8956$sFQex) (open-tcp-input/output-port . g$13379$sFQex) (hashtable-for-each . g$13378$sFQex) (hashtable-map . g$13377$sFQex) (environment-bindings . g$10197$sFQex) (environment-symbols . g$10200$sFQex) (interaction-environment-symbols . g$10196$sFQex) (optimization-level . g$13376$sFQex) (library-path . g$9367$sFQex) (make-compile-time-value . g$9825$sFQex) (expand->core . g$10206$sFQex) (expand . g$10204$sFQex) (convert->cps . g$8739$sFQex) (installed-libraries . g$9388$sFQex) (uninstall-library . g$9379$sFQex) (&no-nans . g$13375$sFQex) (&no-infinities . g$13374$sFQex) (&i/o-encoding . g$13373$sFQex) (&i/o-decoding . g$13372$sFQex) (&i/o-port . g$13371$sFQex) (&i/o-file-does-not-exist . g$13370$sFQex) (&i/o-file-already-exists . g$13369$sFQex) (&i/o-file-is-read-only . g$13368$sFQex) (&i/o-file-protection . g$13367$sFQex) (&i/o-filename . g$13366$sFQex) (&i/o-invalid-position . g$13365$sFQex) (&i/o-write . g$13364$sFQex) (&i/o-read . g$13363$sFQex) (&i/o . g$13362$sFQex) (&non-continuable . g$13361$sFQex) (&undefined . g$13360$sFQex) (&syntax . g$13359$sFQex) (&lexical . g$13358$sFQex) (&implementation-restriction . g$13357$sFQex) (&who . g$13356$sFQex) (&irritants . g$13355$sFQex) (&assertion . g$13354$sFQex) (&violation . g$13353$sFQex) (&error . g$13352$sFQex) (&serious . g$13351$sFQex) (&warning . g$13350$sFQex) (&message . g$13349$sFQex) (&condition . g$13348$sFQex) (define-condition-type . g$13347$sFQex) (define-enumeration . g$13346$sFQex) (define-record-type . g$13345$sFQex) (parent-rtd . g$13344$sFQex) (nongenerative . g$13343$sFQex) (opaque . g$13342$sFQex) (sealed . g$13341$sFQex) (protocol . g$13340$sFQex) (parent . g$13339$sFQex) (immutable . g$13338$sFQex) (mutable . g$13337$sFQex) (fields . g$13336$sFQex) (error-handling-mode . g$13335$sFQex) (file-options . g$13334$sFQex) (buffer-mode . g$13333$sFQex) (eol-style . g$13332$sFQex) (guard . g$13331$sFQex) (trace-letrec-syntax . g$13330$sFQex) (trace-let-syntax . g$13329$sFQex) (trace-define-syntax . g$13328$sFQex) (trace-define . g$13327$sFQex) (trace-lambda . g$13326$sFQex) (unsyntax-splicing . g$13325$sFQex) (unsyntax . g$13324$sFQex) (unquote-splicing . g$13323$sFQex) (unquote . g$13322$sFQex) (_ . g$13321$sFQex) (else . g$13320$sFQex) (=> . g$13319$sFQex) (... . g$13318$sFQex) (assert . g$13317$sFQex) (endianness . g$13316$sFQex) (delay . g$13315$sFQex) (time . g$13314$sFQex) (or . g$13313$sFQex) (and . g$13312$sFQex) (do . g$13311$sFQex) (cond . g$13310$sFQex) (let* . g$13309$sFQex) (let . g$13308$sFQex) (identifier-syntax . g$13307$sFQex) (with-syntax . g$13306$sFQex) (quasisyntax . g$13305$sFQex) (quasiquote . g$13304$sFQex) (syntax-rules . g$13303$sFQex) (include-into . g$13302$sFQex) (include . g$13301$sFQex) (let-values . g$13299$sFQex) (let*-values . g$13298$sFQex) (record-constructor-descriptor . g$13297$sFQex) (record-type-descriptor . g$13296$sFQex) (fluid-let-syntax . g$13295$sFQex) (case . g$13294$sFQex) (parameterize . g$13293$sFQex) (unless . g$13292$sFQex) (when . g$13291$sFQex) (if . g$13290$sFQex) (letrec* . g$13289$sFQex) (letrec . g$13288$sFQex) (case-lambda . g$13286$sFQex) (lambda . g$13285$sFQex) (syntax . g$13284$sFQex) (syntax-case . g$13283$sFQex) (quote . g$13282$sFQex) (letrec-syntax . g$13280$sFQex) (let-syntax . g$13279$sFQex) (set! . g$13278$sFQex) (export . g$13277$sFQex) (import . g$13276$sFQex) (library . g$13275$sFQex) (begin . g$13274$sFQex) (module . g$13273$sFQex) (define-syntax . g$13272$sFQex) (define . g$13271$sFQex)) '() values values '#f '#f '#t '#f))) (case-lambda ((g$C$21043$sFQex g$x$12671$sFQex) (g$assq$5668$sFQex (case-lambda ((g$V$21044$sFQex) ((case-lambda ((g$C$21042$sFQex g$t$12672$sFQex) (if g$t$12672$sFQex (cdr g$C$21042$sFQex g$t$12672$sFQex) (g$C$21042$sFQex '#f)))) g$C$21043$sFQex g$V$21044$sFQex))) g$x$12671$sFQex '((ellipsis-map . g$ellipsis-map$12485$sFQex) (make-list . g$make-list$5663$sFQex) (last-pair . g$last-pair$5662$sFQex) (ironscheme-build . g$ironscheme-build$12663$sFQex) (syntax-error . g$syntax-error$12589$sFQex) (syntax-dispatch . g$syntax-dispatch$12480$sFQex) (compile-system-libraries . g$compile-system-libraries$12666$sFQex) (compile->closure . g$compile->closure$12668$sFQex) (compile . g$compile$12667$sFQex) (load . g$load$12662$sFQex) (interaction-environment . g$interaction-environment$12599$sFQex) (string-normalize-nfkd . g$string-normalize-nfkd$6805$sFQex) (string-normalize-nfkc . g$string-normalize-nfkc$6804$sFQex) (string-normalize-nfd . g$string-normalize-nfd$6803$sFQex) (string-normalize-nfc . g$string-normalize-nfc$6802$sFQex) (string-ci>? . g$string-ci>?$6794$sFQex) (string-ci>=? . g$string-ci>=?$6796$sFQex) (string-ci=? . g$string-ci=?$6792$sFQex) (string-ci<? . g$string-ci<?$6793$sFQex) (string-ci<=? . g$string-ci<=?$6795$sFQex) (char-ci>? . g$char-ci>?$6799$sFQex) (char-ci>=? . g$char-ci>=?$6801$sFQex) (char-ci=? . g$char-ci=?$6797$sFQex) (char-ci<? . g$char-ci<?$6798$sFQex) (char-ci<=? . g$char-ci<=?$6800$sFQex) (variable-transformer-procedure . g$variable-transformer-procedure$12418$sFQex) (variable-transformer? . g$variable-transformer?$12417$sFQex) (make-variable-transformer . g$make-variable-transformer$12415$sFQex) (identifier? . g$identifier?$12593$sFQex) (generate-temporaries . g$generate-temporaries$12582$sFQex) (free-identifier=? . g$free-identifier=?$12583$sFQex) (syntax->datum . g$syntax->datum$12595$sFQex) (datum->syntax . g$datum->syntax$12594$sFQex) (bound-identifier=? . g$bound-identifier=?$12584$sFQex) (delete-file . g$delete-file$6286$sFQex) (file-exists? . g$file-exists?$6285$sFQex) (list-sort . g$list-sort$6711$sFQex) (make-eqv-hashtable . g$make-eqv-hashtable$6268$sFQex) (make-eq-hashtable . g$make-eq-hashtable$6267$sFQex) (hashtable-update! . g$hashtable-update!$6274$sFQex) (hashtable-size . g$hashtable-size$6269$sFQex) (hashtable-set! . g$hashtable-set!$6271$sFQex) (hashtable-ref . g$hashtable-ref$6270$sFQex) (hashtable-delete! . g$hashtable-delete!$6272$sFQex) (hashtable-contains? . g$hashtable-contains?$6273$sFQex) (hashtable-clear! . g$hashtable-clear!$6275$sFQex) (call-with-output-file . g$call-with-output-file$7381$sFQex) (call-with-input-file . g$call-with-input-file$7380$sFQex) (write-char . g$write-char$7377$sFQex) (with-output-to-file . g$with-output-to-file$7379$sFQex) (with-input-from-file . g$with-input-from-file$7378$sFQex) (read-char . g$read-char$7376$sFQex) (peek-char . g$peek-char$7375$sFQex) (newline . g$newline$7382$sFQex) (put-datum . g$put-datum$7325$sFQex) (port? . g$port?$7330$sFQex) (open-string-output-port . g$open-string-output-port$7329$sFQex) (make-i/o-write-error . g$make-i/o-write-error$7239$sFQex) (make-i/o-read-error . g$make-i/o-read-error$7233$sFQex) (make-i/o-port-error . g$make-i/o-port-error$7285$sFQex) (make-i/o-invalid-position-error . g$make-i/o-invalid-position-error$7245$sFQex) (make-i/o-filename-error . g$make-i/o-filename-error$7253$sFQex) (make-i/o-file-protection-error . g$make-i/o-file-protection-error$7261$sFQex) (make-i/o-file-is-read-only-error . g$make-i/o-file-is-read-only-error$7267$sFQex) (make-i/o-file-does-not-exist-error . g$make-i/o-file-does-not-exist-error$7279$sFQex) (make-i/o-file-already-exists-error . g$make-i/o-file-already-exists-error$7273$sFQex) (make-i/o-error . g$make-i/o-error$7227$sFQex) (make-i/o-encoding-error . g$make-i/o-encoding-error$7299$sFQex) (make-i/o-decoding-error . g$make-i/o-decoding-error$7293$sFQex) (i/o-write-error? . g$i/o-write-error?$7240$sFQex) (i/o-read-error? . g$i/o-read-error?$7234$sFQex) (i/o-port-error? . g$i/o-port-error?$7287$sFQex) (i/o-invalid-position-error? . g$i/o-invalid-position-error?$7247$sFQex) (i/o-error-position . g$i/o-error-position$7248$sFQex) (i/o-filename-error? . g$i/o-filename-error?$7255$sFQex) (i/o-file-protection-error? . g$i/o-file-protection-error?$7262$sFQex) (i/o-file-is-read-only-error? . g$i/o-file-is-read-only-error?$7268$sFQex) (i/o-file-does-not-exist-error? . g$i/o-file-does-not-exist-error?$7280$sFQex) (i/o-file-already-exists-error? . g$i/o-file-already-exists-error?$7274$sFQex) (i/o-error? . g$i/o-error?$7228$sFQex) (i/o-error-port . g$i/o-error-port$7288$sFQex) (i/o-error-filename . g$i/o-error-filename$7256$sFQex) (i/o-encoding-error? . g$i/o-encoding-error?$7301$sFQex) (i/o-encoding-error-char . g$i/o-encoding-error-char$7302$sFQex) (i/o-decoding-error? . g$i/o-decoding-error?$7294$sFQex) (get-datum . g$get-datum$7326$sFQex) (call-with-string-output-port . g$call-with-string-output-port$7331$sFQex) (call-with-port . g$call-with-port$7332$sFQex) (scheme-report-environment . g$scheme-report-environment$12572$sFQex) (quotient . g$quotient$6678$sFQex) (null-environment . g$null-environment$12571$sFQex) (remainder . g$remainder$6679$sFQex) (modulo . g$modulo$6680$sFQex) (inexact->exact . g$inexact->exact$6675$sFQex) (force . g$force$6682$sFQex) (exact->inexact . g$exact->inexact$6676$sFQex) (command-line . g$command-line$12659$sFQex) (remove . g$remove$5685$sFQex) (remv . g$remv$5686$sFQex) (remp . g$remp$5666$sFQex) (remq . g$remq$5687$sFQex) (partition . g$partition$5665$sFQex) (memv . g$memv$5673$sFQex) (memq . g$memq$5672$sFQex) (memp . g$memp$5675$sFQex) (member . g$member$5674$sFQex) (exists . g$exists$5679$sFQex) (for-all . g$for-all$5678$sFQex) (fold-right . g$fold-right$5684$sFQex) (fold-left . g$fold-left$5683$sFQex) (find . g$find$5664$sFQex) (filter . g$filter$5667$sFQex) (cons* . g$cons*$5682$sFQex) (assv . g$assv$5669$sFQex) (assq . g$assq$5668$sFQex) (assp . g$assp$5671$sFQex) (assoc . g$assoc$5670$sFQex) (with-exception-handler . g$with-exception-handler$6452$sFQex) (raise-continuable . g$raise-continuable$6455$sFQex) (raise . g$raise$6454$sFQex) (eval . g$eval$12574$sFQex) (environment . g$environment$12570$sFQex) (make-enumeration . g$make-enumeration$7514$sFQex) (enum-set=? . g$enum-set=?$7521$sFQex) (enum-set-universe . g$enum-set-universe$7515$sFQex) (enum-set-union . g$enum-set-union$7522$sFQex) (enum-set-subset? . g$enum-set-subset?$7520$sFQex) (enum-set-projection . g$enum-set-projection$7526$sFQex) (enum-set-member? . g$enum-set-member?$7519$sFQex) (enum-set-intersection . g$enum-set-intersection$7523$sFQex) (enum-set-indexer . g$enum-set-indexer$7516$sFQex) (enum-set-difference . g$enum-set-difference$7524$sFQex) (enum-set-constructor . g$enum-set-constructor$7517$sFQex) (enum-set-complement . g$enum-set-complement$7525$sFQex) (enum-set->list . g$enum-set->list$7518$sFQex) (who-condition? . g$who-condition?$6612$sFQex) (warning? . g$warning?$6573$sFQex) (violation? . g$violation?$6591$sFQex) (undefined-violation? . g$undefined-violation?$6647$sFQex) (syntax-violation? . g$syntax-violation?$6639$sFQex) (syntax-violation-subform . g$syntax-violation-subform$6641$sFQex) (syntax-violation-form . g$syntax-violation-form$6640$sFQex) (syntax-violation . g$syntax-violation$12592$sFQex) (serious-condition? . g$serious-condition?$6579$sFQex) (non-continuable-violation? . g$non-continuable-violation?$6619$sFQex) (message-condition? . g$message-condition?$6566$sFQex) (make-who-condition . g$make-who-condition$6610$sFQex) (make-warning . g$make-warning$6572$sFQex) (make-violation . g$make-violation$6590$sFQex) (make-undefined-violation . g$make-undefined-violation$6646$sFQex) (make-syntax-violation . g$make-syntax-violation$6636$sFQex) (make-serious-condition . g$make-serious-condition$6578$sFQex) (make-non-continuable-violation . g$make-non-continuable-violation$6618$sFQex) (make-message-condition . g$make-message-condition$6564$sFQex) (make-lexical-violation . g$make-lexical-violation$6630$sFQex) (make-irritants-condition . g$make-irritants-condition$6602$sFQex) (make-implementation-restriction-violation . g$make-implementation-restriction-violation$6624$sFQex) (make-error . g$make-error$6584$sFQex) (make-assertion-violation . g$make-assertion-violation$6596$sFQex) (lexical-violation? . g$lexical-violation?$6631$sFQex) (irritants-condition? . g$irritants-condition?$6604$sFQex) (implementation-restriction-violation? . g$implementation-restriction-violation?$6625$sFQex) (error? . g$error?$6585$sFQex) (condition-who . g$condition-who$6613$sFQex) (condition-message . g$condition-message$6567$sFQex) (condition-irritants . g$condition-irritants$6605$sFQex) (assertion-violation? . g$assertion-violation?$6597$sFQex) (native-endianness . g$native-endianness$6399$sFQex) (bytevector? . g$bytevector?$6167$sFQex) (bytevector-u64-set! . g$bytevector-u64-set!$6420$sFQex) (bytevector-u64-ref . g$bytevector-u64-ref$6416$sFQex) (bytevector-u64-native-set! . g$bytevector-u64-native-set!$6422$sFQex) (bytevector-u64-native-ref . g$bytevector-u64-native-ref$6418$sFQex) (bytevector-u32-set! . g$bytevector-u32-set!$6412$sFQex) (bytevector-u32-ref . g$bytevector-u32-ref$6408$sFQex) (bytevector-u32-native-set! . g$bytevector-u32-native-set!$6414$sFQex) (bytevector-u32-native-ref . g$bytevector-u32-native-ref$6410$sFQex) (bytevector-u16-set! . g$bytevector-u16-set!$6404$sFQex) (bytevector-u16-ref . g$bytevector-u16-ref$6400$sFQex) (bytevector-u16-native-set! . g$bytevector-u16-native-set!$6406$sFQex) (bytevector-u16-native-ref . g$bytevector-u16-native-ref$6402$sFQex) (bytevector-s64-set! . g$bytevector-s64-set!$6421$sFQex) (bytevector-s64-ref . g$bytevector-s64-ref$6417$sFQex) (bytevector-s64-native-set! . g$bytevector-s64-native-set!$6423$sFQex) (bytevector-s64-native-ref . g$bytevector-s64-native-ref$6419$sFQex) (bytevector-s32-set! . g$bytevector-s32-set!$6413$sFQex) (bytevector-s32-ref . g$bytevector-s32-ref$6409$sFQex) (bytevector-s32-native-set! . g$bytevector-s32-native-set!$6415$sFQex) (bytevector-s32-native-ref . g$bytevector-s32-native-ref$6411$sFQex) (bytevector-s16-set! . g$bytevector-s16-set!$6405$sFQex) (bytevector-s16-ref . g$bytevector-s16-ref$6401$sFQex) (bytevector-s16-native-set! . g$bytevector-s16-native-set!$6407$sFQex) (bytevector-s16-native-ref . g$bytevector-s16-native-ref$6403$sFQex) (bytevector-ieee-single-native-set! . g$bytevector-ieee-single-native-set!$6426$sFQex) (bytevector-ieee-single-native-ref . g$bytevector-ieee-single-native-ref$6424$sFQex) (bytevector-ieee-double-native-set! . g$bytevector-ieee-double-native-set!$6427$sFQex) (bytevector-ieee-double-native-ref . g$bytevector-ieee-double-native-ref$6425$sFQex) (no-nans-violation? . g$no-nans-violation?$7142$sFQex) (no-infinities-violation? . g$no-infinities-violation?$7136$sFQex) (make-no-nans-violation . g$make-no-nans-violation$7141$sFQex) (make-no-infinities-violation . g$make-no-infinities-violation$7135$sFQex) (flzero? . g$flzero?$7126$sFQex) (fltruncate . g$fltruncate$7121$sFQex) (fltan . g$fltan$7111$sFQex) (flsqrt . g$flsqrt$7116$sFQex) (flsin . g$flsin$7109$sFQex) (flround . g$flround$7122$sFQex) (flpositive? . g$flpositive?$7124$sFQex) (flonum? . g$flonum?$6172$sFQex) (flodd? . g$flodd?$7128$sFQex) (flnegative? . g$flnegative?$7125$sFQex) (flnan? . g$flnan?$7108$sFQex) (flmod0 . g$flmod0$7104$sFQex) (flmod . g$flmod$7103$sFQex) (flmin . g$flmin$7130$sFQex) (flmax . g$flmax$7129$sFQex) (fllog . g$fllog$7115$sFQex) (flinteger? . g$flinteger?$7105$sFQex) (flinfinite? . g$flinfinite?$7107$sFQex) (flfloor . g$flfloor$7120$sFQex) (flfinite? . g$flfinite?$7106$sFQex) (flexpt . g$flexpt$7118$sFQex) (flexp . g$flexp$7117$sFQex) (fleven? . g$fleven?$7127$sFQex) (fldiv0-and-mod0 . g$fldiv0-and-mod0$7100$sFQex) (fldiv0 . g$fldiv0$7102$sFQex) (fldiv-and-mod . g$fldiv-and-mod$7099$sFQex) (fldiv . g$fldiv$7101$sFQex) (flcos . g$flcos$7110$sFQex) (flceiling . g$flceiling$7119$sFQex) (flatan . g$flatan$7114$sFQex) (flasin . g$flasin$7112$sFQex) (flacos . g$flacos$7113$sFQex) (flabs . g$flabs$7123$sFQex) (fxzero? . g$fxzero?$6955$sFQex) (fxrotate-bit-field . g$fxrotate-bit-field$6969$sFQex) (fxpositive? . g$fxpositive?$6953$sFQex) (fxodd? . g$fxodd?$6957$sFQex) (fxnegative? . g$fxnegative?$6954$sFQex) (fxmod0 . g$fxmod0$6952$sFQex) (fxmod . g$fxmod$6951$sFQex) (fxmin . g$fxmin$6959$sFQex) (fxmax . g$fxmax$6958$sFQex) (fxif . g$fxif$6963$sFQex) (fxeven? . g$fxeven?$6956$sFQex) (fxdiv0 . g$fxdiv0$6950$sFQex) (fxdiv . g$fxdiv$6949$sFQex) (fxcopy-bit-field . g$fxcopy-bit-field$6966$sFQex) (fxcopy-bit . g$fxcopy-bit$6964$sFQex) (fxbit-field . g$fxbit-field$6965$sFQex) (fxarithmetic-shift-right . g$fxarithmetic-shift-right$6968$sFQex) (fxarithmetic-shift-left . g$fxarithmetic-shift-left$6967$sFQex) (fx-/carry . g$fx-/carry$6961$sFQex) (fx+/carry . g$fx+/carry$6962$sFQex) (fx*/carry . g$fx*/carry$6960$sFQex) (fixnum-width . g$fixnum-width$6173$sFQex) (fixnum? . g$fixnum?$6171$sFQex) (bitwise-rotate-bit-field . g$bitwise-rotate-bit-field$6843$sFQex) (bitwise-if . g$bitwise-if$6837$sFQex) (bitwise-copy-bit-field . g$bitwise-copy-bit-field$6840$sFQex) (bitwise-copy-bit . g$bitwise-copy-bit$6838$sFQex) (bitwise-bit-field . g$bitwise-bit-field$6839$sFQex) (bitwise-arithmetic-shift-right . g$bitwise-arithmetic-shift-right$6842$sFQex) (bitwise-arithmetic-shift-left . g$bitwise-arithmetic-shift-left$6841$sFQex) (zero? . g$zero?$6206$sFQex) (vector? . g$vector?$6166$sFQex) (vector-map . g$vector-map$6228$sFQex) (vector-for-each . g$vector-for-each$6229$sFQex) (vector-fill! . g$vector-fill!$6174$sFQex) (symbol? . g$symbol?$6168$sFQex) (symbol=? . g$symbol=?$6218$sFQex) (string>? . g$string>?$6215$sFQex) (string>=? . g$string>=?$6217$sFQex) (string=? . g$string=?$6213$sFQex) (string<? . g$string<?$6214$sFQex) (string<=? . g$string<=?$6216$sFQex) (string-for-each . g$string-for-each$6230$sFQex) (reverse . g$reverse$6175$sFQex) (rationalize . g$rationalize$6225$sFQex) (procedure? . g$procedure?$6170$sFQex) (positive? . g$positive?$6204$sFQex) (odd? . g$odd?$6208$sFQex) (negative? . g$negative?$6205$sFQex) (min . g$min$6210$sFQex) (max . g$max$6209$sFQex) (map . g$map$5680$sFQex) (list-tail . g$list-tail$5660$sFQex) (list-ref . g$list-ref$5661$sFQex) (list->vector . g$list->vector$6163$sFQex) (list->string . g$list->string$6164$sFQex) (lcm . g$lcm$6212$sFQex) (gcd . g$gcd$6211$sFQex) (for-each . g$for-each$5681$sFQex) (even? . g$even?$6207$sFQex) (error . g$error$6457$sFQex) (mod0 . g$mod0$6162$sFQex) (div0 . g$div0$6160$sFQex) (mod . g$mod$6161$sFQex) (div . g$div$6159$sFQex) (char? . g$char?$6165$sFQex) (char>? . g$char>?$6222$sFQex) (char>=? . g$char>=?$6224$sFQex) (char=? . g$char=?$6220$sFQex) (char<? . g$char<?$6221$sFQex) (char<=? . g$char<=?$6223$sFQex) (cddddr . g$cddddr$6203$sFQex) (cdddar . g$cdddar$6202$sFQex) (cddadr . g$cddadr$6201$sFQex) (cddaar . g$cddaar$6200$sFQex) (cdaddr . g$cdaddr$6199$sFQex) (cdadar . g$cdadar$6198$sFQex) (cdaadr . g$cdaadr$6197$sFQex) (cdaaar . g$cdaaar$6196$sFQex) (cadddr . g$cadddr$6195$sFQex) (caddar . g$caddar$6194$sFQex) (cadadr . g$cadadr$6193$sFQex) (cadaar . g$cadaar$6192$sFQex) (caaddr . g$caaddr$6191$sFQex) (caadar . g$caadar$6190$sFQex) (caaadr . g$caaadr$6189$sFQex) (caaaar . g$caaaar$6188$sFQex) (cdddr . g$cdddr$6187$sFQex) (cddar . g$cddar$6186$sFQex) (cdadr . g$cdadr$6185$sFQex) (cdaar . g$cdaar$6184$sFQex) (caddr . g$caddr$6183$sFQex) (cadar . g$cadar$6182$sFQex) (caadr . g$caadr$6181$sFQex) (caaar . g$caaar$6180$sFQex) (cddr . g$cddr$6179$sFQex) (cdar . g$cdar$6178$sFQex) (cadr . g$cadr$6177$sFQex) (caar . g$caar$6176$sFQex) (boolean? . g$boolean?$6169$sFQex) (boolean=? . g$boolean=?$6219$sFQex) (assertion-violation . g$assertion-violation$6456$sFQex) (enum-set? . g$enum?$7495$sFQex) (make-promise . g$make-promise$6681$sFQex) (load/args . g$load/args$12661$sFQex) (printf . g$printf$7550$sFQex) (fprintf . g$fprintf$7551$sFQex) (format . g$format$7552$sFQex) (trace-printer . g$trace-printer$12658$sFQex) (make-traced-macro . g$make-traced-macro$7556$sFQex) (assertion-error . g$assertion-error$12588$sFQex) (make-parameter . g$make-parameter$7979$sFQex) (environment-bindings . g$environment-bindings$12566$sFQex) (environment-symbols . g$environment-symbols$12569$sFQex) (interaction-environment-symbols . g$interaction-environment-symbols$12565$sFQex) (library-path . g$library-path$8471$sFQex) (make-compile-time-value . g$make-compile-time-value$12416$sFQex) (expand->core . g$expand->core$12575$sFQex) (expand . g$expand$12573$sFQex) (convert->cps . g$convert->cps$7874$sFQex) (installed-libraries . g$installed-libraries$8492$sFQex) (uninstall-library . g$uninstall-library$8483$sFQex)))))))(library-letrec* (psyntax main) ((g$trace-printer$12601$sFQex g$trace-printer$12658$sFQex ((case-lambda ((g$C$21178$sFQex) (g$make-parameter$7979$sFQex g$C$21178$sFQex write))) (library-letrec*-identity 'g$trace-printer$12601$sFQex))) (g$command-line$12602$sFQex g$command-line$12659$sFQex ((case-lambda ((g$C$21179$sFQex) (get-command-line (case-lambda ((g$V$21180$sFQex) (g$make-parameter$7979$sFQex g$C$21179$sFQex g$V$21180$sFQex)))))) (library-letrec*-identity 'g$command-line$12602$sFQex))) (g$local-library-path$12603$sFQex g$local-library-path$12660$sFQex ((case-lambda ((g$C$21181$sFQex) (g$C$21181$sFQex (case-lambda ((g$C$21082$sFQex g$filename$12615$sFQex) (g$library-path$8471$sFQex (case-lambda ((g$V$21083$sFQex) (g$get-directory-name$6287$sFQex (case-lambda ((g$V$21084$sFQex) (cons g$C$21082$sFQex g$V$21084$sFQex g$V$21083$sFQex))) g$filename$12615$sFQex))))))))) (library-letrec*-identity 'g$local-library-path$12603$sFQex))) (g$load/args$12604$sFQex g$load/args$12661$sFQex ((case-lambda ((g$C$21182$sFQex) (g$C$21182$sFQex (case-lambda ((g$C$21085$sFQex g$filename$12616$sFQex . g$args$12617$sFQex) (apply (case-lambda (g$IGNORE$21086$sFQex (void g$C$21085$sFQex))) g$load-r6rs-top-level$12612$sFQex g$filename$12616$sFQex 'load g$args$12617$sFQex)))))) (library-letrec*-identity 'g$load/args$12604$sFQex))) (g$load$12605$sFQex g$load$12662$sFQex ((case-lambda ((g$C$21183$sFQex) (g$C$21183$sFQex (case-lambda ((g$C$21087$sFQex g$filename$12618$sFQex) (g$command-line$12602$sFQex (case-lambda ((g$V$21088$sFQex) (cdr (case-lambda ((g$V$21089$sFQex) (apply (case-lambda (g$IGNORE$21090$sFQex (void g$C$21087$sFQex))) g$load-r6rs-top-level$12612$sFQex g$filename$12618$sFQex 'load g$V$21089$sFQex))) g$V$21088$sFQex))))))))) (library-letrec*-identity 'g$load$12605$sFQex))) (g$ironscheme-build$12606$sFQex g$ironscheme-build$12663$sFQex ((case-lambda ((g$C$21184$sFQex) (g$C$21184$sFQex (case-lambda ((g$C$21097$sFQex) (g$ironscheme-build$12606$sFQex g$C$21097$sFQex '#f)) ((g$C$21097$sFQex g$cps?$12619$sFQex) (g$call-with-output-file$7381$sFQex (case-lambda (g$IGNORE$21098$sFQex (g$load$12605$sFQex g$C$21097$sFQex '"ironscheme-buildscript.ss"))) '"build-options.ss" (case-lambda ((g$C$21091$sFQex g$p$12620$sFQex) (list (case-lambda ((g$V$21092$sFQex) (write (case-lambda (g$IGNORE$21093$sFQex (not (case-lambda ((g$V$21094$sFQex) (list (case-lambda ((g$V$21095$sFQex) (write (case-lambda (g$IGNORE$21096$sFQex (g$newline$7382$sFQex g$C$21091$sFQex g$p$12620$sFQex))) g$V$21095$sFQex g$p$12620$sFQex))) 'define-option 'if-wants-letrec* g$V$21094$sFQex))) g$cps?$12619$sFQex))) g$V$21092$sFQex g$p$12620$sFQex))) 'define-option 'cps-mode g$cps?$12619$sFQex))))))))) (library-letrec*-identity 'g$ironscheme-build$12606$sFQex))) (g$foreground-color$12607$sFQex g$foreground-color$12664$sFQex ((case-lambda ((g$C$21185$sFQex) (g$C$21185$sFQex (case-lambda ((g$C$21099$sFQex) (g$C$21099$sFQex (clr-call-internal 'console 'get_foregroundcolor '()))) ((g$C$21099$sFQex g$color$12621$sFQex) (g$C$21099$sFQex (clr-call-internal 'console 'set_foregroundcolor '() g$color$12621$sFQex))))))) (library-letrec*-identity 'g$foreground-color$12607$sFQex))) (g$eval-top-level$12608$sFQex g$eval-top-level$12665$sFQex ((case-lambda ((g$C$21186$sFQex) (g$C$21186$sFQex (case-lambda ((g$C$21119$sFQex g$x$12622$sFQex) (call/cc g$C$21119$sFQex (case-lambda ((g$C$21118$sFQex g$k$12623$sFQex) (g$with-exception-handler$6452$sFQex g$C$21118$sFQex (case-lambda ((g$C$21113$sFQex g$e$12624$sFQex) (current-error-port (case-lambda ((g$V$21114$sFQex) ((case-lambda ((g$C$21112$sFQex g$foreground-color$12629$sFQex g$current-output-port$12630$sFQex g$foreground-color$12631$sFQex g$current-output-port$12632$sFQex) ((case-lambda ((g$C$21103$sFQex g$swap$12633$sFQex) (dynamic-wind g$C$21103$sFQex g$swap$12633$sFQex (case-lambda ((g$C$21100$sFQex) (display (case-lambda (g$IGNORE$21101$sFQex (display (case-lambda (g$IGNORE$21102$sFQex (g$newline$7382$sFQex g$C$21100$sFQex))) g$e$12624$sFQex))) '"Unhandled exception during evaluation:\n"))) g$swap$12633$sFQex))) g$C$21112$sFQex (case-lambda ((g$C$21108$sFQex) (g$foreground-color$12629$sFQex (case-lambda ((g$V$21109$sFQex) ((case-lambda ((g$C$21104$sFQex g$t$12634$sFQex) (g$foreground-color$12629$sFQex (case-lambda (g$IGNORE$21105$sFQex (begin (set! g$foreground-color$12631$sFQex g$t$12634$sFQex) (g$C$21104$sFQex (cps-void))))) g$foreground-color$12631$sFQex))) (case-lambda (g$IGNORE$21110$sFQex (g$current-output-port$12630$sFQex (case-lambda ((g$V$21111$sFQex) ((case-lambda ((g$C$21106$sFQex g$t$12635$sFQex) (g$current-output-port$12630$sFQex (case-lambda (g$IGNORE$21107$sFQex (begin (set! g$current-output-port$12632$sFQex g$t$12635$sFQex) (g$C$21106$sFQex (cps-void))))) g$current-output-port$12632$sFQex))) g$C$21108$sFQex g$V$21111$sFQex)))))) g$V$21109$sFQex))))))))) (case-lambda (g$IGNORE$21115$sFQex (g$k$12623$sFQex g$C$21113$sFQex))) g$foreground-color$12607$sFQex current-output-port 'red g$V$21114$sFQex)))))) (case-lambda ((g$C$21116$sFQex) (g$interaction-environment$12599$sFQex (case-lambda ((g$V$21117$sFQex) (g$eval$12574$sFQex g$C$21116$sFQex g$x$12622$sFQex g$V$21117$sFQex))))))))))))))) (library-letrec*-identity 'g$eval-top-level$12608$sFQex))) (g$compile-system-libraries$12609$sFQex g$compile-system-libraries$12666$sFQex ((case-lambda ((g$C$21187$sFQex) (g$C$21187$sFQex (case-lambda ((g$C$21120$sFQex) (g$eval-top-level$12608$sFQex g$C$21120$sFQex '(begin (include "system-libraries.ss") (compile "system-libraries.ss")))))))) (library-letrec*-identity 'g$compile-system-libraries$12609$sFQex))) (g$compile$12610$sFQex g$compile$12667$sFQex ((case-lambda ((g$C$21188$sFQex) (g$C$21188$sFQex (case-lambda ((g$C$21121$sFQex g$filename$12636$sFQex) (g$load-r6rs-top-level$12612$sFQex g$C$21121$sFQex g$filename$12636$sFQex 'compile)))))) (library-letrec*-identity 'g$compile$12610$sFQex))) (g$compile->closure$12611$sFQex g$compile->closure$12668$sFQex ((case-lambda ((g$C$21189$sFQex) (g$C$21189$sFQex (case-lambda ((g$C$21122$sFQex g$filename$12637$sFQex) (g$load-r6rs-top-level$12612$sFQex g$C$21122$sFQex g$filename$12637$sFQex 'closure)))))) (library-letrec*-identity 'g$compile->closure$12611$sFQex))) (g$load-r6rs-top-level$12612$sFQex g$load-r6rs-top-level$12669$sFQex ((case-lambda ((g$C$21190$sFQex) (g$C$21190$sFQex (case-lambda ((g$C$21158$sFQex g$filename$12638$sFQex g$how$12639$sFQex . g$args$12640$sFQex) (g$local-library-path$12603$sFQex (case-lambda ((g$V$21159$sFQex) ((case-lambda ((g$C$21157$sFQex g$library-path$12643$sFQex g$library-path$12644$sFQex) ((case-lambda ((g$C$21152$sFQex g$swap$12645$sFQex) (dynamic-wind g$C$21152$sFQex g$swap$12645$sFQex (case-lambda ((g$C$21150$sFQex) (g$with-input-from-file$7378$sFQex (case-lambda ((g$V$21151$sFQex) ((case-lambda ((g$C$21139$sFQex g$x*$12646$sFQex) ((case-lambda ((g$C$21132$sFQex g$t$12647$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$21133$sFQex) (if g$T$21133$sFQex (g$pre-compile-r6rs-top-level$12597$sFQex g$C$21132$sFQex g$x*$12646$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$21134$sFQex) (if g$T$21134$sFQex (g$map$5680$sFQex (case-lambda ((g$V$21135$sFQex) (cons (case-lambda ((g$V$21136$sFQex) ((case-lambda ((g$C$21130$sFQex g$command-line$12650$sFQex g$command-line$12651$sFQex) ((case-lambda ((g$C$21125$sFQex g$swap$12652$sFQex) (dynamic-wind g$C$21125$sFQex g$swap$12652$sFQex (case-lambda ((g$C$21123$sFQex) (g$compile-r6rs-top-level$12596$sFQex (case-lambda ((g$V$21124$sFQex) (g$V$21124$sFQex g$C$21123$sFQex))) g$x*$12646$sFQex))) g$swap$12652$sFQex))) g$C$21130$sFQex (case-lambda ((g$C$21128$sFQex) (g$command-line$12650$sFQex (case-lambda ((g$V$21129$sFQex) ((case-lambda ((g$C$21126$sFQex g$t$12653$sFQex) (g$command-line$12650$sFQex (case-lambda (g$IGNORE$21127$sFQex (begin (set! g$command-line$12651$sFQex g$t$12653$sFQex) (g$C$21126$sFQex (cps-void))))) g$command-line$12651$sFQex))) g$C$21128$sFQex g$V$21129$sFQex))))))))) g$C$21132$sFQex g$command-line$12602$sFQex g$V$21136$sFQex))) g$filename$12638$sFQex g$V$21135$sFQex))) (case-lambda ((g$C$21131$sFQex g$x$12654$sFQex) (g$format$7552$sFQex g$C$21131$sFQex '"~a" g$x$12654$sFQex))) g$args$12640$sFQex) (g$memv$5673$sFQex (case-lambda ((g$T$21137$sFQex) (if g$T$21137$sFQex (g$compile-r6rs-top-level$12596$sFQex (case-lambda (g$IGNORE$21138$sFQex (g$serialize-all$8475$sFQex g$C$21132$sFQex serialize-library g$compile-core-expr$8228$sFQex))) g$x*$12646$sFQex) (if '#f (g$C$21132$sFQex '#f) (void g$C$21132$sFQex))))) g$t$12647$sFQex '(compile))))) g$t$12647$sFQex '(load))))) g$t$12647$sFQex '(closure)))) g$C$21139$sFQex g$how$12639$sFQex))) g$C$21150$sFQex g$V$21151$sFQex))) g$filename$12638$sFQex (case-lambda ((g$C$21148$sFQex) ((case-lambda ((g$C$21147$sFQex g$f$12655$sFQex) ((case-lambda ((g$C$21141$sFQex g$f$21140$sFQex) (begin (set! g$f$12655$sFQex g$f$21140$sFQex) (g$C$21141$sFQex g$f$12655$sFQex)))) g$C$21147$sFQex (case-lambda ((g$C$21145$sFQex) (read-annotated (case-lambda ((g$V$21146$sFQex) ((case-lambda ((g$C$21142$sFQex g$x$12656$sFQex) (eof-object? (case-lambda ((g$T$21143$sFQex) (if g$T$21143$sFQex (g$C$21142$sFQex '()) (g$f$12655$sFQex (case-lambda ((g$V$21144$sFQex) (cons g$C$21142$sFQex g$x$12656$sFQex g$V$21144$sFQex))))))) g$x$12656$sFQex))) g$C$21145$sFQex g$V$21146$sFQex))))))))) (case-lambda ((g$V$21149$sFQex) (g$V$21149$sFQex g$C$21148$sFQex))) uninitialized)))))) g$swap$12645$sFQex))) g$C$21157$sFQex (case-lambda ((g$C$21155$sFQex) (g$library-path$12643$sFQex (case-lambda ((g$V$21156$sFQex) ((case-lambda ((g$C$21153$sFQex g$t$12657$sFQex) (g$library-path$12643$sFQex (case-lambda (g$IGNORE$21154$sFQex (begin (set! g$library-path$12644$sFQex g$t$12657$sFQex) (g$C$21153$sFQex (cps-void))))) g$library-path$12644$sFQex))) g$C$21155$sFQex g$V$21156$sFQex))))))))) g$C$21158$sFQex g$library-path$8471$sFQex g$V$21159$sFQex))) g$filename$12638$sFQex)))))) (library-letrec*-identity 'g$load-r6rs-top-level$12612$sFQex))) (g$fo$12613$sFQex g$fo$12670$sFQex ((case-lambda ((g$C$21191$sFQex) (g$make-enumeration$7514$sFQex g$C$21191$sFQex '(no-fail no-create no-truncate)))) (library-letrec*-identity 'g$fo$12613$sFQex)))) (g$current-precompiled-library-loader$8476$sFQex (case-lambda (g$IGNORE$21163$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21164$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21165$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21166$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21167$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21168$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21169$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21170$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21171$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21172$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21173$sFQex (set-symbol-value! (case-lambda (g$IGNORE$21174$sFQex (g$enum-set-constructor$7517$sFQex (case-lambda ((g$V$21175$sFQex) (g$file-options-constructor$7980$sFQex (case-lambda (g$IGNORE$21176$sFQex (get-library-paths (case-lambda ((g$V$21177$sFQex) (g$library-path$8471$sFQex identity-for-cps g$V$21177$sFQex)))))) g$V$21175$sFQex))) g$fo$12613$sFQex))) 'raise g$raise$6454$sFQex))) 'assertion-violation g$assertion-violation$6456$sFQex))) 'convert->cps g$convert->cps$7874$sFQex))) 'trace-printer g$trace-printer$12601$sFQex))) 'expanded2core g$expanded->core$8227$sFQex))) 'int-env-syms g$interaction-environment-symbols$12565$sFQex))) 'eval-r6rs g$eval-top-level$12608$sFQex))) 'compile->closure g$compile->closure$12611$sFQex))) 'compile g$compile$12610$sFQex))) 'load g$load$12605$sFQex))) 'default-exception-handler (case-lambda ((g$C$21160$sFQex g$ex$12614$sFQex) (g$serious-condition?$6579$sFQex (case-lambda ((g$T$21161$sFQex) (if g$T$21161$sFQex (g$raise$6454$sFQex g$C$21160$sFQex g$ex$12614$sFQex) (display (case-lambda (g$IGNORE$21162$sFQex (g$newline$7382$sFQex g$C$21160$sFQex))) g$ex$12614$sFQex)))) g$ex$12614$sFQex)))))) load-serialized-library))