version: 1.0.{build}
skip_tags: true
image: Visual Studio 2019
branches:
  only:
  - master
configuration: Release
platform: Any CPU
assembly_info:
  patch: true
  file: IronScheme\IronScheme\Properties\AssemblyInfo.cs
  assembly_version: '1.0.0.0'
  assembly_file_version: '{version}'
  assembly_informational_version: '{version}-$(SHA)'
install:
- cmd: |
    cd %APPVEYOR_BUILD_FOLDER%
    git submodule update --init --recursive
    set SHA=%APPVEYOR_REPO_COMMIT:~0,7%
    set QUIET=1
    cinst ilmerge
    set PATH=%PATH%;C:\Program Files (x86)\Microsoft SDKs\Windows\v10.0A\bin\NETFX 4.8 Tools\;%APPVEYOR_BUILD_FOLDER%\IronScheme\tools\;
nuget:
  project_feed: true
build_script:
- cmd: |
    dotnet restore "IronScheme\IronSchemeCore.sln"
    echo 1 > IronScheme\IronScheme\Compiler\numberlexer.lex.cs
    echo 1 > IronScheme\IronScheme\Compiler\ironscheme.lex.cs
    echo 1 > IronScheme\IronScheme\Compiler\NumberParser.y.cs
    echo 1 > IronScheme\IronScheme\Compiler\IronScheme.y.cs
    dotnet build "IronScheme\IronSchemeCore.sln" /v:m /p:Configuration=Release
test_script:
- cmd: |
    cd IronScheme\IronScheme.Console\bin\Release\net472
    dotnet test IronScheme.Tests.dll
    set QUIET=
    set TESTCORE=1

    cd ..\netcoreapp2.1
    copy /y ..\net472\ironscheme.boot.dll .
    dotnet test IronScheme.Tests.dll

    cd %APPVEYOR_BUILD_FOLDER%
    call ci-artefact.cmd
artifacts:
- path: IronScheme-*.zip
- path: IronScheme*.*nupkg
before_deploy:
- cmd: |
    rem precompile libraries for Nuget
